Implementation smell,Namespace,Class,File,Method,Description
Long Method,EventStore.Core.Tests.ClientAPI.Security,AuthenticationTestBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\Security\AuthenticationTestBase.cs,TestFixtureSetUp,The method has 122 lines of code.
Long Method,EventStore.Core.Tests.Index.IndexV1,corrupt_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\corrupt_index_should.cs,CorruptPTableFile,The method has 119 lines of code.
Long Method,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,TFChunkDbCreationHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\TFChunkDbCreationHelper.cs,CreateDb,The method has 111 lines of code.
Complex Method,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,SanityTest,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Core.Tests.Helpers,HelperExtensions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\HelperExtensions.cs,AssertJObject,Cyclomatic complexity of the method is 11
Complex Method,EventStore.Core.Tests.Helpers,MiniNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniNode.cs,MiniNode,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Core.Tests.Helpers,TestFixtureWithExistingEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithExistingEvents.cs,ProcessWrite,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Core.Tests.Helpers,TestFixtureWithReadWriteDispatchers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithReadWriteDispatchers.cs,WhenLoop,Cyclomatic complexity of the method is 13
Complex Method,EventStore.Core.Tests.Index.IndexV1,corrupt_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\corrupt_index_should.cs,CorruptPTableFile,Cyclomatic complexity of the method is 25
Complex Method,EventStore.Core.Tests.Index.IndexV1,table_index_with_corrupt_index_entries_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_corrupt_index_entries_should.cs,CorruptPTableFile,Cyclomatic complexity of the method is 12
Complex Method,EventStore.Core.Tests.Index.IndexV4,ptable_midpoint_calculations_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\ptable_midpoint_calculations_should.cs,construct_same_midpoint_indexes_for_any_combination_of_params,Cyclomatic complexity of the method is 10
Complex Method,EventStore.Core.Tests.Services.ElectionsService.Randomized,UpdateGossipProcessor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\UpdateGossipProcessor.cs,Process,Cyclomatic complexity of the method is 8
Complex Method,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,TFChunkDbCreationHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\TFChunkDbCreationHelper.cs,CreateDb,Cyclomatic complexity of the method is 25
Complex Method,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,TFChunkDbCreationHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\TFChunkDbCreationHelper.cs,CreateLogRecord,Cyclomatic complexity of the method is 9
Long Parameter List,EventStore.Core.Tests.Authentication,TestAuthenticationRequest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Authentication\with_internal_authentication_provider.cs,TestAuthenticationRequest,The method has 6 parameters. Parameters: name' suppliedPassword' unauthorized' authenticated' error' notReady
Long Parameter List,EventStore.Core.Tests.ClientAPI,FakeEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,ReadStreamEventsForwardAsync,The method has 5 parameters. Parameters: stream' start' count' resolveLinkTos' userCredentials
Long Parameter List,EventStore.Core.Tests.ClientAPI,FakeEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,ReadStreamEventsBackwardAsync,The method has 5 parameters. Parameters: stream' start' count' resolveLinkTos' userCredentials
Long Parameter List,EventStore.Core.Tests.ClientAPI,FakeEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,SubscribeToStreamAsync,The method has 5 parameters. Parameters: stream' resolveLinkTos' eventAppeared' subscriptionDropped' userCredentials
Long Parameter List,EventStore.Core.Tests.ClientAPI,FakeEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,SubscribeToStreamFrom,The method has 9 parameters. Parameters: stream' lastCheckpoint' resolveLinkTos' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials' readBatchSize' subscriptionName
Long Parameter List,EventStore.Core.Tests.ClientAPI,FakeEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,SubscribeToStreamFrom,The method has 7 parameters. Parameters: stream' lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials
Long Parameter List,EventStore.Core.Tests.ClientAPI,FakeEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,ConnectToPersistentSubscription,The method has 7 parameters. Parameters: stream' groupName' eventAppeared' subscriptionDropped' userCredentials' bufferSize' autoAck
Long Parameter List,EventStore.Core.Tests.ClientAPI,FakeEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,ConnectToPersistentSubscriptionAsync,The method has 7 parameters. Parameters: stream' groupName' eventAppeared' subscriptionDropped' userCredentials' bufferSize' autoAck
Long Parameter List,EventStore.Core.Tests.ClientAPI,FakeEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,SubscribeToAllFrom,The method has 8 parameters. Parameters: lastCheckpoint' resolveLinkTos' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials' readBatchSize' subscriptionName
Long Parameter List,EventStore.Core.Tests.ClientAPI,FakeEventStoreConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,SubscribeToAllFrom,The method has 6 parameters. Parameters: lastCheckpoint' settings' eventAppeared' liveProcessingStarted' subscriptionDropped' userCredentials
Long Parameter List,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,MiniNodeWithExistingRecords,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\MiniNodeWithExistingRecords.cs,WriteSingleEvent,The method has 6 parameters. Parameters: eventStreamId' eventNumber' data' timestamp' eventId' eventType
Long Parameter List,EventStore.Core.Tests.Common.VNodeBuilderTests,TestAuthenticationProviderFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\TestAuthentictaionProviderFactory.cs,BuildAuthenticationProvider,The method has 5 parameters. Parameters: mainQueue' mainBus' workersQueue' workerBuses' logFailedAuthenticationAttempts
Long Parameter List,EventStore.Core.Tests.Common.VNodeBuilderTests,TestAuthenticationProviderFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\TestAuthentictaionProviderFactory.cs,RegisterHttpControllers,The method has 5 parameters. Parameters: externalHttpService' internalHttpService' httpSendService' mainQueue' networkSendQueue
Long Parameter List,EventStore.Core.Tests.Helpers,MiniClusterNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniClusterNode.cs,MiniClusterNode,The method has 17 parameters. Parameters: pathname' debugIndex' internalTcp' internalTcpSec' internalHttp' externalTcp' externalTcpSec' externalHttp' gossipSeeds' subsystems' chunkSize' cachedChunkSize' enableTrustedAuth' skipInitializeStandardUsersCheck' memTableSize' inMemDb' disableFlushToDisk
Long Parameter List,EventStore.Core.Tests.Helpers,MiniNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniNode.cs,MiniNode,The method has 17 parameters. Parameters: pathname' tcpPort' tcpSecPort' httpPort' subsystems' chunkSize' cachedChunkSize' enableTrustedAuth' skipInitializeStandardUsersCheck' memTableSize' inMemDb' disableFlushToDisk' advertisedExtIPAddress' advertisedExtHttpPort' hashCollisionReadLimit' indexBitnessVersion' dbPath
Long Parameter List,EventStore.Core.Tests.Helpers,TestFixtureWithExistingEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithExistingEvents.cs,ExistingEvent,The method has 5 parameters. Parameters: streamId' eventType' eventMetadata' eventData' isJson
Long Parameter List,EventStore.Core.Tests.Helpers,TestFixtureWithExistingEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithExistingEvents.cs,ProcessWrite,The method has 9 parameters. Parameters: envelope' correlationId' streamId' expectedVersion' events' writeEventsCompleted' wrongExpectedVersionResponse' positions' commitPosition
Long Parameter List,EventStore.Core.Tests.Helpers.IODispatcherTests,IODispatcherTestHelpers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\IODispatcherTests\IODispatcherTestHelpers.cs,CreateResolvedEvent,The method has 5 parameters. Parameters: streamId' eventType' data' metadata' eventNumber
Long Parameter List,EventStore.Core.Tests.Http,HttpBehaviorSpecification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\HttpBehaviorSpecification.cs,CreateRequest,The method has 6 parameters. Parameters: path' extra' method' contentType' credentials' headers
Long Parameter List,EventStore.Core.Tests.Http,HttpBehaviorSpecification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\HttpBehaviorSpecification.cs,Get,The method has 6 parameters. Parameters: path' extra' accept' credentials' setAcceptHeader' headers
Long Parameter List,EventStore.Core.Tests.Index,IndexMapTestFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexMapTestFactory.cs,FromFile,The method has 7 parameters. Parameters: filename' maxTablesPerLevel' loadPTables' cacheDepth' skipIndexVerify' threads' maxAutoMergeLevel
Long Parameter List,EventStore.Core.Tests.Infrastructure,RandTestQueueItem,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Infrastructure\RandTestQueueItem.cs,RandTestQueueItem,The method has 5 parameters. Parameters: logicalTime' globalId' endPoint' message' bus
Long Parameter List,EventStore.Core.Tests.Integration,Endpoints,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\specification_with_cluster.cs,Endpoints,The method has 6 parameters. Parameters: internalTcp' internalTcpSec' internalHttp' externalTcp' externalTcpSec' externalHttp
Long Parameter List,EventStore.Core.Tests.Services.ElectionsService,ClusterSettings,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ClusterSettings.cs,ClusterSettings,The method has 5 parameters. Parameters: clusterDns' clusterManager' self' groupMembers' expectedNodesCount
Long Parameter List,EventStore.Core.Tests.Services.ElectionsService,ElectionsServiceUnit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ElectionServiceUnit.cs,UpdateClusterMemberInfo,The method has 5 parameters. Parameters: nodeIndex' role' isAlive' writerCheckpoint' chaserCheckpoint
Long Parameter List,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately.cs,CreateUpdatedGossip,The method has 5 parameters. Parameters: iteration' item' instances' initialGossip' previousGossip
Long Parameter List,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later.cs,CreateUpdatedGossip,The method has 5 parameters. Parameters: iteration' item' instances' initialGossip' previousGossip
Long Parameter List,EventStore.Core.Tests.Services.ElectionsService.Randomized,RandomizedElectionsAndGossipTestCase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\RandomizedElectionsAndGossipTestCase.cs,RandomizedElectionsAndGossipTestCase,The method has 10 parameters. Parameters: maxIterCnt' instancesCnt' httpLossProbability' httpDupProbability' httpMaxDelay' timerMinDelay' timerMaxDelay' createInitialGossip' createUpdatedGossip' rndSeed
Long Parameter List,EventStore.Core.Tests.Services.ElectionsService.Randomized,RandomizedElectionsTestCase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\RandomizedElectionsTestCase.cs,RandomizedElectionsTestCase,The method has 8 parameters. Parameters: maxIterCnt' instancesCnt' httpLossProbability' httpDupProbability' httpMaxDelay' timerMinDelay' timerMaxDelay' rndSeed
Long Parameter List,EventStore.Core.Tests.Services.ElectionsService.Randomized,SendOverHttpBlockingProcessor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\SendOverHttpBlockingProcessor.cs,SendOverHttpBlockingProcessor,The method has 5 parameters. Parameters: rnd' runner' lossProb' dupProb' maxDelay
Long Parameter List,EventStore.Core.Tests.Services.ElectionsService.Randomized,SendOverHttpProcessor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\SendOverHttpProcessor.cs,SendOverHttpProcessor,The method has 5 parameters. Parameters: rnd' runner' lossProb' dupProb' maxDelay
Long Parameter List,EventStore.Core.Tests.Services.ElectionsService.Randomized,TimerMessageProcessor,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\TimerMessageProcessor.cs,TimerMessageProcessor,The method has 6 parameters. Parameters: rnd' runner' endPoint' bus' delayMin' delayMax
Long Parameter List,EventStore.Core.Tests.Services.PersistentSubscription,Helper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,BuildFakeEventWithMetadata,The method has 5 parameters. Parameters: id' type' stream' version' metaData
Long Parameter List,EventStore.Core.Tests.Services.PersistentSubscription,Helper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,BuildLinkEvent,The method has 5 parameters. Parameters: id' stream' version' ev' resolved
Long Parameter List,EventStore.Core.Tests.Services.PersistentSubscription,FakeStreamReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,BeginReadEvents,The method has 6 parameters. Parameters: stream' startEventNumber' countToLoad' batchSize' resolveLinkTos' onEventsFound
Long Parameter List,EventStore.Core.Tests.Services.Replication,FakeTfChunkScavengerLog,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\FakeTfChunkLogManager.cs,IndexTableScavenged,The method has 6 parameters. Parameters: level' index' elapsed' entriesDeleted' entriesKept' spaceSaved
Long Parameter List,EventStore.Core.Tests.Services.Replication,FakeTfChunkScavengerLog,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\FakeTfChunkLogManager.cs,IndexTableNotScavenged,The method has 5 parameters. Parameters: level' index' elapsed' entriesKept' errorMessage
Long Parameter List,EventStore.Core.Tests.Services.Storage,ReadIndexTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\ReadIndexTestScenario.cs,WriteSingleEvent,The method has 6 parameters. Parameters: eventStreamId' eventNumber' data' timestamp' eventId' retryOnFail
Long Parameter List,EventStore.Core.Tests.Services.Storage,ReadIndexTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\ReadIndexTestScenario.cs,WriteTransactionEvent,The method has 8 parameters. Parameters: correlationId' transactionPos' transactionOffset' eventStreamId' eventNumber' eventData' flags' retryOnFail
Long Parameter List,EventStore.Core.Tests.Services.Storage,ReadIndexTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\ReadIndexTestScenario.cs,WritePrepare,The method has 5 parameters. Parameters: streamId' expectedVersion' eventId' eventType' data
Long Parameter List,EventStore.Core.Tests.Services.Storage,ReadIndexTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\ReadIndexTestScenario.cs,WriteSingleEventWithLogVersion0,The method has 5 parameters. Parameters: id' streamId' position' expectedVersion' flags
Long Parameter List,EventStore.Core.Tests.Services.Storage,WriteEventsToIndexScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\WriteEventsToIndexScenario.cs,CreatePrepareLogRecord,The method has 5 parameters. Parameters: stream' expectedVersion' eventType' eventId' transactionPosition
Long Parameter List,EventStore.Core.Tests.Services.Storage,WriteEventsToIndexScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\WriteEventsToIndexScenario.cs,CreatePrepareLogRecords,The method has 5 parameters. Parameters: stream' expectedVersion' eventTypes' eventIds' transactionPosition
Long Parameter List,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,WriteTransactionEventV0,The method has 8 parameters. Parameters: correlationId' logPosition' transactionPosition' transactionOffset' eventStreamId' eventNumber' eventData' flags
Long Parameter List,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,WriteCommitV0,The method has 6 parameters. Parameters: correlationId' logPosition' transactionPosition' eventStreamId' eventNumber' pos
Long Parameter List,EventStore.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\Authorization\authorization_tests.cs,SendRequest,The method has 5 parameters. Parameters: client' method' url' body' contentType
Long Parameter List,EventStore.Core.Tests.TransactionLog,TFChunkHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\TFChunkHelper.cs,CreateDbConfig,The method has 6 parameters. Parameters: pathName' writerCheckpointPosition' chaserCheckpointPosition' epochCheckpointPosition' truncateCheckpoint' chunkSize
Long Parameter List,EventStore.Core.Tests.TransactionLog,TFChunkHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\TFChunkHelper.cs,CreateDbConfig,The method has 5 parameters. Parameters: pathName' writerCheckpoint' chaserCheckpoint' chunkSize' replicationCheckpoint
Long Parameter List,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,FakeTFScavengerLog,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\FakeTFScavengerLog.cs,IndexTableScavenged,The method has 6 parameters. Parameters: level' index' elapsed' entriesDeleted' entriesKept' spaceSaved
Long Parameter List,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,FakeTFScavengerLog,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\FakeTFScavengerLog.cs,IndexTableNotScavenged,The method has 5 parameters. Parameters: level' index' elapsed' entriesKept' errorMessage
Long Parameter List,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,TFChunkDbCreationHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\TFChunkDbCreationHelper.cs,CreateLogRecordV0,The method has 7 parameters. Parameters: rec' transInfo' transOffset' logPos' expectedVersion' data' flags
Long Parameter List,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,Rec,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\TFChunkDbCreationHelper.cs,Rec,The method has 8 parameters. Parameters: type' transaction' streamId' eventType' timestamp' version' metadata' prepareFlags
Long Parameter List,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,Rec,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\TFChunkDbCreationHelper.cs,Prepare,The method has 7 parameters. Parameters: transaction' stream' eventType' timestamp' metadata' prepareFlags' version
Long Parameter List,EventStore.Core.Tests.TransactionLog.Validation,DbUtil,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\TFChunkDbCreationTestBase.cs,CreateSingleChunk,The method has 6 parameters. Parameters: config' chunkNum' filename' actualDataSize' isScavenged' contents
Long Parameter List,EventStore.Core.Tests.TransactionLog.Validation,DbUtil,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\TFChunkDbCreationTestBase.cs,CreateMultiChunk,The method has 6 parameters. Parameters: config' chunkStartNum' chunkEndNum' filename' physicalSize' logicalSize
Long Parameter List,EventStore.Core.Tests.TransactionLog.Validation,DbUtil,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\TFChunkDbCreationTestBase.cs,CreateOngoingChunk,The method has 5 parameters. Parameters: config' chunkNum' filename' actualSize' contents
Long Identifier,EventStore.Core.Tests.Authentication,with_internal_authentication_provider,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Authentication\with_internal_authentication_provider.cs,,The length of the parameter _internalAuthenticationProvider is 31.
Long Identifier,EventStore.Core.Tests.ClientAPI,catch_up_subscription_handles_errors,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,when_live_processing_and_disconnected_reconnect_keeps_events_ordered,The length of the parameter volatileEventStoreSubscription is 30.
Long Identifier,EventStore.Core.Tests.ClientAPI,catch_up_subscription_handles_errors,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,when_live_processing_and_disconnected_reconnect_keeps_events_ordered,The length of the parameter volatileEventStoreSubscription2 is 31.
Long Identifier,EventStore.Core.Tests.Common.VNodeBuilderTests,TestAuthenticationProviderFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\TestAuthentictaionProviderFactory.cs,BuildAuthenticationProvider,The length of the parameter logFailedAuthenticationAttempts is 31.
Long Identifier,EventStore.Core.Tests.Hashes,murmur2_hash_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\murmur2_hash_should.cs,,The length of the parameter Murmur2ReferenceVerificationValue is 33.
Long Identifier,EventStore.Core.Tests.Hashes,murmur3a_hash_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\murmur3a_hash_should.cs,,The length of the parameter Murmur3AReferenceVerificationValue is 34.
Long Identifier,EventStore.Core.Tests.Hashes,xxhash_hash_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\xxhash_hash_should.cs,,The length of the parameter XXHashReferenceVerificationValue is 32.
Long Identifier,EventStore.Core.Tests.Helpers,MiniClusterNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniClusterNode.cs,MiniClusterNode,The length of the parameter skipInitializeStandardUsersCheck is 32.
Long Identifier,EventStore.Core.Tests.Helpers,MiniNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniNode.cs,MiniNode,The length of the parameter skipInitializeStandardUsersCheck is 32.
Long Identifier,EventStore.Core.Tests.Services.ElectionsService.Randomized,RandomizedElectionsAndGossipTestCase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\RandomizedElectionsAndGossipTestCase.cs,,The length of the parameter _sendOverHttpBlockingProcessor is 30.
Long Identifier,EventStore.Core.Tests.Services.PersistentSubscription,DeadlockTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,read_whilst_ack_doesnt_deadlock_with_request_response_dispatcher,The length of the parameter persistentSubscriptionSettings is 30.
Long Identifier,EventStore.Core.Tests.Services.Replication.CommitReplication,with_index_committer_service,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\CommitReplication\with_index_committer_service.cs,,The length of the parameter _expectedCommitReplicatedMessages is 33.
Long Identifier,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_committed_on_master_and_on_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_committed_on_master_and_on_slaves.cs,,The length of the parameter _expectedNumberOfRoleAssignments is 32.
Long Identifier,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_from_a_single_node,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_from_a_single_node.cs,,The length of the parameter _expectedNumberOfRoleAssignments is 32.
Long Identifier,EventStore.Core.Tests.Replication.ReadStream,when_reading_events_from_cluster_with_replication_checkpoint_not_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_events_from_cluster_with_replication_checkpoint_not_set.cs,,The length of the parameter _expectedNumberOfRoleAssignments is 32.
Long Identifier,EventStore.Core.Tests.Replication.ReadStream,when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\Subscriptions\when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves.cs,,The length of the parameter _expectedNumberOfRoleAssignments is 32.
Long Identifier,basic_http_authentication_provider,when_handling_a_request_without_an_authorization_header,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\Authentication\basic_http_authentication_provider.cs,does_not_publish_authenticated_http_request_message,The length of the parameter authenticatedHttpRequestMessages is 32.
Long Identifier,basic_http_authentication_provider,when_handling_a_request_with_correct_user_name_and_password,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\Authentication\basic_http_authentication_provider.cs,publishes_authenticated_http_request_message_with_user,The length of the parameter authenticatedHttpRequestMessages is 32.
Long Identifier,basic_http_authentication_provider,when_handling_multiple_requests_with_the_same_correct_user_name_and_password,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\Authentication\basic_http_authentication_provider.cs,publishes_authenticated_http_request_message_with_user,The length of the parameter authenticatedHttpRequestMessages is 32.
Long Identifier,basic_http_authentication_provider,when_handling_a_request_with_incorrect_user_name_and_password,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\Authentication\basic_http_authentication_provider.cs,publishes_authenticated_http_request_message_with_user,The length of the parameter authenticatedHttpRequestMessages is 32.
Long Identifier,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,,The length of the parameter _connectionPendingSendBytesThreshold is 36.
Long Identifier,password_change_notification_reader,with_password_change_notification_reader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\UserManagementService\password_change_notification_reader.cs,,The length of the parameter _passwordChangeNotificationReader is 33.
Long Statement,EventStore.Core.Tests,TestsInitFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TestsInitFixture.cs,SetUp,The length of the statement  "				"[${processid:padCharacter=0:padding=5}'${threadid:padCharacter=0:padding=2}'${date:universalTime=true:format=HH\\:mm\\:ss\\.fff}'${level:padding=-5:uppercase=true}] ${message}${onexception:${newline}${literal:text=EXCEPTION OCCURRED}${newline}${exception:format=message}}"; " is 274.
Long Statement,EventStore.Core.Tests.Helpers,PortsHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\PortsHelper.cs,GetAvailablePort,The length of the statement  "//                        string.Format("HttpListener couldn't listen on port {0}' but TcpListener was OK.\nError: {1}"' port' exc)' exc); " is 138.
Long Statement,EventStore.Core.Tests.Http,TestController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\TestController.cs,Register,The length of the statement  "			Register(service' uriTemplate' httpMethod' handler' Codec.NoCodecs' new ICodec[] {Codec.ManualEncoding}' AuthorizationLevel.None); " is 130.
Long Statement,feed,when_reading_a_stream_forward_with_deleted_linktos,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\feed.cs,When,The length of the statement  "				_feed = GetJson<JObject>("/streams/" + LinkedStreamName + "/0/forward/10"' accept: ContentType.Json' credentials: DefaultData.AdminNetworkCredentials); " is 151.
Long Statement,feed,when_reading_a_stream_backward_with_deleted_linktos,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\feed.cs,When,The length of the statement  "				_feed = GetJson<JObject>("/streams/" + LinkedStreamName + "/0/backward/1"' accept: ContentType.Json' credentials: DefaultData.AdminNetworkCredentials); " is 151.
Long Statement,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,lowest_ignores_replayed_events,The length of the statement  "			cache.StartMessage(new OutstandingMessage(id2' null' Helper.BuildFakeEvent(id2' "type"' "$persistentsubscription-name::group-parked"' 9)' 0)' " is 141.
Long Statement,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,when_reading_end_of_stream_and_a_live_event_is_received_subscription_should_read_stream_again,The length of the statement  "			//the read handled by the subscription after 100ms should trigger a second read to obtain the event #3 (which will be handled after 100ms more) " is 143.
Long Statement,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_ignores_replayed_events_when_checkpointing,The length of the statement  "			var parkedEvent = Helper.BuildFakeEvent(parkedEventId' "type"' "$persistentsubscription-streamName::groupName-parked"' 15); " is 123.
Long Statement,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_empty_metadata_to_same_client_for_stream_id,The length of the statement  "			live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata(Encoding.UTF8.GetBytes("{}")); " is 131.
Long Statement,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_without_closing_brace_to_same_client_for_stream_id,The length of the statement  "			live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata(Encoding.UTF8.GetBytes("{")); " is 130.
Long Statement,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_without_correlation_to_same_client_for_stream_id,The length of the statement  "			live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata(Encoding.UTF8.GetBytes(@"{ ""x"": ""x"" }")); " is 146.
Long Statement,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_invalid_correlation_to_same_client_for_stream_id,The length of the statement  "			live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata(Encoding.UTF8.GetBytes(@"{ ""$correlationId"": 0 }")); " is 155.
Long Statement,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The length of the statement  "			sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEventWithMetadata(Guid.NewGuid()' "type"' "streamName-1"' 0' metaData1)); " is 123.
Long Statement,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The length of the statement  "			sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEventWithMetadata(Guid.NewGuid()' "type"' "streamName-1"' 1' metaData1)); " is 123.
Long Statement,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The length of the statement  "			sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEventWithMetadata(Guid.NewGuid()' "type"' "streamName-2"' 2' metaData1)); " is 123.
Long Statement,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The length of the statement  "			sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEventWithMetadata(Guid.NewGuid()' "type"' "streamName-2"' 3' metaData1)); " is 123.
Long Statement,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The length of the statement  "			sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEventWithMetadata(Guid.NewGuid()' "type"' "streamName-1"' 4' metaData2)); " is 123.
Long Statement,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The length of the statement  "			sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEventWithMetadata(Guid.NewGuid()' "type"' "streamName-3"' 5' metaData2)); " is 123.
Long Statement,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,lowest_retry_ignores_replayed_events,The length of the statement  "			buffer.AddRetry(new OutstandingMessage(Guid.NewGuid()' null' Helper.BuildFakeEvent(Guid.NewGuid()' "foo"' "$persistentsubscription-foo::group-parked"' 1)' 0)); " is 159.
Long Statement,EventStore.Core.Tests.Services.Storage.Idempotency,when_writing_a_second_batch_of_events_after_the_first_batch_has_been_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Idempotency\when_writing_a_second_batch_of_events_after_the_first_batch_has_been_replicated.cs,WriteEvents,The length of the statement  "			var commit = CreateCommitLogRecord(transactionPosition + 1000 * _numEvents' transactionPosition' expectedEventNumber + _numEvents); " is 131.
Long Statement,EventStore.Core.Tests.Services.Storage.Idempotency,when_writing_a_second_batch_of_events_after_the_first_batch_has_not_yet_been_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Idempotency\when_writing_a_second_batch_of_events_after_the_first_batch_has_not_yet_been_replicated.cs,WriteEvents,The length of the statement  "			var commit = CreateCommitLogRecord(transactionPosition + 1000 * _numEvents' transactionPosition' expectedEventNumber + _numEvents); " is 131.
Long Statement,EventStore.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\Authorization\authorization_tests.cs,CreateUser,The length of the statement  "					var dataStr = string.Format("{{loginName: '{0}'' fullName: '{1}'' password: '{2}'' groups: []}}"' username' username' password); " is 128.
Long Statement,EventStore.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\Authorization\authorization_tests.cs,authorization_tests,The length of the statement  "			var contentType = httpMethod == HttpMethod.Post || httpMethod == HttpMethod.Put || httpMethod == HttpMethod.Delete ? "application/json" : null; " is 143.
Long Statement,EventStore.Core.Tests.Services.Transport.Http,FakeController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\speed_test.cs,Register,The length of the statement  "				_http.RegisterAction(new ControllerAction(route' verb' Codec.NoCodecs' SupportedCodecs' AuthorizationLevel.None)' (x' y) => { " is 125.
Long Statement,EventStore.Core.Tests.Services.Transport.Http,FakeController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\speed_test.cs,Register,The length of the statement  "				_router.RegisterAction(new ControllerAction(route' verb' Codec.NoCodecs' SupportedCodecs' AuthorizationLevel.None)' (x' y) => { " is 127.
Long Statement,EventStore.Core.Tests.Services.Transport.Http,uri_router_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\uri_router_should.cs,SetUp,The length of the statement  "				new ControllerAction("/"' HttpMethod.Get' Codec.NoCodecs' FakeController.SupportedCodecs' AuthorizationLevel.None)' (x' y) => p); " is 129.
Long Statement,EventStore.Core.Tests.Services.Transport.Http,uri_router_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\uri_router_should.cs,SetUp,The length of the statement  "				new ControllerAction("/{placeholder}"' HttpMethod.Get' Codec.NoCodecs' FakeController.SupportedCodecs' AuthorizationLevel.None)' " is 128.
Long Statement,EventStore.Core.Tests.Services.Transport.Http,uri_router_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\uri_router_should.cs,SetUp,The length of the statement  "				new ControllerAction("/streams/$all/"' HttpMethod.Get' Codec.NoCodecs' FakeController.SupportedCodecs' AuthorizationLevel.None)' " is 128.
Long Statement,EventStore.Core.Tests.Services.Transport.Http,uri_router_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\uri_router_should.cs,SetUp,The length of the statement  "				new ControllerAction("/streams/$$all"' HttpMethod.Get' Codec.NoCodecs' FakeController.SupportedCodecs' AuthorizationLevel.None)' " is 128.
Long Statement,EventStore.Core.Tests.Services.Transport.Http,uri_router_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\uri_router_should.cs,SetUp,The length of the statement  "				new ControllerAction("/streams/test"' HttpMethod.Get' Codec.NoCodecs' FakeController.SupportedCodecs' AuthorizationLevel.None)' " is 127.
Long Statement,EventStore.Core.Tests.Services.Transport.Http,uri_router_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\uri_router_should.cs,SetUp,The length of the statement  "				new ControllerAction("/streams/test"' HttpMethod.Post' Codec.NoCodecs' FakeController.SupportedCodecs' AuthorizationLevel.None)' " is 128.
Long Statement,EventStore.Core.Tests.Services.Transport.Http,uri_router_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\uri_router_should.cs,match_greedy_route_in_the_root_to_any_path,The length of the statement  "				new ControllerAction("/{*greedy}"' HttpMethod.Get' Codec.NoCodecs' FakeController.SupportedCodecs' AuthorizationLevel.None)' " is 124.
Long Statement,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_handling_trusted_write_on_internal_service,The length of the statement  "				"Expected the published write to be the event that was sent through the tcp connection manager to be the event {0} but got {1}"' " is 128.
Complex Conditional,EventStore.Core.Tests.Helpers,PortsHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\PortsHelper.cs,InitPorts,The conditional expression  "read != 3 || buffer[0] != 1 || buffer[1] != 2 || buffer[2] != 3"  is complex.
Complex Conditional,EventStore.Core.Tests.Helpers,TestFixtureWithExistingEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithExistingEvents.cs,ProcessRead,The conditional expression  "list != null && list.Count > 0 && (list.Last().EventNumber >= message.FromEventNumber)  				    || (message.FromEventNumber == -1)"  is complex.
Complex Conditional,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,TFChunkDbCreationHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\TFChunkDbCreationHelper.cs,CreateDb,The conditional expression  "streamVersion == -1  					    && rec.Type != Rec.RecType.TransStart  					    && rec.Type != Rec.RecType.Prepare  					    && rec.Type != Rec.RecType.Delete"  is complex.
Empty Catch Block,EventStore.Core.Tests.ClientAPI.Security,AuthenticationTestBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\Security\AuthenticationTestBase.cs,TestFixtureSetUp,The method has an empty catch block.
Empty Catch Block,EventStore.Core.Tests.Http,HttpBehaviorSpecification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\HttpBehaviorSpecification.cs,TestFixtureSetUp,The method has an empty catch block.
Empty Catch Block,EventStore.Core.Tests.Http,HttpBehaviorSpecification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\HttpBehaviorSpecification.cs,TestFixtureSetUp,The method has an empty catch block.
Magic Number,EventStore.Core.Tests.Authentication,with_internal_authentication_provider,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Authentication\with_internal_authentication_provider.cs,SetUpProvider,The following statement contains a magic number: _internalAuthenticationProvider =  				new InternalAuthenticationProvider(_ioDispatcher' passwordHashAlgorithm' 1000' false);
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_comitted_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_comitted_event.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				10'  				new PrepareLogRecord(  					500' Guid.NewGuid()' Guid.NewGuid()' 500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_comitted_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_comitted_event.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				10'  				new PrepareLogRecord(  					500' Guid.NewGuid()' Guid.NewGuid()' 500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_comitted_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_comitted_event.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				10'  				new PrepareLogRecord(  					500' Guid.NewGuid()' Guid.NewGuid()' 500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_comitted_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_comitted_event.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				10'  				new PrepareLogRecord(  					500' Guid.NewGuid()' Guid.NewGuid()' 500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_comitted_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_comitted_event.cs,Given,The following statement contains a magic number: _eventCommitted = new StorageMessage.EventCommitted(1000' _eventRecord' isTfEof: true);
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				100'  				new PrepareLogRecord(  					1500' Guid.NewGuid()' Guid.NewGuid()' 1500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				100'  				new PrepareLogRecord(  					1500' Guid.NewGuid()' Guid.NewGuid()' 1500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				100'  				new PrepareLogRecord(  					1500' Guid.NewGuid()' Guid.NewGuid()' 1500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				100'  				new PrepareLogRecord(  					1500' Guid.NewGuid()' Guid.NewGuid()' 1500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _eventCommitted = new StorageMessage.EventCommitted(2000' _eventRecord' isTfEof: true);
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _reply2 = new TestMessage(2);
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _reply3 = new TestMessage(3);
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _reply4 = new TestMessage(4);
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _reply5 = new TestMessage(5);
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' _correlationId1' "Stream"' new TFPos(1000' 500)' _reply1));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' _correlationId1' "Stream"' new TFPos(1000' 500)' _reply1));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' _correlationId2' "Stream"' new TFPos(100000' 99500)' _reply2));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' _correlationId2' "Stream"' new TFPos(100000' 99500)' _reply2));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' _correlationId3' "Stream2"' new TFPos(1000' 500)' _reply3));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' _correlationId3' "Stream2"' new TFPos(1000' 500)' _reply3));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' _correlationId4' null' new TFPos(1000' 500)' _reply4));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' _correlationId4' null' new TFPos(1000' 500)' _reply4));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' _correlationId5' null' new TFPos(100000' 99500)' _reply5));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' _correlationId5' null' new TFPos(100000' 99500)' _reply5));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,does_not_awake_stream_subscriber_after_position,The following statement contains a magic number: Assert.That(!_handler.HandledMessages.Any(m => m.Kind == 2));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,does_not_awake_all_subscriber_before_position,The following statement contains a magic number: Assert.That(!_handler.HandledMessages.Any(m => m.Kind == 4));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,does_not_awake_all_subscriber_after_position,The following statement contains a magic number: Assert.That(!_handler.HandledMessages.Any(m => m.Kind == 5));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_after_unsybscribe,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_after_unsybscribe.cs,does_not_awake_another_stream_subscriber_before_position,The following statement contains a magic number: Assert.That(!_handler.HandledMessages.Any(m => m.Kind == 3));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				100'  				new PrepareLogRecord(  					1500' Guid.NewGuid()' Guid.NewGuid()' 1500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				100'  				new PrepareLogRecord(  					1500' Guid.NewGuid()' Guid.NewGuid()' 1500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				100'  				new PrepareLogRecord(  					1500' Guid.NewGuid()' Guid.NewGuid()' 1500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				100'  				new PrepareLogRecord(  					1500' Guid.NewGuid()' Guid.NewGuid()' 1500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _eventCommitted = new StorageMessage.EventCommitted(2000' _eventRecord' isTfEof: true);
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _reply2 = new TestMessage(2);
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _reply3 = new TestMessage(3);
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _reply4 = new TestMessage(4);
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _reply5 = new TestMessage(5);
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' Guid.NewGuid()' "Stream"' new TFPos(1000' 500)' _reply1));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' Guid.NewGuid()' "Stream"' new TFPos(1000' 500)' _reply1));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' Guid.NewGuid()' "Stream"' new TFPos(100000' 99500)' _reply2));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' Guid.NewGuid()' "Stream"' new TFPos(100000' 99500)' _reply2));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' Guid.NewGuid()' "Stream2"' new TFPos(1000' 500)' _reply3));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' Guid.NewGuid()' "Stream2"' new TFPos(1000' 500)' _reply3));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' Guid.NewGuid()' null' new TFPos(1000' 500)' _reply4));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' Guid.NewGuid()' null' new TFPos(1000' 500)' _reply4));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' Guid.NewGuid()' null' new TFPos(100000' 99500)' _reply5));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,Given,The following statement contains a magic number: _it.Handle(  				new AwakeServiceMessage.SubscribeAwake(  					_envelope' Guid.NewGuid()' null' new TFPos(100000' 99500)' _reply5));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,does_not_awake_stream_subscriber_after_position,The following statement contains a magic number: Assert.That(_handler.HandledMessages.All(m => m.Kind != 2));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,awakes_all_subscriber_before_position,The following statement contains a magic number: Assert.That(_handler.HandledMessages.Any(m => m.Kind == 4));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,does_not_awake_all_subscriber_after_position,The following statement contains a magic number: Assert.That(_handler.HandledMessages.All(m => m.Kind != 5));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_committed_event_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_committed_event_with_subscribers.cs,does_not_awake_another_stream_subscriber_before_position,The following statement contains a magic number: Assert.That(_handler.HandledMessages.All(m => m.Kind != 3));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_subscribe_awake,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_subscribe_awake.cs,When,The following statement contains a magic number: _it.Handle(  					new AwakeServiceMessage.SubscribeAwake(  						_envelope' Guid.NewGuid()' "Stream"' new TFPos(1000' 500)' new TestMessage()));
Magic Number,EventStore.Core.Tests.AwakeService,when_handling_subscribe_awake,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_handling_subscribe_awake.cs,When,The following statement contains a magic number: _it.Handle(  					new AwakeServiceMessage.SubscribeAwake(  						_envelope' Guid.NewGuid()' "Stream"' new TFPos(1000' 500)' new TestMessage()));
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				100'  				new PrepareLogRecord(  					1500' Guid.NewGuid()' Guid.NewGuid()' 1500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				100'  				new PrepareLogRecord(  					1500' Guid.NewGuid()' Guid.NewGuid()' 1500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				100'  				new PrepareLogRecord(  					1500' Guid.NewGuid()' Guid.NewGuid()' 1500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,Given,The following statement contains a magic number: _eventRecord = new EventRecord(  				100'  				new PrepareLogRecord(  					1500' Guid.NewGuid()' Guid.NewGuid()' 1500' 0' "Stream"' 99' DateTime.UtcNow' PrepareFlags.Data'  					"event"' new byte[0]' null));
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,Given,The following statement contains a magic number: _eventCommitted = new StorageMessage.EventCommitted(2000' _eventRecord' isTfEof: true);
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,Given,The following statement contains a magic number: _reply2 = new TestMessage(3);
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,Given,The following statement contains a magic number: _reply3 = new TestMessage(4);
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,When,The following statement contains a magic number: _it.Handle(  					new AwakeServiceMessage.SubscribeAwake(  						_envelope' Guid.NewGuid()' "Stream"' new TFPos(1000' 500)' _reply1));
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,When,The following statement contains a magic number: _it.Handle(  					new AwakeServiceMessage.SubscribeAwake(  						_envelope' Guid.NewGuid()' "Stream"' new TFPos(1000' 500)' _reply1));
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,When,The following statement contains a magic number: _it.Handle(  					new AwakeServiceMessage.SubscribeAwake(  						_envelope' Guid.NewGuid()' "Stream2"' new TFPos(1000' 500)' _reply2));
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,When,The following statement contains a magic number: _it.Handle(  					new AwakeServiceMessage.SubscribeAwake(  						_envelope' Guid.NewGuid()' "Stream2"' new TFPos(1000' 500)' _reply2));
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,When,The following statement contains a magic number: _it.Handle(  					new AwakeServiceMessage.SubscribeAwake(  						_envelope' Guid.NewGuid()' null' new TFPos(1000' 500)' _reply3));
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,When,The following statement contains a magic number: _it.Handle(  					new AwakeServiceMessage.SubscribeAwake(  						_envelope' Guid.NewGuid()' null' new TFPos(1000' 500)' _reply3));
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,immediately_awakes_all_subscriber,The following statement contains a magic number: Assert.That(_handler.HandledMessages.Any(m => m.Kind == 4));
Magic Number,EventStore.Core.Tests.AwakeService,when_subscribing_before_last_position_with_already_committed_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\AwakeService\when_subscribing_before_last_position_with_already_committed_events.cs,immediately_awakes_another_stream_subscriber,The following statement contains a magic number: Assert.That(_handler.HandledMessages.Any(m => m.Kind == 3));
Magic Number,EventStore.Core.Tests.Bus,FSMSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\FSMSpeedTest.cs,FSMSpeedTest1,The following statement contains a magic number: const int iterations = 1000000;
Magic Number,EventStore.Core.Tests.Bus,FSMSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\FSMSpeedTest.cs,FSMSpeedTest2,The following statement contains a magic number: const int iterations = 1000000;
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,autoreset_mpsc_queued_handler_2_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerAutoResetWithMpsc(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 2' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,autoreset_mpsc_queued_handler_2_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerAutoResetWithMpsc(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 2' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,autoreset_mpsc_queued_handler_10_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerAutoResetWithMpsc(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 10' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,autoreset_mpsc_queued_handler_10_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerAutoResetWithMpsc(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 10' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,autoreset_queued_handler_2_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerAutoReset(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 2' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,autoreset_queued_handler_2_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerAutoReset(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 2' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,autoreset_queued_handler_10_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerAutoReset(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 10' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,autoreset_queued_handler_10_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerAutoReset(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 10' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,sleep_queued_handler_2_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerSleep(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 2' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,sleep_queued_handler_2_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerSleep(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 2' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,sleep_queued_handler_10_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerSleep(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 10' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,sleep_queued_handler_10_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerSleep(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 10' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,pulse_queued_handler_2_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerPulse(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 2' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,pulse_queued_handler_2_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerPulse(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 2' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,pulse_queued_handler_10_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerPulse(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 10' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,pulse_queued_handler_10_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerPulse(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 10' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,mres_mpsc_queued_handler_2_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerMresWithMpsc(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 2' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,mres_mpsc_queued_handler_2_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerMresWithMpsc(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 2' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,mres_mpsc_queued_handler_10_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerMresWithMpsc(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 10' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,mres_mpsc_queued_handler_10_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerMresWithMpsc(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 10' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,mres_queued_handler_2_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerMRES(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 2' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,mres_queued_handler_2_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerMRES(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 2' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,mres_queued_handler_10_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerMRES(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 10' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,mres_queued_handler_10_producers_50mln_messages,The following statement contains a magic number: SpeedTest(consumer => {  				queue = new QueuedHandlerMRES(consumer' "Queue"' false);  				queue.Start();  				return queue;  			}' 10' 50000000);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,SpeedTest,The following statement contains a magic number: const int batchSize = 100;
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,SpeedTest,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,EventStore.Core.Tests.Bus,QueueSpeedTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\QueueSpeedTest.cs,SpeedTest,The following statement contains a magic number: Console.WriteLine(  				"Queue: {0}'\nProducers: {1}'\nTotal messages: {2}'\nTotal time: {3}'\nTicks per 1000 items: {4}"'  				queue.GetType().Name'  				producingThreads'  				messageCnt'  				sw.Elapsed'  				sw.Elapsed.Ticks / (messageCnt / 1000));
Magic Number,EventStore.Core.Tests.Bus,when_publishing_into_memory_bus,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_into_memory_bus.cs,same_message_n_times_it_should_be_handled_n_times,The following statement contains a magic number: var message = new TestMessageWithId(11);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_into_memory_bus,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_into_memory_bus.cs,same_message_n_times_it_should_be_handled_n_times,The following statement contains a magic number: Assert.That(handler.HandledMessages.ContainsN<TestMessageWithId>(3' mes => mes.Id == 11));
Magic Number,EventStore.Core.Tests.Bus,when_publishing_into_memory_bus,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_into_memory_bus.cs,same_message_n_times_it_should_be_handled_n_times,The following statement contains a magic number: Assert.That(handler.HandledMessages.ContainsN<TestMessageWithId>(3' mes => mes.Id == 11));
Magic Number,EventStore.Core.Tests.Bus,when_publishing_into_memory_bus,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_into_memory_bus.cs,multiple_messages_of_same_type_they_all_should_be_delivered,The following statement contains a magic number: var message2 = new TestMessageWithId(2);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_into_memory_bus,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_into_memory_bus.cs,multiple_messages_of_same_type_they_all_should_be_delivered,The following statement contains a magic number: var message3 = new TestMessageWithId(3);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_into_memory_bus,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_into_memory_bus.cs,multiple_messages_of_same_type_they_all_should_be_delivered,The following statement contains a magic number: Assert.That(handler.HandledMessages.ContainsSingle<TestMessageWithId>(mes => mes.Id == 2));
Magic Number,EventStore.Core.Tests.Bus,when_publishing_into_memory_bus,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_into_memory_bus.cs,multiple_messages_of_same_type_they_all_should_be_delivered,The following statement contains a magic number: Assert.That(handler.HandledMessages.ContainsSingle<TestMessageWithId>(mes => mes.Id == 3));
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,multiple_messages_they_should_be_delivered_to_bus,The following statement contains a magic number: Consumer.SetWaitingCount(2);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Consumer.SetWaitingCount(6);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Queue.Publish(new TestMessageWithId(4));
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Queue.Publish(new TestMessageWithId(8));
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Queue.Publish(new TestMessageWithId(15));
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Queue.Publish(new TestMessageWithId(16));
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Queue.Publish(new TestMessageWithId(23));
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Queue.Publish(new TestMessageWithId(42));
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Assert.AreEqual(6' typedMessages.Length);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Assert.AreEqual(4' typedMessages[0].Id);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Assert.AreEqual(8' typedMessages[1].Id);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Assert.AreEqual(15' typedMessages[2].Id);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Assert.AreEqual(15' typedMessages[2].Id);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Assert.AreEqual(16' typedMessages[3].Id);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Assert.AreEqual(16' typedMessages[3].Id);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Assert.AreEqual(23' typedMessages[4].Id);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Assert.AreEqual(23' typedMessages[4].Id);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Assert.AreEqual(42' typedMessages[5].Id);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler.cs,messages_order_should_remain_the_same,The following statement contains a magic number: Assert.AreEqual(42' typedMessages[5].Id);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler_before_starting,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler_before_starting.cs,should_not_forward_message_to_bus,The following statement contains a magic number: Consumer.Wait(10);
Magic Number,EventStore.Core.Tests.Bus,when_publishing_to_queued_handler_before_starting,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_publishing_to_queued_handler_before_starting.cs,multiple_messages_and_then_starting_messages_should_be_forwarded_to_bus,The following statement contains a magic number: Consumer.SetWaitingCount(3);
Magic Number,EventStore.Core.Tests.Bus,when_stopping_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_stopping_queued_handler.cs,gracefully_and_queue_is_not_busy_should_not_take_much_time,The following statement contains a magic number: Assert.IsTrue(wait.Wait(5000)' "Could not stop queue in time.");
Magic Number,EventStore.Core.Tests.Bus,when_stopping_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_stopping_queued_handler.cs,second_time_should_not_take_much_time,The following statement contains a magic number: Assert.IsTrue(wait.Wait(1000)' "Could not stop queue in time.");
Magic Number,EventStore.Core.Tests.Bus,when_stopping_queued_handler,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_stopping_queued_handler.cs,while_queue_is_busy_should_crash_with_timeout,The following statement contains a magic number: var busyQueue = QueuedHandler.CreateQueuedHandler(consumer' "busy_test_queue"' watchSlowMsg: false'  				threadStopWaitTimeout: TimeSpan.FromMilliseconds(100));
Magic Number,EventStore.Core.Tests.Bus,when_using_single_consumer_queue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_using_single_consumer_queue.cs,messages_should_be_dispatched_in_fifo_way,The following statement contains a magic number: const int messagesToSendPerThread = 1 << 16;
Magic Number,EventStore.Core.Tests.Bus,when_using_single_consumer_queue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_using_single_consumer_queue.cs,messages_should_be_dispatched_in_fifo_way,The following statement contains a magic number: producers[i] = new Thread(msgs => {  					var toSend = (Message[])msgs;  					startEvent.Wait();  					for (var j = 0; j < messagesToSendPerThread; j++) {  						// start with second message  						queue.Enqueue(toSend[(j + 1) % 2]);  					}    					endEvent.Signal();  				}) {  					IsBackground = true'  					Name = "Producer #" + i  				};
Magic Number,EventStore.Core.Tests.Bus,when_using_single_consumer_queue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_using_single_consumer_queue.cs,messages_should_be_dispatched_in_fifo_way,The following statement contains a magic number: producers[i].Start(messages.Skip(i * 2).Take(2).ToArray());
Magic Number,EventStore.Core.Tests.Bus,when_using_single_consumer_queue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_using_single_consumer_queue.cs,messages_should_be_dispatched_in_fifo_way,The following statement contains a magic number: producers[i].Start(messages.Skip(i * 2).Take(2).ToArray());
Magic Number,EventStore.Core.Tests.Bus,when_using_single_consumer_queue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_using_single_consumer_queue.cs,messages_should_be_dispatched_in_fifo_way,The following statement contains a magic number: var batch = new Message[1024];
Magic Number,EventStore.Core.Tests.Bus,when_using_single_consumer_queue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\when_using_single_consumer_queue.cs,messages_should_be_dispatched_in_fifo_way,The following statement contains a magic number: Assert.True(endEvent.Wait(TimeSpan.FromSeconds(10)));
Magic Number,EventStore.Core.Tests.Bus.Helpers,QueuedHandlerTestWithNoopConsumer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\Helpers\QueuedHandlerTestWithNoopConsumer.cs,SetUp,The following statement contains a magic number: Queue = _queuedHandlerFactory(Consumer' "test_name"' TimeSpan.FromMilliseconds(5000));
Magic Number,EventStore.Core.Tests.Bus.Helpers,QueuedHandlerTestWithWaitingConsumer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Bus\Helpers\QueuedHandlerTestWithWaitingConsumer.cs,SetUp,The following statement contains a magic number: Queue = _queuedHandlerFactory(Consumer' "waiting_queue"' TimeSpan.FromMilliseconds(5000));
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0em1_idempotent,The following statement contains a magic number: var events = Enumerable.Range(0' 6).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream.cs,sequence_0em1_1e0_2e1_3e2_4e3_4e4_0any_idempotent,The following statement contains a magic number: var events = Enumerable.Range(0' 6).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e5_non_idempotent,The following statement contains a magic number: var events = Enumerable.Range(0' 6).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e5_non_idempotent,The following statement contains a magic number: Assert.DoesNotThrow(() => writer.Append(events).Then(events.First()' 5));
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e6_wev,The following statement contains a magic number: var events = Enumerable.Range(0' 6).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e6_wev,The following statement contains a magic number: Assert.That(() => first6.Then(events.First()' 6)'  					Throws.Exception.TypeOf<AggregateException>().With.InnerException  						.TypeOf<WrongExpectedVersionException>());
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e4_wev,The following statement contains a magic number: var events = Enumerable.Range(0' 6).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e4_wev,The following statement contains a magic number: Assert.That(() => first6.Then(events.First()' 4)'  					Throws.Exception.TypeOf<AggregateException>().With.InnerException  						.TypeOf<WrongExpectedVersionException>());
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream.cs,sequence_0em1_1e0_2e1_1any_1any_idempotent,The following statement contains a magic number: var events = Enumerable.Range(0' 3).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream.cs,sequence_S_0em1_1em1_E_S_0em1_E_idempotent,The following statement contains a magic number: var events = Enumerable.Range(0' 2).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream.cs,sequence_S_0em1_1em1_E_S_0any_E_idempotent,The following statement contains a magic number: var events = Enumerable.Range(0' 2).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream.cs,sequence_S_0em1_1em1_E_S_1e0_E_idempotent,The following statement contains a magic number: var events = Enumerable.Range(0' 2).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream.cs,sequence_S_0em1_1em1_E_S_1any_E_idempotent,The following statement contains a magic number: var events = Enumerable.Range(0' 2).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream.cs,sequence_S_0em1_1em1_E_S_0em1_1em1_2em1_E_idempotancy_fail,The following statement contains a magic number: var events = Enumerable.Range(0' 2).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0em1_idempotent,The following statement contains a magic number: var events = Enumerable.Range(0' 6).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0em1_idempotent,The following statement contains a magic number: Assert.AreEqual(5' writer.StartTransaction(-1).Write(events).Commit().NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0any_idempotent,The following statement contains a magic number: var events = Enumerable.Range(0' 6).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0any_idempotent,The following statement contains a magic number: Assert.AreEqual(5' writer.StartTransaction(-1).Write(events).Commit().NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e5_non_idempotent,The following statement contains a magic number: var events = Enumerable.Range(0' 6).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e5_non_idempotent,The following statement contains a magic number: Assert.AreEqual(5' writer.StartTransaction(-1).Write(events).Commit().NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e5_non_idempotent,The following statement contains a magic number: Assert.AreEqual(6' writer.StartTransaction(5).Write(events.First()).Commit().NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e5_non_idempotent,The following statement contains a magic number: Assert.AreEqual(6' writer.StartTransaction(5).Write(events.First()).Commit().NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e6_wev,The following statement contains a magic number: var events = Enumerable.Range(0' 6).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e6_wev,The following statement contains a magic number: Assert.AreEqual(5' writer.StartTransaction(-1).Write(events).Commit().NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e6_wev,The following statement contains a magic number: Assert.That(() => writer.StartTransaction(6).Write(events.First()).Commit()'  					Throws.Exception.TypeOf<AggregateException>().With.InnerException  						.TypeOf<WrongExpectedVersionException>());
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e4_wev,The following statement contains a magic number: var events = Enumerable.Range(0' 6).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e4_wev,The following statement contains a magic number: Assert.AreEqual(5' writer.StartTransaction(-1).Write(events).Commit().NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_3e2_4e3_5e4_0e4_wev,The following statement contains a magic number: Assert.That(() => writer.StartTransaction(4).Write(events.First()).Commit()'  					Throws.Exception.TypeOf<AggregateException>().With.InnerException  						.TypeOf<WrongExpectedVersionException>());
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_1any_1any_idempotent,The following statement contains a magic number: var events = Enumerable.Range(0' 3).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_0em1_1e0_2e1_1any_1any_idempotent,The following statement contains a magic number: Assert.AreEqual(2' writer.StartTransaction(-1).Write(events).Commit().NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,appending_to_implicitly_created_stream_using_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\appending_to_implicitly_created_stream_using_transaction.cs,sequence_S_0em1_1em1_E_S_0em1_1em1_2em1_E_idempotancy_fail,The following statement contains a magic number: var events = Enumerable.Range(0' 2).Select(x => TestEvent.NewTestEvent(Guid.NewGuid())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,should_allow_appending_zero_events_to_stream_with_no_problems,The following statement contains a magic number: var read1 = store.ReadStreamEventsForwardAsync(stream1' 0' 2' resolveLinkTos: false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,should_allow_appending_zero_events_to_stream_with_no_problems,The following statement contains a magic number: var read2 = store.ReadStreamEventsForwardAsync(stream2' 0' 2' resolveLinkTos: false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,should_create_stream_with_no_stream_exp_ver_on_first_write_if_does_not_exist,The following statement contains a magic number: var read = store.ReadStreamEventsForwardAsync(stream' 0' 2' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,should_create_stream_with_any_exp_ver_on_first_write_if_does_not_exist,The following statement contains a magic number: var read = store.ReadStreamEventsForwardAsync(stream' 0' 2' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,multiple_idempotent_writes,The following statement contains a magic number: Assert.AreEqual(3'  					store.AppendToStreamAsync(stream' ExpectedVersion.Any' events).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,multiple_idempotent_writes,The following statement contains a magic number: Assert.AreEqual(3'  					store.AppendToStreamAsync(stream' ExpectedVersion.Any' events).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,multiple_idempotent_writes_with_same_id_bug_case,The following statement contains a magic number: Assert.AreEqual(5'  					store.AppendToStreamAsync(stream' ExpectedVersion.Any' events).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,in_wtf_multiple_case_of_multiple_writes_expected_version_any_per_all_same_id,The following statement contains a magic number: Assert.AreEqual(5'  					store.AppendToStreamAsync(stream' ExpectedVersion.Any' events).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,in_slightly_reasonable_multiple_case_of_multiple_writes_with_expected_version_per_all_same_id,The following statement contains a magic number: Assert.AreEqual(5'  					store.AppendToStreamAsync(stream' ExpectedVersion.NoStream' events).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,in_slightly_reasonable_multiple_case_of_multiple_writes_with_expected_version_per_all_same_id,The following statement contains a magic number: Assert.AreEqual(5' f.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,should_fail_writing_with_invalid_exp_ver_to_deleted_stream,The following statement contains a magic number: var append = store.AppendToStreamAsync(stream' 5' new[] {TestEvent.NewTestEvent()});
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,should_append_with_stream_exists_exp_ver_to_stream_with_multiple_events,The following statement contains a magic number: i < 5
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,should_append_with_stream_exists_exp_ver_if_metadata_stream_exists,The following statement contains a magic number: store.SetStreamMetadataAsync(stream' ExpectedVersion.Any'  					new StreamMetadata(10' null' null' null' null)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,can_append_multiple_events_at_once,The following statement contains a magic number: var events = Enumerable.Range(0' 100).Select(i => TestEvent.NewTestEvent(i.ToString()' i.ToString()));
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,can_append_multiple_events_at_once,The following statement contains a magic number: Assert.AreEqual(99'  					store.AppendToStreamAsync(stream' ExpectedVersion.NoStream' events).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,returns_failure_status_when_conditionally_appending_with_version_mismatch,The following statement contains a magic number: var result = store.ConditionalAppendToStreamAsync(stream' 7' new[] {TestEvent.NewTestEvent()}).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,ssl_append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,should_allow_appending_zero_events_to_stream_with_no_problems,The following statement contains a magic number: var read = store.ReadStreamEventsForwardAsync(stream' 0' 2' resolveLinkTos: false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,ssl_append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,should_create_stream_with_no_stream_exp_ver_on_first_write_if_does_not_exist,The following statement contains a magic number: var read = store.ReadStreamEventsForwardAsync(stream' 0' 2' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,ssl_append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,should_create_stream_with_any_exp_ver_on_first_write_if_does_not_exist,The following statement contains a magic number: var read = store.ReadStreamEventsForwardAsync(stream' 0' 2' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,ssl_append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,should_fail_writing_with_invalid_exp_ver_to_deleted_stream,The following statement contains a magic number: var append = store.AppendToStreamAsync(stream' 5' new[] {TestEvent.NewTestEvent()});
Magic Number,EventStore.Core.Tests.ClientAPI,ssl_append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,can_append_multiple_events_at_once,The following statement contains a magic number: var events = Enumerable.Range(0' 100).Select(i => TestEvent.NewTestEvent(i.ToString()' i.ToString()));
Magic Number,EventStore.Core.Tests.ClientAPI,ssl_append_to_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream.cs,can_append_multiple_events_at_once,The following statement contains a magic number: Assert.AreEqual(99'  					store.AppendToStreamAsync(stream' ExpectedVersion.NoStream' events).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,catchup_subscription_handles_small_batch_sizes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catchup_subscription_handles_small_batch_sizes.cs,TestFixtureSetUp,The following statement contains a magic number: i < 80
Magic Number,EventStore.Core.Tests.ClientAPI,catchup_subscription_handles_small_batch_sizes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catchup_subscription_handles_small_batch_sizes.cs,TestFixtureSetUp,The following statement contains a magic number: _settings = new CatchUpSubscriptionSettings(100' 1' false' true' String.Empty);
Magic Number,EventStore.Core.Tests.ClientAPI,catchup_subscription_handles_small_batch_sizes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catchup_subscription_handles_small_batch_sizes.cs,CreateThousandEvents,The following statement contains a magic number: i < 1000
Magic Number,EventStore.Core.Tests.ClientAPI,catchup_subscription_handles_small_batch_sizes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catchup_subscription_handles_small_batch_sizes.cs,CatchupSubscriptionToAllHandlesManyEventsWithSmallBatchSize,The following statement contains a magic number: _conn.SubscribeToAllFrom(null' _settings' (sub' evnt) => {  				if (evnt.OriginalEventNumber % 1000 == 0) {  					Console.WriteLine("Processed {0} events"' evnt.OriginalEventNumber);  				}    				return Task.CompletedTask;  			}' (sub) => { mre.Set(); }' null' new UserCredentials("admin"' "changeit"));
Magic Number,EventStore.Core.Tests.ClientAPI,catchup_subscription_handles_small_batch_sizes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catchup_subscription_handles_small_batch_sizes.cs,CatchupSubscriptionToAllHandlesManyEventsWithSmallBatchSize,The following statement contains a magic number: !mre.WaitOne(TimeSpan.FromMinutes(10))
Magic Number,EventStore.Core.Tests.ClientAPI,catchup_subscription_handles_small_batch_sizes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catchup_subscription_handles_small_batch_sizes.cs,CatchupSubscriptionToStreamHandlesManyEventsWithSmallBatchSize,The following statement contains a magic number: _conn.SubscribeToStreamFrom(_streamName' null' _settings' (sub' evnt) => {  				if (evnt.OriginalEventNumber % 1000 == 0) {  					Console.WriteLine("Processed {0} events"' evnt.OriginalEventNumber);  				}    				return Task.CompletedTask;  			}' (sub) => { mre.Set(); }' null' new UserCredentials("admin"' "changeit"));
Magic Number,EventStore.Core.Tests.ClientAPI,catchup_subscription_handles_small_batch_sizes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catchup_subscription_handles_small_batch_sizes.cs,CatchupSubscriptionToStreamHandlesManyEventsWithSmallBatchSize,The following statement contains a magic number: !mre.WaitOne(TimeSpan.FromMinutes(10))
Magic Number,EventStore.Core.Tests.ClientAPI,catch_up_subscription_handles_errors,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,start_completes_onces_subscription_is_live,The following statement contains a magic number: _connection.HandleReadStreamEventsForwardAsync((stream' start' max) => Task.Run(() => {  				callCount++;    				if (callCount == 1) {  					return Task.FromResult(CreateStreamEventsSlice(isEnd: true));  				} else if (callCount == 2) {  					var result = Task.FromResult(CreateStreamEventsSlice(fromEvent: 1' isEnd: true));  					Assert.That(finalEvent.Wait(TimeoutMs));  					return result;  				} else {  					throw new InvalidOperationException("Should not get a third call");  				}  			}));
Magic Number,EventStore.Core.Tests.ClientAPI,catch_up_subscription_handles_errors,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,when_live_processing_and_disconnected_reconnect_keeps_events_ordered,The following statement contains a magic number: _connection.HandleReadStreamEventsForwardAsync((stream' start' max) => {  				callCount++;    				var taskCompletionSource =  					new TaskCompletionSource<StreamEventsSlice>(TaskCreationOptions.RunContinuationsAsynchronously);  				if (callCount == 1) {  					taskCompletionSource.SetResult(CreateStreamEventsSlice(fromEvent: 0' count: 0' isEnd: true));  				} else if (callCount == 2) {  					taskCompletionSource.SetResult(CreateStreamEventsSlice(fromEvent: 0' count: 0' isEnd: true));  				}    				return taskCompletionSource.Task;  			});
Magic Number,EventStore.Core.Tests.ClientAPI,catch_up_subscription_handles_errors,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,when_live_processing_and_disconnected_reconnect_keeps_events_ordered,The following statement contains a magic number: _connection.HandleReadStreamEventsForwardAsync((stream' start' max) => {  				callCount++;    				var taskCompletionSource =  					new TaskCompletionSource<StreamEventsSlice>(TaskCreationOptions.RunContinuationsAsynchronously);  				if (callCount == 1) {  					taskCompletionSource.SetResult(CreateStreamEventsSlice(fromEvent: 0' count: 0' isEnd: true));  				} else if (callCount == 2) {  					Assert.That(waitForOutOfOrderEvent.Wait(TimeoutMs));  					taskCompletionSource.SetResult(CreateStreamEventsSlice(fromEvent: 0' count: 1' isEnd: true));  				}    				return taskCompletionSource.Task;  			});
Magic Number,EventStore.Core.Tests.ClientAPI,catch_up_subscription_handles_errors,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,when_live_processing_and_disconnected_reconnect_keeps_events_ordered,The following statement contains a magic number: Assert.That(_raisedEventEvent.Wait(100)' Is.False);
Magic Number,EventStore.Core.Tests.ClientAPI,catch_up_subscription_handles_errors,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\catch_up_subscription_handles_errors.cs,CreateStreamEventsSlice,The following statement contains a magic number: return new StreamEventsSlice(SliceReadStatus.Success' StreamId' fromEvent' ReadDirection.Forward' events'  				fromEvent + count' 100' isEnd);
Magic Number,EventStore.Core.Tests.ClientAPI,connect,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connect.cs,should_throw_exception_when_trying_to_reopen_closed_connection,The following statement contains a magic number: var settings = ConnectionSettings.Create()  				.EnableVerboseLogging()  				.UseCustomLogger(ClientApiLoggerBridge.Default)  				.LimitReconnectionsTo(0)  				.WithConnectionTimeoutOf(TimeSpan.FromSeconds(10))  				.SetReconnectionDelayTo(TimeSpan.FromMilliseconds(0))  				.FailOnNoServerResponse();
Magic Number,EventStore.Core.Tests.ClientAPI,connect,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connect.cs,should_throw_exception_when_trying_to_reopen_closed_connection,The following statement contains a magic number: !closed.Wait(TimeSpan.FromSeconds(120))
Magic Number,EventStore.Core.Tests.ClientAPI,connect,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connect.cs,should_close_connection_after_configured_amount_of_failed_reconnections,The following statement contains a magic number: var settings =  				ConnectionSettings.Create()  					.EnableVerboseLogging()  					.UseCustomLogger(ClientApiLoggerBridge.Default)  					.LimitReconnectionsTo(1)  					.WithConnectionTimeoutOf(TimeSpan.FromSeconds(10))  					.SetReconnectionDelayTo(TimeSpan.FromMilliseconds(0))  					.FailOnNoServerResponse();
Magic Number,EventStore.Core.Tests.ClientAPI,connect,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connect.cs,should_close_connection_after_configured_amount_of_failed_reconnections,The following statement contains a magic number: !closed.Wait(TimeSpan.FromSeconds(120))
Magic Number,EventStore.Core.Tests.ClientAPI,not_connected_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connect.cs,should_timeout_connection_after_configured_amount_time_on_conenct,The following statement contains a magic number: var settings =  				ConnectionSettings.Create()  					.EnableVerboseLogging()  					.UseCustomLogger(ClientApiLoggerBridge.Default)  					.LimitReconnectionsTo(0)  					.SetReconnectionDelayTo(TimeSpan.FromMilliseconds(0))  					.FailOnNoServerResponse()  					.WithConnectionTimeoutOf(TimeSpan.FromMilliseconds(1000));
Magic Number,EventStore.Core.Tests.ClientAPI,not_connected_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connect.cs,should_timeout_connection_after_configured_amount_time_on_conenct,The following statement contains a magic number: var ip = new IPAddress(new byte[]  				{8' 8' 8' 8});
Magic Number,EventStore.Core.Tests.ClientAPI,not_connected_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connect.cs,should_timeout_connection_after_configured_amount_time_on_conenct,The following statement contains a magic number: var ip = new IPAddress(new byte[]  				{8' 8' 8' 8});
Magic Number,EventStore.Core.Tests.ClientAPI,not_connected_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connect.cs,should_timeout_connection_after_configured_amount_time_on_conenct,The following statement contains a magic number: var ip = new IPAddress(new byte[]  				{8' 8' 8' 8});
Magic Number,EventStore.Core.Tests.ClientAPI,not_connected_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connect.cs,should_timeout_connection_after_configured_amount_time_on_conenct,The following statement contains a magic number: var ip = new IPAddress(new byte[]  				{8' 8' 8' 8});
Magic Number,EventStore.Core.Tests.ClientAPI,not_connected_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connect.cs,should_timeout_connection_after_configured_amount_time_on_conenct,The following statement contains a magic number: const int port = 4567;
Magic Number,EventStore.Core.Tests.ClientAPI,not_connected_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connect.cs,should_timeout_connection_after_configured_amount_time_on_conenct,The following statement contains a magic number: !closed.Wait(TimeSpan.FromSeconds(15))
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_beginning_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,the_subscription_gets_event_zero_as_its_first_event,The following statement contains a magic number: Assert.IsTrue(_resetEvent.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_two_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,the_subscription_gets_event_two_as_its_first_event,The following statement contains a magic number: Assert.IsTrue(_resetEvent.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_two_and_no_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,the_subscription_gets_event_two_as_its_first_event,The following statement contains a magic number: Assert.AreEqual(2' _firstEvent.Event.EventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_beginning_and_events_in_it,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,WriteEvents,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_beginning_and_events_in_it,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,the_subscription_gets_event_zero_as_its_first_event,The following statement contains a magic number: Assert.IsTrue(_resetEvent.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_beginning_not_set_and_events_in_it,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,WriteEvents,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_beginning_not_set_and_events_in_it_then_event_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,WriteEvents,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_beginning_not_set_and_events_in_it_then_event_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,the_subscription_gets_the_written_event_as_its_first_event,The following statement contains a magic number: Assert.IsTrue(_resetEvent.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_beginning_not_set_and_events_in_it_then_event_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,the_subscription_gets_the_written_event_as_its_first_event,The following statement contains a magic number: Assert.AreEqual(10' _firstEvent.Event.EventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_x_set_higher_than_x_and_events_in_it_then_event_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,WriteEvents,The following statement contains a magic number: i < 11
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_x_set_higher_than_x_and_events_in_it_then_event_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,the_subscription_gets_the_written_event_as_its_first_event,The following statement contains a magic number: Assert.IsTrue(_resetEvent.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_x_set_higher_than_x_and_events_in_it_then_event_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,the_subscription_gets_the_written_event_as_its_first_event,The following statement contains a magic number: Assert.AreEqual(11' _firstEvent.Event.EventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,a_nak_in_subscription_handler_in_autoack_mode_drops_the_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,the_subscription_gets_dropped,The following statement contains a magic number: Assert.IsTrue(_resetEvent.WaitOne(TimeSpan.FromSeconds(5)));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_x_set_and_events_in_it_then_event_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,WriteEvents,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_x_set_and_events_in_it_then_event_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,the_subscription_gets_the_written_event_as_its_first_event,The following statement contains a magic number: Assert.IsTrue(_resetEvent.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_x_set_and_events_in_it_then_event_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,the_subscription_gets_the_written_event_as_its_first_event,The following statement contains a magic number: Assert.AreEqual(10' _firstEvent.Event.EventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_x_set_and_events_in_it,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,WriteEvents,The following statement contains a magic number: i == 4
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_x_set_and_events_in_it,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,WriteEvents,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_x_set_and_events_in_it,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,the_subscription_gets_the_written_event_as_its_first_event,The following statement contains a magic number: Assert.IsTrue(_resetEvent.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_x_set_and_events_in_it,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,the_subscription_gets_the_written_event_as_its_first_event,The following statement contains a magic number: Assert.AreEqual(4' _firstEvent.Event.EventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_persistent_subscription_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,WriteTestScenario,The following statement contains a magic number: var event1 = WriteSingleEvent(StreamName' intMaxValue + 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_persistent_subscription_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(StreamName' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_persistent_subscription_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(StreamName' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_persistent_subscription_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,the_subscription_resolves_the_linked_event_correctly,The following statement contains a magic number: Assert.IsTrue(_resetEvent.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_persistent_subscription_with_retries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,HandleEvent,The following statement contains a magic number: retryCount > 4
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_persistent_subscription_with_retries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,events_are_retried_until_success,The following statement contains a magic number: Assert.IsTrue(_resetEvent.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_persistent_subscription_with_retries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription.cs,events_are_retried_until_success,The following statement contains a magic number: Assert.AreEqual(5' _retryCount);
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_beginning_and_no_stream_async,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription_async.cs,the_subscription_gets_event_zero_as_its_first_event,The following statement contains a magic number: Assert.IsTrue(_resetEvent.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_two_and_no_stream_async,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription_async.cs,the_subscription_gets_event_two_as_its_first_event,The following statement contains a magic number: Assert.IsTrue(_resetEvent.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_two_and_no_stream_async,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription_async.cs,the_subscription_gets_event_two_as_its_first_event,The following statement contains a magic number: Assert.AreEqual(2' _firstEvent.Event.EventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_beginning_and_events_in_it_async,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription_async.cs,WriteEvents,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_beginning_and_events_in_it_async,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription_async.cs,the_subscription_gets_event_zero_as_its_first_event,The following statement contains a magic number: Assert.IsTrue(_resetEvent.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,EventStore.Core.Tests.ClientAPI,connect_to_existing_persistent_subscription_with_start_from_beginning_not_set_and_events_in_it_async,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connecting_to_a_persistent_subscription_async.cs,WriteEvents,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.ClientAPI,connection_string,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connection_string.cs,can_set_int,The following statement contains a magic number: Assert.AreEqual(55' settings.MaxRetries);
Magic Number,EventStore.Core.Tests.ClientAPI,connection_string,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connection_string.cs,can_set_timespan,The following statement contains a magic number: Assert.AreEqual(5555' settings.HeartbeatTimeout.TotalMilliseconds);
Magic Number,EventStore.Core.Tests.ClientAPI,connection_string,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connection_string.cs,can_set_multiple_values,The following statement contains a magic number: Assert.AreEqual(5555' settings.HeartbeatTimeout.TotalMilliseconds);
Magic Number,EventStore.Core.Tests.ClientAPI,connection_string,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connection_string.cs,can_set_multiple_values,The following statement contains a magic number: Assert.AreEqual(55' settings.MaxRetries);
Magic Number,EventStore.Core.Tests.ClientAPI,connection_string,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connection_string.cs,can_set_mixed_case,The following statement contains a magic number: Assert.AreEqual(5555' settings.HeartbeatTimeout.TotalMilliseconds);
Magic Number,EventStore.Core.Tests.ClientAPI,connection_string,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\connection_string.cs,can_set_gossip_seeds,The following statement contains a magic number: Assert.AreEqual(3' settings.GossipSeeds.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,create_persistent_subscription_with_too_big_message_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\create_persistent_subscription.cs,the_build_fails_with_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>  				PersistentSubscriptionSettings.Create().WithMessageTimeoutOf(TimeSpan.FromDays(25 * 365)).Build());
Magic Number,EventStore.Core.Tests.ClientAPI,create_persistent_subscription_with_too_big_message_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\create_persistent_subscription.cs,the_build_fails_with_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>  				PersistentSubscriptionSettings.Create().WithMessageTimeoutOf(TimeSpan.FromDays(25 * 365)).Build());
Magic Number,EventStore.Core.Tests.ClientAPI,create_persistent_subscription_with_too_big_checkpoint_after,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\create_persistent_subscription.cs,the_build_fails_with_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>  				PersistentSubscriptionSettings.Create().CheckPointAfter(TimeSpan.FromDays(25 * 365)).Build());
Magic Number,EventStore.Core.Tests.ClientAPI,create_persistent_subscription_with_too_big_checkpoint_after,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\create_persistent_subscription.cs,the_build_fails_with_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>  				PersistentSubscriptionSettings.Create().CheckPointAfter(TimeSpan.FromDays(25 * 365)).Build());
Magic Number,EventStore.Core.Tests.ClientAPI,deleting_existing_persistent_subscription_with_subscriber,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\deleting_persistent_subscription.cs,the_subscription_is_dropped,The following statement contains a magic number: Assert.IsTrue(_called.WaitOne(TimeSpan.FromSeconds(5)));
Magic Number,EventStore.Core.Tests.ClientAPI,isjson_flag_on_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\isjson_flag_on_event.cs,should_be_preserved_with_all_possible_write_and_read_methods,The following statement contains a magic number: _node.Node.MainQueue.Publish(new ClientMessage.ReadStreamEventsForward(  					Guid.NewGuid()' Guid.NewGuid()' new CallbackEnvelope(message => {  						Assert.IsInstanceOf<ClientMessage.ReadStreamEventsForwardCompleted>(message);  						var msg = (ClientMessage.ReadStreamEventsForwardCompleted)message;  						Assert.AreEqual(Data.ReadStreamResult.Success' msg.Result);  						Assert.AreEqual(6' msg.Events.Length);  						Assert.IsTrue(msg.Events.All(x => (x.OriginalEvent.Flags & PrepareFlags.IsJson) != 0));    						done.Set();  					})' stream' 0' 100' false' false' null' null));
Magic Number,EventStore.Core.Tests.ClientAPI,isjson_flag_on_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\isjson_flag_on_event.cs,should_be_preserved_with_all_possible_write_and_read_methods,The following statement contains a magic number: _node.Node.MainQueue.Publish(new ClientMessage.ReadStreamEventsForward(  					Guid.NewGuid()' Guid.NewGuid()' new CallbackEnvelope(message => {  						Assert.IsInstanceOf<ClientMessage.ReadStreamEventsForwardCompleted>(message);  						var msg = (ClientMessage.ReadStreamEventsForwardCompleted)message;  						Assert.AreEqual(Data.ReadStreamResult.Success' msg.Result);  						Assert.AreEqual(6' msg.Events.Length);  						Assert.IsTrue(msg.Events.All(x => (x.OriginalEvent.Flags & PrepareFlags.IsJson) != 0));    						done.Set();  					})' stream' 0' 100' false' false' null' null));
Magic Number,EventStore.Core.Tests.ClientAPI,isjson_flag_on_event,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\isjson_flag_on_event.cs,should_be_preserved_with_all_possible_write_and_read_methods,The following statement contains a magic number: Assert.IsTrue(done.Wait(10000)' "Read was not completed in time.");
Magic Number,EventStore.Core.Tests.ClientAPI,happy_case_writing_and_subscribing_to_normal_events_manual_ack,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\persistent_connect_integration_tests.cs,Test,The following statement contains a magic number: _conn.ConnectToPersistentSubscription(StreamName' GroupName'  				(subscription' resolvedEvent) => {  					subscription.Acknowledge(resolvedEvent);    					if (Interlocked.Increment(ref _eventReceivedCount) == EventWriteCount) {  						_eventsReceived.Set();  					}    					return Task.CompletedTask;  				}'  				(sub' reason' exception) =>  					Console.WriteLine("Subscription dropped (reason:{0}' exception:{1})."' reason' exception)'  				bufferSize: 10' autoAck: false' userCredentials: DefaultData.AdminCredentials);
Magic Number,EventStore.Core.Tests.ClientAPI,happy_case_writing_and_subscribing_to_normal_events_manual_ack,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\persistent_connect_integration_tests.cs,Test,The following statement contains a magic number: !_eventsReceived.WaitOne(TimeSpan.FromSeconds(5))
Magic Number,EventStore.Core.Tests.ClientAPI,happy_case_writing_and_subscribing_to_normal_events_auto_ack,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\persistent_connect_integration_tests.cs,Test,The following statement contains a magic number: !_eventsReceived.WaitOne(TimeSpan.FromSeconds(5))
Magic Number,EventStore.Core.Tests.ClientAPI,happy_case_catching_up_to_normal_events_auto_ack,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\persistent_connect_integration_tests.cs,Test,The following statement contains a magic number: !_eventsReceived.WaitOne(TimeSpan.FromSeconds(5))
Magic Number,EventStore.Core.Tests.ClientAPI,happy_case_catching_up_to_normal_events_manual_ack,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\persistent_connect_integration_tests.cs,Test,The following statement contains a magic number: !_eventsReceived.WaitOne(TimeSpan.FromSeconds(5))
Magic Number,EventStore.Core.Tests.ClientAPI,happy_case_catching_up_to_link_to_events_manual_ack,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\persistent_connect_integration_tests.cs,Test,The following statement contains a magic number: !_eventsReceived.WaitOne(TimeSpan.FromSeconds(5))
Magic Number,EventStore.Core.Tests.ClientAPI,happy_case_catching_up_to_link_to_events_auto_ack,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\persistent_connect_integration_tests.cs,Test,The following statement contains a magic number: !_eventsReceived.WaitOne(TimeSpan.FromSeconds(5))
Magic Number,EventStore.Core.Tests.ClientAPI,when_writing_and_subscribing_to_normal_events_manual_nack,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\persistent_connect_integration_tests.cs,Test,The following statement contains a magic number: _conn.ConnectToPersistentSubscription(StreamName' GroupName'  				(subscription' resolvedEvent) => {  					subscription.Fail(resolvedEvent' PersistentSubscriptionNakEventAction.Park' "fail");    					if (Interlocked.Increment(ref _eventReceivedCount) == EventWriteCount) {  						_eventsReceived.Set();  					}    					return Task.CompletedTask;  				}'  				(sub' reason' exception) =>  					Console.WriteLine("Subscription dropped (reason:{0}' exception:{1})."' reason' exception)'  				bufferSize: 10' autoAck: false' userCredentials: DefaultData.AdminCredentials);
Magic Number,EventStore.Core.Tests.ClientAPI,when_writing_and_subscribing_to_normal_events_manual_nack,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\persistent_connect_integration_tests.cs,Test,The following statement contains a magic number: !_eventsReceived.WaitOne(TimeSpan.FromSeconds(5))
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_backward_should.cs,When,The following statement contains a magic number: _testEvents = Enumerable.Range(0' 20).Select(x => TestEvent.NewTestEvent(x.ToString())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_backward_should.cs,return_partial_slice_if_not_enough_events,The following statement contains a magic number: var read = _conn.ReadAllEventsBackwardAsync(Position.End' 30' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_backward_should.cs,return_partial_slice_if_not_enough_events,The following statement contains a magic number: Assert.That(read.Events.Length' Is.LessThan(30));
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_backward_should.cs,be_able_to_read_events_slice_at_time,The following statement contains a magic number: !(slice = _conn.ReadAllEventsBackwardAsync(position' 5' false).Result).IsEndOfStream
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_forward_should.cs,When,The following statement contains a magic number: _testEvents = Enumerable.Range(0' 20).Select(x => TestEvent.NewTestEvent(x.ToString())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_forward_should.cs,return_events_in_same_order_as_written,The following statement contains a magic number: var read = _conn.ReadAllEventsForwardAsync(Position.Start' _testEvents.Length + 10' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_forward_should.cs,be_able_to_read_events_slice_at_time,The following statement contains a magic number: !(slice = _conn.ReadAllEventsForwardAsync(position' 5' false).Result).IsEndOfStream
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_forward_should.cs,return_partial_slice_if_not_enough_events,The following statement contains a magic number: var read = _conn.ReadAllEventsForwardAsync(Position.Start' 30' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_forward_should.cs,return_partial_slice_if_not_enough_events,The following statement contains a magic number: Assert.That(read.Events.Length' Is.LessThan(30));
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_forward_with_hard_deleted_stream_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_forward_with_hard_deleted_stream_should.cs,When,The following statement contains a magic number: _testEvents = Enumerable.Range(0' 20).Select(x => TestEvent.NewTestEvent(x.ToString())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_forward_with_hard_deleted_stream_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_forward_with_hard_deleted_stream_should.cs,ensure_deleted_stream,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync("stream"' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_forward_with_hard_deleted_stream_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_forward_with_hard_deleted_stream_should.cs,returns_all_events_including_tombstone,The following statement contains a magic number: AllEventsSlice read = _conn.ReadAllEventsForwardAsync(Position.Start' _testEvents.Length + 10' false)  				.Result;
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_forward_with_soft_deleted_stream_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_forward_with_soft_deleted_stream_should.cs,When,The following statement contains a magic number: _testEvents = Enumerable.Range(0' 20).Select(x => TestEvent.NewTestEvent(x.ToString())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_forward_with_soft_deleted_stream_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_forward_with_soft_deleted_stream_should.cs,ensure_deleted_stream,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync("stream"' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,read_all_events_forward_with_soft_deleted_stream_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_all_events_forward_with_soft_deleted_stream_should.cs,returns_all_events_including_tombstone,The following statement contains a magic number: AllEventsSlice read = _conn.ReadAllEventsForwardAsync(Position.Start' _testEvents.Length + 10' false)  				.Result;
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_should.cs,When,The following statement contains a magic number: _conn.AppendToStreamAsync("test-stream"'  					-1'  					new EventData(_eventId0' "event0"' false' new byte[3]' new byte[2])'  					new EventData(_eventId1' "event1"' true' new byte[7]' new byte[10]))  				.Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_should.cs,When,The following statement contains a magic number: _conn.AppendToStreamAsync("test-stream"'  					-1'  					new EventData(_eventId0' "event0"' false' new byte[3]' new byte[2])'  					new EventData(_eventId1' "event1"' true' new byte[7]' new byte[10]))  				.Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_should.cs,When,The following statement contains a magic number: _conn.AppendToStreamAsync("test-stream"'  					-1'  					new EventData(_eventId0' "event0"' false' new byte[3]' new byte[2])'  					new EventData(_eventId1' "event1"' true' new byte[7]' new byte[10]))  				.Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_should.cs,When,The following statement contains a magic number: _conn.AppendToStreamAsync("test-stream"'  					-1'  					new EventData(_eventId0' "event0"' false' new byte[3]' new byte[2])'  					new EventData(_eventId1' "event1"' true' new byte[7]' new byte[10]))  				.Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_should.cs,throw_if_event_number_is_less_than_minus_one,The following statement contains a magic number: Assert.ThrowsAsync<ArgumentOutOfRangeException>(() =>  				_conn.ReadEventAsync("stream"' -2' resolveLinkTos: false));
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_should.cs,notify_using_status_code_if_stream_not_found,The following statement contains a magic number: var res = _conn.ReadEventAsync("unexisting-stream"' 5' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_should.cs,notify_using_status_code_if_stream_not_found,The following statement contains a magic number: Assert.AreEqual(5' res.EventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_should.cs,notify_using_status_code_if_stream_was_deleted,The following statement contains a magic number: var res = _conn.ReadEventAsync("deleted-stream"' 5' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_should.cs,notify_using_status_code_if_stream_was_deleted,The following statement contains a magic number: Assert.AreEqual(5' res.EventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_should.cs,notify_using_status_code_if_stream_does_not_have_event,The following statement contains a magic number: var res = _conn.ReadEventAsync("test-stream"' 5' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_should.cs,notify_using_status_code_if_stream_does_not_have_event,The following statement contains a magic number: Assert.AreEqual(5' res.EventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,throw_if_start_less_than_minus_one,The following statement contains a magic number: Assert.ThrowsAsync<ArgumentOutOfRangeException>(() =>  					store.ReadStreamEventsBackwardAsync(stream' -2' 100' resolveLinkTos: false));
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,throw_if_start_less_than_minus_one,The following statement contains a magic number: Assert.ThrowsAsync<ArgumentOutOfRangeException>(() =>  					store.ReadStreamEventsBackwardAsync(stream' -2' 100' resolveLinkTos: false));
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,return_partial_slice_if_no_enough_events_in_stream,The following statement contains a magic number: var testEvents = Enumerable.Range(0' 10).Select(x => TestEvent.NewTestEvent((x + 1).ToString()))  					.ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,return_partial_slice_if_no_enough_events_in_stream,The following statement contains a magic number: var read = store.ReadStreamEventsBackwardAsync(stream' 1' 5' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,return_partial_slice_if_no_enough_events_in_stream,The following statement contains a magic number: Assert.That(read.Result.Events.Length' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,return_events_reversed_compared_to_written,The following statement contains a magic number: var testEvents = Enumerable.Range(0' 10).Select(x => TestEvent.NewTestEvent((x + 1).ToString()))  					.ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,be_able_to_read_single_event_from_arbitrary_position,The following statement contains a magic number: var testEvents = Enumerable.Range(0' 10).Select(x => TestEvent.NewTestEvent(x.ToString())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,be_able_to_read_single_event_from_arbitrary_position,The following statement contains a magic number: var read = store.ReadStreamEventsBackwardAsync(stream' 7' 1' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,be_able_to_read_single_event_from_arbitrary_position,The following statement contains a magic number: Assert.That(EventDataComparer.Equal(testEvents[7]' read.Result.Events.Single().Event));
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,be_able_to_read_first_event,The following statement contains a magic number: var testEvents = Enumerable.Range(0' 10).Select(x => TestEvent.NewTestEvent((x + 1).ToString()))  					.ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,be_able_to_read_last_event,The following statement contains a magic number: var testEvents = Enumerable.Range(0' 10).Select(x => TestEvent.NewTestEvent(x.ToString())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,be_able_to_read_slice_from_arbitrary_position,The following statement contains a magic number: var testEvents = Enumerable.Range(0' 10).Select(x => TestEvent.NewTestEvent(x.ToString())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,be_able_to_read_slice_from_arbitrary_position,The following statement contains a magic number: var read = store.ReadStreamEventsBackwardAsync(stream' 3' 2' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,be_able_to_read_slice_from_arbitrary_position,The following statement contains a magic number: var read = store.ReadStreamEventsBackwardAsync(stream' 3' 2' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,be_able_to_read_slice_from_arbitrary_position,The following statement contains a magic number: Assert.That(EventDataComparer.Equal(testEvents.Skip(2).Take(2).Reverse().ToArray()'  					read.Result.Events.Select(x => x.Event).ToArray()));
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_backward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_backward_should.cs,be_able_to_read_slice_from_arbitrary_position,The following statement contains a magic number: Assert.That(EventDataComparer.Equal(testEvents.Skip(2).Take(2).Reverse().ToArray()'  					read.Result.Events.Select(x => x.Event).ToArray()));
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,return_empty_slice_when_called_on_non_existing_range,The following statement contains a magic number: var write10 = store.AppendToStreamAsync(stream'  					ExpectedVersion.NoStream'  					Enumerable.Range(0' 10).Select(x =>  						TestEvent.NewTestEvent((x + 1).ToString(CultureInfo.InvariantCulture))));
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,return_empty_slice_when_called_on_non_existing_range,The following statement contains a magic number: var read = store.ReadStreamEventsForwardAsync(stream' 11' 5' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,return_empty_slice_when_called_on_non_existing_range,The following statement contains a magic number: var read = store.ReadStreamEventsForwardAsync(stream' 11' 5' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,return_partial_slice_if_not_enough_events_in_stream,The following statement contains a magic number: var write10 = store.AppendToStreamAsync(stream'  					ExpectedVersion.NoStream'  					Enumerable.Range(0' 10).Select(x =>  						TestEvent.NewTestEvent((x + 1).ToString(CultureInfo.InvariantCulture))));
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,return_partial_slice_if_not_enough_events_in_stream,The following statement contains a magic number: var read = store.ReadStreamEventsForwardAsync(stream' 9' 5' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,return_partial_slice_if_not_enough_events_in_stream,The following statement contains a magic number: var read = store.ReadStreamEventsForwardAsync(stream' 9' 5' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,return_events_in_same_order_as_written,The following statement contains a magic number: var testEvents = Enumerable.Range(0' 10).Select(x => TestEvent.NewTestEvent(x.ToString())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,be_able_to_read_single_event_from_arbitrary_position,The following statement contains a magic number: var testEvents = Enumerable.Range(0' 10).Select(x => TestEvent.NewTestEvent(x.ToString())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,be_able_to_read_single_event_from_arbitrary_position,The following statement contains a magic number: var read = store.ReadStreamEventsForwardAsync(stream' 5' 1' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,be_able_to_read_single_event_from_arbitrary_position,The following statement contains a magic number: Assert.That(EventDataComparer.Equal(testEvents[5]' read.Result.Events.Single().Event));
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,be_able_to_read_slice_from_arbitrary_position,The following statement contains a magic number: var testEvents = Enumerable.Range(0' 10).Select(x => TestEvent.NewTestEvent(x.ToString())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,be_able_to_read_slice_from_arbitrary_position,The following statement contains a magic number: var read = store.ReadStreamEventsForwardAsync(stream' 5' 2' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,be_able_to_read_slice_from_arbitrary_position,The following statement contains a magic number: var read = store.ReadStreamEventsForwardAsync(stream' 5' 2' resolveLinkTos: false);
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,be_able_to_read_slice_from_arbitrary_position,The following statement contains a magic number: Assert.That(EventDataComparer.Equal(testEvents.Skip(5).Take(2).ToArray()'  					read.Result.Events.Select(x => x.Event).ToArray()));
Magic Number,EventStore.Core.Tests.ClientAPI,read_event_stream_forward_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_stream_forward_should.cs,be_able_to_read_slice_from_arbitrary_position,The following statement contains a magic number: Assert.That(EventDataComparer.Equal(testEvents.Skip(5).Take(2).ToArray()'  					read.Result.Events.Select(x => x.Event).ToArray()));
Magic Number,EventStore.Core.Tests.ClientAPI,read_stream_events_with_unresolved_linkto,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_stream_events_with_unresolved_linkto.cs,When,The following statement contains a magic number: _testEvents = Enumerable.Range(0' 20).Select(x => TestEvent.NewTestEvent(x.ToString())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,read_stream_events_with_unresolved_linkto,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_stream_events_with_unresolved_linkto.cs,ensure_deleted_stream,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync("stream"' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_returns_no_stream_and_no_events_on_read,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_any,The following statement contains a magic number: Assert.AreEqual(4'  				_conn.AppendToStreamAsync(stream' ExpectedVersion.Any' events).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_any,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_any,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_any,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_any,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_any,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_any,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_any,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_any,The following statement contains a magic number: Assert.AreEqual(2' meta.StreamMetadata.TruncateBefore);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_no_stream,The following statement contains a magic number: Assert.AreEqual(4'  				_conn.AppendToStreamAsync(stream' ExpectedVersion.NoStream' events).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_no_stream,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_no_stream,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_no_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_no_stream,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_no_stream,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_no_stream,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_no_stream,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_no_stream,The following statement contains a magic number: Assert.AreEqual(2' meta.StreamMetadata.TruncateBefore);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_is_exact,The following statement contains a magic number: Assert.AreEqual(4' _conn.AppendToStreamAsync(stream' 1' events).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_is_exact,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_is_exact,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_is_exact,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_is_exact,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_is_exact,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_is_exact,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_is_exact,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_when_expver_is_exact,The following statement contains a magic number: Assert.AreEqual(2' meta.StreamMetadata.TruncateBefore);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_when_recreated_preserves_metadata_except_truncatebefore,The following statement contains a magic number: Assert.AreEqual(0' _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(long.MaxValue)  					.SetMaxCount(100)  					.SetDeleteRole("some-role")  					.SetCustomProperty("key1"' true)  					.SetCustomProperty("key2"' 17)  					.SetCustomProperty("key3"' "some value")).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_when_recreated_preserves_metadata_except_truncatebefore,The following statement contains a magic number: Assert.AreEqual(0' _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(long.MaxValue)  					.SetMaxCount(100)  					.SetDeleteRole("some-role")  					.SetCustomProperty("key1"' true)  					.SetCustomProperty("key2"' 17)  					.SetCustomProperty("key3"' "some value")).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_when_recreated_preserves_metadata_except_truncatebefore,The following statement contains a magic number: Assert.AreEqual(4' _conn.AppendToStreamAsync(stream' 1' events).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_when_recreated_preserves_metadata_except_truncatebefore,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_when_recreated_preserves_metadata_except_truncatebefore,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_when_recreated_preserves_metadata_except_truncatebefore,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_when_recreated_preserves_metadata_except_truncatebefore,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_when_recreated_preserves_metadata_except_truncatebefore,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_when_recreated_preserves_metadata_except_truncatebefore,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_when_recreated_preserves_metadata_except_truncatebefore,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_when_recreated_preserves_metadata_except_truncatebefore,The following statement contains a magic number: Assert.AreEqual(2' meta.StreamMetadata.TruncateBefore);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_when_recreated_preserves_metadata_except_truncatebefore,The following statement contains a magic number: Assert.AreEqual(100' meta.StreamMetadata.MaxCount);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_when_recreated_preserves_metadata_except_truncatebefore,The following statement contains a magic number: Assert.AreEqual(17' meta.StreamMetadata.GetValue<int>("key2"));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_can_be_hard_deleted,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_only_for_first_write,The following statement contains a magic number: Assert.AreEqual(4'  				_conn.AppendToStreamAsync(stream' ExpectedVersion.NoStream' events).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_only_for_first_write,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_only_for_first_write,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_only_for_first_write,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_only_for_first_write,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_only_for_first_write,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_only_for_first_write,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_only_for_first_write,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_allows_recreation_only_for_first_write,The following statement contains a magic number: Assert.AreEqual(2' meta.StreamMetadata.TruncateBefore);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_appends_both_writes_when_expver_any,The following statement contains a magic number: Assert.AreEqual(4'  				_conn.AppendToStreamAsync(stream' ExpectedVersion.Any' events1).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_appends_both_writes_when_expver_any,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_appends_both_writes_when_expver_any,The following statement contains a magic number: Assert.AreEqual(6'  				_conn.AppendToStreamAsync(stream' ExpectedVersion.Any' events2).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_appends_both_writes_when_expver_any,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_appends_both_writes_when_expver_any,The following statement contains a magic number: Assert.AreEqual(6' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_appends_both_writes_when_expver_any,The following statement contains a magic number: Assert.AreEqual(5' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_appends_both_writes_when_expver_any,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4' 5' 6}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_appends_both_writes_when_expver_any,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4' 5' 6}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_appends_both_writes_when_expver_any,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4' 5' 6}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_appends_both_writes_when_expver_any,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4' 5' 6}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_appends_both_writes_when_expver_any,The following statement contains a magic number: Assert.AreEqual(new[] {2' 3' 4' 5' 6}' res.Events.Select(x => x.OriginalEvent.EventNumber));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,soft_deleted_stream_appends_both_writes_when_expver_any,The following statement contains a magic number: Assert.AreEqual(2' meta.StreamMetadata.TruncateBefore);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_empty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: Assert.AreEqual(1' _conn.SetStreamMetadataAsync(stream' 0'  				StreamMetadata.Build().SetMaxCount(100)  					.SetDeleteRole("some-role")  					.SetCustomProperty("key1"' true)  					.SetCustomProperty("key2"' 17)  					.SetCustomProperty("key3"' "some value")).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_empty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: Assert.AreEqual(1' _conn.SetStreamMetadataAsync(stream' 0'  				StreamMetadata.Build().SetMaxCount(100)  					.SetDeleteRole("some-role")  					.SetCustomProperty("key1"' true)  					.SetCustomProperty("key2"' 17)  					.SetCustomProperty("key3"' "some value")).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_empty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_empty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_empty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: Assert.AreEqual(2' meta.MetastreamVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_empty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: Assert.AreEqual(100' meta.StreamMetadata.MaxCount);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_empty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: Assert.AreEqual(17' meta.StreamMetadata.GetValue<int>("key2"));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_nonempty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: Assert.AreEqual(1' _conn.SetStreamMetadataAsync(stream' 0'  				StreamMetadata.Build().SetMaxCount(100)  					.SetDeleteRole("some-role")  					.SetCustomProperty("key1"' true)  					.SetCustomProperty("key2"' 17)  					.SetCustomProperty("key3"' "some value")).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_nonempty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: Assert.AreEqual(1' _conn.SetStreamMetadataAsync(stream' 0'  				StreamMetadata.Build().SetMaxCount(100)  					.SetDeleteRole("some-role")  					.SetCustomProperty("key1"' true)  					.SetCustomProperty("key2"' 17)  					.SetCustomProperty("key3"' "some value")).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_nonempty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_nonempty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_nonempty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: Assert.AreEqual(2' meta.MetastreamVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_nonempty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: Assert.AreEqual(2' meta.StreamMetadata.TruncateBefore);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_nonempty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: Assert.AreEqual(100' meta.StreamMetadata.MaxCount);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_json_metadata_on_nonempty_soft_deleted_stream_recreates_stream_not_overriding_metadata,The following statement contains a magic number: Assert.AreEqual(17' meta.StreamMetadata.GetValue<int>("key2"));
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_nonjson_metadata_on_empty_soft_deleted_stream_recreates_stream_keeping_original_metadata,The following statement contains a magic number: Assert.AreEqual(1' _conn.SetStreamMetadataAsync(stream' 0' new byte[256]).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_nonjson_metadata_on_empty_soft_deleted_stream_recreates_stream_keeping_original_metadata,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_nonjson_metadata_on_empty_soft_deleted_stream_recreates_stream_keeping_original_metadata,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_nonjson_metadata_on_empty_soft_deleted_stream_recreates_stream_keeping_original_metadata,The following statement contains a magic number: Assert.AreEqual(new byte[256]' meta.StreamMetadata);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_nonjson_metadata_on_nonempty_soft_deleted_stream_recreates_stream_keeping_original_metadata,The following statement contains a magic number: Assert.AreEqual(1' _conn.SetStreamMetadataAsync(stream' 0' new byte[256]).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_nonjson_metadata_on_nonempty_soft_deleted_stream_recreates_stream_keeping_original_metadata,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_nonjson_metadata_on_nonempty_soft_deleted_stream_recreates_stream_keeping_original_metadata,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_nonjson_metadata_on_nonempty_soft_deleted_stream_recreates_stream_keeping_original_metadata,The following statement contains a magic number: Assert.AreEqual(2' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,soft_delete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\soft_delete.cs,setting_nonjson_metadata_on_nonempty_soft_deleted_stream_recreates_stream_keeping_original_metadata,The following statement contains a magic number: Assert.AreEqual(new byte[256]' meta.StreamMetadata);
Magic Number,EventStore.Core.Tests.ClientAPI,SpecificationWithLinkToToMaxCountDeletedEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SpecificationWithLinkToToMaxCountDeletedEvents.cs,Given,The following statement contains a magic number: _conn.SetStreamMetadataAsync(DeletedStreamName' ExpectedVersion.Any'  				new StreamMetadata(2' null' null' null' null)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_should.cs,allow_multiple_subscriptions_to_same_stream,The following statement contains a magic number: var appeared = new CountdownEvent(2);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_should.cs,allow_multiple_subscriptions_to_same_stream,The following statement contains a magic number: var dropped = new CountdownEvent(2);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,call_dropped_callback_when_an_error_occurs_while_processing_an_event,The following statement contains a magic number: store.AppendToStreamAsync(stream' ExpectedVersion.Any'  					new EventData(Guid.NewGuid()' "event"' false' new byte[3]' null)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,be_able_to_subscribe_to_empty_db,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,be_able_to_subscribe_to_empty_db,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,read_all_existing_events_and_keep_listening_to_new_ones,The following statement contains a magic number: var appeared = new CountdownEvent(20);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,read_all_existing_events_and_keep_listening_to_new_ones,The following statement contains a magic number: store.AppendToStreamAsync("stream-" + i.ToString()' -1'  						new EventData(Guid.NewGuid()' "et-" + i.ToString()' false' new byte[3]' null)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,read_all_existing_events_and_keep_listening_to_new_ones,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,read_all_existing_events_and_keep_listening_to_new_ones,The following statement contains a magic number: store.AppendToStreamAsync("stream-" + i.ToString()' -1'  						new EventData(Guid.NewGuid()' "et-" + i.ToString()' false' new byte[3]' null)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,read_all_existing_events_and_keep_listening_to_new_ones,The following statement contains a magic number: i < 20
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,read_all_existing_events_and_keep_listening_to_new_ones,The following statement contains a magic number: Assert.AreEqual(20' events.Count);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,read_all_existing_events_and_keep_listening_to_new_ones,The following statement contains a magic number: i < 20
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: var appeared = new CountdownEvent(10);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: store.AppendToStreamAsync("stream-" + i.ToString()' -1'  						new EventData(Guid.NewGuid()' "et-" + i.ToString()' false' new byte[3]' null)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: var allSlice = store.ReadAllEventsForwardAsync(Position.Start' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: store.AppendToStreamAsync("stream-" + i.ToString()' -1'  						new EventData(Guid.NewGuid()' "et-" + i.ToString()' false' new byte[3]' null)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: i < 20
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: Assert.AreEqual(10' events.Count);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: Assert.AreEqual("et-" + (10 + i).ToString()' events[i].OriginalEvent.EventType);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,filter_events_and_work_if_nothing_was_written_after_subscription,The following statement contains a magic number: store.AppendToStreamAsync("stream-" + i.ToString()' -1'  						new EventData(Guid.NewGuid()' "et-" + i.ToString()' false' new byte[3]' null)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,filter_events_and_work_if_nothing_was_written_after_subscription,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,filter_events_and_work_if_nothing_was_written_after_subscription,The following statement contains a magic number: var allSlice = store.ReadAllEventsForwardAsync(Position.Start' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_catching_up_should.cs,filter_events_and_work_if_nothing_was_written_after_subscription,The following statement contains a magic number: var lastEvent = allSlice.Events[allSlice.Events.Length - 2];
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_should.cs,allow_multiple_subscriptions,The following statement contains a magic number: var appeared = new CountdownEvent(2);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_all_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_all_should.cs,allow_multiple_subscriptions,The following statement contains a magic number: var dropped = new CountdownEvent(2);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,be_able_to_subscribe_to_non_existing_stream,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,be_able_to_subscribe_to_non_existing_stream,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,allow_multiple_subscriptions_to_same_stream,The following statement contains a magic number: var appeared = new CountdownEvent(2);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,call_dropped_callback_when_an_error_occurs_while_processing_an_event,The following statement contains a magic number: store.AppendToStreamAsync(stream' ExpectedVersion.Any'  					new EventData(Guid.NewGuid()' "event"' false' new byte[3]' null)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,read_all_existing_events_and_keep_listening_to_new_ones,The following statement contains a magic number: var appeared = new CountdownEvent(20);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,read_all_existing_events_and_keep_listening_to_new_ones,The following statement contains a magic number: store.AppendToStreamAsync(stream' i - 1'  						new EventData(Guid.NewGuid()' "et-" + i.ToString()' false' new byte[3]' null)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,read_all_existing_events_and_keep_listening_to_new_ones,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,read_all_existing_events_and_keep_listening_to_new_ones,The following statement contains a magic number: store.AppendToStreamAsync(stream' i - 1'  						new EventData(Guid.NewGuid()' "et-" + i.ToString()' false' new byte[3]' null)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,read_all_existing_events_and_keep_listening_to_new_ones,The following statement contains a magic number: i < 20
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,read_all_existing_events_and_keep_listening_to_new_ones,The following statement contains a magic number: Assert.AreEqual(20' events.Count);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,read_all_existing_events_and_keep_listening_to_new_ones,The following statement contains a magic number: i < 20
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: var appeared = new CountdownEvent(20);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: store.AppendToStreamAsync(stream' i - 1'  						new EventData(Guid.NewGuid()' "et-" + i.ToString()' false' new byte[3]' null)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: i < 20
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: var subscription = store.SubscribeToStreamFrom(stream'  					9'  					CatchUpSubscriptionSettings.Default'  					(x' y) => {  						events.Add(y);  						appeared.Signal();  						return Task.CompletedTask;  					}'  					_ => Log.Info("Live processing started.")'  					(x' y' z) => dropped.Signal());
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: store.AppendToStreamAsync(stream' i - 1'  						new EventData(Guid.NewGuid()' "et-" + i.ToString()' false' new byte[3]' null)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: i < 30
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: Assert.AreEqual(20' events.Count);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: Assert.AreEqual("et-" + (i + 10).ToString()' events[i].OriginalEvent.EventType);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_keep_listening_to_new_ones,The following statement contains a magic number: i < 20
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_work_if_nothing_was_written_after_subscription,The following statement contains a magic number: var appeared = new CountdownEvent(10);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_work_if_nothing_was_written_after_subscription,The following statement contains a magic number: store.AppendToStreamAsync(stream' i - 1'  						new EventData(Guid.NewGuid()' "et-" + i.ToString()' false' new byte[3]' null)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_work_if_nothing_was_written_after_subscription,The following statement contains a magic number: i < 20
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_work_if_nothing_was_written_after_subscription,The following statement contains a magic number: var subscription = store.SubscribeToStreamFrom(stream'  					9'  					CatchUpSubscriptionSettings.Default'  					(x' y) => {  						events.Add(y);  						appeared.Signal();  						return Task.CompletedTask;  					}'  					_ => Log.Info("Live processing started.")'  					(x' y' z) => dropped.Signal());
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_work_if_nothing_was_written_after_subscription,The following statement contains a magic number: Assert.AreEqual(10' events.Count);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_work_if_nothing_was_written_after_subscription,The following statement contains a magic number: Assert.AreEqual("et-" + (i + 10).ToString()' events[i].OriginalEvent.EventType);
Magic Number,EventStore.Core.Tests.ClientAPI,subscribe_to_stream_catching_up_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\subscribe_to_stream_catching_up_should.cs,filter_events_and_work_if_nothing_was_written_after_subscription,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.ClientAPI,transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\transaction.cs,should_commit_when_writing_with_exp_ver_any_even_while_somene_is_writing_in_parallel,The following statement contains a magic number: const int totalTranWrites = 500;
Magic Number,EventStore.Core.Tests.ClientAPI,transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\transaction.cs,should_commit_when_writing_with_exp_ver_any_even_while_somene_is_writing_in_parallel,The following statement contains a magic number: const int totalPlainWrites = 500;
Magic Number,EventStore.Core.Tests.ClientAPI,transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\transaction.cs,idempotency_is_correct_for_explicit_transactions_with_expected_version_any,The following statement contains a magic number: var res = store.ReadStreamEventsForwardAsync(streamId' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,update_existing_persistent_subscription_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\update_persistent_subscription.cs,existing_subscriptions_are_dropped,The following statement contains a magic number: Assert.IsTrue(_dropped.WaitOne(TimeSpan.FromSeconds(5)));
Magic Number,EventStore.Core.Tests.ClientAPI,when_committing_empty_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_committing_empty_transaction.cs,SetUp,The following statement contains a magic number: Assert.AreEqual(2' _connection.AppendToStreamAsync("test-stream"'  				ExpectedVersion.NoStream'  				_firstEvent'  				TestEvent.NewTestEvent()'  				TestEvent.NewTestEvent()).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,when_committing_empty_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_committing_empty_transaction.cs,SetUp,The following statement contains a magic number: Assert.AreEqual(2' transaction.CommitAsync().Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,when_committing_empty_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_committing_empty_transaction.cs,following_append_with_correct_expected_version_are_commited_correctly,The following statement contains a magic number: Assert.AreEqual(4'  				_connection.AppendToStreamAsync("test-stream"' 2' TestEvent.NewTestEvent()' TestEvent.NewTestEvent())  					.Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,when_committing_empty_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_committing_empty_transaction.cs,following_append_with_correct_expected_version_are_commited_correctly,The following statement contains a magic number: Assert.AreEqual(4'  				_connection.AppendToStreamAsync("test-stream"' 2' TestEvent.NewTestEvent()' TestEvent.NewTestEvent())  					.Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,when_committing_empty_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_committing_empty_transaction.cs,following_append_with_correct_expected_version_are_commited_correctly,The following statement contains a magic number: var res = _connection.ReadStreamEventsForwardAsync("test-stream"' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_committing_empty_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_committing_empty_transaction.cs,following_append_with_correct_expected_version_are_commited_correctly,The following statement contains a magic number: Assert.AreEqual(5' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_committing_empty_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_committing_empty_transaction.cs,following_append_with_correct_expected_version_are_commited_correctly,The following statement contains a magic number: i < 5
Magic Number,EventStore.Core.Tests.ClientAPI,when_committing_empty_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_committing_empty_transaction.cs,following_append_with_expected_version_any_are_commited_correctly,The following statement contains a magic number: Assert.AreEqual(4'  				_connection.AppendToStreamAsync("test-stream"' ExpectedVersion.Any' TestEvent.NewTestEvent()'  					TestEvent.NewTestEvent()).Result.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI,when_committing_empty_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_committing_empty_transaction.cs,following_append_with_expected_version_any_are_commited_correctly,The following statement contains a magic number: var res = _connection.ReadStreamEventsForwardAsync("test-stream"' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_committing_empty_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_committing_empty_transaction.cs,following_append_with_expected_version_any_are_commited_correctly,The following statement contains a magic number: Assert.AreEqual(5' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_committing_empty_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_committing_empty_transaction.cs,following_append_with_expected_version_any_are_commited_correctly,The following statement contains a magic number: i < 5
Magic Number,EventStore.Core.Tests.ClientAPI,when_committing_empty_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_committing_empty_transaction.cs,committing_first_event_with_expected_version_no_stream_is_idempotent,The following statement contains a magic number: var res = _connection.ReadStreamEventsForwardAsync("test-stream"' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_committing_empty_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_committing_empty_transaction.cs,committing_first_event_with_expected_version_no_stream_is_idempotent,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_committing_empty_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_committing_empty_transaction.cs,committing_first_event_with_expected_version_no_stream_is_idempotent,The following statement contains a magic number: i < 3
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,SetUp,The following statement contains a magic number: _connection.SetStreamMetadataAsync(Stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetMaxCount(3)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,SetUp,The following statement contains a magic number: _testEvents = Enumerable.Range(0' 5).Select(x => TestEvent.NewTestEvent(data: x.ToString())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,read_stream_forward_respects_max_count,The following statement contains a magic number: var res = _connection.ReadStreamEventsForwardAsync(Stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,read_stream_forward_respects_max_count,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,read_stream_forward_respects_max_count,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,read_stream_backward_respects_max_count,The following statement contains a magic number: var res = _connection.ReadStreamEventsBackwardAsync(Stream' -1' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,read_stream_backward_respects_max_count,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,read_stream_backward_respects_max_count,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Reverse().Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_less_strict_max_count_read_stream_forward_reads_more_events,The following statement contains a magic number: var res = _connection.ReadStreamEventsForwardAsync(Stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_less_strict_max_count_read_stream_forward_reads_more_events,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_less_strict_max_count_read_stream_forward_reads_more_events,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_less_strict_max_count_read_stream_forward_reads_more_events,The following statement contains a magic number: _connection.SetStreamMetadataAsync(Stream' 0' StreamMetadata.Build().SetMaxCount(4)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_less_strict_max_count_read_stream_forward_reads_more_events,The following statement contains a magic number: res = _connection.ReadStreamEventsForwardAsync(Stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_less_strict_max_count_read_stream_forward_reads_more_events,The following statement contains a magic number: Assert.AreEqual(4' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_more_strict_max_count_read_stream_forward_reads_less_events,The following statement contains a magic number: var res = _connection.ReadStreamEventsForwardAsync(Stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_more_strict_max_count_read_stream_forward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_more_strict_max_count_read_stream_forward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_more_strict_max_count_read_stream_forward_reads_less_events,The following statement contains a magic number: _connection.SetStreamMetadataAsync(Stream' 0' StreamMetadata.Build().SetMaxCount(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_more_strict_max_count_read_stream_forward_reads_less_events,The following statement contains a magic number: res = _connection.ReadStreamEventsForwardAsync(Stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_more_strict_max_count_read_stream_forward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(2' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_more_strict_max_count_read_stream_forward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(3).Select(x => x.EventId).ToArray()'  				res.Events.Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_less_strict_max_count_read_stream_backward_reads_more_events,The following statement contains a magic number: var res = _connection.ReadStreamEventsBackwardAsync(Stream' -1' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_less_strict_max_count_read_stream_backward_reads_more_events,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_less_strict_max_count_read_stream_backward_reads_more_events,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Reverse().Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_less_strict_max_count_read_stream_backward_reads_more_events,The following statement contains a magic number: _connection.SetStreamMetadataAsync(Stream' 0' StreamMetadata.Build().SetMaxCount(4)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_less_strict_max_count_read_stream_backward_reads_more_events,The following statement contains a magic number: res = _connection.ReadStreamEventsBackwardAsync(Stream' -1' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_less_strict_max_count_read_stream_backward_reads_more_events,The following statement contains a magic number: Assert.AreEqual(4' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_more_strict_max_count_read_stream_backward_reads_less_events,The following statement contains a magic number: var res = _connection.ReadStreamEventsBackwardAsync(Stream' -1' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_more_strict_max_count_read_stream_backward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_more_strict_max_count_read_stream_backward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Reverse().Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_more_strict_max_count_read_stream_backward_reads_less_events,The following statement contains a magic number: _connection.SetStreamMetadataAsync(Stream' 0' StreamMetadata.Build().SetMaxCount(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_more_strict_max_count_read_stream_backward_reads_less_events,The following statement contains a magic number: res = _connection.ReadStreamEventsBackwardAsync(Stream' -1' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_more_strict_max_count_read_stream_backward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(2' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_max_count_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_max_count_set_for_stream.cs,after_setting_more_strict_max_count_read_stream_backward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(3).Select(x => x.EventId).ToArray()'  				res.Events.Reverse().Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,When,The following statement contains a magic number: _testEvents = Enumerable.Range(0' 5).Select(x => TestEvent.NewTestEvent(data: x.ToString())).ToArray();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,read_event_respects_truncatebefore,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,read_event_respects_truncatebefore,The following statement contains a magic number: res = _conn.ReadEventAsync(stream' 2' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,read_event_respects_truncatebefore,The following statement contains a magic number: Assert.AreEqual(_testEvents[2].EventId' res.Event.Value.OriginalEvent.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,read_stream_forward_respects_truncatebefore,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,read_stream_forward_respects_truncatebefore,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,read_stream_forward_respects_truncatebefore,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,read_stream_forward_respects_truncatebefore,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,read_stream_backward_respects_truncatebefore,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,read_stream_backward_respects_truncatebefore,The following statement contains a magic number: var res = _conn.ReadStreamEventsBackwardAsync(stream' -1' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,read_stream_backward_respects_truncatebefore,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,read_stream_backward_respects_truncatebefore,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Reverse().Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_event_reads_more_events,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_event_reads_more_events,The following statement contains a magic number: res = _conn.ReadEventAsync(stream' 2' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_event_reads_more_events,The following statement contains a magic number: Assert.AreEqual(_testEvents[2].EventId' res.Event.Value.OriginalEvent.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_event_reads_less_events,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_event_reads_less_events,The following statement contains a magic number: res = _conn.ReadEventAsync(stream' 2' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_event_reads_less_events,The following statement contains a magic number: Assert.AreEqual(_testEvents[2].EventId' res.Event.Value.OriginalEvent.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_event_reads_less_events,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(3)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_event_reads_less_events,The following statement contains a magic number: res = _conn.ReadEventAsync(stream' 2' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_event_reads_less_events,The following statement contains a magic number: res = _conn.ReadEventAsync(stream' 3' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_event_reads_less_events,The following statement contains a magic number: Assert.AreEqual(_testEvents[3].EventId' res.Event.Value.OriginalEvent.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_event_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_event_read,The following statement contains a magic number: res = _conn.ReadEventAsync(stream' 2' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_event_read,The following statement contains a magic number: Assert.AreEqual(_testEvents[2].EventId' res.Event.Value.OriginalEvent.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_event_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(2).SetMaxCount(4)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_event_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(2).SetMaxCount(4)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_event_read,The following statement contains a magic number: res = _conn.ReadEventAsync(stream' 2' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_event_read,The following statement contains a magic number: Assert.AreEqual(_testEvents[2].EventId' res.Event.Value.OriginalEvent.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_event_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_event_read,The following statement contains a magic number: res = _conn.ReadEventAsync(stream' 2' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_event_read,The following statement contains a magic number: Assert.AreEqual(_testEvents[2].EventId' res.Event.Value.OriginalEvent.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_event_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(2).SetMaxCount(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_event_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(2).SetMaxCount(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_event_read,The following statement contains a magic number: res = _conn.ReadEventAsync(stream' 2' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_event_read,The following statement contains a magic number: res = _conn.ReadEventAsync(stream' 3' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_event_read,The following statement contains a magic number: Assert.AreEqual(_testEvents[3].EventId' res.Event.Value.OriginalEvent.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_stream_forward_reads_more_events,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_stream_forward_reads_more_events,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_stream_forward_reads_more_events,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_stream_forward_reads_more_events,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_stream_forward_reads_more_events,The following statement contains a magic number: res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_stream_forward_reads_more_events,The following statement contains a magic number: Assert.AreEqual(4' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_forward_reads_less_events,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_forward_reads_less_events,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_forward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_forward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_forward_reads_less_events,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(3)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_forward_reads_less_events,The following statement contains a magic number: res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_forward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(2' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_forward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(3).Select(x => x.EventId).ToArray()'  				res.Events.Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_forward_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_forward_read,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_forward_read,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_forward_read,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_forward_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(2).SetMaxCount(4)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_forward_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(2).SetMaxCount(4)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_forward_read,The following statement contains a magic number: res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_forward_read,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_forward_read,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_forward_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_forward_read,The following statement contains a magic number: var res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_forward_read,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_forward_read,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_forward_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(2).SetMaxCount(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_forward_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(2).SetMaxCount(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_forward_read,The following statement contains a magic number: res = _conn.ReadStreamEventsForwardAsync(stream' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_forward_read,The following statement contains a magic number: Assert.AreEqual(2' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_forward_read,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(3).Select(x => x.EventId).ToArray()'  				res.Events.Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_stream_backward_reads_more_events,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_stream_backward_reads_more_events,The following statement contains a magic number: var res = _conn.ReadStreamEventsBackwardAsync(stream' -1' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_stream_backward_reads_more_events,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_stream_backward_reads_more_events,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Reverse().Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_stream_backward_reads_more_events,The following statement contains a magic number: res = _conn.ReadStreamEventsBackwardAsync(stream' -1' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_less_strict_truncatebefore_read_stream_backward_reads_more_events,The following statement contains a magic number: Assert.AreEqual(4' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_backward_reads_less_events,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_backward_reads_less_events,The following statement contains a magic number: var res = _conn.ReadStreamEventsBackwardAsync(stream' -1' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_backward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_backward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Reverse().Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_backward_reads_less_events,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(3)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_backward_reads_less_events,The following statement contains a magic number: res = _conn.ReadStreamEventsBackwardAsync(stream' -1' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_backward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(2' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,after_setting_more_strict_truncatebefore_read_stream_backward_reads_less_events,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(3).Select(x => x.EventId).ToArray()'  				res.Events.Reverse().Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_backward_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_backward_read,The following statement contains a magic number: var res = _conn.ReadStreamEventsBackwardAsync(stream' -1' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_backward_read,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_backward_read,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Reverse().Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_backward_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(2).SetMaxCount(4)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_backward_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(2).SetMaxCount(4)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_backward_read,The following statement contains a magic number: res = _conn.ReadStreamEventsBackwardAsync(stream' -1' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_backward_read,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,less_strict_max_count_doesnt_change_anything_for_stream_backward_read,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Reverse().Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_backward_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' ExpectedVersion.NoStream'  				StreamMetadata.Build().SetTruncateBefore(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_backward_read,The following statement contains a magic number: var res = _conn.ReadStreamEventsBackwardAsync(stream' -1' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_backward_read,The following statement contains a magic number: Assert.AreEqual(3' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_backward_read,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(2).Select(x => x.EventId).ToArray()'  				res.Events.Reverse().Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_backward_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(2).SetMaxCount(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_backward_read,The following statement contains a magic number: _conn.SetStreamMetadataAsync(stream' 0' StreamMetadata.Build().SetTruncateBefore(2).SetMaxCount(2)).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_backward_read,The following statement contains a magic number: res = _conn.ReadStreamEventsBackwardAsync(stream' -1' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_backward_read,The following statement contains a magic number: Assert.AreEqual(2' res.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI,when_having_truncatebefore_set_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_having_truncatebefore_set_for_stream.cs,more_strict_max_count_gives_less_events_for_stream_backward_read,The following statement contains a magic number: Assert.AreEqual(_testEvents.Skip(3).Select(x => x.EventId).ToArray()'  				res.Events.Reverse().Select(x => x.Event.EventId).ToArray());
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_byte_array,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_byte_array.cs,trying_to_set_metadata_with_wrong_expected_version_fails,The following statement contains a magic number: Assert.That(() => _connection.SetStreamMetadataAsync(stream' 5' new byte[100]).Wait()'  				Throws.Exception.InstanceOf<AggregateException>()  					.With.InnerException.InstanceOf<WrongExpectedVersionException>());
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_byte_array,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_byte_array.cs,trying_to_set_metadata_with_wrong_expected_version_fails,The following statement contains a magic number: Assert.That(() => _connection.SetStreamMetadataAsync(stream' 5' new byte[100]).Wait()'  				Throws.Exception.InstanceOf<AggregateException>()  					.With.InnerException.InstanceOf<WrongExpectedVersionException>());
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_metadata_few_times_returns_last_metadata_info,The following statement contains a magic number: var metadata =  				StreamMetadata.Create(17' TimeSpan.FromSeconds(0xDEADBEEF)' 10' TimeSpan.FromSeconds(0xABACABA));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_metadata_few_times_returns_last_metadata_info,The following statement contains a magic number: var metadata =  				StreamMetadata.Create(17' TimeSpan.FromSeconds(0xDEADBEEF)' 10' TimeSpan.FromSeconds(0xABACABA));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_metadata_few_times_returns_last_metadata_info,The following statement contains a magic number: metadata = StreamMetadata.Create(37' TimeSpan.FromSeconds(0xBEEFDEAD)' 24'  				TimeSpan.FromSeconds(0xDABACABAD));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_metadata_few_times_returns_last_metadata_info,The following statement contains a magic number: metadata = StreamMetadata.Create(37' TimeSpan.FromSeconds(0xBEEFDEAD)' 24'  				TimeSpan.FromSeconds(0xDABACABAD));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,trying_to_set_metadata_with_wrong_expected_version_fails,The following statement contains a magic number: Assert.That(() => _connection.SetStreamMetadataAsync(stream' 2' StreamMetadata.Create()).Result'  				Throws.Exception.InstanceOf<AggregateException>()  					.With.InnerException.InstanceOf<WrongExpectedVersionException>());
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_metadata_with_expected_version_any_works,The following statement contains a magic number: var metadata =  				StreamMetadata.Create(17' TimeSpan.FromSeconds(0xDEADBEEF)' 10' TimeSpan.FromSeconds(0xABACABA));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_metadata_with_expected_version_any_works,The following statement contains a magic number: var metadata =  				StreamMetadata.Create(17' TimeSpan.FromSeconds(0xDEADBEEF)' 10' TimeSpan.FromSeconds(0xABACABA));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_metadata_with_expected_version_any_works,The following statement contains a magic number: metadata = StreamMetadata.Create(37' TimeSpan.FromSeconds(0xBEEFDEAD)' 24'  				TimeSpan.FromSeconds(0xDABACABAD));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_metadata_with_expected_version_any_works,The following statement contains a magic number: metadata = StreamMetadata.Create(37' TimeSpan.FromSeconds(0xBEEFDEAD)' 24'  				TimeSpan.FromSeconds(0xDABACABAD));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_metadata_for_not_existing_stream_works,The following statement contains a magic number: var metadata =  				StreamMetadata.Create(17' TimeSpan.FromSeconds(0xDEADBEEF)' 10' TimeSpan.FromSeconds(0xABACABA));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_metadata_for_not_existing_stream_works,The following statement contains a magic number: var metadata =  				StreamMetadata.Create(17' TimeSpan.FromSeconds(0xDEADBEEF)' 10' TimeSpan.FromSeconds(0xABACABA));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_metadata_for_existing_stream_works,The following statement contains a magic number: var metadata =  				StreamMetadata.Create(17' TimeSpan.FromSeconds(0xDEADBEEF)' 10' TimeSpan.FromSeconds(0xABACABA));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_metadata_for_existing_stream_works,The following statement contains a magic number: var metadata =  				StreamMetadata.Create(17' TimeSpan.FromSeconds(0xDEADBEEF)' 10' TimeSpan.FromSeconds(0xABACABA));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,getting_metadata_for_deleted_stream_returns_empty_stream_metadata_and_signals_stream_deletion,The following statement contains a magic number: var metadata =  				StreamMetadata.Create(17' TimeSpan.FromSeconds(0xDEADBEEF)' 10' TimeSpan.FromSeconds(0xABACABA));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,getting_metadata_for_deleted_stream_returns_empty_stream_metadata_and_signals_stream_deletion,The following statement contains a magic number: var metadata =  				StreamMetadata.Create(17' TimeSpan.FromSeconds(0xDEADBEEF)' 10' TimeSpan.FromSeconds(0xABACABA));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_correctly_formatted_metadata_as_raw_allows_to_read_it_as_structured_metadata,The following statement contains a magic number: Assert.AreEqual(17' meta.StreamMetadata.MaxCount);
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_correctly_formatted_metadata_as_raw_allows_to_read_it_as_structured_metadata,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(123321)' meta.StreamMetadata.MaxAge);
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_correctly_formatted_metadata_as_raw_allows_to_read_it_as_structured_metadata,The following statement contains a magic number: Assert.AreEqual(23' meta.StreamMetadata.TruncateBefore);
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_correctly_formatted_metadata_as_raw_allows_to_read_it_as_structured_metadata,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(7654321)' meta.StreamMetadata.CacheControl);
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_correctly_formatted_metadata_as_raw_allows_to_read_it_as_structured_metadata,The following statement contains a magic number: Assert.AreEqual(-179' meta.StreamMetadata.GetValue<int>("customInt"));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_correctly_formatted_metadata_as_raw_allows_to_read_it_as_structured_metadata,The following statement contains a magic number: Assert.AreEqual(1.7' meta.StreamMetadata.GetValue<double>("customDouble"));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_correctly_formatted_metadata_as_raw_allows_to_read_it_as_structured_metadata,The following statement contains a magic number: Assert.AreEqual(123123123123123123L' meta.StreamMetadata.GetValue<long>("customLong"));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_structured_metadata_with_custom_properties_returns_them_untouched,The following statement contains a magic number: StreamMetadata metadata = StreamMetadata.Build()  				.SetMaxCount(17)  				.SetMaxAge(TimeSpan.FromSeconds(123321))  				.SetTruncateBefore(23)  				.SetCacheControl(TimeSpan.FromSeconds(7654321))  				.SetReadRole("readRole")  				.SetWriteRole("writeRole")  				.SetDeleteRole("deleteRole")  				//.SetMetadataReadRole("metaReadRole")  				.SetMetadataWriteRole("metaWriteRole")  				.SetCustomProperty("customString"' "a string")  				.SetCustomProperty("customInt"' -179)  				.SetCustomProperty("customDouble"' 1.7)  				.SetCustomProperty("customLong"' 123123123123123123L)  				.SetCustomProperty("customBool"' true)  				.SetCustomProperty("customNullable"' new int?())  				.SetCustomPropertyWithValueAsRawJsonString("customRawJson"'  					@"{                                                                                                         ""subProperty"": 999                                                                                                   }");
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_structured_metadata_with_custom_properties_returns_them_untouched,The following statement contains a magic number: StreamMetadata metadata = StreamMetadata.Build()  				.SetMaxCount(17)  				.SetMaxAge(TimeSpan.FromSeconds(123321))  				.SetTruncateBefore(23)  				.SetCacheControl(TimeSpan.FromSeconds(7654321))  				.SetReadRole("readRole")  				.SetWriteRole("writeRole")  				.SetDeleteRole("deleteRole")  				//.SetMetadataReadRole("metaReadRole")  				.SetMetadataWriteRole("metaWriteRole")  				.SetCustomProperty("customString"' "a string")  				.SetCustomProperty("customInt"' -179)  				.SetCustomProperty("customDouble"' 1.7)  				.SetCustomProperty("customLong"' 123123123123123123L)  				.SetCustomProperty("customBool"' true)  				.SetCustomProperty("customNullable"' new int?())  				.SetCustomPropertyWithValueAsRawJsonString("customRawJson"'  					@"{                                                                                                         ""subProperty"": 999                                                                                                   }");
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_structured_metadata_with_custom_properties_returns_them_untouched,The following statement contains a magic number: StreamMetadata metadata = StreamMetadata.Build()  				.SetMaxCount(17)  				.SetMaxAge(TimeSpan.FromSeconds(123321))  				.SetTruncateBefore(23)  				.SetCacheControl(TimeSpan.FromSeconds(7654321))  				.SetReadRole("readRole")  				.SetWriteRole("writeRole")  				.SetDeleteRole("deleteRole")  				//.SetMetadataReadRole("metaReadRole")  				.SetMetadataWriteRole("metaWriteRole")  				.SetCustomProperty("customString"' "a string")  				.SetCustomProperty("customInt"' -179)  				.SetCustomProperty("customDouble"' 1.7)  				.SetCustomProperty("customLong"' 123123123123123123L)  				.SetCustomProperty("customBool"' true)  				.SetCustomProperty("customNullable"' new int?())  				.SetCustomPropertyWithValueAsRawJsonString("customRawJson"'  					@"{                                                                                                         ""subProperty"": 999                                                                                                   }");
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_structured_metadata_with_custom_properties_returns_them_untouched,The following statement contains a magic number: StreamMetadata metadata = StreamMetadata.Build()  				.SetMaxCount(17)  				.SetMaxAge(TimeSpan.FromSeconds(123321))  				.SetTruncateBefore(23)  				.SetCacheControl(TimeSpan.FromSeconds(7654321))  				.SetReadRole("readRole")  				.SetWriteRole("writeRole")  				.SetDeleteRole("deleteRole")  				//.SetMetadataReadRole("metaReadRole")  				.SetMetadataWriteRole("metaWriteRole")  				.SetCustomProperty("customString"' "a string")  				.SetCustomProperty("customInt"' -179)  				.SetCustomProperty("customDouble"' 1.7)  				.SetCustomProperty("customLong"' 123123123123123123L)  				.SetCustomProperty("customBool"' true)  				.SetCustomProperty("customNullable"' new int?())  				.SetCustomPropertyWithValueAsRawJsonString("customRawJson"'  					@"{                                                                                                         ""subProperty"": 999                                                                                                   }");
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_structured_metadata_with_custom_properties_returns_them_untouched,The following statement contains a magic number: StreamMetadata metadata = StreamMetadata.Build()  				.SetMaxCount(17)  				.SetMaxAge(TimeSpan.FromSeconds(123321))  				.SetTruncateBefore(23)  				.SetCacheControl(TimeSpan.FromSeconds(7654321))  				.SetReadRole("readRole")  				.SetWriteRole("writeRole")  				.SetDeleteRole("deleteRole")  				//.SetMetadataReadRole("metaReadRole")  				.SetMetadataWriteRole("metaWriteRole")  				.SetCustomProperty("customString"' "a string")  				.SetCustomProperty("customInt"' -179)  				.SetCustomProperty("customDouble"' 1.7)  				.SetCustomProperty("customLong"' 123123123123123123L)  				.SetCustomProperty("customBool"' true)  				.SetCustomProperty("customNullable"' new int?())  				.SetCustomPropertyWithValueAsRawJsonString("customRawJson"'  					@"{                                                                                                         ""subProperty"": 999                                                                                                   }");
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_structured_metadata_with_custom_properties_returns_them_untouched,The following statement contains a magic number: StreamMetadata metadata = StreamMetadata.Build()  				.SetMaxCount(17)  				.SetMaxAge(TimeSpan.FromSeconds(123321))  				.SetTruncateBefore(23)  				.SetCacheControl(TimeSpan.FromSeconds(7654321))  				.SetReadRole("readRole")  				.SetWriteRole("writeRole")  				.SetDeleteRole("deleteRole")  				//.SetMetadataReadRole("metaReadRole")  				.SetMetadataWriteRole("metaWriteRole")  				.SetCustomProperty("customString"' "a string")  				.SetCustomProperty("customInt"' -179)  				.SetCustomProperty("customDouble"' 1.7)  				.SetCustomProperty("customLong"' 123123123123123123L)  				.SetCustomProperty("customBool"' true)  				.SetCustomProperty("customNullable"' new int?())  				.SetCustomPropertyWithValueAsRawJsonString("customRawJson"'  					@"{                                                                                                         ""subProperty"": 999                                                                                                   }");
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_structured_metadata_with_custom_properties_returns_them_untouched,The following statement contains a magic number: StreamMetadata metadata = StreamMetadata.Build()  				.SetMaxCount(17)  				.SetMaxAge(TimeSpan.FromSeconds(123321))  				.SetTruncateBefore(23)  				.SetCacheControl(TimeSpan.FromSeconds(7654321))  				.SetReadRole("readRole")  				.SetWriteRole("writeRole")  				.SetDeleteRole("deleteRole")  				//.SetMetadataReadRole("metaReadRole")  				.SetMetadataWriteRole("metaWriteRole")  				.SetCustomProperty("customString"' "a string")  				.SetCustomProperty("customInt"' -179)  				.SetCustomProperty("customDouble"' 1.7)  				.SetCustomProperty("customLong"' 123123123123123123L)  				.SetCustomProperty("customBool"' true)  				.SetCustomProperty("customNullable"' new int?())  				.SetCustomPropertyWithValueAsRawJsonString("customRawJson"'  					@"{                                                                                                         ""subProperty"": 999                                                                                                   }");
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_structured_metadata_with_custom_properties_returns_them_untouched,The following statement contains a magic number: Assert.AreEqual(17' meta.StreamMetadata.MaxCount);
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_structured_metadata_with_custom_properties_returns_them_untouched,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(123321)' meta.StreamMetadata.MaxAge);
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_structured_metadata_with_custom_properties_returns_them_untouched,The following statement contains a magic number: Assert.AreEqual(23' meta.StreamMetadata.TruncateBefore);
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_structured_metadata_with_custom_properties_returns_them_untouched,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(7654321)' meta.StreamMetadata.CacheControl);
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_structured_metadata_with_custom_properties_returns_them_untouched,The following statement contains a magic number: Assert.AreEqual(-179' meta.StreamMetadata.GetValue<int>("customInt"));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_structured_metadata_with_custom_properties_returns_them_untouched,The following statement contains a magic number: Assert.AreEqual(1.7' meta.StreamMetadata.GetValue<double>("customDouble"));
Magic Number,EventStore.Core.Tests.ClientAPI,when_working_with_stream_metadata_as_structured_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\when_working_with_stream_metadata_as_structured_info.cs,setting_structured_metadata_with_custom_properties_returns_them_untouched,The following statement contains a magic number: Assert.AreEqual(123123123123123123L' meta.StreamMetadata.GetValue<long>("customLong"));
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,append_to_stream_with_hash_collision,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream_with_hash_collision.cs,TestFixtureSetUp,The following statement contains a magic number: _node = new MiniNode(PathName'  				inMemDb: false'  				memTableSize: 20'  				hashCollisionReadLimit: 1'  				indexBitnessVersion: EventStore.Core.Index.PTableVersions.IndexV1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,append_to_stream_with_hash_collision,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream_with_hash_collision.cs,should_throw_wrong_expected_version,The following statement contains a magic number: i < 100
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,append_to_stream_with_hash_collision,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\append_to_stream_with_hash_collision.cs,should_throw_wrong_expected_version,The following statement contains a magic number: _node = new MiniNode(PathName'  				tcpPort' tcpSecPort' httpPort' inMemDb: false'  				memTableSize: 20'  				hashCollisionReadLimit: 1'  				indexBitnessVersion: EventStore.Core.Index.PTableVersions.IndexV1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,read_event_with_hash_collision,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_with_hash_collision.cs,TestFixtureSetUp,The following statement contains a magic number: _node = new MiniNode(PathName'  				inMemDb: false'  				memTableSize: 20'  				hashCollisionReadLimit: 1'  				indexBitnessVersion: EventStore.Core.Index.PTableVersions.IndexV1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,read_event_with_hash_collision,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_with_hash_collision.cs,should_return_not_found,The following statement contains a magic number: i < 100
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,read_event_with_hash_collision,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_event_with_hash_collision.cs,should_return_not_found,The following statement contains a magic number: _node = new MiniNode(PathName'  				tcpPort' tcpSecPort' httpPort' inMemDb: false'  				memTableSize: 20'  				hashCollisionReadLimit: 1'  				indexBitnessVersion: EventStore.Core.Index.PTableVersions.IndexV1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,read_stream_events_backward_with_hash_collision,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_stream_events_backward_with_hash_collision.cs,TestFixtureSetUp,The following statement contains a magic number: _node = new MiniNode(PathName'  				inMemDb: false'  				memTableSize: 20'  				hashCollisionReadLimit: 1'  				indexBitnessVersion: EventStore.Core.Index.PTableVersions.IndexV1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,read_stream_events_backward_with_hash_collision,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_stream_events_backward_with_hash_collision.cs,should_return_stream_not_found,The following statement contains a magic number: i < 100
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,read_stream_events_backward_with_hash_collision,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_stream_events_backward_with_hash_collision.cs,should_return_stream_not_found,The following statement contains a magic number: _node = new MiniNode(PathName'  				tcpPort' tcpSecPort' httpPort' inMemDb: false'  				memTableSize: 20'  				hashCollisionReadLimit: 1'  				indexBitnessVersion: EventStore.Core.Index.PTableVersions.IndexV1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,read_stream_events_forward_with_hash_collision,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_stream_events_forward_with_hash_collision.cs,TestFixtureSetUp,The following statement contains a magic number: _node = new MiniNode(PathName'  				inMemDb: false'  				memTableSize: 20'  				hashCollisionReadLimit: 1'  				indexBitnessVersion: EventStore.Core.Index.PTableVersions.IndexV1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,read_stream_events_forward_with_hash_collision,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_stream_events_forward_with_hash_collision.cs,should_return_stream_not_found,The following statement contains a magic number: i < 100
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,read_stream_events_forward_with_hash_collision,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\read_stream_events_forward_with_hash_collision.cs,should_return_stream_not_found,The following statement contains a magic number: _node = new MiniNode(PathName'  				tcpPort' tcpSecPort' httpPort' inMemDb: false'  				memTableSize: 20'  				hashCollisionReadLimit: 1'  				indexBitnessVersion: EventStore.Core.Index.PTableVersions.IndexV1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,HashCollisionTestFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,Setup,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV1' maxSize: _maxMemTableSize)'  				() => _fakeReader'  				PTableVersions.IndexV1'  				5'  				maxSizeForMemory: _maxMemTableSize'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,HashCollisionTestFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,Setup,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV1' maxSize: _maxMemTableSize)'  				() => _fakeReader'  				PTableVersions.IndexV1'  				5'  				maxSizeForMemory: _maxMemTableSize'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,HashCollisionTestFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,Setup,The following statement contains a magic number: System.Threading.Thread.Sleep(500);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_does_not_exist,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,given,The following statement contains a magic number: _hashCollisionReadLimit = 5;
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_does_not_exist,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_does_not_exist,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 1' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_out_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_out_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 1' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_out_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 2' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_out_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 2' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_out_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 3' 9);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_out_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 3' 9);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_out_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 4' 13);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_out_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 4' 13);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_in_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,given,The following statement contains a magic number: _hashCollisionReadLimit = 5;
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_in_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_in_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 1' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_in_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 2' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_in_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 2' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_in_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 3' 9);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_in_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 3' 9);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_in_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 4' 13);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_stream_is_in_of_range_of_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 4' 13);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_hash_read_limit_is_not_reached,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,given,The following statement contains a magic number: _hashCollisionReadLimit = 3;
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_hash_read_limit_is_not_reached,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_hash_read_limit_is_not_reached,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 1' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_hash_read_limit_is_not_reached,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 2' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_hash_read_limit_is_not_reached,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 2' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_hash_read_limit_is_not_reached,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 3' 9);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_hash_read_limit_is_not_reached,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 3' 9);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,given,The following statement contains a magic number: _hashCollisionReadLimit = 5;
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' streamId' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' streamId' 0' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' streamId' 1' 6);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' streamId' 2' 8);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' streamId' 2' 8);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(2' result.Records[0].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(6' result.Records[1].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(streamId' result.Records[2].EventStreamId);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(2' result.Records[2].EventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(2' result.Records[2].EventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(8' result.Records[2].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(8' result.Records[2].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: var result = _indexReader.ReadStreamEventsBackward(streamId' 2' int.MaxValue);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(streamId' result.Records[2].EventStreamId);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(0' result.Records[2].EventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(2' result.Records[2].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(2' result.Records[2].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(6' result.Records[1].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(2' result.Records[0].EventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(8' result.Records[0].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_single_event_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(2' result.Record.LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,given,The following statement contains a magic number: _maxMemTableSize = 3;
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,given,The following statement contains a magic number: _hashCollisionReadLimit = 5;
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' streamId' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' streamId' 1' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' streamId' 2' 6);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' streamId' 2' 6);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: System.Threading.Thread.Sleep(500);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV2' maxSize: _maxMemTableSize)'  				() => _fakeReader'  				PTableVersions.IndexV2'  				5'  				maxSizeForMemory: _maxMemTableSize'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV2' maxSize: _maxMemTableSize)'  				() => _fakeReader'  				PTableVersions.IndexV2'  				5'  				maxSizeForMemory: _maxMemTableSize'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,when,The following statement contains a magic number: _tableIndex.Add(1' streamId' 0' 8);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_return_the_correct_last_event_number,The following statement contains a magic number: Assert.AreEqual(2' result);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(2' result.Records[0].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(4' result.Records[1].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(streamId' result.Records[2].EventStreamId);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(2' result.Records[2].EventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(2' result.Records[2].EventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(6' result.Records[2].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_forward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(6' result.Records[2].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: var result = _indexReader.ReadStreamEventsBackward(streamId' 2' int.MaxValue);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(streamId' result.Records[2].EventStreamId);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(0' result.Records[2].EventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(2' result.Records[2].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(2' result.Records[2].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(4' result.Records[1].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(2' result.Records[0].EventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_stream_events_backward_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(6' result.Records[0].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,should_be_able_to_read_single_event_and_exclude_duplicates,The following statement contains a magic number: Assert.AreEqual(2' result.Record.LogPosition);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,FakeReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_hash_collisions.cs,TryReadAt,The following statement contains a magic number: var record = (LogRecord)new PrepareLogRecord(position' Guid.NewGuid()' Guid.NewGuid()' 0' 0'  				position % 2 == 0 ? "account--696193173" : "LPN-FC002_LPK51001"' -1' DateTime.UtcNow' PrepareFlags.None'  				"type"' new byte[0]' null);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_no_hash_collisions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_no_hash_collisions_read_index_should.cs,return_correct_range_on_from_start_range_query_for_event_stream_with_two_events,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ESES"' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_no_hash_collisions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_no_hash_collisions_read_index_should.cs,return_correct_range_on_from_start_range_query_for_event_stream_with_two_events,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_no_hash_collisions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_no_hash_collisions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_event_stream_with_two_events_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ESES"' 1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_no_hash_collisions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_no_hash_collisions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_event_stream_with_two_events_with_specific_version,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_no_hash_collisions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_no_hash_collisions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_event_stream_with_two_events_with_from_end_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ESES"' -1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_no_hash_collisions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_no_hash_collisions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_event_stream_with_two_events_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_no_hash_collisions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_no_hash_collisions_read_index_should.cs,not_find_record_with_nonexistent_version_for_event_stream_with_two_events,The following statement contains a magic number: var result = ReadIndex.ReadEvent("ESES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_no_hash_collisions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_no_hash_collisions_read_index_should.cs,not_find_record_with_non_existing_version_for_non_existing_event_stream_with_same_hash_as_stream_with_two_events,The following statement contains a magic number: var result = ReadIndex.ReadEvent("NONE"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_no_hash_collisions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_no_hash_collisions_read_index_should.cs,not_return_range_on_from_start_range_query_for_non_existing_stream_with_same_hash_as_stream_with_two_events,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("NONE"' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_no_hash_collisions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_no_hash_collisions_read_index_should.cs,not_return_range_on_from_end_query_for_non_existing_stream_with_same_hash_as_stream_with_two_events,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("NONE"' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_no_hash_collisions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_no_hash_collisions_read_index_should.cs,not_return_range_on_from_end_query_with_from_end_version_for_non_existing_stream_with_same_hash_as_stream_with_two_events,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("NONE"' -1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_single_deleted_event_stream_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_single_deleted_event_stream_read_index_should.cs,return_all_events_on_read_all_forward,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_single_deleted_event_stream_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_single_deleted_event_stream_read_index_should.cs,return_all_events_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(2' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_single_deleted_event_stream_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_single_deleted_event_stream_read_index_should.cs,return_all_events_on_read_all_backward,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_single_deleted_event_stream_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_single_deleted_event_stream_read_index_should.cs,return_all_events_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(2' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should.cs,return_all_events_on_read_all_forward,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should.cs,return_all_events_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(4' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should.cs,return_all_events_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_delete2' events[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should.cs,return_all_events_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepare3' events[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should.cs,return_all_events_on_read_all_backward,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should.cs,return_all_events_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(4' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should.cs,return_all_events_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepare1' events[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_one_event_each_with_second_stream_deleted_read_index_should.cs,return_all_events_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepare2' events[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _prepares1 = new EventRecord[3];
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _prepares2 = new EventRecord[5];
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _prepares3 = new EventRecord[7];
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_last_event_version_for_first_stream,The following statement contains a magic number: Assert.AreEqual(2' ReadIndex.GetStreamLastEventNumber("AB"));
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_last_log_record_for_first_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("AB"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_last_log_record_for_first_stream,The following statement contains a magic number: Assert.AreEqual(_prepares1[2]' result.Record);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,not_find_record_with_version_3_in_first_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("AB"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_not_found_for_record_version_3_for_stream_with_same_hash_as_first_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("FY"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_not_found_for_record_version_2_for_stream_with_same_hash_as_first_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("FY"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_start_range_query_for_first_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("AB"' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_start_range_query_for_first_stream,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_range_for_3_1_range_on_from_start_range_query_request_for_first_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("AB"' 3' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_range_on_from_start_range_query_for_non_existing_stream_with_same_hash_as_first_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("FY"' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_3_1_range_on_from_start_range_query_for_non_existing_stream_with_same_hash_as_first_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("FY"' 3' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_first_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("AB"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_first_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("AB"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_first_stream_with_specific_version,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_first_stream_with_from_end_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("AB"' -1' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_first_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_from_end_1_range_on_from_end_range_query_for_first_stream,The following statement contains a magic number: Assert.AreEqual(_prepares1[2]' result.Records[0]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_range_for_3_1_range_on_from_end_range_query_request_for_first_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("AB"' 3' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_range_on_from_end_range_query_for_non_existing_stream_with_same_hash_as_first_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("FY"' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_3_1_range_on_from_end_range_query_for_non_existing_stream_with_same_hash_as_first_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("FY"' 3' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_last_event_version_for_second_stream,The following statement contains a magic number: Assert.AreEqual(4' ReadIndex.GetStreamLastEventNumber("CD"));
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_last_log_record_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("CD"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_last_log_record_for_second_stream,The following statement contains a magic number: Assert.AreEqual(_prepares2[4]' result.Record);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,not_find_record_with_version_5_in_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("CD"' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_not_found_for_record_version_5_for_stream_with_same_hash_as_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("FY"' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_not_found_for_record_version_4_for_stream_with_same_hash_as_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("FY"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("CD"' 0' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_0_2_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("CD"' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_0_2_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_2_2_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("CD"' 2' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_2_2_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("CD"' 2' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_2_2_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_2_2_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(_prepares2[2]' result.Records[0]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_2_2_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(_prepares2[3]' result.Records[1]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_range_for_5_1_range_on_from_start_range_query_request_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("CD"' 5' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_range_on_from_start_range_query_for_non_existing_stream_with_same_hash_as_second_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("FY"' 0' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_5_1_range_on_from_start_range_query_for_non_existing_stream_with_same_hash_as_second_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("FY"' 5' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_second_stream_with_from_end_vesion,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("CD"' -1' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_second_stream_with_from_end_vesion,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_second_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("CD"' 4' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_second_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("CD"' 4' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_second_stream_with_specific_version,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_second_stream_with_from_end_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("CD"' -1' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_second_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_from_end_1_range_on_from_end_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(_prepares2[4]' result.Records[0]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_from_end_2_range_on_from_end_range_query_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("CD"' -1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_from_end_2_range_on_from_end_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_from_end_2_range_on_from_end_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(_prepares2[4]' result.Records[0]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_from_end_2_range_on_from_end_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(_prepares2[3]' result.Records[1]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_range_for_5_1_range_on_from_end_range_query_request_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("CD"' 5' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_range_on_from_end_range_query_for_non_existing_stream_with_same_hash_as_second_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("FY"' 0' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_5_1_range_on_from_end_range_query_for_non_existing_stream_with_same_hash_as_second_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("FY"' 5' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_last_event_version_for_third_stream,The following statement contains a magic number: Assert.AreEqual(6' ReadIndex.GetStreamLastEventNumber("EF"));
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_last_log_record_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("EF"' 6);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_last_log_record_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[6]' result.Record);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,not_find_record_with_version_7_in_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("EF"' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_not_found_for_record_version_7_for_stream_with_same_hash_as_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("FY"' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("EF"' 0' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(7' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_0_7_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("EF"' 0' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_0_7_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(7' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_0_7_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[2]' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_0_7_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[2]' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_0_7_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[3]' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_0_7_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[3]' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_0_7_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[4]' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_0_7_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[4]' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_0_7_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[5]' result.Records[5]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_0_7_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[5]' result.Records[5]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_0_7_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[6]' result.Records[6]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_0_7_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[6]' result.Records[6]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_2_3_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("EF"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_2_3_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("EF"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_2_3_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_2_3_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[2]' result.Records[0]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_2_3_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[3]' result.Records[1]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_2_3_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[4]' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_2_3_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[4]' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_range_for_7_1_range_on_from_start_range_query_request_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("EF"' 7' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_range_on_from_start_range_query_for_non_existing_stream_with_same_hash_as_third_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("FY"' 0' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_7_1_range_on_from_start_range_query_for_non_existing_stream_with_same_hash_as_third_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("EF"' 7' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_third_stream_from_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("EF"' 6' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_third_stream_from_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("EF"' 6' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_third_stream_from_specific_version,The following statement contains a magic number: Assert.AreEqual(7' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_third_stream_with_from_end_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("EF"' -1' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_third_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(7' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_from_end_1_range_on_from_end_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[6]' result.Records[0]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_from_end_2_range_on_from_end_range_query_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("EF"' -1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_from_end_2_range_on_from_end_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_from_end_2_range_on_from_end_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[6]' result.Records[0]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_correct_from_end_2_range_on_from_end_range_query_for_third_stream,The following statement contains a magic number: Assert.AreEqual(_prepares3[5]' result.Records[1]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_range_for_7_1_range_on_from_end_range_query_request_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("EF"' 7' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_range_on_from_end_range_query_for_non_existing_stream_with_same_hash_as_third_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("FY"' 0' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_each_read_index_should.cs,return_empty_7_1_range_on_from_end_range_query_for_non_existing_stream_with_same_hash_as_third_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("EF"' 7' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _prepares1 = new EventRecord[3];
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _prepares2 = new EventRecord[5];
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _prepares3 = new EventRecord[7];
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_last_event_version_for_first_stream,The following statement contains a magic number: Assert.AreEqual(2' ReadIndex.GetStreamLastEventNumber("AB"));
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_last_log_record_for_first_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("AB"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_last_log_record_for_first_stream,The following statement contains a magic number: Assert.AreEqual(_prepares1[2]' result.Record);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,not_find_record_with_version_3_in_first_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("AB"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_not_found_for_record_version_3_for_stream_with_same_hash_as_first_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("FY"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_not_found_for_record_version_2_for_stream_with_same_hash_as_first_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("FY"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_range_on_from_start_range_query_for_first_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("AB"' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_range_on_from_start_range_query_for_first_stream,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_range_for_3_1_range_on_from_start_range_query_request_for_first_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("AB"' 3' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_range_on_from_start_range_query_for_non_existing_stream_with_same_hash_as_first_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("FY"' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_3_1_range_on_from_start_range_query_for_non_existing_stream_with_same_hash_as_first_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("FY"' 3' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_first_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("AB"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_first_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("AB"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_first_stream_with_specific_version,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_first_stream_with_from_end_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("AB"' -1' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_first_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_from_end_1_range_on_from_end_range_query_for_first_stream,The following statement contains a magic number: Assert.AreEqual(_prepares1[2]' result.Records[0]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_range_for_3_1_range_on_from_end_range_query_request_for_first_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("AB"' 3' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_range_on_from_end_range_query_for_non_existing_stream_with_same_hash_as_first_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("FY"' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_3_1_range_on_from_end_range_query_for_non_existing_stream_with_same_hash_as_first_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("FY"' 3' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_last_event_version_for_second_stream,The following statement contains a magic number: Assert.AreEqual(4' ReadIndex.GetStreamLastEventNumber("CD"));
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_last_log_record_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("CD"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_last_log_record_for_second_stream,The following statement contains a magic number: Assert.AreEqual(_prepares2[4]' result.Record);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,not_find_record_with_version_5_in_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("CD"' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_not_found_for_record_version_5_for_stream_with_same_hash_as_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("FY"' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_not_found_for_record_version_4_for_stream_with_same_hash_as_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("FY"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("CD"' 0' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_0_2_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("CD"' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_0_2_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_2_2_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("CD"' 2' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_2_2_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("CD"' 2' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_2_2_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_2_2_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(_prepares2[2]' result.Records[0]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_2_2_range_on_from_start_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(_prepares2[3]' result.Records[1]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_range_for_5_1_range_on_from_start_range_query_request_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("CD"' 5' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_range_on_from_start_range_query_for_non_existing_stream_with_same_hash_as_second_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("FY"' 0' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_5_1_range_on_from_start_range_query_for_non_existing_stream_with_same_hash_as_second_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("FY"' 5' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_second_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("CD"' 4' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_second_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("CD"' 4' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_second_stream_with_specific_version,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_second_stream_with_from_end_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("CD"' -1' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_range_on_from_end_range_query_for_second_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_from_end_1_range_on_from_end_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(_prepares2[4]' result.Records[0]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_from_end_2_range_on_from_end_range_query_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("CD"' -1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_from_end_2_range_on_from_end_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_from_end_2_range_on_from_end_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(_prepares2[4]' result.Records[0]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_correct_from_end_2_range_on_from_end_range_query_for_second_stream,The following statement contains a magic number: Assert.AreEqual(_prepares2[3]' result.Records[1]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_range_for_5_1_range_on_from_end_range_query_request_for_second_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("CD"' 5' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_range_on_from_end_range_query_for_non_existing_stream_with_same_hash_as_second_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("FY"' 0' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_5_1_range_on_from_end_range_query_for_non_existing_stream_with_same_hash_as_second_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("FY"' 5' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,not_find_last_log_record_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("EF"' 6);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,not_find_record_with_version_7_in_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("EF"' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_not_found_for_record_version_7_for_stream_with_same_hash_as_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("FY"' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("EF"' 0' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_0_7_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("EF"' 0' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_2_3_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("EF"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_2_3_range_on_from_start_range_query_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("EF"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_range_for_7_1_range_on_from_start_range_query_request_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("EF"' 7' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_range_on_from_start_range_query_for_non_existing_stream_with_same_hash_as_third_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("FY"' 0' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_7_1_range_on_from_start_range_query_for_non_existing_stream_with_same_hash_as_third_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("EF"' 7' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_range_on_from_end_range_query_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("EF"' 0' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_range_for_7_1_range_on_from_end_range_query_request_for_third_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("EF"' 7' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_range_on_from_end_range_query_for_non_existing_stream_with_same_hash_as_third_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("FY"' 0' 7);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_empty_7_1_range_on_from_end_range_query_for_non_existing_stream_with_same_hash_as_third_one,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("EF"' 7' 1);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(3 + 5 + 7 + 1' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(3 + 5 + 7 + 1' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(3 + 5 + 7 + 1' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares1[2]' events[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares1[2]' events[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares2[0]' events[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares2[1]' events[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares2[2]' events[5]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares2[2]' events[5]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares2[3]' events[6]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares2[3]' events[6]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares2[4]' events[7]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares2[4]' events[7]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares3[0]' events[8]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares3[1]' events[9]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares3[2]' events[10]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares3[2]' events[10]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares3[3]' events[11]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares3[3]' events[11]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares3[4]' events[12]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares3[4]' events[12]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares3[5]' events[13]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares3[5]' events[13]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares3[6]' events[14]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepares3[6]' events[14]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_delete3' events[15]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(3 + 5 + 7 + 1' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(3 + 5 + 7 + 1' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(3 + 5 + 7 + 1' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares1[0]' events[15]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares1[1]' events[14]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares1[2]' events[13]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares1[2]' events[13]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares2[0]' events[12]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares2[1]' events[11]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares2[2]' events[10]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares2[2]' events[10]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares2[3]' events[9]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares2[3]' events[9]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares2[4]' events[8]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares2[4]' events[8]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares3[0]' events[7]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares3[1]' events[6]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares3[2]' events[5]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares3[2]' events[5]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares3[3]' events[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares3[3]' events[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares3[4]' events[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares3[4]' events[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares3[5]' events[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares3[5]' events[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_three_collisioned_streams_with_different_number_of_events_third_one_deleted_each_read_index_should.cs,return_all_prepares_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepares3[6]' events[1]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_two_collisioned_streams_one_event_each_first_stream_deleted_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_two_collisioned_streams_one_event_each_first_stream_deleted_read_index_should.cs,return_all_events_on_read_all_forward,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_two_collisioned_streams_one_event_each_first_stream_deleted_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_two_collisioned_streams_one_event_each_first_stream_deleted_read_index_should.cs,return_all_events_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(3' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_two_collisioned_streams_one_event_each_first_stream_deleted_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_two_collisioned_streams_one_event_each_first_stream_deleted_read_index_should.cs,return_all_events_on_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_prepare2' events[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_two_collisioned_streams_one_event_each_first_stream_deleted_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_two_collisioned_streams_one_event_each_first_stream_deleted_read_index_should.cs,return_all_events_on_read_all_backward,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_two_collisioned_streams_one_event_each_first_stream_deleted_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_two_collisioned_streams_one_event_each_first_stream_deleted_read_index_should.cs,return_all_events_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(3' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.HashCollisions,with_two_collisioned_streams_one_event_each_first_stream_deleted_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\HashCollisions\with_two_collisioned_streams_one_event_each_first_stream_deleted_read_index_should.cs,return_all_events_on_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_prepare1' events[2]);
Magic Number,EventStore.Core.Tests.ClientAPI.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_1,The following statement contains a magic number: queue.Enqueue(1234);
Magic Number,EventStore.Core.Tests.ClientAPI.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_1,The following statement contains a magic number: queue.Enqueue(12345);
Magic Number,EventStore.Core.Tests.ClientAPI.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_1,The following statement contains a magic number: Assert.AreEqual(2' queue.Count);
Magic Number,EventStore.Core.Tests.ClientAPI.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_1,The following statement contains a magic number: Assert.AreEqual(1234' val);
Magic Number,EventStore.Core.Tests.ClientAPI.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_1,The following statement contains a magic number: Assert.AreEqual(12345' val);
Magic Number,EventStore.Core.Tests.ClientAPI.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_2,The following statement contains a magic number: i <= 1000
Magic Number,EventStore.Core.Tests.ClientAPI.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_2,The following statement contains a magic number: Assert.AreEqual(1000-i' queue.Count);
Magic Number,EventStore.Core.Tests.ClientAPI.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_2,The following statement contains a magic number: i <= 1000
Magic Number,EventStore.Core.Tests.ClientAPI.DataStructures,concurrent_queue_wrapper_with_parallel_dequeues_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\DataStructures\concurrent_queue_wrapper_should.cs,always_return_non_negative_count,The following statement contains a magic number: threads[i].Join(TimeSpan.FromSeconds(5));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(StreamName' intMaxValue + 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(StreamName' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(StreamName' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(StreamName' intMaxValue + 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(StreamName' intMaxValue + 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(StreamName' intMaxValue + 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(StreamName' intMaxValue + 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(StreamName' intMaxValue + 5' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(StreamName' intMaxValue + 5' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream,The following statement contains a magic number: var evnt = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream,The following statement contains a magic number: var evnt = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream,The following statement contains a magic number: var writeResult = _store.AppendToStreamAsync(StreamName' intMaxValue + 5' evnt).Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream,The following statement contains a magic number: Assert.AreEqual(intMaxValue + 6' writeResult.NextExpectedVersion);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream,The following statement contains a magic number: var readResult = _store  				.ReadStreamEventsForwardAsync(StreamName' intMaxValue + 6' 1' false' DefaultData.AdminCredentials)  				.Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,should_throw_wrong_expected_version_when_version_incorrect,The following statement contains a magic number: var evnt = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,should_throw_wrong_expected_version_when_version_incorrect,The following statement contains a magic number: var evnt = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,append_to_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\append_to_stream_with_event_numbers_greater_than_2_billion.cs,should_throw_wrong_expected_version_when_version_incorrect,The following statement contains a magic number: _store.AppendToStreamAsync(StreamName' intMaxValue + 15' evnt).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,catchup_subscription_to_all_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\catchup_subscription_to_all_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r1 = WriteSingleEvent(_streamId' intMaxValue + 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,catchup_subscription_to_all_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\catchup_subscription_to_all_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent(_streamId' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,catchup_subscription_to_all_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\catchup_subscription_to_all_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent(_streamId' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,catchup_subscription_to_all_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\catchup_subscription_to_all_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_all_with_catchup_subscription,The following statement contains a magic number: var evnt = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,catchup_subscription_to_all_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\catchup_subscription_to_all_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_all_with_catchup_subscription,The following statement contains a magic number: var evnt = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,catchup_subscription_to_all_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\catchup_subscription_to_all_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_all_with_catchup_subscription,The following statement contains a magic number: var countdown = new CountdownEvent(3);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,catchup_subscription_to_all_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\catchup_subscription_to_all_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_all_with_catchup_subscription,The following statement contains a magic number: _store.AppendToStreamAsync(_streamId' intMaxValue + 2' evnt).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,catchup_subscription_to_all_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\catchup_subscription_to_all_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_all_with_catchup_subscription,The following statement contains a magic number: Assert.That(countdown.Wait(TimeSpan.FromSeconds(10))' "Timed out waiting for events to appear");
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,catchup_subscription_to_all_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\catchup_subscription_to_all_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_all_with_catchup_subscription,The following statement contains a magic number: Assert.AreEqual(evnt.EventId' receivedEvents[2].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,persistent_subscription_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\persistent_subscription_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r1 = WriteSingleEvent(_streamId' intMaxValue + 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,persistent_subscription_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\persistent_subscription_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent(_streamId' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,persistent_subscription_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\persistent_subscription_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent(_streamId' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,persistent_subscription_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\persistent_subscription_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_connect_to_persistent_subscription,The following statement contains a magic number: var evnt = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,persistent_subscription_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\persistent_subscription_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_connect_to_persistent_subscription,The following statement contains a magic number: var evnt = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,persistent_subscription_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\persistent_subscription_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_connect_to_persistent_subscription,The following statement contains a magic number: var countdown = new CountdownEvent(3);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,persistent_subscription_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\persistent_subscription_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_connect_to_persistent_subscription,The following statement contains a magic number: _store.AppendToStreamAsync(_streamId' intMaxValue + 2' evnt).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,persistent_subscription_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\persistent_subscription_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_connect_to_persistent_subscription,The following statement contains a magic number: Assert.That(countdown.Wait(TimeSpan.FromSeconds(5))' "Timed out waiting for events to appear");
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,persistent_subscription_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\persistent_subscription_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_connect_to_persistent_subscription,The following statement contains a magic number: Assert.AreEqual(evnt.EventId' receivedEvents[2].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r1 = WriteSingleEvent(StreamName' intMaxValue + 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent(StreamName' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent(StreamName' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent(StreamName' intMaxValue + 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent(StreamName' intMaxValue + 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent(StreamName' intMaxValue + 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent(StreamName' intMaxValue + 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent(StreamName' intMaxValue + 5' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent(StreamName' intMaxValue + 5' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,read_forward_from_zero,The following statement contains a magic number: var result = _store.ReadStreamEventsForwardAsync(StreamName' 0' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_stream_forward,The following statement contains a magic number: var result = _store.ReadStreamEventsForwardAsync(StreamName' intMaxValue' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_stream_forward,The following statement contains a magic number: Assert.AreEqual(5' result.Events.Count());
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_stream_forward,The following statement contains a magic number: Assert.AreEqual(_r3.EventId' result.Events[2].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_stream_forward,The following statement contains a magic number: Assert.AreEqual(_r4.EventId' result.Events[3].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_stream_forward,The following statement contains a magic number: Assert.AreEqual(_r5.EventId' result.Events[4].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_stream_backward,The following statement contains a magic number: var result = _store.ReadStreamEventsBackwardAsync(StreamName' intMaxValue + 6' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_stream_backward,The following statement contains a magic number: var result = _store.ReadStreamEventsBackwardAsync(StreamName' intMaxValue + 6' 100' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_stream_backward,The following statement contains a magic number: Assert.AreEqual(5' result.Events.Count());
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_stream_backward,The following statement contains a magic number: Assert.AreEqual(_r3.EventId' result.Events[2].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_stream_backward,The following statement contains a magic number: Assert.AreEqual(_r2.EventId' result.Events[3].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_stream_backward,The following statement contains a magic number: Assert.AreEqual(_r1.EventId' result.Events[4].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_each_event,The following statement contains a magic number: record = _store.ReadEventAsync(StreamName' intMaxValue + 2' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_each_event,The following statement contains a magic number: record = _store.ReadEventAsync(StreamName' intMaxValue + 3' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_each_event,The following statement contains a magic number: record = _store.ReadEventAsync(StreamName' intMaxValue + 4' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_each_event,The following statement contains a magic number: record = _store.ReadEventAsync(StreamName' intMaxValue + 5' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_all_forward,The following statement contains a magic number: var result = _store.ReadAllEventsForwardAsync(Position.Start' 100' false' DefaultData.AdminCredentials)  				.Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_all_forward,The following statement contains a magic number: Assert.IsTrue(result.Events.Count() > 5);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_r3.EventId' records[2].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_r4.EventId' records[3].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_all_forward,The following statement contains a magic number: Assert.AreEqual(_r5.EventId' records[4].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_all_backward,The following statement contains a magic number: var result = _store.ReadAllEventsBackwardAsync(Position.End' 100' false' DefaultData.AdminCredentials)  				.Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_all_backward,The following statement contains a magic number: Assert.IsTrue(result.Events.Count() > 5);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_r3.EventId' records[2].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_r2.EventId' records[3].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_read_all_backward,The following statement contains a magic number: Assert.AreEqual(_r1.EventId' records[4].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: _event1 = WriteSingleEvent(StreamName' intMaxValue + 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: _event2 = WriteSingleEvent(StreamName' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: _event2 = WriteSingleEvent(StreamName' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(_linkedStreamName' 1' string.Format("{0}@{1}"' intMaxValue + 2' StreamName)'  				eventType: SystemEventTypes.LinkTo);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,should_be_able_to_read_link_stream_forward_and_resolve_link_tos,The following statement contains a magic number: var readResult = _store  				.ReadStreamEventsForwardAsync(_linkedStreamName' 0' 100' true' DefaultData.AdminCredentials).Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,should_be_able_to_read_link_stream_forward_and_resolve_link_tos,The following statement contains a magic number: Assert.AreEqual(2' readResult.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,should_be_able_to_read_link_stream_forward_and_resolve_link_tos,The following statement contains a magic number: Assert.AreEqual(intMaxValue + 2' readResult.Events[1].Event.EventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,should_be_able_to_read_link_stream_backward_and_resolve_link_tos,The following statement contains a magic number: var readResult = _store  				.ReadStreamEventsBackwardAsync(_linkedStreamName' 10' 100' true' DefaultData.AdminCredentials).Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,should_be_able_to_read_link_stream_backward_and_resolve_link_tos,The following statement contains a magic number: var readResult = _store  				.ReadStreamEventsBackwardAsync(_linkedStreamName' 10' 100' true' DefaultData.AdminCredentials).Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,should_be_able_to_read_link_stream_backward_and_resolve_link_tos,The following statement contains a magic number: Assert.AreEqual(2' readResult.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,should_be_able_to_read_link_stream_backward_and_resolve_link_tos,The following statement contains a magic number: Assert.AreEqual(intMaxValue + 2' readResult.Events[0].Event.EventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,should_be_able_to_read_all_stream_forward_and_resolve_link_tos,The following statement contains a magic number: var readResult = _store.ReadAllEventsForwardAsync(Position.Start' 100' true' DefaultData.AdminCredentials)  				.Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,should_be_able_to_read_all_stream_forward_and_resolve_link_tos,The following statement contains a magic number: Assert.AreEqual(2' linkedEvents.Count());
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,should_be_able_to_read_all_stream_forward_and_resolve_link_tos,The following statement contains a magic number: Assert.AreEqual(intMaxValue + 2' linkedEvents[1].Event.EventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,should_be_able_to_read_all_stream_backward_and_resolve_link_tos,The following statement contains a magic number: var readResult = _store.ReadAllEventsBackwardAsync(Position.End' 100' true' DefaultData.AdminCredentials)  				.Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,should_be_able_to_read_all_stream_backward_and_resolve_link_tos,The following statement contains a magic number: Assert.AreEqual(2' linkedEvents.Count());
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,should_be_able_to_read_all_stream_backward_and_resolve_link_tos,The following statement contains a magic number: Assert.AreEqual(intMaxValue + 2' linkedEvents[0].Event.EventNumber);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscribe_to_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscribe_to_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: var event1 = WriteSingleEvent(StreamName' intMaxValue + 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscribe_to_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscribe_to_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(StreamName' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscribe_to_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscribe_to_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(StreamName' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscribe_to_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscribe_to_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue.cs,should_receive_and_resolve_the_linked_event,The following statement contains a magic number: Assert.IsTrue(_resetEvent.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(_volatileStreamOne' intMaxValue + 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(_volatileStreamOne' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(_volatileStreamOne' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(_volatileStreamTwo' intMaxValue + 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(_volatileStreamTwo' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent(_volatileStreamTwo' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _c1 = WriteSingleEvent(_catchupStreamOne' intMaxValue + 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _c2 = WriteSingleEvent(_catchupStreamOne' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _c2 = WriteSingleEvent(_catchupStreamOne' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_stream_with_volatile_subscription,The following statement contains a magic number: var evnt = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_stream_with_volatile_subscription,The following statement contains a magic number: var evnt = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_stream_with_volatile_subscription,The following statement contains a magic number: _store.AppendToStreamAsync(_volatileStreamOne' intMaxValue + 2' evnt).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_stream_with_volatile_subscription,The following statement contains a magic number: Assert.That(mre.WaitOne(TimeSpan.FromSeconds(5))' "Timed out waiting for events to appear");
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_all_with_volatile_subscription,The following statement contains a magic number: var evnt = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_all_with_volatile_subscription,The following statement contains a magic number: var evnt = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_all_with_volatile_subscription,The following statement contains a magic number: _store.AppendToStreamAsync(_volatileStreamTwo' intMaxValue + 2' evnt).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_all_with_volatile_subscription,The following statement contains a magic number: Assert.That(mre.WaitOne(TimeSpan.FromSeconds(5))' "Timed out waiting for events to appear");
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_stream_with_catchup_subscription,The following statement contains a magic number: var evnt = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_stream_with_catchup_subscription,The following statement contains a magic number: var evnt = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_stream_with_catchup_subscription,The following statement contains a magic number: var countdown = new CountdownEvent(3);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_stream_with_catchup_subscription,The following statement contains a magic number: _store.AppendToStreamAsync(_catchupStreamOne' intMaxValue + 2' evnt).Wait();
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_stream_with_catchup_subscription,The following statement contains a magic number: Assert.That(countdown.Wait(TimeSpan.FromSeconds(5))' "Timed out waiting for events to appear");
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_stream_with_catchup_subscription,The following statement contains a magic number: Assert.AreEqual(3' receivedEvents.Count);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,subscriptions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\subscriptions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_subscribe_to_stream_with_catchup_subscription,The following statement contains a magic number: Assert.AreEqual(evnt.EventId' receivedEvents[2].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r1 = WriteSingleEvent(StreamName' intMaxValue + 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent(StreamName' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent(StreamName' intMaxValue + 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent(StreamName' intMaxValue + 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent(StreamName' intMaxValue + 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent(StreamName' intMaxValue + 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent(StreamName' intMaxValue + 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent(StreamName' intMaxValue + 5' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent(StreamName' intMaxValue + 5' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream_in_a_transaction,The following statement contains a magic number: var evnt1 = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream_in_a_transaction,The following statement contains a magic number: var evnt1 = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream_in_a_transaction,The following statement contains a magic number: var evnt2 = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream_in_a_transaction,The following statement contains a magic number: var evnt2 = new EventData(Guid.NewGuid()' "EventType"' false' new byte[10]' new byte[15]);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream_in_a_transaction,The following statement contains a magic number: var transaction = _store.StartTransactionAsync(StreamName' intMaxValue + 5' DefaultData.AdminCredentials)  				.Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream_in_a_transaction,The following statement contains a magic number: var records = _store.ReadStreamEventsForwardAsync(StreamName' intMaxValue' 10' false).Result;
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream_in_a_transaction,The following statement contains a magic number: Assert.AreEqual(7' records.Events.Length);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream_in_a_transaction,The following statement contains a magic number: Assert.AreEqual(_r3.EventId' records.Events[2].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream_in_a_transaction,The following statement contains a magic number: Assert.AreEqual(_r4.EventId' records.Events[3].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream_in_a_transaction,The following statement contains a magic number: Assert.AreEqual(_r5.EventId' records.Events[4].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream_in_a_transaction,The following statement contains a magic number: Assert.AreEqual(evnt1.EventId' records.Events[5].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit,transactions_on_stream_with_event_numbers_greater_than_2_billion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\ExpectedVersion64Bit\transactions_on_stream_with_event_numbers_greater_than_2_billion.cs,should_be_able_to_append_to_stream_in_a_transaction,The following statement contains a magic number: Assert.AreEqual(evnt2.EventId' records.Events[6].Event.EventId);
Magic Number,EventStore.Core.Tests.ClientAPI.Helpers,TestConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\Helpers\TestConnection.cs,Settings,The following statement contains a magic number: var settings = ConnectionSettings.Create()  				.SetDefaultUserCredentials(userCredentials)  				.UseCustomLogger(ClientApiLoggerBridge.Default)  				.EnableVerboseLogging()  				.LimitReconnectionsTo(10)  				.LimitRetriesForOperationTo(100)  				.SetTimeoutCheckPeriodTo(TimeSpan.FromMilliseconds(100))  				.SetReconnectionDelayTo(TimeSpan.Zero)  				.FailOnNoServerResponse()  				.SetOperationTimeoutTo(TimeSpan.FromDays(1));
Magic Number,EventStore.Core.Tests.ClientAPI.Helpers,TestConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\Helpers\TestConnection.cs,Settings,The following statement contains a magic number: var settings = ConnectionSettings.Create()  				.SetDefaultUserCredentials(userCredentials)  				.UseCustomLogger(ClientApiLoggerBridge.Default)  				.EnableVerboseLogging()  				.LimitReconnectionsTo(10)  				.LimitRetriesForOperationTo(100)  				.SetTimeoutCheckPeriodTo(TimeSpan.FromMilliseconds(100))  				.SetReconnectionDelayTo(TimeSpan.Zero)  				.FailOnNoServerResponse()  				.SetOperationTimeoutTo(TimeSpan.FromDays(1));
Magic Number,EventStore.Core.Tests.ClientAPI.Helpers,TestConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\Helpers\TestConnection.cs,Settings,The following statement contains a magic number: var settings = ConnectionSettings.Create()  				.SetDefaultUserCredentials(userCredentials)  				.UseCustomLogger(ClientApiLoggerBridge.Default)  				.EnableVerboseLogging()  				.LimitReconnectionsTo(10)  				.LimitRetriesForOperationTo(100)  				.SetTimeoutCheckPeriodTo(TimeSpan.FromMilliseconds(100))  				.SetReconnectionDelayTo(TimeSpan.Zero)  				.FailOnNoServerResponse()  				.SetOperationTimeoutTo(TimeSpan.FromDays(1));
Magic Number,EventStore.Core.Tests.ClientAPI.Helpers,EmbeddedTestConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\Helpers\TestConnection.cs,Settings,The following statement contains a magic number: var settings = ConnectionSettings.Create()  				.SetDefaultUserCredentials(credentials)  				.UseCustomLogger(ClientApiLoggerBridge.Default)  				.EnableVerboseLogging()  				.LimitReconnectionsTo(10)  				.LimitRetriesForOperationTo(100)  				.SetTimeoutCheckPeriodTo(TimeSpan.FromMilliseconds(100))  				.SetReconnectionDelayTo(TimeSpan.Zero)  				.FailOnNoServerResponse()  				.SetOperationTimeoutTo(TimeSpan.FromDays(1));
Magic Number,EventStore.Core.Tests.ClientAPI.Helpers,EmbeddedTestConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\Helpers\TestConnection.cs,Settings,The following statement contains a magic number: var settings = ConnectionSettings.Create()  				.SetDefaultUserCredentials(credentials)  				.UseCustomLogger(ClientApiLoggerBridge.Default)  				.EnableVerboseLogging()  				.LimitReconnectionsTo(10)  				.LimitRetriesForOperationTo(100)  				.SetTimeoutCheckPeriodTo(TimeSpan.FromMilliseconds(100))  				.SetReconnectionDelayTo(TimeSpan.Zero)  				.FailOnNoServerResponse()  				.SetOperationTimeoutTo(TimeSpan.FromDays(1));
Magic Number,EventStore.Core.Tests.ClientAPI.Helpers,EmbeddedTestConnection,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\Helpers\TestConnection.cs,Settings,The following statement contains a magic number: var settings = ConnectionSettings.Create()  				.SetDefaultUserCredentials(credentials)  				.UseCustomLogger(ClientApiLoggerBridge.Default)  				.EnableVerboseLogging()  				.LimitReconnectionsTo(10)  				.LimitRetriesForOperationTo(100)  				.SetTimeoutCheckPeriodTo(TimeSpan.FromMilliseconds(100))  				.SetReconnectionDelayTo(TimeSpan.Zero)  				.FailOnNoServerResponse()  				.SetOperationTimeoutTo(TimeSpan.FromDays(1));
Magic Number,EventStore.Core.Tests.ClientAPI.Security,AuthenticationTestBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\Security\AuthenticationTestBase.cs,TestFixtureSetUp,The following statement contains a magic number: Assert.IsTrue(userCreateEvent1.Wait(10000)' "User 1 creation failed");
Magic Number,EventStore.Core.Tests.ClientAPI.Security,AuthenticationTestBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\Security\AuthenticationTestBase.cs,TestFixtureSetUp,The following statement contains a magic number: Assert.IsTrue(userCreateEvent2.Wait(10000)' "User 2 creation failed");
Magic Number,EventStore.Core.Tests.ClientAPI.Security,AuthenticationTestBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\Security\AuthenticationTestBase.cs,TestFixtureSetUp,The following statement contains a magic number: Assert.IsTrue(adminCreateEvent2.Wait(10000)' "Administrator User creation failed");
Magic Number,EventStore.Core.Tests.ClientAPI.Security,AuthenticationTestBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\Security\AuthenticationTestBase.cs,CreateEvents,The following statement contains a magic number: return new[] {new EventData(Guid.NewGuid()' "some-type"' false' new byte[] {1' 2' 3}' null)};
Magic Number,EventStore.Core.Tests.ClientAPI.Security,AuthenticationTestBase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\Security\AuthenticationTestBase.cs,CreateEvents,The following statement contains a magic number: return new[] {new EventData(Guid.NewGuid()' "some-type"' false' new byte[] {1' 2' 3}' null)};
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,should_throw_argument_null_exception_when_created_as_authorized_but_login_not_provided,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()' null' "pa$$"'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,should_throw_argument_null_exception_when_created_as_authorized_but_login_not_provided,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()' null' "pa$$"'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,should_throw_argument_null_exception_when_created_as_authorized_but_password_not_provided,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()' "login"' null'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,should_throw_argument_null_exception_when_created_as_authorized_but_password_not_provided,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()' "login"' null'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,should_throw_argument_exception_when_created_as_not_authorized_but_login_is_provided,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.None' Guid.NewGuid()' "login"' null'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,should_throw_argument_exception_when_created_as_not_authorized_but_login_is_provided,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.None' Guid.NewGuid()' "login"' null'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,should_throw_argument_exception_when_created_as_not_authorized_but_password_is_provided,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.None' Guid.NewGuid()' null' "pa$$"'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,should_throw_argument_exception_when_created_as_not_authorized_but_password_is_provided,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.None' Guid.NewGuid()' null' "pa$$"'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,not_authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: var refPkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.None' corrId' null' null' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,not_authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: var refPkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.None' corrId' null' null' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,not_authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(3' pkg.Data.Count);
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,not_authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(2' pkg.Data.Array[pkg.Data.Offset + 1]);
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,not_authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(3' pkg.Data.Array[pkg.Data.Offset + 2]);
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,not_authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(3' pkg.Data.Array[pkg.Data.Offset + 2]);
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: var refPkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' corrId' "login"' "pa$$"'  				new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: var refPkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' corrId' "login"' "pa$$"'  				new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(3' pkg.Data.Count);
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(2' pkg.Data.Array[pkg.Data.Offset + 1]);
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(3' pkg.Data.Array[pkg.Data.Offset + 2]);
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(3' pkg.Data.Array[pkg.Data.Offset + 2]);
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,should_throw_argument_exception_on_serialization_when_login_too_long,The following statement contains a magic number: var pkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()'  				new string('*'' 256)' "pa$$"' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,should_throw_argument_exception_on_serialization_when_login_too_long,The following statement contains a magic number: var pkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()'  				new string('*'' 256)' "pa$$"' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,should_throw_argument_exception_on_serialization_when_login_too_long,The following statement contains a magic number: var pkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()'  				new string('*'' 256)' "pa$$"' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,should_throw_argument_exception_on_serialization_when_password_too_long,The following statement contains a magic number: var pkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()' "login"'  				new string('*'' 256)' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,should_throw_argument_exception_on_serialization_when_password_too_long,The following statement contains a magic number: var pkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()' "login"'  				new string('*'' 256)' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.ClientAPI.SystemData,clientapi_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\SystemData\clientapi_tcp_package.cs,should_throw_argument_exception_on_serialization_when_password_too_long,The following statement contains a magic number: var pkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()' "login"'  				new string('*'' 256)' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.ClientAPI.UserManagement,list_users,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\UserManagement\list_users.cs,list_all_users_works,The following statement contains a magic number: Assert.AreEqual(3' x.Count);
Magic Number,EventStore.Core.Tests.ClientAPI.UserManagement,list_users,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\UserManagement\list_users.cs,list_all_users_works,The following statement contains a magic number: Assert.AreEqual("ouro"' x[2].LoginName);
Magic Number,EventStore.Core.Tests.ClientAPI.UserManagement,list_users,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\UserManagement\list_users.cs,list_all_users_works,The following statement contains a magic number: Assert.AreEqual("ourofull"' x[2].FullName);
Magic Number,EventStore.Core.Tests.ClientAPI.UserManagement,TestWithNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\ClientAPI\UserManagement\TestWithNode.cs,TestFixtureSetUp,The following statement contains a magic number: _manager = new UsersManager(new NoopLogger()' _node.ExtHttpEndPoint' TimeSpan.FromSeconds(5));
Magic Number,EventStore.Core.Tests.Common,TestArgs,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\EventStoreOptionsTests\TestArgs.cs,TestArgs,The following statement contains a magic number: HttpPort = 2112;
Magic Number,EventStore.Core.Tests.Common.EventStoreOptionsTests.when_parsing,with_a_complex_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\EventStoreOptionsTests\when_parsing\with_a_complex_type.cs,should_be_able_to_parse_the_value_from_command_line,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint[] {  				new IPEndPoint(IPAddress.Parse("127.0.0.1")' 1000)'  				new IPEndPoint(IPAddress.Parse("127.0.0.2")' 2000)  			}' testArgs.GossipSeed);
Magic Number,EventStore.Core.Tests.Common.EventStoreOptionsTests.when_parsing,with_a_complex_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\EventStoreOptionsTests\when_parsing\with_a_complex_type.cs,should_be_able_to_parse_the_value_from_command_line,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint[] {  				new IPEndPoint(IPAddress.Parse("127.0.0.1")' 1000)'  				new IPEndPoint(IPAddress.Parse("127.0.0.2")' 2000)  			}' testArgs.GossipSeed);
Magic Number,EventStore.Core.Tests.Common.EventStoreOptionsTests.when_parsing,with_a_complex_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\EventStoreOptionsTests\when_parsing\with_a_complex_type.cs,should_be_able_to_parse_the_value_from_a_config_file,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint[] {  				new IPEndPoint(IPAddress.Parse("127.0.0.1")' 1000)'  				new IPEndPoint(IPAddress.Parse("127.0.0.2")' 2000)  			}' testArgs.GossipSeed);
Magic Number,EventStore.Core.Tests.Common.EventStoreOptionsTests.when_parsing,with_a_complex_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\EventStoreOptionsTests\when_parsing\with_a_complex_type.cs,should_be_able_to_parse_the_value_from_a_config_file,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint[] {  				new IPEndPoint(IPAddress.Parse("127.0.0.1")' 1000)'  				new IPEndPoint(IPAddress.Parse("127.0.0.2")' 2000)  			}' testArgs.GossipSeed);
Magic Number,EventStore.Core.Tests.Common.EventStoreOptionsTests.when_parsing,with_a_complex_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\EventStoreOptionsTests\when_parsing\with_a_complex_type.cs,should_be_able_to_parse_the_value_from_an_environment_variable,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint[] {  				new IPEndPoint(IPAddress.Parse("127.0.0.1")' 1000)'  				new IPEndPoint(IPAddress.Parse("127.0.0.2")' 2000)  			}' testArgs.GossipSeed);
Magic Number,EventStore.Core.Tests.Common.EventStoreOptionsTests.when_parsing,with_a_complex_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\EventStoreOptionsTests\when_parsing\with_a_complex_type.cs,should_be_able_to_parse_the_value_from_an_environment_variable,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint[] {  				new IPEndPoint(IPAddress.Parse("127.0.0.1")' 1000)'  				new IPEndPoint(IPAddress.Parse("127.0.0.2")' 2000)  			}' testArgs.GossipSeed);
Magic Number,EventStore.Core.Tests.Common.EventStoreOptionsTests.when_parsing,with_command_line_argument_with_config_file_and_environment_variable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\EventStoreOptionsTests\when_parsing\with_command_line_argument_with_config_file_and_environment_variable.cs,should_use_the_command_line_argument,The following statement contains a magic number: Assert.AreEqual(2115' testArgs.HttpPort);
Magic Number,EventStore.Core.Tests.Common.EventStoreOptionsTests.when_parsing,with_config_file_and_environment_variable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\EventStoreOptionsTests\when_parsing\with_config_file_and_environment_variable.cs,should_use_the_environment_variable_over_the_config_value,The following statement contains a magic number: Assert.AreEqual(2111' testArgs.HttpPort);
Magic Number,EventStore.Core.Tests.Common.EventStoreOptionsTests.when_parsing,with_no_arguments_and_environment_variables_exist,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\EventStoreOptionsTests\when_parsing\with_no_arguments_and_environment_variables_exist.cs,should_use_the_environment_variable_over_the_default_value,The following statement contains a magic number: Assert.AreEqual(2111' testArgs.HttpPort);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests,SingleNodeScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\VNodeBuilderScenarios.cs,TestFixtureTearDown,The following statement contains a magic number: _node.Stop(TimeSpan.FromSeconds(20)' true' true);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests,ClusterMemberScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\VNodeBuilderScenarios.cs,TestFixtureSetUp,The following statement contains a magic number: _quorumSize = _clusterSize / 2 + 1;
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests,ClusterMemberScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\VNodeBuilderScenarios.cs,TestFixtureTearDown,The following statement contains a magic number: _node.Stop(TimeSpan.FromSeconds(20)' true' true);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_dns_discovery_disabled_and_no_gossip_seeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,TestFixtureSetUp,The following statement contains a magic number: _builder = TestVNodeBuilder.AsClusterMember(3)  				.RunInMemory()  				.OnDefaultEndpoints()  				.DisableDnsDiscovery();
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_dns_discovery_disabled_and_gossip_seeds_defined,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _gossipSeeds = new IPEndPoint[] {  				new IPEndPoint(baseAddress' 1111)'  				new IPEndPoint(baseAddress' 1112)  			};
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_dns_discovery_disabled_and_gossip_seeds_defined,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _gossipSeeds = new IPEndPoint[] {  				new IPEndPoint(baseAddress' 1111)'  				new IPEndPoint(baseAddress' 1112)  			};
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_node_priority,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithNodePriority(5);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_node_priority,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_set_the_node_priority,The following statement contains a magic number: Assert.AreEqual(5' _settings.NodePriority);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_gossip_seeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _gossipSeeds = new IPEndPoint[] {new IPEndPoint(baseIpAddress' 2112)' new IPEndPoint(baseIpAddress' 3112)};
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_gossip_seeds,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _gossipSeeds = new IPEndPoint[] {new IPEndPoint(baseIpAddress' 2112)' new IPEndPoint(baseIpAddress' 3112)};
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_gossip_interval,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithGossipInterval(TimeSpan.FromMilliseconds(1300));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_gossip_interval,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_set_the_gossip_interval,The following statement contains a magic number: Assert.AreEqual(1300' _settings.GossipInterval.TotalMilliseconds);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_gossip_allowed_time_difference,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithGossipAllowedTimeDifference(TimeSpan.FromMilliseconds(1300));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_gossip_allowed_time_difference,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_set_the_allowed_gossip_time_difference,The following statement contains a magic number: Assert.AreEqual(1300' _settings.GossipAllowedTimeDifference.TotalMilliseconds);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_gossip_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithGossipTimeout(TimeSpan.FromMilliseconds(1300));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_gossip_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_set_the_gossip_timeout,The following statement contains a magic number: Assert.AreEqual(1300' _settings.GossipTimeout.TotalMilliseconds);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_external_ip_address_as_advertise_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithExternalTcpOn(new IPEndPoint(IPAddress.Loopback' 1113))  				.WithInternalTcpOn(new IPEndPoint(IPAddress.Loopback' 1112))  				.AdvertiseExternalIPAs(IPAddress.Parse("196.168.1.1"));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_external_ip_address_as_advertise_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithExternalTcpOn(new IPEndPoint(IPAddress.Loopback' 1113))  				.WithInternalTcpOn(new IPEndPoint(IPAddress.Loopback' 1112))  				.AdvertiseExternalIPAs(IPAddress.Parse("196.168.1.1"));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_external_ip_address_as_advertise_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_set_the_custom_advertise_info_for_external,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Parse("196.168.1.1")' 1113)'  				_settings.GossipAdvertiseInfo.ExternalTcp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_external_ip_address_as_advertise_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_set_the_custom_advertise_info_for_external,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Parse("196.168.1.1")' 2113)'  				_settings.GossipAdvertiseInfo.ExternalHttp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_external_ip_address_as_advertise_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_set_the_loopback_address_as_advertise_info_for_internal,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Loopback' 1112)' _settings.GossipAdvertiseInfo.InternalTcp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_external_ip_address_as_advertise_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_set_the_loopback_address_as_advertise_info_for_internal,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Loopback' 2112)' _settings.GossipAdvertiseInfo.InternalHttp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_as_external_ip_address_and_custom_advertise_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithExternalTcpOn(new IPEndPoint(IPAddress.Parse("0.0.0.0")' 1113))  				.WithInternalTcpOn(new IPEndPoint(IPAddress.Loopback' 1112))  				.AdvertiseExternalIPAs(IPAddress.Parse("10.0.0.1"));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_as_external_ip_address_and_custom_advertise_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithExternalTcpOn(new IPEndPoint(IPAddress.Parse("0.0.0.0")' 1113))  				.WithInternalTcpOn(new IPEndPoint(IPAddress.Loopback' 1112))  				.AdvertiseExternalIPAs(IPAddress.Parse("10.0.0.1"));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_as_external_ip_address_and_custom_advertise_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_set_the_custom_advertise_info_for_external,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Parse("10.0.0.1")' 1113)'  				_settings.GossipAdvertiseInfo.ExternalTcp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_as_external_ip_address_and_custom_advertise_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_set_the_custom_advertise_info_for_external,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Parse("10.0.0.1")' 2113)'  				_settings.GossipAdvertiseInfo.ExternalHttp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_as_external_ip_address_and_custom_advertise_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_set_the_loopback_address_as_advertise_info_for_internal,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Loopback' 1112)' _settings.GossipAdvertiseInfo.InternalTcp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_as_external_ip_address_and_custom_advertise_info,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_set_the_loopback_address_as_advertise_info_for_internal,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Loopback' 2112)' _settings.GossipAdvertiseInfo.InternalHttp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_as_external_ip_address_with_no_explicit_advertise_info_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithExternalTcpOn(new IPEndPoint(IPAddress.Parse("0.0.0.0")' 1113))  				.WithInternalTcpOn(new IPEndPoint(IPAddress.Loopback' 1112));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_as_external_ip_address_with_no_explicit_advertise_info_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithExternalTcpOn(new IPEndPoint(IPAddress.Parse("0.0.0.0")' 1113))  				.WithInternalTcpOn(new IPEndPoint(IPAddress.Loopback' 1112));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_as_external_ip_address_with_no_explicit_advertise_info_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_use_the_non_default_loopback_ip_as_advertise_info_for_external,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPFinder.GetNonLoopbackAddress()' 1113)'  				_settings.GossipAdvertiseInfo.ExternalTcp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_as_external_ip_address_with_no_explicit_advertise_info_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_use_the_non_default_loopback_ip_as_advertise_info_for_external,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPFinder.GetNonLoopbackAddress()' 2113)'  				_settings.GossipAdvertiseInfo.ExternalHttp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_as_external_ip_address_with_no_explicit_advertise_info_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_use_loopback_ip_as_advertise_info_for_internal,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Loopback' 1112)' _settings.GossipAdvertiseInfo.InternalTcp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_as_external_ip_address_with_no_explicit_advertise_info_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_use_loopback_ip_as_advertise_info_for_internal,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Loopback' 2112)' _settings.GossipAdvertiseInfo.InternalHttp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_for_internal_and_external_ips_with_advertise_info_set_for_external,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithExternalTcpOn(new IPEndPoint(IPAddress.Parse("0.0.0.0")' 1113))  				.WithInternalTcpOn(new IPEndPoint(IPAddress.Parse("0.0.0.0")' 1112))  				.AdvertiseExternalIPAs(IPAddress.Parse("10.0.0.1"));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_for_internal_and_external_ips_with_advertise_info_set_for_external,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithExternalTcpOn(new IPEndPoint(IPAddress.Parse("0.0.0.0")' 1113))  				.WithInternalTcpOn(new IPEndPoint(IPAddress.Parse("0.0.0.0")' 1112))  				.AdvertiseExternalIPAs(IPAddress.Parse("10.0.0.1"));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_for_internal_and_external_ips_with_advertise_info_set_for_external,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_set_the_custom_advertise_info_for_external,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Parse("10.0.0.1")' 1113)'  				_settings.GossipAdvertiseInfo.ExternalTcp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_for_internal_and_external_ips_with_advertise_info_set_for_external,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_set_the_custom_advertise_info_for_external,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Parse("10.0.0.1")' 2113)'  				_settings.GossipAdvertiseInfo.ExternalHttp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_for_internal_and_external_ips_with_advertise_info_set_for_external,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_use_the_non_default_loopback_ip_as_advertise_info_for_internal,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPFinder.GetNonLoopbackAddress()' 1112)'  				_settings.GossipAdvertiseInfo.InternalTcp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_0_0_0_0_for_internal_and_external_ips_with_advertise_info_set_for_external,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_cluster_node_and_custom_settings.cs,should_use_the_non_default_loopback_ip_as_advertise_info_for_internal,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPFinder.GetNonLoopbackAddress()' 2112)'  				_settings.GossipAdvertiseInfo.InternalHttp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_default_settings_as_single_node,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_default_settings.cs,should_have_default_endpoints,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Loopback' 1112)' _settings.NodeInfo.InternalTcp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_default_settings_as_single_node,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_default_settings.cs,should_have_default_endpoints,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Loopback' 1113)' _settings.NodeInfo.ExternalTcp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_default_settings_as_single_node,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_default_settings.cs,should_have_default_endpoints,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Loopback' 2112)' _settings.NodeInfo.InternalHttp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_default_settings_as_single_node,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_default_settings.cs,should_have_default_endpoints,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Loopback' 2113)' _settings.NodeInfo.ExternalHttp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_default_settings_as_node_in_a_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_default_settings.cs,should_have_default_endpoints,The following statement contains a magic number: var internalTcp = new IPEndPoint(IPAddress.Loopback' 1112);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_default_settings_as_node_in_a_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_default_settings.cs,should_have_default_endpoints,The following statement contains a magic number: var externalTcp = new IPEndPoint(IPAddress.Loopback' 1113);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_default_settings_as_node_in_a_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_default_settings.cs,should_have_default_endpoints,The following statement contains a magic number: var internalHttp = new IPEndPoint(IPAddress.Loopback' 2112);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_default_settings_as_node_in_a_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_default_settings.cs,should_have_default_endpoints,The following statement contains a magic number: var externalHttp = new IPEndPoint(IPAddress.Loopback' 2113);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_default_settings_as_node_in_a_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_default_settings.cs,should_set_commit_and_prepare_counts_to_quorum_size,The following statement contains a magic number: var quorumSize = _clusterSize / 2 + 1;
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_ssl_enabled_and_using_a_security_certificate_from_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_secure_tcp.cs,Given,The following statement contains a magic number: _internalSecTcp = new IPEndPoint(baseIpAddress' 1114);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_ssl_enabled_and_using_a_security_certificate_from_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_secure_tcp.cs,Given,The following statement contains a magic number: _externalSecTcp = new IPEndPoint(baseIpAddress' 1115);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_ssl_enabled_and_using_a_security_certificate,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_secure_tcp.cs,Given,The following statement contains a magic number: _internalSecTcp = new IPEndPoint(baseIpAddress' 1114);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_ssl_enabled_and_using_a_security_certificate,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_secure_tcp.cs,Given,The following statement contains a magic number: _externalSecTcp = new IPEndPoint(baseIpAddress' 1115);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_secure_tcp_endpoints_and_no_certificates,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_secure_tcp.cs,SetUp,The following statement contains a magic number: var internalSecTcp = new IPEndPoint(baseIpAddress' 1114);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_secure_tcp_endpoints_and_no_certificates,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_secure_tcp.cs,SetUp,The following statement contains a magic number: var externalSecTcp = new IPEndPoint(baseIpAddress' 1115);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_default_endpoints_option,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_internal_tcp,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Loopback' 1112)' _settings.NodeInfo.InternalTcp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_default_endpoints_option,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_external_tcp,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Loopback' 1113)' _settings.NodeInfo.ExternalTcp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_default_endpoints_option,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_internal_http,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Loopback' 2112)' _settings.NodeInfo.InternalHttp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_default_endpoints_option,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_external_http,The following statement contains a magic number: Assert.AreEqual(new IPEndPoint(IPAddress.Loopback' 2113)' _settings.NodeInfo.ExternalHttp);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_number_of_worker_threads,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithWorkerThreads(10);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_number_of_worker_threads,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_the_number_of_worker_threads,The following statement contains a magic number: Assert.AreEqual(10' _settings.WorkerThreads);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_min_flush_delay,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithMinFlushDelay(TimeSpan.FromMilliseconds(1200));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_min_flush_delay,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_the_min_flush_delay,The following statement contains a magic number: Assert.AreEqual(1200' _settings.MinFlushDelay.TotalMilliseconds);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_scavenge_history_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithScavengeHistoryMaxAge(2);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_scavenge_history_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_the_scavenge_history_max_age,The following statement contains a magic number: Assert.AreEqual(2' _settings.ScavengeHistoryMaxAge);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_max_memtable_size,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.MaximumMemoryTableSizeOf(200);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_max_memtable_size,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_the_max_memtable_size,The following statement contains a magic number: Assert.AreEqual(200' _settings.MaxMemtableEntryCount);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_hash_collision_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithHashCollisionReadLimitOf(200);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_hash_collision_read_limit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_the_hash_collision_read_limit,The following statement contains a magic number: Assert.AreEqual(200' _settings.HashCollisionReadLimit);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_prepare_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithPrepareTimeout(TimeSpan.FromMilliseconds(1234));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_prepare_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_the_prepare_timeout,The following statement contains a magic number: Assert.AreEqual(1234' _settings.PrepareTimeout.TotalMilliseconds);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_commit_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithCommitTimeout(TimeSpan.FromMilliseconds(1234));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_commit_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_the_commit_timeout,The following statement contains a magic number: Assert.AreEqual(1234' _settings.CommitTimeout.TotalMilliseconds);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_internal_heartbeat_interval,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithInternalHeartbeatInterval(TimeSpan.FromMilliseconds(1234));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_internal_heartbeat_interval,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_the_internal_heartbeat_interval,The following statement contains a magic number: Assert.AreEqual(1234' _settings.IntTcpHeartbeatInterval.TotalMilliseconds);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_internal_heartbeat_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithInternalHeartbeatTimeout(TimeSpan.FromMilliseconds(1234));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_internal_heartbeat_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_the_internal_heartbeat_timeout,The following statement contains a magic number: Assert.AreEqual(1234' _settings.IntTcpHeartbeatTimeout.TotalMilliseconds);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_external_heartbeat_interval,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithExternalHeartbeatInterval(TimeSpan.FromMilliseconds(1234));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_external_heartbeat_interval,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_the_external_heartbeat_interval,The following statement contains a magic number: Assert.AreEqual(1234' _settings.ExtTcpHeartbeatInterval.TotalMilliseconds);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_external_heartbeat_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithExternalHeartbeatTimeout(TimeSpan.FromMilliseconds(1234));
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_external_heartbeat_timeout,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_the_external_heartbeat_timeout,The following statement contains a magic number: Assert.AreEqual(1234' _settings.ExtTcpHeartbeatTimeout.TotalMilliseconds);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_ip_endpoints,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _internalHttp = new IPEndPoint(baseIpAddress' 1112);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_ip_endpoints,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _externalHttp = new IPEndPoint(baseIpAddress' 1113);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_ip_endpoints,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _internalTcp = new IPEndPoint(baseIpAddress' 1114);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_ip_endpoints,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _externalTcp = new IPEndPoint(baseIpAddress' 1115);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_http_prefixes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: int intPort = 1112;
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_http_prefixes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: int extPort = 1113;
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_add_interface_prefixes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _internalHttp = new IPEndPoint(baseIpAddress' 1112);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_add_interface_prefixes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _externalHttp = new IPEndPoint(baseIpAddress' 1113);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_add_interface_prefixes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _internalTcp = new IPEndPoint(baseIpAddress' 1114);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_add_interface_prefixes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _externalTcp = new IPEndPoint(baseIpAddress' 1115);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_dont_add_interface_prefixes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _internalHttp = new IPEndPoint(baseIpAddress' 1112);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_dont_add_interface_prefixes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _externalHttp = new IPEndPoint(baseIpAddress' 1113);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_dont_add_interface_prefixes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _internalTcp = new IPEndPoint(baseIpAddress' 1114);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_dont_add_interface_prefixes,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _externalTcp = new IPEndPoint(baseIpAddress' 1115);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_index_cache_depth,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithIndexCacheDepth(8);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_index_cache_depth,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_index_cache_depth,The following statement contains a magic number: Assert.AreEqual(8' _settings.IndexCacheDepth);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_chunk_size,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _chunkSize = 268435712;
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_chunk_cache_size,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _chunkCacheSize = 268435712;
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_number_of_cached_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: _builder.WithTfCachedChunks(10);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_number_of_cached_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,should_set_max_chunk_size_to_the_size_of_the_number_of_cached_chunks,The following statement contains a magic number: var chunkSizeResult = 10 * (long)(TFConsts.ChunkSize + ChunkHeader.Size + ChunkFooter.Size);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_advertise_as,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: var intTcpEndpoint = new IPEndPoint(internalIPToAdvertise' 1111);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_advertise_as,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: var intSecTcpEndpoint = new IPEndPoint(internalIPToAdvertise' 1112);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_advertise_as,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: var extTcpEndpoint = new IPEndPoint(externalIPToAdvertise' 1113);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_advertise_as,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: var extSecTcpEndpoint = new IPEndPoint(externalIPToAdvertise' 1114);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_advertise_as,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: var intHttpEndpoint = new IPEndPoint(internalIPToAdvertise' 1115);
Magic Number,EventStore.Core.Tests.Common.VNodeBuilderTests.when_building,with_custom_advertise_as,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Common\VNodeBuilderTests\when_building\with_single_node_and_custom_settings.cs,Given,The following statement contains a magic number: var extHttpEndpoint = new IPEndPoint(externalIPToAdvertise' 1116);
Magic Number,EventStore.Core.Tests,copying_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\copying_metadata.cs,copies_all_values,The following statement contains a magic number: var source = StreamMetadata.Build()  				.SetCacheControl(TimeSpan.FromDays(1))  				.SetCustomProperty("Test"' "Value")  				.SetReadRole("foo")  				.SetWriteRole("bar")  				.SetDeleteRole("baz")  				.SetMetadataReadRole("qux")  				.SetMetadataWriteRole("quux")  				.SetMaxAge(TimeSpan.FromHours(1))  				.SetMaxCount(2)  				.SetTruncateBefore(4)  				.Build();
Magic Number,EventStore.Core.Tests,copying_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\copying_metadata.cs,copies_all_values,The following statement contains a magic number: var source = StreamMetadata.Build()  				.SetCacheControl(TimeSpan.FromDays(1))  				.SetCustomProperty("Test"' "Value")  				.SetReadRole("foo")  				.SetWriteRole("bar")  				.SetDeleteRole("baz")  				.SetMetadataReadRole("qux")  				.SetMetadataWriteRole("quux")  				.SetMaxAge(TimeSpan.FromHours(1))  				.SetMaxCount(2)  				.SetTruncateBefore(4)  				.Build();
Magic Number,EventStore.Core.Tests,copying_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\copying_metadata.cs,can_mutate_copy,The following statement contains a magic number: var source = StreamMetadata.Build()  				.SetCacheControl(TimeSpan.FromDays(1))  				.SetCustomProperty("Test"' "Value")  				.SetReadRole("foo")  				.SetWriteRole("bar")  				.SetDeleteRole("baz")  				.SetMetadataReadRole("qux")  				.SetMetadataWriteRole("quux")  				.SetMaxAge(TimeSpan.FromHours(1))  				.SetMaxCount(2)  				.SetTruncateBefore(4)  				.Build();
Magic Number,EventStore.Core.Tests,copying_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\copying_metadata.cs,can_mutate_copy,The following statement contains a magic number: var source = StreamMetadata.Build()  				.SetCacheControl(TimeSpan.FromDays(1))  				.SetCustomProperty("Test"' "Value")  				.SetReadRole("foo")  				.SetWriteRole("bar")  				.SetDeleteRole("baz")  				.SetMetadataReadRole("qux")  				.SetMetadataWriteRole("quux")  				.SetMaxAge(TimeSpan.FromHours(1))  				.SetMaxCount(2)  				.SetTruncateBefore(4)  				.Build();
Magic Number,EventStore.Core.Tests,copying_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\copying_metadata.cs,can_mutate_copy,The following statement contains a magic number: var expected = StreamMetadata.Build()  				.SetCacheControl(TimeSpan.FromDays(1))  				.SetCustomProperty("Test"' "Value")  				.SetCustomProperty("Test2"' "Value2")  				.SetReadRole("foo")  				.SetWriteRole("bar")  				.SetDeleteRole("baz")  				.SetMetadataReadRole("qux")  				.SetMetadataWriteRole("quux")  				.SetMaxAge(TimeSpan.FromHours(1))  				.SetMaxCount(4)  				.SetTruncateBefore(4)  				.Build();
Magic Number,EventStore.Core.Tests,copying_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\copying_metadata.cs,can_mutate_copy,The following statement contains a magic number: var expected = StreamMetadata.Build()  				.SetCacheControl(TimeSpan.FromDays(1))  				.SetCustomProperty("Test"' "Value")  				.SetCustomProperty("Test2"' "Value2")  				.SetReadRole("foo")  				.SetWriteRole("bar")  				.SetDeleteRole("baz")  				.SetMetadataReadRole("qux")  				.SetMetadataWriteRole("quux")  				.SetMaxAge(TimeSpan.FromHours(1))  				.SetMaxCount(4)  				.SetTruncateBefore(4)  				.Build();
Magic Number,EventStore.Core.Tests,copying_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\copying_metadata.cs,can_mutate_copy,The following statement contains a magic number: var copied = source.Copy()  				.SetMaxCount(4)  				.SetCustomProperty("Test2"' "Value2")  				.Build();
Magic Number,EventStore.Core.Tests,mono_filestream_bug,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\mono_filestream_bug.cs,show_time,The following statement contains a magic number: const int bufferSize = 128;
Magic Number,EventStore.Core.Tests,SpecificationWithDirectory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\SpecificationWithDirectory.cs,SetUp,The following statement contains a magic number: var typeName = GetType().Name.Length > 30 ? GetType().Name.Substring(0' 30) : GetType().Name;
Magic Number,EventStore.Core.Tests,SpecificationWithDirectory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\SpecificationWithDirectory.cs,SetUp,The following statement contains a magic number: var typeName = GetType().Name.Length > 30 ? GetType().Name.Substring(0' 30) : GetType().Name;
Magic Number,EventStore.Core.Tests,SpecificationWithDirectoryPerTestFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\SpecificationWithDirectoryPerTestFixture.cs,GetTempFilePath,The following statement contains a magic number: var typeName = GetType().Name.Length > 30 ? GetType().Name.Substring(0' 30) : GetType().Name;
Magic Number,EventStore.Core.Tests,SpecificationWithDirectoryPerTestFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\SpecificationWithDirectoryPerTestFixture.cs,GetTempFilePath,The following statement contains a magic number: var typeName = GetType().Name.Length > 30 ? GetType().Name.Substring(0' 30) : GetType().Name;
Magic Number,EventStore.Core.Tests,SpecificationWithDirectoryPerTestFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\SpecificationWithDirectoryPerTestFixture.cs,TestFixtureSetUp,The following statement contains a magic number: var typeName = GetType().Name.Length > 30 ? GetType().Name.Substring(0' 30) : GetType().Name;
Magic Number,EventStore.Core.Tests,SpecificationWithDirectoryPerTestFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\SpecificationWithDirectoryPerTestFixture.cs,TestFixtureSetUp,The following statement contains a magic number: var typeName = GetType().Name.Length > 30 ? GetType().Name.Substring(0' 30) : GetType().Name;
Magic Number,EventStore.Core.Tests,SpecificationWithFile,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\SpecificationWithFile.cs,SetUp,The following statement contains a magic number: var typeName = GetType().Name.Length > 30 ? GetType().Name.Substring(0' 30) : GetType().Name;
Magic Number,EventStore.Core.Tests,SpecificationWithFile,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\SpecificationWithFile.cs,SetUp,The following statement contains a magic number: var typeName = GetType().Name.Length > 30 ? GetType().Name.Substring(0' 30) : GetType().Name;
Magic Number,EventStore.Core.Tests,SpecificationWithFilePerTestFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\SpecificationWithFilePerTestFixture.cs,TestFixtureSetUp,The following statement contains a magic number: var typeName = GetType().Name.Length > 30 ? GetType().Name.Substring(0' 30) : GetType().Name;
Magic Number,EventStore.Core.Tests,SpecificationWithFilePerTestFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\SpecificationWithFilePerTestFixture.cs,TestFixtureSetUp,The following statement contains a magic number: var typeName = GetType().Name.Length > 30 ? GetType().Name.Substring(0' 30) : GetType().Name;
Magic Number,EventStore.Core.Tests,TestsInitFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TestsInitFixture.cs,SetUp,The following statement contains a magic number: System.Net.ServicePointManager.DefaultConnectionLimit = 1000;
Magic Number,EventStore.Core.Tests,TestsInitFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TestsInitFixture.cs,LogEnvironmentInfo,The following statement contains a magic number: log.Info("\n{0'-25} {1} ({2}/{3}' {4})\n"  			         + "{5'-25} {6} ({7})\n"  			         + "{8'-25} {9} ({10}-bit)\n"  			         + "{11'-25} {12}\n\n"'  				"ES VERSION:"' VersionInfo.Version' VersionInfo.Branch' VersionInfo.Hashtag' VersionInfo.Timestamp'  				"OS:"' OS.OsFlavor' Environment.OSVersion'  				"RUNTIME:"' OS.GetRuntimeVersion()' Marshal.SizeOf(typeof(IntPtr)) * 8'  				"GC:"'  				GC.MaxGeneration == 0  					? "NON-GENERATION (PROBABLY BOEHM)"  					: string.Format("{0} GENERATIONS"' GC.MaxGeneration + 1));
Magic Number,EventStore.Core.Tests,VerifyIntPtrSize,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\VerifyIntPtrSize.cs,TestIntPtrSize,The following statement contains a magic number: Assert.AreEqual(8' IntPtr.Size);
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,always_return_true_if_an_item_was_added,The following statement contains a magic number: p > 1.0e-7
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,always_return_true_if_an_item_was_added,The following statement contains a magic number: n <= 1000
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,always_return_true_if_an_item_was_added_for_large_n,The following statement contains a magic number: int n = 1234567;
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,always_return_true_if_an_item_was_added_for_large_n,The following statement contains a magic number: double p = 1.0e-6;
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,support_adding_large_values,The following statement contains a magic number: int n = 1234567;
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,support_adding_large_values,The following statement contains a magic number: double p = 1.0e-6;
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,support_adding_large_values,The following statement contains a magic number: long[] items = {  				192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L' 939342020387L' 37253255484L'  				346536436L' 123921398432L' 8324982394329432L' 183874782348723874L' long.MaxValue  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,support_adding_large_values,The following statement contains a magic number: long[] items = {  				192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L' 939342020387L' 37253255484L'  				346536436L' 123921398432L' 8324982394329432L' 183874782348723874L' long.MaxValue  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,support_adding_large_values,The following statement contains a magic number: long[] items = {  				192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L' 939342020387L' 37253255484L'  				346536436L' 123921398432L' 8324982394329432L' 183874782348723874L' long.MaxValue  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,support_adding_large_values,The following statement contains a magic number: long[] items = {  				192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L' 939342020387L' 37253255484L'  				346536436L' 123921398432L' 8324982394329432L' 183874782348723874L' long.MaxValue  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,support_adding_large_values,The following statement contains a magic number: long[] items = {  				192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L' 939342020387L' 37253255484L'  				346536436L' 123921398432L' 8324982394329432L' 183874782348723874L' long.MaxValue  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,support_adding_large_values,The following statement contains a magic number: long[] items = {  				192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L' 939342020387L' 37253255484L'  				346536436L' 123921398432L' 8324982394329432L' 183874782348723874L' long.MaxValue  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,support_adding_large_values,The following statement contains a magic number: long[] items = {  				192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L' 939342020387L' 37253255484L'  				346536436L' 123921398432L' 8324982394329432L' 183874782348723874L' long.MaxValue  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,support_adding_large_values,The following statement contains a magic number: long[] items = {  				192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L' 939342020387L' 37253255484L'  				346536436L' 123921398432L' 8324982394329432L' 183874782348723874L' long.MaxValue  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,support_adding_large_values,The following statement contains a magic number: long[] items = {  				192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L' 939342020387L' 37253255484L'  				346536436L' 123921398432L' 8324982394329432L' 183874782348723874L' long.MaxValue  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,support_adding_large_values,The following statement contains a magic number: long[] items = {  				192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L' 939342020387L' 37253255484L'  				346536436L' 123921398432L' 8324982394329432L' 183874782348723874L' long.MaxValue  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,support_adding_large_values,The following statement contains a magic number: long[] items = {  				192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L' 939342020387L' 37253255484L'  				346536436L' 123921398432L' 8324982394329432L' 183874782348723874L' long.MaxValue  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,have_false_positives_with_probability_p,The following statement contains a magic number: int expectedFalsePositives = (int)Math.Ceiling(n * p / 2.0);
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,have_false_positives_with_probability_p,The following statement contains a magic number: p > 1.0e-7
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,have_false_positives_with_probability_p,The following statement contains a magic number: n <= 1000
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,have_false_positives_with_probability_p_for_large_n,The following statement contains a magic number: int n = 1234567;
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,have_false_positives_with_probability_p_for_large_n,The following statement contains a magic number: int expectedFalsePositives = (int)Math.Ceiling(n * p / 2.0);
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,have_false_positives_with_probability_p_for_large_n,The following statement contains a magic number: p > 1.0e-7
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,throw_argumentoutofrangeexception_when_given_non_positive_n,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new BloomFilter(0' 0.1));
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,throw_argumentoutofrangeexception_when_given_non_positive_n,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new BloomFilter(-1' 0.1));
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,throw_argumentoutofrangeexception_when_given_non_positive_p,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new BloomFilter(1' -0.1));
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,throw_argumentoutofrangeexception_when_number_of_bits_too_large,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new BloomFilter(123456789' 0.0000000001));
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,throw_argumentoutofrangeexception_when_number_of_bits_too_large,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new BloomFilter(123456789' 0.0000000001));
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: Assert.AreEqual(8' bytes.Length);
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: v <<= 8;
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: i <= 1000
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: long[] nums = {  				long.MaxValue' long.MinValue' 0' 192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L'  				939342020387L' 37253255484L' 346536436L' 123921398432L' 8324982394329432L' 183874782348723874L  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: long[] nums = {  				long.MaxValue' long.MinValue' 0' 192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L'  				939342020387L' 37253255484L' 346536436L' 123921398432L' 8324982394329432L' 183874782348723874L  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: long[] nums = {  				long.MaxValue' long.MinValue' 0' 192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L'  				939342020387L' 37253255484L' 346536436L' 123921398432L' 8324982394329432L' 183874782348723874L  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: long[] nums = {  				long.MaxValue' long.MinValue' 0' 192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L'  				939342020387L' 37253255484L' 346536436L' 123921398432L' 8324982394329432L' 183874782348723874L  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: long[] nums = {  				long.MaxValue' long.MinValue' 0' 192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L'  				939342020387L' 37253255484L' 346536436L' 123921398432L' 8324982394329432L' 183874782348723874L  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: long[] nums = {  				long.MaxValue' long.MinValue' 0' 192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L'  				939342020387L' 37253255484L' 346536436L' 123921398432L' 8324982394329432L' 183874782348723874L  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: long[] nums = {  				long.MaxValue' long.MinValue' 0' 192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L'  				939342020387L' 37253255484L' 346536436L' 123921398432L' 8324982394329432L' 183874782348723874L  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: long[] nums = {  				long.MaxValue' long.MinValue' 0' 192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L'  				939342020387L' 37253255484L' 346536436L' 123921398432L' 8324982394329432L' 183874782348723874L  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: long[] nums = {  				long.MaxValue' long.MinValue' 0' 192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L'  				939342020387L' 37253255484L' 346536436L' 123921398432L' 8324982394329432L' 183874782348723874L  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: long[] nums = {  				long.MaxValue' long.MinValue' 0' 192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L'  				939342020387L' 37253255484L' 346536436L' 123921398432L' 8324982394329432L' 183874782348723874L  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: long[] nums = {  				long.MaxValue' long.MinValue' 0' 192389123812L' 286928492L' 27582928698L' 72669175482L' 1738996371L'  				939342020387L' 37253255484L' 346536436L' 123921398432L' 8324982394329432L' 183874782348723874L  			};
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: Assert.AreEqual(8' bytes.Length);
Magic Number,EventStore.Core.Tests.DataStructures,bloom_filter_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\bloom_filter_should.cs,correctly_convert_long_to_bytes,The following statement contains a magic number: v <<= 8;
Magic Number,EventStore.Core.Tests.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_1,The following statement contains a magic number: queue.Enqueue(1234);
Magic Number,EventStore.Core.Tests.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_1,The following statement contains a magic number: queue.Enqueue(12345);
Magic Number,EventStore.Core.Tests.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_1,The following statement contains a magic number: Assert.AreEqual(2' queue.Count);
Magic Number,EventStore.Core.Tests.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_1,The following statement contains a magic number: Assert.AreEqual(1234' val);
Magic Number,EventStore.Core.Tests.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_1,The following statement contains a magic number: Assert.AreEqual(12345' val);
Magic Number,EventStore.Core.Tests.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_2,The following statement contains a magic number: i <= 1000
Magic Number,EventStore.Core.Tests.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_2,The following statement contains a magic number: Assert.AreEqual(1000-i' queue.Count);
Magic Number,EventStore.Core.Tests.DataStructures,concurrent_queue_wrapper_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\concurrent_queue_wrapper_should.cs,return_correct_counts_and_values_2,The following statement contains a magic number: i <= 1000
Magic Number,EventStore.Core.Tests.DataStructures,concurrent_queue_wrapper_with_parallel_dequeues_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\concurrent_queue_wrapper_should.cs,always_return_non_negative_count,The following statement contains a magic number: threads[i].Join(TimeSpan.FromSeconds(5));
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_correct_min_element_and_keep_it_in_heap_on_findmin_operation,The following statement contains a magic number: _heap.Add(9);
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_correct_min_element_and_keep_it_in_heap_on_findmin_operation,The following statement contains a magic number: _heap.Add(7);
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_correct_min_element_and_keep_it_in_heap_on_findmin_operation,The following statement contains a magic number: _heap.Add(5);
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_correct_min_element_and_keep_it_in_heap_on_findmin_operation,The following statement contains a magic number: _heap.Add(3);
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_correct_min_element_and_keep_it_in_heap_on_findmin_operation,The following statement contains a magic number: Assert.That(_heap.FindMin()' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_correct_min_element_and_keep_it_in_heap_on_findmin_operation,The following statement contains a magic number: Assert.That(_heap.Count' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_correct_min_element_and_remove_it_from_heap_on_delete_min_operation,The following statement contains a magic number: _heap.Add(7);
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_correct_min_element_and_remove_it_from_heap_on_delete_min_operation,The following statement contains a magic number: _heap.Add(5);
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_correct_min_element_and_remove_it_from_heap_on_delete_min_operation,The following statement contains a magic number: _heap.Add(3);
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_correct_min_element_and_remove_it_from_heap_on_delete_min_operation,The following statement contains a magic number: Assert.That(_heap.DeleteMin()' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_correct_min_element_and_remove_it_from_heap_on_delete_min_operation,The following statement contains a magic number: Assert.That(_heap.Count' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_elements_in_sorted_order,The following statement contains a magic number: var reference = new[] {2' 5' 7' 9' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_elements_in_sorted_order,The following statement contains a magic number: var reference = new[] {2' 5' 7' 9' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_elements_in_sorted_order,The following statement contains a magic number: var reference = new[] {2' 5' 7' 9' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_elements_in_sorted_order,The following statement contains a magic number: var reference = new[] {2' 5' 7' 9' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_elements_in_sorted_order,The following statement contains a magic number: var reference = new[] {2' 5' 7' 9' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_elements_in_sorted_order,The following statement contains a magic number: var reference = new[] {2' 5' 7' 9' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,return_elements_in_sorted_order,The following statement contains a magic number: var reference = new[] {2' 5' 7' 9' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,keep_all_duplicates,The following statement contains a magic number: var reference = new[] {2' 5' 5' 7' 9' 9' 11' 11' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,keep_all_duplicates,The following statement contains a magic number: var reference = new[] {2' 5' 5' 7' 9' 9' 11' 11' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,keep_all_duplicates,The following statement contains a magic number: var reference = new[] {2' 5' 5' 7' 9' 9' 11' 11' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,keep_all_duplicates,The following statement contains a magic number: var reference = new[] {2' 5' 5' 7' 9' 9' 11' 11' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,keep_all_duplicates,The following statement contains a magic number: var reference = new[] {2' 5' 5' 7' 9' 9' 11' 11' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,keep_all_duplicates,The following statement contains a magic number: var reference = new[] {2' 5' 5' 7' 9' 9' 11' 11' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,keep_all_duplicates,The following statement contains a magic number: var reference = new[] {2' 5' 5' 7' 9' 9' 11' 11' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,keep_all_duplicates,The following statement contains a magic number: var reference = new[] {2' 5' 5' 7' 9' 9' 11' 11' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,keep_all_duplicates,The following statement contains a magic number: var reference = new[] {2' 5' 5' 7' 9' 9' 11' 11' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,keep_all_duplicates,The following statement contains a magic number: var reference = new[] {2' 5' 5' 7' 9' 9' 11' 11' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,keep_all_duplicates,The following statement contains a magic number: var reference = new[] {2' 5' 5' 7' 9' 9' 11' 11' 11' 27' 32};
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,handle_a_lot_of_elements_and_not_loose_any_elements,The following statement contains a magic number: var rnd = new Random(123456791);
Magic Number,EventStore.Core.Tests.DataStructures,pairing_heap_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\DataStructures\pairing_heap_should.cs,handle_a_lot_of_elements_and_not_loose_any_elements,The following statement contains a magic number: i < 1000
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,does_not_include_previous_data_in_stream,The following statement contains a magic number: var bytes = new byte[1024];
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,does_not_include_previous_data_in_stream,The following statement contains a magic number: bytes[i] = (byte)(i % 255);
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,does_not_include_previous_data_in_stream,The following statement contains a magic number: i < 1024
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,does_not_include_previous_data_in_stream,The following statement contains a magic number: stream.Seek(16' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,does_not_include_previous_data_in_stream,The following statement contains a magic number: stream.Seek(16' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,does_not_include_previous_data_in_stream,The following statement contains a magic number: Assert.AreEqual(16' hash.Length);
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,changing_data_in_stream_results_in_different_hash,The following statement contains a magic number: var bytes = new byte[1024];
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,changing_data_in_stream_results_in_different_hash,The following statement contains a magic number: bytes[i] = (byte)(i % 255);
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,changing_data_in_stream_results_in_different_hash,The following statement contains a magic number: i < 1024
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,changing_data_in_stream_results_in_different_hash,The following statement contains a magic number: stream.Seek(16' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,changing_data_in_stream_results_in_different_hash,The following statement contains a magic number: bytes[243] = 17;
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,changing_data_in_stream_results_in_different_hash,The following statement contains a magic number: bytes[243] = 17;
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,changing_data_in_stream_results_in_different_hash,The following statement contains a magic number: stream.Seek(16' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,includes_correct_substream_data,The following statement contains a magic number: var bytes = new byte[1024];
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,includes_correct_substream_data,The following statement contains a magic number: bytes[i] = (byte)(i % 255);
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,includes_correct_substream_data,The following statement contains a magic number: i < 1024
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,includes_correct_substream_data,The following statement contains a magic number: var hash = MD5Hash.GetHashFor(stream' 16' bytes.Length - 32);
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,includes_correct_substream_data,The following statement contains a magic number: var hash = MD5Hash.GetHashFor(stream' 16' bytes.Length - 32);
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,includes_correct_substream_data,The following statement contains a magic number: var referenceHash = md5.ComputeHash(bytes' 16' bytes.Length - 32);
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,includes_correct_substream_data,The following statement contains a magic number: var referenceHash = md5.ComputeHash(bytes' 16' bytes.Length - 32);
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,includes_correct_substream_data,The following statement contains a magic number: Assert.AreEqual(16' hash.Length);
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,randomized_hash_verification_test,The following statement contains a magic number: var buf = new byte[1024];
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,randomized_hash_verification_test,The following statement contains a magic number: Assert.AreEqual(16' hash.Length);
Magic Number,EventStore.Core.Tests.Hashes,MD5HashTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\MD5HashTests.cs,randomized_hash_verification_test,The following statement contains a magic number: j < buf.Length + 10
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,VerificationTest,The following statement contains a magic number: const int hashBytes = 4;
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,VerificationTest,The following statement contains a magic number: var key = new byte[256];
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,VerificationTest,The following statement contains a magic number: var hashes = new byte[hashBytes * 256];
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,VerificationTest,The following statement contains a magic number: var hash = hasher.Hash(key' 0' (uint)i' (uint)(256 - i));
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,VerificationTest,The following statement contains a magic number: i < 256
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,VerificationTest,The following statement contains a magic number: var verification = hasher.Hash(hashes' 0' hashBytes * 256' 0);
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,SanityTest,The following statement contains a magic number: var rnd = new Random(883741);
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,SanityTest,The following statement contains a magic number: const int reps = 10;
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,SanityTest,The following statement contains a magic number: const int keymax = 256;
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,SanityTest,The following statement contains a magic number: const int pad = 16;
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,SanityTest,The following statement contains a magic number: const int buflen = keymax + pad * 3;
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,SanityTest,The following statement contains a magic number: irep % (reps / 10) == 0
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,SanityTest,The following statement contains a magic number: bit < (len * 8)
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,SanityTest,The following statement contains a magic number: offset < pad * 2
Magic Number,EventStore.Core.Tests.Hashes,SMHasher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Hashes\SMHasher.cs,Flipbit,The following statement contains a magic number: var byteNum = bit >> 3;
Magic Number,EventStore.Core.Tests.Helpers,HelperExtensions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\HelperExtensions.cs,AssertJObject,The following statement contains a magic number: propertyName = "$" + propertyName.Substring(3);
Magic Number,EventStore.Core.Tests.Helpers,length_prefix_suffix_framer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\LengthPrefixSuffixFramer.cs,correctly_frame_byte_array,The following statement contains a magic number: Assert.AreEqual(11' framedData.Length);
Magic Number,EventStore.Core.Tests.Helpers,length_prefix_suffix_framer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\LengthPrefixSuffixFramer.cs,correctly_frame_byte_array,The following statement contains a magic number: Assert.AreEqual(0x00' framedData[2]);
Magic Number,EventStore.Core.Tests.Helpers,length_prefix_suffix_framer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\LengthPrefixSuffixFramer.cs,correctly_frame_byte_array,The following statement contains a magic number: Assert.AreEqual(0x00' framedData[3]);
Magic Number,EventStore.Core.Tests.Helpers,length_prefix_suffix_framer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\LengthPrefixSuffixFramer.cs,correctly_frame_byte_array,The following statement contains a magic number: Assert.AreEqual(0x07' framedData[4]);
Magic Number,EventStore.Core.Tests.Helpers,length_prefix_suffix_framer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\LengthPrefixSuffixFramer.cs,correctly_frame_byte_array,The following statement contains a magic number: Assert.AreEqual(0x17' framedData[5]);
Magic Number,EventStore.Core.Tests.Helpers,length_prefix_suffix_framer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\LengthPrefixSuffixFramer.cs,correctly_frame_byte_array,The following statement contains a magic number: Assert.AreEqual(0x27' framedData[6]);
Magic Number,EventStore.Core.Tests.Helpers,length_prefix_suffix_framer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\LengthPrefixSuffixFramer.cs,correctly_frame_byte_array,The following statement contains a magic number: Assert.AreEqual(0x03' framedData[7]);
Magic Number,EventStore.Core.Tests.Helpers,length_prefix_suffix_framer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\LengthPrefixSuffixFramer.cs,correctly_frame_byte_array,The following statement contains a magic number: Assert.AreEqual(0x00' framedData[8]);
Magic Number,EventStore.Core.Tests.Helpers,length_prefix_suffix_framer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\LengthPrefixSuffixFramer.cs,correctly_frame_byte_array,The following statement contains a magic number: Assert.AreEqual(0x00' framedData[9]);
Magic Number,EventStore.Core.Tests.Helpers,length_prefix_suffix_framer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\LengthPrefixSuffixFramer.cs,correctly_frame_byte_array,The following statement contains a magic number: Assert.AreEqual(0x00' framedData[10]);
Magic Number,EventStore.Core.Tests.Helpers,length_prefix_suffix_framer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\LengthPrefixSuffixFramer.cs,unframe_two_consecutive_records,The following statement contains a magic number: Assert.AreEqual(2' unframedCnt);
Magic Number,EventStore.Core.Tests.Helpers,length_prefix_suffix_framer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\LengthPrefixSuffixFramer.cs,discard_data_when_reset_and_continue_unframing_from_blank_slate,The following statement contains a magic number: Assert.AreEqual(2' unframedCnt);
Magic Number,EventStore.Core.Tests.Helpers,length_prefix_suffix_framer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\LengthPrefixSuffixFramer.cs,ReadAll,The following statement contains a magic number: var buf = new byte[100000];
Magic Number,EventStore.Core.Tests.Helpers,ManualQueue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\ManualQueue.cs,ProcessNonTimer,The following statement contains a magic number: count > 1000
Magic Number,EventStore.Core.Tests.Helpers,MiniClusterNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniClusterNode.cs,MiniClusterNode,The following statement contains a magic number: var singleVNodeSettings = new ClusterVNodeSettings(  				Guid.NewGuid()' debugIndex' InternalTcpEndPoint' InternalTcpSecEndPoint' ExternalTcpEndPoint'  				ExternalTcpSecEndPoint' InternalHttpEndPoint' ExternalHttpEndPoint'  				new Data.GossipAdvertiseInfo(InternalTcpEndPoint' InternalTcpSecEndPoint'  					ExternalTcpEndPoint' ExternalTcpSecEndPoint'  					InternalHttpEndPoint' ExternalHttpEndPoint'  					null' null' 0' 0)'  				new[] {InternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {ExternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}' enableTrustedAuth'  				ssl_connections.GetCertificate()' 1' false'  				""' gossipSeeds' TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)'  				false' false' ""' false' TimeSpan.FromHours(1)' StatsStorage.None' 0'  				new InternalAuthenticationProviderFactory()' disableScavengeMerging: true' scavengeHistoryMaxAge: 30'  				adminOnPublic: true'  				statsOnPublic: true' gossipOnPublic: true' gossipInterval: TimeSpan.FromSeconds(1)'  				gossipAllowedTimeDifference: TimeSpan.FromSeconds(1)' gossipTimeout: TimeSpan.FromSeconds(1)'  				extTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' extTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				intTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' intTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				verifyDbHash: false' maxMemtableEntryCount: memTableSize'  				hashCollisionReadLimit: Opts.HashCollisionReadLimitDefault'  				startStandardProjections: false' disableHTTPCaching: false' logHttpRequests: false'  				connectionPendingSendBytesThreshold: Opts.ConnectionPendingSendBytesThresholdDefault'  				connectionQueueSizeThreshold: Opts.ConnectionQueueSizeThresholdDefault'  				chunkInitialReaderCount: Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Helpers,MiniClusterNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniClusterNode.cs,MiniClusterNode,The following statement contains a magic number: var singleVNodeSettings = new ClusterVNodeSettings(  				Guid.NewGuid()' debugIndex' InternalTcpEndPoint' InternalTcpSecEndPoint' ExternalTcpEndPoint'  				ExternalTcpSecEndPoint' InternalHttpEndPoint' ExternalHttpEndPoint'  				new Data.GossipAdvertiseInfo(InternalTcpEndPoint' InternalTcpSecEndPoint'  					ExternalTcpEndPoint' ExternalTcpSecEndPoint'  					InternalHttpEndPoint' ExternalHttpEndPoint'  					null' null' 0' 0)'  				new[] {InternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {ExternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}' enableTrustedAuth'  				ssl_connections.GetCertificate()' 1' false'  				""' gossipSeeds' TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)'  				false' false' ""' false' TimeSpan.FromHours(1)' StatsStorage.None' 0'  				new InternalAuthenticationProviderFactory()' disableScavengeMerging: true' scavengeHistoryMaxAge: 30'  				adminOnPublic: true'  				statsOnPublic: true' gossipOnPublic: true' gossipInterval: TimeSpan.FromSeconds(1)'  				gossipAllowedTimeDifference: TimeSpan.FromSeconds(1)' gossipTimeout: TimeSpan.FromSeconds(1)'  				extTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' extTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				intTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' intTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				verifyDbHash: false' maxMemtableEntryCount: memTableSize'  				hashCollisionReadLimit: Opts.HashCollisionReadLimitDefault'  				startStandardProjections: false' disableHTTPCaching: false' logHttpRequests: false'  				connectionPendingSendBytesThreshold: Opts.ConnectionPendingSendBytesThresholdDefault'  				connectionQueueSizeThreshold: Opts.ConnectionQueueSizeThresholdDefault'  				chunkInitialReaderCount: Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Helpers,MiniClusterNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniClusterNode.cs,MiniClusterNode,The following statement contains a magic number: var singleVNodeSettings = new ClusterVNodeSettings(  				Guid.NewGuid()' debugIndex' InternalTcpEndPoint' InternalTcpSecEndPoint' ExternalTcpEndPoint'  				ExternalTcpSecEndPoint' InternalHttpEndPoint' ExternalHttpEndPoint'  				new Data.GossipAdvertiseInfo(InternalTcpEndPoint' InternalTcpSecEndPoint'  					ExternalTcpEndPoint' ExternalTcpSecEndPoint'  					InternalHttpEndPoint' ExternalHttpEndPoint'  					null' null' 0' 0)'  				new[] {InternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {ExternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}' enableTrustedAuth'  				ssl_connections.GetCertificate()' 1' false'  				""' gossipSeeds' TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)'  				false' false' ""' false' TimeSpan.FromHours(1)' StatsStorage.None' 0'  				new InternalAuthenticationProviderFactory()' disableScavengeMerging: true' scavengeHistoryMaxAge: 30'  				adminOnPublic: true'  				statsOnPublic: true' gossipOnPublic: true' gossipInterval: TimeSpan.FromSeconds(1)'  				gossipAllowedTimeDifference: TimeSpan.FromSeconds(1)' gossipTimeout: TimeSpan.FromSeconds(1)'  				extTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' extTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				intTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' intTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				verifyDbHash: false' maxMemtableEntryCount: memTableSize'  				hashCollisionReadLimit: Opts.HashCollisionReadLimitDefault'  				startStandardProjections: false' disableHTTPCaching: false' logHttpRequests: false'  				connectionPendingSendBytesThreshold: Opts.ConnectionPendingSendBytesThresholdDefault'  				connectionQueueSizeThreshold: Opts.ConnectionQueueSizeThresholdDefault'  				chunkInitialReaderCount: Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Helpers,MiniClusterNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniClusterNode.cs,MiniClusterNode,The following statement contains a magic number: var singleVNodeSettings = new ClusterVNodeSettings(  				Guid.NewGuid()' debugIndex' InternalTcpEndPoint' InternalTcpSecEndPoint' ExternalTcpEndPoint'  				ExternalTcpSecEndPoint' InternalHttpEndPoint' ExternalHttpEndPoint'  				new Data.GossipAdvertiseInfo(InternalTcpEndPoint' InternalTcpSecEndPoint'  					ExternalTcpEndPoint' ExternalTcpSecEndPoint'  					InternalHttpEndPoint' ExternalHttpEndPoint'  					null' null' 0' 0)'  				new[] {InternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {ExternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}' enableTrustedAuth'  				ssl_connections.GetCertificate()' 1' false'  				""' gossipSeeds' TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)'  				false' false' ""' false' TimeSpan.FromHours(1)' StatsStorage.None' 0'  				new InternalAuthenticationProviderFactory()' disableScavengeMerging: true' scavengeHistoryMaxAge: 30'  				adminOnPublic: true'  				statsOnPublic: true' gossipOnPublic: true' gossipInterval: TimeSpan.FromSeconds(1)'  				gossipAllowedTimeDifference: TimeSpan.FromSeconds(1)' gossipTimeout: TimeSpan.FromSeconds(1)'  				extTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' extTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				intTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' intTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				verifyDbHash: false' maxMemtableEntryCount: memTableSize'  				hashCollisionReadLimit: Opts.HashCollisionReadLimitDefault'  				startStandardProjections: false' disableHTTPCaching: false' logHttpRequests: false'  				connectionPendingSendBytesThreshold: Opts.ConnectionPendingSendBytesThresholdDefault'  				connectionQueueSizeThreshold: Opts.ConnectionQueueSizeThresholdDefault'  				chunkInitialReaderCount: Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Helpers,MiniClusterNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniClusterNode.cs,MiniClusterNode,The following statement contains a magic number: var singleVNodeSettings = new ClusterVNodeSettings(  				Guid.NewGuid()' debugIndex' InternalTcpEndPoint' InternalTcpSecEndPoint' ExternalTcpEndPoint'  				ExternalTcpSecEndPoint' InternalHttpEndPoint' ExternalHttpEndPoint'  				new Data.GossipAdvertiseInfo(InternalTcpEndPoint' InternalTcpSecEndPoint'  					ExternalTcpEndPoint' ExternalTcpSecEndPoint'  					InternalHttpEndPoint' ExternalHttpEndPoint'  					null' null' 0' 0)'  				new[] {InternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {ExternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}' enableTrustedAuth'  				ssl_connections.GetCertificate()' 1' false'  				""' gossipSeeds' TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)'  				false' false' ""' false' TimeSpan.FromHours(1)' StatsStorage.None' 0'  				new InternalAuthenticationProviderFactory()' disableScavengeMerging: true' scavengeHistoryMaxAge: 30'  				adminOnPublic: true'  				statsOnPublic: true' gossipOnPublic: true' gossipInterval: TimeSpan.FromSeconds(1)'  				gossipAllowedTimeDifference: TimeSpan.FromSeconds(1)' gossipTimeout: TimeSpan.FromSeconds(1)'  				extTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' extTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				intTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' intTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				verifyDbHash: false' maxMemtableEntryCount: memTableSize'  				hashCollisionReadLimit: Opts.HashCollisionReadLimitDefault'  				startStandardProjections: false' disableHTTPCaching: false' logHttpRequests: false'  				connectionPendingSendBytesThreshold: Opts.ConnectionPendingSendBytesThresholdDefault'  				connectionQueueSizeThreshold: Opts.ConnectionQueueSizeThresholdDefault'  				chunkInitialReaderCount: Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Helpers,MiniClusterNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniClusterNode.cs,MiniClusterNode,The following statement contains a magic number: var singleVNodeSettings = new ClusterVNodeSettings(  				Guid.NewGuid()' debugIndex' InternalTcpEndPoint' InternalTcpSecEndPoint' ExternalTcpEndPoint'  				ExternalTcpSecEndPoint' InternalHttpEndPoint' ExternalHttpEndPoint'  				new Data.GossipAdvertiseInfo(InternalTcpEndPoint' InternalTcpSecEndPoint'  					ExternalTcpEndPoint' ExternalTcpSecEndPoint'  					InternalHttpEndPoint' ExternalHttpEndPoint'  					null' null' 0' 0)'  				new[] {InternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {ExternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}' enableTrustedAuth'  				ssl_connections.GetCertificate()' 1' false'  				""' gossipSeeds' TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)'  				false' false' ""' false' TimeSpan.FromHours(1)' StatsStorage.None' 0'  				new InternalAuthenticationProviderFactory()' disableScavengeMerging: true' scavengeHistoryMaxAge: 30'  				adminOnPublic: true'  				statsOnPublic: true' gossipOnPublic: true' gossipInterval: TimeSpan.FromSeconds(1)'  				gossipAllowedTimeDifference: TimeSpan.FromSeconds(1)' gossipTimeout: TimeSpan.FromSeconds(1)'  				extTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' extTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				intTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' intTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				verifyDbHash: false' maxMemtableEntryCount: memTableSize'  				hashCollisionReadLimit: Opts.HashCollisionReadLimitDefault'  				startStandardProjections: false' disableHTTPCaching: false' logHttpRequests: false'  				connectionPendingSendBytesThreshold: Opts.ConnectionPendingSendBytesThresholdDefault'  				connectionQueueSizeThreshold: Opts.ConnectionQueueSizeThresholdDefault'  				chunkInitialReaderCount: Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Helpers,MiniClusterNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniClusterNode.cs,MiniClusterNode,The following statement contains a magic number: var singleVNodeSettings = new ClusterVNodeSettings(  				Guid.NewGuid()' debugIndex' InternalTcpEndPoint' InternalTcpSecEndPoint' ExternalTcpEndPoint'  				ExternalTcpSecEndPoint' InternalHttpEndPoint' ExternalHttpEndPoint'  				new Data.GossipAdvertiseInfo(InternalTcpEndPoint' InternalTcpSecEndPoint'  					ExternalTcpEndPoint' ExternalTcpSecEndPoint'  					InternalHttpEndPoint' ExternalHttpEndPoint'  					null' null' 0' 0)'  				new[] {InternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {ExternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}' enableTrustedAuth'  				ssl_connections.GetCertificate()' 1' false'  				""' gossipSeeds' TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)'  				false' false' ""' false' TimeSpan.FromHours(1)' StatsStorage.None' 0'  				new InternalAuthenticationProviderFactory()' disableScavengeMerging: true' scavengeHistoryMaxAge: 30'  				adminOnPublic: true'  				statsOnPublic: true' gossipOnPublic: true' gossipInterval: TimeSpan.FromSeconds(1)'  				gossipAllowedTimeDifference: TimeSpan.FromSeconds(1)' gossipTimeout: TimeSpan.FromSeconds(1)'  				extTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' extTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				intTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' intTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				verifyDbHash: false' maxMemtableEntryCount: memTableSize'  				hashCollisionReadLimit: Opts.HashCollisionReadLimitDefault'  				startStandardProjections: false' disableHTTPCaching: false' logHttpRequests: false'  				connectionPendingSendBytesThreshold: Opts.ConnectionPendingSendBytesThresholdDefault'  				connectionQueueSizeThreshold: Opts.ConnectionQueueSizeThresholdDefault'  				chunkInitialReaderCount: Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Helpers,MiniClusterNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniClusterNode.cs,MiniClusterNode,The following statement contains a magic number: var singleVNodeSettings = new ClusterVNodeSettings(  				Guid.NewGuid()' debugIndex' InternalTcpEndPoint' InternalTcpSecEndPoint' ExternalTcpEndPoint'  				ExternalTcpSecEndPoint' InternalHttpEndPoint' ExternalHttpEndPoint'  				new Data.GossipAdvertiseInfo(InternalTcpEndPoint' InternalTcpSecEndPoint'  					ExternalTcpEndPoint' ExternalTcpSecEndPoint'  					InternalHttpEndPoint' ExternalHttpEndPoint'  					null' null' 0' 0)'  				new[] {InternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {ExternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}' enableTrustedAuth'  				ssl_connections.GetCertificate()' 1' false'  				""' gossipSeeds' TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)'  				false' false' ""' false' TimeSpan.FromHours(1)' StatsStorage.None' 0'  				new InternalAuthenticationProviderFactory()' disableScavengeMerging: true' scavengeHistoryMaxAge: 30'  				adminOnPublic: true'  				statsOnPublic: true' gossipOnPublic: true' gossipInterval: TimeSpan.FromSeconds(1)'  				gossipAllowedTimeDifference: TimeSpan.FromSeconds(1)' gossipTimeout: TimeSpan.FromSeconds(1)'  				extTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' extTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				intTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' intTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				verifyDbHash: false' maxMemtableEntryCount: memTableSize'  				hashCollisionReadLimit: Opts.HashCollisionReadLimitDefault'  				startStandardProjections: false' disableHTTPCaching: false' logHttpRequests: false'  				connectionPendingSendBytesThreshold: Opts.ConnectionPendingSendBytesThresholdDefault'  				connectionQueueSizeThreshold: Opts.ConnectionQueueSizeThresholdDefault'  				chunkInitialReaderCount: Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Helpers,MiniClusterNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniClusterNode.cs,MiniClusterNode,The following statement contains a magic number: var singleVNodeSettings = new ClusterVNodeSettings(  				Guid.NewGuid()' debugIndex' InternalTcpEndPoint' InternalTcpSecEndPoint' ExternalTcpEndPoint'  				ExternalTcpSecEndPoint' InternalHttpEndPoint' ExternalHttpEndPoint'  				new Data.GossipAdvertiseInfo(InternalTcpEndPoint' InternalTcpSecEndPoint'  					ExternalTcpEndPoint' ExternalTcpSecEndPoint'  					InternalHttpEndPoint' ExternalHttpEndPoint'  					null' null' 0' 0)'  				new[] {InternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {ExternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}' enableTrustedAuth'  				ssl_connections.GetCertificate()' 1' false'  				""' gossipSeeds' TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)'  				false' false' ""' false' TimeSpan.FromHours(1)' StatsStorage.None' 0'  				new InternalAuthenticationProviderFactory()' disableScavengeMerging: true' scavengeHistoryMaxAge: 30'  				adminOnPublic: true'  				statsOnPublic: true' gossipOnPublic: true' gossipInterval: TimeSpan.FromSeconds(1)'  				gossipAllowedTimeDifference: TimeSpan.FromSeconds(1)' gossipTimeout: TimeSpan.FromSeconds(1)'  				extTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' extTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				intTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' intTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				verifyDbHash: false' maxMemtableEntryCount: memTableSize'  				hashCollisionReadLimit: Opts.HashCollisionReadLimitDefault'  				startStandardProjections: false' disableHTTPCaching: false' logHttpRequests: false'  				connectionPendingSendBytesThreshold: Opts.ConnectionPendingSendBytesThresholdDefault'  				connectionQueueSizeThreshold: Opts.ConnectionQueueSizeThresholdDefault'  				chunkInitialReaderCount: Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Helpers,MiniClusterNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniClusterNode.cs,MiniClusterNode,The following statement contains a magic number: var singleVNodeSettings = new ClusterVNodeSettings(  				Guid.NewGuid()' debugIndex' InternalTcpEndPoint' InternalTcpSecEndPoint' ExternalTcpEndPoint'  				ExternalTcpSecEndPoint' InternalHttpEndPoint' ExternalHttpEndPoint'  				new Data.GossipAdvertiseInfo(InternalTcpEndPoint' InternalTcpSecEndPoint'  					ExternalTcpEndPoint' ExternalTcpSecEndPoint'  					InternalHttpEndPoint' ExternalHttpEndPoint'  					null' null' 0' 0)'  				new[] {InternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {ExternalHttpEndPoint.ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}' enableTrustedAuth'  				ssl_connections.GetCertificate()' 1' false'  				""' gossipSeeds' TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)'  				false' false' ""' false' TimeSpan.FromHours(1)' StatsStorage.None' 0'  				new InternalAuthenticationProviderFactory()' disableScavengeMerging: true' scavengeHistoryMaxAge: 30'  				adminOnPublic: true'  				statsOnPublic: true' gossipOnPublic: true' gossipInterval: TimeSpan.FromSeconds(1)'  				gossipAllowedTimeDifference: TimeSpan.FromSeconds(1)' gossipTimeout: TimeSpan.FromSeconds(1)'  				extTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' extTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				intTcpHeartbeatTimeout: TimeSpan.FromSeconds(2)' intTcpHeartbeatInterval: TimeSpan.FromSeconds(2)'  				verifyDbHash: false' maxMemtableEntryCount: memTableSize'  				hashCollisionReadLimit: Opts.HashCollisionReadLimitDefault'  				startStandardProjections: false' disableHTTPCaching: false' logHttpRequests: false'  				connectionPendingSendBytesThreshold: Opts.ConnectionPendingSendBytesThresholdDefault'  				connectionQueueSizeThreshold: Opts.ConnectionQueueSizeThresholdDefault'  				chunkInitialReaderCount: Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Helpers,MiniClusterNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniClusterNode.cs,MiniClusterNode,The following statement contains a magic number: Log.Info(  				"\n{0'-25} {1} ({2}/{3}' {4})\n" + "{5'-25} {6} ({7})\n" + "{8'-25} {9} ({10}-bit)\n"  				+ "{11'-25} {12}\n" + "{13'-25} {14}\n" + "{15'-25} {16}\n" + "{17'-25} {18}\n" + "{19'-25} {20}\n\n"'  				"ES VERSION:"' VersionInfo.Version' VersionInfo.Branch' VersionInfo.Hashtag' VersionInfo.Timestamp'  				"OS:"' OS.OsFlavor' Environment.OSVersion' "RUNTIME:"' OS.GetRuntimeVersion()'  				Marshal.SizeOf(typeof(IntPtr)) * 8' "GC:"'  				GC.MaxGeneration == 0  					? "NON-GENERATION (PROBABLY BOEHM)"  					: string.Format("{0} GENERATIONS"' GC.MaxGeneration + 1)' "DBPATH:"' _dbPath' "ExTCP ENDPOINT:"'  				ExternalTcpEndPoint' "ExTCP SECURE ENDPOINT:"' ExternalTcpSecEndPoint' "ExHTTP ENDPOINT:"'  				ExternalHttpEndPoint);
Magic Number,EventStore.Core.Tests.Helpers,MiniClusterNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniClusterNode.cs,Shutdown,The following statement contains a magic number: !Node.Stop(TimeSpan.FromSeconds(20)' false' true)
Magic Number,EventStore.Core.Tests.Helpers,MiniNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniNode.cs,MiniNode,The following statement contains a magic number: builder.WithInternalTcpOn(IntTcpEndPoint)  				.WithInternalSecureTcpOn(IntSecTcpEndPoint)  				.WithExternalTcpOn(TcpEndPoint)  				.WithExternalSecureTcpOn(TcpSecEndPoint)  				.WithInternalHttpOn(IntHttpEndPoint)  				.WithExternalHttpOn(ExtHttpEndPoint)  				.WithTfChunkSize(chunkSize ?? ChunkSize)  				.WithTfChunksCacheSize(cachedChunkSize ?? CachedChunkSize)  				.WithServerCertificate(ssl_connections.GetCertificate())  				.WithWorkerThreads(1)  				.DisableDnsDiscovery()  				.WithPrepareTimeout(TimeSpan.FromSeconds(10))  				.WithCommitTimeout(TimeSpan.FromSeconds(10))  				.WithStatsPeriod(TimeSpan.FromHours(1))  				.DisableScavengeMerging()  				.NoGossipOnPublicInterface()  				.WithInternalHeartbeatInterval(TimeSpan.FromSeconds(10))  				.WithInternalHeartbeatTimeout(TimeSpan.FromSeconds(10))  				.WithExternalHeartbeatInterval(TimeSpan.FromSeconds(10))  				.WithExternalHeartbeatTimeout(TimeSpan.FromSeconds(10))  				.MaximumMemoryTableSizeOf(memTableSize)  				.DoNotVerifyDbHashes()  				.WithStatsStorage(StatsStorage.None)  				.AdvertiseExternalIPAs(advertisedExtIPAddress)  				.AdvertiseExternalHttpPortAs(advertisedExtHttpPort)  				.WithHashCollisionReadLimitOf(hashCollisionReadLimit)  				.WithIndexBitnessVersion(indexBitnessVersion);
Magic Number,EventStore.Core.Tests.Helpers,MiniNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniNode.cs,MiniNode,The following statement contains a magic number: builder.WithInternalTcpOn(IntTcpEndPoint)  				.WithInternalSecureTcpOn(IntSecTcpEndPoint)  				.WithExternalTcpOn(TcpEndPoint)  				.WithExternalSecureTcpOn(TcpSecEndPoint)  				.WithInternalHttpOn(IntHttpEndPoint)  				.WithExternalHttpOn(ExtHttpEndPoint)  				.WithTfChunkSize(chunkSize ?? ChunkSize)  				.WithTfChunksCacheSize(cachedChunkSize ?? CachedChunkSize)  				.WithServerCertificate(ssl_connections.GetCertificate())  				.WithWorkerThreads(1)  				.DisableDnsDiscovery()  				.WithPrepareTimeout(TimeSpan.FromSeconds(10))  				.WithCommitTimeout(TimeSpan.FromSeconds(10))  				.WithStatsPeriod(TimeSpan.FromHours(1))  				.DisableScavengeMerging()  				.NoGossipOnPublicInterface()  				.WithInternalHeartbeatInterval(TimeSpan.FromSeconds(10))  				.WithInternalHeartbeatTimeout(TimeSpan.FromSeconds(10))  				.WithExternalHeartbeatInterval(TimeSpan.FromSeconds(10))  				.WithExternalHeartbeatTimeout(TimeSpan.FromSeconds(10))  				.MaximumMemoryTableSizeOf(memTableSize)  				.DoNotVerifyDbHashes()  				.WithStatsStorage(StatsStorage.None)  				.AdvertiseExternalIPAs(advertisedExtIPAddress)  				.AdvertiseExternalHttpPortAs(advertisedExtHttpPort)  				.WithHashCollisionReadLimitOf(hashCollisionReadLimit)  				.WithIndexBitnessVersion(indexBitnessVersion);
Magic Number,EventStore.Core.Tests.Helpers,MiniNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniNode.cs,MiniNode,The following statement contains a magic number: builder.WithInternalTcpOn(IntTcpEndPoint)  				.WithInternalSecureTcpOn(IntSecTcpEndPoint)  				.WithExternalTcpOn(TcpEndPoint)  				.WithExternalSecureTcpOn(TcpSecEndPoint)  				.WithInternalHttpOn(IntHttpEndPoint)  				.WithExternalHttpOn(ExtHttpEndPoint)  				.WithTfChunkSize(chunkSize ?? ChunkSize)  				.WithTfChunksCacheSize(cachedChunkSize ?? CachedChunkSize)  				.WithServerCertificate(ssl_connections.GetCertificate())  				.WithWorkerThreads(1)  				.DisableDnsDiscovery()  				.WithPrepareTimeout(TimeSpan.FromSeconds(10))  				.WithCommitTimeout(TimeSpan.FromSeconds(10))  				.WithStatsPeriod(TimeSpan.FromHours(1))  				.DisableScavengeMerging()  				.NoGossipOnPublicInterface()  				.WithInternalHeartbeatInterval(TimeSpan.FromSeconds(10))  				.WithInternalHeartbeatTimeout(TimeSpan.FromSeconds(10))  				.WithExternalHeartbeatInterval(TimeSpan.FromSeconds(10))  				.WithExternalHeartbeatTimeout(TimeSpan.FromSeconds(10))  				.MaximumMemoryTableSizeOf(memTableSize)  				.DoNotVerifyDbHashes()  				.WithStatsStorage(StatsStorage.None)  				.AdvertiseExternalIPAs(advertisedExtIPAddress)  				.AdvertiseExternalHttpPortAs(advertisedExtHttpPort)  				.WithHashCollisionReadLimitOf(hashCollisionReadLimit)  				.WithIndexBitnessVersion(indexBitnessVersion);
Magic Number,EventStore.Core.Tests.Helpers,MiniNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniNode.cs,MiniNode,The following statement contains a magic number: builder.WithInternalTcpOn(IntTcpEndPoint)  				.WithInternalSecureTcpOn(IntSecTcpEndPoint)  				.WithExternalTcpOn(TcpEndPoint)  				.WithExternalSecureTcpOn(TcpSecEndPoint)  				.WithInternalHttpOn(IntHttpEndPoint)  				.WithExternalHttpOn(ExtHttpEndPoint)  				.WithTfChunkSize(chunkSize ?? ChunkSize)  				.WithTfChunksCacheSize(cachedChunkSize ?? CachedChunkSize)  				.WithServerCertificate(ssl_connections.GetCertificate())  				.WithWorkerThreads(1)  				.DisableDnsDiscovery()  				.WithPrepareTimeout(TimeSpan.FromSeconds(10))  				.WithCommitTimeout(TimeSpan.FromSeconds(10))  				.WithStatsPeriod(TimeSpan.FromHours(1))  				.DisableScavengeMerging()  				.NoGossipOnPublicInterface()  				.WithInternalHeartbeatInterval(TimeSpan.FromSeconds(10))  				.WithInternalHeartbeatTimeout(TimeSpan.FromSeconds(10))  				.WithExternalHeartbeatInterval(TimeSpan.FromSeconds(10))  				.WithExternalHeartbeatTimeout(TimeSpan.FromSeconds(10))  				.MaximumMemoryTableSizeOf(memTableSize)  				.DoNotVerifyDbHashes()  				.WithStatsStorage(StatsStorage.None)  				.AdvertiseExternalIPAs(advertisedExtIPAddress)  				.AdvertiseExternalHttpPortAs(advertisedExtHttpPort)  				.WithHashCollisionReadLimitOf(hashCollisionReadLimit)  				.WithIndexBitnessVersion(indexBitnessVersion);
Magic Number,EventStore.Core.Tests.Helpers,MiniNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniNode.cs,MiniNode,The following statement contains a magic number: builder.WithInternalTcpOn(IntTcpEndPoint)  				.WithInternalSecureTcpOn(IntSecTcpEndPoint)  				.WithExternalTcpOn(TcpEndPoint)  				.WithExternalSecureTcpOn(TcpSecEndPoint)  				.WithInternalHttpOn(IntHttpEndPoint)  				.WithExternalHttpOn(ExtHttpEndPoint)  				.WithTfChunkSize(chunkSize ?? ChunkSize)  				.WithTfChunksCacheSize(cachedChunkSize ?? CachedChunkSize)  				.WithServerCertificate(ssl_connections.GetCertificate())  				.WithWorkerThreads(1)  				.DisableDnsDiscovery()  				.WithPrepareTimeout(TimeSpan.FromSeconds(10))  				.WithCommitTimeout(TimeSpan.FromSeconds(10))  				.WithStatsPeriod(TimeSpan.FromHours(1))  				.DisableScavengeMerging()  				.NoGossipOnPublicInterface()  				.WithInternalHeartbeatInterval(TimeSpan.FromSeconds(10))  				.WithInternalHeartbeatTimeout(TimeSpan.FromSeconds(10))  				.WithExternalHeartbeatInterval(TimeSpan.FromSeconds(10))  				.WithExternalHeartbeatTimeout(TimeSpan.FromSeconds(10))  				.MaximumMemoryTableSizeOf(memTableSize)  				.DoNotVerifyDbHashes()  				.WithStatsStorage(StatsStorage.None)  				.AdvertiseExternalIPAs(advertisedExtIPAddress)  				.AdvertiseExternalHttpPortAs(advertisedExtHttpPort)  				.WithHashCollisionReadLimitOf(hashCollisionReadLimit)  				.WithIndexBitnessVersion(indexBitnessVersion);
Magic Number,EventStore.Core.Tests.Helpers,MiniNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniNode.cs,MiniNode,The following statement contains a magic number: builder.WithInternalTcpOn(IntTcpEndPoint)  				.WithInternalSecureTcpOn(IntSecTcpEndPoint)  				.WithExternalTcpOn(TcpEndPoint)  				.WithExternalSecureTcpOn(TcpSecEndPoint)  				.WithInternalHttpOn(IntHttpEndPoint)  				.WithExternalHttpOn(ExtHttpEndPoint)  				.WithTfChunkSize(chunkSize ?? ChunkSize)  				.WithTfChunksCacheSize(cachedChunkSize ?? CachedChunkSize)  				.WithServerCertificate(ssl_connections.GetCertificate())  				.WithWorkerThreads(1)  				.DisableDnsDiscovery()  				.WithPrepareTimeout(TimeSpan.FromSeconds(10))  				.WithCommitTimeout(TimeSpan.FromSeconds(10))  				.WithStatsPeriod(TimeSpan.FromHours(1))  				.DisableScavengeMerging()  				.NoGossipOnPublicInterface()  				.WithInternalHeartbeatInterval(TimeSpan.FromSeconds(10))  				.WithInternalHeartbeatTimeout(TimeSpan.FromSeconds(10))  				.WithExternalHeartbeatInterval(TimeSpan.FromSeconds(10))  				.WithExternalHeartbeatTimeout(TimeSpan.FromSeconds(10))  				.MaximumMemoryTableSizeOf(memTableSize)  				.DoNotVerifyDbHashes()  				.WithStatsStorage(StatsStorage.None)  				.AdvertiseExternalIPAs(advertisedExtIPAddress)  				.AdvertiseExternalHttpPortAs(advertisedExtHttpPort)  				.WithHashCollisionReadLimitOf(hashCollisionReadLimit)  				.WithIndexBitnessVersion(indexBitnessVersion);
Magic Number,EventStore.Core.Tests.Helpers,MiniNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniNode.cs,MiniNode,The following statement contains a magic number: Log.Info("\n{0'-25} {1} ({2}/{3}' {4})\n"  			         + "{5'-25} {6} ({7})\n"  			         + "{8'-25} {9} ({10}-bit)\n"  			         + "{11'-25} {12}\n"  			         + "{13'-25} {14}\n"  			         + "{15'-25} {16}\n"  			         + "{17'-25} {18}\n"  			         + "{19'-25} {20}\n\n"'  				"ES VERSION:"' VersionInfo.Version' VersionInfo.Branch' VersionInfo.Hashtag' VersionInfo.Timestamp'  				"OS:"' OS.OsFlavor' Environment.OSVersion'  				"RUNTIME:"' OS.GetRuntimeVersion()' Marshal.SizeOf(typeof(IntPtr)) * 8'  				"GC:"'  				GC.MaxGeneration == 0  					? "NON-GENERATION (PROBABLY BOEHM)"  					: string.Format("{0} GENERATIONS"' GC.MaxGeneration + 1)'  				"DBPATH:"' DbPath'  				"TCP ENDPOINT:"' TcpEndPoint'  				"TCP SECURE ENDPOINT:"' TcpSecEndPoint'  				"HTTP ENDPOINT:"' ExtHttpEndPoint);
Magic Number,EventStore.Core.Tests.Helpers,MiniNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniNode.cs,StartMiniNode,The following statement contains a magic number: var startupTimeoutTask = Task.Delay(TimeSpan.FromSeconds(60));
Magic Number,EventStore.Core.Tests.Helpers,MiniNode,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\MiniNode.cs,Shutdown,The following statement contains a magic number: !Node.Stop(TimeSpan.FromSeconds(20)' true' true)
Magic Number,EventStore.Core.Tests.Helpers,PortsHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\PortsHelper.cs,InitPorts,The following statement contains a magic number: var listenTask = Task.Factory.StartNew(() => {  						try {  							var context = httpListener.GetContext();  							context.Response.Close(new byte[] {1' 2' 3}' true);  						} catch (Exception exc) {  							httpListenerError = exc;  						}  					});
Magic Number,EventStore.Core.Tests.Helpers,PortsHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\PortsHelper.cs,InitPorts,The following statement contains a magic number: var listenTask = Task.Factory.StartNew(() => {  						try {  							var context = httpListener.GetContext();  							context.Response.Close(new byte[] {1' 2' 3}' true);  						} catch (Exception exc) {  							httpListenerError = exc;  						}  					});
Magic Number,EventStore.Core.Tests.Helpers,PortsHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\PortsHelper.cs,InitPorts,The following statement contains a magic number: var buffer = new byte[256];
Magic Number,EventStore.Core.Tests.Helpers,PortsHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\PortsHelper.cs,InitPorts,The following statement contains a magic number: read != 3 || buffer[0] != 1 || buffer[1] != 2 || buffer[2] != 3
Magic Number,EventStore.Core.Tests.Helpers,PortsHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\PortsHelper.cs,InitPorts,The following statement contains a magic number: read != 3 || buffer[0] != 1 || buffer[1] != 2 || buffer[2] != 3
Magic Number,EventStore.Core.Tests.Helpers,PortsHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\PortsHelper.cs,InitPorts,The following statement contains a magic number: read != 3 || buffer[0] != 1 || buffer[1] != 2 || buffer[2] != 3
Magic Number,EventStore.Core.Tests.Helpers,PortsHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\PortsHelper.cs,InitPorts,The following statement contains a magic number: read != 3 || buffer[0] != 1 || buffer[1] != 2 || buffer[2] != 3
Magic Number,EventStore.Core.Tests.Helpers,PortsHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\PortsHelper.cs,InitPorts,The following statement contains a magic number: !listenTask.Wait(5000)
Magic Number,EventStore.Core.Tests.Helpers,PortsHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\PortsHelper.cs,InitPorts,The following statement contains a magic number: succ <= PortCount / 2
Magic Number,EventStore.Core.Tests.Helpers,PortsHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\PortsHelper.cs,GetAvailablePort,The following statement contains a magic number: i < 50
Magic Number,EventStore.Core.Tests.Helpers,TestFixtureWithExistingEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithExistingEvents.cs,ExistingEvent,The following statement contains a magic number: var eventPosition = new TFPos(_fakePosition + 50' _fakePosition);
Magic Number,EventStore.Core.Tests.Helpers,TestFixtureWithExistingEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithExistingEvents.cs,ExistingEvent,The following statement contains a magic number: _fakePosition += 100;
Magic Number,EventStore.Core.Tests.Helpers,TestFixtureWithExistingEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithExistingEvents.cs,setup1,The following statement contains a magic number: _fakePosition = 100;
Magic Number,EventStore.Core.Tests.Helpers,TestFixtureWithExistingEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithExistingEvents.cs,BuildEvent,The following statement contains a magic number: var parts = Helper.UTF8NoBom.GetString(x.Data).Split(_linkToSeparator' 2);
Magic Number,EventStore.Core.Tests.Helpers,TestFixtureWithExistingEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithExistingEvents.cs,BuildEvent,The following statement contains a magic number: var parts = Helper.UTF8NoBom.GetString(x.Data).Split(_linkToSeparator' 2);
Magic Number,EventStore.Core.Tests.Helpers,TestFixtureWithExistingEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithExistingEvents.cs,ProcessWrite,The following statement contains a magic number: _fakePosition += 100;
Magic Number,EventStore.Core.Tests.Helpers,TestFixtureWithExistingEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithExistingEvents.cs,ProcessWrite,The following statement contains a magic number: var tfPos = new TFPos(commitPosition ?? eventRecord.position + 50' eventRecord.position);
Magic Number,EventStore.Core.Tests.Helpers,TestFixtureWithExistingEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithExistingEvents.cs,Handle,The following statement contains a magic number: _fakePosition += 50;
Magic Number,EventStore.Core.Tests.Helpers,Transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithExistingEvents.cs,Write,The following statement contains a magic number: fakePosition += 50;
Magic Number,EventStore.Core.Tests.Helpers,Transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithExistingEvents.cs,Commit,The following statement contains a magic number: fixture._fakePosition += 50;
Magic Number,EventStore.Core.Tests.Helpers,TestFixtureWithReadWriteDispatchers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithReadWriteDispatchers.cs,WhenLoop,The following statement contains a magic number: _timeProvider.AddTime(TimeSpan.FromMilliseconds(10));
Magic Number,EventStore.Core.Tests.Helpers,TestFixtureWithReadWriteDispatchers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\TestFixtureWithReadWriteDispatchers.cs,WhenLoop,The following statement contains a magic number: total > 2000
Magic Number,EventStore.Core.Tests.Helpers.IODispatcherTests.QueueWriteEventsTests,when_requesting_multiple_writes_with_different_keys,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\IODispatcherTests\QueueWriteEventsTests\when_requesting_multiple_writes_with_different_keys.cs,should_have_as_many_writes_in_flight_as_unique_keys,The following statement contains a magic number: Assert.AreEqual(2' _consumer.HandledMessages.OfType<ClientMessage.WriteEvents>().Count());
Magic Number,EventStore.Core.Tests.Helpers.IODispatcherTests.ReadEventsTests,async_read_stream_events_backward_with_cancelled_read,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\IODispatcherTests\ReadEventsTests\async_read_stream_events_backward_with_cancelled_read.cs,TestFixtureSetUp,The following statement contains a magic number: _eventSet = mre.WaitOne(TimeSpan.FromSeconds(5));
Magic Number,EventStore.Core.Tests.Helpers.IODispatcherTests.ReadEventsTests,async_read_stream_events_forward_with_cancelled_read,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\IODispatcherTests\ReadEventsTests\async_read_stream_events_forward_with_cancelled_read.cs,TestFixtureSetUp,The following statement contains a magic number: _eventSet = mre.WaitOne(TimeSpan.FromSeconds(5));
Magic Number,EventStore.Core.Tests.Helpers.IODispatcherTests.ReadEventsTests,async_read_stream_events_backward_with_successful_read,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\IODispatcherTests\ReadEventsTests\read_stream_events_backward_with_successful_read.cs,TestFixtureSetUp,The following statement contains a magic number: mre.WaitOne(TimeSpan.FromSeconds(10));
Magic Number,EventStore.Core.Tests.Helpers.IODispatcherTests.ReadEventsTests,read_stream_events_backward_with_successful_read,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\IODispatcherTests\ReadEventsTests\read_stream_events_backward_with_successful_read.cs,TestFixtureSetUp,The following statement contains a magic number: mre.WaitOne(TimeSpan.FromSeconds(10));
Magic Number,EventStore.Core.Tests.Helpers.IODispatcherTests.ReadEventsTests,async_read_stream_events_backward_with_timeout_on_read,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\IODispatcherTests\ReadEventsTests\read_stream_events_backward_with_timeout_on_read.cs,TestFixtureSetUp,The following statement contains a magic number: mre.WaitOne(TimeSpan.FromSeconds(10));
Magic Number,EventStore.Core.Tests.Helpers.IODispatcherTests.ReadEventsTests,read_stream_events_backward_with_timeout_on_read,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\IODispatcherTests\ReadEventsTests\read_stream_events_backward_with_timeout_on_read.cs,TestFixtureSetUp,The following statement contains a magic number: mre.WaitOne(TimeSpan.FromSeconds(10));
Magic Number,EventStore.Core.Tests.Helpers.IODispatcherTests.ReadEventsTests,async_read_stream_events_forward_with_successful_read,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\IODispatcherTests\ReadEventsTests\read_stream_events_forward_with_successful_read.cs,TestFixtureSetUp,The following statement contains a magic number: mre.WaitOne(TimeSpan.FromSeconds(10));
Magic Number,EventStore.Core.Tests.Helpers.IODispatcherTests.ReadEventsTests,read_stream_events_forward_with_successful_read,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\IODispatcherTests\ReadEventsTests\read_stream_events_forward_with_successful_read.cs,TestFixtureSetUp,The following statement contains a magic number: mre.WaitOne(TimeSpan.FromSeconds(10));
Magic Number,EventStore.Core.Tests.Helpers.IODispatcherTests.ReadEventsTests,async_read_stream_events_forward_with_timeout_on_read,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\IODispatcherTests\ReadEventsTests\read_stream_events_forward_with_timeout_on_read.cs,TestFixtureSetUp,The following statement contains a magic number: mre.WaitOne(TimeSpan.FromSeconds(10));
Magic Number,EventStore.Core.Tests.Helpers.IODispatcherTests.ReadEventsTests,read_stream_events_forward_with_timeout_on_read,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\IODispatcherTests\ReadEventsTests\read_stream_events_forward_with_timeout_on_read.cs,TestFixtureSetUp,The following statement contains a magic number: mre.WaitOne(TimeSpan.FromSeconds(10));
Magic Number,EventStore.Core.Tests.Helpers.IODispatcherTests.ReadEventsTests,with_read_io_dispatcher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\IODispatcherTests\ReadEventsTests\with_read_io_dispatcher.cs,CreateReadStreamEventsForwardCompleted,The following statement contains a magic number: var events =  				IODispatcherTestHelpers.CreateResolvedEvent(msg.EventStreamId' "event_type"' "test"' eventNumber: 10);
Magic Number,EventStore.Core.Tests.Helpers.IODispatcherTests.ReadEventsTests,with_read_io_dispatcher,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Helpers\IODispatcherTests\ReadEventsTests\with_read_io_dispatcher.cs,CreateReadStreamEventsBackwardCompleted,The following statement contains a magic number: var events =  				IODispatcherTestHelpers.CreateResolvedEvent(msg.EventStreamId' "event_type"' "test"' eventNumber: 10);
Magic Number,EventStore.Core.Tests.Http,HttpBehaviorSpecification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\HttpBehaviorSpecification.cs,MakeUrl,The following statement contains a magic number: Console.WriteLine(new string('*'' 50) + Environment.NewLine + path + Environment.NewLine + extra +  			                  Environment.NewLine + x.Uri + Environment.NewLine + new string('*'' 50));
Magic Number,EventStore.Core.Tests.Http,HttpBehaviorSpecification,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\HttpBehaviorSpecification.cs,MakeUrl,The following statement contains a magic number: Console.WriteLine(new string('*'' 50) + Environment.NewLine + path + Environment.NewLine + extra +  			                  Environment.NewLine + x.Uri + Environment.NewLine + new string('*'' 50));
Magic Number,EventStore.Core.Tests.Http,TestController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\TestController.cs,Test1Handler,The following statement contains a magic number: http.Reply("OK"' 200' "OK"' "text/plain");
Magic Number,EventStore.Core.Tests.Http,TestController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\TestController.cs,TestAnonymousHandler,The following statement contains a magic number: http.Reply("ERROR"' 500' "ERROR"' "text/plain");
Magic Number,EventStore.Core.Tests.Http,TestController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\TestController.cs,TestEncodingHandler,The following statement contains a magic number: http.Reply(new {a = a' b = b' rawSegment = http.RequestedUrl.Segments[2]}.ToJson()' 200' "OK"'  				"application/json");
Magic Number,EventStore.Core.Tests.Http,TestController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\TestController.cs,TestEncodingHandler,The following statement contains a magic number: http.Reply(new {a = a' b = b' rawSegment = http.RequestedUrl.Segments[2]}.ToJson()' 200' "OK"'  				"application/json");
Magic Number,EventStore.Core.Tests.Http,TestController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\TestController.cs,TestEncodingHandler,The following statement contains a magic number: http.Reply(  				new {  					a = a'  					b = b'  					rawSegment = http.RequestedUrl.Segments[1]'  					requestUri = match.RequestUri'  					rawUrl = http.HttpEntity.Request.RawUrl  				}.ToJson()' 200' "OK"' "application/json");
Magic Number,EventStore.Core.Tests.Http,TestController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\TestController.cs,TestTimeoutHandler,The following statement contains a magic number: http.Reply("OK"' 200' "OK"' "text/plain");
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_creating_a_subscription_with_bad_config,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\creating.cs,When,The following statement contains a magic number: SubscriptionPath = string.Format("/subscriptions/{0}/{1}"' TestStream.Substring(9)' GroupName);
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_creating_a_subscription_with_bad_config,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\creating.cs,When,The following statement contains a magic number: Response = MakeJsonPut(SubscriptionPath'  				new {  					ResolveLinkTos = true'  					BufferSize = 10'  					ReadBatchSize = 11  				}'  				_admin);
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_creating_a_subscription_with_bad_config,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\creating.cs,When,The following statement contains a magic number: Response = MakeJsonPut(SubscriptionPath'  				new {  					ResolveLinkTos = true'  					BufferSize = 10'  					ReadBatchSize = 11  				}'  				_admin);
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_deleting_an_existing_subscription_with_subscribers,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\deleting.cs,the_subscription_is_dropped,The following statement contains a magic number: Assert.IsTrue(_dropped.WaitOne(TimeSpan.FromSeconds(5)));
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_polling_the_head_forward_and_a_new_event_appears,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\feed.cs,the_ack_link_is_to_correct_uri,The following statement contains a magic number: var link = _entries[0]["links"][2];
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_polling_the_head_forward_and_a_new_event_appears,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\feed.cs,the_nack_link_is_to_correct_uri,The following statement contains a magic number: var link = _entries[0]["links"][3];
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,with_subscription_having_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\getting.cs,Given,The following statement contains a magic number: SubscriptionPath = string.Format("/subscriptions/{0}/{1}"' TestStream.Substring(9)' GroupName);
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,with_subscription_having_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\getting.cs,Given,The following statement contains a magic number: response = MakeJsonPut(SubscriptionPath'  				new {  					ResolveLinkTos = true'  					MessageTimeoutMilliseconds = 10000'  				}'  				_admin);
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_getting_messages_from_an_empty_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\getting.cs,Given,The following statement contains a magic number: SubscriptionPath = string.Format("/subscriptions/{0}/{1}"' TestStream.Substring(9)' GroupName);
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_getting_messages_from_an_empty_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\getting.cs,Given,The following statement contains a magic number: var response = MakeJsonPut(SubscriptionPath'  				new {  					ResolveLinkTos = true'  					MessageTimeoutMilliseconds = 10000  				}'  				_admin);
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_parking_a_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\parked.cs,Given,The following statement contains a magic number: _nackLink = _entries[0]["links"][3]["uri"].ToString() + "?action=park";
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_parking_a_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\parked.cs,should_have_parked_the_event,The following statement contains a magic number: Assert.IsTrue(_eventParked.WaitOne(TimeSpan.FromSeconds(5)));
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_replaying_parked_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\parked.cs,Given,The following statement contains a magic number: _subscriptionParkedStream =  				"$persistentsubscription-" + TestStream.Substring(9) + "::" + GroupName + "-parked";
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_replaying_parked_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\parked.cs,Given,The following statement contains a magic number: _nackLink = _entries[0]["links"][3]["uri"].ToString() + "?action=park";
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_replaying_parked_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\parked.cs,When,The following statement contains a magic number: !_eventParked.WaitOne(TimeSpan.FromSeconds(10))
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_replaying_parked_message,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\parked.cs,When,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_getting_subscription_statistics_for_individual,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\statistics.cs,has_two_rel_links,The following statement contains a magic number: Assert.AreEqual(2'  				_json["links"].Count());
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_getting_subscription_statistics_for_individual,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\statistics.cs,there_are_two_connections,The following statement contains a magic number: Assert.AreEqual(2' _json["connections"].Count());
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_getting_subscription_stats_summary,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\statistics.cs,there_are_two_connections,The following statement contains a magic number: Assert.AreEqual(2' _json[0]["connectionCount"].Value<int>());
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_getting_subscription_stats_summary,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\statistics.cs,second_subscription_there_are_three_connections,The following statement contains a magic number: Assert.AreEqual(3' _json[1]["connectionCount"].Value<int>());
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_getting_subscription_statistics_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\statistics.cs,there_are_two_connections,The following statement contains a magic number: Assert.AreEqual(2' _json[0]["connectionCount"].Value<int>());
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_getting_subscription_statistics_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\statistics.cs,second_subscription_there_are_three_connections,The following statement contains a magic number: Assert.AreEqual(3' _json[1]["connectionCount"].Value<int>());
Magic Number,EventStore.Core.Tests.Http.PersistentSubscription,when_updating_an_existing_subscription,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\PersistentSubscription\updating.cs,existing_subscriptions_are_dropped,The following statement contains a magic number: Assert.IsTrue(_dropped.WaitOne(TimeSpan.FromSeconds(5)));
Magic Number,append_to_stream,should_append_with_any_exp_ver_to_existing_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\append_to_stream.cs,Given,The following statement contains a magic number: i < 3
Magic Number,append_to_stream,should_append_with_any_exp_ver_to_existing_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\append_to_stream.cs,should_append_event_to_stream,The following statement contains a magic number: Assert.AreEqual(4' _read.Count);
Magic Number,append_to_stream,should_append_with_correct_exp_ver_to_existing_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\append_to_stream.cs,Given,The following statement contains a magic number: i < 3
Magic Number,append_to_stream,should_append_with_correct_exp_ver_to_existing_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\append_to_stream.cs,When,The following statement contains a magic number: _response = PostEventWithExpectedVersion(2);
Magic Number,append_to_stream,should_append_with_correct_exp_ver_to_existing_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\append_to_stream.cs,should_append_event_to_stream,The following statement contains a magic number: Assert.AreEqual(4' _read.Count);
Magic Number,append_to_stream,should_fail_appending_with_wrong_exp_ver_to_existing_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\append_to_stream.cs,Given,The following statement contains a magic number: i < 2
Magic Number,append_to_stream,should_fail_appending_with_wrong_exp_ver_to_existing_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\append_to_stream.cs,When,The following statement contains a magic number: _response = PostEventWithExpectedVersion(4);
Magic Number,append_to_stream,should_fail_appending_with_wrong_exp_ver_to_existing_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\append_to_stream.cs,should_not_append_event,The following statement contains a magic number: Assert.AreEqual(2' _read.Count);
Magic Number,append_to_stream,should_fail_appending_with_invalid_exp_ver_to_deleted_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\append_to_stream.cs,When,The following statement contains a magic number: _response = PostEventWithExpectedVersion(5);
Magic Number,append_to_stream,should_append_with_stream_exists_exp_ver_to_existing_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\append_to_stream.cs,should_append_event_to_stream,The following statement contains a magic number: Assert.AreEqual(2' _read.Count);
Magic Number,append_to_stream,should_append_with_stream_exists_exp_ver_to_stream_with_multiple_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\append_to_stream.cs,Given,The following statement contains a magic number: i < 2
Magic Number,append_to_stream,should_append_with_stream_exists_exp_ver_to_stream_with_multiple_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\append_to_stream.cs,should_append_event_to_stream,The following statement contains a magic number: Assert.AreEqual(3' _read.Count);
Magic Number,EventStore.Core.Tests.Http.Streams,when_getting_description_document,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\description_document.cs,stream_link_contains_supported_stream_content_types,The following statement contains a magic number: Assert.AreEqual(2' supportedContentTypes.Length);
Magic Number,EventStore.Core.Tests.Http.Streams,when_getting_description_document_and_subscription_exists_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\description_document.cs,contains_3_links,The following statement contains a magic number: Assert.AreEqual(3' _links.Count);
Magic Number,EventStore.Core.Tests.Http.Streams,when_getting_description_document_and_subscription_exists_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\description_document.cs,contains_the_subscription_link,The following statement contains a magic number: Assert.AreEqual("streamSubscription"' ((JProperty)_links[2]).Name);
Magic Number,EventStore.Core.Tests.Http.Streams,when_getting_description_document_and_subscription_exists_for_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\description_document.cs,subscriptions_link_contains_supported_subscription_content_types,The following statement contains a magic number: Assert.AreEqual(2' supportedContentTypes.Length);
Magic Number,EventStore.Core.Tests.Http.Streams,SpecificationWithLinkToToMaxCountDeletedEvents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\SpecificationWithLinkToToMaxCountDeletedEvents.cs,Given,The following statement contains a magic number: conn.SetStreamMetadataAsync(DeletedStreamName' ExpectedVersion.Any'  					new StreamMetadata(2' null' null' null' null)).Wait();
Magic Number,feed,SpecificationWithLongFeed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\feed.cs,Given,The following statement contains a magic number: _numberOfEvents = 25;
Magic Number,feed,when_reading_a_stream_forward_with_linkto,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\feed.cs,the_feed_has_two_events,The following statement contains a magic number: Assert.AreEqual(2' _entries.Count());
Magic Number,feed,when_reading_a_stream_forward_with_linkto_with_at_sign_in_name,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\feed.cs,the_feed_has_two_events,The following statement contains a magic number: Assert.AreEqual(2' _entries.Count());
Magic Number,feed,when_polling_the_head_forward_and_a_new_event_appears,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\feed.cs,Given,The following statement contains a magic number: Console.WriteLine(new string('*'' 60));
Magic Number,feed,when_polling_the_head_forward_and_a_new_event_appears,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Http\Streams\feed.cs,Given,The following statement contains a magic number: Console.WriteLine(new string('*'' 60));
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,rolling_manual_only_merges,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\rolling_manual_only_merges.cs,alternating_table_dumps_and_manual_merges_should_merge_correctly,The following statement contains a magic number: Assert.AreEqual(2' _result.MergedMap.InOrder().Count());
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,rolling_manual_only_merges,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\rolling_manual_only_merges.cs,alternating_table_dumps_and_manual_merges_should_merge_correctly,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(table' _result.MergedMap.PrepareCheckpoint'  					_result.MergedMap.CommitCheckpoint' UpgradeHash' ExistsAt' RecordExistsAt' _fileNameProvider'  					_ptableVersion' level' 16' false);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,rolling_manual_only_merges,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\rolling_manual_only_merges.cs,alternating_table_dumps_and_manual_merges_should_merge_correctly,The following statement contains a magic number: i < 100
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_auto_merge_level_is_zero,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_auto_merge_level_is_zero.cs,manual_merge_should_merge_all_tables,The following statement contains a magic number: AddTables(11);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_reduced,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_reduced.cs,should_merge_levels_above_max_level,The following statement contains a magic number: AddTables(201);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_reduced,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_reduced.cs,should_merge_levels_above_max_level,The following statement contains a magic number: Assert.AreEqual(8' _result.MergedMap.InOrder().Count());
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_reduced,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_reduced.cs,should_merge_levels_above_max_level,The following statement contains a magic number: _result.MergedMap.Dispose(TimeSpan.FromMilliseconds(100));
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_reduced,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_reduced.cs,should_merge_levels_above_max_level,The following statement contains a magic number: _map.Dispose(TimeSpan.FromMilliseconds(100));
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_reduced,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_reduced.cs,should_merge_levels_above_max_level,The following statement contains a magic number: _map = IndexMapTestFactory.FromFile(filename' maxAutoMergeLevel: 3);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_reduced,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_reduced.cs,should_merge_levels_above_max_level,The following statement contains a magic number: Assert.AreEqual(2' _result.MergedMap.InOrder().Count());
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_set.cs,Setup,The following statement contains a magic number: _map = IndexMapTestFactory.FromFile(_filename' maxTablesPerLevel: 2' maxAutoMergeLevel: _maxAutoMergeLevel);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_set.cs,AddTables,The following statement contains a magic number: var memtable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_set.cs,AddTables,The following statement contains a magic number: _result = first.AddPTable(pTable'  				10' 20' UpgradeHash' ExistsAt' RecordExistsAt' _fileNameProvider' _ptableVersion'  				0' 0' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_set.cs,AddTables,The following statement contains a magic number: _result = first.AddPTable(pTable'  				10' 20' UpgradeHash' ExistsAt' RecordExistsAt' _fileNameProvider' _ptableVersion'  				0' 0' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_set.cs,AddTables,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  					pTable'  					i * 10' (i + 1) * 10' (streamId' hash) => hash' _ => true' _ => new Tuple<string' bool>(""' true)'  					_fileNameProvider' _ptableVersion' 0' 0' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_set.cs,AddTables,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  					pTable'  					i * 10' (i + 1) * 10' (streamId' hash) => hash' _ => true' _ => new Tuple<string' bool>(""' true)'  					_fileNameProvider' _ptableVersion' 0' 0' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_set.cs,AddTables,The following statement contains a magic number: i <= count * 2
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_set.cs,TestFixtureTearDown,The following statement contains a magic number: _result.MergedMap.Dispose(TimeSpan.FromMilliseconds(100));
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_max_auto_merge_level_is_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_max_auto_merge_level_is_set.cs,TestFixtureTearDown,The following statement contains a magic number: _map.Dispose(TimeSpan.FromMilliseconds(100));
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_multiple_tables_higher_than_manual_merge_level,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_multiple_tables_higher_than_manual_merge_level.cs,Setup,The following statement contains a magic number: AddTables(8);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_multiple_tables_higher_than_manual_merge_level,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_multiple_tables_higher_than_manual_merge_level.cs,Setup,The following statement contains a magic number: _map.Dispose(TimeSpan.FromMilliseconds(100));
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_multiple_tables_higher_than_manual_merge_level,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_multiple_tables_higher_than_manual_merge_level.cs,Setup,The following statement contains a magic number: _result.MergedMap.Dispose(TimeSpan.FromMilliseconds(100));
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_no_tables_are_eligible_for_manual_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_no_tables_are_eligible_for_manual_merge.cs,Setup,The following statement contains a magic number: AddTables(8);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_no_tables_are_eligible_for_manual_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_no_tables_are_eligible_for_manual_merge.cs,Setup,The following statement contains a magic number: Assert.AreEqual(2' _result.MergedMap.InOrder().Count());
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_no_tables_are_eligible_for_manual_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_no_tables_are_eligible_for_manual_merge.cs,should_not_return_table_for_merge,The following statement contains a magic number: AddTables(3);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_no_tables_are_eligible_for_manual_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_no_tables_are_eligible_for_manual_merge.cs,should_not_return_table_for_merge,The following statement contains a magic number: Assert.AreEqual(3' _result.MergedMap.InOrder().Count());
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_no_tables_have_yet_reached_maximum_automerge_level,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_no_tables_have_yet_reached_maximum_automerge_level.cs,should_not_return_table_for_merge,The following statement contains a magic number: AddTables(3);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_no_tables_have_yet_reached_maximum_automerge_level,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_no_tables_have_yet_reached_maximum_automerge_level.cs,should_not_return_table_for_merge,The following statement contains a magic number: Assert.AreEqual(2' _result.MergedMap.InOrder().Count());
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_only_one_table_file_higher_than_manual_merge_level,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_only_one_table_file_higher_than_manual_merge_level.cs,Setup,The following statement contains a magic number: AddTables(5);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_only_one_table_file_higher_than_manual_merge_level,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_only_one_table_file_higher_than_manual_merge_level.cs,Setup,The following statement contains a magic number: _map.Dispose(TimeSpan.FromMilliseconds(100));
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_only_one_table_file_higher_than_manual_merge_level,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_only_one_table_file_higher_than_manual_merge_level.cs,Setup,The following statement contains a magic number: _result.MergedMap.Dispose(TimeSpan.FromMilliseconds(5));
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_tables_available_for_manual_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_tables_available_for_manual_merge.cs,should_merge_pending_tables_at_max_auto_merge_level,The following statement contains a magic number: AddTables(100);
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_tables_available_for_manual_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_tables_available_for_manual_merge.cs,should_merge_pending_tables_at_max_auto_merge_level,The following statement contains a magic number: Assert.AreEqual(25' _result.MergedMap.InOrder().Count());
Magic Number,EventStore.Core.Tests.Index.AutoMergeLevelTests,when_tables_available_for_manual_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\AutoMergeLevelTests\when_tables_available_for_manual_merge.cs,should_merge_pending_tables_at_max_auto_merge_level,The following statement contains a magic number: Assert.Greater(level' 2);
Magic Number,EventStore.Core.Tests.Index,IndexEntryTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexEntryTests.cs,bytes_is_made_of_key_and_position,The following statement contains a magic number: Assert.AreEqual(0x00' entry.Bytes[2]);
Magic Number,EventStore.Core.Tests.Index,IndexEntryTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexEntryTests.cs,bytes_is_made_of_key_and_position,The following statement contains a magic number: Assert.AreEqual(0x00' entry.Bytes[3]);
Magic Number,EventStore.Core.Tests.Index,IndexEntryTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexEntryTests.cs,bytes_is_made_of_key_and_position,The following statement contains a magic number: Assert.AreEqual(0x01' entry.Bytes[4]);
Magic Number,EventStore.Core.Tests.Index,IndexEntryTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexEntryTests.cs,bytes_is_made_of_key_and_position,The following statement contains a magic number: Assert.AreEqual(0x01' entry.Bytes[5]);
Magic Number,EventStore.Core.Tests.Index,IndexEntryTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexEntryTests.cs,bytes_is_made_of_key_and_position,The following statement contains a magic number: Assert.AreEqual(0x00' entry.Bytes[6]);
Magic Number,EventStore.Core.Tests.Index,IndexEntryTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexEntryTests.cs,bytes_is_made_of_key_and_position,The following statement contains a magic number: Assert.AreEqual(0x00' entry.Bytes[7]);
Magic Number,EventStore.Core.Tests.Index,IndexEntryTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexEntryTests.cs,bytes_is_made_of_key_and_position,The following statement contains a magic number: Assert.AreEqual(0xFF' entry.Bytes[8]);
Magic Number,EventStore.Core.Tests.Index,IndexEntryTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexEntryTests.cs,bytes_is_made_of_key_and_position,The following statement contains a magic number: Assert.AreEqual(0xFF' entry.Bytes[9]);
Magic Number,EventStore.Core.Tests.Index,IndexEntryTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexEntryTests.cs,bytes_is_made_of_key_and_position,The following statement contains a magic number: Assert.AreEqual(0x00' entry.Bytes[10]);
Magic Number,EventStore.Core.Tests.Index,IndexEntryTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexEntryTests.cs,bytes_is_made_of_key_and_position,The following statement contains a magic number: Assert.AreEqual(0x00' entry.Bytes[11]);
Magic Number,EventStore.Core.Tests.Index,IndexEntryTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexEntryTests.cs,bytes_is_made_of_key_and_position,The following statement contains a magic number: Assert.AreEqual(0x00' entry.Bytes[12]);
Magic Number,EventStore.Core.Tests.Index,IndexEntryTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexEntryTests.cs,bytes_is_made_of_key_and_position,The following statement contains a magic number: Assert.AreEqual(0x00' entry.Bytes[13]);
Magic Number,EventStore.Core.Tests.Index,IndexEntryTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexEntryTests.cs,bytes_is_made_of_key_and_position,The following statement contains a magic number: Assert.AreEqual(0x00' entry.Bytes[14]);
Magic Number,EventStore.Core.Tests.Index,IndexEntryTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexEntryTests.cs,bytes_is_made_of_key_and_position,The following statement contains a magic number: Assert.AreEqual(0x00' entry.Bytes[15]);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,items_come_out_sorted,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,items_come_out_sorted,The following statement contains a magic number: Assert.AreEqual(0x11' list[2].Stream);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,items_come_out_sorted,The following statement contains a magic number: Assert.AreEqual(0x01' list[2].Version);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,items_come_out_sorted,The following statement contains a magic number: Assert.AreEqual(0xfff1' list[2].Position);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,items_come_out_sorted_with_duplicates_in_descending_order,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,items_come_out_sorted_with_duplicates_in_descending_order,The following statement contains a magic number: Assert.AreEqual(0x11' list[2].Stream);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,items_come_out_sorted_with_duplicates_in_descending_order,The following statement contains a magic number: Assert.AreEqual(0x01' list[2].Version);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,items_come_out_sorted_with_duplicates_in_descending_order,The following statement contains a magic number: Assert.AreEqual(0xfff1' list[2].Position);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,can_do_range_query_of_existing_items,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,can_do_range_query_of_existing_items_with_duplicates_on_edges,The following statement contains a magic number: Assert.AreEqual(4' list.Count);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,can_do_range_query_of_existing_items_with_duplicates_on_edges,The following statement contains a magic number: Assert.AreEqual(0x11' list[2].Stream);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,can_do_range_query_of_existing_items_with_duplicates_on_edges,The following statement contains a magic number: Assert.AreEqual(0x01' list[2].Version);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,can_do_range_query_of_existing_items_with_duplicates_on_edges,The following statement contains a magic number: Assert.AreEqual(0xfff5' list[2].Position);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,can_do_range_query_of_existing_items_with_duplicates_on_edges,The following statement contains a magic number: Assert.AreEqual(0x11' list[3].Stream);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,can_do_range_query_of_existing_items_with_duplicates_on_edges,The following statement contains a magic number: Assert.AreEqual(0x01' list[3].Version);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,can_do_range_query_of_existing_items_with_duplicates_on_edges,The following statement contains a magic number: Assert.AreEqual(0xfff1' list[3].Position);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,range_query_with_hole_returns_items_included,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,range_query_with_hole_returns_items_included,The following statement contains a magic number: Assert.AreEqual(0x11' list[2].Stream);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,range_query_with_hole_returns_items_included,The following statement contains a magic number: Assert.AreEqual(0x01' list[2].Version);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,range_query_with_hole_returns_items_included,The following statement contains a magic number: Assert.AreEqual(0xfff1' list[2].Position);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,query_with_start_in_range_but_not_end_results_returns_items_included,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,query_with_end_in_range_but_not_start_results_returns_items_included,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,query_with_end_and_start_exclusive_results_returns_items_included,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,query_with_end_inside_the_hole_in_list_returns_items_included,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates,The following statement contains a magic number: Assert.AreEqual(0x11' list[2].Stream);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates,The following statement contains a magic number: Assert.AreEqual(0x01' list[2].Version);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates,The following statement contains a magic number: Assert.AreEqual(0xfff1' list[2].Position);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,query_with_start_inside_the_hole_in_list_returns_items_included,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,query_with_start_inside_the_hole_in_list_returns_duplicated_items_included,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,query_with_start_inside_the_hole_in_list_returns_duplicated_items_included,The following statement contains a magic number: Assert.AreEqual(0x11' list[2].Stream);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,query_with_start_inside_the_hole_in_list_returns_duplicated_items_included,The following statement contains a magic number: Assert.AreEqual(0x03' list[2].Version);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,query_with_start_inside_the_hole_in_list_returns_duplicated_items_included,The following statement contains a magic number: Assert.AreEqual(0xfff2' list[2].Position);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated,The following statement contains a magic number: Assert.AreEqual(2' entries.Length);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated,The following statement contains a magic number: Assert.AreEqual(3' entries.Length);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated,The following statement contains a magic number: Assert.AreEqual(0x11' entries[2].Stream);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated,The following statement contains a magic number: Assert.AreEqual(0x01' entries[2].Version);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated,The following statement contains a magic number: Assert.AreEqual(0xfff1' entries[2].Position);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,the_smallest_items_with_hash_collisions_are_returned_in_descending_order,The following statement contains a magic number: Assert.AreEqual(2' entries.Length);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,the_largest_items_with_hash_collisions_are_returned_in_descending_order,The following statement contains a magic number: Assert.AreEqual(3' entries.Length);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,the_largest_items_with_hash_collisions_are_returned_in_descending_order,The following statement contains a magic number: Assert.AreEqual(1' entries[2].Stream);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,the_largest_items_with_hash_collisions_are_returned_in_descending_order,The following statement contains a magic number: Assert.AreEqual(0' entries[2].Version);
Magic Number,EventStore.Core.Tests.Index,MemTableTestsFixture,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\MemTableTests.cs,the_largest_items_with_hash_collisions_are_returned_in_descending_order,The following statement contains a magic number: Assert.AreEqual(0x0003' entries[2].Position);
Magic Number,EventStore.Core.Tests.Index,ReverseComparerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\ReverseComparerTests.cs,larger_values_return_as_lower,The following statement contains a magic number: Assert.AreEqual(-1' new ReverseComparer<int>().Compare(5' 3));
Magic Number,EventStore.Core.Tests.Index,ReverseComparerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\ReverseComparerTests.cs,larger_values_return_as_lower,The following statement contains a magic number: Assert.AreEqual(-1' new ReverseComparer<int>().Compare(5' 3));
Magic Number,EventStore.Core.Tests.Index,ReverseComparerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\ReverseComparerTests.cs,smaller_values_return_as_higher,The following statement contains a magic number: Assert.AreEqual(1' new ReverseComparer<int>().Compare(3' 5));
Magic Number,EventStore.Core.Tests.Index,ReverseComparerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\ReverseComparerTests.cs,smaller_values_return_as_higher,The following statement contains a magic number: Assert.AreEqual(1' new ReverseComparer<int>().Compare(3' 5));
Magic Number,EventStore.Core.Tests.Index,ReverseComparerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\ReverseComparerTests.cs,same_values_are_equal,The following statement contains a magic number: Assert.AreEqual(0' new ReverseComparer<int>().Compare(5' 5));
Magic Number,EventStore.Core.Tests.Index,ReverseComparerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\ReverseComparerTests.cs,same_values_are_equal,The following statement contains a magic number: Assert.AreEqual(0' new ReverseComparer<int>().Compare(5' 5));
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _map = IndexMapTestFactory.FromFile(_filename' maxTablesPerLevel: 4);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge.cs,TestFixtureSetUp,The following statement contains a magic number: var memtable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _map.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)' 1' 2'  				(streamId' hash) => hash'  				_ => true'  				_ => new System.Tuple<string' bool>(""' true)'  				new GuidFilenameProvider(PathName)'  				_ptableVersion'  				_maxAutoMergeIndexLevel'  				0'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)' 3' 4'  				(streamId' hash) => hash'  				_ => true' _ => new System.Tuple<string' bool>(""' true)' new GuidFilenameProvider(PathName)'  				_ptableVersion' _maxAutoMergeIndexLevel' 0' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)' 3' 4'  				(streamId' hash) => hash'  				_ => true' _ => new System.Tuple<string' bool>(""' true)' new GuidFilenameProvider(PathName)'  				_ptableVersion' _maxAutoMergeIndexLevel' 0' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)' 4' 5'  				(streamId' hash) => hash'  				_ => true' _ => new System.Tuple<string' bool>(""' true)' new GuidFilenameProvider(PathName)'  				_ptableVersion' _maxAutoMergeIndexLevel' 0' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)' 4' 5'  				(streamId' hash) => hash'  				_ => true' _ => new System.Tuple<string' bool>(""' true)' new GuidFilenameProvider(PathName)'  				_ptableVersion' _maxAutoMergeIndexLevel' 0' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_four_tables_per_level_causes_merge.cs,there_are_four_items_to_delete,The following statement contains a magic number: Assert.AreEqual(4' _result.ToDelete.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _map = IndexMapTestFactory.FromFile(_filename' maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The following statement contains a magic number: var memtable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _map.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)'  				10' 20' (streamId' hash) => hash' _ => true' _ => new Tuple<string' bool>(""' true)'  				new GuidFilenameProvider(PathName)' _ptableVersion' _maxAutoMergeIndexLevel' 0'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _map.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)'  				10' 20' (streamId' hash) => hash' _ => true' _ => new Tuple<string' bool>(""' true)'  				new GuidFilenameProvider(PathName)' _ptableVersion' _maxAutoMergeIndexLevel' 0'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)'  				20' 30' (streamId' hash) => hash' _ => true' _ => new Tuple<string' bool>(""' true)'  				new GuidFilenameProvider(PathName)' _ptableVersion' _maxAutoMergeIndexLevel' 0'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)'  				20' 30' (streamId' hash) => hash' _ => true' _ => new Tuple<string' bool>(""' true)'  				new GuidFilenameProvider(PathName)' _ptableVersion' _maxAutoMergeIndexLevel' 0'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)'  				30' 40' (streamId' hash) => hash' _ => true' _ => new Tuple<string' bool>(""' true)'  				new GuidFilenameProvider(PathName)' _ptableVersion' _maxAutoMergeIndexLevel' 0'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)'  				30' 40' (streamId' hash) => hash' _ => true' _ => new Tuple<string' bool>(""' true)'  				new GuidFilenameProvider(PathName)' _ptableVersion' _maxAutoMergeIndexLevel' 0'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)'  				50' 60' (streamId' hash) => hash' _ => true' _ => new Tuple<string' bool>(""' true)'  				new FakeFilenameProvider(_mergeFile + ".firstmerge"' _mergeFile)' _ptableVersion'  				_maxAutoMergeIndexLevel' 0' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)'  				50' 60' (streamId' hash) => hash' _ => true' _ => new Tuple<string' bool>(""' true)'  				new FakeFilenameProvider(_mergeFile + ".firstmerge"' _mergeFile)' _ptableVersion'  				_maxAutoMergeIndexLevel' 0' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge.cs,the_prepare_checkpoint_is_taken_from_the_latest_added_table,The following statement contains a magic number: Assert.AreEqual(50' _result.MergedMap.PrepareCheckpoint);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge.cs,the_commit_checkpoint_is_taken_from_the_latest_added_table,The following statement contains a magic number: Assert.AreEqual(60' _result.MergedMap.CommitCheckpoint);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_four_items_to_empty_index_map_with_two_tables_per_level_causes_double_merge.cs,there_are_four_items_to_delete,The following statement contains a magic number: Assert.AreEqual(4' _result.ToDelete.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_item_to_empty_index_map,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_item_to_empty_index_map.cs,TestFixtureSetUp,The following statement contains a magic number: var memtable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_item_to_empty_index_map,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_item_to_empty_index_map.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _map.AddPTable(table' 7' 11' (streamId' hash) => hash' _ => true'  				_ => new System.Tuple<string' bool>(""' true)' new FakeFilenameProvider(_mergeFile)' _ptableVersion'  				_maxAutoMergeIndexLevel' 0' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_item_to_empty_index_map,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_item_to_empty_index_map.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _map.AddPTable(table' 7' 11' (streamId' hash) => hash' _ => true'  				_ => new System.Tuple<string' bool>(""' true)' new FakeFilenameProvider(_mergeFile)' _ptableVersion'  				_maxAutoMergeIndexLevel' 0' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_item_to_empty_index_map,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_item_to_empty_index_map.cs,the_prepare_checkpoint_is_taken_from_the_latest_added_table,The following statement contains a magic number: Assert.AreEqual(7' _result.MergedMap.PrepareCheckpoint);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_item_to_empty_index_map,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_item_to_empty_index_map.cs,the_commit_checkpoint_is_taken_from_the_latest_added_table,The following statement contains a magic number: Assert.AreEqual(11' _result.MergedMap.CommitCheckpoint);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The following statement contains a magic number: var memtable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)' 1' 2'  				(streamId' hash) => hash' _ => true' _ => new System.Tuple<string' bool>(""' true)'  				new FakeFilenameProvider(_finalmergefile' _finalmergefile2)' _ptableVersion' 4' 0'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)' 1' 2'  				(streamId' hash) => hash' _ => true' _ => new System.Tuple<string' bool>(""' true)'  				new FakeFilenameProvider(_finalmergefile' _finalmergefile2)' _ptableVersion' 4' 0'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge.cs,the_commit_checkpoint_is_taken_from_the_latest_added_table,The following statement contains a magic number: Assert.AreEqual(2' _result.MergedMap.CommitCheckpoint);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge.cs,there_are_eight_items_to_delete,The following statement contains a magic number: Assert.AreEqual(8' _result.ToDelete.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _map = IndexMapTestFactory.FromFile(_filename' maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge.cs,TestFixtureSetUp,The following statement contains a magic number: var memtable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _map.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)'  				123' 321' (streamId' hash) => hash' _ => true' _ => new System.Tuple<string' bool>(""' true)'  				new GuidFilenameProvider(PathName)' _ptableVersion' _maxAutoMergeIndexLevel' 0'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _map.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)'  				123' 321' (streamId' hash) => hash' _ => true' _ => new System.Tuple<string' bool>(""' true)'  				new GuidFilenameProvider(PathName)' _ptableVersion' _maxAutoMergeIndexLevel' 0'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)'  				100' 400' (streamId' hash) => hash' _ => true' _ => new System.Tuple<string' bool>(""' true)'  				new FakeFilenameProvider(_mergeFile)' _ptableVersion' _maxAutoMergeIndexLevel' 0'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(  				PTable.FromMemtable(memtable' GetTempFilePath()' skipIndexVerify: _skipIndexVerify)'  				100' 400' (streamId' hash) => hash' _ => true' _ => new System.Tuple<string' bool>(""' true)'  				new FakeFilenameProvider(_mergeFile)' _ptableVersion' _maxAutoMergeIndexLevel' 0'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge.cs,the_prepare_checkpoint_is_taken_from_the_latest_added_table,The following statement contains a magic number: Assert.AreEqual(100' _result.MergedMap.PrepareCheckpoint);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge.cs,the_commit_checkpoint_is_taken_from_the_latest_added_table,The following statement contains a magic number: Assert.AreEqual(400' _result.MergedMap.CommitCheckpoint);
Magic Number,EventStore.Core.Tests.Index.IndexV1,adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_two_items_to_empty_index_map_with_two_tables_per_level_causes_merge.cs,there_are_two_items_to_delete,The following statement contains a magic number: Assert.AreEqual(2' _result.ToDelete.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV1,corrupt_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\corrupt_index_should.cs,ConstructPTable,The following statement contains a magic number: memTable.Add((ulong)i' 1' i * 1337);
Magic Number,EventStore.Core.Tests.Index.IndexV1,corrupt_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\corrupt_index_should.cs,CorruptPTableFile,The following statement contains a magic number: byte[] data = new byte[255];
Magic Number,EventStore.Core.Tests.Index.IndexV1,corrupt_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\corrupt_index_should.cs,GetOriginalHash,The following statement contains a magic number: return stream << 32;
Magic Number,EventStore.Core.Tests.Index.IndexV1,corrupt_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\corrupt_index_should.cs,throw_exception_if_index_entries_not_descending_during_ptable_get_range,The following statement contains a magic number: Assert.Throws<MaybeCorruptIndexException>(() =>  				pTable.GetRange(GetOriginalHash(numIndexEntries / 2' version)' 1' 1));
Magic Number,EventStore.Core.Tests.Index.IndexV1,corrupt_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\corrupt_index_should.cs,throw_exception_if_index_entries_not_descending_during_ptable_get_range_2,The following statement contains a magic number: Assert.Throws<MaybeCorruptIndexException>(() =>  				pTable.GetRange(GetOriginalHash(numIndexEntries / 2' version)' 1' 1));
Magic Number,EventStore.Core.Tests.Index.IndexV1,corrupt_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\corrupt_index_should.cs,throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry,The following statement contains a magic number: Assert.Throws<MaybeCorruptIndexException>(() =>  				pTable.TryGetLatestEntry(GetOriginalHash(numIndexEntries / 2' version)' out entry));
Magic Number,EventStore.Core.Tests.Index.IndexV1,corrupt_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\corrupt_index_should.cs,throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2,The following statement contains a magic number: Assert.Throws<MaybeCorruptIndexException>(() =>  				pTable.TryGetLatestEntry(GetOriginalHash(numIndexEntries / 2' version)' out entry));
Magic Number,EventStore.Core.Tests.Index.IndexV1,corrupt_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\corrupt_index_should.cs,throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry,The following statement contains a magic number: Assert.Throws<MaybeCorruptIndexException>(() =>  				pTable.TryGetOldestEntry(GetOriginalHash(numIndexEntries / 2' version)' out entry));
Magic Number,EventStore.Core.Tests.Index.IndexV1,corrupt_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\corrupt_index_should.cs,throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2,The following statement contains a magic number: Assert.Throws<MaybeCorruptIndexException>(() =>  				pTable.TryGetOldestEntry(GetOriginalHash(numIndexEntries / 2' version)' out entry));
Magic Number,EventStore.Core.Tests.Index.IndexV1,corrupt_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\corrupt_index_should.cs,throw_exception_if_index_entries_not_descending_during_ptable_get_one_value,The following statement contains a magic number: Assert.Throws<MaybeCorruptIndexException>(() =>  				pTable.TryGetOneValue(GetOriginalHash(numIndexEntries / 2' version)' 1' out position));
Magic Number,EventStore.Core.Tests.Index.IndexV1,corrupt_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\corrupt_index_should.cs,throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2,The following statement contains a magic number: Assert.Throws<MaybeCorruptIndexException>(() =>  				pTable.TryGetOneValue(GetOriginalHash(numIndexEntries / 2' version)' 1' out position));
Magic Number,EventStore.Core.Tests.Index.IndexV1,destroying_ptable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\destroying_ptable.cs,Setup,The following statement contains a magic number: var mtable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,destroying_ptable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\destroying_ptable.cs,the_file_is_deleted,The following statement contains a magic number: _table.WaitForDisposal(1000);
Magic Number,EventStore.Core.Tests.Index.IndexV1,destroying_ptable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\destroying_ptable.cs,wait_for_destruction_returns,The following statement contains a magic number: Assert.DoesNotThrow(() => _table.WaitForDisposal(1000));
Magic Number,EventStore.Core.Tests.Index.IndexV1,destroying_ptable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\destroying_ptable.cs,Teardown,The following statement contains a magic number: _table.WaitForDisposal(1000);
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should.cs,SetUp,The following statement contains a magic number: var memTable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should.cs,SetUp,The following statement contains a magic number: memTable.Add(0' 1' 2);
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should.cs,throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one,The following statement contains a magic number: CreateArtificialIndexMapFile(_indexMapFileName' -2' 0' null);
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should.cs,throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should.cs,allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index,The following statement contains a magic number: Assert.DoesNotThrow(() => {  				var indexMap = IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2);  				indexMap.InOrder().ToList().ForEach(x => x.Dispose());  			});
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should.cs,throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should.cs,throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one,The following statement contains a magic number: CreateArtificialIndexMapFile(_indexMapFileName' 0' -2' null);
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should.cs,throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should.cs,allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index,The following statement contains a magic number: Assert.DoesNotThrow(() => {  				var indexMap = IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2);  				indexMap.InOrder().ToList().ForEach(x => x.Dispose());  			});
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should.cs,throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should.cs,CreateArtificialIndexMapFile,The following statement contains a magic number: memWriter.WriteLine(new string('0'' 32));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should.cs,CreateArtificialIndexMapFile,The following statement contains a magic number: memStream.Position = 32;
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,SetUp,The following statement contains a magic number: var indexMap = IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,SetUp,The following statement contains a magic number: var memtable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,SetUp,The following statement contains a magic number: memtable.Add(1' 1' 100);
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_ptable_file_is_deleted,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_indexmap_file_does_not_have_md5_checksum,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_indexmap_file_does_not_have_latest_commit_position,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_indexmap_file_exists_but_is_empty,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_indexmap_file_is_garbage,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_checkpoints_pair_is_corrupted,The following statement contains a magic number: fs.Position = 34;
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_checkpoints_pair_is_corrupted,The following statement contains a magic number: fs.Position = 34;
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_checkpoints_pair_is_corrupted,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_ptable_line_is_missing_one_number,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_ptable_line_constists_only_of_filename,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_ptable_line_is_missing_filename,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_indexmap_md5_checksum_is_corrupted,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_ptable_hash_is_corrupted,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_ptable_type_is_corrupted,The following statement contains a magic number: fs.WriteByte(123);
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_ptable_type_is_corrupted,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_ptable_header_is_corrupted,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,index_map_should_detect_corruption,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\index_map_should_detect_corruption.cs,when_ptable_data_is_corrupted,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() =>  				IndexMapTestFactory.FromFile(_indexMapFileName' maxTablesPerLevel: 2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,opening_a_ptable_with_more_than_32bits_of_records,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\opening_a_ptable_with_more_than_32bits_of_records.cs,TestFixtureSetUp,The following statement contains a magic number: _ptableCount = (long)(uint.MaxValue + 10000000L);
Magic Number,EventStore.Core.Tests.Index.IndexV1,opening_a_ptable_with_more_than_32bits_of_records,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\opening_a_ptable_with_more_than_32bits_of_records.cs,TestFixtureSetUp,The following statement contains a magic number: _ptable = PTable.FromFile(Filename' 22' false);
Magic Number,EventStore.Core.Tests.Index.IndexV1,PTableReadScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\PTableReadScenario.cs,SetUp,The following statement contains a magic number: var table = new HashListMemTable(_ptableVersion' maxSize: 50);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_midpoint_cache_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_midpoint_cache_should.cs,construct_valid_cache_for_any_combination_of_params,The following statement contains a magic number: var rnd = new Random(123987);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_midpoint_cache_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_midpoint_cache_should.cs,construct_valid_cache_for_any_combination_of_params,The following statement contains a magic number: depth < 15
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_midpoint_cache_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_midpoint_cache_should.cs,ConstructPTable,The following statement contains a magic number: var memTable = new HashListMemTable(_ptableVersion' 20000);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_midpoint_cache_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_midpoint_cache_should.cs,ConstructPTable,The following statement contains a magic number: memTable.Add((uint)rnd.Next()' rnd.Next(0' 1 << 20)' Math.Abs(rnd.Next() * rnd.Next()));
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_midpoint_cache_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_midpoint_cache_should.cs,ValidateCache,The following statement contains a magic number: Assert.AreEqual(2' cache.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_midpoint_cache_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_midpoint_cache_should.cs,construct_valid_cache_for_any_combination_of_params_large,The following statement contains a magic number: construct_valid_cache_for_any_combination_of_params(4096);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_midpoint_cache_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_midpoint_cache_should.cs,construct_valid_cache_for_any_combination_of_params_small,The following statement contains a magic number: construct_valid_cache_for_any_combination_of_params(20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_range_query_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_range_query_tests.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(_ptableVersion' maxSize: 50);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_range_query_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_range_query_tests.cs,GetHash,The following statement contains a magic number: return _ptableVersion == PTableVersions.IndexV1 ? value >> 32 : value;
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_range_query_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_range_query_tests.cs,range_query_with_hole_returns_items_included,The following statement contains a magic number: Assert.AreEqual(3' list.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_range_query_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_range_query_tests.cs,range_query_with_hole_returns_items_included,The following statement contains a magic number: Assert.AreEqual(GetHash(0x010300000000)' list[2].Stream);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_range_query_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_range_query_tests.cs,range_query_with_hole_returns_items_included,The following statement contains a magic number: Assert.AreEqual(0x01' list[2].Version);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_range_query_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_range_query_tests.cs,range_query_with_hole_returns_items_included,The following statement contains a magic number: Assert.AreEqual(0xfff1' list[2].Position);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_range_query_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_range_query_tests.cs,query_with_start_in_range_but_not_end_results_returns_items_included,The following statement contains a magic number: Assert.AreEqual(2' list.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_range_query_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_range_query_tests.cs,query_with_end_in_range_but_not_start_results_returns_items_included,The following statement contains a magic number: Assert.AreEqual(2' list.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_range_query_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_range_query_tests.cs,query_with_end_and_start_exclusive_results_returns_items_included,The following statement contains a magic number: Assert.AreEqual(3' list.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_range_query_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_range_query_tests.cs,query_with_end_and_start_exclusive_results_returns_items_included,The following statement contains a magic number: Assert.AreEqual(GetHash(0x010300000000)' list[2].Stream);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_range_query_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_range_query_tests.cs,query_with_end_and_start_exclusive_results_returns_items_included,The following statement contains a magic number: Assert.AreEqual(0x01' list[2].Version);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_range_query_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_range_query_tests.cs,query_with_end_and_start_exclusive_results_returns_items_included,The following statement contains a magic number: Assert.AreEqual(0xfff1' list[2].Position);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_range_query_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_range_query_tests.cs,query_with_end_inside_the_hole_in_list_returns_items_included,The following statement contains a magic number: Assert.AreEqual(2' list.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_range_query_tests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_range_query_tests.cs,query_with_start_inside_the_hole_in_list_returns_items_included,The following statement contains a magic number: Assert.AreEqual(2' list.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_read_scenario_with_items_spanning_few_cache_segments,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_read_scenario_with_items_spanning_few_cache_segments.cs,GetHash,The following statement contains a magic number: return _ptableVersion == PTableVersions.IndexV1 ? value >> 32 : value;
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_read_scenario_with_items_spanning_few_cache_segments,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_read_scenario_with_items_spanning_few_cache_segments.cs,the_table_has_five_items,The following statement contains a magic number: Assert.AreEqual(5' PTable.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_read_scenario_with_items_spanning_few_cache_segments,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_read_scenario_with_items_spanning_few_cache_segments.cs,the_smallest_items_are_returned_in_descending_order,The following statement contains a magic number: Assert.AreEqual(2' entries.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_read_scenario_with_items_spanning_few_cache_segments,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_read_scenario_with_items_spanning_few_cache_segments.cs,the_largest_items_are_returned_in_descending_order,The following statement contains a magic number: Assert.AreEqual(3' entries.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_read_scenario_with_items_spanning_few_cache_segments,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_read_scenario_with_items_spanning_few_cache_segments.cs,the_largest_items_are_returned_in_descending_order,The following statement contains a magic number: Assert.AreEqual(GetHash(0x010500000000)' entries[2].Stream);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_read_scenario_with_items_spanning_few_cache_segments,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_read_scenario_with_items_spanning_few_cache_segments.cs,the_largest_items_are_returned_in_descending_order,The following statement contains a magic number: Assert.AreEqual(0' entries[2].Version);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_read_scenario_with_items_spanning_few_cache_segments,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_read_scenario_with_items_spanning_few_cache_segments.cs,the_largest_items_are_returned_in_descending_order,The following statement contains a magic number: Assert.AreEqual(0x0003' entries[2].Position);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_read_scenario_with_items_spanning_few_cache_segments,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_read_scenario_with_items_spanning_few_cache_segments.cs,non_existent_item_cannot_be_found,The following statement contains a magic number: Assert.IsFalse(PTable.TryGetOneValue(2' 0' out position));
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_read_scenario_with_usual_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_read_scenario_with_usual_items.cs,GetHash,The following statement contains a magic number: return _ptableVersion == PTableVersions.IndexV1 ? hash >> 32 : hash;
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_read_scenario_with_usual_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_read_scenario_with_usual_items.cs,the_table_has_five_items,The following statement contains a magic number: Assert.AreEqual(5' PTable.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_read_scenario_with_usual_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_read_scenario_with_usual_items.cs,range_query_returns_correct_items,The following statement contains a magic number: Assert.That(items.Length' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,ptable_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\ptable_should.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_single_item_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_single_item_to_a_file.cs,TestFixtureSetUp,The following statement contains a magic number: var memtable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_single_item_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_single_item_to_a_file.cs,TestFixtureSetUp,The following statement contains a magic number: memtable.Add(0' 2' 7);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_single_item_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_single_item_to_a_file.cs,TestFixtureSetUp,The following statement contains a magic number: memtable.Add(0' 2' 7);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_single_item_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_single_item_to_a_file.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _map.AddPTable(table' 7' 11' (streamId' hash) => hash' _ => true'  				_ => new Tuple<string' bool>(""' true)' new FakeFilenameProvider(_mergeFile)' _ptableVersion' 0);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_single_item_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_single_item_to_a_file.cs,TestFixtureSetUp,The following statement contains a magic number: _result = _map.AddPTable(table' 7' 11' (streamId' hash) => hash' _ => true'  				_ => new Tuple<string' bool>(""' true)' new FakeFilenameProvider(_mergeFile)' _ptableVersion' 0);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_single_item_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_single_item_to_a_file.cs,TestFixtureTearDown,The following statement contains a magic number: _result.MergedMap.InOrder().ToList().ForEach(x => x.WaitForDisposal(1000));
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_single_item_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_single_item_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: fs.Position = 32;
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_single_item_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_single_item_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual(6' lines.Count());
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_single_item_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_single_item_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual("7/11"' lines[2]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_single_item_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_single_item_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual(_maxAutoMergeIndexLevel.ToString()' lines[3]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_single_item_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_single_item_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual("0'0'" + Path.GetFileName(_tablename)' lines[4]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_single_item_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_single_item_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual(""' lines[5]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_single_item_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_single_item_to_a_file.cs,saved_file_could_be_read_correctly_and_without_errors,The following statement contains a magic number: Assert.AreEqual(7' map.PrepareCheckpoint);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_single_item_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_single_item_to_a_file.cs,saved_file_could_be_read_correctly_and_without_errors,The following statement contains a magic number: Assert.AreEqual(11' map.CommitCheckpoint);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,SetUp,The following statement contains a magic number: _map = IndexMapTestFactory.FromFile(_filename' maxTablesPerLevel: 4);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,SetUp,The following statement contains a magic number: var memtable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,SetUp,The following statement contains a magic number: memtable.Add(0' 2' 123);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,SetUp,The following statement contains a magic number: memtable.Add(0' 2' 123);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,SetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(table' 7' 11' (streamId' hash) => hash' _ => true'  				_ => new Tuple<string' bool>(""' true)' new FakeFilenameProvider(_mergeFile)' _ptableVersion'  				_maxAutoMergeIndexLevel' 0);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,SetUp,The following statement contains a magic number: _result = _result.MergedMap.AddPTable(table' 7' 11' (streamId' hash) => hash' _ => true'  				_ => new Tuple<string' bool>(""' true)' new FakeFilenameProvider(_mergeFile)' _ptableVersion'  				_maxAutoMergeIndexLevel' 0);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: fs.Position = 32;
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual(8' lines.Count());
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual("7/11"' lines[2]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual(int.MaxValue.ToString()' lines[3]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual("0'0'" + name' lines[4]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual("0'1'" + name' lines[5]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual("1'0'" + Path.GetFileName(_mergeFile)' lines[6]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual(""' lines[7]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,saved_file_could_be_read_correctly_and_without_errors,The following statement contains a magic number: Assert.AreEqual(7' map.PrepareCheckpoint);
Magic Number,EventStore.Core.Tests.Index.IndexV1,saving_index_with_six_items_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\saving_index_with_six_items_to_a_file.cs,saved_file_could_be_read_correctly_and_without_errors,The following statement contains a magic number: Assert.AreEqual(11' map.CommitCheckpoint);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(PathName' _lowHasher' _highHasher'  				() => new HashListMemTable(version: _ptableVersion' maxSize: 40)'  				() => { throw new InvalidOperationException(); }'  				_ptableVersion'  				5'  				maxSizeForMemory: 20'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(PathName' _lowHasher' _highHasher'  				() => new HashListMemTable(version: _ptableVersion' maxSize: 40)'  				() => { throw new InvalidOperationException(); }'  				_ptableVersion'  				5'  				maxSizeForMemory: 20'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(PathName' _lowHasher' _highHasher'  				() => new HashListMemTable(version: _ptableVersion' maxSize: 40)'  				() => { throw new InvalidOperationException(); }'  				_ptableVersion'  				5'  				maxSizeForMemory: 20'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(0' "0xABBA"' 2' 0xFF02);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(0' "0xABBA"' 3' 0xFF03);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,should_return_empty_collection_when_stream_is_not_in_db,The following statement contains a magic number: var res = _tableIndex.GetRange("0xFEED"' 0' 100);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,should_return_all_applicable_elements_in_correct_order,The following statement contains a magic number: var res = _tableIndex.GetRange("0xJEEP"' 0' 100).ToList();
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,should_return_all_applicable_elements_in_correct_order,The following statement contains a magic number: hash = _ptableVersion == PTableVersions.IndexV1 ? hash : hash << 32 | _highHasher.Hash("0xJEEP");
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,should_return_all_applicable_elements_in_correct_order,The following statement contains a magic number: Assert.That(res.Count()' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,should_return_all_elements_with_hash_collisions_in_correct_order,The following statement contains a magic number: var res = _tableIndex.GetRange("0xDEAD"' 0' 100).ToList();
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,should_return_all_elements_with_hash_collisions_in_correct_order,The following statement contains a magic number: hash = _ptableVersion == PTableVersions.IndexV1 ? hash : hash << 32 | _highHasher.Hash("0xDEAD");
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,should_return_all_elements_with_hash_collisions_in_correct_order,The following statement contains a magic number: Assert.That(res.Count()' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,should_return_all_elements_with_hash_collisions_in_correct_order,The following statement contains a magic number: Assert.That(res[2].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,should_return_all_elements_with_hash_collisions_in_correct_order,The following statement contains a magic number: Assert.That(res[2].Version' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,should_return_all_elements_with_hash_collisions_in_correct_order,The following statement contains a magic number: Assert.That(res[2].Position' Is.EqualTo(0xFF10));
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,should_return_all_elements_with_hash_collisions_in_correct_order,The following statement contains a magic number: Assert.That(res[3].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,should_return_all_elements_with_hash_collisions_in_correct_order,The following statement contains a magic number: Assert.That(res[3].Version' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_range_query.cs,should_return_all_elements_with_hash_collisions_in_correct_order,The following statement contains a magic number: Assert.That(res[3].Position' Is.EqualTo(0xFF00));
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_try_get_one_value_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_try_get_one_value_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 10)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 5'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_try_get_one_value_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_try_get_one_value_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 10)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 5'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_try_get_one_value_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_try_get_one_value_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 10)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 5'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_try_get_one_value_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_try_get_one_value_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(0' "0xABBA"' 2' 0xFF02);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_try_get_one_value_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_try_get_one_value_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(0' "0xABBA"' 3' 0xFF03);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_try_get_one_value_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_try_get_one_value_query.cs,should_return_only_one_element_if_concurrency_duplicate_happens_on_range_query_as_well,The following statement contains a magic number: var res = _tableIndex.GetRange("0xADA"' 0' 100).ToList();
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_on_try_get_one_value_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_on_try_get_one_value_query.cs,should_return_only_one_element_if_concurrency_duplicate_happens_on_range_query_as_well,The following statement contains a magic number: hash = _ptableVersion == PTableVersions.IndexV1 ? hash : hash << 32 | _highHasher.Hash("0xADA");
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_should.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(PathName' lowHasher' highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 20)'  				() => { throw new InvalidOperationException(); }'  				_ptableVersion'  				5'  				maxSizeForMemory: 10'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_should.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(PathName' lowHasher' highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 20)'  				() => { throw new InvalidOperationException(); }'  				_ptableVersion'  				5'  				maxSizeForMemory: 10'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_should.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(PathName' lowHasher' highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 20)'  				() => { throw new InvalidOperationException(); }'  				_ptableVersion'  				5'  				maxSizeForMemory: 10'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_corrupt_index_entries_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_corrupt_index_entries_should.cs,ConstructTableIndexWithCorruptIndexEntries,The following statement contains a magic number: _tableIndex.Add(i * 1337' StreamName' i' i * 1337);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_corrupt_index_entries_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_corrupt_index_entries_should.cs,ConstructTableIndexWithCorruptIndexEntries,The following statement contains a magic number: _tableIndex.Add(i * 1337' StreamName' i' i * 1337);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_corrupt_index_entries_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_corrupt_index_entries_should.cs,ConstructTableIndexWithCorruptIndexEntries,The following statement contains a magic number: _indexMap.Dispose(TimeSpan.FromSeconds(5));
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_corrupt_index_entries_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_corrupt_index_entries_should.cs,ConstructTableIndexWithCorruptIndexEntries,The following statement contains a magic number: _tableIndex = new TableIndex(PathName' lowHasher' highHasher'  				() => new HashListMemTable(version' maxSize: NumIndexEntries)'  				() => fakeReader'  				version'  				int.MaxValue'  				maxSizeForMemory: NumIndexEntries'  				skipIndexVerify: skipIndexVerify'  				indexCacheDepth: 8);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_corrupt_index_entries_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_corrupt_index_entries_should.cs,GetOriginalHash,The following statement contains a magic number: return stream << 32;
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_corrupt_index_entries_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_corrupt_index_entries_should.cs,CorruptPTableFile,The following statement contains a magic number: byte[] data = new byte[255];
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_corrupt_index_entries_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_corrupt_index_entries_should.cs,CorruptPTableFile,The following statement contains a magic number: indexEntriesToCorrupt.Add(NumIndexEntries / 2 - 1);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_corrupt_index_entries_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_corrupt_index_entries_should.cs,throws_maybe_corrupt_index_exception_if_verification_disabled,The following statement contains a magic number: Assert.Throws<MaybeCorruptIndexException>(() => {  				//since index entries are sorted in descending order' the corrupted index entry corresponds to NumIndexEntries/2+1  				_tableIndex.GetRange(StreamName' NumIndexEntries / 2 + 1' NumIndexEntries / 2 + 1' null).ToArray();  			});
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_corrupt_index_entries_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_corrupt_index_entries_should.cs,throws_maybe_corrupt_index_exception_if_verification_disabled,The following statement contains a magic number: Assert.Throws<MaybeCorruptIndexException>(() => {  				//since index entries are sorted in descending order' the corrupted index entry corresponds to NumIndexEntries/2+1  				_tableIndex.GetRange(StreamName' NumIndexEntries / 2 + 1' NumIndexEntries / 2 + 1' null).ToArray();  			});
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 10)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 2'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 10)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 2'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 10)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 2'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 10)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 2'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(0' "5"' 10' 0xFFF1);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,TestFixtureSetUp,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,GetHash,The following statement contains a magic number: hash = _ptableVersion == PTableVersions.IndexV1 ? hash : hash << 32 | _highHasher.Hash(streamId);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1,The following statement contains a magic number: Assert.AreEqual(10' entry.Version);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_return_correct_oldest_entries_for_each_stream,The following statement contains a magic number: Assert.AreEqual(10' entry.Version);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_return_correct_full_range_with_descending_order_for_1,The following statement contains a magic number: Assert.AreEqual(4' range.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_return_correct_full_range_with_descending_order_for_1,The following statement contains a magic number: Assert.AreEqual(new IndexEntry(GetHash("1")' 0' 0xFF10)' range[2]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_return_correct_full_range_with_descending_order_for_1,The following statement contains a magic number: Assert.AreEqual(new IndexEntry(GetHash("1")' 0' 0xFF00)' range[3]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_return_correct_full_range_with_descending_order_for_2,The following statement contains a magic number: Assert.AreEqual(2' range.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_return_correct_full_range_with_descending_order_for_3,The following statement contains a magic number: Assert.AreEqual(4' range.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_return_correct_full_range_with_descending_order_for_3,The following statement contains a magic number: Assert.AreEqual(new IndexEntry(GetHash("3")' 0' 0xFF02)' range[2]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_return_correct_full_range_with_descending_order_for_3,The following statement contains a magic number: Assert.AreEqual(new IndexEntry(GetHash("3")' 0' 0xFF00)' range[3]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_return_correct_full_range_with_descending_order_for_4,The following statement contains a magic number: Assert.AreEqual(2' range.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_return_correct_full_range_with_descending_order_for_5,The following statement contains a magic number: Assert.AreEqual(new IndexEntry(GetHash("5")' 10' 0xFFF1)' range[0]);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_return_correct_full_range_with_descending_order_for_6,The following statement contains a magic number: Assert.AreEqual(2' range.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_return_one_value_for_existing_streams_for_existing_version,The following statement contains a magic number: Assert.IsTrue(_tableIndex.TryGetOneValue("5"' 10' out pos));
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_not_return_one_value_for_existing_streams_for_nonexistent_version,The following statement contains a magic number: Assert.IsFalse(_tableIndex.TryGetOneValue("1"' 2' out pos));
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_not_return_one_value_for_existing_streams_for_nonexistent_version,The following statement contains a magic number: Assert.IsFalse(_tableIndex.TryGetOneValue("2"' 2' out pos));
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_not_return_one_value_for_existing_streams_for_nonexistent_version,The following statement contains a magic number: Assert.IsFalse(_tableIndex.TryGetOneValue("3"' 2' out pos));
Magic Number,EventStore.Core.Tests.Index.IndexV1,table_index_with_two_ptables_and_memtable_on_range_query,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\table_index_with_two_ptables_and_memtable_on_range_query.cs,should_not_return_one_value_for_existing_streams_for_nonexistent_version,The following statement contains a magic number: Assert.IsFalse(_tableIndex.TryGetOneValue("6"' 2' out pos));
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_a_ptable_header_is_corrupt_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_a_ptable_header_is_corrupt_on_disk.cs,Setup,The following statement contains a magic number: var mtable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_a_ptable_header_is_corrupt_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_a_ptable_header_is_corrupt_on_disk.cs,Setup,The following statement contains a magic number: f.Seek(22' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_a_ptable_header_is_corrupt_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_a_ptable_header_is_corrupt_on_disk.cs,the_hash_is_invalid,The following statement contains a magic number: var exc = Assert.Throws<CorruptIndexException>(() => _table = PTable.FromFile(_copiedfilename' 16' false));
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_a_ptable_header_is_corrupt_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_a_ptable_header_is_corrupt_on_disk.cs,no_error_if_index_verification_disabled,The following statement contains a magic number: Assert.DoesNotThrow(  				() => _table = PTable.FromFile(_copiedfilename' 16' true)  			);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_a_ptable_header_is_corrupt_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_a_ptable_header_is_corrupt_on_disk.cs,Teardown,The following statement contains a magic number: _table.WaitForDisposal(1000);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_a_ptable_is_corrupt_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_a_ptable_is_corrupt_on_disk.cs,SetUp,The following statement contains a magic number: var mtable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_a_ptable_is_corrupt_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_a_ptable_is_corrupt_on_disk.cs,SetUp,The following statement contains a magic number: f.Seek(130' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_a_ptable_is_corrupt_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_a_ptable_is_corrupt_on_disk.cs,TearDown,The following statement contains a magic number: _table.WaitForDisposal(1000);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_a_ptable_is_corrupt_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_a_ptable_is_corrupt_on_disk.cs,the_hash_is_invalid,The following statement contains a magic number: var exc = Assert.Throws<CorruptIndexException>(() => PTable.FromFile(_copiedfilename' 16' false));
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_a_ptable_is_loaded_from_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_a_ptable_is_loaded_from_disk.cs,SetUp,The following statement contains a magic number: var mtable = new HashListMemTable(_ptableVersion' maxSize: 1024);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_a_ptable_is_loaded_from_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_a_ptable_is_loaded_from_disk.cs,SetUp,The following statement contains a magic number: i % 37 == 0
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_a_ptable_is_loaded_from_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_a_ptable_is_loaded_from_disk.cs,SetUp,The following statement contains a magic number: i < 1337
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_a_ptable_is_loaded_from_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_a_ptable_is_loaded_from_disk.cs,same_midpoints_are_loaded_when_enabling_or_disabling_index_verification,The following statement contains a magic number: depth <= 20
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_creating_ptable_from_memtable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_creating_ptable_from_memtable.cs,null_file_throws_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() =>  				PTable.FromMemtable(new HashListMemTable(_ptableVersion' maxSize: 10)' null'  					skipIndexVerify: _skipIndexVerify));
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_creating_ptable_from_memtable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_creating_ptable_from_memtable.cs,wait_for_destroy_will_timeout,The following statement contains a magic number: var table = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_creating_ptable_from_memtable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_creating_ptable_from_memtable.cs,wait_for_destroy_will_timeout,The following statement contains a magic number: ptable.WaitForDisposal(1000);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_creating_ptable_from_memtable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_creating_ptable_from_memtable.cs,the_file_gets_created,The following statement contains a magic number: var table = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_creating_ptable_from_memtable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_creating_ptable_from_memtable.cs,the_file_gets_created,The following statement contains a magic number: var midpointsCached = PTable.GetRequiredMidpointCountCached(4' _ptableVersion);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_creating_ptable_from_memtable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_creating_ptable_from_memtable.cs,the_file_gets_created,The following statement contains a magic number: Assert.AreEqual(  					PTableHeader.Size + 4 * indexEntrySize + midpointsCached * indexEntrySize +  					PTableFooter.GetSize(_ptableVersion) + PTable.MD5Size' fileinfo.Length);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_creating_ptable_from_memtable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_creating_ptable_from_memtable.cs,the_file_gets_created,The following statement contains a magic number: Assert.AreEqual(GetHash(0x010200000000)' items[2].Stream);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_creating_ptable_from_memtable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_creating_ptable_from_memtable.cs,the_file_gets_created,The following statement contains a magic number: Assert.AreEqual(0x0001' items[2].Version);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_creating_ptable_from_memtable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_creating_ptable_from_memtable.cs,the_file_gets_created,The following statement contains a magic number: Assert.AreEqual(GetHash(0x010100000000)' items[3].Stream);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_creating_ptable_from_memtable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_creating_ptable_from_memtable.cs,the_file_gets_created,The following statement contains a magic number: Assert.AreEqual(0x0001' items[3].Version);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_creating_ptable_from_memtable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_creating_ptable_from_memtable.cs,the_hash_of_file_is_valid,The following statement contains a magic number: var table = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_creating_ptable_from_memtable,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_creating_ptable_from_memtable.cs,GetHash,The following statement contains a magic number: return _ptableVersion == PTableVersions.IndexV1 ? value >> 32 : value;
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_four_ptables,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_four_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(_ptableVersion' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_four_ptables,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_four_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: j < 10
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_four_ptables,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_four_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: i < 4
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_four_ptables,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_four_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' _files[4]' (streamId' hash) => hash << 32 | hasher.Hash(streamId)'  				_ => true' _ => new System.Tuple<string' bool>(""' true)' _ptableVersion'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_four_ptables,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_four_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' _files[4]' (streamId' hash) => hash << 32 | hasher.Hash(streamId)'  				_ => true' _ => new System.Tuple<string' bool>(""' true)' _ptableVersion'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_four_ptables,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_four_ptables.cs,there_are_forty_records_in_merged_index,The following statement contains a magic number: Assert.AreEqual(40' _newtable.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(PTableVersions.IndexV1' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table = new HashListMemTable(PTableVersions.IndexV1' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,there_are_8_records_in_the_merged_index,The following statement contains a magic number: Assert.AreEqual(8' _newtable.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(PTableVersions.IndexV1' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table = new HashListMemTable(PTableVersions.IndexV1' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,there_are_8_records_in_the_merged_index,The following statement contains a magic number: Assert.AreEqual(8' _newtable.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(PTableVersions.IndexV1' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table = new HashListMemTable(PTableVersions.IndexV1' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table = new HashListMemTable(PTableVersions.IndexV2' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,there_are_12_records_in_the_merged_index,The following statement contains a magic number: Assert.AreEqual(12' _newtable.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(PTableVersions.IndexV2' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 5);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 5);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 1' 6);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 2' 7);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 2' 7);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010400000000' 0' 8);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010400000000' 1' 9);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table = new HashListMemTable(PTableVersions.IndexV1' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 1' 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 11);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 11);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 1' 12);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 2' 13);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 2' 13);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 3' 14);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 3' 14);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' GetTempFilePath()'  				(streamId' hash) => hash << 32 | hasher.Hash(streamId)' x => x.Position % 2 == 0'  				x => new Tuple<string' bool>(x.Stream.ToString()' x.Position % 2 == 0)' PTableVersions.IndexV2'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' GetTempFilePath()'  				(streamId' hash) => hash << 32 | hasher.Hash(streamId)' x => x.Position % 2 == 0'  				x => new Tuple<string' bool>(x.Stream.ToString()' x.Position % 2 == 0)' PTableVersions.IndexV2'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' GetTempFilePath()'  				(streamId' hash) => hash << 32 | hasher.Hash(streamId)' x => x.Position % 2 == 0'  				x => new Tuple<string' bool>(x.Stream.ToString()' x.Position % 2 == 0)' PTableVersions.IndexV2'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_1_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,there_are_8_records_in_the_merged_index,The following statement contains a magic number: Assert.AreEqual(8' _newtable.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(PTableVersions.IndexV1' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 0' 2);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 0' 3);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 1' 4);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table = new HashListMemTable(PTableVersions.IndexV2' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 5);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 5);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 1' 6);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 2' 7);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 2' 7);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010400000000' 0' 8);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010400000000' 1' 9);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table = new HashListMemTable(PTableVersions.IndexV1' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 1' 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 11);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 11);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 1' 12);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 2' 13);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 2' 13);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 3' 14);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 3' 14);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' GetTempFilePath()'  				(streamId' hash) => hash << 32 | hasher.Hash(streamId)' x => x.Position % 2 == 0'  				x => new Tuple<string' bool>(x.Stream.ToString()' x.Position % 2 == 0)' PTableVersions.IndexV2'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' GetTempFilePath()'  				(streamId' hash) => hash << 32 | hasher.Hash(streamId)' x => x.Position % 2 == 0'  				x => new Tuple<string' bool>(x.Stream.ToString()' x.Position % 2 == 0)' PTableVersions.IndexV2'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' GetTempFilePath()'  				(streamId' hash) => hash << 32 | hasher.Hash(streamId)' x => x.Position % 2 == 0'  				x => new Tuple<string' bool>(x.Stream.ToString()' x.Position % 2 == 0)' PTableVersions.IndexV2'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_2_32bit_ptables_and_1_64bit_ptable_with_missing_entries_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables.cs,there_are_10_records_in_the_merged_index,The following statement contains a magic number: Assert.AreEqual(10' _newtable.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables_with_entries_to_nonexisting_record_in_newer_index_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables_with_entries_to_nonexisting_record.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(_ptableVersion' maxSize: 30);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables_with_entries_to_nonexisting_record_in_newer_index_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables_with_entries_to_nonexisting_record.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add((ulong)(0x010100000000 << i)' j' i * 10 + j);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables_with_entries_to_nonexisting_record_in_newer_index_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables_with_entries_to_nonexisting_record.cs,TestFixtureSetUp,The following statement contains a magic number: j < 10
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables_with_entries_to_nonexisting_record_in_newer_index_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables_with_entries_to_nonexisting_record.cs,TestFixtureSetUp,The following statement contains a magic number: i < 4
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables_with_entries_to_nonexisting_record_in_newer_index_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables_with_entries_to_nonexisting_record.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' _files[4]' (streamId' hash) => hash' x => x.Position % 2 == 0'  				x => new Tuple<string' bool>(""' x.Position % 2 == 0)' _ptableVersion'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables_with_entries_to_nonexisting_record_in_newer_index_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables_with_entries_to_nonexisting_record.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' _files[4]' (streamId' hash) => hash' x => x.Position % 2 == 0'  				x => new Tuple<string' bool>(""' x.Position % 2 == 0)' _ptableVersion'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables_with_entries_to_nonexisting_record_in_newer_index_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables_with_entries_to_nonexisting_record.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' _files[4]' (streamId' hash) => hash' x => x.Position % 2 == 0'  				x => new Tuple<string' bool>(""' x.Position % 2 == 0)' _ptableVersion'  				skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables_with_entries_to_nonexisting_record_in_newer_index_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables_with_entries_to_nonexisting_record.cs,all_entries_are_left,The following statement contains a magic number: Assert.AreEqual(40' _newtable.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables_with_entries_to_nonexisting_record_in_newer_index_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables_with_entries_to_nonexisting_record.cs,the_right_items_are_deleted,The following statement contains a magic number: Assert.AreEqual(i * 10 + j' position);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables_with_entries_to_nonexisting_record_in_newer_index_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables_with_entries_to_nonexisting_record.cs,the_right_items_are_deleted,The following statement contains a magic number: j < 10
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_ptables_with_entries_to_nonexisting_record_in_newer_index_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_ptables_with_entries_to_nonexisting_record.cs,the_right_items_are_deleted,The following statement contains a magic number: i < 4
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_two_ptables,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_two_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(_ptableVersion' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_two_ptables,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_two_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: j < 10
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_two_ptables,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_two_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: i < 2
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_two_ptables,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_two_ptables.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' _files[2]' (streamId' hash) => hash' x => true'  				x => new System.Tuple<string' bool>(""' true)' _ptableVersion' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_merging_two_ptables,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_merging_two_ptables.cs,there_are_twenty_records_in_merged_index,The following statement contains a magic number: Assert.AreEqual(20' _newtable.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_trying_to_get_latest_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_trying_to_get_latest_entry.cs,GetHash,The following statement contains a magic number: return _ptableVersion == PTableVersions.IndexV1 ? value >> 32 : value;
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_trying_to_get_latest_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_trying_to_get_latest_entry.cs,nothing_is_found_on_empty_stream,The following statement contains a magic number: var memTable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_trying_to_get_latest_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_trying_to_get_latest_entry.cs,single_item_is_latest,The following statement contains a magic number: var memTable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_trying_to_get_latest_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_trying_to_get_latest_entry.cs,correct_entry_is_returned,The following statement contains a magic number: var memTable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_trying_to_get_latest_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_trying_to_get_latest_entry.cs,when_duplicated_entries_exist_the_one_with_latest_position_is_returned,The following statement contains a magic number: var memTable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_trying_to_get_latest_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_trying_to_get_latest_entry.cs,only_entry_with_largest_position_is_returned_when_triduplicated,The following statement contains a magic number: var memTable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_trying_to_get_oldest_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_trying_to_get_oldest_entry.cs,GetHash,The following statement contains a magic number: return _ptableVersion == PTableVersions.IndexV1 ? value >> 32 : value;
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_trying_to_get_oldest_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_trying_to_get_oldest_entry.cs,nothing_is_found_on_empty_stream,The following statement contains a magic number: var memTable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_trying_to_get_oldest_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_trying_to_get_oldest_entry.cs,single_item_is_latest,The following statement contains a magic number: var memTable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_trying_to_get_oldest_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_trying_to_get_oldest_entry.cs,correct_entry_is_returned,The following statement contains a magic number: var memTable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_trying_to_get_oldest_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_trying_to_get_oldest_entry.cs,when_duplicated_entries_exist_the_one_with_oldest_position_is_returned,The following statement contains a magic number: var memTable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV1,when_trying_to_get_oldest_entry,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\when_trying_to_get_oldest_entry.cs,only_entry_with_smallest_position_is_returned_when_triduplicated,The following statement contains a magic number: var memTable = new HashListMemTable(_ptableVersion' maxSize: 10);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV1' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV1'  				5'  				maxSizeForMemory: 5 + _extraStreamHashesAtBeginning + _extraStreamHashesAtEnd'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV1' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV1'  				5'  				maxSizeForMemory: 5 + _extraStreamHashesAtBeginning + _extraStreamHashesAtEnd'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV1' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV1'  				5'  				maxSizeForMemory: 5 + _extraStreamHashesAtBeginning + _extraStreamHashesAtEnd'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV1' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV1'  				5'  				maxSizeForMemory: 5 + _extraStreamHashesAtBeginning + _extraStreamHashesAtEnd'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "account--696193173"' 0' 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 1' 3);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "account--696193173"' 1' 4);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 2' 5);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 2' 5);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 5)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 5'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 5)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 5'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 5)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 5'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 5)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 5'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "account--696193173"' 2' 6);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "account--696193173"' 2' 6);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 3' 7);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 3' 7);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "account--696193173"' 3' 8);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "account--696193173"' 3' 8);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 4' 9);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "LPN-FC002_LPK51001"' 4' 9);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "account--696193173"' 4' 10);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "account--696193173"' 4' 10);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TestFixtureSetUp,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: var result = _tableIndex.GetRange(streamId' 0' 4).ToArray();
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: var hash = (ulong)_lowHasher.Hash(streamId) << 32 | _highHasher.Hash(streamId);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result.Count()' Is.EqualTo(5));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Version' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Position' Is.EqualTo(10));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Version' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Position' Is.EqualTo(8));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(6));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(6));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Version' Is.EqualTo(1));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Version' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Position' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Position' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: result = _tableIndex.GetRange(streamId' 0' 4).ToArray();
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: hash = (ulong)_lowHasher.Hash(streamId) << 32 | _highHasher.Hash(streamId);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result.Count()' Is.EqualTo(5));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Version' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Position' Is.EqualTo(9));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Version' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Position' Is.EqualTo(7));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(5));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(5));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Version' Is.EqualTo(1));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Version' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_hash_collision_when_upgrading_to_64bit,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Position' Is.EqualTo(1));
Magic Number,EventStore.Core.Tests.Index.IndexV2,FakeIndexReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_hash_collision_when_upgrading_to_64bit.cs,TryReadAt,The following statement contains a magic number: var record = (LogRecord)new PrepareLogRecord(position' Guid.NewGuid()' Guid.NewGuid()' 0' 0'  				position % 2 == 0 ? "account--696193173" : "LPN-FC002_LPK51001"' -1' DateTime.UtcNow' PrepareFlags.None'  				"type"' new byte[0]' null);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV1' maxSize: 3)'  				() => fakeReader'  				PTableVersions.IndexV1'  				5'  				maxSizeForMemory: 3'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV1' maxSize: 3)'  				() => fakeReader'  				PTableVersions.IndexV1'  				5'  				maxSizeForMemory: 3'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV1' maxSize: 3)'  				() => fakeReader'  				PTableVersions.IndexV1'  				5'  				maxSizeForMemory: 3'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV1' maxSize: 3)'  				() => fakeReader'  				PTableVersions.IndexV1'  				5'  				maxSizeForMemory: 3'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' Stream2' 0' 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' Stream3' 0' 3);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 3)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 3'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 3)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 3'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 3)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 3'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 3)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 3'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' Stream3' 1' 4);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' Stream2' 1' 5);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' Stream1' 1' 6);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TestFixtureSetUp,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,should_have_all_entries_except_scavenged,The following statement contains a magic number: var hash = (ulong)_lowHasher.Hash(streamId) << 32 | _highHasher.Hash(streamId);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,should_have_all_entries_except_scavenged,The following statement contains a magic number: Assert.That(result[0].Position' Is.EqualTo(6));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,should_have_all_entries_except_scavenged,The following statement contains a magic number: hash = (ulong)_lowHasher.Hash(streamId) << 32 | _highHasher.Hash(streamId);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,should_have_all_entries_except_scavenged,The following statement contains a magic number: Assert.That(result[0].Position' Is.EqualTo(5));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,should_have_all_entries_except_scavenged,The following statement contains a magic number: hash = (ulong)_lowHasher.Hash(streamId) << 32 | _highHasher.Hash(streamId);
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,should_have_all_entries_except_scavenged,The following statement contains a magic number: Assert.That(result.Count()' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,should_have_all_entries_except_scavenged,The following statement contains a magic number: Assert.That(result[0].Position' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.IndexV2,table_index_when_merging_upgrading_to_64bit_if_single_stream_entry_doesnt_exist_drops_entry_and_carries_on,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,should_have_all_entries_except_scavenged,The following statement contains a magic number: Assert.That(result[1].Position' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.IndexV2,FakeIndexReader2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TryReadAt,The following statement contains a magic number: switch (position) {  					case 1:  						eventStreamId = Stream1;  						break;  					case 2:  						eventStreamId = Stream2;  						break;  					case 3:  						eventStreamId = Stream3;  						break;  					default:  						throw new ArgumentOutOfRangeException("Unexpected position look up.");  				}
Magic Number,EventStore.Core.Tests.Index.IndexV2,FakeIndexReader2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,TryReadAt,The following statement contains a magic number: switch (position) {  					case 1:  						eventStreamId = Stream1;  						break;  					case 2:  						eventStreamId = Stream2;  						break;  					case 3:  						eventStreamId = Stream3;  						break;  					default:  						throw new ArgumentOutOfRangeException("Unexpected position look up.");  				}
Magic Number,EventStore.Core.Tests.Index.IndexV2,FakeIndexReader2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV2\table_index_when_merging_upgrading_to_64bit_if_entry_doesnt_exist_drops_entry_and_carries_on.cs,ExistsAt,The following statement contains a magic number: return position != 2 && position != 1;
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV2' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV2'  				5'  				maxSizeForMemory: 5'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV2' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV2'  				5'  				maxSizeForMemory: 5'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV2' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV2'  				5'  				maxSizeForMemory: 5'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV2' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV2'  				5'  				maxSizeForMemory: 5'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-2"' 0' 2);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 1' 3);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-2"' 1' 4);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 2' 5);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 2' 5);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 5)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 5'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 5)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 5'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 5)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 5'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(_ptableVersion' maxSize: 5)'  				() => fakeReader'  				_ptableVersion'  				5'  				maxSizeForMemory: 5'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-2"' 2' 6);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-2"' 2' 6);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 3' 7);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 3' 7);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-2"' 3' 8);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-2"' 3' 8);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 4' 9);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 4' 9);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-2"' 4' 10);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-2"' 4' 10);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TestFixtureSetUp,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: var result = _tableIndex.GetRange(streamId' 0' 4).ToArray();
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: var hash = (ulong)_lowHasher.Hash(streamId) << 32 | _highHasher.Hash(streamId);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result.Count()' Is.EqualTo(5));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Version' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Position' Is.EqualTo(10));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Version' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Position' Is.EqualTo(8));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(6));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(6));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Version' Is.EqualTo(1));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Version' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Position' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Position' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: result = _tableIndex.GetRange(streamId' 0' 4).ToArray();
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: hash = (ulong)_lowHasher.Hash(streamId) << 32 | _highHasher.Hash(streamId);
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result.Count()' Is.EqualTo(5));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Version' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Position' Is.EqualTo(9));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Version' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Position' Is.EqualTo(7));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(5));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(5));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Version' Is.EqualTo(1));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Version' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.IndexV3,when_upgrading_index_to_64bit_stream_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Position' Is.EqualTo(1));
Magic Number,EventStore.Core.Tests.Index.IndexV3,FakeIndexReader,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV3\when_upgrading_index_to_64bit_stream_version.cs,TryReadAt,The following statement contains a magic number: var record = (LogRecord)new PrepareLogRecord(position' Guid.NewGuid()' Guid.NewGuid()' 0' 0'  				position % 2 == 0 ? "testStream-2" : "testStream-1"' -1' DateTime.UtcNow' PrepareFlags.None' "type"'  				new byte[0]' null);
Magic Number,EventStore.Core.Tests.Index.IndexV4,ptable_midpoint_calculations_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\ptable_midpoint_calculations_should.cs,construct_same_midpoint_indexes_for_any_combination_of_params,The following statement contains a magic number: depth < 20
Magic Number,EventStore.Core.Tests.Index.IndexV4,ptable_midpoint_calculations_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\ptable_midpoint_calculations_should.cs,construct_same_midpoint_indexes_for_any_combination_of_params_large,The following statement contains a magic number: construct_same_midpoint_indexes_for_any_combination_of_params(4096);
Magic Number,EventStore.Core.Tests.Index.IndexV4,ptable_midpoint_calculations_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\ptable_midpoint_calculations_should.cs,construct_same_midpoint_indexes_for_any_combination_of_params_small,The following statement contains a magic number: construct_same_midpoint_indexes_for_any_combination_of_params(200);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_ptables_vx_to_v4,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(_fromVersion' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_ptables_vx_to_v4,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table = new HashListMemTable(_fromVersion' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_ptables_vx_to_v4,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,there_are_8_records_in_the_merged_index,The following statement contains a magic number: Assert.AreEqual(8' _newtable.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_ptables_vx_to_v4,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,midpoints_are_cached_in_ptable_footer,The following statement contains a magic number: var numIndexEntries = 8;
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_ptables_vx_to_v4,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,correct_number_of_midpoints_are_loaded,The following statement contains a magic number: Assert.AreEqual(_newtable.GetMidPoints().Length'  				PTable.GetRequiredMidpointCountCached(8' PTableVersions.IndexV4));
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(_fromVersion' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 0' 2);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 0' 3);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 1' 4);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table = new HashListMemTable(_fromVersion' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 5);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 5);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 1' 6);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 2' 7);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 2' 7);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010400000000' 0' 8);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010400000000' 1' 9);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table = new HashListMemTable(_fromVersion' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 1' 10);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 11);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 11);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 1' 12);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 2' 13);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 2' 13);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 3' 14);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 3' 14);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' _newtableFile' (streamId' hash) => hash << 32 | hasher.Hash(streamId)'  				x => x.Position % 2 == 0' x => new Tuple<string' bool>(x.Stream.ToString()' x.Position % 2 == 0)'  				PTableVersions.IndexV4' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' _newtableFile' (streamId' hash) => hash << 32 | hasher.Hash(streamId)'  				x => x.Position % 2 == 0' x => new Tuple<string' bool>(x.Stream.ToString()' x.Position % 2 == 0)'  				PTableVersions.IndexV4' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' _newtableFile' (streamId' hash) => hash << 32 | hasher.Hash(streamId)'  				x => x.Position % 2 == 0' x => new Tuple<string' bool>(x.Stream.ToString()' x.Position % 2 == 0)'  				PTableVersions.IndexV4' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,there_are_7_records_in_the_merged_index,The following statement contains a magic number: Assert.AreEqual(7' _newtable.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,midpoints_are_cached_in_ptable_footer,The following statement contains a magic number: var numIndexEntries = 7;
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries_from_v1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,correct_number_of_midpoints_are_loaded,The following statement contains a magic number: Assert.AreEqual(_newtable.GetMidPoints().Length'  				PTable.GetRequiredMidpointCountCached(7' PTableVersions.IndexV4));
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(_fromVersion' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 0' 2);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 0' 3);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 1' 4);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table = new HashListMemTable(_fromVersion' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 5);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 5);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 1' 6);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 2' 7);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 2' 7);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010400000000' 0' 8);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010400000000' 1' 9);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table = new HashListMemTable(_fromVersion' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 1' 10);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 11);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010100000000' 2' 11);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 1' 12);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 2' 13);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 2' 13);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 3' 14);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010500000000' 3' 14);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' _newtableFile' (streamId' hash) => hash << 32 | hasher.Hash(streamId)'  				x => x.Position % 2 == 0' x => new Tuple<string' bool>(x.Stream.ToString()' x.Position % 2 == 0)'  				PTableVersions.IndexV4' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' _newtableFile' (streamId' hash) => hash << 32 | hasher.Hash(streamId)'  				x => x.Position % 2 == 0' x => new Tuple<string' bool>(x.Stream.ToString()' x.Position % 2 == 0)'  				PTableVersions.IndexV4' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,TestFixtureSetUp,The following statement contains a magic number: _newtable = PTable.MergeTo(_tables' _newtableFile' (streamId' hash) => hash << 32 | hasher.Hash(streamId)'  				x => x.Position % 2 == 0' x => new Tuple<string' bool>(x.Stream.ToString()' x.Position % 2 == 0)'  				PTableVersions.IndexV4' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,there_are_14_records_in_the_merged_index,The following statement contains a magic number: Assert.AreEqual(14' _newtable.Count);
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,midpoints_are_cached_in_ptable_footer,The following statement contains a magic number: var numIndexEntries = 14;
Magic Number,EventStore.Core.Tests.Index.IndexV4,when_merging_to_ptable_v4_with_deleted_entries,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV4\when_merging_ptables_vx_to_v4.cs,correct_number_of_midpoints_are_loaded,The following statement contains a magic number: Assert.AreEqual(_newtable.GetMidPoints().Length'  				PTable.GetRequiredMidpointCountCached(14' PTableVersions.IndexV4));
Magic Number,EventStore.Core.Tests.Index.IndexVAny,saving_empty_index_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexVAny\saving_empty_index_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: fs.Position = 32;
Magic Number,EventStore.Core.Tests.Index.IndexVAny,saving_empty_index_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexVAny\saving_empty_index_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual(5' lines.Count());
Magic Number,EventStore.Core.Tests.Index.IndexVAny,saving_empty_index_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexVAny\saving_empty_index_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual("-1/-1"' lines[2]);
Magic Number,EventStore.Core.Tests.Index.IndexVAny,saving_empty_index_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexVAny\saving_empty_index_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual($"{int.MaxValue}"' lines[3]);
Magic Number,EventStore.Core.Tests.Index.IndexVAny,saving_empty_index_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexVAny\saving_empty_index_to_a_file.cs,the_file_contains_correct_data,The following statement contains a magic number: Assert.AreEqual(""' lines[4]);
Magic Number,EventStore.Core.Tests.Index.IndexVAny,when_opening_ptable_without_right_flag_in_header,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexVAny\when_opening_ptable_without_right_flag_in_header.cs,SetUp,The following statement contains a magic number: var bytes = new byte[128];
Magic Number,EventStore.Core.Tests.Index.IndexVAny,when_opening_ptable_without_right_flag_in_header,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexVAny\when_opening_ptable_without_right_flag_in_header.cs,the_invalid_file_exception_is_thrown,The following statement contains a magic number: var exc = Assert.Throws<CorruptIndexException>(() => PTable.FromFile(Filename' 16' false));
Magic Number,EventStore.Core.Tests.Index.IndexVAny,when_opening_v1_indexmap,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexVAny\when_opening_v1_indexmap.cs,should_initialize_auto_merge_level_correctly,The following statement contains a magic number: var map = IndexMapTestFactory.FromFile(_filename' loadPTables: false' maxAutoMergeLevel: 4);
Magic Number,EventStore.Core.Tests.Index.IndexVAny,when_opening_indexmap_with_auto_merge_level_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexVAny\when_opening_v1_indexmap.cs,TestFixtureSetUp,The following statement contains a magic number: var empty = IndexMap.CreateEmpty(2' maxTableLevelsForAutomaticMerge: 4);
Magic Number,EventStore.Core.Tests.Index.IndexVAny,when_opening_indexmap_with_auto_merge_level_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexVAny\when_opening_v1_indexmap.cs,TestFixtureSetUp,The following statement contains a magic number: var empty = IndexMap.CreateEmpty(2' maxTableLevelsForAutomaticMerge: 4);
Magic Number,EventStore.Core.Tests.Index.IndexVAny,when_opening_indexmap_with_auto_merge_level_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexVAny\when_opening_v1_indexmap.cs,should_throw_if_max_auto_merge_is_larger_than_map_value,The following statement contains a magic number: Assert.Throws<CorruptIndexException>(() => IndexMapTestFactory.FromFile(_filename' maxAutoMergeLevel: 5));
Magic Number,EventStore.Core.Tests.Index.IndexVAny,when_opening_indexmap_with_auto_merge_level_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexVAny\when_opening_v1_indexmap.cs,can_reduce_max_auto_merge_to_lower_than_map_value,The following statement contains a magic number: Assert.DoesNotThrow(() => map = IndexMapTestFactory.FromFile(_filename' maxAutoMergeLevel: 3));
Magic Number,EventStore.Core.Tests.Index.IndexVAny,when_opening_indexmap_with_auto_merge_level_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexVAny\when_opening_v1_indexmap.cs,can_reduce_max_auto_merge_to_lower_than_map_value,The following statement contains a magic number: Assert.AreEqual(lines[3]' "3");
Magic Number,EventStore.Core.Tests.Index.IndexVAny,when_opening_indexmap_with_auto_merge_level_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexVAny\when_opening_v1_indexmap.cs,should_open_if_auto_merge_levels_match,The following statement contains a magic number: Assert.DoesNotThrow(() => IndexMapTestFactory.FromFile(_filename' maxAutoMergeLevel: 4));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(_oldVersion' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 0' 2);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 0' 3);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 1' 4);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index.cs,TestFixtureSetUp,The following statement contains a magic number: Func<IndexEntry' bool> existsAt = x => x.Position % 2 == 0;
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index.cs,there_are_2_records_in_the_merged_index,The following statement contains a magic number: Assert.AreEqual(2' _newtable.Count);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(PTableVersions.IndexV4' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 0' 2);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 0' 3);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 1' 4);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index_is_cancelled,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index_is_cancelled.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(PTableVersions.IndexV4' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index_is_cancelled,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index_is_cancelled.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 0' 2);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index_is_cancelled,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index_is_cancelled.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 0' 3);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index_is_cancelled,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index_is_cancelled.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 1' 4);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index_removes_nothing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index_removes_nothing.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(_oldVersion' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index_removes_nothing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index_removes_nothing.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 0' 2);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index_removes_nothing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index_removes_nothing.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 0' 3);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index_removes_nothing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index_removes_nothing.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 1' 4);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_an_index_removes_nothing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_an_index_removes_nothing.cs,a_table_with_all_items_is_returned_with_a_newer_version,The following statement contains a magic number: Assert.That(_newtable.Count' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5' skipIndexVerify: _skipIndexVerify);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 1' 100);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 2' 200);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 2' 200);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 3' 300);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 3' 300);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 4' 400);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 4' 400);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 5' 500);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 5' 500);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,should_have_logged_each_index_table,The following statement contains a magic number: Assert.That(_log.ScavengedIndices.Count' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,should_have_logged_each_index_table,The following statement contains a magic number: Assert.That(_log.ScavengedIndices[1].EntriesDeleted' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,should_have_logged_each_index_table,The following statement contains a magic number: Assert.That(_log.ScavengedIndices[2].Scavenged' Is.False);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,should_have_logged_each_index_table,The following statement contains a magic number: Assert.That(_log.ScavengedIndices[2].Error' Is.Empty);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,should_have_logged_each_index_table,The following statement contains a magic number: Assert.That(_log.ScavengedIndices[2].EntriesDeleted' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: var result = _tableIndex.GetRange(streamId' 0' 5).ToArray();
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: var hash = (ulong)_lowHasher.Hash(streamId) << 32 | _highHasher.Hash(streamId);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result.Count()' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Version' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Position' Is.EqualTo(400));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Position' Is.EqualTo(100));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,should_have_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index.cs,old_index_tables_are_deleted,The following statement contains a magic number: Assert.That(Directory.EnumerateFiles(_indexDir).Count()' Is.EqualTo(4)' "Expected IndexMap and 3 tables.");
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: var fakeReader = new TFReaderLease(new FakeIndexReader(l => {  				scavengeStarted.Set();  				if (!scavengeBlocker.Wait(5000))  					throw new Exception("Failed to continue.");  				return false;  			}));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 1' 100);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: Assert.That(scavengeStarted.Wait(5000));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 2' 200);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 2' 200);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 3' 300);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 3' 300);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 4' 400);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 4' 400);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 5' 500);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 5' 500);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_have_logged_each_index_table,The following statement contains a magic number: Assert.That(_log.ScavengedIndices[0].EntriesDeleted' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: var result = _tableIndex.GetRange(streamId' 0' 5).ToArray();
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: var hash = (ulong)_lowHasher.Hash(streamId) << 32 | _highHasher.Hash(streamId);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result.Count()' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Version' Is.EqualTo(5));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Position' Is.EqualTo(500));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Version' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Position' Is.EqualTo(400));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(300));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(300));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(200));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(200));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_and_another_table_is_completed_during,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_and_another_table_is_completed_during.cs,all_tables_are_written_to_disk,The following statement contains a magic number: Assert.That(Directory.EnumerateFiles(_indexDir).Count()' Is.EqualTo(4)' "Expected IndexMap and 3 tables.");
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 1' 100);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 2' 200);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 2' 200);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 3' 300);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 3' 300);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 4' 400);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 4' 400);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 5' 500);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 5' 500);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: var result = _tableIndex.GetRange(streamId' 0' 5).ToArray();
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: var hash = (ulong)_lowHasher.Hash(streamId) << 32 | _highHasher.Hash(streamId);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result.Count()' Is.EqualTo(6));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Version' Is.EqualTo(5));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Position' Is.EqualTo(500));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Version' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Position' Is.EqualTo(400));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(300));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(300));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(200));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(200));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Version' Is.EqualTo(1));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Position' Is.EqualTo(100));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Position' Is.EqualTo(100));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[5].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[5].Version' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_scavenging_table,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_scavenging_table.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[5].Position' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 1' 100);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 2' 200);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 2' 200);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 3' 300);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 3' 300);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 4' 400);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 4' 400);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 5' 500);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 5' 500);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: var result = _tableIndex.GetRange(streamId' 0' 5).ToArray();
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: var hash = (ulong)_lowHasher.Hash(streamId) << 32 | _highHasher.Hash(streamId);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result.Count()' Is.EqualTo(6));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Version' Is.EqualTo(5));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Position' Is.EqualTo(500));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Version' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Position' Is.EqualTo(400));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(300));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(300));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(200));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(200));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Version' Is.EqualTo(1));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Position' Is.EqualTo(100));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Position' Is.EqualTo(100));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[5].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[5].Version' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_cancelled_while_waiting_for_lock,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_cancelled_while_waiting_for_lock.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[5].Position' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => {  					readerCount++;  					if (readerCount < 4) // One for each table add.  					{  						return fakeReader;  					}    					throw new Exception("Expected exception");  				}'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => {  					readerCount++;  					if (readerCount < 4) // One for each table add.  					{  						return fakeReader;  					}    					throw new Exception("Expected exception");  				}'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => {  					readerCount++;  					if (readerCount < 4) // One for each table add.  					{  						return fakeReader;  					}    					throw new Exception("Expected exception");  				}'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => {  					readerCount++;  					if (readerCount < 4) // One for each table add.  					{  						return fakeReader;  					}    					throw new Exception("Expected exception");  				}'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => {  					readerCount++;  					if (readerCount < 4) // One for each table add.  					{  						return fakeReader;  					}    					throw new Exception("Expected exception");  				}'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 1' 100);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 2' 200);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 2' 200);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 3' 300);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 3' 300);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 4' 400);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 4' 400);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 5' 500);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex.Add(1' "testStream-1"' 5' 500);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(_indexDir' _lowHasher' _highHasher'  				() => new HashListMemTable(PTableVersions.IndexV4' maxSize: 5)'  				() => fakeReader'  				PTableVersions.IndexV4'  				5'  				maxSizeForMemory: 2'  				maxTablesPerLevel: 5);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: var result = _tableIndex.GetRange(streamId' 0' 5).ToArray();
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: var hash = (ulong)_lowHasher.Hash(streamId) << 32 | _highHasher.Hash(streamId);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result.Count()' Is.EqualTo(6));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Version' Is.EqualTo(5));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[0].Position' Is.EqualTo(500));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Version' Is.EqualTo(4));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[1].Position' Is.EqualTo(400));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Version' Is.EqualTo(3));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(300));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[2].Position' Is.EqualTo(300));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Version' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(200));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[3].Position' Is.EqualTo(200));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Version' Is.EqualTo(1));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Position' Is.EqualTo(100));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[4].Position' Is.EqualTo(100));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[5].Stream' Is.EqualTo(hash));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[5].Version' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,should_still_have_all_entries_in_sorted_order,The following statement contains a magic number: Assert.That(result[5].Position' Is.EqualTo(0));
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_table_index_fails,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_table_index_fails.cs,old_index_tables_are_deleted,The following statement contains a magic number: Assert.That(Directory.EnumerateFiles(_indexDir).Count()' Is.EqualTo(4)' "Expected IndexMap and 3 tables.");
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_v1_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_v1_index.cs,TestFixtureSetUp,The following statement contains a magic number: var table = new HashListMemTable(PTableVersions.IndexV1' maxSize: 20);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_v1_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_v1_index.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010200000000' 0' 2);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_v1_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_v1_index.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 0' 3);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_v1_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_v1_index.cs,TestFixtureSetUp,The following statement contains a magic number: table.Add(0x010300000000' 1' 4);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_v1_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_v1_index.cs,TestFixtureSetUp,The following statement contains a magic number: _upgradeHash = (streamId' hash) => hash << 32 | hasher.Hash(streamId);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_v1_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_v1_index.cs,TestFixtureSetUp,The following statement contains a magic number: Func<IndexEntry' bool> existsAt = x => x.Position % 2 == 0;
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_v1_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_v1_index.cs,TestFixtureSetUp,The following statement contains a magic number: Func<IndexEntry' Tuple<string' bool>> readRecord = x =>  				new Tuple<string' bool>(x.Stream.ToString()' x.Position % 2 == 0);
Magic Number,EventStore.Core.Tests.Index.Scavenge,when_scavenging_a_v1_index,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\Scavenge\when_scavenging_a_v1_index.cs,there_are_2_records_in_the_merged_index,The following statement contains a magic number: Assert.AreEqual(2' _newtable.Count);
Magic Number,EventStore.Core.Tests.Integration,specification_with_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\specification_with_cluster.cs,TestFixtureSetUp,The following statement contains a magic number: _nodeEndpoints[2] = new Endpoints(  				GetFreePort(IPAddress.Loopback)' GetFreePort(IPAddress.Loopback)'  				GetFreePort(IPAddress.Loopback)' GetFreePort(IPAddress.Loopback)'  				GetFreePort(IPAddress.Loopback)' GetFreePort(IPAddress.Loopback));
Magic Number,EventStore.Core.Tests.Integration,specification_with_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\specification_with_cluster.cs,TestFixtureSetUp,The following statement contains a magic number: _nodeCreationFactory.Add(0' (wait) => CreateNode(0'  				_nodeEndpoints[0]' new IPEndPoint[] {_nodeEndpoints[1].InternalHttp' _nodeEndpoints[2].InternalHttp}'  				wait));
Magic Number,EventStore.Core.Tests.Integration,specification_with_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\specification_with_cluster.cs,TestFixtureSetUp,The following statement contains a magic number: _nodeCreationFactory.Add(1' (wait) => CreateNode(1'  				_nodeEndpoints[1]' new IPEndPoint[] {_nodeEndpoints[0].InternalHttp' _nodeEndpoints[2].InternalHttp}'  				wait));
Magic Number,EventStore.Core.Tests.Integration,specification_with_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\specification_with_cluster.cs,TestFixtureSetUp,The following statement contains a magic number: _nodeCreationFactory.Add(2' (wait) => CreateNode(2'  				_nodeEndpoints[2]' new IPEndPoint[] {_nodeEndpoints[0].InternalHttp' _nodeEndpoints[1].InternalHttp}'  				wait));
Magic Number,EventStore.Core.Tests.Integration,specification_with_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\specification_with_cluster.cs,TestFixtureSetUp,The following statement contains a magic number: _nodeCreationFactory.Add(2' (wait) => CreateNode(2'  				_nodeEndpoints[2]' new IPEndPoint[] {_nodeEndpoints[0].InternalHttp' _nodeEndpoints[1].InternalHttp}'  				wait));
Magic Number,EventStore.Core.Tests.Integration,specification_with_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\specification_with_cluster.cs,TestFixtureSetUp,The following statement contains a magic number: _nodeCreationFactory.Add(2' (wait) => CreateNode(2'  				_nodeEndpoints[2]' new IPEndPoint[] {_nodeEndpoints[0].InternalHttp' _nodeEndpoints[1].InternalHttp}'  				wait));
Magic Number,EventStore.Core.Tests.Integration,specification_with_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\specification_with_cluster.cs,TestFixtureSetUp,The following statement contains a magic number: _nodes[2] = _nodeCreationFactory[2](true);
Magic Number,EventStore.Core.Tests.Integration,specification_with_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\specification_with_cluster.cs,TestFixtureSetUp,The following statement contains a magic number: _nodes[2] = _nodeCreationFactory[2](true);
Magic Number,EventStore.Core.Tests.Integration,specification_with_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\specification_with_cluster.cs,TestFixtureSetUp,The following statement contains a magic number: _nodes[2].Start();
Magic Number,EventStore.Core.Tests.Integration,specification_with_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\specification_with_cluster.cs,TestFixtureSetUp,The following statement contains a magic number: WaitHandle.WaitAll(new[] {_nodes[0].StartedEvent' _nodes[1].StartedEvent' _nodes[2].StartedEvent});
Magic Number,EventStore.Core.Tests.Integration,specification_with_cluster,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\specification_with_cluster.cs,TestFixtureTearDown,The following statement contains a magic number: _nodes[2].Shutdown();
Magic Number,EventStore.Core.Tests.Integration,when_a_master_is_shutdown,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_master_is_shutdown.cs,BeforeNodesStart,The following statement contains a magic number: _expectedNumberOfEvents = new CountdownEvent(3 /*role assignments*/ + 1 /*epoch write*/);
Magic Number,EventStore.Core.Tests.Integration,when_a_master_is_shutdown,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_master_is_shutdown.cs,Given,The following statement contains a magic number: _expectedNumberOfEvents.Wait(5000);
Magic Number,EventStore.Core.Tests.Integration,when_a_master_is_shutdown,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_master_is_shutdown.cs,Given,The following statement contains a magic number: _expectedNumberOfEvents = new CountdownEvent(2 /*role assignments*/ + 1 /*epoch write*/);
Magic Number,EventStore.Core.Tests.Integration,when_a_master_is_shutdown,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_master_is_shutdown.cs,Given,The following statement contains a magic number: _expectedNumberOfEvents.Wait(5000);
Magic Number,EventStore.Core.Tests.Integration,when_a_master_is_shutdown,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_master_is_shutdown.cs,should_assign_master_and_slave_roles_correctly,The following statement contains a magic number: Assert.AreEqual(5' _roleAssignments.Count());
Magic Number,EventStore.Core.Tests.Integration,when_a_master_is_shutdown,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_master_is_shutdown.cs,should_assign_master_and_slave_roles_correctly,The following statement contains a magic number: Assert.AreEqual(1' _roleAssignments.Take(3).Where(x => x.Equals("master")).Count());
Magic Number,EventStore.Core.Tests.Integration,when_a_master_is_shutdown,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_master_is_shutdown.cs,should_assign_master_and_slave_roles_correctly,The following statement contains a magic number: Assert.AreEqual(2' _roleAssignments.Take(3).Where(x => x.Equals("slave")).Count());
Magic Number,EventStore.Core.Tests.Integration,when_a_master_is_shutdown,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_master_is_shutdown.cs,should_assign_master_and_slave_roles_correctly,The following statement contains a magic number: Assert.AreEqual(2' _roleAssignments.Take(3).Where(x => x.Equals("slave")).Count());
Magic Number,EventStore.Core.Tests.Integration,when_a_master_is_shutdown,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_master_is_shutdown.cs,should_assign_master_and_slave_roles_correctly,The following statement contains a magic number: Assert.AreEqual(1' _roleAssignments.Skip(3).Take(2).Where(x => x.Equals("master")).Count());
Magic Number,EventStore.Core.Tests.Integration,when_a_master_is_shutdown,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_master_is_shutdown.cs,should_assign_master_and_slave_roles_correctly,The following statement contains a magic number: Assert.AreEqual(1' _roleAssignments.Skip(3).Take(2).Where(x => x.Equals("master")).Count());
Magic Number,EventStore.Core.Tests.Integration,when_a_master_is_shutdown,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_master_is_shutdown.cs,should_assign_master_and_slave_roles_correctly,The following statement contains a magic number: Assert.AreEqual(1' _roleAssignments.Skip(3).Take(2).Where(x => x.Equals("slave")).Count());
Magic Number,EventStore.Core.Tests.Integration,when_a_master_is_shutdown,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_master_is_shutdown.cs,should_assign_master_and_slave_roles_correctly,The following statement contains a magic number: Assert.AreEqual(1' _roleAssignments.Skip(3).Take(2).Where(x => x.Equals("slave")).Count());
Magic Number,EventStore.Core.Tests.Integration,when_a_master_is_shutdown,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_master_is_shutdown.cs,should_have_two_unique_epoch_writes,The following statement contains a magic number: Assert.AreEqual(2' _epochIds.Distinct().Count());
Magic Number,EventStore.Core.Tests.Integration,when_a_single_node_is_restarted_multiple_times,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_single_node_is_restarted_multiple_times.cs,Given,The following statement contains a magic number: _waitForStart.WaitOne(5000);
Magic Number,EventStore.Core.Tests.Integration,when_a_single_node_is_restarted_multiple_times,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Integration\when_a_single_node_is_restarted_multiple_times.cs,Given,The following statement contains a magic number: _waitForStart.WaitOne(5000);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,ClusterSettingsFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ClusterSettingsFactory.cs,CreateVNode,The following statement contains a magic number: int tcpIntPort = StartingPort + nodeNumber * 2'  				tcpExtPort = tcpIntPort + 1'  				httpIntPort = tcpIntPort + 10'  				httpExtPort = tcpIntPort + 11;
Magic Number,EventStore.Core.Tests.Services.ElectionsService,ClusterSettingsFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ClusterSettingsFactory.cs,CreateVNode,The following statement contains a magic number: int tcpIntPort = StartingPort + nodeNumber * 2'  				tcpExtPort = tcpIntPort + 1'  				httpIntPort = tcpIntPort + 10'  				httpExtPort = tcpIntPort + 11;
Magic Number,EventStore.Core.Tests.Services.ElectionsService,ClusterSettingsFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ClusterSettingsFactory.cs,CreateVNode,The following statement contains a magic number: int tcpIntPort = StartingPort + nodeNumber * 2'  				tcpExtPort = tcpIntPort + 1'  				httpIntPort = tcpIntPort + 10'  				httpExtPort = tcpIntPort + 11;
Magic Number,EventStore.Core.Tests.Services.ElectionsService,ClusterSettingsFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ClusterSettingsFactory.cs,CreateVNode,The following statement contains a magic number: var vnode = new ClusterVNodeSettings(Guid.NewGuid()' 0'  				GetLoopbackForPort(tcpIntPort)' null'  				GetLoopbackForPort(tcpExtPort)' null'  				GetLoopbackForPort(httpIntPort)' GetLoopbackForPort(httpExtPort)'  				new Data.GossipAdvertiseInfo(GetLoopbackForPort(tcpIntPort)' null'  					GetLoopbackForPort(tcpExtPort)' null'  					GetLoopbackForPort(httpIntPort)'  					GetLoopbackForPort(httpExtPort)'  					null' null' 0' 0)'  				new[] {GetLoopbackForPort(httpIntPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {GetLoopbackForPort(httpExtPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				false' null' 1' false' "dns"' new[] {GetLoopbackForPort(ManagerPort)}'  				TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(2)'  				TimeSpan.FromSeconds(2)' false' false' null' false' TimeSpan.FromHours(1)'  				StatsStorage.StreamAndFile' 0' new InternalAuthenticationProviderFactory()' false' 30' true' true' true'  				TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)' true' Opts.MaxMemtableSizeDefault' Opts.HashCollisionReadLimitDefault' false'  				false' false'  				Opts.ConnectionPendingSendBytesThresholdDefault' Opts.ConnectionQueueSizeThresholdDefault'  				Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,ClusterSettingsFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ClusterSettingsFactory.cs,CreateVNode,The following statement contains a magic number: var vnode = new ClusterVNodeSettings(Guid.NewGuid()' 0'  				GetLoopbackForPort(tcpIntPort)' null'  				GetLoopbackForPort(tcpExtPort)' null'  				GetLoopbackForPort(httpIntPort)' GetLoopbackForPort(httpExtPort)'  				new Data.GossipAdvertiseInfo(GetLoopbackForPort(tcpIntPort)' null'  					GetLoopbackForPort(tcpExtPort)' null'  					GetLoopbackForPort(httpIntPort)'  					GetLoopbackForPort(httpExtPort)'  					null' null' 0' 0)'  				new[] {GetLoopbackForPort(httpIntPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {GetLoopbackForPort(httpExtPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				false' null' 1' false' "dns"' new[] {GetLoopbackForPort(ManagerPort)}'  				TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(2)'  				TimeSpan.FromSeconds(2)' false' false' null' false' TimeSpan.FromHours(1)'  				StatsStorage.StreamAndFile' 0' new InternalAuthenticationProviderFactory()' false' 30' true' true' true'  				TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)' true' Opts.MaxMemtableSizeDefault' Opts.HashCollisionReadLimitDefault' false'  				false' false'  				Opts.ConnectionPendingSendBytesThresholdDefault' Opts.ConnectionQueueSizeThresholdDefault'  				Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,ClusterSettingsFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ClusterSettingsFactory.cs,CreateVNode,The following statement contains a magic number: var vnode = new ClusterVNodeSettings(Guid.NewGuid()' 0'  				GetLoopbackForPort(tcpIntPort)' null'  				GetLoopbackForPort(tcpExtPort)' null'  				GetLoopbackForPort(httpIntPort)' GetLoopbackForPort(httpExtPort)'  				new Data.GossipAdvertiseInfo(GetLoopbackForPort(tcpIntPort)' null'  					GetLoopbackForPort(tcpExtPort)' null'  					GetLoopbackForPort(httpIntPort)'  					GetLoopbackForPort(httpExtPort)'  					null' null' 0' 0)'  				new[] {GetLoopbackForPort(httpIntPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {GetLoopbackForPort(httpExtPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				false' null' 1' false' "dns"' new[] {GetLoopbackForPort(ManagerPort)}'  				TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(2)'  				TimeSpan.FromSeconds(2)' false' false' null' false' TimeSpan.FromHours(1)'  				StatsStorage.StreamAndFile' 0' new InternalAuthenticationProviderFactory()' false' 30' true' true' true'  				TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)' true' Opts.MaxMemtableSizeDefault' Opts.HashCollisionReadLimitDefault' false'  				false' false'  				Opts.ConnectionPendingSendBytesThresholdDefault' Opts.ConnectionQueueSizeThresholdDefault'  				Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,ClusterSettingsFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ClusterSettingsFactory.cs,CreateVNode,The following statement contains a magic number: var vnode = new ClusterVNodeSettings(Guid.NewGuid()' 0'  				GetLoopbackForPort(tcpIntPort)' null'  				GetLoopbackForPort(tcpExtPort)' null'  				GetLoopbackForPort(httpIntPort)' GetLoopbackForPort(httpExtPort)'  				new Data.GossipAdvertiseInfo(GetLoopbackForPort(tcpIntPort)' null'  					GetLoopbackForPort(tcpExtPort)' null'  					GetLoopbackForPort(httpIntPort)'  					GetLoopbackForPort(httpExtPort)'  					null' null' 0' 0)'  				new[] {GetLoopbackForPort(httpIntPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {GetLoopbackForPort(httpExtPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				false' null' 1' false' "dns"' new[] {GetLoopbackForPort(ManagerPort)}'  				TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(2)'  				TimeSpan.FromSeconds(2)' false' false' null' false' TimeSpan.FromHours(1)'  				StatsStorage.StreamAndFile' 0' new InternalAuthenticationProviderFactory()' false' 30' true' true' true'  				TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)' true' Opts.MaxMemtableSizeDefault' Opts.HashCollisionReadLimitDefault' false'  				false' false'  				Opts.ConnectionPendingSendBytesThresholdDefault' Opts.ConnectionQueueSizeThresholdDefault'  				Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,ClusterSettingsFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ClusterSettingsFactory.cs,CreateVNode,The following statement contains a magic number: var vnode = new ClusterVNodeSettings(Guid.NewGuid()' 0'  				GetLoopbackForPort(tcpIntPort)' null'  				GetLoopbackForPort(tcpExtPort)' null'  				GetLoopbackForPort(httpIntPort)' GetLoopbackForPort(httpExtPort)'  				new Data.GossipAdvertiseInfo(GetLoopbackForPort(tcpIntPort)' null'  					GetLoopbackForPort(tcpExtPort)' null'  					GetLoopbackForPort(httpIntPort)'  					GetLoopbackForPort(httpExtPort)'  					null' null' 0' 0)'  				new[] {GetLoopbackForPort(httpIntPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {GetLoopbackForPort(httpExtPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				false' null' 1' false' "dns"' new[] {GetLoopbackForPort(ManagerPort)}'  				TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(2)'  				TimeSpan.FromSeconds(2)' false' false' null' false' TimeSpan.FromHours(1)'  				StatsStorage.StreamAndFile' 0' new InternalAuthenticationProviderFactory()' false' 30' true' true' true'  				TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)' true' Opts.MaxMemtableSizeDefault' Opts.HashCollisionReadLimitDefault' false'  				false' false'  				Opts.ConnectionPendingSendBytesThresholdDefault' Opts.ConnectionQueueSizeThresholdDefault'  				Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,ClusterSettingsFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ClusterSettingsFactory.cs,CreateVNode,The following statement contains a magic number: var vnode = new ClusterVNodeSettings(Guid.NewGuid()' 0'  				GetLoopbackForPort(tcpIntPort)' null'  				GetLoopbackForPort(tcpExtPort)' null'  				GetLoopbackForPort(httpIntPort)' GetLoopbackForPort(httpExtPort)'  				new Data.GossipAdvertiseInfo(GetLoopbackForPort(tcpIntPort)' null'  					GetLoopbackForPort(tcpExtPort)' null'  					GetLoopbackForPort(httpIntPort)'  					GetLoopbackForPort(httpExtPort)'  					null' null' 0' 0)'  				new[] {GetLoopbackForPort(httpIntPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {GetLoopbackForPort(httpExtPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				false' null' 1' false' "dns"' new[] {GetLoopbackForPort(ManagerPort)}'  				TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(2)'  				TimeSpan.FromSeconds(2)' false' false' null' false' TimeSpan.FromHours(1)'  				StatsStorage.StreamAndFile' 0' new InternalAuthenticationProviderFactory()' false' 30' true' true' true'  				TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)' true' Opts.MaxMemtableSizeDefault' Opts.HashCollisionReadLimitDefault' false'  				false' false'  				Opts.ConnectionPendingSendBytesThresholdDefault' Opts.ConnectionQueueSizeThresholdDefault'  				Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,ClusterSettingsFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ClusterSettingsFactory.cs,CreateVNode,The following statement contains a magic number: var vnode = new ClusterVNodeSettings(Guid.NewGuid()' 0'  				GetLoopbackForPort(tcpIntPort)' null'  				GetLoopbackForPort(tcpExtPort)' null'  				GetLoopbackForPort(httpIntPort)' GetLoopbackForPort(httpExtPort)'  				new Data.GossipAdvertiseInfo(GetLoopbackForPort(tcpIntPort)' null'  					GetLoopbackForPort(tcpExtPort)' null'  					GetLoopbackForPort(httpIntPort)'  					GetLoopbackForPort(httpExtPort)'  					null' null' 0' 0)'  				new[] {GetLoopbackForPort(httpIntPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {GetLoopbackForPort(httpExtPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				false' null' 1' false' "dns"' new[] {GetLoopbackForPort(ManagerPort)}'  				TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(2)'  				TimeSpan.FromSeconds(2)' false' false' null' false' TimeSpan.FromHours(1)'  				StatsStorage.StreamAndFile' 0' new InternalAuthenticationProviderFactory()' false' 30' true' true' true'  				TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)' true' Opts.MaxMemtableSizeDefault' Opts.HashCollisionReadLimitDefault' false'  				false' false'  				Opts.ConnectionPendingSendBytesThresholdDefault' Opts.ConnectionQueueSizeThresholdDefault'  				Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,ClusterSettingsFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ClusterSettingsFactory.cs,CreateVNode,The following statement contains a magic number: var vnode = new ClusterVNodeSettings(Guid.NewGuid()' 0'  				GetLoopbackForPort(tcpIntPort)' null'  				GetLoopbackForPort(tcpExtPort)' null'  				GetLoopbackForPort(httpIntPort)' GetLoopbackForPort(httpExtPort)'  				new Data.GossipAdvertiseInfo(GetLoopbackForPort(tcpIntPort)' null'  					GetLoopbackForPort(tcpExtPort)' null'  					GetLoopbackForPort(httpIntPort)'  					GetLoopbackForPort(httpExtPort)'  					null' null' 0' 0)'  				new[] {GetLoopbackForPort(httpIntPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {GetLoopbackForPort(httpExtPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				false' null' 1' false' "dns"' new[] {GetLoopbackForPort(ManagerPort)}'  				TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(2)'  				TimeSpan.FromSeconds(2)' false' false' null' false' TimeSpan.FromHours(1)'  				StatsStorage.StreamAndFile' 0' new InternalAuthenticationProviderFactory()' false' 30' true' true' true'  				TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)' true' Opts.MaxMemtableSizeDefault' Opts.HashCollisionReadLimitDefault' false'  				false' false'  				Opts.ConnectionPendingSendBytesThresholdDefault' Opts.ConnectionQueueSizeThresholdDefault'  				Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,ClusterSettingsFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ClusterSettingsFactory.cs,CreateVNode,The following statement contains a magic number: var vnode = new ClusterVNodeSettings(Guid.NewGuid()' 0'  				GetLoopbackForPort(tcpIntPort)' null'  				GetLoopbackForPort(tcpExtPort)' null'  				GetLoopbackForPort(httpIntPort)' GetLoopbackForPort(httpExtPort)'  				new Data.GossipAdvertiseInfo(GetLoopbackForPort(tcpIntPort)' null'  					GetLoopbackForPort(tcpExtPort)' null'  					GetLoopbackForPort(httpIntPort)'  					GetLoopbackForPort(httpExtPort)'  					null' null' 0' 0)'  				new[] {GetLoopbackForPort(httpIntPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {GetLoopbackForPort(httpExtPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				false' null' 1' false' "dns"' new[] {GetLoopbackForPort(ManagerPort)}'  				TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(2)'  				TimeSpan.FromSeconds(2)' false' false' null' false' TimeSpan.FromHours(1)'  				StatsStorage.StreamAndFile' 0' new InternalAuthenticationProviderFactory()' false' 30' true' true' true'  				TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)' true' Opts.MaxMemtableSizeDefault' Opts.HashCollisionReadLimitDefault' false'  				false' false'  				Opts.ConnectionPendingSendBytesThresholdDefault' Opts.ConnectionQueueSizeThresholdDefault'  				Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,ClusterSettingsFactory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\ClusterSettingsFactory.cs,CreateVNode,The following statement contains a magic number: var vnode = new ClusterVNodeSettings(Guid.NewGuid()' 0'  				GetLoopbackForPort(tcpIntPort)' null'  				GetLoopbackForPort(tcpExtPort)' null'  				GetLoopbackForPort(httpIntPort)' GetLoopbackForPort(httpExtPort)'  				new Data.GossipAdvertiseInfo(GetLoopbackForPort(tcpIntPort)' null'  					GetLoopbackForPort(tcpExtPort)' null'  					GetLoopbackForPort(httpIntPort)'  					GetLoopbackForPort(httpExtPort)'  					null' null' 0' 0)'  				new[] {GetLoopbackForPort(httpIntPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				new[] {GetLoopbackForPort(httpExtPort).ToHttpUrl(EndpointExtensions.HTTP_SCHEMA)}'  				false' null' 1' false' "dns"' new[] {GetLoopbackForPort(ManagerPort)}'  				TFConsts.MinFlushDelayMs' 3' 2' 2' TimeSpan.FromSeconds(2)'  				TimeSpan.FromSeconds(2)' false' false' null' false' TimeSpan.FromHours(1)'  				StatsStorage.StreamAndFile' 0' new InternalAuthenticationProviderFactory()' false' 30' true' true' true'  				TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)'  				TimeSpan.FromSeconds(10)' true' Opts.MaxMemtableSizeDefault' Opts.HashCollisionReadLimitDefault' false'  				false' false'  				Opts.ConnectionPendingSendBytesThresholdDefault' Opts.ConnectionQueueSizeThresholdDefault'  				Opts.ChunkInitialReaderCountDefault);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,elections_service_should_stuck_with_single_node_response,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\no_quorum_cases.cs,SetUp,The following statement contains a magic number: var clusterSettings = clusterSettingsFactory.GetClusterSettings(1' 3);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,elections_service_should_stuck_with_single_node_response_2_iterations,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\no_quorum_cases.cs,SetUp,The following statement contains a magic number: var clusterSettings = clusterSettingsFactory.GetClusterSettings(1' 3);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,elections_service_should_stuck_with_single_alive_node,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\no_quorum_cases.cs,SetUp,The following statement contains a magic number: var clusterSettings = clusterSettingsFactory.GetClusterSettings(1' 3);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,elections_service_should_stuck_with_single_alive_node,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\no_quorum_cases.cs,SetUp,The following statement contains a magic number: _electionsUnit.UpdateClusterMemberInfo(2' isAlive: false);
Magic Number,EventStore.Core.Tests.Services.ElectionsService,elections_service_should_stuck_with_single_alive_node,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\no_quorum_cases.cs,SetUp,The following statement contains a magic number: _electionsUnit.UpdateClusterMemberInfo(3' isAlive: false);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,ElectionsProgressCondition,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\ElectionsProgressCondition.cs,ElectionsProgressCondition,The following statement contains a magic number: _majorityCount = instancesCount / 2 + 1;
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_3_nodes_full_gossip_no_http_loss_no_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_3_nodes_full_gossip_no_http_loss_no_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 3'  				httpLossProbability: 0.0'  				httpDupProbability: 0.0'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_3_nodes_full_gossip_no_http_loss_no_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_3_nodes_full_gossip_no_http_loss_no_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 3'  				httpLossProbability: 0.0'  				httpDupProbability: 0.0'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_3_nodes_full_gossip_no_http_loss_no_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_3_nodes_full_gossip_no_http_loss_no_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 3'  				httpLossProbability: 0.0'  				httpDupProbability: 0.0'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_3_nodes_full_gossip_no_http_loss_no_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_3_nodes_full_gossip_no_http_loss_no_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 3'  				httpLossProbability: 0.0'  				httpDupProbability: 0.0'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_3_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_3_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 3'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_3_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_3_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 3'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_3_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_3_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 3'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_3_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_3_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 3'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_3_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_3_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 3'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_3_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_3_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 3'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_no_http_loss_no_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_no_http_loss_no_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 6'  				httpLossProbability: 0.0'  				httpDupProbability: 0.0'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_no_http_loss_no_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_no_http_loss_no_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 6'  				httpLossProbability: 0.0'  				httpDupProbability: 0.0'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_no_http_loss_no_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_no_http_loss_no_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 6'  				httpLossProbability: 0.0'  				httpDupProbability: 0.0'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_no_http_loss_no_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_no_http_loss_no_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 6'  				httpLossProbability: 0.0'  				httpDupProbability: 0.0'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 4'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 4'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 4'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 4'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 4'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 4'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_some_http_loss_some_dup_rndseed_20676840,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_some_http_loss_some_dup_rndseed_20676840.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 4'  				httpLossProbability: 0.5'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				rndSeed: 20676840);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_some_http_loss_some_dup_rndseed_20676840,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_some_http_loss_some_dup_rndseed_20676840.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 4'  				httpLossProbability: 0.5'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				rndSeed: 20676840);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_some_http_loss_some_dup_rndseed_20676840,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_some_http_loss_some_dup_rndseed_20676840.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 4'  				httpLossProbability: 0.5'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				rndSeed: 20676840);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_some_http_loss_some_dup_rndseed_20676840,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_some_http_loss_some_dup_rndseed_20676840.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 4'  				httpLossProbability: 0.5'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				rndSeed: 20676840);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_some_http_loss_some_dup_rndseed_20676840,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_some_http_loss_some_dup_rndseed_20676840.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 4'  				httpLossProbability: 0.5'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				rndSeed: 20676840);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_some_http_loss_some_dup_rndseed_20676840,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_some_http_loss_some_dup_rndseed_20676840.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 4'  				httpLossProbability: 0.5'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				rndSeed: 20676840);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_4_nodes_full_gossip_some_http_loss_some_dup_rndseed_20676840,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_4_nodes_full_gossip_some_http_loss_some_dup_rndseed_20676840.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 4'  				httpLossProbability: 0.5'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				rndSeed: 20676840);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_full_gossip_no_http_loss_no_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_full_gossip_no_http_loss_no_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.0'  				httpDupProbability: 0.0'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_full_gossip_no_http_loss_no_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_full_gossip_no_http_loss_no_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.0'  				httpDupProbability: 0.0'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_full_gossip_no_http_loss_no_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_full_gossip_no_http_loss_no_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.0'  				httpDupProbability: 0.0'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_full_gossip_no_http_loss_no_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_full_gossip_no_http_loss_no_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.0'  				httpDupProbability: 0.0'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_full_gossip_some_http_loss_some_dup,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_full_gossip_some_http_loss_some_dup.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsAndGossipTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				createInitialGossip: CreateInitialGossip'  				createUpdatedGossip: CreateUpdatedGossip  			);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsAndGossipTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				createInitialGossip: CreateInitialGossip'  				createUpdatedGossip: CreateUpdatedGossip  			);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsAndGossipTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				createInitialGossip: CreateInitialGossip'  				createUpdatedGossip: CreateUpdatedGossip  			);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsAndGossipTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				createInitialGossip: CreateInitialGossip'  				createUpdatedGossip: CreateUpdatedGossip  			);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsAndGossipTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				createInitialGossip: CreateInitialGossip'  				createUpdatedGossip: CreateUpdatedGossip  			);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsAndGossipTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				createInitialGossip: CreateInitialGossip'  				createUpdatedGossip: CreateUpdatedGossip  			);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_full_imediately.cs,CreateUpdatedGossip,The following statement contains a magic number: previousGossip[item.EndPoint].Length < 5
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsAndGossipTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				createInitialGossip: CreateInitialGossip'  				createUpdatedGossip: CreateUpdatedGossip  			);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsAndGossipTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				createInitialGossip: CreateInitialGossip'  				createUpdatedGossip: CreateUpdatedGossip  			);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsAndGossipTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				createInitialGossip: CreateInitialGossip'  				createUpdatedGossip: CreateUpdatedGossip  			);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsAndGossipTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				createInitialGossip: CreateInitialGossip'  				createUpdatedGossip: CreateUpdatedGossip  			);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsAndGossipTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				createInitialGossip: CreateInitialGossip'  				createUpdatedGossip: CreateUpdatedGossip  			);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later.cs,SetUp,The following statement contains a magic number: _randomCase = new RandomizedElectionsAndGossipTestCase(ElectionParams.MaxIterationCount'  				instancesCnt: 5'  				httpLossProbability: 0.3'  				httpDupProbability: 0.3'  				httpMaxDelay: 20'  				timerMinDelay: 100'  				timerMaxDelay: 200'  				createInitialGossip: CreateInitialGossip'  				createUpdatedGossip: CreateUpdatedGossip  			);
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later.cs,CreateUpdatedGossip,The following statement contains a magic number: iteration == 1 || (iteration % 100 != (item.EndPoint.Port % 1000) && _randomCase.Next(100) < 30)
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later.cs,CreateUpdatedGossip,The following statement contains a magic number: iteration == 1 || (iteration % 100 != (item.EndPoint.Port % 1000) && _randomCase.Next(100) < 30)
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later.cs,CreateUpdatedGossip,The following statement contains a magic number: iteration == 1 || (iteration % 100 != (item.EndPoint.Port % 1000) && _randomCase.Next(100) < 30)
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later.cs,CreateUpdatedGossip,The following statement contains a magic number: iteration == 1 || (iteration % 100 != (item.EndPoint.Port % 1000) && _randomCase.Next(100) < 30)
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\elections_service_5_nodes_with_1_known_when_started_and_set_to_full_later.cs,CreateUpdatedGossip,The following statement contains a magic number: previousGossip[item.EndPoint].Length < 5
Magic Number,EventStore.Core.Tests.Services.ElectionsService.Randomized,RandomizedElectionsAndGossipTestCase,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\ElectionsService\Randomized\RandomizedElectionsAndGossipTestCase.cs,Enqueue,The following statement contains a magic number: Runner.Enqueue(item.EndPoint' message' item.Bus' 10);
Magic Number,EventStore.Core.Tests.Services.Monitoring,IoParserTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Monitoring\StatsParserTests.cs,bad_io_crashes,The following statement contains a magic number: var badIoStr = ioStr.Remove(5' 20);
Magic Number,EventStore.Core.Tests.Services.Monitoring,IoParserTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Monitoring\StatsParserTests.cs,bad_io_crashes,The following statement contains a magic number: var badIoStr = ioStr.Remove(5' 20);
Magic Number,EventStore.Core.Tests.Services.Monitoring,IoParserTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Monitoring\StatsParserTests.cs,read_bytes_parses_ok,The following statement contains a magic number: Assert.That(io.ReadBytes' Is.EqualTo(13824000));
Magic Number,EventStore.Core.Tests.Services.Monitoring,IoParserTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Monitoring\StatsParserTests.cs,write_bytes_parses_ok,The following statement contains a magic number: Assert.That(io.WrittenBytes' Is.EqualTo(188416));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,lowest_works_on_add,The following statement contains a magic number: cache.StartMessage(new OutstandingMessage(id' null' Helper.BuildFakeEvent(id' "type"' "name"' 10)' 0)'  				DateTime.Now);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,lowest_works_on_add,The following statement contains a magic number: Assert.AreEqual(10' cache.GetLowestPosition());
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,lowest_works_on_adds_then_remove,The following statement contains a magic number: cache.StartMessage(new OutstandingMessage(id' null' Helper.BuildFakeEvent(id' "type"' "name"' 10)' 0)'  				DateTime.Now);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,lowest_works_on_adds_then_remove,The following statement contains a magic number: cache.StartMessage(new OutstandingMessage(id2' null' Helper.BuildFakeEvent(id2' "type"' "name"' 11)' 0)'  				DateTime.Now);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,lowest_works_on_adds_then_remove,The following statement contains a magic number: cache.StartMessage(new OutstandingMessage(id3' null' Helper.BuildFakeEvent(id3' "type"' "name"' 12)' 0)'  				DateTime.Now);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,lowest_works_on_adds_then_remove,The following statement contains a magic number: Assert.AreEqual(11' cache.GetLowestPosition());
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,lowest_ignores_replayed_events,The following statement contains a magic number: cache.StartMessage(new OutstandingMessage(id1' null' Helper.BuildFakeEvent(id1' "type"' "name"' 10)' 0)'  				DateTime.Now);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,lowest_ignores_replayed_events,The following statement contains a magic number: cache.StartMessage(new OutstandingMessage(id2' null' Helper.BuildFakeEvent(id2' "type"' "$persistentsubscription-name::group-parked"' 9)' 0)'  				DateTime.Now);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,lowest_ignores_replayed_events,The following statement contains a magic number: Assert.AreEqual(10' cache.GetLowestPosition());
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,message_that_is_removed_does_not_show_up_in_expired_list,The following statement contains a magic number: cache.StartMessage(  				new OutstandingMessage(id' null' Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "name"' 1)' 0)'  				DateTime.Now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,can_remove_non_first_message_and_have_removed_from_time,The following statement contains a magic number: cache.StartMessage(  				new OutstandingMessage(id1' null' Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "name"' 1)' 0)'  				DateTime.Now.AddSeconds(-12));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,can_remove_non_first_message_and_have_removed_from_time,The following statement contains a magic number: cache.StartMessage(  				new OutstandingMessage(id2' null' Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "name"' 2)' 0)'  				DateTime.Now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,can_remove_non_first_message_and_have_removed_from_time,The following statement contains a magic number: cache.StartMessage(  				new OutstandingMessage(id2' null' Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "name"' 2)' 0)'  				DateTime.Now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,can_add_multiple_messages_same_time_different_ids,The following statement contains a magic number: var time = DateTime.Now.AddSeconds(-12);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,can_add_multiple_messages_same_time_different_ids,The following statement contains a magic number: cache.StartMessage(  				new OutstandingMessage(id2' null' Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "name"' 2)' 0)' time);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,can_add_multiple_messages_same_time_different_ids,The following statement contains a magic number: Assert.AreEqual(2' expired.Count());
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,can_remove_second_message_same_time_different_ids,The following statement contains a magic number: var time = DateTime.Now.AddSeconds(-12);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,OutstandingMessageCacheTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\OutstandingMessageCacheTests.cs,can_remove_second_message_same_time_different_ids,The following statement contains a magic number: cache.StartMessage(  				new OutstandingMessage(id2' null' Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "name"' 2)' 0)' time);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,live_subscription_pushes_events_to_client,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,live_subscription_with_round_robin_two_pushes_events_to_both,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,live_subscription_with_round_robin_two_pushes_events_to_both,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' envelope2' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,live_subscription_with_prefer_one_and_two_pushes_events_to_both,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,live_subscription_with_prefer_one_and_two_pushes_events_to_both,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' envelope2' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,live_subscription_with_prefer_one_and_two_pushes_events_to_both,The following statement contains a magic number: Assert.AreEqual(2' envelope1.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_pull_sends_data_to_client,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_pull_does_not_crash_if_not_ready_yet,The following statement contains a magic number: Assert.DoesNotThrow(() => {  				sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");  				sub.HandleReadCompleted(new[] {Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 0)}' 1'  					false);  			});
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_live_data_does_not_crash_if_not_ready_yet,The following statement contains a magic number: Assert.DoesNotThrow(() => {  				sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");  				sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 0));  			});
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_pull_and_round_robin_set_and_two_clients_sends_data_to_client,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_pull_and_round_robin_set_and_two_clients_sends_data_to_client,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' envelope2' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_pull_and_prefer_one_set_and_two_clients_sends_data_to_one_client,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_pull_and_prefer_one_set_and_two_clients_sends_data_to_one_client,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' envelope2' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_pull_and_prefer_one_set_and_two_clients_sends_data_to_one_client,The following statement contains a magic number: Assert.AreEqual(2' envelope1.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,when_reading_end_of_stream_and_a_live_event_is_received_subscription_should_read_stream_again,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(  						(stream' startEventNumber' countToLoad' batchSize' resolveLinkTos' onEventsFound) => {  							List<ResolvedEvent> events = new List<ResolvedEvent>();  							int nextEventNumber;  							bool isEndOfStream;    							if (startEventNumber == 1) {  								//Existing events: #1' #2  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 1));  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 2));  								nextEventNumber = 3;  								isEndOfStream = true;  							} else if (startEventNumber == 3) {  								//New live event: #3  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 3));  								nextEventNumber = 4;  								isEndOfStream = true;  							} else {  								throw new Exception("Invalid start event number: " + startEventNumber);  							}    							Task.Delay(100).ContinueWith((action) => {  								onEventsFound(events.ToArray()' nextEventNumber' isEndOfStream);  							});  						}))  					.WithCheckpointReader(checkpointReader)  					.WithCheckpointWriter(new FakeCheckpointWriter(x => { }))  					.WithMessageParker(new FakeMessageParker())  					.StartFromBeginning());
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,when_reading_end_of_stream_and_a_live_event_is_received_subscription_should_read_stream_again,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(  						(stream' startEventNumber' countToLoad' batchSize' resolveLinkTos' onEventsFound) => {  							List<ResolvedEvent> events = new List<ResolvedEvent>();  							int nextEventNumber;  							bool isEndOfStream;    							if (startEventNumber == 1) {  								//Existing events: #1' #2  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 1));  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 2));  								nextEventNumber = 3;  								isEndOfStream = true;  							} else if (startEventNumber == 3) {  								//New live event: #3  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 3));  								nextEventNumber = 4;  								isEndOfStream = true;  							} else {  								throw new Exception("Invalid start event number: " + startEventNumber);  							}    							Task.Delay(100).ContinueWith((action) => {  								onEventsFound(events.ToArray()' nextEventNumber' isEndOfStream);  							});  						}))  					.WithCheckpointReader(checkpointReader)  					.WithCheckpointWriter(new FakeCheckpointWriter(x => { }))  					.WithMessageParker(new FakeMessageParker())  					.StartFromBeginning());
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,when_reading_end_of_stream_and_a_live_event_is_received_subscription_should_read_stream_again,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(  						(stream' startEventNumber' countToLoad' batchSize' resolveLinkTos' onEventsFound) => {  							List<ResolvedEvent> events = new List<ResolvedEvent>();  							int nextEventNumber;  							bool isEndOfStream;    							if (startEventNumber == 1) {  								//Existing events: #1' #2  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 1));  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 2));  								nextEventNumber = 3;  								isEndOfStream = true;  							} else if (startEventNumber == 3) {  								//New live event: #3  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 3));  								nextEventNumber = 4;  								isEndOfStream = true;  							} else {  								throw new Exception("Invalid start event number: " + startEventNumber);  							}    							Task.Delay(100).ContinueWith((action) => {  								onEventsFound(events.ToArray()' nextEventNumber' isEndOfStream);  							});  						}))  					.WithCheckpointReader(checkpointReader)  					.WithCheckpointWriter(new FakeCheckpointWriter(x => { }))  					.WithMessageParker(new FakeMessageParker())  					.StartFromBeginning());
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,when_reading_end_of_stream_and_a_live_event_is_received_subscription_should_read_stream_again,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(  						(stream' startEventNumber' countToLoad' batchSize' resolveLinkTos' onEventsFound) => {  							List<ResolvedEvent> events = new List<ResolvedEvent>();  							int nextEventNumber;  							bool isEndOfStream;    							if (startEventNumber == 1) {  								//Existing events: #1' #2  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 1));  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 2));  								nextEventNumber = 3;  								isEndOfStream = true;  							} else if (startEventNumber == 3) {  								//New live event: #3  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 3));  								nextEventNumber = 4;  								isEndOfStream = true;  							} else {  								throw new Exception("Invalid start event number: " + startEventNumber);  							}    							Task.Delay(100).ContinueWith((action) => {  								onEventsFound(events.ToArray()' nextEventNumber' isEndOfStream);  							});  						}))  					.WithCheckpointReader(checkpointReader)  					.WithCheckpointWriter(new FakeCheckpointWriter(x => { }))  					.WithMessageParker(new FakeMessageParker())  					.StartFromBeginning());
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,when_reading_end_of_stream_and_a_live_event_is_received_subscription_should_read_stream_again,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(  						(stream' startEventNumber' countToLoad' batchSize' resolveLinkTos' onEventsFound) => {  							List<ResolvedEvent> events = new List<ResolvedEvent>();  							int nextEventNumber;  							bool isEndOfStream;    							if (startEventNumber == 1) {  								//Existing events: #1' #2  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 1));  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 2));  								nextEventNumber = 3;  								isEndOfStream = true;  							} else if (startEventNumber == 3) {  								//New live event: #3  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 3));  								nextEventNumber = 4;  								isEndOfStream = true;  							} else {  								throw new Exception("Invalid start event number: " + startEventNumber);  							}    							Task.Delay(100).ContinueWith((action) => {  								onEventsFound(events.ToArray()' nextEventNumber' isEndOfStream);  							});  						}))  					.WithCheckpointReader(checkpointReader)  					.WithCheckpointWriter(new FakeCheckpointWriter(x => { }))  					.WithMessageParker(new FakeMessageParker())  					.StartFromBeginning());
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,when_reading_end_of_stream_and_a_live_event_is_received_subscription_should_read_stream_again,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(  						(stream' startEventNumber' countToLoad' batchSize' resolveLinkTos' onEventsFound) => {  							List<ResolvedEvent> events = new List<ResolvedEvent>();  							int nextEventNumber;  							bool isEndOfStream;    							if (startEventNumber == 1) {  								//Existing events: #1' #2  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 1));  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 2));  								nextEventNumber = 3;  								isEndOfStream = true;  							} else if (startEventNumber == 3) {  								//New live event: #3  								events.Add(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' stream' 3));  								nextEventNumber = 4;  								isEndOfStream = true;  							} else {  								throw new Exception("Invalid start event number: " + startEventNumber);  							}    							Task.Delay(100).ContinueWith((action) => {  								onEventsFound(events.ToArray()' nextEventNumber' isEndOfStream);  							});  						}))  					.WithCheckpointReader(checkpointReader)  					.WithCheckpointWriter(new FakeCheckpointWriter(x => { }))  					.WithMessageParker(new FakeMessageParker())  					.StartFromBeginning());
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,when_reading_end_of_stream_and_a_live_event_is_received_subscription_should_read_stream_again,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 3));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,when_reading_end_of_stream_and_a_live_event_is_received_subscription_should_read_stream_again,The following statement contains a magic number: await Task.Delay(500).ContinueWith((action) => {  				//add a subscriber  				sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope' 10' "foo"' "bar");    				//all 3 events should be received by the subscriber  				Assert.AreEqual(3' envelope.Replies.Count);  			});
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,when_reading_end_of_stream_and_a_live_event_is_received_subscription_should_read_stream_again,The following statement contains a magic number: await Task.Delay(500).ContinueWith((action) => {  				//add a subscriber  				sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope' 10' "foo"' "bar");    				//all 3 events should be received by the subscriber  				Assert.AreEqual(3' envelope.Replies.Count);  			});
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LiveTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,when_reading_end_of_stream_and_a_live_event_is_received_subscription_should_read_stream_again,The following statement contains a magic number: await Task.Delay(500).ContinueWith((action) => {  				//add a subscriber  				sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope' 10' "foo"' "bar");    				//all 3 events should be received by the subscriber  				Assert.AreEqual(3' envelope.Replies.Count);  			});
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,SynchronousReadingClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_less_than_n_events_returns_less_events_to_the_client,The following statement contains a magic number: var result = sub.GetNextNOrLessMessages(5).ToArray();
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,SynchronousReadingClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_less_than_n_events_returns_less_events_to_the_client,The following statement contains a magic number: Assert.AreEqual(2' result.Length);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,SynchronousReadingClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_n_events_returns_n_events_to_the_client,The following statement contains a magic number: var result = sub.GetNextNOrLessMessages(2).ToArray();
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,SynchronousReadingClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_n_events_returns_n_events_to_the_client,The following statement contains a magic number: Assert.AreEqual(2' result.Length);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,SynchronousReadingClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_more_than_n_events_returns_n_events_to_the_client,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id1' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(id2' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(id3' "type"' "streamName"' 2)'  				Helper.BuildFakeEvent(id4' "type"' "streamName"' 3)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,SynchronousReadingClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_more_than_n_events_returns_n_events_to_the_client,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id1' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(id2' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(id3' "type"' "streamName"' 2)'  				Helper.BuildFakeEvent(id4' "type"' "streamName"' 3)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,SynchronousReadingClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_more_than_n_events_returns_n_events_to_the_client,The following statement contains a magic number: var result = sub.GetNextNOrLessMessages(2).ToArray();
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,SynchronousReadingClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_more_than_n_events_returns_n_events_to_the_client,The following statement contains a magic number: Assert.AreEqual(2' result.Length);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,SynchronousReadingClient,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_with_no_events_returns_no_events_to_the_client,The following statement contains a magic number: var result = sub.GetNextNOrLessMessages(5);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_write_checkpoint_when_max_not_hit,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(x => { }))  					.WithCheckpointReader(reader)  					.WithCheckpointWriter(new FakeCheckpointWriter(i => cp = i))  					.WithMessageParker(new FakeMessageParker())  					.PreferDispatchToSingle()  					.StartFromBeginning()  					.MinimumToCheckPoint(5)  					.MaximumToCheckPoint(20));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_write_checkpoint_when_max_not_hit,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(x => { }))  					.WithCheckpointReader(reader)  					.WithCheckpointWriter(new FakeCheckpointWriter(i => cp = i))  					.WithMessageParker(new FakeMessageParker())  					.PreferDispatchToSingle()  					.StartFromBeginning()  					.MinimumToCheckPoint(5)  					.MaximumToCheckPoint(20));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_write_checkpoint_when_max_not_hit,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_write_checkpoint_when_max_not_hit,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_write_checkpoint_when_min_hit,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(x => { }))  					.WithCheckpointReader(reader)  					.WithCheckpointWriter(new FakeCheckpointWriter(i => cp = i))  					.WithMessageParker(new FakeMessageParker())  					.PreferDispatchToSingle()  					.StartFromBeginning()  					.MinimumToCheckPoint(1)  					.MaximumToCheckPoint(20));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_write_checkpoint_when_min_hit,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_write_checkpoint_when_min_hit,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_write_checkpoint_when_max_is_hit,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_write_checkpoint_when_max_is_hit,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_write_checkpoint_when_max_is_hit,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id1' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(id2' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 2)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_include_outstanding_messages_when_max_is_hit,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_include_outstanding_messages_when_max_is_hit,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_include_outstanding_messages_when_max_is_hit,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id1' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(id2' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 2)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 3)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_include_outstanding_messages_when_max_is_hit,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id1' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(id2' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 2)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 3)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_can_write_checkpoint_for_event_number_0,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_can_write_checkpoint_for_event_number_0,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_can_write_checkpoint_for_event_number_0,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 2)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 3)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_can_write_checkpoint_for_event_number_0,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 2)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 3)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_checkpoints_when_message_parked_and_max_is_hit,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_checkpoints_when_message_parked_and_max_is_hit,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_checkpoints_when_message_parked_and_max_is_hit,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id1' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(id2' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(id3' "type"' "streamName"' 2)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 3)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_checkpoints_when_message_parked_and_max_is_hit,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id1' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(id2' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(id3' "type"' "streamName"' 2)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 3)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_checkpoints_when_message_parked_and_max_is_hit,The following statement contains a magic number: Assert.AreEqual(2' cp);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_include_retry_messages_when_max_is_hit,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_include_retry_messages_when_max_is_hit,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_include_retry_messages_when_max_is_hit,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id1' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(id2' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(id3' "type"' "streamName"' 2)'  				Helper.BuildFakeEvent(id4' "type"' "streamName"' 3)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_include_retry_messages_when_max_is_hit,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id1' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(id2' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(id3' "type"' "streamName"' 2)'  				Helper.BuildFakeEvent(id4' "type"' "streamName"' 3)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_include_all_messages_when_no_retries_or_outstanding_and_max_is_hit,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_include_all_messages_when_no_retries_or_outstanding_and_max_is_hit,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_include_all_messages_when_no_retries_or_outstanding_and_max_is_hit,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id1' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(id2' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(id3' "type"' "streamName"' 2)'  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_include_all_messages_when_no_retries_or_outstanding_and_max_is_hit,The following statement contains a magic number: Assert.AreEqual(2' cp);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_write_checkpoint_on_time_when_min_is_hit,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(x => { }))  					.WithCheckpointReader(reader)  					.WithCheckpointWriter(new FakeCheckpointWriter(i => cp = i))  					.PreferDispatchToSingle()  					.WithMessageParker(new FakeMessageParker())  					.StartFromBeginning()  					.MinimumToCheckPoint(1)  					.MaximumToCheckPoint(5));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_write_checkpoint_on_time_when_min_is_hit,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_write_checkpoint_on_time_when_min_is_hit,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_write_checkpoint_on_time_when_min_is_hit,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id1' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(id2' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 2)'  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_write_checkpoint_on_time_when_min_is_not_hit,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(x => { }))  					.WithCheckpointReader(reader)  					.WithCheckpointWriter(new FakeCheckpointWriter(i => cp = i))  					.WithMessageParker(new FakeMessageParker())  					.PreferDispatchToSingle()  					.StartFromBeginning()  					.MinimumToCheckPoint(2)  					.MaximumToCheckPoint(5));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_write_checkpoint_on_time_when_min_is_not_hit,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(x => { }))  					.WithCheckpointReader(reader)  					.WithCheckpointWriter(new FakeCheckpointWriter(i => cp = i))  					.WithMessageParker(new FakeMessageParker())  					.PreferDispatchToSingle()  					.StartFromBeginning()  					.MinimumToCheckPoint(2)  					.MaximumToCheckPoint(5));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_write_checkpoint_on_time_when_min_is_not_hit,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_write_checkpoint_on_time_when_min_is_not_hit,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_not_write_checkpoint_on_time_when_min_is_not_hit,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id1' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(id2' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 2)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_write_checkpoint_for_disconnected_clients_on_time_when_min_is_hit,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(x => { }))  					.WithCheckpointReader(reader)  					.WithCheckpointWriter(new FakeCheckpointWriter(i => cp = i))  					.WithMessageParker(new FakeMessageParker())  					.StartFromBeginning()  					.MinimumToCheckPoint(1)  					.MaximumToCheckPoint(5));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_does_write_checkpoint_for_disconnected_clients_on_time_when_min_is_hit,The following statement contains a magic number: sub.GetNextNOrLessMessages(2).ToArray();
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_writes_correct_checkpoint_when_outstanding_messages_is_empty_and_retry_buffer_is_non_empty,The following statement contains a magic number: sub.AddClient(clientCorrelationId' clientConnectionId' "connection-1"' new FakeEnvelope()' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_writes_correct_checkpoint_when_outstanding_messages_is_empty_and_retry_buffer_is_non_empty,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(eventId1' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(eventId2' "type"' "streamName"' 2)'  				Helper.BuildFakeEvent(eventId3' "type"' "streamName"' 3)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_writes_correct_checkpoint_when_outstanding_messages_is_empty_and_retry_buffer_is_non_empty,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(eventId1' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(eventId2' "type"' "streamName"' 2)'  				Helper.BuildFakeEvent(eventId3' "type"' "streamName"' 3)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_writes_correct_checkpoint_when_outstanding_messages_is_empty_and_retry_buffer_is_non_empty,The following statement contains a magic number: sub.GetNextNOrLessMessages(3).ToArray();
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_writes_correct_checkpoint_when_outstanding_messages_is_empty_and_retry_buffer_is_non_empty,The following statement contains a magic number: Assert.AreEqual(sub.OutstandingMessageCount' 2);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_writes_correct_checkpoint_when_outstanding_messages_is_empty_and_retry_buffer_is_non_empty,The following statement contains a magic number: Assert.AreEqual(sub._streamBuffer.RetryBufferCount' 2);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_ignores_replayed_events_when_checkpointing,The following statement contains a magic number: sub.AddClient(clientCorrelationId' clientConnectionId' "connection-1"' new FakeEnvelope()' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_ignores_replayed_events_when_checkpointing,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(readEventId' "type"' "streamName"' 10)'  			}' 11' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_ignores_replayed_events_when_checkpointing,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(readEventId' "type"' "streamName"' 10)'  			}' 11' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_ignores_replayed_events_when_checkpointing,The following statement contains a magic number: Assert.AreEqual(10' cp);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_ignores_replayed_events_when_checkpointing,The following statement contains a magic number: var parkedEvent = Helper.BuildFakeEvent(parkedEventId' "type"' "$persistentsubscription-streamName::groupName-parked"' 15);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_ignores_replayed_events_when_checkpointing,The following statement contains a magic number: sub.HandleParkedReadCompleted(new[] {  				parkedEvent'  			}'16'true'17);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_ignores_replayed_events_when_checkpointing,The following statement contains a magic number: sub.HandleParkedReadCompleted(new[] {  				parkedEvent'  			}'16'true'17);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_ignores_replayed_events_when_checkpointing,The following statement contains a magic number: Assert.AreEqual(10' cp);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_ignores_replayed_events_when_checkpointing,The following statement contains a magic number: Assert.AreEqual(10' cp);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Checkpointing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,subscription_ignores_replayed_events_when_checkpointing,The following statement contains a magic number: Assert.AreEqual(10' cp);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LoadCheckpointTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,loading_subscription_from_checkpoint_should_read_from_the_next_event_number,The following statement contains a magic number: Assert.AreEqual(2' lastReadEvent);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LoadCheckpointTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,loading_subscription_from_no_checkpoint_and_start_from_is_set_should_read_from__start_from,The following statement contains a magic number: new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(streamReader)  					.WithCheckpointReader(reader)  					.WithCheckpointWriter(new FakeCheckpointWriter(x => { }))  					.WithMessageParker(new FakeMessageParker())  					.PreferDispatchToSingle()  					.StartFrom(10)  					.MaximumToCheckPoint(1));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,LoadCheckpointTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,loading_subscription_from_no_checkpoint_and_start_from_is_set_should_read_from__start_from,The following statement contains a magic number: Assert.AreEqual(10' lastReadEvent);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,with_no_timeouts_to_happen_no_timeouts_happen,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(x => { }))  					.WithCheckpointReader(reader)  					.WithCheckpointWriter(new FakeCheckpointWriter(i => { }))  					.WithMessageParker(parker)  					.PreferDispatchToSingle()  					.StartFromBeginning()  					.WithMessageTimeoutOf(TimeSpan.FromSeconds(3)));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,with_no_timeouts_to_happen_no_timeouts_happen,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,messages_get_timed_out_and_resent_to_clients,The following statement contains a magic number: sub.NotifyClockTick(DateTime.UtcNow.AddSeconds(3));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,messages_get_timed_out_and_resent_to_clients,The following statement contains a magic number: Assert.AreEqual(2' envelope1.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,messages_get_timed_out_on_synchronous_reads,The following statement contains a magic number: sub.GetNextNOrLessMessages(2);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,messages_get_timed_out_on_synchronous_reads,The following statement contains a magic number: sub.NotifyClockTick(DateTime.Now.AddSeconds(3));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,messages_get_timed_out_on_synchronous_reads,The following statement contains a magic number: var retries = sub.GetNextNOrLessMessages(2).ToArray();
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,messages_dont_get_retried_when_acked_on_synchronous_reads,The following statement contains a magic number: sub.GetNextNOrLessMessages(2).ToArray();
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,messages_dont_get_retried_when_acked_on_synchronous_reads,The following statement contains a magic number: sub.NotifyClockTick(DateTime.Now.AddSeconds(3));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,messages_dont_get_retried_when_acked_on_synchronous_reads,The following statement contains a magic number: var retries = sub.GetNextNOrLessMessages(2).ToArray();
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,message_gets_timed_out_and_parked_after_max_retry_count,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,message_gets_timed_out_and_parked_after_max_retry_count,The following statement contains a magic number: sub.NotifyClockTick(DateTime.UtcNow.AddSeconds(3));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,multiple_messages_get_timed_out_and_parked_after_max_retry_count,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,multiple_messages_get_timed_out_and_parked_after_max_retry_count,The following statement contains a magic number: sub.NotifyClockTick(DateTime.UtcNow.AddSeconds(3));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,multiple_messages_get_timed_out_and_parked_after_max_retry_count,The following statement contains a magic number: Assert.AreEqual(2' parker.ParkedEvents.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,timeout_park_correctly_tracks_the_available_client_slots,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope1' 2' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,timeout_park_correctly_tracks_the_available_client_slots,The following statement contains a magic number: Assert.AreEqual(2' envelope1.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,timeout_park_correctly_tracks_the_available_client_slots,The following statement contains a magic number: Assert.AreEqual(2' parker.ParkedEvents.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,timeout_park_correctly_tracks_the_available_client_slots,The following statement contains a magic number: Assert.AreEqual(4' envelope1.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,TimeoutTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,disable_timeout_doesnt_timeout,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,NAKTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,explicit_nak_with_park_parks_the_message,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,NAKTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,explicit_nak_with_skip_skips_the_message,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,NAKTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,explicit_nak_with_default_retries_the_message,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,NAKTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,explicit_nak_with_retry_retries_the_message,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,NAKTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,explicit_nak_with_retry_correctly_tracks_the_available_client_slots,The following statement contains a magic number: var sub = new Core.Services.PersistentSubscription.PersistentSubscription(  				PersistentSubscriptionParamsBuilder.CreateFor("streamName"' "groupName")  					.WithEventLoader(new FakeStreamReader(x => { }))  					.WithCheckpointReader(reader)  					.WithCheckpointWriter(new FakeCheckpointWriter(i => { }))  					.WithMaxRetriesOf(10)  					.WithMessageParker(parker)  					.StartFromBeginning());
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,NAKTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,explicit_nak_with_retry_correctly_tracks_the_available_client_slots,The following statement contains a magic number: sub.AddClient(corrid' Guid.NewGuid()' "connection-1"' envelope1' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,NAKTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,explicit_nak_with_retry_correctly_tracks_the_available_client_slots,The following statement contains a magic number: i < 11
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,NAKTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,explicit_nak_with_retry_correctly_tracks_the_available_client_slots,The following statement contains a magic number: Assert.AreEqual(11' envelope1.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,NAKTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,explicit_nak_with_park_correctly_tracks_the_available_client_slots,The following statement contains a magic number: sub.HandleReadCompleted(new[] {  				Helper.BuildFakeEvent(id1' "type"' "streamName"' 0)'  				Helper.BuildFakeEvent(id2' "type"' "streamName"' 1)'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName"' 2)  			}' 1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,NAKTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,explicit_nak_with_park_correctly_tracks_the_available_client_slots,The following statement contains a magic number: Assert.AreEqual(2' envelope1.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,NAKTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,explicit_nak_with_park_correctly_tracks_the_available_client_slots,The following statement contains a magic number: Assert.AreEqual(3' envelope1.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,RemoveClientTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,unsubscribing_a_client_retries_inflight_messages_immediately,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' client1Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,RemoveClientTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,unsubscribing_a_client_retries_inflight_messages_immediately,The following statement contains a magic number: sub.AddClient(client2Id' Guid.NewGuid()' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,RemoveClientTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,unsubscribing_a_client_retries_inflight_messages_immediately,The following statement contains a magic number: Assert.AreEqual(2' sub.ClientCount);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,RemoveClientTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,unsubscribing_a_client_retries_inflight_messages_immediately,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,RemoveClientTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,disconnecting_a_client_retries_inflight_messages_immediately,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' client1Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,RemoveClientTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,disconnecting_a_client_retries_inflight_messages_immediately,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' connectionId' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,RemoveClientTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,disconnecting_a_client_retries_inflight_messages_immediately,The following statement contains a magic number: Assert.AreEqual(2' sub.ClientCount);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,RemoveClientTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,disconnecting_a_client_retries_inflight_messages_immediately,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,ParkTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,retrying_parked_messages_with_empty_stream_should_allow_retrying_parked_messages_again,The following statement contains a magic number: Assert.AreEqual(2' parker.BeginReadEndSequenceCount);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,DeadlockTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,read_whilst_ack_doesnt_deadlock_with_request_response_dispatcher,The following statement contains a magic number: const int count = 5000;
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,DeadlockTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,read_whilst_ack_doesnt_deadlock_with_request_response_dispatcher,The following statement contains a magic number: Assert.IsTrue(manualResetEventSlim.Wait(TimeSpan.FromSeconds(30))'  				"Failed to receive all events in 2 minutes. Assume event store is deadlocked.");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,DeadlockTest,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,read_whilst_ack_doesnt_deadlock_with_request_response_dispatcher,The following statement contains a magic number: sub1.Stop(TimeSpan.FromSeconds(10));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Helper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,BuildFakeEventWithMetadata,The following statement contains a magic number: return  				ResolvedEvent.ForUnresolvedEvent(new EventRecord(version' 1234567' Guid.NewGuid()' id' 1234567' 1234'  					stream' version'  					DateTime.UtcNow' PrepareFlags.SingleWrite' type' new byte[0]' metaData));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Helper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,BuildFakeEventWithMetadata,The following statement contains a magic number: return  				ResolvedEvent.ForUnresolvedEvent(new EventRecord(version' 1234567' Guid.NewGuid()' id' 1234567' 1234'  					stream' version'  					DateTime.UtcNow' PrepareFlags.SingleWrite' type' new byte[0]' metaData));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Helper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,BuildFakeEventWithMetadata,The following statement contains a magic number: return  				ResolvedEvent.ForUnresolvedEvent(new EventRecord(version' 1234567' Guid.NewGuid()' id' 1234567' 1234'  					stream' version'  					DateTime.UtcNow' PrepareFlags.SingleWrite' type' new byte[0]' metaData));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Helper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,BuildLinkEvent,The following statement contains a magic number: var link = new EventRecord(version' 1234567' Guid.NewGuid()' id' 1234567' 1234' stream' version'  				DateTime.UtcNow' PrepareFlags.SingleWrite' SystemEventTypes.LinkTo'  				Encoding.UTF8.GetBytes(string.Format("{0}@{1}"' ev.OriginalEventNumber' ev.OriginalStreamId))'  				new byte[0]);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Helper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,BuildLinkEvent,The following statement contains a magic number: var link = new EventRecord(version' 1234567' Guid.NewGuid()' id' 1234567' 1234' stream' version'  				DateTime.UtcNow' PrepareFlags.SingleWrite' SystemEventTypes.LinkTo'  				Encoding.UTF8.GetBytes(string.Format("{0}@{1}"' ev.OriginalEventNumber' ev.OriginalStreamId))'  				new byte[0]);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,Helper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionTests.cs,BuildLinkEvent,The following statement contains a magic number: var link = new EventRecord(version' 1234567' Guid.NewGuid()' id' 1234567' 1234' stream' version'  				DateTime.UtcNow' PrepareFlags.SingleWrite' SystemEventTypes.LinkTo'  				Encoding.UTF8.GetBytes(string.Format("{0}@{1}"' ev.OriginalEventNumber' ev.OriginalStreamId))'  				new byte[0]);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' client1Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(  				Helper.BuildFakeEventWithMetadata(Guid.NewGuid()' "type"' "streamName-2"' 2' metaData));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(  				Helper.BuildFakeEventWithMetadata(Guid.NewGuid()' "type"' "streamName-2"' 3' metaData));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata,The following statement contains a magic number: Assert.AreEqual(2' client2Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(  				Helper.BuildFakeEventWithMetadata(Guid.NewGuid()' "type"' "streamName-1"' 4' metaData));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata,The following statement contains a magic number: Assert.AreEqual(3' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata,The following statement contains a magic number: Assert.AreEqual(2' client2Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(  				Helper.BuildFakeEventWithMetadata(Guid.NewGuid()' "type"' "streamName-3"' 5' metaData));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata,The following statement contains a magic number: Assert.AreEqual(4' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_to_same_client_for_stream_id_for_metadata,The following statement contains a magic number: Assert.AreEqual(2' client2Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' client1Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEventWithMetadata(Guid.NewGuid()' "type"' "streamName-2"' 2' metaData1));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEventWithMetadata(Guid.NewGuid()' "type"' "streamName-2"' 3' metaData1));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The following statement contains a magic number: Assert.AreEqual(4' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEventWithMetadata(Guid.NewGuid()' "type"' "streamName-1"' 4' metaData2));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The following statement contains a magic number: Assert.AreEqual(4' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEventWithMetadata(Guid.NewGuid()' "type"' "streamName-3"' 5' metaData2));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The following statement contains a magic number: Assert.AreEqual(4' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedByCorrelationConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedByCorrelationConsumerStrategyTests.cs,live_subscription_with_pinned_by_correlation_pushes_events_with_metadata_with_valid_correlation_to_same_client_for_correlation_id,The following statement contains a magic number: Assert.AreEqual(2' client2Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,live_subscription_with_pinned_pushes_events_to_same_client_for_stream_id,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' client1Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,live_subscription_with_pinned_pushes_events_to_same_client_for_stream_id,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,live_subscription_with_pinned_pushes_events_to_same_client_for_stream_id,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,live_subscription_with_pinned_pushes_events_to_same_client_for_stream_id,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName-2"' 2));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,live_subscription_with_pinned_pushes_events_to_same_client_for_stream_id,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName-2"' 3));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,live_subscription_with_pinned_pushes_events_to_same_client_for_stream_id,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,live_subscription_with_pinned_pushes_events_to_same_client_for_stream_id,The following statement contains a magic number: Assert.AreEqual(2' client2Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,live_subscription_with_pinned_pushes_events_to_same_client_for_stream_id,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName-1"' 4));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,live_subscription_with_pinned_pushes_events_to_same_client_for_stream_id,The following statement contains a magic number: Assert.AreEqual(3' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,live_subscription_with_pinned_pushes_events_to_same_client_for_stream_id,The following statement contains a magic number: Assert.AreEqual(2' client2Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,live_subscription_with_pinned_pushes_events_to_same_client_for_stream_id,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName-3"' 5));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,live_subscription_with_pinned_pushes_events_to_same_client_for_stream_id,The following statement contains a magic number: Assert.AreEqual(4' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,live_subscription_with_pinned_pushes_events_to_same_client_for_stream_id,The following statement contains a magic number: Assert.AreEqual(2' client2Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_stream_is_round_robinned_to_next_consumer,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' client1Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_stream_is_round_robinned_to_next_consumer,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_stream_is_round_robinned_to_next_consumer,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName-3"' 2));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_stream_is_round_robinned_to_next_consumer,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_stream_is_round_robinned_to_next_consumer,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName-4"' 4));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_stream_is_round_robinned_to_next_consumer,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_stream_is_round_robinned_to_next_consumer,The following statement contains a magic number: Assert.AreEqual(2' client2Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,resolved_link_events_use_event_stream_id,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' client1Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,resolved_link_events_use_event_stream_id,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,resolved_link_events_use_event_stream_id,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildLinkEvent(Guid.NewGuid()' subsctiptionStream' 2'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName-3"' 0)));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,resolved_link_events_use_event_stream_id,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,resolved_link_events_use_event_stream_id,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildLinkEvent(Guid.NewGuid()' subsctiptionStream' 3'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName-4"' 0)));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,resolved_link_events_use_event_stream_id,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,resolved_link_events_use_event_stream_id,The following statement contains a magic number: Assert.AreEqual(2' client2Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,link_events_use_data_to_detect_stream_id,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' client1Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,link_events_use_data_to_detect_stream_id,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,link_events_use_data_to_detect_stream_id,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildLinkEvent(Guid.NewGuid()' subsctiptionStream' 2'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName-3"' 0)' false));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,link_events_use_data_to_detect_stream_id,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,link_events_use_data_to_detect_stream_id,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildLinkEvent(Guid.NewGuid()' subsctiptionStream' 3'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName-4"' 0)' false));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,link_events_use_data_to_detect_stream_id,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,link_events_use_data_to_detect_stream_id,The following statement contains a magic number: Assert.AreEqual(2' client2Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,unsubscribed_client_has_assigned_streams_sent_to_another_client,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' client1Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,unsubscribed_client_has_assigned_streams_sent_to_another_client,The following statement contains a magic number: sub.AddClient(client2Id' Guid.NewGuid()' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,unsubscribed_client_has_assigned_streams_sent_to_another_client,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' client1Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "111"' 2));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "1111"' 3));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "11111"' 4));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "111111"' 5));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: Assert.AreEqual(3' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: Assert.AreEqual(3' client2Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-3"' client3Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "1"' 6));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "11"' 7));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "111"' 8));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "1111"' 9));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "11111"' 10));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "111111"' 11));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: Assert.AreEqual(5' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: Assert.AreEqual(5' client2Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,new_subscription_gets_work,The following statement contains a magic number: Assert.AreEqual(2' client3Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,bad_availablecapacity_scneanrio_causing_null_reference,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' conn1Id' "connection-1"' client1Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,bad_availablecapacity_scneanrio_causing_null_reference,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "111"' 2));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,bad_availablecapacity_scneanrio_causing_null_reference,The following statement contains a magic number: Assert.AreEqual(3' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,bad_availablecapacity_scneanrio_causing_null_reference,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' conn2Id' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,bad_availablecapacity_scneanrio_causing_null_reference,The following statement contains a magic number: Assert.AreEqual(3' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,disconnected_client_has_assigned_streams_sent_to_another_client,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' Guid.NewGuid()' "connection-1"' client1Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,disconnected_client_has_assigned_streams_sent_to_another_client,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' client2Id' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,disconnected_client_has_assigned_streams_sent_to_another_client,The following statement contains a magic number: Assert.AreEqual(2' client1Envelope.Replies.Count);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' client1Id' "connection-1"' client1Envelope' 14' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked,The following statement contains a magic number: Assert.That(consumerStrategy.AvailableCapacity' Is.EqualTo(14));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' client2Id' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked,The following statement contains a magic number: Assert.That(consumerStrategy.AvailableCapacity' Is.EqualTo(24));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked,The following statement contains a magic number: Assert.That(consumerStrategy.AvailableCapacity' Is.EqualTo(14));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_inflight_messages,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' client1Id' "connection-1"' client1Envelope' 14' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_inflight_messages,The following statement contains a magic number: Assert.That(consumerStrategy.AvailableCapacity' Is.EqualTo(14));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_inflight_messages,The following statement contains a magic number: sub.AddClient(Guid.NewGuid()' client2Id' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_inflight_messages,The following statement contains a magic number: Assert.That(consumerStrategy.AvailableCapacity' Is.EqualTo(24));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_inflight_messages,The following statement contains a magic number: Assert.That(consumerStrategy.AvailableCapacity' Is.EqualTo(23));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_inflight_messages,The following statement contains a magic number: Assert.That(consumerStrategy.AvailableCapacity' Is.EqualTo(22));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_inflight_messages,The following statement contains a magic number: Assert.That(consumerStrategy.AvailableCapacity' Is.EqualTo(12));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_acked_messages,The following statement contains a magic number: sub.AddClient(correlationId1' Guid.NewGuid()' "connection-1"' client1Envelope' 14' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_acked_messages,The following statement contains a magic number: Assert.That(consumerStrategy.AvailableCapacity' Is.EqualTo(14));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_acked_messages,The following statement contains a magic number: sub.AddClient(correlationId2' Guid.NewGuid()' "connection-2"' client2Envelope' 10' "foo"' "bar");
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_acked_messages,The following statement contains a magic number: Assert.That(consumerStrategy.AvailableCapacity' Is.EqualTo(24));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_acked_messages,The following statement contains a magic number: Assert.That(consumerStrategy.AvailableCapacity' Is.EqualTo(23));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_acked_messages,The following statement contains a magic number: Assert.That(consumerStrategy.AvailableCapacity' Is.EqualTo(22));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_acked_messages,The following statement contains a magic number: Assert.That(consumerStrategy.AvailableCapacity' Is.EqualTo(23));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,available_capacity_is_tracked_with_acked_messages,The following statement contains a magic number: Assert.That(consumerStrategy.AvailableCapacity' Is.EqualTo(24));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,events_are_skipped_if_assigned_client_full,The following statement contains a magic number: sub.NotifyLiveSubscriptionMessage(Helper.BuildLinkEvent(Guid.NewGuid()' subsctiptionStream' 2'  				Helper.BuildFakeEvent(Guid.NewGuid()' "type"' "streamName-2"' 0)' false));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,PinnedConsumerStrategyTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PinnedConsumerStrategyTests.cs,events_are_skipped_if_assigned_client_full,The following statement contains a magic number: Assert.That(client1Envelope.Replies.Count' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_read_message_in_correct_order,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_read_message_in_correct_order,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_multiple_read_message_in_correct_order,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_multiple_read_message_in_correct_order,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_multiple_read_message_in_correct_order,The following statement contains a magic number: Assert.AreEqual(2' buffer.BufferCount);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_multiple_read_message_in_wrong_order,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_multiple_read_message_in_wrong_order,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_multiple_read_message_in_wrong_order,The following statement contains a magic number: Assert.AreEqual(2' buffer.BufferCount);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_multiple_same_read_message,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_multiple_same_read_message,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_multiple_same_read_message,The following statement contains a magic number: Assert.AreEqual(2' buffer.BufferCount);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_to_read_after_same_on_live_switches_to_live,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_to_read_after_same_on_live_switches_to_live,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_to_read_after_later_live_does_not_switch,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_to_read_after_later_live_does_not_switch,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_to_read_after_later_live_does_not_switch,The following statement contains a magic number: buffer.AddLiveMessage(BuildMessageAt(id1' 5));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_to_live_without_start_from_beginning,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_to_live_without_start_from_beginning,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' false);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_to_live_without_start_from_beginning,The following statement contains a magic number: buffer.AddLiveMessage(BuildMessageAt(id1' 6));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_to_live_without_start_from_beginning,The following statement contains a magic number: buffer.AddLiveMessage(BuildMessageAt(id2' 7));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_to_live_without_start_from_beginning,The following statement contains a magic number: Assert.AreEqual(2' buffer.BufferCount);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_with_lower_in_live,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_with_lower_in_live,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_with_lower_in_live,The following statement contains a magic number: buffer.AddLiveMessage(BuildMessageAt(id1' 5));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_with_lower_in_live,The following statement contains a magic number: buffer.AddLiveMessage(BuildMessageAt(id1' 6));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_with_lower_in_live,The following statement contains a magic number: buffer.AddLiveMessage(BuildMessageAt(id2' 7));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,adding_messages_with_lower_in_live,The following statement contains a magic number: buffer.AddReadMessage(BuildMessageAt(id1' 7));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,skipped_messages_are_not_removed,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,skipped_messages_are_not_removed,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,skipped_messages_are_not_removed,The following statement contains a magic number: buffer.AddReadMessage(BuildMessageAt(id3' 2));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,skipped_messages_are_not_removed,The following statement contains a magic number: Assert.AreEqual(3' buffer.BufferCount);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,skipped_messages_are_not_removed,The following statement contains a magic number: Assert.AreEqual(2' buffer.BufferCount);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,retried_messages_appear_first,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,retried_messages_appear_first,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,retried_messages_appear_first,The following statement contains a magic number: buffer.AddRetry(BuildMessageAt(id2' 2));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,retried_messages_appear_first,The following statement contains a magic number: Assert.AreEqual(2' buffer.BufferCount);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,retried_messages_appear_in_version_order,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,retried_messages_appear_in_version_order,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,retried_messages_appear_in_version_order,The following statement contains a magic number: buffer.AddRetry(BuildMessageAt(id2' 2));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,retried_messages_appear_in_version_order,The following statement contains a magic number: buffer.AddRetry(BuildMessageAt(id3' 3));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,retried_messages_appear_in_version_order,The following statement contains a magic number: buffer.AddRetry(BuildMessageAt(id5' 2));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,lowest_retry_doesnt_assume_order,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,lowest_retry_doesnt_assume_order,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,lowest_retry_doesnt_assume_order,The following statement contains a magic number: buffer.AddRetry(BuildMessageAt(Guid.NewGuid()' 4));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,lowest_retry_doesnt_assume_order,The following statement contains a magic number: buffer.AddRetry(BuildMessageAt(Guid.NewGuid()' 2));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,lowest_retry_doesnt_assume_order,The following statement contains a magic number: buffer.AddRetry(BuildMessageAt(Guid.NewGuid()' 3));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,lowest_retry_doesnt_assume_order,The following statement contains a magic number: Assert.AreEqual(2' buffer.GetLowestRetry());
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,lowest_retry_ignores_replayed_events,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,lowest_retry_ignores_replayed_events,The following statement contains a magic number: var buffer = new StreamBuffer(10' 10' -1' true);
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,lowest_retry_ignores_replayed_events,The following statement contains a magic number: buffer.AddRetry(BuildMessageAt(Guid.NewGuid()' 4));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,lowest_retry_ignores_replayed_events,The following statement contains a magic number: buffer.AddRetry(BuildMessageAt(Guid.NewGuid()' 2));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,lowest_retry_ignores_replayed_events,The following statement contains a magic number: buffer.AddRetry(BuildMessageAt(Guid.NewGuid()' 3));
Magic Number,EventStore.Core.Tests.Services.PersistentSubscription,StreamBufferTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\StreamBufferTests.cs,lowest_retry_ignores_replayed_events,The following statement contains a magic number: Assert.AreEqual(2' buffer.GetLowestRetry());
Magic Number,EventStore.Core.Tests.Services,PersistentSubscriptionConfigTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionConfigPersistence.cs,output_can_be_read_as_input_and_keep_same_values,The following statement contains a magic number: config.Updated = new DateTime(2014' 08' 14);
Magic Number,EventStore.Core.Tests.Services,PersistentSubscriptionConfigTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionConfigPersistence.cs,output_can_be_read_as_input_and_keep_same_values,The following statement contains a magic number: config.Updated = new DateTime(2014' 08' 14);
Magic Number,EventStore.Core.Tests.Services,PersistentSubscriptionConfigTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\PersistentSubscription\PersistentSubscriptionConfigPersistence.cs,output_can_be_read_as_input_and_keep_same_values,The following statement contains a magic number: config.Updated = new DateTime(2014' 08' 14);
Magic Number,EventStore.Core.Tests.Services.Replication.CommitReplication,when_3_node_cluster_receives_2_commit_acks_for_positions_lower_than_checkpoint,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\CommitReplication\when_3_node_cluster_receives_2_commit_acks_for_positions_lower_than_checkpoint.cs,TestFixtureSetUp,The following statement contains a magic number: _replicationPosition = 4000;
Magic Number,EventStore.Core.Tests.Services.Replication.CommitReplication,when_3_node_cluster_receives_multiple_acks_for_different_positions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\CommitReplication\when_3_node_cluster_receives_multiple_acks_for_different_positions.cs,commit_replicated_message_should_have_been_published_for_first_two_events,The following statement contains a magic number: Assert.AreEqual(2' _handledMessages.Count);
Magic Number,EventStore.Core.Tests.Services.Replication.CommitReplication,when_3_node_cluster_receives_multiple_acks_for_different_positions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\CommitReplication\when_3_node_cluster_receives_multiple_acks_for_different_positions.cs,index_should_have_been_updated,The following statement contains a magic number: Assert.AreEqual(2' _indexCommitter.CommittedPrepares.Count);
Magic Number,EventStore.Core.Tests.Services.Replication.CommitReplication,when_3_node_cluster_receives_multiple_acks_for_different_positions_out_of_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\CommitReplication\when_3_node_cluster_receives_multiple_acks_for_different_positions_out_of_order.cs,commit_replicated_message_should_have_been_published_for_first_two_events,The following statement contains a magic number: Assert.AreEqual(2' _handledMessages.Count);
Magic Number,EventStore.Core.Tests.Services.Replication.CommitReplication,when_3_node_cluster_receives_multiple_acks_for_different_positions_out_of_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\CommitReplication\when_3_node_cluster_receives_multiple_acks_for_different_positions_out_of_order.cs,index_should_have_been_updated,The following statement contains a magic number: Assert.AreEqual(2' _indexCommitter.CommittedPrepares.Count);
Magic Number,EventStore.Core.Tests.Services.Replication.CommitReplication,when_3_node_cluster_receives_multiple_acks_for_same_positions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\CommitReplication\when_3_node_cluster_receives_multiple_acks_for_same_positions.cs,commit_replicated_message_should_have_been_published_for_the_event,The following statement contains a magic number: Assert.AreEqual(2' _handledMessages.Count);
Magic Number,EventStore.Core.Tests.Services.Replication.CommitReplication,when_single_node_cluster_receives_commit_ack_for_multiple_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\CommitReplication\when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs,index_should_have_been_updated_with_prepares,The following statement contains a magic number: Assert.AreEqual(3' _indexCommitter.CommittedPrepares.Count);
Magic Number,EventStore.Core.Tests.Services.Replication.CommitReplication,when_single_node_cluster_receives_commit_ack_for_multiple_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\CommitReplication\when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs,index_should_have_been_updated_with_prepares,The following statement contains a magic number: Assert.AreEqual(_logPosition3' _indexCommitter.CommittedPrepares[2].LogPosition);
Magic Number,EventStore.Core.Tests.Services.Replication.CommitReplication,with_index_committer_service,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\CommitReplication\with_index_committer_service.cs,CreatePrepare,The following statement contains a magic number: return LogRecord.Prepare(logPosition' Guid.NewGuid()' Guid.NewGuid()' transactionPosition' 0'  				_eventStreamId' -1' PrepareFlags.None' "testEvent"'  				new byte[10]' new byte[0]);
Magic Number,EventStore.Core.Tests.Services.Replication.CommitReplication,with_index_committer_service,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\CommitReplication\with_index_committer_service.cs,BecomeSlave,The following statement contains a magic number: var masterIPEndPoint = new IPEndPoint(IPAddress.Loopback' 2113);
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_creating_delete_stream_request_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_creating_delete_stream_request_manager.cs,null_publisher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() =>  				new DeleteStreamTwoPhaseRequestManager(null' 3' PrepareTimeout' CommitTimeout' false));
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_completes_successfully.cs,OnManager,The following statement contains a magic number: return new DeleteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_completes_successfully.cs,When,The following statement contains a magic number: return new StorageMessage.CommitReplicated(InternalCorrId' 100' 2' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_completes_successfully.cs,When,The following statement contains a magic number: return new StorageMessage.CommitReplicated(InternalCorrId' 100' 2' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_completes_successfully.cs,When,The following statement contains a magic number: return new StorageMessage.CommitReplicated(InternalCorrId' 100' 2' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_completes_successfully.cs,When,The following statement contains a magic number: return new StorageMessage.CommitReplicated(InternalCorrId' 100' 2' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_gets_already_committed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_gets_already_committed.cs,OnManager,The following statement contains a magic number: return new DeleteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_gets_commit_timeout_after_commit_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_gets_commit_timeout_after_commit_replicated.cs,OnManager,The following statement contains a magic number: return new DeleteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_gets_commit_timeout_after_commit_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_gets_commit_timeout_after_commit_replicated.cs,When,The following statement contains a magic number: return new StorageMessage.RequestManagerTimerTick(  				DateTime.UtcNow + TimeSpan.FromTicks(CommitTimeout.Ticks / 2));
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_gets_commit_timeout_before_commit_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_gets_commit_timeout_before_commit_replicated.cs,OnManager,The following statement contains a magic number: return new DeleteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_gets_commit_timeout_before_commit_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_gets_commit_timeout_before_commit_replicated.cs,When,The following statement contains a magic number: return new StorageMessage.RequestManagerTimerTick(  				DateTime.UtcNow + CommitTimeout + TimeSpan.FromMinutes(5));
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_gets_commit_timeout_before_commit_stage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_gets_commit_timeout_before_commit_stage.cs,OnManager,The following statement contains a magic number: return new DeleteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_gets_prepare_timeout_after_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_gets_prepare_timeout_after_prepares.cs,OnManager,The following statement contains a magic number: return new DeleteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_gets_prepare_timeout_after_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_gets_prepare_timeout_after_prepares.cs,When,The following statement contains a magic number: return new StorageMessage.RequestManagerTimerTick(  				DateTime.UtcNow + TimeSpan.FromTicks(CommitTimeout.Ticks / 2));
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_gets_prepare_timeout_before_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_gets_prepare_timeout_before_prepares.cs,OnManager,The following statement contains a magic number: return new DeleteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_gets_prepare_timeout_before_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_gets_prepare_timeout_before_prepares.cs,When,The following statement contains a magic number: return new StorageMessage.RequestManagerTimerTick(  				DateTime.UtcNow + PrepareTimeout + TimeSpan.FromMinutes(5));
Magic Number,EventStore.Core.Tests.Services.Replication.DeleteStream,when_delete_stream_gets_stream_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\DeleteStream\when_delete_stream_gets_stream_deleted.cs,OnManager,The following statement contains a magic number: return new DeleteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_committed_on_master_and_on_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_committed_on_master_and_on_slaves.cs,BeforeNodesStart,The following statement contains a magic number: _expectedNumberOfRoleAssignments = new CountdownEvent(3);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_committed_on_master_and_on_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_committed_on_master_and_on_slaves.cs,Given,The following statement contains a magic number: _expectedNumberOfRoleAssignments.Wait(5000);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_committed_on_master_and_on_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_committed_on_master_and_on_slaves.cs,Given,The following statement contains a magic number: var events = new Event[] {new Event(Guid.NewGuid()' "test-type"' false' new byte[10]' new byte[0])};
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_committed_on_master_and_on_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_committed_on_master_and_on_slaves.cs,should_be_able_to_read_event_from_all_forward_on_slaves,The following statement contains a magic number: var quorum = (slaves.Count() + 1) / 2 + 1;
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_committed_on_master_and_on_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_committed_on_master_and_on_slaves.cs,should_be_able_to_read_event_from_all_backward_on_slaves,The following statement contains a magic number: var quorum = (slaves.Count() + 1) / 2 + 1;
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_committed_on_master_and_on_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_committed_on_master_and_on_slaves.cs,should_be_able_to_read_event_from_stream_forward_on_slaves,The following statement contains a magic number: var quorum = (slaves.Count() + 1) / 2 + 1;
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_committed_on_master_and_on_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_committed_on_master_and_on_slaves.cs,should_be_able_to_read_event_from_stream_backward_on_slaves,The following statement contains a magic number: var quorum = (slaves.Count() + 1) / 2 + 1;
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_committed_on_master_and_on_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_committed_on_master_and_on_slaves.cs,should_be_able_to_read_event_on_slaves,The following statement contains a magic number: var quorum = (slaves.Count() + 1) / 2 + 1;
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_from_a_single_node,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_from_a_single_node.cs,BeforeNodesStart,The following statement contains a magic number: _expectedNumberOfRoleAssignments = new CountdownEvent(3);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_from_a_single_node,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_from_a_single_node.cs,Given,The following statement contains a magic number: _expectedNumberOfRoleAssignments.Wait(5000);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_from_a_single_node,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_from_a_single_node.cs,Given,The following statement contains a magic number: var events = new Event[] {new Event(Guid.NewGuid()' "test-type"' false' new byte[10]' new byte[0])};
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_reading_events_from_cluster_with_replication_checkpoint_not_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_events_from_cluster_with_replication_checkpoint_not_set.cs,BeforeNodesStart,The following statement contains a magic number: _expectedNumberOfRoleAssignments = new CountdownEvent(3);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_reading_events_from_cluster_with_replication_checkpoint_not_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_events_from_cluster_with_replication_checkpoint_not_set.cs,Given,The following statement contains a magic number: _expectedNumberOfRoleAssignments.Wait(5000);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_reading_events_from_cluster_with_replication_checkpoint_not_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_events_from_cluster_with_replication_checkpoint_not_set.cs,Given,The following statement contains a magic number: var events = new Event[] {new Event(Guid.NewGuid()' "test-type"' false' new byte[10]' new byte[0])};
Magic Number,EventStore.Core.Tests.Replication.ReadStream,ReplicationTestHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReplicationTestHelper.cs,ReadAllEventsForward,The following statement contains a magic number: var read = new ClientMessage.ReadAllEventsForward(Guid.NewGuid()' Guid.NewGuid()' new CallbackEnvelope(  						msg => {  							readResult = (ClientMessage.ReadAllEventsForwardCompleted)msg;  							readEvent.Set();  						})'  					0' 0' 100' false' false' null' SystemAccount.Principal);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,ReplicationTestHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReplicationTestHelper.cs,ReadAllEventsBackward,The following statement contains a magic number: var read = new ClientMessage.ReadAllEventsBackward(Guid.NewGuid()' Guid.NewGuid()' new CallbackEnvelope(  						msg => {  							readResult = (ClientMessage.ReadAllEventsBackwardCompleted)msg;  							resetEvent.Set();  						})'  					-1' -1' 100' false' false' null' SystemAccount.Principal);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,ReplicationTestHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReplicationTestHelper.cs,ReadStreamEventsForward,The following statement contains a magic number: var read = new ClientMessage.ReadStreamEventsForward(Guid.NewGuid()' Guid.NewGuid()' new CallbackEnvelope(  					msg => {  						readResult = (ClientMessage.ReadStreamEventsForwardCompleted)msg;  						resetEvent.Set();  					})' streamId' 0' 10'  				false' false' null' SystemAccount.Principal);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,ReplicationTestHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReplicationTestHelper.cs,ReadStreamEventsBackward,The following statement contains a magic number: var read = new ClientMessage.ReadStreamEventsBackward(Guid.NewGuid()' Guid.NewGuid()' new CallbackEnvelope(  					msg => {  						readResult = (ClientMessage.ReadStreamEventsBackwardCompleted)msg;  						resetEvent.Set();  					})' streamId' 9' 10'  				false' false' null' SystemAccount.Principal);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,ReplicationTestHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReplicationTestHelper.cs,ReadStreamEventsBackward,The following statement contains a magic number: var read = new ClientMessage.ReadStreamEventsBackward(Guid.NewGuid()' Guid.NewGuid()' new CallbackEnvelope(  					msg => {  						readResult = (ClientMessage.ReadStreamEventsBackwardCompleted)msg;  						resetEvent.Set();  					})' streamId' 9' 10'  				false' false' null' SystemAccount.Principal);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\Subscriptions\when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves.cs,BeforeNodesStart,The following statement contains a magic number: _expectedNumberOfRoleAssignments = new CountdownEvent(3);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\Subscriptions\when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves.cs,Given,The following statement contains a magic number: _expectedNumberOfRoleAssignments.Wait(5000);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\Subscriptions\when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves.cs,Given,The following statement contains a magic number: _subscriptionsConfirmed = new CountdownEvent(3);
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\Subscriptions\when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves.cs,Given,The following statement contains a magic number: var events = new Event[] {new Event(Guid.NewGuid()' "test-type"' false' new byte[10]' new byte[0])};
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\Subscriptions\when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves.cs,should_receive_event_on_master,The following statement contains a magic number: Assert.IsTrue(_masterSubscription.EventAppeared.Wait(2000));
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\Subscriptions\when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves.cs,should_receive_event_on_slaves,The following statement contains a magic number: !(_slaveSubscriptions[0].EventAppeared.Wait(2000) && _slaveSubscriptions[1].EventAppeared.Wait(2000))
Magic Number,EventStore.Core.Tests.Replication.ReadStream,when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\Subscriptions\when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves.cs,should_receive_event_on_slaves,The following statement contains a magic number: !(_slaveSubscriptions[0].EventAppeared.Wait(2000) && _slaveSubscriptions[1].EventAppeared.Wait(2000))
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_creating_transaction_commit_request_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_creating_transaction_commit_request_manager.cs,null_publisher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() =>  				new TransactionCommitTwoPhaseRequestManager(null' 3' PrepareTimeout' CommitTimeout' false));
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_completes_successfully.cs,OnManager,The following statement contains a magic number: return new TransactionCommitTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_completes_successfully.cs,WithInitialMessages,The following statement contains a magic number: yield return new ClientMessage.TransactionCommit(InternalCorrId' ClientCorrId' Envelope' true' 4' null);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_completes_successfully.cs,When,The following statement contains a magic number: return new StorageMessage.CommitReplicated(InternalCorrId' 100' 2' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_completes_successfully.cs,When,The following statement contains a magic number: return new StorageMessage.CommitReplicated(InternalCorrId' 100' 2' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_completes_successfully.cs,When,The following statement contains a magic number: return new StorageMessage.CommitReplicated(InternalCorrId' 100' 2' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_completes_successfully.cs,When,The following statement contains a magic number: return new StorageMessage.CommitReplicated(InternalCorrId' 100' 2' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_gets_already_committed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_gets_already_committed.cs,OnManager,The following statement contains a magic number: return new TransactionCommitTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_gets_already_committed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_gets_already_committed.cs,WithInitialMessages,The following statement contains a magic number: yield return new ClientMessage.TransactionCommit(InternalCorrId' ClientCorrId' Envelope' true' 4' null);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_gets_commit_timeout_before_commit_stage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_gets_commit_timeout_before_commit_stage.cs,OnManager,The following statement contains a magic number: return new TransactionCommitTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_gets_commit_timeout_before_commit_stage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_gets_commit_timeout_before_commit_stage.cs,WithInitialMessages,The following statement contains a magic number: yield return new ClientMessage.TransactionCommit(InternalCorrId' ClientCorrId' Envelope' true' 4' null);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_gets_prepare_timeout_after_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_gets_prepare_timeout_after_prepares.cs,OnManager,The following statement contains a magic number: return new TransactionCommitTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_gets_prepare_timeout_after_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_gets_prepare_timeout_after_prepares.cs,WithInitialMessages,The following statement contains a magic number: yield return new ClientMessage.TransactionCommit(InternalCorrId' ClientCorrId' Envelope' true' 4' null);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_gets_prepare_timeout_after_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_gets_prepare_timeout_after_prepares.cs,When,The following statement contains a magic number: return new StorageMessage.RequestManagerTimerTick(  				DateTime.UtcNow + TimeSpan.FromTicks(CommitTimeout.Ticks / 2));
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_gets_prepare_timeout_before_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_gets_prepare_timeout_before_prepares.cs,OnManager,The following statement contains a magic number: return new TransactionCommitTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_gets_prepare_timeout_before_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_gets_prepare_timeout_before_prepares.cs,WithInitialMessages,The following statement contains a magic number: yield return new ClientMessage.TransactionCommit(InternalCorrId' ClientCorrId' Envelope' true' 4' null);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_gets_prepare_timeout_before_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_gets_prepare_timeout_before_prepares.cs,When,The following statement contains a magic number: return new StorageMessage.RequestManagerTimerTick(  				DateTime.UtcNow + PrepareTimeout + TimeSpan.FromMinutes(5));
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_gets_stream_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_gets_stream_deleted.cs,OnManager,The following statement contains a magic number: return new TransactionCommitTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.TransactionCommit,when_transaction_commit_gets_stream_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\TransactionCommit\when_transaction_commit_gets_stream_deleted.cs,WithInitialMessages,The following statement contains a magic number: yield return new ClientMessage.TransactionCommit(InternalCorrId' ClientCorrId' Envelope' true' 4' null);
Magic Number,EventStore.Core.Tests.Services.Replication.WriteStream,when_creating_write_stream_request_manager,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\WriteStream\when_creating_write_stream_request_manager.cs,null_publisher_throws_argument_null_exception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() =>  				new WriteStreamTwoPhaseRequestManager(null' 3' PrepareTimeout' CommitTimeout' false));
Magic Number,EventStore.Core.Tests.Services.Replication.WriteStream,when_write_stream_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\WriteStream\when_write_stream_completes_successfully.cs,OnManager,The following statement contains a magic number: return new WriteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.WriteStream,when_write_stream_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\WriteStream\when_write_stream_completes_successfully.cs,When,The following statement contains a magic number: return new StorageMessage.CommitReplicated(InternalCorrId' 100' 2' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Replication.WriteStream,when_write_stream_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\WriteStream\when_write_stream_completes_successfully.cs,When,The following statement contains a magic number: return new StorageMessage.CommitReplicated(InternalCorrId' 100' 2' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Replication.WriteStream,when_write_stream_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\WriteStream\when_write_stream_completes_successfully.cs,When,The following statement contains a magic number: return new StorageMessage.CommitReplicated(InternalCorrId' 100' 2' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Replication.WriteStream,when_write_stream_completes_successfully,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\WriteStream\when_write_stream_completes_successfully.cs,When,The following statement contains a magic number: return new StorageMessage.CommitReplicated(InternalCorrId' 100' 2' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Replication.WriteStream,when_write_stream_gets_already_committed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\WriteStream\when_write_stream_gets_already_committed.cs,OnManager,The following statement contains a magic number: return new WriteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.WriteStream,when_write_stream_gets_commit_timeout_after_commit_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\WriteStream\when_write_stream_gets_commit_timeout_after_commit_replicated.cs,OnManager,The following statement contains a magic number: return new WriteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.WriteStream,when_write_stream_gets_commit_timeout_before_commit_stage,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\WriteStream\when_write_stream_gets_commit_timeout_before_commit_stage.cs,OnManager,The following statement contains a magic number: return new WriteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.WriteStream,when_write_stream_gets_prepare_timeout_after_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\WriteStream\when_write_stream_gets_prepare_timeout_after_prepares.cs,OnManager,The following statement contains a magic number: return new WriteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.WriteStream,when_write_stream_gets_prepare_timeout_after_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\WriteStream\when_write_stream_gets_prepare_timeout_after_prepares.cs,When,The following statement contains a magic number: return new StorageMessage.RequestManagerTimerTick(  				DateTime.UtcNow + TimeSpan.FromTicks(CommitTimeout.Ticks / 2));
Magic Number,EventStore.Core.Tests.Services.Replication.WriteStream,when_write_stream_gets_prepare_timeout_before_prepares,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\WriteStream\when_write_stream_gets_prepare_timeout_before_prepares.cs,OnManager,The following statement contains a magic number: return new WriteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Replication.WriteStream,when_write_stream_gets_stream_deleted,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\WriteStream\when_write_stream_gets_stream_deleted.cs,OnManager,The following statement contains a magic number: return new WriteStreamTwoPhaseRequestManager(publisher' 3' PrepareTimeout' CommitTimeout' false);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_a_single_write_before_the_transaction_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_a_single_write_before_the_transaction_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: CreateDb(  				Rec.Prepare(0' "single_write_stream_id_1"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.TransSt(1' "transaction_stream_id")'  				Rec.Prepare(1' "transaction_stream_id")'  				Rec.TransEnd(1' "transaction_stream_id")'  				Rec.Prepare(2' "single_write_stream_id_2"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(3' "single_write_stream_id_3"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(4' "single_write_stream_id_4"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted));
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_a_single_write_before_the_transaction_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_a_single_write_before_the_transaction_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: CreateDb(  				Rec.Prepare(0' "single_write_stream_id_1"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.TransSt(1' "transaction_stream_id")'  				Rec.Prepare(1' "transaction_stream_id")'  				Rec.TransEnd(1' "transaction_stream_id")'  				Rec.Prepare(2' "single_write_stream_id_2"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(3' "single_write_stream_id_3"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(4' "single_write_stream_id_4"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted));
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_a_single_write_before_the_transaction_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_a_single_write_before_the_transaction_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: CreateDb(  				Rec.Prepare(0' "single_write_stream_id_1"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.TransSt(1' "transaction_stream_id")'  				Rec.Prepare(1' "transaction_stream_id")'  				Rec.TransEnd(1' "transaction_stream_id")'  				Rec.Prepare(2' "single_write_stream_id_2"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(3' "single_write_stream_id_3"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(4' "single_write_stream_id_4"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted));
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_a_single_write_before_the_transaction_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_a_single_write_before_the_transaction_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: var firstRead = ReadIndex.ReadAllEventsForward(new Data.TFPos(0' 0)' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_a_single_write_before_the_transaction_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_a_single_write_before_the_transaction_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: Assert.AreEqual(4' firstRead.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_a_single_write_before_the_transaction_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_a_single_write_before_the_transaction_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: Assert.AreEqual("single_write_stream_id_3"' firstRead.Records[2].Event.EventStreamId);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_a_single_write_before_the_transaction_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_a_single_write_before_the_transaction_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: Assert.AreEqual("single_write_stream_id_4"' firstRead.Records[3].Event.EventStreamId);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_a_single_write_before_the_transaction_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_a_single_write_before_the_transaction_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: CreateDb(  				Rec.Prepare(0' "single_write_stream_id_1"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.TransSt(1' "transaction_stream_id")'  				Rec.Prepare(1' "transaction_stream_id")'  				Rec.TransEnd(1' "transaction_stream_id")'  				Rec.Prepare(2' "single_write_stream_id_2"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(3' "single_write_stream_id_3"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(4' "single_write_stream_id_4"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Commit(1' "transaction_stream_id"));
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_a_single_write_before_the_transaction_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_a_single_write_before_the_transaction_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: CreateDb(  				Rec.Prepare(0' "single_write_stream_id_1"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.TransSt(1' "transaction_stream_id")'  				Rec.Prepare(1' "transaction_stream_id")'  				Rec.TransEnd(1' "transaction_stream_id")'  				Rec.Prepare(2' "single_write_stream_id_2"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(3' "single_write_stream_id_3"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(4' "single_write_stream_id_4"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Commit(1' "transaction_stream_id"));
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_a_single_write_before_the_transaction_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_a_single_write_before_the_transaction_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: CreateDb(  				Rec.Prepare(0' "single_write_stream_id_1"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.TransSt(1' "transaction_stream_id")'  				Rec.Prepare(1' "transaction_stream_id")'  				Rec.TransEnd(1' "transaction_stream_id")'  				Rec.Prepare(2' "single_write_stream_id_2"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(3' "single_write_stream_id_3"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(4' "single_write_stream_id_4"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Commit(1' "transaction_stream_id"));
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_a_single_write_before_the_transaction_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_a_single_write_before_the_transaction_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: var transactionRead = ReadIndex.ReadAllEventsForward(firstRead.NextPos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_a_single_write_is_after_transaction_end_but_before_commit_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_a_single_write_is_after_transaction_end_but_before_commit_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: var firstRead = ReadIndex.ReadAllEventsForward(new Data.TFPos(0' 0)' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_a_single_write_is_after_transaction_end_but_before_commit_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_a_single_write_is_after_transaction_end_but_before_commit_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: var transactionRead = ReadIndex.ReadAllEventsForward(firstRead.NextPos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: CreateDb(Rec.TransSt(0' "transaction_stream_id")'  				Rec.Prepare(0' "transaction_stream_id")'  				Rec.TransEnd(0' "transaction_stream_id")'  				Rec.Prepare(1' "single_write_stream_id_1"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(2' "single_write_stream_id_2"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(3' "single_write_stream_id_3"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted));
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: CreateDb(Rec.TransSt(0' "transaction_stream_id")'  				Rec.Prepare(0' "transaction_stream_id")'  				Rec.TransEnd(0' "transaction_stream_id")'  				Rec.Prepare(1' "single_write_stream_id_1"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(2' "single_write_stream_id_2"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(3' "single_write_stream_id_3"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted));
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: var firstRead = ReadIndex.ReadAllEventsForward(new Data.TFPos(0' 0)' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: Assert.AreEqual(3' firstRead.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: Assert.AreEqual("single_write_stream_id_3"' firstRead.Records[2].Event.EventStreamId);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: CreateDb(Rec.TransSt(0' "transaction_stream_id")'  				Rec.Prepare(0' "transaction_stream_id")'  				Rec.TransEnd(0' "transaction_stream_id")'  				Rec.Prepare(1' "single_write_stream_id_1"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(2' "single_write_stream_id_2"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(3' "single_write_stream_id_3"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Commit(0' "transaction_stream_id"));
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: CreateDb(Rec.TransSt(0' "transaction_stream_id")'  				Rec.Prepare(0' "transaction_stream_id")'  				Rec.TransEnd(0' "transaction_stream_id")'  				Rec.Prepare(1' "single_write_stream_id_1"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(2' "single_write_stream_id_2"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Prepare(3' "single_write_stream_id_3"' prepareFlags: PrepareFlags.Data | PrepareFlags.IsCommitted)'  				Rec.Commit(0' "transaction_stream_id"));
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_multiple_single_writes_are_after_transaction_end_but_before_commit_is_present.cs,should_be_able_to_read_the_transactional_writes_when_the_commit_is_present,The following statement contains a magic number: var transactionRead = ReadIndex.ReadAllEventsForward(firstRead.NextPos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_reading_all_with_replication_checkpoint_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_reading_all_with_replication_checkpoint_set.cs,WriteTestScenario,The following statement contains a magic number: var res = WritePrepare("ES1"' 0' Guid.NewGuid()' "event-type"' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_reading_all_with_replication_checkpoint_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_reading_all_with_replication_checkpoint_set.cs,WriteTestScenario,The following statement contains a magic number: res = WritePrepare("ES2"' 0' Guid.NewGuid()' "event-type"' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_reading_all_with_replication_checkpoint_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_reading_all_with_replication_checkpoint_set.cs,WriteTestScenario,The following statement contains a magic number: res = WritePrepare("ES2"' 1' Guid.NewGuid()' "event-type"' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_reading_all_with_replication_checkpoint_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_reading_all_with_replication_checkpoint_set.cs,should_be_able_to_read_all_backwards_and_get_events_before_replication_checkpoint,The following statement contains a magic number: var result = ReadIndex.ReadAllEventsBackward(pos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_reading_all_with_replication_checkpoint_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_reading_all_with_replication_checkpoint_set.cs,should_be_able_to_read_all_backwards_and_get_events_before_replication_checkpoint,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_reading_all_with_replication_checkpoint_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_reading_all_with_replication_checkpoint_set.cs,should_be_able_to_read_all_forwards_and_get_events_before_replication_checkpoint,The following statement contains a magic number: var result = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.AllReader,when_reading_all_with_replication_checkpoint_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\AllReader\when_reading_all_with_replication_checkpoint_set.cs,should_be_able_to_read_all_forwards_and_get_events_before_replication_checkpoint,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_duplicate_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs,SetupDB,The following statement contains a magic number: Writer.Write(new CommitLogRecord(pos5' _id3' pos4' DateTime.UtcNow' 2)' out pos6);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_duplicate_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs,should_read_the_correct_last_event_number,The following statement contains a magic number: Assert.AreEqual(2' result);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,DuplicateReadIndexTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs,TestFixtureSetUp,The following statement contains a magic number: var readers = new ObjectPool<ITransactionFileReader>("Readers"' 2' 5'  				() => new TFChunkReader(_db' _db.Config.WriterCheckpoint));
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,DuplicateReadIndexTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs,TestFixtureSetUp,The following statement contains a magic number: var readers = new ObjectPool<ITransactionFileReader>("Readers"' 2' 5'  				() => new TFChunkReader(_db' _db.Config.WriterCheckpoint));
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,DuplicateReadIndexTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(GetFilePathFor("index")' lowHasher' highHasher'  				() => new HashListMemTable(IndexBitnessVersion' MaxEntriesInMemTable * 2)'  				() => new TFReaderLease(readers)'  				IndexBitnessVersion'  				MaxEntriesInMemTable);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,DuplicateReadIndexTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs,TestFixtureSetUp,The following statement contains a magic number: _tableIndex = new TableIndex(GetFilePathFor("index")' lowHasher' highHasher'  				() => new HashListMemTable(IndexBitnessVersion' MaxEntriesInMemTable * 2)'  				() => new TFReaderLease(readers)'  				IndexBitnessVersion'  				MaxEntriesInMemTable);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_multiple_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_multiple_events_in_a_stream.cs,the_third_event_is_not_found,The following statement contains a magic number: var result = ReadIndex.ReadEvent("test1"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_multiple_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_multiple_events_in_a_stream.cs,the_stream_can_be_read_with_two_events_in_right_order_when_starting_from_specified_event_number,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("test1"' 1' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_multiple_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_multiple_events_in_a_stream.cs,the_stream_can_be_read_with_two_events_in_right_order_when_starting_from_specified_event_number,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_multiple_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_multiple_events_in_a_stream.cs,the_stream_can_be_read_with_two_events_backward_from_end,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("test1"' -1' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_multiple_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_multiple_events_in_a_stream.cs,the_stream_can_be_read_with_two_events_backward_from_end,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_multiple_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_multiple_events_in_a_stream.cs,the_stream_returns_events_with_correct_pagination,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("test1"' 0' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_multiple_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_multiple_events_in_a_stream.cs,the_stream_returns_nothing_for_nonexistent_page,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("test1"' 100' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_multiple_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_multiple_events_in_a_stream.cs,the_stream_returns_nothing_for_nonexistent_page,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("test1"' 100' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_multiple_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_multiple_events_in_a_stream.cs,no_events_are_return_if_event_stream_doesnt_exist,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("test2"' 0' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_multiple_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_multiple_events_in_a_stream.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_multiple_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_multiple_events_in_a_stream.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(2' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_multiple_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_multiple_events_in_a_stream.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_multiple_events_in_a_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_multiple_events_in_a_stream.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(2' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(3' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_id3' records[2].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(3' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_id1' records[2].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits_for_events_with_version_numbers_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits_for_events_with_version_numbers_greater_than_int_maxvalue.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits_for_events_with_version_numbers_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits_for_events_with_version_numbers_greater_than_int_maxvalue.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(3' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits_for_events_with_version_numbers_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits_for_events_with_version_numbers_greater_than_int_maxvalue.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_id3' records[2].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits_for_events_with_version_numbers_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits_for_events_with_version_numbers_greater_than_int_maxvalue.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits_for_events_with_version_numbers_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits_for_events_with_version_numbers_greater_than_int_maxvalue.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(3' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits_for_events_with_version_numbers_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits_for_events_with_version_numbers_greater_than_int_maxvalue.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_id1' records[2].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits_for_log_records_of_mixed_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits_for_log_records_of_mixed_versions.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits_for_log_records_of_mixed_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits_for_log_records_of_mixed_versions.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(3' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits_for_log_records_of_mixed_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits_for_log_records_of_mixed_versions.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_id3' records[2].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits_for_log_records_of_mixed_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits_for_log_records_of_mixed_versions.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits_for_log_records_of_mixed_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits_for_log_records_of_mixed_versions.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(3' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_and_commits_for_log_records_of_mixed_versions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_and_commits_for_log_records_of_mixed_versions.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_id1' records[2].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_but_no_commits,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_but_no_commits.cs,read_all_events_forward_returns_no_events,The following statement contains a magic number: var result = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_prepares_but_no_commits,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_prepares_but_no_commits.cs,read_all_events_backward_returns_no_events,The following statement contains a magic number: var result = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_two_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_two_events_in_stream.cs,the_nonexisting_event_can_not_be_read,The following statement contains a magic number: var result = ReadIndex.ReadEvent("test1"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_two_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_two_events_in_stream.cs,the_stream_can_be_read_as_a_whole_with_specific_from_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("test1"' 1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_two_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_two_events_in_stream.cs,the_stream_can_be_read_as_a_whole_with_specific_from_version,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_two_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_two_events_in_stream.cs,the_stream_can_be_read_as_a_whole_with_from_end,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("test1"' -1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_two_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_two_events_in_stream.cs,the_stream_can_be_read_as_a_whole_with_from_end,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_two_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_two_events_in_stream.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_two_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_two_events_in_stream.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(2' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_two_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_two_events_in_stream.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.BuildingIndex,when_building_an_index_off_tfile_with_two_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\BuildingIndex\when_building_an_index_off_tfile_with_two_events_in_stream.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(2' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage,ReadIndexTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\ReadIndexTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: var readers = new ObjectPool<ITransactionFileReader>("Readers"' 2' 5'  				() => new TFChunkReader(Db' Db.Config.WriterCheckpoint));
Magic Number,EventStore.Core.Tests.Services.Storage,ReadIndexTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\ReadIndexTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: var readers = new ObjectPool<ITransactionFileReader>("Readers"' 2' 5'  				() => new TFChunkReader(Db' Db.Config.WriterCheckpoint));
Magic Number,EventStore.Core.Tests.Services.Storage,ReadIndexTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\ReadIndexTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: TableIndex = new TableIndex(GetFilePathFor("index")' lowHasher' highHasher'  				() => new HashListMemTable(IndexBitnessVersion' MaxEntriesInMemTable * 2)'  				() => new TFReaderLease(readers)'  				IndexBitnessVersion'  				MaxEntriesInMemTable);
Magic Number,EventStore.Core.Tests.Services.Storage,ReadIndexTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\ReadIndexTestScenario.cs,WriteSingleEventWithLogVersion0,The following statement contains a magic number: var record = new PrepareLogRecord(position' id' id' position' 0' streamId' expectedVersion' DateTime.UtcNow'  				flags.Value' "type"' new byte[10]' new byte[0]' LogRecordVersion.LogRecordV0);
Magic Number,EventStore.Core.Tests.Services.Storage,RepeatableDbTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\RepeatableDbTestScenario.cs,CreateDb,The following statement contains a magic number: var dbConfig = TFChunkHelper.CreateDbConfig(PathName' 0' chunkSize: 1024 * 1024);
Magic Number,EventStore.Core.Tests.Services.Storage,RepeatableDbTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\RepeatableDbTestScenario.cs,CreateDb,The following statement contains a magic number: var dbConfig = TFChunkHelper.CreateDbConfig(PathName' 0' chunkSize: 1024 * 1024);
Magic Number,EventStore.Core.Tests.Services.Storage,RepeatableDbTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\RepeatableDbTestScenario.cs,CreateDb,The following statement contains a magic number: var readers = new ObjectPool<ITransactionFileReader>(  				"Readers"' 2' 2' () => new TFChunkReader(DbRes.Db' DbRes.Db.Config.WriterCheckpoint));
Magic Number,EventStore.Core.Tests.Services.Storage,RepeatableDbTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\RepeatableDbTestScenario.cs,CreateDb,The following statement contains a magic number: var readers = new ObjectPool<ITransactionFileReader>(  				"Readers"' 2' 2' () => new TFChunkReader(DbRes.Db' DbRes.Db.Config.WriterCheckpoint));
Magic Number,EventStore.Core.Tests.Services.Storage,RepeatableDbTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\RepeatableDbTestScenario.cs,CreateDb,The following statement contains a magic number: TableIndex = new TableIndex(GetFilePathFor("index")' lowHasher' highHasher'  				() => new HashListMemTable(PTableVersions.IndexV3' MaxEntriesInMemTable * 2)'  				() => new TFReaderLease(readers)'  				PTableVersions.IndexV3'  				MaxEntriesInMemTable);
Magic Number,EventStore.Core.Tests.Services.Storage,SimpleDbTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\SimpleDbTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: var dbConfig = TFChunkHelper.CreateDbConfig(PathName' 0' chunkSize: 1024 * 1024);
Magic Number,EventStore.Core.Tests.Services.Storage,SimpleDbTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\SimpleDbTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: var dbConfig = TFChunkHelper.CreateDbConfig(PathName' 0' chunkSize: 1024 * 1024);
Magic Number,EventStore.Core.Tests.Services.Storage,SimpleDbTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\SimpleDbTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: var readers = new ObjectPool<ITransactionFileReader>(  				"Readers"' 2' 2' () => new TFChunkReader(DbRes.Db' DbRes.Db.Config.WriterCheckpoint));
Magic Number,EventStore.Core.Tests.Services.Storage,SimpleDbTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\SimpleDbTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: var readers = new ObjectPool<ITransactionFileReader>(  				"Readers"' 2' 2' () => new TFChunkReader(DbRes.Db' DbRes.Db.Config.WriterCheckpoint));
Magic Number,EventStore.Core.Tests.Services.Storage,SimpleDbTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\SimpleDbTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: TableIndex = new TableIndex(GetFilePathFor("index")' lowHasher' highHasher'  				() => new HashListMemTable(PTableVersions.IndexV2' MaxEntriesInMemTable * 2)'  				() => new TFReaderLease(readers)'  				PTableVersions.IndexV2'  				MaxEntriesInMemTable);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,the_item_can_be_read,The following statement contains a magic number: cache.PutRecord(12000' new PrepareLogRecord(12000' _id' _id' 12000' 0' "test"' 1' DateTime.UtcNow'  				PrepareFlags.None' "type"' new byte[0]' new byte[0]));
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,the_item_can_be_read,The following statement contains a magic number: cache.PutRecord(12000' new PrepareLogRecord(12000' _id' _id' 12000' 0' "test"' 1' DateTime.UtcNow'  				PrepareFlags.None' "type"' new byte[0]' new byte[0]));
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,the_item_can_be_read,The following statement contains a magic number: cache.PutRecord(12000' new PrepareLogRecord(12000' _id' _id' 12000' 0' "test"' 1' DateTime.UtcNow'  				PrepareFlags.None' "type"' new byte[0]' new byte[0]));
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,the_item_can_be_read,The following statement contains a magic number: Assert.IsTrue(cache.TryGetRecord(12000' out read));
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_count_reached,The following statement contains a magic number: var cache = new DictionaryBasedCache(9' 1024 * 1024 * 16);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_count_reached,The following statement contains a magic number: var cache = new DictionaryBasedCache(9' 1024 * 1024 * 16);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_count_reached,The following statement contains a magic number: var cache = new DictionaryBasedCache(9' 1024 * 1024 * 16);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_count_reached,The following statement contains a magic number: var cache = new DictionaryBasedCache(9' 1024 * 1024 * 16);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_count_reached,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_size_reached_by_data,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_size_reached_by_data,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_size_reached_by_data,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_size_reached_by_data,The following statement contains a magic number: cache.PutRecord(i' new PrepareLogRecord(0' Guid.NewGuid()' _id' 0' 0' "test"' 1' DateTime.UtcNow'  					PrepareFlags.None' "type"' new byte[1024]' new byte[0]));
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_size_reached_by_data,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_size_reached_metadata,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_size_reached_metadata,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_size_reached_metadata,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_size_reached_metadata,The following statement contains a magic number: cache.PutRecord(i' new PrepareLogRecord(0' Guid.NewGuid()' _id' 0' 0' "test"' 1' DateTime.UtcNow'  					PrepareFlags.None' "type"' new byte[0]' new byte[1024]));
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,cache_removes_oldest_item_when_max_size_reached_metadata,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,empty_cache_has_zeroed_statistics,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,empty_cache_has_zeroed_statistics,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,empty_cache_has_zeroed_statistics,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_hits,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_hits,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_hits,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_hits,The following statement contains a magic number: cache.PutRecord(1' new PrepareLogRecord(1' Guid.NewGuid()' _id' 1' 0' "test"' 1' DateTime.UtcNow'  				PrepareFlags.None' "type"' new byte[0]' new byte[1024]));
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_misses,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_misses,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_misses,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_misses,The following statement contains a magic number: cache.PutRecord(1' new PrepareLogRecord(1' Guid.NewGuid()' _id' 1' 0' "test"' 1' DateTime.UtcNow'  				PrepareFlags.None' "type"' new byte[0]' new byte[1024]));
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_total_count,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_total_count,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_total_count,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_total_count,The following statement contains a magic number: cache.PutRecord(1' new PrepareLogRecord(1' Guid.NewGuid()' _id' 1' 0' "test"' 1' DateTime.UtcNow'  				PrepareFlags.None' "type"' new byte[0]' new byte[1024]));
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_total_size,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_total_size,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_total_size,The following statement contains a magic number: var cache = new DictionaryBasedCache(100' 1024 * 9);
Magic Number,EventStore.Core.Tests.Services.Storage,when_caching_read_items,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\when_caching_read_items.cs,statistics_are_updated_with_total_size,The following statement contains a magic number: var record = new PrepareLogRecord(1' Guid.NewGuid()' _id' 1' 0' "test"' 1' DateTime.UtcNow'  				PrepareFlags.None' "type"' new byte[0]' new byte[1024]);
Magic Number,EventStore.Core.Tests.Services.Storage,WriteEventsToIndexScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\WriteEventsToIndexScenario.cs,TestFixtureSetUp,The following statement contains a magic number: _readerPool = new ObjectPool<ITransactionFileReader>(  				"ReadIndex readers pool"' 5' 100'  				() => _tfReader);
Magic Number,EventStore.Core.Tests.Services.Storage,WriteEventsToIndexScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\WriteEventsToIndexScenario.cs,TestFixtureSetUp,The following statement contains a magic number: _readerPool = new ObjectPool<ITransactionFileReader>(  				"ReadIndex readers pool"' 5' 100'  				() => _tfReader);
Magic Number,EventStore.Core.Tests.Services.Storage,WriteEventsToIndexScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\WriteEventsToIndexScenario.cs,TestFixtureSetUp,The following statement contains a magic number: _indexBackend = new IndexBackend(_readerPool' 100000' 100000);
Magic Number,EventStore.Core.Tests.Services.Storage,WriteEventsToIndexScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\WriteEventsToIndexScenario.cs,TestFixtureSetUp,The following statement contains a magic number: _indexBackend = new IndexBackend(_readerPool' 100000' 100000);
Magic Number,EventStore.Core.Tests.Services.Storage,WriteEventsToIndexScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\WriteEventsToIndexScenario.cs,TestFixtureSetUp,The following statement contains a magic number: _indexReader = new IndexReader(_indexBackend' _tableIndex' new StreamMetadata(maxCount: 100000)' 100' false);
Magic Number,EventStore.Core.Tests.Services.Storage,WriteEventsToIndexScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\WriteEventsToIndexScenario.cs,TestFixtureSetUp,The following statement contains a magic number: _indexReader = new IndexReader(_indexBackend' _tableIndex' new StreamMetadata(maxCount: 100000)' 100' false);
Magic Number,EventStore.Core.Tests.Services.Storage.CheckCommitStartingAt,when_writing_prepares_in_wrong_order_and_committing_in_right_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\CheckCommitStartingAt\when_writing_prepares_in_wrong_order_and_committing_in_right_order.cs,WriteTestScenario,The following statement contains a magic number: _prepare1 = WritePrepare("ES"' expectedVersion: 2);
Magic Number,EventStore.Core.Tests.Services.Storage.CheckCommitStartingAt,when_writing_prepares_in_wrong_order_and_committing_in_right_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\CheckCommitStartingAt\when_writing_prepares_in_wrong_order_and_committing_in_right_order.cs,WriteTestScenario,The following statement contains a magic number: _prepare4 = WritePrepare("ES"' expectedVersion: 3);
Magic Number,EventStore.Core.Tests.Services.Storage.CheckCommitStartingAt,when_writing_prepares_in_wrong_order_and_committing_in_right_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\CheckCommitStartingAt\when_writing_prepares_in_wrong_order_and_committing_in_right_order.cs,WriteTestScenario,The following statement contains a magic number: WriteCommit(_prepare3.LogPosition' "ES"' eventNumber: 2);
Magic Number,EventStore.Core.Tests.Services.Storage.CheckCommitStartingAt,when_writing_prepares_in_wrong_order_and_committing_in_right_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\CheckCommitStartingAt\when_writing_prepares_in_wrong_order_and_committing_in_right_order.cs,check_commmit_on_expected_prepare_should_return_ok_decision,The following statement contains a magic number: Assert.AreEqual(2' res.CurrentVersion);
Magic Number,EventStore.Core.Tests.Services.Storage.CheckCommitStartingAt,when_writing_prepares_in_wrong_order_and_committing_in_right_order,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\CheckCommitStartingAt\when_writing_prepares_in_wrong_order_and_committing_in_right_order.cs,check_commmit_on_not_expected_prepare_should_return_wrong_expected_version,The following statement contains a magic number: Assert.AreEqual(2' res.CurrentVersion);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 1' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_and_1_stream_with_same_hash_and_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_1.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 1' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_different_hashes_spanning_through_multiple_chunks_in_db_with_1_stream_with_same_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_2.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 1' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_streams_with_same_hash_spanning_through_multiple_chunks_in_db_with_1_stream_with_different_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\deleting_stream_tests_3.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 1' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 5' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 5' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 6' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_spanning_through_multiple_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_spanning_through_multiple_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 6' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_with_1_hash_collision_and_1_stream_with_other_hash_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_with_1_hash_collision_and_1_stream_with_other_hash_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("S1"' 2' "bla1");
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_with_2_hash_collisions_and_mixed_order_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_with_2_hash_collisions_and_mixed_order_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("S1"' 2' "bla1");
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_with_version_numbers_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_with_version_numbers_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' firstEventNumber' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_with_version_numbers_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_with_version_numbers_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("KEEP"' firstEventNumber' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_with_version_numbers_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_with_version_numbers_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("KEEP"' secondEventNumber' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_with_version_numbers_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_with_version_numbers_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' secondEventNumber' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_with_version_numbers_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_with_version_numbers_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("KEEP"' thirdEventNumber' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_deleting_stream_with_version_numbers_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_deleting_stream_with_version_numbers_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' thirdEventNumber' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_hard_deleting_stream_with_log_version_0,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_hard_deleting_stream_with_log_version_0.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_hard_deleting_stream_with_log_version_0,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_hard_deleting_stream_with_log_version_0.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_reading_deleted_stream_written_with_old_log_record_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_reading_deleted_stream_written_with_old_log_record_version.cs,WriteTestScenario,The following statement contains a magic number: Writer.Write(new PrepareLogRecord(pos2' _id3' _id3' pos2' 0' "ES"' 2' DateTime.UtcNow'  					PrepareFlags.SingleWrite' "type"' new byte[0]' new byte[0])'  				out pos3);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_reading_deleted_stream_written_with_old_log_record_version,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_reading_deleted_stream_written_with_old_log_record_version.cs,WriteTestScenario,The following statement contains a magic number: Writer.Write(new CommitLogRecord(pos5' _id3' pos2' DateTime.UtcNow' 2' LogRecordVersion.LogRecordV0)'  				out pos6);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_writing_delete_prepare_but_no_commit_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_writing_delete_prepare_but_no_commit_read_index_should.cs,read_stream_events_forward_should_return_commited_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_writing_delete_prepare_but_no_commit_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_writing_delete_prepare_but_no_commit_read_index_should.cs,read_stream_events_forward_should_return_commited_records,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_writing_delete_prepare_but_no_commit_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_writing_delete_prepare_but_no_commit_read_index_should.cs,read_stream_events_backward_should_return_commited_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_writing_delete_prepare_but_no_commit_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_writing_delete_prepare_but_no_commit_read_index_should.cs,read_stream_events_backward_should_return_commited_records,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_writing_delete_prepare_but_no_commit_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_writing_delete_prepare_but_no_commit_read_index_should.cs,read_all_forward_should_return_all_stream_records_except_uncommited,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_writing_delete_prepare_but_no_commit_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_writing_delete_prepare_but_no_commit_read_index_should.cs,read_all_forward_should_return_all_stream_records_except_uncommited,The following statement contains a magic number: Assert.AreEqual(2' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_writing_delete_prepare_but_no_commit_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_writing_delete_prepare_but_no_commit_read_index_should.cs,read_all_backward_should_return_all_stream_records_except_uncommited,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_writing_delete_prepare_but_no_commit_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_writing_delete_prepare_but_no_commit_read_index_should.cs,read_all_backward_should_return_all_stream_records_except_uncommited,The following statement contains a magic number: Assert.AreEqual(2' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_writing_few_prepares_with_same_event_number_and_commiting_delete_on_this_version_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_writing_few_prepares_on_same_event_number_and_commiting_delete_on_this_version_read_index_should.cs,read_stream_events_forward_should_return_stream_deleted,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_writing_few_prepares_with_same_event_number_and_commiting_delete_on_this_version_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_writing_few_prepares_on_same_event_number_and_commiting_delete_on_this_version_read_index_should.cs,read_stream_events_backward_should_return_stream_deleted,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_writing_few_prepares_with_same_event_number_and_commiting_delete_on_this_version_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_writing_few_prepares_on_same_event_number_and_commiting_delete_on_this_version_read_index_should.cs,read_all_forward_should_return_all_stream_records_except_uncommited,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.DeletingStream,when_writing_few_prepares_with_same_event_number_and_commiting_delete_on_this_version_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\DeletingStream\when_writing_few_prepares_on_same_event_number_and_commiting_delete_on_this_version_read_index_should.cs,read_all_backward_should_return_all_stream_records_except_uncommited,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Idempotency,when_writing_a_second_batch_of_events_after_the_first_batch_has_been_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Idempotency\when_writing_a_second_batch_of_events_after_the_first_batch_has_been_replicated.cs,WriteEvents,The following statement contains a magic number: var transactionPosition = 1000;
Magic Number,EventStore.Core.Tests.Services.Storage.Idempotency,when_writing_a_second_batch_of_events_after_the_first_batch_has_been_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Idempotency\when_writing_a_second_batch_of_events_after_the_first_batch_has_been_replicated.cs,WriteEvents,The following statement contains a magic number: var commit = CreateCommitLogRecord(transactionPosition + 1000 * _numEvents' transactionPosition' expectedEventNumber + _numEvents);
Magic Number,EventStore.Core.Tests.Services.Storage.Idempotency,when_writing_a_second_batch_of_events_after_the_first_batch_has_been_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Idempotency\when_writing_a_second_batch_of_events_after_the_first_batch_has_been_replicated.cs,check_commit_with_same_expectedversion_but_different_non_first_event_id_should_return_corruptedidempotency_decision,The following statement contains a magic number: ids[ids.Count-2] = Guid.NewGuid();
Magic Number,EventStore.Core.Tests.Services.Storage.Idempotency,when_writing_a_second_batch_of_events_after_the_first_batch_has_not_yet_been_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Idempotency\when_writing_a_second_batch_of_events_after_the_first_batch_has_not_yet_been_replicated.cs,WriteEvents,The following statement contains a magic number: var transactionPosition = 1000;
Magic Number,EventStore.Core.Tests.Services.Storage.Idempotency,when_writing_a_second_batch_of_events_after_the_first_batch_has_not_yet_been_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Idempotency\when_writing_a_second_batch_of_events_after_the_first_batch_has_not_yet_been_replicated.cs,WriteEvents,The following statement contains a magic number: var commit = CreateCommitLogRecord(transactionPosition + 1000 * _numEvents' transactionPosition' expectedEventNumber + _numEvents);
Magic Number,EventStore.Core.Tests.Services.Storage.Idempotency,when_writing_a_second_batch_of_events_after_the_first_batch_has_not_yet_been_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Idempotency\when_writing_a_second_batch_of_events_after_the_first_batch_has_not_yet_been_replicated.cs,check_commit_with_same_expectedversion_but_different_non_first_event_id_should_return_corruptedidempotency_decision,The following statement contains a magic number: ids[ids.Count-2] = Guid.NewGuid();
Magic Number,EventStore.Core.Tests.Services.Storage.Idempotency,when_writing_a_second_event_after_the_first_event_has_been_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Idempotency\when_writing_a_second_event_after_the_first_event_has_been_replicated.cs,WriteEvents,The following statement contains a magic number: var transactionPosition = 1000;
Magic Number,EventStore.Core.Tests.Services.Storage.Idempotency,when_writing_a_second_event_after_the_first_event_has_not_yet_been_replicated,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Idempotency\when_writing_a_second_event_after_the_first_event_has_not_yet_been_replicated.cs,WriteEvents,The following statement contains a magic number: var transactionPosition = 1000;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: var metadata = string.Format(@"{{""$maxAge"":{0}'""$maxCount"":4}}"'  				(int)TimeSpan.FromMinutes(10).TotalSeconds);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' "bla1"' now.AddMinutes(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' "bla1"' now.AddMinutes(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' "bla1"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' "bla1"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddMinutes(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddMinutes(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddMinutes(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,forward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,forward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(3' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r6' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(3' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r1' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: var metadata = string.Format(@"{{""$maxAge"":{0}'""$maxCount"":3}}"'  				(int)TimeSpan.FromMinutes(60).TotalSeconds);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' "bla1"' now.AddMinutes(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' "bla1"' now.AddMinutes(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddMinutes(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddMinutes(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddMinutes(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,forward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,forward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,forward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(4' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r5' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r6' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(4' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r1' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: var metadata = string.Format(@"{{""$maxAge"":{0}}}"' (int)TimeSpan.FromMinutes(10).TotalSeconds);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' "bla1"' now.AddMinutes(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' "bla1"' now.AddMinutes(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' "bla1"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' "bla1"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddMinutes(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddMinutes(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddMinutes(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,forward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,forward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(3' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r6' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(3' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxage_specified.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r1' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,single_event_read_doesnt_return_old_events_and_return_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,single_event_read_doesnt_return_old_events_and_return_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,single_event_read_doesnt_return_old_events_and_return_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: Assert.AreEqual(4' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: Assert.AreEqual(_r5' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(4' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r3' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(5' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r5' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r6' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(5' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_maxcount_specified.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r1' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,single_event_read_doesnt_return_old_events_and_return_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,single_event_read_doesnt_return_old_events_and_return_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,single_event_read_doesnt_return_old_events_and_return_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: Assert.AreEqual(4' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: Assert.AreEqual(_r5' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(4' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r3' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(5' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r5' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,read_all_forward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r6' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(5' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.AfterScavenge,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\AfterScavenge\when_having_stream_with_truncatebefore_specified.cs,read_all_backward_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r1' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,WriteTestScenario,The following statement contains a magic number: var metadata = string.Format(@"{{""$maxAge"":{0}}}"' (int)TimeSpan.FromMinutes(20).TotalSeconds);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,WriteTestScenario,The following statement contains a magic number: WriteStreamMetadata("ES"' 0' metadata' now.AddMinutes(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' "bla"' now.AddMinutes(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' "bla"' now.AddMinutes(-25));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,WriteTestScenario,The following statement contains a magic number: _event2 = WriteSingleEvent("ES"' 2' "bla"' now.AddMinutes(-15));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,WriteTestScenario,The following statement contains a magic number: _event2 = WriteSingleEvent("ES"' 2' "bla"' now.AddMinutes(-15));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 3' "bla"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 3' "bla"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 4' "bla"' now.AddMinutes(-3));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 4' "bla"' now.AddMinutes(-3));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_start_to_expired_next_event_number_is_expired_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_start_to_expired_next_event_number_is_expired_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_start_to_expired_next_event_number_is_expired_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 0' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 1' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event4' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 1' 6);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event4' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 7' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 7' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_end_to_maxage_bound_next_event_number_is_maxage_bound_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_end_to_maxage_bound_next_event_number_is_maxage_bound_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_end_to_maxage_bound_next_event_number_is_maxage_bound_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_end_to_maxage_bound_next_event_number_is_maxage_bound_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_end_to_maxage_bound_next_event_number_is_maxage_bound_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event2' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_expired_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_expired_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_expired_to_before_start_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 1' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_expired_to_before_start_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 10' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 10' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: var metadata = string.Format(@"{{""$maxAge"":{0}'""$maxCount"":5}}"'  				(int)TimeSpan.FromMinutes(20).TotalSeconds);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' "bla"' now.AddMinutes(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' "bla"' now.AddMinutes(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' "bla"' now.AddMinutes(-25));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' "bla"' now.AddMinutes(-25));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 3' "bla"' now.AddMinutes(-15));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 3' "bla"' now.AddMinutes(-15));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 4' "bla"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 4' "bla"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _event5 = WriteSingleEvent("ES"' 5' "bla"' now.AddMinutes(-3));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _event5 = WriteSingleEvent("ES"' 5' "bla"' now.AddMinutes(-3));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_start_to_expired_next_event_number_is_expired_by_age_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_start_to_expired_next_event_number_is_expired_by_age_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_start_to_expired_next_event_number_is_expired_by_age_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 0' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 2' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 2' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 2' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 2' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(6' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event5' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 2' 6);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 2' 6);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(6' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event5' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 7' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 7' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(6' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 5' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 5' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_end_to_maxage_bound_next_event_number_is_maxage_bound_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 5' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_end_to_maxage_bound_next_event_number_is_maxage_bound_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 5' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_end_to_maxage_bound_next_event_number_is_maxage_bound_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_end_to_maxage_bound_next_event_number_is_maxage_bound_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_end_to_maxage_bound_next_event_number_is_maxage_bound_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_end_to_maxage_bound_next_event_number_is_maxage_bound_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event3' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_expired_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 2' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_expired_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 2' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_expired_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_expired_to_before_start_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 2' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_expired_to_before_start_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 2' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_expired_to_before_start_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 10' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 10' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_age_is_more_strict.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: var metadata = string.Format(@"{{""$maxAge"":{0}'""$maxCount"":3}}"'  				(int)TimeSpan.FromMinutes(61).TotalSeconds);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: WriteStreamMetadata("ES"' 0' metadata' now.AddMinutes(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' "bla"' now.AddMinutes(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' "bla"' now.AddMinutes(-25));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _event2 = WriteSingleEvent("ES"' 2' "bla"' now.AddMinutes(-15));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _event2 = WriteSingleEvent("ES"' 2' "bla"' now.AddMinutes(-15));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 3' "bla"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 3' "bla"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 4' "bla"' now.AddMinutes(-3));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 4' "bla"' now.AddMinutes(-3));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_start_to_expired_next_event_number_is_first_active_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_start_to_expired_next_event_number_is_first_active_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_start_to_expired_next_event_number_is_first_active_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 0' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 1' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event4' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 1' 6);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event4' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 7' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 7' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event2' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_expired_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_expired_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_expired_to_before_start_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 1' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_expired_to_before_start_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 10' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 10' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_age_and_max_count_and_max_count_is_more_strict.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 2' "bla");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 3' "bla");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,WriteTestScenario,The following statement contains a magic number: _event5 = WriteSingleEvent("ES"' 4' "bla");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_start_to_expired_next_event_number_is_first_active_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_start_to_expired_next_event_number_is_first_active_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_start_to_expired_next_event_number_is_first_active_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 0' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 1' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event5' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 1' 6);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event5' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 7' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 7' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event3' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_expired_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_expired_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_expired_to_before_start_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 1' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_expired_to_before_start_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 10' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 10' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_max_count.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,WriteTestScenario,The following statement contains a magic number: _event2 = WriteSingleEvent("ES"' 2' "bla");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 3' "bla");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 4' "bla");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_start_to_middle_next_event_number_is_middle_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_start_to_middle_next_event_number_is_middle_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_start_to_middle_next_event_number_is_middle_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_start_to_middle_next_event_number_is_middle_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_start_to_middle_next_event_number_is_middle_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event2' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_middle_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 1' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_middle_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_middle_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_middle_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_middle_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event3' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_middle_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event4' records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_middle_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 1' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_middle_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_middle_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_middle_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_middle_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event3' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_middle_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event4' records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 6' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 6' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_forward_from_the_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_the_end_to_middle_next_event_number_is_middle_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_the_end_to_middle_next_event_number_is_middle_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_the_end_to_middle_next_event_number_is_middle_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_the_end_to_middle_next_event_number_is_middle_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_the_end_to_middle_next_event_number_is_middle_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event2' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_middle_to_start_next_event_number_is_minus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_middle_to_start_next_event_number_is_minus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_middle_to_start_next_event_number_is_minus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_middle_to_start_next_event_number_is_minus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_middle_to_start_next_event_number_is_minus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event0' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_middle_to_before_start_next_event_number_is_minus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 2' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_middle_to_before_start_next_event_number_is_minus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 2' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_middle_to_before_start_next_event_number_is_minus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_middle_to_before_start_next_event_number_is_minus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_middle_to_before_start_next_event_number_is_minus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event0' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_out_of_bounds_to_middle_next_event_number_is_middle_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 6' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_out_of_bounds_to_middle_next_event_number_is_middle_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 6' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_out_of_bounds_to_middle_next_event_number_is_middle_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_out_of_bounds_to_middle_next_event_number_is_middle_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_out_of_bounds_to_middle_next_event_number_is_middle_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event2' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 10' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 10' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_no_max_age_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_no_max_age_max_count.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 2' "bla");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 3' "bla");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,WriteTestScenario,The following statement contains a magic number: _event5 = WriteSingleEvent("ES"' 4' "bla");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_start_to_expired_next_event_number_is_first_active_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_start_to_expired_next_event_number_is_first_active_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_start_to_expired_next_event_number_is_first_active_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 0' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_start_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_expired_to_active_next_event_number_is_last_read_event_plus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 1' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_expired_to_end_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event5' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 1' 6);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_expired_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event5' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 7' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 7' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(5' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_forward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_plus_1_and_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_end_to_active_next_event_number_is_last_read_event_minus_1_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 4' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_end_to_maxcount_bound_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(_event3' records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 3' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_active_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(2' records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_expired_to_expired_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_expired_to_expired_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_expired_to_before_start_its_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 1' 5);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_expired_to_before_start_its_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 10' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' 10' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.NextEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount.ReadRangeAndNextEventNumber,when_reading_stream_with_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\ReadRangeAndNextEventNumber\when_reading_stream_with_start_from.cs,on_read_backward_from_out_of_bounds_to_out_of_bounds_next_event_number_is_end_and_its_not_end_of_stream,The following statement contains a magic number: Assert.AreEqual(4' res.LastEventNumber);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: var metadata1 = string.Format(@"{{""$maxAge"":{0}}}"' (int)TimeSpan.FromMinutes(25).TotalSeconds);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: _r12 = WriteSingleEvent("ES1"' 0' "bla1"' now.AddMinutes(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: _r13 = WriteSingleEvent("ES1"' 1' "bla1"' now.AddMinutes(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: _r22 = WriteSingleEvent("ES2"' 0' "bla1"' now.AddMinutes(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: _r23 = WriteSingleEvent("ES2"' 1' "bla1"' now.AddMinutes(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: _r14 = WriteSingleEvent("ES1"' 2' "bla1"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: _r14 = WriteSingleEvent("ES1"' 2' "bla1"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: _r24 = WriteSingleEvent("ES2"' 2' "bla1"' now.AddMinutes(-10));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: _r24 = WriteSingleEvent("ES2"' 2' "bla1"' now.AddMinutes(-10));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: _r15 = WriteSingleEvent("ES1"' 3' "bla1"' now.AddMinutes(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: _r15 = WriteSingleEvent("ES1"' 3' "bla1"' now.AddMinutes(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: _r16 = WriteSingleEvent("ES1"' 4' "bla1"' now.AddMinutes(-2));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: _r16 = WriteSingleEvent("ES1"' 4' "bla1"' now.AddMinutes(-2));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: _r25 = WriteSingleEvent("ES2"' 3' "bla1"' now.AddMinutes(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,WriteTestScenario,The following statement contains a magic number: _r26 = WriteSingleEvent("ES2"' 4' "bla1"' now.AddMinutes(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones_for_stream_1,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES1"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones_for_stream_1,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES1"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones_for_stream_1,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES1"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones_for_stream_2,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES2"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones_for_stream_2,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES2"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones_for_stream_2,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES2"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,forward_range_read_doesnt_return_expired_records_for_stream_1,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES1"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,forward_range_read_doesnt_return_expired_records_for_stream_1,The following statement contains a magic number: Assert.AreEqual(4' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,forward_range_read_doesnt_return_expired_records_for_stream_1,The following statement contains a magic number: Assert.AreEqual(_r15' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,forward_range_read_doesnt_return_expired_records_for_stream_1,The following statement contains a magic number: Assert.AreEqual(_r16' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,forward_range_read_doesnt_return_expired_records_for_stream_2,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES2"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,forward_range_read_doesnt_return_expired_records_for_stream_2,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,backward_range_read_doesnt_return_expired_records_for_stream_1,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES1"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,backward_range_read_doesnt_return_expired_records_for_stream_1,The following statement contains a magic number: Assert.AreEqual(4' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,backward_range_read_doesnt_return_expired_records_for_stream_1,The following statement contains a magic number: Assert.AreEqual(_r14' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,backward_range_read_doesnt_return_expired_records_for_stream_1,The following statement contains a magic number: Assert.AreEqual(_r13' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,backward_range_read_doesnt_return_expired_records_for_stream_2,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES2"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,backward_range_read_doesnt_return_expired_records_for_stream_2,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(12' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r12' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r13' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r22' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r23' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r14' records[6].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r24' records[7].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r15' records[8].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r16' records[9].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r25' records[10].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r26' records[11].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(12' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r11' records[11].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r21' records[10].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r12' records[9].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r13' records[8].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r22' records[7].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r23' records[6].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r14' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r24' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r15' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_one_stream_with_maxage_and_other_stream_with_maxcount_and_streams_have_same_hash.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r16' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: var metadata = string.Format(@"{{""$maxAge"":{0}'""$maxCount"":4}}"'  				(int)TimeSpan.FromMinutes(10).TotalSeconds);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' 0' "bla1"' now.AddMinutes(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' 1' "bla1"' now.AddMinutes(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddMinutes(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddMinutes(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddMinutes(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,forward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,forward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxage_more_strict.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: var metadata = string.Format(@"{{""$maxAge"":{0}'""$maxCount"":3}}"'  				(int)TimeSpan.FromMinutes(60).TotalSeconds);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' 0' "bla1"' now.AddMinutes(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' 1' "bla1"' now.AddMinutes(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddMinutes(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddMinutes(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddMinutes(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,forward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,forward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,forward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_both_maxage_and_maxcount_specified_with_maxcount_more_strict.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: var metadata = string.Format(@"{{""$maxAge"":{0}}}"' (int)TimeSpan.FromMinutes(10).TotalSeconds);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' 0' "bla1"' now.AddMinutes(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' 1' "bla1"' now.AddMinutes(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddMinutes(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddMinutes(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddMinutes(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddMinutes(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,single_event_read_doesnt_return_expired_events_and_returns_all_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,forward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,forward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxage_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxage_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,single_event_read_doesnt_return_old_events_and_return_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,single_event_read_doesnt_return_old_events_and_return_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,single_event_read_doesnt_return_old_events_and_return_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: Assert.AreEqual(4' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: Assert.AreEqual(_r5' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(4' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r3' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified_and_long_transactions_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified_and_long_transactions_written.cs,WriteTestScenario,The following statement contains a magic number: _records = new EventRecord[9];
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified_and_long_transactions_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified_and_long_transactions_written.cs,WriteTestScenario,The following statement contains a magic number: WriteTransaction(-1' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified_and_long_transactions_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified_and_long_transactions_written.cs,WriteTestScenario,The following statement contains a magic number: WriteTransaction(2' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified_and_long_transactions_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified_and_long_transactions_written.cs,WriteTestScenario,The following statement contains a magic number: WriteTransaction(2' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified_and_long_transactions_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified_and_long_transactions_written.cs,WriteTestScenario,The following statement contains a magic number: WriteTransaction(-1 + 3 + 2' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified_and_long_transactions_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified_and_long_transactions_written.cs,WriteTestScenario,The following statement contains a magic number: WriteTransaction(-1 + 3 + 2' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified_and_long_transactions_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified_and_long_transactions_written.cs,WriteTestScenario,The following statement contains a magic number: WriteTransaction(-1 + 3 + 2' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified_and_long_transactions_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified_and_long_transactions_written.cs,forward_range_read_returns_last_transaction_events_and_doesnt_return_expired_ones,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified_and_long_transactions_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified_and_long_transactions_written.cs,forward_range_read_returns_last_transaction_events_and_doesnt_return_expired_ones,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified_and_long_transactions_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified_and_long_transactions_written.cs,forward_range_read_returns_last_transaction_events_and_doesnt_return_expired_ones,The following statement contains a magic number: Assert.AreEqual(_records[7]' result.Records[0]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_maxcount_specified_and_long_transactions_written,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_maxcount_specified_and_long_transactions_written.cs,forward_range_read_returns_last_transaction_events_and_doesnt_return_expired_ones,The following statement contains a magic number: Assert.AreEqual(_records[8]' result.Records[1]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1");
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,single_event_read_doesnt_return_old_events_and_return_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,single_event_read_doesnt_return_old_events_and_return_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,single_event_read_doesnt_return_old_events_and_return_actual_ones,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,forward_range_read_doesnt_return_old_records,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,backward_range_read_doesnt_return_expired_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,read_all_forward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\when_having_stream_with_truncatebefore_specified.cs,read_all_backward_returns_all_records_including_expired_ones,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r1 = WriteStreamMetadata("ES"' 0' metadata' now.AddSeconds(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' 0' "bla1"' now.AddSeconds(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' 1' "bla1"' now.AddSeconds(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddSeconds(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,forward_range_read_returns_all_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r5' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,backward_range_read_returns_all_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r2' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,read_all_forward_returns_all_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,read_all_backward_returns_all_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_age.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r1 = WriteStreamMetadata("ES"' 0' metadata' now.AddSeconds(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' 0' "bla1"' now.AddSeconds(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' 1' "bla1"' now.AddSeconds(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddSeconds(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,forward_range_read_returns_all_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r5' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,backward_range_read_returns_all_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r2' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,read_all_forward_returns_all_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,read_all_backward_returns_all_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_max_count.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r1 = WriteStreamMetadata("ES"' 0' metadata' now.AddSeconds(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' 0' "bla1"' now.AddSeconds(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' 1' "bla1"' now.AddSeconds(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddSeconds(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,single_event_read_returns_no_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,single_event_read_returns_no_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,single_event_read_returns_no_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,forward_range_read_returns_no_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,backward_range_read_returns_no_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,read_all_forward_returns_all_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,read_all_backward_returns_all_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_softdelete_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_big_start_from.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' 0' "bla1"' now.AddSeconds(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' 1' "bla1"' now.AddSeconds(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddSeconds(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_single_event_read_invalid_value_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_single_event_read_invalid_value_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_single_event_read_invalid_value_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_forward_range_read_invalid_value_is_ignored,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_forward_range_read_invalid_value_is_ignored,The following statement contains a magic number: Assert.AreEqual(4' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_forward_range_read_invalid_value_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r5' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_forward_range_read_invalid_value_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_backward_range_read_invalid_value_is_ignored,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_backward_range_read_invalid_value_is_ignored,The following statement contains a magic number: Assert.AreEqual(4' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_backward_range_read_invalid_value_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_backward_range_read_invalid_value_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_read_all_forward_both_values_are_ignored,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_read_all_forward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_read_all_forward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_read_all_forward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_read_all_forward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_read_all_forward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_read_all_backward_both_values_are_ignored,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_read_all_backward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_read_all_backward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_read_all_backward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_read_all_backward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_age_and_normal_max_count.cs,on_read_all_backward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' 0' "bla1"' now.AddSeconds(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' 1' "bla1"' now.AddSeconds(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddSeconds(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_single_event_read_invalid_value_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_single_event_read_invalid_value_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_single_event_read_invalid_value_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_forward_range_read_invalid_value_is_ignored,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_forward_range_read_invalid_value_is_ignored,The following statement contains a magic number: Assert.AreEqual(4' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_forward_range_read_invalid_value_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r5' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_forward_range_read_invalid_value_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_backward_range_read_invalid_value_is_ignored,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_backward_range_read_invalid_value_is_ignored,The following statement contains a magic number: Assert.AreEqual(4' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_backward_range_read_invalid_value_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_backward_range_read_invalid_value_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_read_all_forward_both_values_are_ignored,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_read_all_forward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_read_all_forward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_read_all_forward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_read_all_forward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_read_all_forward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_read_all_backward_both_values_are_ignored,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_read_all_backward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_read_all_backward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_read_all_backward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_read_all_backward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_max_count_and_normal_max_age.cs,on_read_all_backward_both_values_are_ignored,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,WriteTestScenario,The following statement contains a magic number: _r1 = WriteStreamMetadata("ES"' 0' metadata' now.AddSeconds(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' 0' "bla1"' now.AddSeconds(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' 1' "bla1"' now.AddSeconds(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddSeconds(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_single_event_read_all_metadata_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_single_event_read_all_metadata_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_single_event_read_all_metadata_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r5' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r2' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_invalid_metadata,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_invalid_metadata.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r1 = WriteStreamMetadata("ES"' 0' metadata' now.AddSeconds(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' 0' "bla1"' now.AddSeconds(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' 1' "bla1"' now.AddSeconds(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddSeconds(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,forward_range_read_returns_all_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r5' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,backward_range_read_returns_all_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r2' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,read_all_forward_returns_all_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,read_all_backward_returns_all_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r1 = WriteStreamMetadata("ES"' 0' metadata' now.AddSeconds(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' 0' "bla1"' now.AddSeconds(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' 1' "bla1"' now.AddSeconds(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddSeconds(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_single_event_read_all_metadata_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_single_event_read_all_metadata_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_single_event_read_all_metadata_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r5' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r2' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_age_and_normal_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_age_and_normal_max_count.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r1 = WriteStreamMetadata("ES"' 0' metadata' now.AddSeconds(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' 0' "bla1"' now.AddSeconds(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' 1' "bla1"' now.AddSeconds(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddSeconds(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,forward_range_read_returns_all_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r5' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,backward_range_read_returns_all_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r2' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,read_all_forward_returns_all_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,read_all_backward_returns_all_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r1 = WriteStreamMetadata("ES"' 0' metadata' now.AddSeconds(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' 0' "bla1"' now.AddSeconds(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' 1' "bla1"' now.AddSeconds(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddSeconds(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_single_event_read_all_metadata_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_single_event_read_all_metadata_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_single_event_read_all_metadata_is_ignored,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r5' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_forward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r2' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_backward_range_read_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_read_all_forward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_max_count_and_normal_max_age,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_max_count_and_normal_max_age.cs,on_read_all_backward_all_metadata_is_ignored,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r1 = WriteStreamMetadata("ES"' 0' metadata' now.AddSeconds(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' 0' "bla1"' now.AddSeconds(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' 1' "bla1"' now.AddSeconds(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' 2' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' 3' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,WriteTestScenario,The following statement contains a magic number: _r6 = WriteSingleEvent("ES"' 4' "bla1"' now.AddSeconds(-1));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,single_event_read_returns_all_records,The following statement contains a magic number: result = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,forward_range_read_returns_all_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r5' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,forward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,backward_range_read_returns_all_records,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(5' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r2' result.Records[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' result.Records[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,backward_range_read_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,read_all_forward_returns_all_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,read_all_backward_returns_all_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_too_big_truncatebefore,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_too_big_start_from.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: _r1 = WriteStreamMetadata("ES"' 0' metadata' now.AddSeconds(-100));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: _r2 = WriteSingleEvent("ES"' first' "bla1"' now.AddSeconds(-50));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: _r3 = WriteSingleEvent("ES"' second' "bla1"' now.AddSeconds(-20));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: _r4 = WriteSingleEvent("ES"' third' "bla1"' now.AddSeconds(-11));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,WriteTestScenario,The following statement contains a magic number: _r5 = WriteSingleEvent("ES"' fourth' "bla1"' now.AddSeconds(-5));
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,forward_range_read_returns_records_after_truncate_before,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' first' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,forward_range_read_returns_records_after_truncate_before,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,forward_range_read_returns_records_after_truncate_before,The following statement contains a magic number: Assert.AreEqual(_r6' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,backward_range_read_returns_records_after_truncate_before,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,backward_range_read_returns_records_after_truncate_before,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,backward_range_read_returns_records_after_truncate_before,The following statement contains a magic number: Assert.AreEqual(_r4' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,read_all_forward_returns_all_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,read_all_forward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r6' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,read_all_backward_returns_all_records,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r4' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.MaxAgeMaxCount,with_truncatebefore_greater_than_int_maxvalue,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\MaxAgeMaxCount\with_truncatebefore_greater_than_int_maxvalue.cs,read_all_backward_returns_all_records,The following statement contains a magic number: Assert.AreEqual(_r1' records[5].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_deleted_stream_and_no_metastream_metastream_is_declared_deleted_as_well,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_deleted_stream_and_no_metastream_metastream_is_declared_deleted_as_well.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "test")'  					Rec.Commit(0' "test")'  					Rec.Delete(2' "test")'  					Rec.Commit(2' "test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_deleted_stream_and_no_metastream_metastream_is_declared_deleted_as_well,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_deleted_stream_and_no_metastream_metastream_is_declared_deleted_as_well.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "test")'  					Rec.Commit(0' "test")'  					Rec.Delete(2' "test")'  					Rec.Commit(2' "test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_deleted_stream_and_no_metastream_metastream_is_declared_deleted_as_well,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_deleted_stream_and_no_metastream_metastream_is_declared_deleted_as_well.cs,read_stream_events_forward_reports_deleted_metastream,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.StreamDeleted' ReadIndex.ReadStreamEventsForward("$$test"' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_deleted_stream_and_no_metastream_metastream_is_declared_deleted_as_well,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_deleted_stream_and_no_metastream_metastream_is_declared_deleted_as_well.cs,read_stream_events_backward_reports_deleted_metastream,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.StreamDeleted'  				ReadIndex.ReadStreamEventsBackward("$$test"' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_deleted_stream_its_metastream_is_deleted_as_well,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_deleted_stream_its_metastream_is_deleted_as_well.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "test")'  					Rec.Commit(0' "test")'  					Rec.Prepare(1' "$$test"' metadata: new StreamMetadata(2' null' null' null' null))'  					Rec.Commit(1' "$$test")'  					Rec.Delete(2' "test")'  					Rec.Commit(2' "test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_deleted_stream_its_metastream_is_deleted_as_well,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_deleted_stream_its_metastream_is_deleted_as_well.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "test")'  					Rec.Commit(0' "test")'  					Rec.Prepare(1' "$$test"' metadata: new StreamMetadata(2' null' null' null' null))'  					Rec.Commit(1' "$$test")'  					Rec.Delete(2' "test")'  					Rec.Commit(2' "test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_deleted_stream_its_metastream_is_deleted_as_well,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_deleted_stream_its_metastream_is_deleted_as_well.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "test")'  					Rec.Commit(0' "test")'  					Rec.Prepare(1' "$$test"' metadata: new StreamMetadata(2' null' null' null' null))'  					Rec.Commit(1' "$$test")'  					Rec.Delete(2' "test")'  					Rec.Commit(2' "test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_deleted_stream_its_metastream_is_deleted_as_well,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_deleted_stream_its_metastream_is_deleted_as_well.cs,read_stream_events_forward_reports_deleted_metastream,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.StreamDeleted' ReadIndex.ReadStreamEventsForward("$$test"' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_deleted_stream_its_metastream_is_deleted_as_well,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_deleted_stream_its_metastream_is_deleted_as_well.cs,read_stream_events_backward_reports_deleted_metastream,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.StreamDeleted'  				ReadIndex.ReadStreamEventsBackward("$$test"' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "$$test"' "0"' metadata: new StreamMetadata(maxCount: 10))'  					Rec.Prepare(0' "$$test"' "1"' metadata: new StreamMetadata(maxCount: 9))'  					Rec.Prepare(0' "$$test"' "2"' metadata: new StreamMetadata(maxCount: 8))'  					Rec.Prepare(0' "$$test"' "3"' metadata: new StreamMetadata(maxCount: 7))'  					Rec.Prepare(0' "$$test"' "4"' metadata: new StreamMetadata(maxCount: 6))'  					Rec.Commit(0' "$$test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "$$test"' "0"' metadata: new StreamMetadata(maxCount: 10))'  					Rec.Prepare(0' "$$test"' "1"' metadata: new StreamMetadata(maxCount: 9))'  					Rec.Prepare(0' "$$test"' "2"' metadata: new StreamMetadata(maxCount: 8))'  					Rec.Prepare(0' "$$test"' "3"' metadata: new StreamMetadata(maxCount: 7))'  					Rec.Prepare(0' "$$test"' "4"' metadata: new StreamMetadata(maxCount: 6))'  					Rec.Commit(0' "$$test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "$$test"' "0"' metadata: new StreamMetadata(maxCount: 10))'  					Rec.Prepare(0' "$$test"' "1"' metadata: new StreamMetadata(maxCount: 9))'  					Rec.Prepare(0' "$$test"' "2"' metadata: new StreamMetadata(maxCount: 8))'  					Rec.Prepare(0' "$$test"' "3"' metadata: new StreamMetadata(maxCount: 7))'  					Rec.Prepare(0' "$$test"' "4"' metadata: new StreamMetadata(maxCount: 6))'  					Rec.Commit(0' "$$test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "$$test"' "0"' metadata: new StreamMetadata(maxCount: 10))'  					Rec.Prepare(0' "$$test"' "1"' metadata: new StreamMetadata(maxCount: 9))'  					Rec.Prepare(0' "$$test"' "2"' metadata: new StreamMetadata(maxCount: 8))'  					Rec.Prepare(0' "$$test"' "3"' metadata: new StreamMetadata(maxCount: 7))'  					Rec.Prepare(0' "$$test"' "4"' metadata: new StreamMetadata(maxCount: 6))'  					Rec.Commit(0' "$$test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "$$test"' "0"' metadata: new StreamMetadata(maxCount: 10))'  					Rec.Prepare(0' "$$test"' "1"' metadata: new StreamMetadata(maxCount: 9))'  					Rec.Prepare(0' "$$test"' "2"' metadata: new StreamMetadata(maxCount: 8))'  					Rec.Prepare(0' "$$test"' "3"' metadata: new StreamMetadata(maxCount: 7))'  					Rec.Prepare(0' "$$test"' "4"' metadata: new StreamMetadata(maxCount: 6))'  					Rec.Commit(0' "$$test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last.cs,last_event_stream_number_is_correct,The following statement contains a magic number: Assert.AreEqual(4' ReadIndex.GetStreamLastEventNumber("$$test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last.cs,single_event_read_returns_only_last_event,The following statement contains a magic number: Assert.AreEqual(ReadEventResult.NotFound' ReadIndex.ReadEvent("$$test"' 2).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last.cs,single_event_read_returns_only_last_event,The following statement contains a magic number: Assert.AreEqual(ReadEventResult.NotFound' ReadIndex.ReadEvent("$$test"' 3).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last.cs,single_event_read_returns_only_last_event,The following statement contains a magic number: var res = ReadIndex.ReadEvent("$$test"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last.cs,stream_read_forward_returns_only_last_event,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("$$test"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last.cs,stream_read_backward_returns_only_last_event,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("$$test"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_just_last.cs,original_stream_metadata_is_taken_from_last_metaevent,The following statement contains a magic number: Assert.AreEqual(6' metadata.MaxCount);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' "$$test"' "0"' metadata: new StreamMetadata(10' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "1"' metadata: new StreamMetadata(9' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "2"' metadata: new StreamMetadata(8' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "3"' metadata: new StreamMetadata(7' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "4"' metadata: new StreamMetadata(6' null' null' null' null))'  					Rec.Commit(0' "$$test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' "$$test"' "0"' metadata: new StreamMetadata(10' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "1"' metadata: new StreamMetadata(9' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "2"' metadata: new StreamMetadata(8' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "3"' metadata: new StreamMetadata(7' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "4"' metadata: new StreamMetadata(6' null' null' null' null))'  					Rec.Commit(0' "$$test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' "$$test"' "0"' metadata: new StreamMetadata(10' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "1"' metadata: new StreamMetadata(9' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "2"' metadata: new StreamMetadata(8' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "3"' metadata: new StreamMetadata(7' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "4"' metadata: new StreamMetadata(6' null' null' null' null))'  					Rec.Commit(0' "$$test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' "$$test"' "0"' metadata: new StreamMetadata(10' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "1"' metadata: new StreamMetadata(9' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "2"' metadata: new StreamMetadata(8' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "3"' metadata: new StreamMetadata(7' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "4"' metadata: new StreamMetadata(6' null' null' null' null))'  					Rec.Commit(0' "$$test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' "$$test"' "0"' metadata: new StreamMetadata(10' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "1"' metadata: new StreamMetadata(9' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "2"' metadata: new StreamMetadata(8' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "3"' metadata: new StreamMetadata(7' null' null' null' null))'  					Rec.Prepare(0' "$$test"' "4"' metadata: new StreamMetadata(6' null' null' null' null))'  					Rec.Commit(0' "$$test"))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,last_event_stream_number_is_correct,The following statement contains a magic number: Assert.AreEqual(4' ReadIndex.GetStreamLastEventNumber("$$test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,single_event_read_returns_last_two_events,The following statement contains a magic number: Assert.AreEqual(ReadEventResult.NotFound' ReadIndex.ReadEvent("$$test"' 2).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,single_event_read_returns_last_two_events,The following statement contains a magic number: var res = ReadIndex.ReadEvent("$$test"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,single_event_read_returns_last_two_events,The following statement contains a magic number: res = ReadIndex.ReadEvent("$$test"' 4);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,stream_read_forward_returns_last_two_events,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("$$test"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,stream_read_forward_returns_last_two_events,The following statement contains a magic number: Assert.AreEqual(2' res.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,stream_read_backward_returns_last_two_events,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("$$test"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,stream_read_backward_returns_last_two_events,The following statement contains a magic number: Assert.AreEqual(2' res.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,metastream_metadata_is_correct,The following statement contains a magic number: Assert.AreEqual(2' metadata.MaxCount);
Magic Number,EventStore.Core.Tests.Services.Storage.Metastreams,when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Metastreams\when_having_multiple_metaevents_in_metastream_and_read_index_is_set_to_keep_last_2.cs,original_stream_metadata_is_taken_from_last_metaevent,The following statement contains a magic number: Assert.AreEqual(6' metadata.MaxCount);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: _event1 = WriteSingleEvent("account--696193173"' 0' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("account--696193173"' 0' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: _event2 = WriteSingleEvent("LPN-FC002_LPK51001"' 0' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("LPN-FC002_LPK51001"' 0' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("account--696193173"' 1' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("account--696193173"' 1' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("LPN-FC002_LPK51001"' 1' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("LPN-FC002_LPK51001"' 1' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: _event5 = WriteSingleEvent("account--696193173"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: _event5 = WriteSingleEvent("account--696193173"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("account--696193173"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("account--696193173"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: _event6 = WriteSingleEvent("LPN-FC002_LPK51001"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: _event6 = WriteSingleEvent("LPN-FC002_LPK51001"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("LPN-FC002_LPK51001"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("LPN-FC002_LPK51001"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: _event7 = WriteSingleEvent("account--696193173"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: _event7 = WriteSingleEvent("account--696193173"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("account--696193173"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("account--696193173"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: _event8 = WriteSingleEvent("LPN-FC002_LPK51001"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: _event8 = WriteSingleEvent("LPN-FC002_LPK51001"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("LPN-FC002_LPK51001"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("LPN-FC002_LPK51001"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("RandomStream"' 0' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("RandomStream"' 1' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,read_all_events_forward_does_not_return_duplicate,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,read_all_events_forward_does_not_return_duplicate,The following statement contains a magic number: Assert.AreEqual(11' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,read_all_events_forward_does_not_return_duplicate,The following statement contains a magic number: Assert.AreEqual(_event3' events[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,read_all_events_forward_does_not_return_duplicate,The following statement contains a magic number: Assert.AreEqual(_event4' events[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,read_all_events_forward_does_not_return_duplicate,The following statement contains a magic number: Assert.AreEqual(_event5' events[4]);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,read_all_events_forward_does_not_return_duplicate,The following statement contains a magic number: Assert.AreEqual(_event6' events[5]);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,read_all_events_forward_does_not_return_duplicate,The following statement contains a magic number: Assert.AreEqual(_event7' events[6]);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_duplicate_events,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_duplicate_events.cs,read_all_events_forward_does_not_return_duplicate,The following statement contains a magic number: Assert.AreEqual(_event8' events[7]);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: _event9 = WriteSingleEvent("ES2"' 0' new string('.'' 5000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,read_all_forward_does_not_return_scavenged_deleted_stream_events_and_return_remaining,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,read_all_forward_does_not_return_scavenged_deleted_stream_events_and_return_remaining,The following statement contains a magic number: Assert.AreEqual(2' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,read_all_backward_does_not_return_scavenged_deleted_stream_events_and_return_remaining,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,read_all_backward_does_not_return_scavenged_deleted_stream_events_and_return_remaining,The following statement contains a magic number: Assert.AreEqual(2' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,read_all_backward_from_beginning_of_second_chunk_returns_no_records,The following statement contains a magic number: var pos = new TFPos(10000' 10000);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,read_all_backward_from_beginning_of_second_chunk_returns_no_records,The following statement contains a magic number: var pos = new TFPos(10000' 10000);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,read_all_backward_from_beginning_of_second_chunk_returns_no_records,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsBackward(pos' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,read_all_forward_from_beginning_of_2nd_chunk_with_max_2_record_returns_delete_record_and_record_from_3rd_chunk,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(10000' 10000)' 2).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,read_all_forward_from_beginning_of_2nd_chunk_with_max_2_record_returns_delete_record_and_record_from_3rd_chunk,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(10000' 10000)' 2).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,read_all_forward_from_beginning_of_2nd_chunk_with_max_2_record_returns_delete_record_and_record_from_3rd_chunk,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(10000' 10000)' 2).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,read_all_forward_from_beginning_of_2nd_chunk_with_max_2_record_returns_delete_record_and_record_from_3rd_chunk,The following statement contains a magic number: Assert.AreEqual(2' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,read_all_forward_with_max_5_records_returns_2_records_from_2nd_chunk,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 5).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_2nd_chunk__in_db_with_3_chunks.cs,read_all_forward_with_max_5_records_returns_2_records_from_2nd_chunk,The following statement contains a magic number: Assert.AreEqual(2' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_forward_returns_events_only_from_uncompleted_chunk_and_delete_record,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_forward_returns_events_only_from_uncompleted_chunk_and_delete_record,The following statement contains a magic number: Assert.AreEqual(3' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_forward_returns_events_only_from_uncompleted_chunk_and_delete_record,The following statement contains a magic number: Assert.AreEqual(_delete' events[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_backward_returns_events_only_from_uncompleted_chunk_and_delete_record,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_backward_returns_events_only_from_uncompleted_chunk_and_delete_record,The following statement contains a magic number: Assert.AreEqual(3' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_backward_returns_events_only_from_uncompleted_chunk_and_delete_record,The following statement contains a magic number: Assert.AreEqual(_event3' events[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_backward_from_beginning_of_second_chunk_returns_no_records,The following statement contains a magic number: var pos = new TFPos(10000' 10000);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_backward_from_beginning_of_second_chunk_returns_no_records,The following statement contains a magic number: var pos = new TFPos(10000' 10000);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_backward_from_beginning_of_second_chunk_returns_no_records,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsBackward(pos' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_forward_from_beginning_of_second_chunk_with_max_1_record_returns_5th_record,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(10000' 10000)' 1).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_forward_from_beginning_of_second_chunk_with_max_1_record_returns_5th_record,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(10000' 10000)' 1).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_forward_with_max_5_records_returns_3_records_from_second_chunk_and_delete_record,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 5).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_forward_with_max_5_records_returns_3_records_from_second_chunk_and_delete_record,The following statement contains a magic number: Assert.AreEqual(3' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_forward_with_max_5_records_returns_3_records_from_second_chunk_and_delete_record,The following statement contains a magic number: Assert.AreEqual(_delete' events[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,WriteTestScenario,The following statement contains a magic number: _event8 = WriteSingleEvent("ES2"' 0' new string('.'' 5000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,read_all_forward_does_not_return_scavenged_deleted_stream_events_and_return_remaining_plus_delete_record,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,read_all_forward_does_not_return_scavenged_deleted_stream_events_and_return_remaining_plus_delete_record,The following statement contains a magic number: Assert.AreEqual(2' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,read_all_backward_does_not_return_scavenged_deleted_stream_events_and_return_remaining_plus_delete_record,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,read_all_backward_does_not_return_scavenged_deleted_stream_events_and_return_remaining_plus_delete_record,The following statement contains a magic number: Assert.AreEqual(2' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,read_all_backward_from_beginning_of_second_chunk_returns_no_records,The following statement contains a magic number: var pos = new TFPos(10000' 10000);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,read_all_backward_from_beginning_of_second_chunk_returns_no_records,The following statement contains a magic number: var pos = new TFPos(10000' 10000);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,read_all_backward_from_beginning_of_second_chunk_returns_no_records,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsBackward(pos' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,read_all_forward_from_beginning_of_2nd_chunk_with_max_1_record_returns_1st_record_from_3rd_chunk,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(10000' 10000)' 1).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,read_all_forward_from_beginning_of_2nd_chunk_with_max_1_record_returns_1st_record_from_3rd_chunk,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(10000' 10000)' 1).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,read_all_forward_with_max_5_records_returns_2_records_from_2nd_chunk_plus_delete_record,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 5).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_deleting_single_stream_spanning_through_2_chunks_in_db_with_3_chunks.cs,read_all_forward_with_max_5_records_returns_2_records_from_2nd_chunk_plus_delete_record,The following statement contains a magic number: Assert.AreEqual(2' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_having_commit_spanning_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_having_commit_spanning_multiple_chunks.cs,WriteTestScenario,The following statement contains a magic number: var r = LogRecord.Prepare(WriterCheckpoint.ReadNonFlushed()'  					Guid.NewGuid()'  					Guid.NewGuid()'  					transPos'  					i'  					"s1"'  					i == 0 ? -1 : -2'  					PrepareFlags.Data | (i == 9 ? PrepareFlags.TransactionEnd : PrepareFlags.None)'  					"event-type"'  					new byte[3]'  					new byte[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_having_commit_spanning_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_having_commit_spanning_multiple_chunks.cs,WriteTestScenario,The following statement contains a magic number: var r = LogRecord.Prepare(WriterCheckpoint.ReadNonFlushed()'  					Guid.NewGuid()'  					Guid.NewGuid()'  					transPos'  					i'  					"s1"'  					i == 0 ? -1 : -2'  					PrepareFlags.Data | (i == 9 ? PrepareFlags.TransactionEnd : PrepareFlags.None)'  					"event-type"'  					new byte[3]'  					new byte[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_having_commit_spanning_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_having_commit_spanning_multiple_chunks.cs,WriteTestScenario,The following statement contains a magic number: var r = LogRecord.Prepare(WriterCheckpoint.ReadNonFlushed()'  					Guid.NewGuid()'  					Guid.NewGuid()'  					transPos'  					i'  					"s1"'  					i == 0 ? -1 : -2'  					PrepareFlags.Data | (i == 9 ? PrepareFlags.TransactionEnd : PrepareFlags.None)'  					"event-type"'  					new byte[3]'  					new byte[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_having_commit_spanning_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_having_commit_spanning_multiple_chunks.cs,WriteTestScenario,The following statement contains a magic number: var r = LogRecord.Prepare(WriterCheckpoint.ReadNonFlushed()'  					Guid.NewGuid()'  					Guid.NewGuid()'  					transPos'  					i'  					"s1"'  					i == 0 ? -1 : -2'  					PrepareFlags.Data | (i == 9 ? PrepareFlags.TransactionEnd : PrepareFlags.None)'  					"event-type"'  					new byte[3]'  					new byte[3]);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_having_commit_spanning_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_having_commit_spanning_multiple_chunks.cs,WriteTestScenario,The following statement contains a magic number: i < 10
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_having_commit_spanning_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_having_commit_spanning_multiple_chunks.cs,WriteTestScenario,The following statement contains a magic number: Assert.AreEqual(13' _survivors.Count + _scavenged.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_running_scavenge_from_storage_scavenger,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_running_a_scavenge_from_storage_scavenger.cs,When,The following statement contains a magic number: var countdown = new CountdownEvent(2);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_incomplete_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "ES1"' version: _version)'  					Rec.Commit(0' "ES1"' version: _version)'  					Rec.Prepare(1' "ES1"' version: _version)'  					Rec.Commit(1' "ES1"' version: _version))  				.CompleteLastChunk()  				.Chunk(Rec.Prepare(2' "ES2"' version: _version)'  					Rec.Commit(2' "ES2"' version: _version)'  					Rec.Prepare(3' "ES2"' version: _version)'  					Rec.Commit(3' "ES2"' version: _version))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_incomplete_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "ES1"' version: _version)'  					Rec.Commit(0' "ES1"' version: _version)'  					Rec.Prepare(1' "ES1"' version: _version)'  					Rec.Commit(1' "ES1"' version: _version))  				.CompleteLastChunk()  				.Chunk(Rec.Prepare(2' "ES2"' version: _version)'  					Rec.Commit(2' "ES2"' version: _version)'  					Rec.Prepare(3' "ES2"' version: _version)'  					Rec.Commit(3' "ES2"' version: _version))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_incomplete_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "ES1"' version: _version)'  					Rec.Commit(0' "ES1"' version: _version)'  					Rec.Prepare(1' "ES1"' version: _version)'  					Rec.Commit(1' "ES1"' version: _version))  				.CompleteLastChunk()  				.Chunk(Rec.Prepare(2' "ES2"' version: _version)'  					Rec.Commit(2' "ES2"' version: _version)'  					Rec.Prepare(3' "ES2"' version: _version)'  					Rec.Commit(3' "ES2"' version: _version))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_incomplete_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "ES1"' version: _version)'  					Rec.Commit(0' "ES1"' version: _version)'  					Rec.Prepare(1' "ES1"' version: _version)'  					Rec.Commit(1' "ES1"' version: _version))  				.CompleteLastChunk()  				.Chunk(Rec.Prepare(2' "ES2"' version: _version)'  					Rec.Commit(2' "ES2"' version: _version)'  					Rec.Prepare(3' "ES2"' version: _version)'  					Rec.Commit(3' "ES2"' version: _version))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_incomplete_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {  					dbResult.Recs[0][0]'  					dbResult.Recs[0][1]'  					dbResult.Recs[0][2]'  					dbResult.Recs[0][3]  				}'  				new[] {  					dbResult.Recs[1][0]'  					dbResult.Recs[1][1]'  					dbResult.Recs[1][2]'  					dbResult.Recs[1][3]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_incomplete_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {  					dbResult.Recs[0][0]'  					dbResult.Recs[0][1]'  					dbResult.Recs[0][2]'  					dbResult.Recs[0][3]  				}'  				new[] {  					dbResult.Recs[1][0]'  					dbResult.Recs[1][1]'  					dbResult.Recs[1][2]'  					dbResult.Recs[1][3]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_incomplete_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {  					dbResult.Recs[0][0]'  					dbResult.Recs[0][1]'  					dbResult.Recs[0][2]'  					dbResult.Recs[0][3]  				}'  				new[] {  					dbResult.Recs[1][0]'  					dbResult.Recs[1][1]'  					dbResult.Recs[1][2]'  					dbResult.Recs[1][3]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_incomplete_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {  					dbResult.Recs[0][0]'  					dbResult.Recs[0][1]'  					dbResult.Recs[0][2]'  					dbResult.Recs[0][3]  				}'  				new[] {  					dbResult.Recs[1][0]'  					dbResult.Recs[1][1]'  					dbResult.Recs[1][2]'  					dbResult.Recs[1][3]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_deleted_records,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_and_deleted_records.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEventWithLogVersion0(Guid.NewGuid()' _eventStreamId' WriterCheckpoint.ReadNonFlushed()'  				2);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_deleted_records,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_and_deleted_records.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEventWithLogVersion0(Guid.NewGuid()' _eventStreamId' WriterCheckpoint.ReadNonFlushed()'  				3);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_deleted_records,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_and_deleted_records.cs,should_be_able_to_read_the_all_stream,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_deleted_records,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_and_deleted_records.cs,should_be_able_to_read_the_all_stream,The following statement contains a magic number: Assert.AreEqual(5' events.Count());
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_deleted_records,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_and_deleted_records.cs,should_be_able_to_read_the_all_stream,The following statement contains a magic number: Assert.AreEqual(_deleted.EventId' events[2].EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_deleted_records,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_and_deleted_records.cs,should_be_able_to_read_the_all_stream,The following statement contains a magic number: Assert.AreEqual(_event3.EventId' events[3].EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_deleted_records,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_and_deleted_records.cs,should_be_able_to_read_the_all_stream,The following statement contains a magic number: Assert.AreEqual(_event4.EventId' events[4].EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_deleted_records,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_and_deleted_records.cs,the_log_records_are_still_version_0,The following statement contains a magic number: Assert.AreEqual(10' chunkRecords.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_deleted_records,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_and_deleted_records.cs,should_be_able_to_read_the_stream,The following statement contains a magic number: var events = ReadIndex.ReadStreamEventsForward(_eventStreamId' 0' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_deleted_records,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_and_deleted_records.cs,should_be_able_to_read_the_stream,The following statement contains a magic number: Assert.AreEqual(4' events.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_deleted_records,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_and_deleted_records.cs,should_be_able_to_read_the_stream,The following statement contains a magic number: Assert.AreEqual(_event3.EventId' events.Records[2].EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_and_deleted_records,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_and_deleted_records.cs,should_be_able_to_read_the_stream,The following statement contains a magic number: Assert.AreEqual(_event4.EventId' events.Records[3].EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,WriteTestScenario,The following statement contains a magic number: _p5 = WriteTransactionEventV0(t1.CorrelationId' WriterCheckpoint.ReadNonFlushed()' t1.LogPosition' 2'  				t1.EventStreamId' 2' "es1"' PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,WriteTestScenario,The following statement contains a magic number: _p5 = WriteTransactionEventV0(t1.CorrelationId' WriterCheckpoint.ReadNonFlushed()' t1.LogPosition' 2'  				t1.EventStreamId' 2' "es1"' PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,the_log_records_are_still_version_0_in_first_chunk,The following statement contains a magic number: Assert.AreEqual(7' chunkRecords.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,the_log_records_are_unchanged_in_second_chunk,The following statement contains a magic number: Assert.AreEqual(2' chunkRecords.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_last_event_version_for_larger_stream,The following statement contains a magic number: Assert.AreEqual(2' ReadIndex.GetStreamLastEventNumber(_streamIdOne));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_third_record_for_larger_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent(_streamIdOne' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,not_find_record_with_nonexistent_version_for_larger_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent(_streamIdOne' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_start_range_query_for_larger_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward(_streamIdOne' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_start_range_query_for_larger_stream,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_start_range_query_for_larger_stream,The following statement contains a magic number: Assert.AreEqual(_p5.EventId' result.Records[2].EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward(_streamIdOne' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward(_streamIdOne' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_specific_version,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_specific_version,The following statement contains a magic number: Assert.AreEqual(_p1.EventId' result.Records[2].EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_from_end_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward(_streamIdOne' -1' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(_p1.EventId' result.Records[2].EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,not_find_record_with_nonexistent_version_for_smaller_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent(_streamIdTwo' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_start_range_query_for_smaller_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward(_streamIdTwo' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_start_range_query_for_smaller_stream,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_end_range_query_for_smaller_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward(_streamIdTwo' 1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_end_range_query_for_smaller_stream_with_specific_version,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_end_range_query_for_smaller_stream_with_from_end_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward(_streamIdTwo' -1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,return_correct_range_on_from_end_range_query_for_smaller_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p1.EventId' records[2].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p3.EventId' records[3].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p5.EventId' records[4].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_random1.EventId' records[5].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(pos' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(6' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p3.EventId' records[2].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p1.EventId' records[3].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p4.EventId' records[4].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p2.EventId' records[5].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_forward_returns_no_transaction_records_when_prepare_position_is_greater_than_last_prepare_in_commit,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(_t1CommitPos' _t1CommitPos)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_backwards_returns_nothing_when_prepare_position_is_smaller_than_first_prepare_in_commit,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(new TFPos(_t2CommitPos' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsForward(new TFPos(_t2CommitPos' _p4.LogPosition)'  				10);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(5' res1.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p3.EventId' res1.Records[2].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p5.EventId' res1.Records[3].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_random1.EventId' res1.Records[4].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res2 = ReadIndex.ReadAllEventsBackward(res1.PrevPos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsBackward(pos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(4' res1.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p4.EventId' res1.Records[2].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p2.EventId' res1.Records[3].Event.EventId);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res2 = ReadIndex.ReadAllEventsForward(res1.PrevPos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_scavenging_tfchunk_with_version0_log_records_using_transactions,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_scavenging_tfchunk_with_version0_log_records_using_transactions.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(2' res2.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "$$test"' metadata: new StreamMetadata(tempStream: true))'  					Rec.Commit(0' "$$test")'  					Rec.Prepare(1' "test")'  					Rec.Commit(1' "test")'  					Rec.Prepare(2' "test")'  					Rec.Commit(2' "test")'  					Rec.Prepare(3' "$$test"'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true))'  					Rec.Commit(3' "$$test"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "$$test"' metadata: new StreamMetadata(tempStream: true))'  					Rec.Commit(0' "$$test")'  					Rec.Prepare(1' "test")'  					Rec.Commit(1' "test")'  					Rec.Prepare(2' "test")'  					Rec.Commit(2' "test")'  					Rec.Prepare(3' "$$test"'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true))'  					Rec.Commit(3' "$$test"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "$$test"' metadata: new StreamMetadata(tempStream: true))'  					Rec.Commit(0' "$$test")'  					Rec.Prepare(1' "test")'  					Rec.Commit(1' "test")'  					Rec.Prepare(2' "test")'  					Rec.Commit(2' "test")'  					Rec.Prepare(3' "$$test"'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true))'  					Rec.Commit(3' "$$test"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "$$test"' metadata: new StreamMetadata(tempStream: true))'  					Rec.Commit(0' "$$test")'  					Rec.Prepare(1' "test")'  					Rec.Commit(1' "test")'  					Rec.Prepare(2' "test")'  					Rec.Commit(2' "test")'  					Rec.Prepare(3' "$$test"'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true))'  					Rec.Commit(3' "$$test"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk.cs,the_stream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.NoStream' ReadIndex.ReadStreamEventsForward("test"' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk.cs,the_stream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.NoStream' ReadIndex.ReadStreamEventsBackward("test"' -1' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk.cs,the_metastream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.Success' ReadIndex.ReadStreamEventsForward("$$test"' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk.cs,the_metastream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.Success' ReadIndex.ReadStreamEventsBackward("$$test"' -1' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk.cs,the_stream_is_absent_physically,The following statement contains a magic number: Assert.IsEmpty(ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 1000).Records  				.Where(x => x.Event.EventStreamId == "test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk.cs,the_stream_is_absent_physically,The following statement contains a magic number: Assert.IsEmpty(ReadIndex.ReadAllEventsBackward(headOfTf' 1000).Records  				.Where(x => x.Event.EventStreamId == "test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk.cs,the_metastream_is_absent_physically,The following statement contains a magic number: Assert.IsEmpty(ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 1000).Records  				.Where(x => x.Event.EventStreamId == "$$test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk.cs,the_metastream_is_absent_physically,The following statement contains a magic number: Assert.IsEmpty(ReadIndex.ReadAllEventsBackward(headOfTf' 1000).Records  				.Where(x => x.Event.EventStreamId == "$$test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "test")'  					Rec.Commit(0' "test"))  				.Chunk(Rec.Prepare(1' "test")'  					Rec.Commit(1' "test")'  					Rec.Prepare(2' "$$test"'  						metadata: new StreamMetadata(null' null' EventNumber.DeletedStream' true' null' null))'  					Rec.Commit(2' "$$test"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "test")'  					Rec.Commit(0' "test"))  				.Chunk(Rec.Prepare(1' "test")'  					Rec.Commit(1' "test")'  					Rec.Prepare(2' "$$test"'  						metadata: new StreamMetadata(null' null' EventNumber.DeletedStream' true' null' null))'  					Rec.Commit(2' "$$test"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new LogRecord[0]'  				new[] {  					dbResult.Recs[1][0]'  					dbResult.Recs[1][1]'  					dbResult.Recs[1][2]'  					dbResult.Recs[1][3]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new LogRecord[0]'  				new[] {  					dbResult.Recs[1][0]'  					dbResult.Recs[1][1]'  					dbResult.Recs[1][2]'  					dbResult.Recs[1][3]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks.cs,the_stream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.NoStream' ReadIndex.ReadStreamEventsForward("test"' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks.cs,the_stream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.NoStream' ReadIndex.ReadStreamEventsBackward("test"' -1' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks.cs,the_metastream_is_present_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.Success' ReadIndex.ReadStreamEventsForward("$$test"' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks.cs,the_metastream_is_present_logically,The following statement contains a magic number: Assert.AreEqual(1' ReadIndex.ReadStreamEventsForward("$$test"' 0' 100).Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks.cs,the_metastream_is_present_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.Success' ReadIndex.ReadStreamEventsBackward("$$test"' -1' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks.cs,the_metastream_is_present_logically,The following statement contains a magic number: Assert.AreEqual(1' ReadIndex.ReadStreamEventsBackward("$$test"' -1' 100).Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks.cs,the_stream_is_present_physically,The following statement contains a magic number: Assert.AreEqual(1'  				ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 1000).Records  					.Count(x => x.Event.EventStreamId == "test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks.cs,the_stream_is_present_physically,The following statement contains a magic number: Assert.AreEqual(1'  				ReadIndex.ReadAllEventsBackward(headOfTf' 1000).Records.Count(x => x.Event.EventStreamId == "test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks.cs,the_metastream_is_present_physically,The following statement contains a magic number: Assert.AreEqual(1'  				ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 1000).Records  					.Count(x => x.Event.EventStreamId == "$$test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks.cs,the_metastream_is_present_physically,The following statement contains a magic number: Assert.AreEqual(1'  				ReadIndex.ReadAllEventsBackward(headOfTf' 1000).Records.Count(x => x.Event.EventStreamId == "$$test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "$$test"' metadata: new StreamMetadata(tempStream: true))'  					Rec.Commit(0' "$$test"))  				.Chunk(Rec.Prepare(1' "test")'  					Rec.Commit(1' "test")'  					Rec.Prepare(2' "test")'  					Rec.Commit(2' "test")'  					Rec.Prepare(3' "$$test"'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true))'  					Rec.Commit(3' "$$test"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "$$test"' metadata: new StreamMetadata(tempStream: true))'  					Rec.Commit(0' "$$test"))  				.Chunk(Rec.Prepare(1' "test")'  					Rec.Commit(1' "test")'  					Rec.Prepare(2' "test")'  					Rec.Commit(2' "test")'  					Rec.Prepare(3' "$$test"'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true))'  					Rec.Commit(3' "$$test"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "$$test"' metadata: new StreamMetadata(tempStream: true))'  					Rec.Commit(0' "$$test"))  				.Chunk(Rec.Prepare(1' "test")'  					Rec.Commit(1' "test")'  					Rec.Prepare(2' "test")'  					Rec.Commit(2' "test")'  					Rec.Prepare(3' "$$test"'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true))'  					Rec.Commit(3' "$$test"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "$$test"' metadata: new StreamMetadata(tempStream: true))'  					Rec.Commit(0' "$$test"))  				.Chunk(Rec.Prepare(1' "test")'  					Rec.Commit(1' "test")'  					Rec.Prepare(2' "test")'  					Rec.Commit(2' "test")'  					Rec.Prepare(3' "$$test"'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true))'  					Rec.Commit(3' "$$test"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new LogRecord[0]'  				new[] {  					dbResult.Recs[1][2]'  					dbResult.Recs[1][3]'  					dbResult.Recs[1][4]'  					dbResult.Recs[1][5]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new LogRecord[0]'  				new[] {  					dbResult.Recs[1][2]'  					dbResult.Recs[1][3]'  					dbResult.Recs[1][4]'  					dbResult.Recs[1][5]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new LogRecord[0]'  				new[] {  					dbResult.Recs[1][2]'  					dbResult.Recs[1][3]'  					dbResult.Recs[1][4]'  					dbResult.Recs[1][5]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new LogRecord[0]'  				new[] {  					dbResult.Recs[1][2]'  					dbResult.Recs[1][3]'  					dbResult.Recs[1][4]'  					dbResult.Recs[1][5]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,the_stream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.NoStream' ReadIndex.ReadStreamEventsForward("test"' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,the_stream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.NoStream' ReadIndex.ReadStreamEventsBackward("test"' -1' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,the_metastream_is_present_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.Success' ReadIndex.ReadStreamEventsForward("$$test"' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,the_metastream_is_present_logically,The following statement contains a magic number: Assert.AreEqual(1' ReadIndex.ReadStreamEventsForward("$$test"' 0' 100).Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,the_metastream_is_present_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.Success' ReadIndex.ReadStreamEventsBackward("$$test"' -1' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,the_metastream_is_present_logically,The following statement contains a magic number: Assert.AreEqual(1' ReadIndex.ReadStreamEventsBackward("$$test"' -1' 100).Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,the_stream_is_present_physically,The following statement contains a magic number: Assert.AreEqual(1'  				ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 1000).Records  					.Count(x => x.Event.EventStreamId == "test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,the_stream_is_present_physically,The following statement contains a magic number: Assert.AreEqual(1'  				ReadIndex.ReadAllEventsBackward(headOfTf' 1000).Records.Count(x => x.Event.EventStreamId == "test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,the_metastream_is_present_physically,The following statement contains a magic number: Assert.AreEqual(1'  				ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 1000).Records  					.Count(x => x.Event.EventStreamId == "$$test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks.cs,the_metastream_is_present_physically,The following statement contains a magic number: Assert.AreEqual(1'  				ReadIndex.ReadAllEventsBackward(headOfTf' 1000).Records.Count(x => x.Event.EventStreamId == "$$test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "test"' version: version)'  					Rec.Commit(0' "test"' version: version))  				.Chunk(Rec.Prepare(1' "test"' version: version)'  					Rec.Commit(1' "test"' version: version)'  					Rec.Prepare(2' "$$test"' metadata: new StreamMetadata(null' null' int.MaxValue' true' null' null)'  						version: version)'  					Rec.Commit(2' "$$test"' version: version))  				.Chunk(  					Rec.Prepare(3' "random"'  						version: version)' // Need an incomplete chunk to ensure writer checkpoints are correct  					Rec.Commit(3' "random"' version: version))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "test"' version: version)'  					Rec.Commit(0' "test"' version: version))  				.Chunk(Rec.Prepare(1' "test"' version: version)'  					Rec.Commit(1' "test"' version: version)'  					Rec.Prepare(2' "$$test"' metadata: new StreamMetadata(null' null' int.MaxValue' true' null' null)'  						version: version)'  					Rec.Commit(2' "$$test"' version: version))  				.Chunk(  					Rec.Prepare(3' "random"'  						version: version)' // Need an incomplete chunk to ensure writer checkpoints are correct  					Rec.Commit(3' "random"' version: version))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "test"' version: version)'  					Rec.Commit(0' "test"' version: version))  				.Chunk(Rec.Prepare(1' "test"' version: version)'  					Rec.Commit(1' "test"' version: version)'  					Rec.Prepare(2' "$$test"' metadata: new StreamMetadata(null' null' int.MaxValue' true' null' null)'  						version: version)'  					Rec.Commit(2' "$$test"' version: version))  				.Chunk(  					Rec.Prepare(3' "random"'  						version: version)' // Need an incomplete chunk to ensure writer checkpoints are correct  					Rec.Commit(3' "random"' version: version))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(Rec.Prepare(0' "test"' version: version)'  					Rec.Commit(0' "test"' version: version))  				.Chunk(Rec.Prepare(1' "test"' version: version)'  					Rec.Commit(1' "test"' version: version)'  					Rec.Prepare(2' "$$test"' metadata: new StreamMetadata(null' null' int.MaxValue' true' null' null)'  						version: version)'  					Rec.Commit(2' "$$test"' version: version))  				.Chunk(  					Rec.Prepare(3' "random"'  						version: version)' // Need an incomplete chunk to ensure writer checkpoints are correct  					Rec.Commit(3' "random"' version: version))  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new LogRecord[0]'  				new[] {  					dbResult.Recs[1][0]'  					dbResult.Recs[1][1]'  					dbResult.Recs[1][2]'  					dbResult.Recs[1][3]  				}'  				new[] {  					dbResult.Recs[2][0]'  					dbResult.Recs[2][1]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new LogRecord[0]'  				new[] {  					dbResult.Recs[1][0]'  					dbResult.Recs[1][1]'  					dbResult.Recs[1][2]'  					dbResult.Recs[1][3]  				}'  				new[] {  					dbResult.Recs[2][0]'  					dbResult.Recs[2][1]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new LogRecord[0]'  				new[] {  					dbResult.Recs[1][0]'  					dbResult.Recs[1][1]'  					dbResult.Recs[1][2]'  					dbResult.Recs[1][3]  				}'  				new[] {  					dbResult.Recs[2][0]'  					dbResult.Recs[2][1]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new LogRecord[0]'  				new[] {  					dbResult.Recs[1][0]'  					dbResult.Recs[1][1]'  					dbResult.Recs[1][2]'  					dbResult.Recs[1][3]  				}'  				new[] {  					dbResult.Recs[2][0]'  					dbResult.Recs[2][1]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,the_stream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.NoStream' ReadIndex.ReadStreamEventsForward("test"' 0' 100).Result'  				"Read test stream forward");
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,the_stream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.NoStream' ReadIndex.ReadStreamEventsBackward("test"' -1' 100).Result'  				"Read test stream backward");
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,the_metastream_is_present_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.Success' ReadIndex.ReadStreamEventsForward("$$test"' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,the_metastream_is_present_logically,The following statement contains a magic number: Assert.AreEqual(1' ReadIndex.ReadStreamEventsForward("$$test"' 0' 100).Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,the_metastream_is_present_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.Success' ReadIndex.ReadStreamEventsBackward("$$test"' -1' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,the_metastream_is_present_logically,The following statement contains a magic number: Assert.AreEqual(1' ReadIndex.ReadStreamEventsBackward("$$test"' -1' 100).Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,the_stream_is_present_physically,The following statement contains a magic number: Assert.AreEqual(1'  				ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 1000).Records  					.Count(x => x.Event.EventStreamId == "test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,the_stream_is_present_physically,The following statement contains a magic number: Assert.AreEqual(1'  				ReadIndex.ReadAllEventsBackward(headOfTf' 1000).Records.Count(x => x.Event.EventStreamId == "test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,the_metastream_is_present_physically,The following statement contains a magic number: Assert.AreEqual(1'  				ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 1000).Records  					.Count(x => x.Event.EventStreamId == "$$test")' "Read $$test stream forward");
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks.cs,the_metastream_is_present_physically,The following statement contains a magic number: Assert.AreEqual(1'  				ReadIndex.ReadAllEventsBackward(headOfTf' 10).Records.Count(x => x.Event.EventStreamId == "$$test")'  				"Read $$test stream backward");
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_log_record_version_0,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_log_record_version_0.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' "$$test"' metadata: new StreamMetadata(tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(0' "$$test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(1' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(1' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(2' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(2' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(3' "$$test"'  						metadata: new StreamMetadata(truncateBefore: int.MaxValue' tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(3' "$$test"' version: LogRecordVersion.LogRecordV0))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_log_record_version_0,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_log_record_version_0.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' "$$test"' metadata: new StreamMetadata(tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(0' "$$test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(1' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(1' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(2' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(2' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(3' "$$test"'  						metadata: new StreamMetadata(truncateBefore: int.MaxValue' tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(3' "$$test"' version: LogRecordVersion.LogRecordV0))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_log_record_version_0,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_log_record_version_0.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' "$$test"' metadata: new StreamMetadata(tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(0' "$$test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(1' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(1' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(2' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(2' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(3' "$$test"'  						metadata: new StreamMetadata(truncateBefore: int.MaxValue' tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(3' "$$test"' version: LogRecordVersion.LogRecordV0))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_log_record_version_0,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_log_record_version_0.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' "$$test"' metadata: new StreamMetadata(tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(0' "$$test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(1' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(1' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(2' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(2' "test"' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(3' "$$test"'  						metadata: new StreamMetadata(truncateBefore: int.MaxValue' tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(3' "$$test"' version: LogRecordVersion.LogRecordV0))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_log_record_version_0,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_log_record_version_0.cs,the_stream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.NoStream' ReadIndex.ReadStreamEventsForward("test"' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_log_record_version_0,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_log_record_version_0.cs,the_stream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.NoStream' ReadIndex.ReadStreamEventsBackward("test"' -1' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_log_record_version_0,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_log_record_version_0.cs,the_metastream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.Success' ReadIndex.ReadStreamEventsForward("$$test"' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_log_record_version_0,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_log_record_version_0.cs,the_metastream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.Success' ReadIndex.ReadStreamEventsBackward("$$test"' -1' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_log_record_version_0,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_log_record_version_0.cs,the_stream_is_absent_physically,The following statement contains a magic number: Assert.IsEmpty(ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 1000).Records  				.Where(x => x.Event.EventStreamId == "test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_log_record_version_0,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_log_record_version_0.cs,the_stream_is_absent_physically,The following statement contains a magic number: Assert.IsEmpty(ReadIndex.ReadAllEventsBackward(headOfTf' 1000).Records  				.Where(x => x.Event.EventStreamId == "test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_log_record_version_0,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_log_record_version_0.cs,the_metastream_is_absent_physically,The following statement contains a magic number: Assert.IsEmpty(ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 1000).Records  				.Where(x => x.Event.EventStreamId == "$$test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_log_record_version_0,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_log_record_version_0.cs,the_metastream_is_absent_physically,The following statement contains a magic number: Assert.IsEmpty(ReadIndex.ReadAllEventsBackward(headOfTf' 1000).Records  				.Where(x => x.Event.EventStreamId == "$$test"));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' _deletedMetaStream' metadata: new StreamMetadata(tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(0' _deletedMetaStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(3' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(3' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(4' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(4' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(6' _deletedMetaStream'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true)'  						version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(6' _deletedMetaStream' version: LogRecordVersion.LogRecordV0))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' _deletedMetaStream' metadata: new StreamMetadata(tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(0' _deletedMetaStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(3' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(3' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(4' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(4' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(6' _deletedMetaStream'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true)'  						version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(6' _deletedMetaStream' version: LogRecordVersion.LogRecordV0))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' _deletedMetaStream' metadata: new StreamMetadata(tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(0' _deletedMetaStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(3' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(3' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(4' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(4' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(6' _deletedMetaStream'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true)'  						version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(6' _deletedMetaStream' version: LogRecordVersion.LogRecordV0))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' _deletedMetaStream' metadata: new StreamMetadata(tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(0' _deletedMetaStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(3' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(3' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(4' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(4' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(6' _deletedMetaStream'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true)'  						version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(6' _deletedMetaStream' version: LogRecordVersion.LogRecordV0))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' _deletedMetaStream' metadata: new StreamMetadata(tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(0' _deletedMetaStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(3' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(3' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(4' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(4' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(6' _deletedMetaStream'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true)'  						version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(6' _deletedMetaStream' version: LogRecordVersion.LogRecordV0))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' _deletedMetaStream' metadata: new StreamMetadata(tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(0' _deletedMetaStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(3' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(3' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(4' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(4' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(6' _deletedMetaStream'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true)'  						version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(6' _deletedMetaStream' version: LogRecordVersion.LogRecordV0))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' _deletedMetaStream' metadata: new StreamMetadata(tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(0' _deletedMetaStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(3' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(3' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(4' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(4' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(6' _deletedMetaStream'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true)'  						version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(6' _deletedMetaStream' version: LogRecordVersion.LogRecordV0))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' _deletedMetaStream' metadata: new StreamMetadata(tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(0' _deletedMetaStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(3' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(3' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(4' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(4' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(6' _deletedMetaStream'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true)'  						version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(6' _deletedMetaStream' version: LogRecordVersion.LogRecordV0))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' _deletedMetaStream' metadata: new StreamMetadata(tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(0' _deletedMetaStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(3' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(3' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(4' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(4' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(6' _deletedMetaStream'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true)'  						version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(6' _deletedMetaStream' version: LogRecordVersion.LogRecordV0))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,CreateDb,The following statement contains a magic number: return dbCreator.Chunk(  					Rec.Prepare(0' _deletedMetaStream' metadata: new StreamMetadata(tempStream: true)'  						version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(0' _deletedMetaStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(1' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(2' _keptStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(3' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(3' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Prepare(4' _deletedStream' version: LogRecordVersion.LogRecordV0)'  					Rec.Commit(4' _deletedStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(5' _keptStream' version: LogRecordVersion.LogRecordV1)'  					Rec.Prepare(6' _deletedMetaStream'  						metadata: new StreamMetadata(truncateBefore: EventNumber.DeletedStream' tempStream: true)'  						version: LogRecordVersion.LogRecordV1)'  					Rec.Commit(6' _deletedMetaStream' version: LogRecordVersion.LogRecordV0))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {  					dbResult.Recs[0][2]'  					dbResult.Recs[0][3]'  					dbResult.Recs[0][4]'  					dbResult.Recs[0][5]'  					dbResult.Recs[0][10]'  					dbResult.Recs[0][11]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {  					dbResult.Recs[0][2]'  					dbResult.Recs[0][3]'  					dbResult.Recs[0][4]'  					dbResult.Recs[0][5]'  					dbResult.Recs[0][10]'  					dbResult.Recs[0][11]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {  					dbResult.Recs[0][2]'  					dbResult.Recs[0][3]'  					dbResult.Recs[0][4]'  					dbResult.Recs[0][5]'  					dbResult.Recs[0][10]'  					dbResult.Recs[0][11]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {  					dbResult.Recs[0][2]'  					dbResult.Recs[0][3]'  					dbResult.Recs[0][4]'  					dbResult.Recs[0][5]'  					dbResult.Recs[0][10]'  					dbResult.Recs[0][11]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {  					dbResult.Recs[0][2]'  					dbResult.Recs[0][3]'  					dbResult.Recs[0][4]'  					dbResult.Recs[0][5]'  					dbResult.Recs[0][10]'  					dbResult.Recs[0][11]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {  					dbResult.Recs[0][2]'  					dbResult.Recs[0][3]'  					dbResult.Recs[0][4]'  					dbResult.Recs[0][5]'  					dbResult.Recs[0][10]'  					dbResult.Recs[0][11]  				}  			};
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,the_stream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.NoStream'  				ReadIndex.ReadStreamEventsForward(_deletedStream' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,the_stream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.NoStream'  				ReadIndex.ReadStreamEventsBackward(_deletedStream' -1' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,the_metastream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.Success'  				ReadIndex.ReadStreamEventsForward(_deletedMetaStream' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,the_metastream_is_absent_logically,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.Success'  				ReadIndex.ReadStreamEventsBackward(_deletedMetaStream' -1' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,the_stream_is_absent_physically,The following statement contains a magic number: Assert.IsEmpty(ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 1000).Records  				.Where(x => x.Event.EventStreamId == _deletedStream));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,the_stream_is_absent_physically,The following statement contains a magic number: Assert.IsEmpty(ReadIndex.ReadAllEventsBackward(headOfTf' 1000).Records  				.Where(x => x.Event.EventStreamId == _deletedStream));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,the_metastream_is_absent_physically,The following statement contains a magic number: Assert.IsEmpty(ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 1000).Records  				.Where(x => x.Event.EventStreamId == _deletedMetaStream));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,the_metastream_is_absent_physically,The following statement contains a magic number: Assert.IsEmpty(ReadIndex.ReadAllEventsBackward(headOfTf' 1000).Records  				.Where(x => x.Event.EventStreamId == _deletedMetaStream));
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,the_kept_stream_is_present,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.Success' ReadIndex.ReadStreamEventsForward(_keptStream' 0' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1.cs,the_kept_stream_is_present,The following statement contains a magic number: Assert.AreEqual(ReadStreamResult.Success' ReadIndex.ReadStreamEventsBackward(_keptStream' -1' 100).Result);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_writing_delete_prepare_without_commit_and_scavenging,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_writing_delete_prepare_without_commit_on_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,WriteTestScenario,The following statement contains a magic number: var prepare = LogRecord.DeleteTombstone(WriterCheckpoint.ReadNonFlushed()' Guid.NewGuid()' Guid.NewGuid()'  				"ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_writing_delete_prepare_without_commit_and_scavenging,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_writing_delete_prepare_without_commit_on_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_stream_events_forward_should_return_all_events,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_writing_delete_prepare_without_commit_and_scavenging,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_writing_delete_prepare_without_commit_on_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_stream_events_forward_should_return_all_events,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_writing_delete_prepare_without_commit_and_scavenging,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_writing_delete_prepare_without_commit_on_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_stream_events_backward_should_return_stream_deleted,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_writing_delete_prepare_without_commit_and_scavenging,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_writing_delete_prepare_without_commit_on_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_stream_events_backward_should_return_stream_deleted,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_writing_delete_prepare_without_commit_and_scavenging,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_writing_delete_prepare_without_commit_on_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_forward_returns_all_events,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100).Records.Select(r => r.Event).ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_writing_delete_prepare_without_commit_and_scavenging,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_writing_delete_prepare_without_commit_on_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_forward_returns_all_events,The following statement contains a magic number: Assert.AreEqual(2' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_writing_delete_prepare_without_commit_and_scavenging,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_writing_delete_prepare_without_commit_on_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_backward_returns_all_events,The following statement contains a magic number: var events = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records.Select(r => r.Event)  				.ToArray();
Magic Number,EventStore.Core.Tests.Services.Storage.Scavenge,when_writing_delete_prepare_without_commit_and_scavenging,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Scavenge\when_writing_delete_prepare_without_commit_on_stream_spanning_through_2_chunks_in_db_with_2_chunks.cs,read_all_backward_returns_all_events,The following statement contains a magic number: Assert.AreEqual(2' events.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p3 = WriteTransactionEvent(_p1.CorrelationId' _p1.LogPosition' 2' _p1.EventStreamId' 2' "test3"'  				PrepareFlags.TransactionEnd | PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p3 = WriteTransactionEvent(_p1.CorrelationId' _p1.LogPosition' 2' _p1.EventStreamId' 2' "test3"'  				PrepareFlags.TransactionEnd | PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,return_correct_last_event_version_for_stream,The following statement contains a magic number: Assert.AreEqual(2' ReadIndex.GetStreamLastEventNumber("ES"));
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,return_correct_third_record_for_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,not_find_record_with_nonexistent_version,The following statement contains a magic number: var result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,return_correct_range_on_from_start_range_query_for_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,return_correct_range_on_from_start_range_query_for_stream,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,return_correct_range_on_from_start_range_query_for_stream,The following statement contains a magic number: Assert.AreEqual(_p3' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,return_correct_range_on_from_end_range_query_for_stream_with_specific_event_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,return_correct_range_on_from_end_range_query_for_stream_with_specific_event_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,return_correct_range_on_from_end_range_query_for_stream_with_specific_event_version,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,return_correct_range_on_from_end_range_query_for_stream_with_specific_event_version,The following statement contains a magic number: Assert.AreEqual(_p1' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,return_correct_range_on_from_end_range_query_for_stream_with_from_end_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,return_correct_range_on_from_end_range_query_for_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,return_correct_range_on_from_end_range_query_for_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(_p1' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(3' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p3' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(3' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_multievent_sequential_write_request_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_multievent_sequential_write_request_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p1' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p5 = WriteTransactionEvent(t1.CorrelationId' t1.LogPosition' 2' t1.EventStreamId' 2' "es1"'  				PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p5 = WriteTransactionEvent(t1.CorrelationId' t1.LogPosition' 2' t1.EventStreamId' 2' "es1"'  				PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(5' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p1' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(5' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p1' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_forward_returns_nothing_when_prepare_position_is_greater_than_last_prepare_in_commit,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(_t1CommitPos' _t1CommitPos)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_backwards_returns_nothing_when_prepare_position_is_smaller_than_first_prepare_in_commit,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(new TFPos(_t2CommitPos' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsForward(new TFPos(_t2CommitPos' _p4.LogPosition)' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(4' res1.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p3' res1.Records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p5' res1.Records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res2 = ReadIndex.ReadAllEventsBackward(res1.PrevPos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsBackward(pos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(4' res1.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p4' res1.Records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p2' res1.Records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res2 = ReadIndex.ReadAllEventsForward(res1.PrevPos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,reading_all_forward_at_position_with_no_commits_after_returns_prev_pos_that_allows_to_traverse_back,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsForward(new TFPos(_pos6' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,reading_all_forward_at_the_very_end_returns_prev_pos_that_allows_to_traverse_back,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsForward(new TFPos(Db.Config.WriterCheckpoint.Read()' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,reading_all_backward_at_position_with_no_commits_before_returns_prev_pos_that_allows_to_traverse_forward,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsBackward(new TFPos(_t2CommitPos' int.MaxValue)' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_in_the_end_read_index_should.cs,reading_all_backward_at_the_very_beginning_returns_prev_pos_that_allows_to_traverse_forward,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsBackward(new TFPos(0' int.MaxValue)' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p1 = WriteTransactionEvent(t1.CorrelationId' t1.LogPosition' 0' t1.EventStreamId' 0'  				"es1" + new string('.'' 3000)' PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p2 = WriteTransactionEvent(t2.CorrelationId' t2.LogPosition' 0' t2.EventStreamId' 0'  				"abc1" + new string('.'' 3000)' PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p3 = WriteTransactionEvent(t1.CorrelationId' t1.LogPosition' 1' t1.EventStreamId' 1'  				"es1" + new string('.'' 3000)' PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p4 = WriteTransactionEvent(t2.CorrelationId' t2.LogPosition' 1' t2.EventStreamId' 1'  				"abc1" + new string('.'' 3000)' PrepareFlags.Data' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p5 = WriteTransactionEvent(t1.CorrelationId' t1.LogPosition' 2' t1.EventStreamId' 2'  				"es1" + new string('.'' 3000)' PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p5 = WriteTransactionEvent(t1.CorrelationId' t1.LogPosition' 2' t1.EventStreamId' 2'  				"es1" + new string('.'' 3000)' PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p5 = WriteTransactionEvent(t1.CorrelationId' t1.LogPosition' 2' t1.EventStreamId' 2'  				"es1" + new string('.'' 3000)' PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(5' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p1' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(pos' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(5' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p1' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_nothing_when_prepare_position_is_greater_than_last_prepare_in_commit,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(_t1CommitPos' _t1CommitPos)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_backwards_returns_nothing_when_prepare_position_is_smaller_than_first_prepare_in_commit,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(new TFPos(_t2CommitPos' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsForward(new TFPos(_t2CommitPos' _p4.LogPosition)' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(4' res1.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p3' res1.Records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p5' res1.Records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res2 = ReadIndex.ReadAllEventsBackward(res1.PrevPos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsBackward(pos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(4' res1.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p4' res1.Records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p2' res1.Records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res2 = ReadIndex.ReadAllEventsForward(res1.PrevPos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,reading_all_forward_at_position_with_no_commits_after_returns_prev_pos_that_allows_to_traverse_back,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsForward(new TFPos(_pos6' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,reading_all_forward_at_the_very_end_returns_prev_pos_that_allows_to_traverse_back,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsForward(new TFPos(Db.Config.WriterCheckpoint.Read()' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,reading_all_backward_at_position_with_no_commits_before_returns_prev_pos_that_allows_to_traverse_forward,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsBackward(new TFPos(_t2CommitPos' int.MaxValue)' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_and_some_uncommited_prepares_spanning_few_chunks_read_index_should.cs,reading_all_backward_at_the_very_beginning_returns_prev_pos_that_allows_to_traverse_forward,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsBackward(new TFPos(0' int.MaxValue)' 100);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p5 = WriteTransactionEvent(t1.CorrelationId' t1.LogPosition' 2' t1.EventStreamId' 2' "es1"'  				PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p5 = WriteTransactionEvent(t1.CorrelationId' t1.LogPosition' 2' t1.EventStreamId' 2' "es1"'  				PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_last_event_version_for_larger_stream,The following statement contains a magic number: Assert.AreEqual(2' ReadIndex.GetStreamLastEventNumber("ES"));
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_third_record_for_larger_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,not_find_record_with_nonexistent_version_for_larger_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_start_range_query_for_larger_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_start_range_query_for_larger_stream,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_start_range_query_for_larger_stream,The following statement contains a magic number: Assert.AreEqual(_p5' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_specific_version,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_specific_version,The following statement contains a magic number: Assert.AreEqual(_p1' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_from_end_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(_p1' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,not_find_record_with_nonexistent_version_for_smaller_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("ABC"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_start_range_query_for_smaller_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ABC"' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_start_range_query_for_smaller_stream,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_smaller_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ABC"' 1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_smaller_stream_with_specific_version,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_smaller_stream_with_from_end_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ABC"' -1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,return_correct_range_on_from_end_range_query_for_smaller_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(5' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p1' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(pos' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(5' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p1' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_forward_returns_nothing_when_prepare_position_is_greater_than_last_prepare_in_commit,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(_t1CommitPos' _t1CommitPos)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_backwards_returns_nothing_when_prepare_position_is_smaller_than_first_prepare_in_commit,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(new TFPos(_t2CommitPos' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsForward(new TFPos(_t2CommitPos' _p4.LogPosition)' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(4' res1.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p3' res1.Records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p5' res1.Records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res2 = ReadIndex.ReadAllEventsBackward(res1.PrevPos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsBackward(pos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(4' res1.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p4' res1.Records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p2' res1.Records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res2 = ReadIndex.ReadAllEventsForward(res1.PrevPos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p1 = WriteTransactionEvent(t1.CorrelationId' t1.LogPosition' 0' t1.EventStreamId' 0'  				"es1" + new string('.'' 3000)' PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p2 = WriteTransactionEvent(t2.CorrelationId' t2.LogPosition' 0' t2.EventStreamId' 0'  				"abc1" + new string('.'' 3000)' PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p3 = WriteTransactionEvent(t1.CorrelationId' t1.LogPosition' 1' t1.EventStreamId' 1'  				"es1" + new string('.'' 3000)' PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p4 = WriteTransactionEvent(t2.CorrelationId' t2.LogPosition' 1' t2.EventStreamId' 1'  				"abc1" + new string('.'' 3000)' PrepareFlags.Data' retryOnFail: true);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p5 = WriteTransactionEvent(t1.CorrelationId' t1.LogPosition' 2' t1.EventStreamId' 2'  				"es1" + new string('.'' 3000)' PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p5 = WriteTransactionEvent(t1.CorrelationId' t1.LogPosition' 2' t1.EventStreamId' 2'  				"es1" + new string('.'' 3000)' PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,WriteTestScenario,The following statement contains a magic number: _p5 = WriteTransactionEvent(t1.CorrelationId' t1.LogPosition' 2' t1.EventStreamId' 2'  				"es1" + new string('.'' 3000)' PrepareFlags.Data);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_last_event_version_for_larger_stream,The following statement contains a magic number: Assert.AreEqual(2' ReadIndex.GetStreamLastEventNumber("ES"));
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_third_record_for_larger_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,not_find_record_with_nonexistent_version_for_larger_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_start_range_query_for_larger_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ES"' 0' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_start_range_query_for_larger_stream,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_start_range_query_for_larger_stream,The following statement contains a magic number: Assert.AreEqual(_p5' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' 2' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_specific_version,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_specific_version,The following statement contains a magic number: Assert.AreEqual(_p1' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_from_end_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ES"' -1' 3);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(3' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_end_range_query_for_larger_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(_p1' result.Records[2]);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,not_find_record_with_nonexistent_version_for_smaller_stream,The following statement contains a magic number: var result = ReadIndex.ReadEvent("ABC"' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_start_range_query_for_smaller_stream,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsForward("ABC"' 0' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_start_range_query_for_smaller_stream,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_end_range_query_for_smaller_stream_with_specific_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ABC"' 1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_end_range_query_for_smaller_stream_with_specific_version,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_end_range_query_for_smaller_stream_with_from_end_version,The following statement contains a magic number: var result = ReadIndex.ReadStreamEventsBackward("ABC"' -1' 2);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,return_correct_range_on_from_end_range_query_for_smaller_stream_with_from_end_version,The following statement contains a magic number: Assert.AreEqual(2' result.Records.Length);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(5' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p1' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p3' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p5' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(pos' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(5' records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p1' records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p4' records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_all_events_in_correct_order,The following statement contains a magic number: Assert.AreEqual(_p2' records[4].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_nothing_when_prepare_position_is_greater_than_last_prepare_in_commit,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsForward(new TFPos(_t1CommitPos' _t1CommitPos)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_backwards_returns_nothing_when_prepare_position_is_smaller_than_first_prepare_in_commit,The following statement contains a magic number: var records = ReadIndex.ReadAllEventsBackward(new TFPos(_t2CommitPos' 0)' 10).Records;
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsForward(new TFPos(_t2CommitPos' _p4.LogPosition)' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(4' res1.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p3' res1.Records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p5' res1.Records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_forward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res2 = ReadIndex.ReadAllEventsBackward(res1.PrevPos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res1 = ReadIndex.ReadAllEventsBackward(pos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(4' res1.Records.Count);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p4' res1.Records[2].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: Assert.AreEqual(_p2' res1.Records[3].Event);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_having_two_intermingled_transactions_spanning_few_chunks_read_index_should.cs,read_all_events_backward_returns_correct_events_starting_in_the_middle_of_tf,The following statement contains a magic number: var res2 = ReadIndex.ReadAllEventsForward(res1.PrevPos' 10);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_rebuilding_index_for_partially_persisted_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_rebuilding_index_for_partially_persisted_transaction.cs,TestFixtureSetUp,The following statement contains a magic number: var readers =  				new ObjectPool<ITransactionFileReader>("Readers"' 2' 2' () => new TFChunkReader(Db' WriterCheckpoint));
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_rebuilding_index_for_partially_persisted_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_rebuilding_index_for_partially_persisted_transaction.cs,TestFixtureSetUp,The following statement contains a magic number: var readers =  				new ObjectPool<ITransactionFileReader>("Readers"' 2' 2' () => new TFChunkReader(Db' WriterCheckpoint));
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_rebuilding_index_for_partially_persisted_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_rebuilding_index_for_partially_persisted_transaction.cs,TestFixtureSetUp,The following statement contains a magic number: TableIndex = new TableIndex(GetFilePathFor("index")' lowHasher' highHasher'  				() => new HashListMemTable(PTableVersions.IndexV2' maxSize: MaxEntriesInMemTable * 2)'  				() => new TFReaderLease(readers)'  				PTableVersions.IndexV2'  				5'  				maxSizeForMemory: MaxEntriesInMemTable);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_rebuilding_index_for_partially_persisted_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_rebuilding_index_for_partially_persisted_transaction.cs,TestFixtureSetUp,The following statement contains a magic number: TableIndex = new TableIndex(GetFilePathFor("index")' lowHasher' highHasher'  				() => new HashListMemTable(PTableVersions.IndexV2' maxSize: MaxEntriesInMemTable * 2)'  				() => new TFReaderLease(readers)'  				PTableVersions.IndexV2'  				5'  				maxSizeForMemory: MaxEntriesInMemTable);
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_rebuilding_index_for_partially_persisted_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_rebuilding_index_for_partially_persisted_transaction.cs,WriteTestScenario,The following statement contains a magic number: i < 15
Magic Number,EventStore.Core.Tests.Services.Storage.Transactions,when_rebuilding_index_for_partially_persisted_transaction,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Storage\Transactions\when_rebuilding_index_for_partially_persisted_transaction.cs,sequence_numbers_are_not_broken,The following statement contains a magic number: i < 15
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,respond_with_correct_message,The following statement contains a magic number: const int id = 101;
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,respond_even_if_fired_too_late,The following statement contains a magic number: _startTimeout(-5' 100);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,respond_even_if_fired_too_late,The following statement contains a magic number: _startTimeout(-5' 100);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,not_respond_until_time_elapses,The following statement contains a magic number: _startTimeout(5' 100);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,not_respond_until_time_elapses,The following statement contains a magic number: _startTimeout(5' 100);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,not_respond_until_time_elapses,The following statement contains a magic number: _timeProvider.AddTime(TimeSpan.FromMilliseconds(4));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,respond_in_correct_time,The following statement contains a magic number: _startTimeout(5' 100);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,respond_in_correct_time,The following statement contains a magic number: _startTimeout(5' 100);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,respond_in_correct_time,The following statement contains a magic number: _timeProvider.AddTime(TimeSpan.FromMilliseconds(5));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _startTimeout(5' 100);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _startTimeout(5' 100);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _startTimeout(25' 102);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _startTimeout(25' 102);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _startTimeout(45' 104);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _startTimeout(45' 104);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _startTimeout(35' 103);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _startTimeout(35' 103);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _startTimeout(15' 101);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _startTimeout(15' 101);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _timeProvider.AddTime(TimeSpan.FromMilliseconds(10));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: Assert.That(_timerMessages.ContainsSingle<TestResponseMessage>(msg => msg.Id == 100) &&  			            _timerMessages.ContainsNo<TestResponseMessage>(msg => msg.Id.IsBetween(101' 104)));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: Assert.That(_timerMessages.ContainsSingle<TestResponseMessage>(msg => msg.Id == 100) &&  			            _timerMessages.ContainsNo<TestResponseMessage>(msg => msg.Id.IsBetween(101' 104)));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: Assert.That(_timerMessages.ContainsSingle<TestResponseMessage>(msg => msg.Id == 100) &&  			            _timerMessages.ContainsNo<TestResponseMessage>(msg => msg.Id.IsBetween(101' 104)));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _timeProvider.AddTime(TimeSpan.FromMilliseconds(10));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: Assert.That(_timerMessages.ContainsSingle<TestResponseMessage>(msg => msg.Id == 101) &&  			            _timerMessages.ContainsNo<TestResponseMessage>(msg => msg.Id.IsBetween(102' 104)));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: Assert.That(_timerMessages.ContainsSingle<TestResponseMessage>(msg => msg.Id == 101) &&  			            _timerMessages.ContainsNo<TestResponseMessage>(msg => msg.Id.IsBetween(102' 104)));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: Assert.That(_timerMessages.ContainsSingle<TestResponseMessage>(msg => msg.Id == 101) &&  			            _timerMessages.ContainsNo<TestResponseMessage>(msg => msg.Id.IsBetween(102' 104)));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _timeProvider.AddTime(TimeSpan.FromMilliseconds(10));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: Assert.That(_timerMessages.ContainsSingle<TestResponseMessage>(msg => msg.Id == 102) &&  			            _timerMessages.ContainsNo<TestResponseMessage>(msg => msg.Id.IsBetween(103' 104)));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: Assert.That(_timerMessages.ContainsSingle<TestResponseMessage>(msg => msg.Id == 102) &&  			            _timerMessages.ContainsNo<TestResponseMessage>(msg => msg.Id.IsBetween(103' 104)));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: Assert.That(_timerMessages.ContainsSingle<TestResponseMessage>(msg => msg.Id == 102) &&  			            _timerMessages.ContainsNo<TestResponseMessage>(msg => msg.Id.IsBetween(103' 104)));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _timeProvider.AddTime(TimeSpan.FromMilliseconds(10));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: Assert.That(_timerMessages.ContainsSingle<TestResponseMessage>(msg => msg.Id == 103) &&  			            _timerMessages.ContainsNo<TestResponseMessage>(msg => msg.Id == 104));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: Assert.That(_timerMessages.ContainsSingle<TestResponseMessage>(msg => msg.Id == 103) &&  			            _timerMessages.ContainsNo<TestResponseMessage>(msg => msg.Id == 104));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: _timeProvider.AddTime(TimeSpan.FromMilliseconds(10));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_timeouts_gradually,The following statement contains a magic number: Assert.That(_timerMessages.ContainsSingle<TestResponseMessage>(msg => msg.Id == 104));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_that_are_scheduled_at_same_time,The following statement contains a magic number: _startTimeout(5' 100);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_that_are_scheduled_at_same_time,The following statement contains a magic number: _startTimeout(5' 100);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_that_are_scheduled_at_same_time,The following statement contains a magic number: _startTimeout(5' 101);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_that_are_scheduled_at_same_time,The following statement contains a magic number: _startTimeout(5' 101);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_that_are_scheduled_at_same_time,The following statement contains a magic number: _startTimeout(5' 102);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_that_are_scheduled_at_same_time,The following statement contains a magic number: _startTimeout(5' 102);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_that_are_scheduled_at_same_time,The following statement contains a magic number: _timeProvider.AddTime(TimeSpan.FromMilliseconds(5));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_that_are_scheduled_at_same_time,The following statement contains a magic number: Assert.That(_timerMessages.ContainsN<TestResponseMessage>(3' msg => msg.Id.IsBetween(100' 102)));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_that_are_scheduled_at_same_time,The following statement contains a magic number: Assert.That(_timerMessages.ContainsN<TestResponseMessage>(3' msg => msg.Id.IsBetween(100' 102)));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_that_are_scheduled_at_same_time,The following statement contains a magic number: Assert.That(_timerMessages.ContainsN<TestResponseMessage>(3' msg => msg.Id.IsBetween(100' 102)));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_after_long_pause,The following statement contains a magic number: _startTimeout(10 + i' 100 + i);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_after_long_pause,The following statement contains a magic number: _startTimeout(10 + i' 100 + i);
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_after_long_pause,The following statement contains a magic number: i < 20
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_after_long_pause,The following statement contains a magic number: _timeProvider.AddTime(TimeSpan.FromMilliseconds(1000));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_after_long_pause,The following statement contains a magic number: Assert.That(_timerMessages.ContainsN<TestResponseMessage>(20' msg => msg.Id.IsBetween(100' 119)));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_after_long_pause,The following statement contains a magic number: Assert.That(_timerMessages.ContainsN<TestResponseMessage>(20' msg => msg.Id.IsBetween(100' 119)));
Magic Number,EventStore.Core.Tests.Services.TimeService,time_service_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\TimeService\time_service_should.cs,fire_all_timeouts_after_long_pause,The following statement contains a magic number: Assert.That(_timerMessages.ContainsN<TestResponseMessage>(20' msg => msg.Id.IsBetween(100' 119)));
Magic Number,EventStore.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\Authorization\authorization_tests.cs,GetAuthLevel,The following statement contains a magic number: switch(userAuthorizationLevel){  				case "None":  					return 0;  				case "User":  					return 1;  				case "Ops":  					return 2;  				case "Admin":  					return 3;  				default:  					throw new Exception("Unknown authorization level");  			}
Magic Number,EventStore.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\Authorization\authorization_tests.cs,GetAuthLevel,The following statement contains a magic number: switch(userAuthorizationLevel){  				case "None":  					return 0;  				case "User":  					return 1;  				case "Ops":  					return 2;  				case "Admin":  					return 3;  				default:  					throw new Exception("Unknown authorization level");  			}
Magic Number,EventStore.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\Authorization\authorization_tests.cs,CreateUser,The following statement contains a magic number: trial<=5
Magic Number,EventStore.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\Authorization\authorization_tests.cs,authorization_tests,The following statement contains a magic number: var requiredMinAuthorizationLevel = httpEndpointTokens[2];
Magic Number,EventStore.Core.Tests.Services.Transport.Http,Authorization,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\Authorization\authorization_tests.cs,authorization_tests,The following statement contains a magic number: Assert.AreNotEqual(401' statusCode);
Magic Number,EventStore.Core.Tests.Services.Transport.Http,when_writing_events_and_content_type_is_events_json,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\auto_convertion.cs,should_store_data_as_json_if_valid_and_metadata_as_string_if_not,The following statement contains a magic number: Assert.That(events.Length' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Services.Transport.Http,when_writing_events_and_content_type_is_events_json,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\auto_convertion.cs,should_store_metadata_as_json_if_its_valid_and_data_as_string_if_its_not,The following statement contains a magic number: Assert.That(events.Length' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Services.Transport.Http,when_writing_events_and_content_type_is_events_json,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\auto_convertion.cs,should_store_both_data_and_metadata_as_json_if_both_are_valid_json_objects,The following statement contains a magic number: Assert.That(events.Length' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Services.Transport.Http,when_writing_events_and_content_type_is_events_json,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\auto_convertion.cs,should_store_both_data_and_metadata_as_string_if_both_are_not_valid_json_objects,The following statement contains a magic number: Assert.That(events.Length' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Services.Transport.Http,when_writing_events_and_content_type_is_events_json,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\auto_convertion.cs,should_do_its_best_at_preserving_data_format_with_multiple_events,The following statement contains a magic number: Assert.That(events.Length' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Services.Transport.Http,when_writing_events_and_content_type_is_events_xml,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\auto_convertion.cs,should_do_its_best_at_preserving_data_format_with_multiple_events,The following statement contains a magic number: Assert.That(events.Length' Is.EqualTo(2));
Magic Number,EventStore.Core.Tests.Services.Transport.Http,build_requested_url_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\build_requested_url_should.cs,with_advertise_http_port_set_only_port_is_changed,The following statement contains a magic number: var requestedUri =  				HttpEntity.BuildRequestedUrl(inputUri'  					new NameValueCollection()' null' 2116);
Magic Number,EventStore.Core.Tests.Services.Transport.Http,build_requested_url_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\build_requested_url_should.cs,with_advertise_ip_and_http_port_set_both_host_and_port_is_changed,The following statement contains a magic number: var requestedUri =  				HttpEntity.BuildRequestedUrl(inputUri'  					new NameValueCollection()' IPAddress.Parse("192.168.1.13")' 2116);
Magic Number,EventStore.Core.Tests.Services.Transport.Http,compress_response_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\compress_response_should.cs,with_gzip_compression_algo_and_string_larger_than_50kb_data_is_gzipped,The following statement contains a magic number: i < 60 * 1024
Magic Number,EventStore.Core.Tests.Services.Transport.Http,compress_response_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\compress_response_should.cs,with_gzip_compression_algo_and_string_larger_than_50kb_data_is_gzipped,The following statement contains a magic number: i < 60 * 1024
Magic Number,EventStore.Core.Tests.Services.Transport.Http,compress_response_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\compress_response_should.cs,with_deflate_compression_algo_and_string_larger_than_50kb_data_is_deflated,The following statement contains a magic number: i < 60 * 1024
Magic Number,EventStore.Core.Tests.Services.Transport.Http,compress_response_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\compress_response_should.cs,with_deflate_compression_algo_and_string_larger_than_50kb_data_is_deflated,The following statement contains a magic number: i < 60 * 1024
Magic Number,EventStore.Core.Tests.Services.Transport.Http,when_http_request_times_out,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\http_service_should.cs,when_http_request_times_out,The following statement contains a magic number: _timeout = 2000;
Magic Number,EventStore.Core.Tests.Services.Transport.Http,when_http_request_times_out,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\http_service_should.cs,should_throw_an_exception,The following statement contains a magic number: var sleepFor = _timeout + 1000;
Magic Number,EventStore.Core.Tests.Services.Transport.Http,media_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\media_type.cs,parses_generic_wildcard_with_priority,The following statement contains a magic number: Assert.AreEqual(0.4f' c.Priority);
Magic Number,EventStore.Core.Tests.Services.Transport.Http,media_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\media_type.cs,parses_generic_wildcard_with_priority_and_other_param,The following statement contains a magic number: Assert.AreEqual(0.4f' c.Priority);
Magic Number,EventStore.Core.Tests.Services.Transport.Http,media_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\media_type.cs,parses_specific_media_range_with_priority,The following statement contains a magic number: Assert.AreEqual(0.7f' c.Priority);
Magic Number,EventStore.Core.Tests.Services.Transport.Http,media_type,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\media_type.cs,parses_with_encoding_and_priority,The following statement contains a magic number: Assert.AreEqual(0.3f' c.Priority);
Magic Number,EventStore.Core.Tests.Services.Transport.Http,PortableServer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\PortableServer.cs,SetUp,The following statement contains a magic number: var queue = new QueuedHandlerThreadPool(pipelineBus' "Test"' true' TimeSpan.FromMilliseconds(50));
Magic Number,EventStore.Core.Tests.Services.Transport.Http,FakeController,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\speed_test.cs,Register,The following statement contains a magic number: _http.RegisterAction(new ControllerAction(route' verb' Codec.NoCodecs' SupportedCodecs' AuthorizationLevel.None)' (x' y) => {  					x.Reply(new byte[0]' 200' ""' ""' Helper.UTF8NoBom' null' e => new Exception());  					CountdownEvent.Signal();  				});
Magic Number,EventStore.Core.Tests.Services.Transport.Http,speed_test,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\speed_test.cs,of_http_requests_routing,The following statement contains a magic number: const int iterations = 100000;
Magic Number,EventStore.Core.Tests.Services.Transport.Http,speed_test,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\speed_test.cs,of_http_requests_routing,The following statement contains a magic number: var queue = new QueuedHandlerThreadPool(bus' "Test"' true' TimeSpan.FromMilliseconds(50));
Magic Number,EventStore.Core.Tests.Services.Transport.Http,speed_test,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\speed_test.cs,of_http_requests_routing,The following statement contains a magic number: var timeout = TimeSpan.FromMilliseconds(10000);
Magic Number,EventStore.Core.Tests.Services.Transport.Http,speed_test,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\speed_test.cs,of_http_requests_routing,The following statement contains a magic number: Console.WriteLine("{0} request done in {1} ({2:0.00} per sec)"' iterations' sw.Elapsed'  				1000.0 * iterations / sw.ElapsedMilliseconds);
Magic Number,EventStore.Core.Tests.Services.Transport.Http,speed_test,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\speed_test.cs,of_uri_router,The following statement contains a magic number: const int iterations = 100000;
Magic Number,EventStore.Core.Tests.Services.Transport.Http,speed_test,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\speed_test.cs,of_uri_router,The following statement contains a magic number: Console.WriteLine("{0} request done in {1} ({2:0.00} per sec)"' iterations' sw.Elapsed'  				1000.0 * iterations / sw.ElapsedMilliseconds);
Magic Number,EventStore.Core.Tests.Services.Transport.Http,uri_router_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\uri_router_should.cs,match_single_segment_path,The following statement contains a magic number: Assert.AreEqual(2' match.Count);
Magic Number,EventStore.Core.Tests.Services.Transport.Http,uri_router_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\uri_router_should.cs,match_all_possible_alternatives,The following statement contains a magic number: Assert.AreEqual(8' match.Count);
Magic Number,EventStore.Core.Tests.Services.Transport.Http,uri_router_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\uri_router_should.cs,match_same_routes_with_different_http_methods,The following statement contains a magic number: Assert.AreEqual(2' match.Count);
Magic Number,EventStore.Core.Tests.Services.Transport.Http,when_getting_tcp_stats_from_stat_controller,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Http\when_getting_tcp_stats_from_stat_controller.cs,should_return_the_external_connections,The following statement contains a magic number: Assert.AreEqual(2' _results.Count(r => r.IsExternalConnection));
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,should_throw_argument_null_exception_when_created_as_authorized_but_login_not_provided,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()' null' "pa$$"'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,should_throw_argument_null_exception_when_created_as_authorized_but_login_not_provided,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()' null' "pa$$"'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,should_throw_argument_null_exception_when_created_as_authorized_but_password_not_provided,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()' "login"' null'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,should_throw_argument_null_exception_when_created_as_authorized_but_password_not_provided,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()' "login"' null'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,should_throw_argument_exception_when_created_as_not_authorized_but_login_is_provided,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.None' Guid.NewGuid()' "login"' null'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,should_throw_argument_exception_when_created_as_not_authorized_but_login_is_provided,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.None' Guid.NewGuid()' "login"' null'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,should_throw_argument_exception_when_created_as_not_authorized_but_password_is_provided,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.None' Guid.NewGuid()' null' "pa$$"'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,should_throw_argument_exception_when_created_as_not_authorized_but_password_is_provided,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>  				new TcpPackage(TcpCommand.BadRequest' TcpFlags.None' Guid.NewGuid()' null' "pa$$"'  					new byte[] {1' 2' 3}));
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,not_authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: var refPkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.None' corrId' null' null' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,not_authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: var refPkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.None' corrId' null' null' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,not_authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(3' pkg.Data.Count);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,not_authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(2' pkg.Data.Array[pkg.Data.Offset + 1]);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,not_authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(3' pkg.Data.Array[pkg.Data.Offset + 2]);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,not_authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(3' pkg.Data.Array[pkg.Data.Offset + 2]);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: var refPkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' corrId' "login"' "pa$$"'  				new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: var refPkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' corrId' "login"' "pa$$"'  				new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(3' pkg.Data.Count);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(2' pkg.Data.Array[pkg.Data.Offset + 1]);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(3' pkg.Data.Array[pkg.Data.Offset + 2]);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,authorized_with_data_should_serialize_and_deserialize_correctly,The following statement contains a magic number: Assert.AreEqual(3' pkg.Data.Array[pkg.Data.Offset + 2]);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,should_throw_argument_exception_on_serialization_when_login_too_long,The following statement contains a magic number: var pkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()'  				new string('*'' 256)' "pa$$"' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,should_throw_argument_exception_on_serialization_when_login_too_long,The following statement contains a magic number: var pkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()'  				new string('*'' 256)' "pa$$"' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,should_throw_argument_exception_on_serialization_when_login_too_long,The following statement contains a magic number: var pkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()'  				new string('*'' 256)' "pa$$"' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,should_throw_argument_exception_on_serialization_when_password_too_long,The following statement contains a magic number: var pkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()' "login"'  				new string('*'' 256)' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,should_throw_argument_exception_on_serialization_when_password_too_long,The following statement contains a magic number: var pkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()' "login"'  				new string('*'' 256)' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,core_tcp_package,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\core_tcp_package.cs,should_throw_argument_exception_on_serialization_when_password_too_long,The following statement contains a magic number: var pkg = new TcpPackage(TcpCommand.BadRequest' TcpFlags.Authenticated' Guid.NewGuid()' "login"'  				new string('*'' 256)' new byte[] {1' 2' 3});
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,ssl_connections,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\ssl_connection.cs,should_connect_to_each_other_and_send_data,The following statement contains a magic number: var sent = new byte[1000];
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,ssl_connections,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\ssl_connection.cs,should_connect_to_each_other_and_send_data,The following statement contains a magic number: Assert.IsTrue(done.Wait(20000)' "Took too long to receive completion.");
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,Setup,The following statement contains a magic number: _connection = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.External' new ClientTcpDispatcher()'  				InMemoryBus.CreateTest()' dummyConnection' InMemoryBus.CreateTest()' new InternalAuthenticationProvider(  					new Core.Helpers.IODispatcher(InMemoryBus.CreateTest()' new NoopEnvelope())'  					new StubPasswordHashAlgorithm()' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { }'  				Opts.ConnectionPendingSendBytesThresholdDefault' Opts.ConnectionQueueSizeThresholdDefault);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,Setup,The following statement contains a magic number: _connection = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.External' new ClientTcpDispatcher()'  				InMemoryBus.CreateTest()' dummyConnection' InMemoryBus.CreateTest()' new InternalAuthenticationProvider(  					new Core.Helpers.IODispatcher(InMemoryBus.CreateTest()' new NoopEnvelope())'  					new StubPasswordHashAlgorithm()' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { }'  				Opts.ConnectionPendingSendBytesThresholdDefault' Opts.ConnectionQueueSizeThresholdDefault);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_stream_events_forward_and_stream_was_deleted_should_downgrade_last_event_number,The following statement contains a magic number: var msg = new ClientMessage.ReadStreamEventsForwardCompleted(Guid.NewGuid()' "test-stream"' 0' 100'  				ReadStreamResult.StreamDeleted' new ResolvedEvent[0]' new StreamMetadata()'  				true' ""' -1' long.MaxValue' true' 1000);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_stream_events_forward_and_stream_was_deleted_should_downgrade_last_event_number,The following statement contains a magic number: var msg = new ClientMessage.ReadStreamEventsForwardCompleted(Guid.NewGuid()' "test-stream"' 0' 100'  				ReadStreamResult.StreamDeleted' new ResolvedEvent[0]' new StreamMetadata()'  				true' ""' -1' long.MaxValue' true' 1000);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_stream_events_forward_and_stream_was_deleted_should_not_downgrade_last_event_number_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadStreamEventsForwardCompleted(Guid.NewGuid()' "test-stream"' 0' 100'  				ReadStreamResult.StreamDeleted' new ResolvedEvent[0]' new StreamMetadata()'  				true' ""' -1' long.MaxValue' true' 1000);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_stream_events_forward_and_stream_was_deleted_should_not_downgrade_last_event_number_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadStreamEventsForwardCompleted(Guid.NewGuid()' "test-stream"' 0' 100'  				ReadStreamResult.StreamDeleted' new ResolvedEvent[0]' new StreamMetadata()'  				true' ""' -1' long.MaxValue' true' 1000);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_stream_events_backward_and_stream_was_deleted_should_downgrade_last_event_number,The following statement contains a magic number: var msg = new ClientMessage.ReadStreamEventsBackwardCompleted(Guid.NewGuid()' "test-stream"' 0' 100'  				ReadStreamResult.StreamDeleted' new ResolvedEvent[0]' new StreamMetadata()'  				true' ""' -1' long.MaxValue' true' 1000);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_stream_events_backward_and_stream_was_deleted_should_downgrade_last_event_number,The following statement contains a magic number: var msg = new ClientMessage.ReadStreamEventsBackwardCompleted(Guid.NewGuid()' "test-stream"' 0' 100'  				ReadStreamResult.StreamDeleted' new ResolvedEvent[0]' new StreamMetadata()'  				true' ""' -1' long.MaxValue' true' 1000);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_stream_events_backward_and_stream_was_deleted_should_not_downgrade_last_event_number_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadStreamEventsBackwardCompleted(Guid.NewGuid()' "test-stream"' 0' 100'  				ReadStreamResult.StreamDeleted' new ResolvedEvent[0]' new StreamMetadata()'  				true' ""' -1' long.MaxValue' true' 1000);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_stream_events_backward_and_stream_was_deleted_should_not_downgrade_last_event_number_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadStreamEventsBackwardCompleted(Guid.NewGuid()' "test-stream"' 0' 100'  				ReadStreamResult.StreamDeleted' new ResolvedEvent[0]' new StreamMetadata()'  				true' ""' -1' long.MaxValue' true' 1000);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_deleted_event_should_not_downgrade_last_event_number_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_deleted_event_should_not_downgrade_last_event_number_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_deleted_event_should_not_downgrade_last_event_number_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_deleted_event_should_not_downgrade_last_event_number_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_link_to_deleted_event_should_downgrade_version,The following statement contains a magic number: var events = new ResolvedEvent[] {  				ResolvedEvent.ForResolvedLink(CreateLinkEventRecord()' CreateDeletedEventRecord()' 100)  			};
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_link_to_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_link_to_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_link_to_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_link_to_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_link_to_deleted_event_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var events = new ResolvedEvent[] {  				ResolvedEvent.ForResolvedLink(CreateLinkEventRecord()' CreateDeletedEventRecord()' 100)  			};
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_link_to_deleted_event_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_link_to_deleted_event_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_link_to_deleted_event_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_forward_completed_with_link_to_deleted_event_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsForwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""' events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_deleted_event_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_deleted_event_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_deleted_event_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_deleted_event_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_link_to_deleted_event_should_downgrade_version,The following statement contains a magic number: var events = new ResolvedEvent[] {  				ResolvedEvent.ForResolvedLink(CreateLinkEventRecord()' CreateDeletedEventRecord()' 100)  			};
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_link_to_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_link_to_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_link_to_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_link_to_deleted_event_should_downgrade_version,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_link_to_deleted_event_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var events = new ResolvedEvent[] {  				ResolvedEvent.ForResolvedLink(CreateLinkEventRecord()' CreateDeletedEventRecord()' 100)  			};
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_link_to_deleted_event_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_link_to_deleted_event_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_link_to_deleted_event_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_read_all_events_backward_completed_with_link_to_deleted_event_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.ReadAllEventsBackwardCompleted(Guid.NewGuid()' ReadAllResult.Success' ""'  				events'  				new StreamMetadata()' true' 10' new TFPos(0' 0)'  				new TFPos(200' 200)' new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_subscribe_to_stream_confirmation_when_stream_deleted_should_downgrade_last_event_number,The following statement contains a magic number: var msg = new ClientMessage.SubscriptionConfirmation(Guid.NewGuid()' 100' long.MaxValue);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_subscribe_to_stream_confirmation_when_stream_deleted_should_not_downgrade_version_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.SubscriptionConfirmation(Guid.NewGuid()' 100' long.MaxValue);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_subscribe_to_stream_confirmation_when_stream_deleted_should_not_downgrade_last_event_number_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.SubscriptionConfirmation(Guid.NewGuid()' 100' long.MaxValue);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_subscribe_to_stream_confirmation_with_null_last_event_number_should_not_change,The following statement contains a magic number: var msg = new ClientMessage.SubscriptionConfirmation(Guid.NewGuid()' 100' null);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_persistent_subscription_confirmation_when_stream_deleted_should_downgrade_last_event_number,The following statement contains a magic number: var msg = new ClientMessage.PersistentSubscriptionConfirmation("subscription"' Guid.NewGuid()' 100'  				long.MaxValue);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_persistent_subscription_confirmation_when_stream_deleted_should_not_downgrade_last_event_number_for_v2_clients,The following statement contains a magic number: var msg = new ClientMessage.PersistentSubscriptionConfirmation("subscription"' Guid.NewGuid()' 100'  				long.MaxValue);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,when_wrapping_persistent_subscription_confirmation_with_null_last_event_number_should_not_change,The following statement contains a magic number: var msg = new ClientMessage.PersistentSubscriptionConfirmation("subscription"' Guid.NewGuid()' 100' null);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpClientDispatcherTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpClientDispatcherTests.cs,CreateLinkEventRecord,The following statement contains a magic number: return new EventRecord(0' LogRecord.Prepare(100' Guid.NewGuid()' Guid.NewGuid()' 0' 0'  				"link-stream"' -1' PrepareFlags.SingleWrite | PrepareFlags.Data' SystemEventTypes.LinkTo'  				Encoding.UTF8.GetBytes(string.Format("{0}@test-stream"' long.MaxValue))' new byte[0]));
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_handling_trusted_write_on_external_service,The following statement contains a magic number: var tcpConnectionManager = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.External' new ClientTcpDispatcher()'  				InMemoryBus.CreateTest()' dummyConnection' InMemoryBus.CreateTest()'  				new InternalAuthenticationProvider(  					new Core.Helpers.IODispatcher(InMemoryBus.CreateTest()' new NoopEnvelope())'  					new StubPasswordHashAlgorithm()' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { }'  				_connectionPendingSendBytesThreshold' _connectionQueueSizeThreshold);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_handling_trusted_write_on_external_service,The following statement contains a magic number: var tcpConnectionManager = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.External' new ClientTcpDispatcher()'  				InMemoryBus.CreateTest()' dummyConnection' InMemoryBus.CreateTest()'  				new InternalAuthenticationProvider(  					new Core.Helpers.IODispatcher(InMemoryBus.CreateTest()' new NoopEnvelope())'  					new StubPasswordHashAlgorithm()' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { }'  				_connectionPendingSendBytesThreshold' _connectionQueueSizeThreshold);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_handling_trusted_write_on_internal_service,The following statement contains a magic number: var tcpConnectionManager = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.Internal' new ClientTcpDispatcher()'  				publisher' dummyConnection' publisher'  				new InternalAuthenticationProvider(new Core.Helpers.IODispatcher(publisher' new NoopEnvelope())'  					new StubPasswordHashAlgorithm()' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { }'  				_connectionPendingSendBytesThreshold' _connectionQueueSizeThreshold);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_handling_trusted_write_on_internal_service,The following statement contains a magic number: var tcpConnectionManager = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.Internal' new ClientTcpDispatcher()'  				publisher' dummyConnection' publisher'  				new InternalAuthenticationProvider(new Core.Helpers.IODispatcher(publisher' new NoopEnvelope())'  					new StubPasswordHashAlgorithm()' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { }'  				_connectionPendingSendBytesThreshold' _connectionQueueSizeThreshold);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_handling_trusted_write_on_internal_service,The following statement contains a magic number: !waiter.WaitOne(TimeSpan.FromSeconds(5))
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_limit_pending_and_sending_message_smaller_than_threshold_and_pending_bytes_over_threshold_should_close_connection,The following statement contains a magic number: var messageSize = _connectionPendingSendBytesThreshold / 2;
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_limit_pending_and_sending_message_smaller_than_threshold_and_pending_bytes_over_threshold_should_close_connection,The following statement contains a magic number: dummyConnection.PendingSendBytes = _connectionPendingSendBytesThreshold + 1000;
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_limit_pending_and_sending_message_smaller_than_threshold_and_pending_bytes_over_threshold_should_close_connection,The following statement contains a magic number: var tcpConnectionManager = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.External' new ClientTcpDispatcher()'  				InMemoryBus.CreateTest()' dummyConnection' InMemoryBus.CreateTest()'  				new InternalAuthenticationProvider(  					new Core.Helpers.IODispatcher(InMemoryBus.CreateTest()' new NoopEnvelope())' null' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { mre.Set(); }'  				_connectionPendingSendBytesThreshold' _connectionQueueSizeThreshold);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_limit_pending_and_sending_message_smaller_than_threshold_and_pending_bytes_over_threshold_should_close_connection,The following statement contains a magic number: var tcpConnectionManager = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.External' new ClientTcpDispatcher()'  				InMemoryBus.CreateTest()' dummyConnection' InMemoryBus.CreateTest()'  				new InternalAuthenticationProvider(  					new Core.Helpers.IODispatcher(InMemoryBus.CreateTest()' new NoopEnvelope())' null' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { mre.Set(); }'  				_connectionPendingSendBytesThreshold' _connectionQueueSizeThreshold);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_limit_pending_and_sending_message_smaller_than_threshold_and_pending_bytes_over_threshold_should_close_connection,The following statement contains a magic number: !mre.Wait(2000)
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_limit_pending_and_sending_message_larger_than_pending_bytes_threshold_but_no_bytes_pending_should_not_close_connection,The following statement contains a magic number: var messageSize = _connectionPendingSendBytesThreshold + 1000;
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_limit_pending_and_sending_message_larger_than_pending_bytes_threshold_but_no_bytes_pending_should_not_close_connection,The following statement contains a magic number: var tcpConnectionManager = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.External' new ClientTcpDispatcher()'  				InMemoryBus.CreateTest()' dummyConnection' InMemoryBus.CreateTest()'  				new InternalAuthenticationProvider(  					new Core.Helpers.IODispatcher(InMemoryBus.CreateTest()' new NoopEnvelope())' null' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { }'  				_connectionPendingSendBytesThreshold' _connectionQueueSizeThreshold);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_limit_pending_and_sending_message_larger_than_pending_bytes_threshold_but_no_bytes_pending_should_not_close_connection,The following statement contains a magic number: var tcpConnectionManager = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.External' new ClientTcpDispatcher()'  				InMemoryBus.CreateTest()' dummyConnection' InMemoryBus.CreateTest()'  				new InternalAuthenticationProvider(  					new Core.Helpers.IODispatcher(InMemoryBus.CreateTest()' new NoopEnvelope())' null' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { }'  				_connectionPendingSendBytesThreshold' _connectionQueueSizeThreshold);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_not_limit_pending_and_sending_message_smaller_than_threshold_and_pending_bytes_over_threshold_should_not_close_connection,The following statement contains a magic number: var messageSize = _connectionPendingSendBytesThreshold / 2;
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_not_limit_pending_and_sending_message_smaller_than_threshold_and_pending_bytes_over_threshold_should_not_close_connection,The following statement contains a magic number: dummyConnection.PendingSendBytes = _connectionPendingSendBytesThreshold + 1000;
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_not_limit_pending_and_sending_message_smaller_than_threshold_and_pending_bytes_over_threshold_should_not_close_connection,The following statement contains a magic number: var tcpConnectionManager = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.External' new ClientTcpDispatcher()'  				InMemoryBus.CreateTest()' dummyConnection' InMemoryBus.CreateTest()'  				new InternalAuthenticationProvider(  					new Core.Helpers.IODispatcher(InMemoryBus.CreateTest()' new NoopEnvelope())' null' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { mre.Set(); }'  				ESConsts.UnrestrictedPendingSendBytes' ESConsts.MaxConnectionQueueSize);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_not_limit_pending_and_sending_message_smaller_than_threshold_and_pending_bytes_over_threshold_should_not_close_connection,The following statement contains a magic number: var tcpConnectionManager = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.External' new ClientTcpDispatcher()'  				InMemoryBus.CreateTest()' dummyConnection' InMemoryBus.CreateTest()'  				new InternalAuthenticationProvider(  					new Core.Helpers.IODispatcher(InMemoryBus.CreateTest()' new NoopEnvelope())' null' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { mre.Set(); }'  				ESConsts.UnrestrictedPendingSendBytes' ESConsts.MaxConnectionQueueSize);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_send_queue_size_is_smaller_than_threshold_should_not_close_connection,The following statement contains a magic number: var tcpConnectionManager = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.External' new ClientTcpDispatcher()'  				InMemoryBus.CreateTest()' dummyConnection' InMemoryBus.CreateTest()'  				new InternalAuthenticationProvider(  					new Core.Helpers.IODispatcher(InMemoryBus.CreateTest()' new NoopEnvelope())' null' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { mre.Set(); }'  				ESConsts.UnrestrictedPendingSendBytes' ESConsts.MaxConnectionQueueSize);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_send_queue_size_is_smaller_than_threshold_should_not_close_connection,The following statement contains a magic number: var tcpConnectionManager = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.External' new ClientTcpDispatcher()'  				InMemoryBus.CreateTest()' dummyConnection' InMemoryBus.CreateTest()'  				new InternalAuthenticationProvider(  					new Core.Helpers.IODispatcher(InMemoryBus.CreateTest()' new NoopEnvelope())' null' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { mre.Set(); }'  				ESConsts.UnrestrictedPendingSendBytes' ESConsts.MaxConnectionQueueSize);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_send_queue_size_is_larger_than_threshold_should_close_connection,The following statement contains a magic number: var tcpConnectionManager = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.External' new ClientTcpDispatcher()'  				InMemoryBus.CreateTest()' dummyConnection' InMemoryBus.CreateTest()'  				new InternalAuthenticationProvider(  					new Core.Helpers.IODispatcher(InMemoryBus.CreateTest()' new NoopEnvelope())' null' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { mre.Set(); }'  				ESConsts.UnrestrictedPendingSendBytes' ESConsts.MaxConnectionQueueSize);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_send_queue_size_is_larger_than_threshold_should_close_connection,The following statement contains a magic number: var tcpConnectionManager = new TcpConnectionManager(  				Guid.NewGuid().ToString()' TcpServiceType.External' new ClientTcpDispatcher()'  				InMemoryBus.CreateTest()' dummyConnection' InMemoryBus.CreateTest()'  				new InternalAuthenticationProvider(  					new Core.Helpers.IODispatcher(InMemoryBus.CreateTest()' new NoopEnvelope())' null' 1' false)'  				TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10)' (man' err) => { mre.Set(); }'  				ESConsts.UnrestrictedPendingSendBytes' ESConsts.MaxConnectionQueueSize);
Magic Number,EventStore.Core.Tests.Services.Transport.Tcp,TcpConnectionManagerTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Transport\Tcp\TcpConnectionManagerTests.cs,when_send_queue_size_is_larger_than_threshold_should_close_connection,The following statement contains a magic number: !mre.Wait(2000)
Magic Number,EventStore.Core.Tests.Services.UserManagementService,when_resetting_the_password_twice,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\UserManagementService\user_management_service.cs,replies_success,The following statement contains a magic number: Assert.AreEqual(2' updateResults.Count);
Magic Number,EventStore.Core.Tests.Services.UserManagementService,when_resetting_the_password_twice,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\UserManagementService\user_management_service.cs,configures_password_changed_notification_system_stream_only_once,The following statement contains a magic number: HelperExtensions.AssertJson(new {___maxAge = 3600}' passwordChangedEvent.Data.ParseJson<JObject>());
Magic Number,EventStore.Core.Tests.Services.UserManagementService,when_changing_a_password_with_correct_current_password,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\UserManagementService\user_management_service.cs,configures_password_changed_notification_system_stream,The following statement contains a magic number: HelperExtensions.AssertJson(new {___maxAge = 3600}' passwordChangedEvent.Data.ParseJson<JObject>());
Magic Number,EventStore.Core.Tests.Services.UserManagementService,when_getting_all_users,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\UserManagementService\user_management_service.cs,returns_all_user_accounts,The following statement contains a magic number: Assert.AreEqual(4' users.Length);
Magic Number,EventStore.Core.Tests.TransactionLog,FakeReadIndex,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\FakeReadIndex.cs,GetStreamLastEventNumber,The following statement contains a magic number: return _isStreamDeleted(streamId) ? EventNumber.DeletedStream : 1000000;
Magic Number,EventStore.Core.Tests.TransactionLog,FlushTimeMeter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\FlushTimeMeter.cs,Test,The following statement contains a magic number: const int iter = 1000;
Magic Number,EventStore.Core.Tests.TransactionLog,FlushTimeMeter,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\FlushTimeMeter.cs,Test,The following statement contains a magic number: bytes < 1000000
Magic Number,EventStore.Core.Tests.TransactionLog,prepare_log_record_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\prepare_log_record_should.cs,throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => {  				new PrepareLogRecord(0' Guid.NewGuid()' Guid.NewGuid()' 0' -2' "test"' 0' DateTime.UtcNow'  					PrepareFlags.None' "type"' new byte[0]' null);  			});
Magic Number,EventStore.Core.Tests.TransactionLog,prepare_log_record_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\prepare_log_record_should.cs,throw_argumentoutofrangeexception_when_given_incorrect_expectedversion,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => {  				new PrepareLogRecord(0' Guid.NewGuid()' Guid.NewGuid()' 0' 0' "test"' -3' DateTime.UtcNow'  					PrepareFlags.None' "type"' new byte[0]' null);  			});
Magic Number,EventStore.Core.Tests.TransactionLog,TFChunkHelper,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\TFChunkHelper.cs,CreateNewChunk,The following statement contains a magic number: return TFChunk.CreateNew(fileName' chunkSize' 0' 0'  				isScavenged: isScavenged' inMem: false' unbuffered: false'  				writethrough: false' initialReaderCount: 5' reduceFileCachePressure: false);
Magic Number,EventStore.Core.Tests.TransactionLog,versioned_pattern_filenaming_strategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\versioned_pattern_filenaming_strategy.cs,when_getting_file_for_nonnegative_index_and_version_appends_value_and_provided_version,The following statement contains a magic number: Assert.AreEqual("path" + Path.DirectorySeparatorChar + "prefix-000001.000007"'  				strategy.GetFilenameFor(1' 7));
Magic Number,EventStore.Core.Tests.TransactionLog,versioned_pattern_filenaming_strategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\versioned_pattern_filenaming_strategy.cs,returns_all_existing_versions_of_the_same_chunk_in_descending_order_of_versions,The following statement contains a magic number: var versions = strategy.GetAllVersionsFor(5);
Magic Number,EventStore.Core.Tests.TransactionLog,versioned_pattern_filenaming_strategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\versioned_pattern_filenaming_strategy.cs,returns_all_existing_versions_of_the_same_chunk_in_descending_order_of_versions,The following statement contains a magic number: Assert.AreEqual(4' versions.Length);
Magic Number,EventStore.Core.Tests.TransactionLog,versioned_pattern_filenaming_strategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\versioned_pattern_filenaming_strategy.cs,returns_all_existing_versions_of_the_same_chunk_in_descending_order_of_versions,The following statement contains a magic number: Assert.AreEqual(GetFilePathFor("chunk-000005.000002")' versions[2]);
Magic Number,EventStore.Core.Tests.TransactionLog,versioned_pattern_filenaming_strategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\versioned_pattern_filenaming_strategy.cs,returns_all_existing_versions_of_the_same_chunk_in_descending_order_of_versions,The following statement contains a magic number: Assert.AreEqual(GetFilePathFor("chunk-000005.000000")' versions[3]);
Magic Number,EventStore.Core.Tests.TransactionLog,versioned_pattern_filenaming_strategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\versioned_pattern_filenaming_strategy.cs,returns_all_existing_not_temporary_files_with_correct_pattern,The following statement contains a magic number: Assert.AreEqual(7' versions.Length);
Magic Number,EventStore.Core.Tests.TransactionLog,versioned_pattern_filenaming_strategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\versioned_pattern_filenaming_strategy.cs,returns_all_existing_not_temporary_files_with_correct_pattern,The following statement contains a magic number: Assert.AreEqual(GetFilePathFor("chunk-000003.000000")' versions[2]);
Magic Number,EventStore.Core.Tests.TransactionLog,versioned_pattern_filenaming_strategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\versioned_pattern_filenaming_strategy.cs,returns_all_existing_not_temporary_files_with_correct_pattern,The following statement contains a magic number: Assert.AreEqual(GetFilePathFor("chunk-000005.000000")' versions[3]);
Magic Number,EventStore.Core.Tests.TransactionLog,versioned_pattern_filenaming_strategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\versioned_pattern_filenaming_strategy.cs,returns_all_existing_not_temporary_files_with_correct_pattern,The following statement contains a magic number: Assert.AreEqual(GetFilePathFor("chunk-000005.000002")' versions[4]);
Magic Number,EventStore.Core.Tests.TransactionLog,versioned_pattern_filenaming_strategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\versioned_pattern_filenaming_strategy.cs,returns_all_existing_not_temporary_files_with_correct_pattern,The following statement contains a magic number: Assert.AreEqual(GetFilePathFor("chunk-000005.000005")' versions[5]);
Magic Number,EventStore.Core.Tests.TransactionLog,versioned_pattern_filenaming_strategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\versioned_pattern_filenaming_strategy.cs,returns_all_existing_not_temporary_files_with_correct_pattern,The following statement contains a magic number: Assert.AreEqual(GetFilePathFor("chunk-000005.000007")' versions[6]);
Magic Number,EventStore.Core.Tests.TransactionLog,versioned_pattern_filenaming_strategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\versioned_pattern_filenaming_strategy.cs,returns_all_temp_files_in_directory,The following statement contains a magic number: Assert.AreEqual(3' tempFiles.Length);
Magic Number,EventStore.Core.Tests.TransactionLog,versioned_pattern_filenaming_strategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\versioned_pattern_filenaming_strategy.cs,returns_all_temp_files_in_directory,The following statement contains a magic number: Assert.AreEqual(GetFilePathFor("foo.tmp")' tempFiles[2]);
Magic Number,EventStore.Core.Tests.TransactionLog,versioned_pattern_filenaming_strategy,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\versioned_pattern_filenaming_strategy.cs,returns_temp_filenames_detectable_by_getalltempfiles_method,The following statement contains a magic number: Assert.AreEqual(2' tempFiles.Length);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_past_end_of_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_past_end_of_a_tfchunk.cs,SetUp,The following statement contains a magic number: var record = new PrepareLogRecord(15556' _corrId' _eventId' 15556' 0' "test"' 1'  				new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_past_end_of_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_past_end_of_a_tfchunk.cs,SetUp,The following statement contains a magic number: var record = new PrepareLogRecord(15556' _corrId' _eventId' 15556' 0' "test"' 1'  				new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_past_end_of_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_past_end_of_a_tfchunk.cs,SetUp,The following statement contains a magic number: var record = new PrepareLogRecord(15556' _corrId' _eventId' 15556' 0' "test"' 1'  				new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_past_end_of_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_past_end_of_a_tfchunk.cs,SetUp,The following statement contains a magic number: var record = new PrepareLogRecord(15556' _corrId' _eventId' 15556' 0' "test"' 1'  				new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_past_end_of_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_past_end_of_a_tfchunk.cs,SetUp,The following statement contains a magic number: var record = new PrepareLogRecord(15556' _corrId' _eventId' 15556' 0' "test"' 1'  				new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_past_end_of_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_past_end_of_a_tfchunk.cs,SetUp,The following statement contains a magic number: var record = new PrepareLogRecord(15556' _corrId' _eventId' 15556' 0' "test"' 1'  				new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_past_end_of_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_past_end_of_a_tfchunk.cs,SetUp,The following statement contains a magic number: _chunk = TFChunkHelper.CreateNewChunk(Filename' 20);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_to_a_tfchunk_and_flushing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_to_a_tfchunk_and_flushing.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_to_a_tfchunk_and_flushing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_to_a_tfchunk_and_flushing.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_to_a_tfchunk_and_flushing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_to_a_tfchunk_and_flushing.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_to_a_tfchunk_and_flushing,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_to_a_tfchunk_and_flushing.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_to_a_tfchunk_without_flush,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_to_a_tfchunk_without_flush.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_to_a_tfchunk_without_flush,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_to_a_tfchunk_without_flush.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_to_a_tfchunk_without_flush,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_to_a_tfchunk_without_flush.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_appending_to_a_tfchunk_without_flush,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_appending_to_a_tfchunk_without_flush.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_false_when_writer_checksum_is_equal_to_reader_checksum,The following statement contains a magic number: writerchk.Write(12);
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_false_when_writer_checksum_is_equal_to_reader_checksum,The following statement contains a magic number: chaserchk.Write(12);
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_false_when_writer_checksum_is_equal_to_reader_checksum,The following statement contains a magic number: Assert.AreEqual(12' chaserchk.Read());
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_ahead,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_ahead,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_ahead,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_ahead,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_ahead,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_ahead,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_ahead,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_ahead,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_ahead,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_ahead,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_ahead,The following statement contains a magic number: fs.SetLength(ChunkHeader.Size + ChunkFooter.Size + 10000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_ahead,The following statement contains a magic number: var chunkHeader = new ChunkHeader(TFChunk.CurrentChunkVersion' 10000' 0' 0' false' Guid.NewGuid())  					.AsByteArray();
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_ahead,The following statement contains a magic number: var writerchk = new InMemoryCheckpoint(128);
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_record_bigger_than_internal_buffer,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[9000]'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_record_bigger_than_internal_buffer,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[9000]'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_record_bigger_than_internal_buffer,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[9000]'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_record_bigger_than_internal_buffer,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[9000]'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_record_bigger_than_internal_buffer,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[9000]'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_record_bigger_than_internal_buffer,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[9000]'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_record_bigger_than_internal_buffer,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[9000]'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_equal,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_equal,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_equal,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_equal,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_equal,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_equal,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_equal,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_equal,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_equal,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_chasing_a_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_chasing_a_chunked_transaction_log.cs,try_read_returns_record_when_writerchecksum_equal,The following statement contains a magic number: var recordToWrite = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_creating_tfchunk_from_empty_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_creating_tfchunk_from_empty_file.cs,SetUp,The following statement contains a magic number: _chunk = TFChunkHelper.CreateNewChunk(Filename' 1024);
Magic Number,EventStore.Core.Tests.TransactionLog,when_destroying_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_destroying_a_tfchunk.cs,SetUp,The following statement contains a magic number: _chunk = TFChunkHelper.CreateNewChunk(Filename' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_destroying_a_tfchunk_that_is_locked,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_destroying_a_tfchunk_that_is_locked.cs,SetUp,The following statement contains a magic number: _chunk = TFChunkHelper.CreateNewChunk(Filename' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_destroying_a_tfchunk_that_is_locked,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_destroying_a_tfchunk_that_is_locked.cs,TearDown,The following statement contains a magic number: _chunk.WaitForDestroy(2000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_having_scavenged_tfchunk_with_all_records_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_having_scavenged_tfchunk_with_all_records_removed.cs,TestFixtureSetUp,The following statement contains a magic number: _db = new TFChunkDb(TFChunkHelper.CreateDbConfig(PathName' 0' chunkSize: 16 * 1024));
Magic Number,EventStore.Core.Tests.TransactionLog,when_having_scavenged_tfchunk_with_all_records_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_having_scavenged_tfchunk_with_all_records_removed.cs,TestFixtureSetUp,The following statement contains a magic number: _db = new TFChunkDb(TFChunkHelper.CreateDbConfig(PathName' 0' chunkSize: 16 * 1024));
Magic Number,EventStore.Core.Tests.TransactionLog,when_having_scavenged_tfchunk_with_all_records_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_having_scavenged_tfchunk_with_all_records_removed.cs,TestFixtureSetUp,The following statement contains a magic number: _p1 = LogRecord.SingleWrite(0' Guid.NewGuid()' Guid.NewGuid()' "es-to-scavenge"' ExpectedVersion.Any' "et1"'  				new byte[2048]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_having_scavenged_tfchunk_with_all_records_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_having_scavenged_tfchunk_with_all_records_removed.cs,TestFixtureSetUp,The following statement contains a magic number: _p1 = LogRecord.SingleWrite(0' Guid.NewGuid()' Guid.NewGuid()' "es-to-scavenge"' ExpectedVersion.Any' "et1"'  				new byte[2048]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_having_scavenged_tfchunk_with_all_records_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_having_scavenged_tfchunk_with_all_records_removed.cs,TestFixtureSetUp,The following statement contains a magic number: _p1 = LogRecord.SingleWrite(0' Guid.NewGuid()' Guid.NewGuid()' "es-to-scavenge"' ExpectedVersion.Any' "et1"'  				new byte[2048]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_having_scavenged_tfchunk_with_all_records_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_having_scavenged_tfchunk_with_all_records_removed.cs,TestFixtureSetUp,The following statement contains a magic number: _p2 = LogRecord.SingleWrite(_cres1.NewPosition'  				Guid.NewGuid()' Guid.NewGuid()' "es-to-scavenge"' ExpectedVersion.Any' "et1"'  				new byte[2048]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_having_scavenged_tfchunk_with_all_records_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_having_scavenged_tfchunk_with_all_records_removed.cs,TestFixtureSetUp,The following statement contains a magic number: _p2 = LogRecord.SingleWrite(_cres1.NewPosition'  				Guid.NewGuid()' Guid.NewGuid()' "es-to-scavenge"' ExpectedVersion.Any' "et1"'  				new byte[2048]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_having_scavenged_tfchunk_with_all_records_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_having_scavenged_tfchunk_with_all_records_removed.cs,TestFixtureSetUp,The following statement contains a magic number: _p2 = LogRecord.SingleWrite(_cres1.NewPosition'  				Guid.NewGuid()' Guid.NewGuid()' "es-to-scavenge"' ExpectedVersion.Any' "et1"'  				new byte[2048]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_having_scavenged_tfchunk_with_all_records_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_having_scavenged_tfchunk_with_all_records_removed.cs,TestFixtureSetUp,The following statement contains a magic number: _p3 = LogRecord.SingleWrite(_cres2.NewPosition'  				Guid.NewGuid()' Guid.NewGuid()' "es-to-scavenge"' ExpectedVersion.Any' "et1"'  				new byte[2048]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_having_scavenged_tfchunk_with_all_records_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_having_scavenged_tfchunk_with_all_records_removed.cs,TestFixtureSetUp,The following statement contains a magic number: _p3 = LogRecord.SingleWrite(_cres2.NewPosition'  				Guid.NewGuid()' Guid.NewGuid()' "es-to-scavenge"' ExpectedVersion.Any' "et1"'  				new byte[2048]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_having_scavenged_tfchunk_with_all_records_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_having_scavenged_tfchunk_with_all_records_removed.cs,TestFixtureSetUp,The following statement contains a magic number: _p3 = LogRecord.SingleWrite(_cres2.NewPosition'  				Guid.NewGuid()' Guid.NewGuid()' "es-to-scavenge"' ExpectedVersion.Any' "et1"'  				new byte[2048]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_having_scavenged_tfchunk_with_all_records_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_having_scavenged_tfchunk_with_all_records_removed.cs,TestFixtureSetUp,The following statement contains a magic number: _c3 = LogRecord.Commit(_res3.NewPosition' Guid.NewGuid()' _p3.LogPosition' 2);
Magic Number,EventStore.Core.Tests.TransactionLog,when_having_scavenged_tfchunk_with_all_records_removed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_having_scavenged_tfchunk_with_all_records_removed.cs,scavenged_chunk_should_be_aligned,The following statement contains a magic number: Assert.IsTrue(_scavengedChunk.FileSize % 4096 == 0);
Magic Number,EventStore.Core.Tests.TransactionLog,when_marking_for_deletion_a_tfchunk_that_has_been_locked_and_unlocked,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_marking_for_deletion_a_tfchunk_that_has_been_locked_and_unlocked.cs,SetUp,The following statement contains a magic number: _chunk = TFChunkHelper.CreateNewChunk(Filename' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_opening_chunked_transaction_file_db_without_previous_files,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_opening_chunked_transaction_file_db_without_previous_files.cs,with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned,The following statement contains a magic number: Assert.AreEqual(12288' fileInfo.Length);
Magic Number,EventStore.Core.Tests.TransactionLog,when_opening_existing_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_opening_existing_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _testChunk = TFChunk.FromCompletedFile(Filename' true' false' 5' reduceFileCachePressure: false);
Magic Number,EventStore.Core.Tests.TransactionLog,when_opening_tfchunk_from_non_existing_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_opening_tfchunk_from_non_existing_file.cs,it_should_throw_a_file_not_found_exception,The following statement contains a magic number: Assert.Throws<CorruptDatabaseException>(() => TFChunk.FromCompletedFile(Filename' verifyHash: true'  				unbufferedRead: false' initialReaderCount: 5' reduceFileCachePressure: false));
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_an_empty_chunked_transaction_log,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_an_empty_chunked_transaction_log.cs,try_read_does_not_cache_anything_and_returns_record_once_it_is_written_later,The following statement contains a magic number: var rec = LogRecord.SingleWrite(0' Guid.NewGuid()' Guid.NewGuid()' "ES"' -1' "ET"' new byte[] {7}' null);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_a_single_record,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_a_single_record.cs,TestFixtureSetUp,The following statement contains a magic number: _db = new TFChunkDb(TFChunkHelper.CreateDbConfig(PathName' 0' chunkSize: 4096));
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_a_single_record,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_a_single_record.cs,TestFixtureSetUp,The following statement contains a magic number: pos = i / 3 * _db.Config.ChunkSize;
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_a_single_record,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_a_single_record.cs,TestFixtureSetUp,The following statement contains a magic number: i > 0 && i % 3 == 0
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_a_single_record,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_a_single_record.cs,TestFixtureSetUp,The following statement contains a magic number: _records[i] = LogRecord.SingleWrite(pos'  					Guid.NewGuid()' Guid.NewGuid()' "es1"' ExpectedVersion.Any' "et1"'  					new byte[1200]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_a_single_record,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_a_single_record.cs,TestFixtureSetUp,The following statement contains a magic number: _records[i] = LogRecord.SingleWrite(pos'  					Guid.NewGuid()' Guid.NewGuid()' "es1"' ExpectedVersion.Any' "et1"'  					new byte[1200]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_a_single_record,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_a_single_record.cs,TestFixtureSetUp,The following statement contains a magic number: _records[i] = LogRecord.SingleWrite(pos'  					Guid.NewGuid()' Guid.NewGuid()' "es1"' ExpectedVersion.Any' "et1"'  					new byte[1200]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_a_single_record,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_a_single_record.cs,TestFixtureSetUp,The following statement contains a magic number: _db.Config.WriterCheckpoint.Write((RecordsCount / 3) * _db.Config.ChunkSize +  			                                  _results[RecordsCount - 1].NewPosition);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_a_single_record,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_a_single_record.cs,all_records_were_written,The following statement contains a magic number: i % 3 == 0
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_from_a_cached_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_from_a_cached_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_from_a_cached_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_from_a_cached_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_from_a_cached_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_from_a_cached_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_from_a_cached_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_from_a_cached_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_from_a_cached_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_from_a_cached_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _cachedChunk = TFChunk.FromCompletedFile(Filename' verifyHash: true' unbufferedRead: false'  				initialReaderCount: 5' reduceFileCachePressure: false);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,the_file_will_not_be_deleted_until_reader_released,The following statement contains a magic number: var chunk = TFChunkHelper.CreateNewChunk(GetFilePathFor("file1")' 2000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,the_file_will_not_be_deleted_until_reader_released,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,the_file_will_not_be_deleted_until_reader_released,The following statement contains a magic number: var result = reader.ReadNextDataBytes(1024' buffer);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,the_file_will_not_be_deleted_until_reader_released,The following statement contains a magic number: chunk.WaitForDestroy(5000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_on_new_file_can_be_performed_but_returns_nothing,The following statement contains a magic number: var chunk = TFChunkHelper.CreateNewChunk(GetFilePathFor("file1")' 2000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_on_new_file_can_be_performed_but_returns_nothing,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_on_new_file_can_be_performed_but_returns_nothing,The following statement contains a magic number: var result = reader.ReadNextDataBytes(1024' buffer);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_on_new_file_can_be_performed_but_returns_nothing,The following statement contains a magic number: chunk.WaitForDestroy(5000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_past_end_of_completed_chunk_does_not_include_footer,The following statement contains a magic number: var chunk = TFChunkHelper.CreateNewChunk(GetFilePathFor("file1")' 300);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_past_end_of_completed_chunk_does_not_include_footer,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_past_end_of_completed_chunk_does_not_include_footer,The following statement contains a magic number: var result = reader.ReadNextDataBytes(1024' buffer);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_past_end_of_completed_chunk_does_not_include_footer,The following statement contains a magic number: chunk.WaitForDestroy(5000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_on_scavenged_chunk_does_not_include_map,The following statement contains a magic number: var chunk = TFChunkHelper.CreateNewChunk(GetFilePathFor("afile")' 200' isScavenged: true);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_on_scavenged_chunk_does_not_include_map,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_on_scavenged_chunk_does_not_include_map,The following statement contains a magic number: var result = reader.ReadNextDataBytes(1024' buffer);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_on_scavenged_chunk_does_not_include_map,The following statement contains a magic number: chunk.WaitForDestroy(5000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,if_asked_for_more_than_buffer_size_will_only_read_buffer_size,The following statement contains a magic number: var chunk = TFChunkHelper.CreateNewChunk(GetFilePathFor("file1")' 3000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,if_asked_for_more_than_buffer_size_will_only_read_buffer_size,The following statement contains a magic number: var rec = LogRecord.Prepare(0' Guid.NewGuid()' Guid.NewGuid()' 0' 0' "ES"' -1' PrepareFlags.None' "ET"'  				new byte[2000]' null);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,if_asked_for_more_than_buffer_size_will_only_read_buffer_size,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,if_asked_for_more_than_buffer_size_will_only_read_buffer_size,The following statement contains a magic number: var result = reader.ReadNextDataBytes(3000' buffer);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,if_asked_for_more_than_buffer_size_will_only_read_buffer_size,The following statement contains a magic number: Assert.AreEqual(1024' result.BytesRead);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,if_asked_for_more_than_buffer_size_will_only_read_buffer_size,The following statement contains a magic number: chunk.WaitForDestroy(5000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_past_eof_doesnt_return_eof_if_chunk_is_not_yet_completed,The following statement contains a magic number: var chunk = TFChunkHelper.CreateNewChunk(GetFilePathFor("file1")' 300);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_past_eof_doesnt_return_eof_if_chunk_is_not_yet_completed,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_past_eof_doesnt_return_eof_if_chunk_is_not_yet_completed,The following statement contains a magic number: var result = reader.ReadNextDataBytes(1024' buffer);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_past_eof_doesnt_return_eof_if_chunk_is_not_yet_completed,The following statement contains a magic number: chunk.WaitForDestroy(5000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_past_eof_returns_eof_if_chunk_is_completed,The following statement contains a magic number: var chunk = TFChunkHelper.CreateNewChunk(GetFilePathFor("file1")' 300);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_past_eof_returns_eof_if_chunk_is_completed,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_past_eof_returns_eof_if_chunk_is_completed,The following statement contains a magic number: var result = reader.ReadNextDataBytes(1024' buffer);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_logical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_logical_bytes_bulk_from_a_chunk.cs,a_read_past_eof_returns_eof_if_chunk_is_completed,The following statement contains a magic number: chunk.WaitForDestroy(5000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,the_file_will_not_be_deleted_until_reader_released,The following statement contains a magic number: var chunk = TFChunkHelper.CreateNewChunk(GetFilePathFor("file1")' 2000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,the_file_will_not_be_deleted_until_reader_released,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,the_file_will_not_be_deleted_until_reader_released,The following statement contains a magic number: var result = reader.ReadNextRawBytes(1024' buffer);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,the_file_will_not_be_deleted_until_reader_released,The following statement contains a magic number: Assert.AreEqual(1024' result.BytesRead);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,the_file_will_not_be_deleted_until_reader_released,The following statement contains a magic number: chunk.WaitForDestroy(5000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,a_read_on_new_file_can_be_performed,The following statement contains a magic number: var chunk = TFChunkHelper.CreateNewChunk(GetFilePathFor("file1")' 2000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,a_read_on_new_file_can_be_performed,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,a_read_on_new_file_can_be_performed,The following statement contains a magic number: var result = reader.ReadNextRawBytes(1024' buffer);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,a_read_on_new_file_can_be_performed,The following statement contains a magic number: Assert.AreEqual(1024' result.BytesRead);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,a_read_on_new_file_can_be_performed,The following statement contains a magic number: chunk.WaitForDestroy(5000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,if_asked_for_more_than_buffer_size_will_only_read_buffer_size,The following statement contains a magic number: var chunk = TFChunkHelper.CreateNewChunk(GetFilePathFor("file1")' 3000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,if_asked_for_more_than_buffer_size_will_only_read_buffer_size,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,if_asked_for_more_than_buffer_size_will_only_read_buffer_size,The following statement contains a magic number: var result = reader.ReadNextRawBytes(3000' buffer);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,if_asked_for_more_than_buffer_size_will_only_read_buffer_size,The following statement contains a magic number: Assert.AreEqual(1024' result.BytesRead);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,if_asked_for_more_than_buffer_size_will_only_read_buffer_size,The following statement contains a magic number: chunk.WaitForDestroy(5000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,a_read_past_eof_returns_eof_and_no_footer,The following statement contains a magic number: var chunk = TFChunkHelper.CreateNewChunk(GetFilePathFor("file1")' 300);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,a_read_past_eof_returns_eof_and_no_footer,The following statement contains a magic number: var buffer = new byte[8092];
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,a_read_past_eof_returns_eof_and_no_footer,The following statement contains a magic number: var result = reader.ReadNextRawBytes(8092' buffer);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,a_read_past_eof_returns_eof_and_no_footer,The following statement contains a magic number: Assert.AreEqual(4096' result.BytesRead);
Magic Number,EventStore.Core.Tests.TransactionLog,when_reading_physical_bytes_bulk_from_a_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_reading_physical_bytes_bulk_from_a_chunk.cs,a_read_past_eof_returns_eof_and_no_footer,The following statement contains a magic number: chunk.WaitForDestroy(5000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_few_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_few_chunks.cs,TestFixtureSetUp,The following statement contains a magic number: _db = new TFChunkDb(TFChunkHelper.CreateDbConfig(PathName' 0' chunkSize: 4096));
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_few_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_few_chunks.cs,TestFixtureSetUp,The following statement contains a magic number: pos = i / 3 * _db.Config.ChunkSize;
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_few_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_few_chunks.cs,TestFixtureSetUp,The following statement contains a magic number: i > 0 && i % 3 == 0
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_few_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_few_chunks.cs,TestFixtureSetUp,The following statement contains a magic number: _records[i] = LogRecord.SingleWrite(pos'  					Guid.NewGuid()' Guid.NewGuid()' "es1"' ExpectedVersion.Any' "et1"'  					new byte[1200]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_few_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_few_chunks.cs,TestFixtureSetUp,The following statement contains a magic number: _records[i] = LogRecord.SingleWrite(pos'  					Guid.NewGuid()' Guid.NewGuid()' "es1"' ExpectedVersion.Any' "et1"'  					new byte[1200]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_few_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_few_chunks.cs,TestFixtureSetUp,The following statement contains a magic number: _records[i] = LogRecord.SingleWrite(pos'  					Guid.NewGuid()' Guid.NewGuid()' "es1"' ExpectedVersion.Any' "et1"'  					new byte[1200]' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_few_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_few_chunks.cs,TestFixtureSetUp,The following statement contains a magic number: _db.Config.WriterCheckpoint.Write((RecordsCount / 3) * _db.Config.ChunkSize +  			                                  _results[RecordsCount - 1].NewPosition);
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_few_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_few_chunks.cs,all_records_were_written,The following statement contains a magic number: i % 3 == 0
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_one_chunk.cs,TestFixtureSetUp,The following statement contains a magic number: _db = new TFChunkDb(TFChunkHelper.CreateDbConfig(PathName' 0' chunkSize: 4096));
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_one_chunk.cs,TestFixtureSetUp,The following statement contains a magic number: _records[i] = LogRecord.SingleWrite(i == 0 ? 0 : _results[i - 1].NewPosition'  					Guid.NewGuid()' Guid.NewGuid()' "es1"' ExpectedVersion.Any' "et1"'  					new byte[] {0' 1' 2}' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_one_chunk.cs,TestFixtureSetUp,The following statement contains a magic number: _records[i] = LogRecord.SingleWrite(i == 0 ? 0 : _results[i - 1].NewPosition'  					Guid.NewGuid()' Guid.NewGuid()' "es1"' ExpectedVersion.Any' "et1"'  					new byte[] {0' 1' 2}' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_one_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_one_chunk.cs,TestFixtureSetUp,The following statement contains a magic number: _records[i] = LogRecord.SingleWrite(i == 0 ? 0 : _results[i - 1].NewPosition'  					Guid.NewGuid()' Guid.NewGuid()' "es1"' ExpectedVersion.Any' "et1"'  					new byte[] {0' 1' 2}' new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_one_chunk_ending_with_prepare,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_one_chunk_ending_with_prepare.cs,TestFixtureSetUp,The following statement contains a magic number: _db = new TFChunkDb(  				TFChunkHelper.CreateDbConfig(PathName' 0' chunkSize: 4096));
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_one_chunk_ending_with_prepare,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_one_chunk_ending_with_prepare.cs,TestFixtureSetUp,The following statement contains a magic number: _records[i] = LogRecord.SingleWrite(  					i == 0 ? 0 : _results[i - 1].NewPosition'  					Guid.NewGuid()'  					Guid.NewGuid()'  					"es1"'  					ExpectedVersion.Any'  					"et1"'  					new byte[] {0' 1' 2}'  					new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_one_chunk_ending_with_prepare,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_one_chunk_ending_with_prepare.cs,TestFixtureSetUp,The following statement contains a magic number: _records[i] = LogRecord.SingleWrite(  					i == 0 ? 0 : _results[i - 1].NewPosition'  					Guid.NewGuid()'  					Guid.NewGuid()'  					"es1"'  					ExpectedVersion.Any'  					"et1"'  					new byte[] {0' 1' 2}'  					new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_one_chunk_ending_with_prepare,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_one_chunk_ending_with_prepare.cs,TestFixtureSetUp,The following statement contains a magic number: _records[i] = LogRecord.SingleWrite(  					i == 0 ? 0 : _results[i - 1].NewPosition'  					Guid.NewGuid()'  					Guid.NewGuid()'  					"es1"'  					ExpectedVersion.Any'  					"et1"'  					new byte[] {0' 1' 2}'  					new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_one_chunk_ending_with_prepare,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_one_chunk_ending_with_prepare.cs,TestFixtureSetUp,The following statement contains a magic number: _records[_records.Length - 1] = LogRecord.Prepare(  				_results[_records.Length - 1 - 1].NewPosition'  				Guid.NewGuid()'  				Guid.NewGuid()'  				_results[_records.Length - 1 - 1].NewPosition'  				0'  				"es1"'  				ExpectedVersion.Any'  				PrepareFlags.Data'  				"et1"'  				new byte[] {0' 1' 2}'  				new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_one_chunk_ending_with_prepare,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_one_chunk_ending_with_prepare.cs,TestFixtureSetUp,The following statement contains a magic number: _records[_records.Length - 1] = LogRecord.Prepare(  				_results[_records.Length - 1 - 1].NewPosition'  				Guid.NewGuid()'  				Guid.NewGuid()'  				_results[_records.Length - 1 - 1].NewPosition'  				0'  				"es1"'  				ExpectedVersion.Any'  				PrepareFlags.Data'  				"et1"'  				new byte[] {0' 1' 2}'  				new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_sequentially_reading_db_with_one_chunk_ending_with_prepare,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_sequentially_reading_db_with_one_chunk_ending_with_prepare.cs,TestFixtureSetUp,The following statement contains a magic number: _records[_records.Length - 1] = LogRecord.Prepare(  				_results[_records.Length - 1 - 1].NewPosition'  				Guid.NewGuid()'  				Guid.NewGuid()'  				_results[_records.Length - 1 - 1].NewPosition'  				0'  				"es1"'  				ExpectedVersion.Any'  				PrepareFlags.Data'  				"et1"'  				new byte[] {0' 1' 2}'  				new byte[] {5' 7});
Magic Number,EventStore.Core.Tests.TransactionLog,when_uncaching_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_uncaching_a_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_uncaching_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_uncaching_a_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_uncaching_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_uncaching_a_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_uncaching_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_uncaching_a_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _record = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_uncaching_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_uncaching_a_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _uncachedChunk = TFChunk.FromCompletedFile(Filename' verifyHash: true' unbufferedRead: false'  				initialReaderCount: 5' reduceFileCachePressure: false);
Magic Number,EventStore.Core.Tests.TransactionLog,when_unlocking_a_tfchunk_that_has_been_marked_for_deletion,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_unlocking_a_tfchunk_that_has_been_marked_for_deletion.cs,SetUp,The following statement contains a magic number: _chunk = TFChunkHelper.CreateNewChunk(Filename' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: var chunkHeader = new ChunkHeader(TFChunk.CurrentChunkVersion' 10000' 0' 0' false' chunkId: Guid.NewGuid());
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: var bytes = new byte[ChunkHeader.Size + 10000 + ChunkFooter.Size];
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: _checkpoint = new InMemoryCheckpoint(137);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: _checkpoint.Read()'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: _checkpoint.Read()'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: _checkpoint.Read()'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: _checkpoint.Read()'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: _checkpoint.Read()'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: _checkpoint.Read()'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: _checkpoint.Read()'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: _checkpoint.Read()'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: _checkpoint.Read()'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: _checkpoint.Read()'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: Assert.AreEqual(record.GetSizeWithLengthPrefixAndSuffix() + 137'  				_checkpoint.Read());
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum.cs,a_record_can_be_written,The following statement contains a magic number: filestream.Seek(ChunkHeader.Size + 137 + sizeof(int)' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer.cs,a_record_can_be_written,The following statement contains a magic number: var chunkHeader = new ChunkHeader(TFChunk.CurrentChunkVersion' 10000' 0' 0' false' Guid.NewGuid());
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer.cs,a_record_can_be_written,The following statement contains a magic number: _checkpoint = new InMemoryCheckpoint(137);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer.cs,a_record_can_be_written,The following statement contains a magic number: var  				bytes = new byte[3994];
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 137'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 789'  				transactionOffset: 543'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: bytes'  				metadata: new byte[] {0x07' 0x17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 137'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 789'  				transactionOffset: 543'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: bytes'  				metadata: new byte[] {0x07' 0x17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 137'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 789'  				transactionOffset: 543'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: bytes'  				metadata: new byte[] {0x07' 0x17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 137'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 789'  				transactionOffset: 543'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: bytes'  				metadata: new byte[] {0x07' 0x17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 137'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 789'  				transactionOffset: 543'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: bytes'  				metadata: new byte[] {0x07' 0x17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 137'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 789'  				transactionOffset: 543'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: bytes'  				metadata: new byte[] {0x07' 0x17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 137'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 789'  				transactionOffset: 543'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: bytes'  				metadata: new byte[] {0x07' 0x17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer.cs,a_record_can_be_written,The following statement contains a magic number: Assert.AreEqual(record.GetSizeWithLengthPrefixAndSuffix() + 137' _checkpoint.Read());
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer.cs,a_record_can_be_written,The following statement contains a magic number: filestream.Seek(ChunkHeader.Size + 137 + sizeof(int)' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var chunkHeader = new ChunkHeader(TFChunk.CurrentChunkVersion' 10000' 0' 0' false' Guid.NewGuid());
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var bytes = new byte[ChunkHeader.Size + 10000 + ChunkFooter.Size];
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record1 = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record1 = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record1 = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record1 = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record1 = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record1 = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record1 = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record1 = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record1 = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record2 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record2 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record2 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record2 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record2 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record2 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record2 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record2 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record2 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[8000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record3 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[2000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record3 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[2000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record3 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[2000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record3 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[2000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record3 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[2000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record3 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[2000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record3 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[2000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record3 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[2000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: var record3 = new PrepareLogRecord(logPosition: pos'  				correlationId: _correlationId'  				eventId: _eventId'  				expectedVersion: 1234'  				transactionPosition: pos'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[2000]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk.cs,a_record_is_not_written_at_first_but_written_on_second_try,The following statement contains a magic number: Assert.AreEqual(record3.GetSizeWithLengthPrefixAndSuffix() + 10000' _checkpoint.Read());
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_file_checkpoint_to_a_writethroughfile,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_file_checkpoint_to_a_writethroughfile.cs,the_new_value_is_not_accessible_if_not_flushed_even_with_delay,The following statement contains a magic number: checkSum.Write(1011);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_file_checkpoint_to_a_writethroughfile,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_file_checkpoint_to_a_writethroughfile.cs,the_new_value_is_not_accessible_if_not_flushed_even_with_delay,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_file_checkpoint_to_a_writethroughfile,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_file_checkpoint_to_a_writethroughfile.cs,the_new_value_is_accessible_after_flush,The following statement contains a magic number: checkSum.Write(1011);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_file_checkpoint_to_a_writethroughfile,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_file_checkpoint_to_a_writethroughfile.cs,the_new_value_is_accessible_after_flush,The following statement contains a magic number: Assert.AreEqual(1011' readChecksum.Read());
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_file_checksum_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_file_checksum_to_a_file.cs,the_new_value_is_not_accessible_if_not_flushed_even_with_delay,The following statement contains a magic number: checkSum.Write(1011);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_file_checksum_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_file_checksum_to_a_file.cs,the_new_value_is_not_accessible_if_not_flushed_even_with_delay,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_file_checksum_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_file_checksum_to_a_file.cs,the_new_value_is_accessible_after_flush,The following statement contains a magic number: checkSum.Write(1011);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_file_checksum_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_file_checksum_to_a_file.cs,the_new_value_is_accessible_after_flush,The following statement contains a magic number: Assert.AreEqual(1011' readChecksum.Read());
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_memorymappedpoint_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_memorymappedpoint_to_a_file.cs,the_new_value_is_not_accessible_if_not_flushed_even_with_delay,The following statement contains a magic number: checkSum.Write(1011);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_memorymappedpoint_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_memorymappedpoint_to_a_file.cs,the_new_value_is_not_accessible_if_not_flushed_even_with_delay,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_memorymappedpoint_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_memorymappedpoint_to_a_file.cs,the_new_value_is_accessible_after_flush,The following statement contains a magic number: checkSum.Write(1011);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_memorymappedpoint_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_memorymappedpoint_to_a_file.cs,the_new_value_is_accessible_after_flush,The following statement contains a magic number: Assert.AreEqual(1011' readChecksum.Read());
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_memorymappedpoint_to_a_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_memorymappedpoint_to_a_file.cs,the_new_value_is_accessible_after_flush,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_new_chunked_transaction_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_new_chunked_transaction_file.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_new_chunked_transaction_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_new_chunked_transaction_file.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_new_chunked_transaction_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_new_chunked_transaction_file.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_new_chunked_transaction_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_new_chunked_transaction_file.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_new_chunked_transaction_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_new_chunked_transaction_file.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_new_chunked_transaction_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_new_chunked_transaction_file.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_new_chunked_transaction_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_new_chunked_transaction_file.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_new_chunked_transaction_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_new_chunked_transaction_file.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_new_chunked_transaction_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_new_chunked_transaction_file.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_a_new_chunked_transaction_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_a_new_chunked_transaction_file.cs,a_record_can_be_written,The following statement contains a magic number: var record = new PrepareLogRecord(logPosition: 0'  				correlationId: _correlationId'  				eventId: _eventId'  				transactionPosition: 0'  				transactionOffset: 0'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.None'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_commit_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_commit_record_to_file.cs,SetUp,The following statement contains a magic number: _db = new TFChunkDb(TFChunkHelper.CreateDbConfig(PathName' _writerCheckpoint' new InMemoryCheckpoint()'  				1024));
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_commit_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_commit_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new CommitLogRecord(logPosition: 0'  				correlationId: _eventId'  				transactionPosition: 4321'  				timeStamp: new DateTime(2012' 12' 21)'  				firstEventNumber: 10);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_commit_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_commit_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new CommitLogRecord(logPosition: 0'  				correlationId: _eventId'  				transactionPosition: 4321'  				timeStamp: new DateTime(2012' 12' 21)'  				firstEventNumber: 10);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_commit_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_commit_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new CommitLogRecord(logPosition: 0'  				correlationId: _eventId'  				transactionPosition: 4321'  				timeStamp: new DateTime(2012' 12' 21)'  				firstEventNumber: 10);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_commit_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_commit_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new CommitLogRecord(logPosition: 0'  				correlationId: _eventId'  				transactionPosition: 4321'  				timeStamp: new DateTime(2012' 12' 21)'  				firstEventNumber: 10);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_commit_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_commit_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new CommitLogRecord(logPosition: 0'  				correlationId: _eventId'  				transactionPosition: 4321'  				timeStamp: new DateTime(2012' 12' 21)'  				firstEventNumber: 10);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_commit_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_commit_record_to_file.cs,the_data_is_written,The following statement contains a magic number: Assert.AreEqual(c.TransactionPosition' 4321);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_commit_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_commit_record_to_file.cs,the_data_is_written,The following statement contains a magic number: Assert.AreEqual(c.TimeStamp' new DateTime(2012' 12' 21));
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_commit_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_commit_record_to_file.cs,the_data_is_written,The following statement contains a magic number: Assert.AreEqual(c.TimeStamp' new DateTime(2012' 12' 21));
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_commit_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_commit_record_to_file.cs,the_data_is_written,The following statement contains a magic number: Assert.AreEqual(c.TimeStamp' new DateTime(2012' 12' 21));
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_multiple_records_to_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_multiple_records_to_a_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _prepare1 = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_multiple_records_to_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_multiple_records_to_a_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _prepare1 = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_multiple_records_to_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_multiple_records_to_a_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _prepare1 = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_multiple_records_to_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_multiple_records_to_a_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _prepare1 = new PrepareLogRecord(0' _corrId' _eventId' 0' 0' "test"' 1' new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_multiple_records_to_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_multiple_records_to_a_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _prepare2 = new PrepareLogRecord(r1.NewPosition' _corrId' _eventId' 0' 0' "test2"' 2'  				new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo2"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_multiple_records_to_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_multiple_records_to_a_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _prepare2 = new PrepareLogRecord(r1.NewPosition' _corrId' _eventId' 0' 0' "test2"' 2'  				new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo2"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_multiple_records_to_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_multiple_records_to_a_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _prepare2 = new PrepareLogRecord(r1.NewPosition' _corrId' _eventId' 0' 0' "test2"' 2'  				new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo2"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_multiple_records_to_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_multiple_records_to_a_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _prepare2 = new PrepareLogRecord(r1.NewPosition' _corrId' _eventId' 0' 0' "test2"' 2'  				new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo2"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_multiple_records_to_a_tfchunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_multiple_records_to_a_tfchunk.cs,TestFixtureSetUp,The following statement contains a magic number: _prepare2 = new PrepareLogRecord(r1.NewPosition' _corrId' _eventId' 0' 0' "test2"' 2'  				new DateTime(2000' 1' 1' 12' 0' 0)'  				PrepareFlags.None' "Foo2"' new byte[12]' new byte[15]);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,SetUp,The following statement contains a magic number: _db = new TFChunkDb(TFChunkHelper.CreateDbConfig(PathName' _writerCheckpoint' new InMemoryCheckpoint()'  				1024));
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new PrepareLogRecord(logPosition: 0'  				eventId: _eventId'  				correlationId: _correlationId'  				transactionPosition: 0xDEAD'  				transactionOffset: 0xBEEF'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new PrepareLogRecord(logPosition: 0'  				eventId: _eventId'  				correlationId: _correlationId'  				transactionPosition: 0xDEAD'  				transactionOffset: 0xBEEF'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new PrepareLogRecord(logPosition: 0'  				eventId: _eventId'  				correlationId: _correlationId'  				transactionPosition: 0xDEAD'  				transactionOffset: 0xBEEF'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new PrepareLogRecord(logPosition: 0'  				eventId: _eventId'  				correlationId: _correlationId'  				transactionPosition: 0xDEAD'  				transactionOffset: 0xBEEF'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new PrepareLogRecord(logPosition: 0'  				eventId: _eventId'  				correlationId: _correlationId'  				transactionPosition: 0xDEAD'  				transactionOffset: 0xBEEF'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new PrepareLogRecord(logPosition: 0'  				eventId: _eventId'  				correlationId: _correlationId'  				transactionPosition: 0xDEAD'  				transactionOffset: 0xBEEF'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new PrepareLogRecord(logPosition: 0'  				eventId: _eventId'  				correlationId: _correlationId'  				transactionPosition: 0xDEAD'  				transactionOffset: 0xBEEF'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new PrepareLogRecord(logPosition: 0'  				eventId: _eventId'  				correlationId: _correlationId'  				transactionPosition: 0xDEAD'  				transactionOffset: 0xBEEF'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new PrepareLogRecord(logPosition: 0'  				eventId: _eventId'  				correlationId: _correlationId'  				transactionPosition: 0xDEAD'  				transactionOffset: 0xBEEF'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,SetUp,The following statement contains a magic number: _record = new PrepareLogRecord(logPosition: 0'  				eventId: _eventId'  				correlationId: _correlationId'  				transactionPosition: 0xDEAD'  				transactionOffset: 0xBEEF'  				eventStreamId: "WorldEnding"'  				expectedVersion: 1234'  				timeStamp: new DateTime(2012' 12' 21)'  				flags: PrepareFlags.SingleWrite'  				eventType: "type"'  				data: new byte[] {1' 2' 3' 4' 5}'  				metadata: new byte[] {7' 17});
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,the_data_is_written,The following statement contains a magic number: Assert.AreEqual(p.ExpectedVersion' 1234);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,the_data_is_written,The following statement contains a magic number: Assert.AreEqual(p.TimeStamp' new DateTime(2012' 12' 21));
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,the_data_is_written,The following statement contains a magic number: Assert.AreEqual(p.TimeStamp' new DateTime(2012' 12' 21));
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,the_data_is_written,The following statement contains a magic number: Assert.AreEqual(p.TimeStamp' new DateTime(2012' 12' 21));
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,the_data_is_written,The following statement contains a magic number: Assert.AreEqual(p.Data.Length' 5);
Magic Number,EventStore.Core.Tests.TransactionLog,when_writing_prepare_record_to_file,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\when_writing_prepare_record_to_file.cs,the_data_is_written,The following statement contains a magic number: Assert.AreEqual(p.Metadata.Length' 2);
Magic Number,EventStore.Core.Tests.TransactionLog.Optimization,tfchunkreader_existsat_optimizer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Optimization\tfchunkreader_existsat_optimizer_should.cs,optimize_only_maxcached_items_at_a_time,The following statement contains a magic number: int maxCached = 3;
Magic Number,EventStore.Core.Tests.TransactionLog.Optimization,tfchunkreader_existsat_optimizer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Optimization\tfchunkreader_existsat_optimizer_should.cs,optimize_only_maxcached_items_at_a_time,The following statement contains a magic number: i < 7
Magic Number,EventStore.Core.Tests.TransactionLog.Optimization,tfchunkreader_existsat_optimizer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Optimization\tfchunkreader_existsat_optimizer_should.cs,optimize_only_maxcached_items_at_a_time,The following statement contains a magic number: chunk.WaitForDestroy(5000);
Magic Number,EventStore.Core.Tests.TransactionLog.Optimization,tfchunkreader_existsat_optimizer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Optimization\tfchunkreader_existsat_optimizer_should.cs,optimize_only_scavenged_chunks,The following statement contains a magic number: TFChunkReaderExistsAtOptimizer _existsAtOptimizer = new TFChunkReaderExistsAtOptimizer(3);
Magic Number,EventStore.Core.Tests.TransactionLog.Optimization,tfchunkreader_existsat_optimizer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Optimization\tfchunkreader_existsat_optimizer_should.cs,optimize_only_scavenged_chunks,The following statement contains a magic number: chunk.WaitForDestroy(5000);
Magic Number,EventStore.Core.Tests.TransactionLog.Optimization,tfchunkreader_existsat_optimizer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Optimization\tfchunkreader_existsat_optimizer_should.cs,posmap_items_should_exist_in_chunk,The following statement contains a magic number: TFChunkReaderExistsAtOptimizer _existsAtOptimizer = new TFChunkReaderExistsAtOptimizer(3);
Magic Number,EventStore.Core.Tests.TransactionLog.Optimization,tfchunkreader_existsat_optimizer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Optimization\tfchunkreader_existsat_optimizer_should.cs,posmap_items_should_exist_in_chunk,The following statement contains a magic number: chunk.WaitForDestroy(5000);
Magic Number,EventStore.Core.Tests.TransactionLog.Optimization,tfchunkreader_existsat_optimizer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Optimization\tfchunkreader_existsat_optimizer_should.cs,CreateChunk,The following statement contains a magic number: var chunk = TFChunk.CreateNew(GetFilePathFor("chunk-" + chunkNumber + "-" + Guid.NewGuid())' 1024 * 1024'  				chunkNumber' chunkNumber' scavenged' false' false' false' 5' false);
Magic Number,EventStore.Core.Tests.TransactionLog.Optimization,tfchunkreader_existsat_optimizer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Optimization\tfchunkreader_existsat_optimizer_should.cs,CreateChunk,The following statement contains a magic number: var chunk = TFChunk.CreateNew(GetFilePathFor("chunk-" + chunkNumber + "-" + Guid.NewGuid())' 1024 * 1024'  				chunkNumber' chunkNumber' scavenged' false' false' false' 5' false);
Magic Number,EventStore.Core.Tests.TransactionLog.Optimization,tfchunkreader_existsat_optimizer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Optimization\tfchunkreader_existsat_optimizer_should.cs,CreateChunk,The following statement contains a magic number: var chunk = TFChunk.CreateNew(GetFilePathFor("chunk-" + chunkNumber + "-" + Guid.NewGuid())' 1024 * 1024'  				chunkNumber' chunkNumber' scavenged' false' false' false' 5' false);
Magic Number,EventStore.Core.Tests.TransactionLog.Optimization,tfchunkreader_existsat_optimizer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Optimization\tfchunkreader_existsat_optimizer_should.cs,CreateChunk,The following statement contains a magic number: long offset = chunkNumber * 1024 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Optimization,tfchunkreader_existsat_optimizer_should,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Optimization\tfchunkreader_existsat_optimizer_should.cs,CreateChunk,The following statement contains a magic number: long offset = chunkNumber * 1024 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,ScavengeLifeCycleScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\ScavengeLifeCycleScenario.cs,TestFixtureSetUp,The following statement contains a magic number: var dbConfig = TFChunkHelper.CreateDbConfig(PathName' 0' chunkSize: 1024 * 1024);
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,ScavengeLifeCycleScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\ScavengeLifeCycleScenario.cs,TestFixtureSetUp,The following statement contains a magic number: var dbConfig = TFChunkHelper.CreateDbConfig(PathName' 0' chunkSize: 1024 * 1024);
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,ScavengeTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\ScavengeTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: var dbConfig = TFChunkHelper.CreateDbConfig(PathName' 0' chunkSize: 1024 * 1024);
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,ScavengeTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\ScavengeTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: var dbConfig = TFChunkHelper.CreateDbConfig(PathName' 0' chunkSize: 1024 * 1024);
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,ScavengeTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\ScavengeTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: var tableIndex = new TableIndex(indexPath' lowHasher' highHasher'  				() => new HashListMemTable(PTableVersions.IndexV3' maxSize: 200)'  				() => new TFReaderLease(readerPool)'  				PTableVersions.IndexV3'  				5'  				maxSizeForMemory: 100'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,ScavengeTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\ScavengeTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: var tableIndex = new TableIndex(indexPath' lowHasher' highHasher'  				() => new HashListMemTable(PTableVersions.IndexV3' maxSize: 200)'  				() => new TFReaderLease(readerPool)'  				PTableVersions.IndexV3'  				5'  				maxSizeForMemory: 100'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,ScavengeTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\ScavengeTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: var tableIndex = new TableIndex(indexPath' lowHasher' highHasher'  				() => new HashListMemTable(PTableVersions.IndexV3' maxSize: 200)'  				() => new TFReaderLease(readerPool)'  				PTableVersions.IndexV3'  				5'  				maxSizeForMemory: 100'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,ScavengeTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\ScavengeTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: var tableIndex = new TableIndex(indexPath' lowHasher' highHasher'  				() => new HashListMemTable(PTableVersions.IndexV3' maxSize: 200)'  				() => new TFReaderLease(readerPool)'  				PTableVersions.IndexV3'  				5'  				maxSizeForMemory: 100'  				maxTablesPerLevel: 2);
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging.Helpers,ScavengeTestScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\Helpers\ScavengeTestScenario.cs,TestFixtureSetUp,The following statement contains a magic number: ReadIndex = new ReadIndex(new NoopPublisher()' readerPool' tableIndex' 100' true' _metastreamMaxCount'  				Opts.HashCollisionReadLimitDefault' Opts.SkipIndexScanOnReadsDefault'  				_dbResult.Db.Config.ReplicationCheckpoint);
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,scavenged_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\scavenged_chunk.cs,is_fully_resident_in_memory_when_cached,The following statement contains a magic number: var chunk = TFChunk.CreateNew(Filename' 1024 * 1024' 0' 0' true' false' false' false' 5' false);
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,scavenged_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\scavenged_chunk.cs,is_fully_resident_in_memory_when_cached,The following statement contains a magic number: var chunk = TFChunk.CreateNew(Filename' 1024 * 1024' 0' 0' true' false' false' false' 5' false);
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,scavenged_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\scavenged_chunk.cs,is_fully_resident_in_memory_when_cached,The following statement contains a magic number: var chunk = TFChunk.CreateNew(Filename' 1024 * 1024' 0' 0' true' false' false' false' 5' false);
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,scavenged_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\scavenged_chunk.cs,is_fully_resident_in_memory_when_cached,The following statement contains a magic number: chunk.WaitForDestroy(1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_deleted_stream_with_a_lot_of_data_is_scavenged,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_deleted_stream_with_a_lot_of_data_is_scavenged.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Delete(2' "bla")'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_deleted_stream_with_a_lot_of_data_is_scavenged,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_deleted_stream_with_a_lot_of_data_is_scavenged.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Delete(2' "bla")'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_deleted_stream_with_a_lot_of_data_is_scavenged,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_deleted_stream_with_a_lot_of_data_is_scavenged.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {8' 9}.Contains(i)).ToArray()'  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_deleted_stream_with_a_lot_of_data_is_scavenged,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_deleted_stream_with_a_lot_of_data_is_scavenged.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {8' 9}.Contains(i)).ToArray()'  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_deleted_stream_with_a_lot_of_data_is_scavenged_with_ingore_harddelete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_deleted_stream_with_a_lot_of_data_is_scavenged.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Delete(2' "bla")'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_deleted_stream_with_a_lot_of_data_is_scavenged_with_ingore_harddelete,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_deleted_stream_with_a_lot_of_data_is_scavenged.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Delete(2' "bla")'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_deleted_stream_with_explicit_transaction_is_scavenged,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_deleted_stream_with_explicit_transaction_is_scavenged.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {7' 8}.Contains(i)).ToArray()'  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_deleted_stream_with_explicit_transaction_is_scavenged,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_deleted_stream_with_explicit_transaction_is_scavenged.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {7' 8}.Contains(i)).ToArray()'  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_deleted_stream_with_metadata_is_scavenged,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_deleted_stream_with_metadata_is_scavenged.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(10' null' null' null' null))'  					Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(2' null' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Delete(1' "bla")'  					Rec.Commit(1' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_deleted_stream_with_metadata_is_scavenged,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_deleted_stream_with_metadata_is_scavenged.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(10' null' null' null' null))'  					Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(2' null' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Delete(1' "bla")'  					Rec.Commit(1' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_deleted_stream_with_metadata_is_scavenged,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_deleted_stream_with_metadata_is_scavenged.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => i >= 3).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_nothing_to_scavenge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_nothing_to_scavenge.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(0' "bla"))  				.Chunk(Rec.Prepare(2' "bla3")'  					Rec.Prepare(2' "bla3")'  					Rec.Commit(1' "bla")'  					Rec.Commit(2' "bla3"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_nothing_to_scavenge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_nothing_to_scavenge.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(0' "bla"))  				.Chunk(Rec.Prepare(2' "bla3")'  					Rec.Prepare(2' "bla3")'  					Rec.Commit(1' "bla")'  					Rec.Commit(2' "bla3"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_nothing_to_scavenge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_nothing_to_scavenge.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(0' "bla"))  				.Chunk(Rec.Prepare(2' "bla3")'  					Rec.Prepare(2' "bla3")'  					Rec.Commit(1' "bla")'  					Rec.Commit(2' "bla3"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(3' "$$bla"' metadata: new StreamMetadata(5' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(3' "$$bla")'  					Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_age_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(3' TimeSpan.FromMinutes(50)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_both_max_age_and_max_count_with_stricted_max_count_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(5)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(3' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(110))'  					Rec.Commit(3' "bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(100))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(90))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(60))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(40))'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(30))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(2))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(1))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_age_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_age_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(maxCount: 3))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(maxCount: 3))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(maxCount: 3))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(maxCount: 3))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(maxCount: 3))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(maxCount: 3))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(maxCount: 3))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(maxCount: 3))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(maxCount: 3))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(maxCount: 3))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(maxCount: 3))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(maxCount: 3))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Prepare(2' "bla")'  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Prepare(3' "bla")'  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_max_count_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_max_count_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(truncateBefore: 7))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")' // event 0  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")' // event 1  					Rec.Prepare(2' "bla")' // event 2  					Rec.Prepare(2' "bla")' // event 3  					Rec.Prepare(2' "bla")' // event 4  					Rec.Prepare(2' "bla")' // event 5  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")' // event 6  					Rec.Prepare(3' "bla")' // event 7  					Rec.Prepare(3' "bla")' // event 8  					Rec.Prepare(3' "bla")' // event 9  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(truncateBefore: 7))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")' // event 0  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")' // event 1  					Rec.Prepare(2' "bla")' // event 2  					Rec.Prepare(2' "bla")' // event 3  					Rec.Prepare(2' "bla")' // event 4  					Rec.Prepare(2' "bla")' // event 5  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")' // event 6  					Rec.Prepare(3' "bla")' // event 7  					Rec.Prepare(3' "bla")' // event 8  					Rec.Prepare(3' "bla")' // event 9  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(truncateBefore: 7))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")' // event 0  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")' // event 1  					Rec.Prepare(2' "bla")' // event 2  					Rec.Prepare(2' "bla")' // event 3  					Rec.Prepare(2' "bla")' // event 4  					Rec.Prepare(2' "bla")' // event 5  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")' // event 6  					Rec.Prepare(3' "bla")' // event 7  					Rec.Prepare(3' "bla")' // event 8  					Rec.Prepare(3' "bla")' // event 9  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(truncateBefore: 7))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")' // event 0  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")' // event 1  					Rec.Prepare(2' "bla")' // event 2  					Rec.Prepare(2' "bla")' // event 3  					Rec.Prepare(2' "bla")' // event 4  					Rec.Prepare(2' "bla")' // event 5  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")' // event 6  					Rec.Prepare(3' "bla")' // event 7  					Rec.Prepare(3' "bla")' // event 8  					Rec.Prepare(3' "bla")' // event 9  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(truncateBefore: 7))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")' // event 0  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")' // event 1  					Rec.Prepare(2' "bla")' // event 2  					Rec.Prepare(2' "bla")' // event 3  					Rec.Prepare(2' "bla")' // event 4  					Rec.Prepare(2' "bla")' // event 5  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")' // event 6  					Rec.Prepare(3' "bla")' // event 7  					Rec.Prepare(3' "bla")' // event 8  					Rec.Prepare(3' "bla")' // event 9  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(truncateBefore: 7))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")' // event 0  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")' // event 1  					Rec.Prepare(2' "bla")' // event 2  					Rec.Prepare(2' "bla")' // event 3  					Rec.Prepare(2' "bla")' // event 4  					Rec.Prepare(2' "bla")' // event 5  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")' // event 6  					Rec.Prepare(3' "bla")' // event 7  					Rec.Prepare(3' "bla")' // event 8  					Rec.Prepare(3' "bla")' // event 9  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(truncateBefore: 7))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")' // event 0  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")' // event 1  					Rec.Prepare(2' "bla")' // event 2  					Rec.Prepare(2' "bla")' // event 3  					Rec.Prepare(2' "bla")' // event 4  					Rec.Prepare(2' "bla")' // event 5  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")' // event 6  					Rec.Prepare(3' "bla")' // event 7  					Rec.Prepare(3' "bla")' // event 8  					Rec.Prepare(3' "bla")' // event 9  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(truncateBefore: 7))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")' // event 0  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")' // event 1  					Rec.Prepare(2' "bla")' // event 2  					Rec.Prepare(2' "bla")' // event 3  					Rec.Prepare(2' "bla")' // event 4  					Rec.Prepare(2' "bla")' // event 5  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")' // event 6  					Rec.Prepare(3' "bla")' // event 7  					Rec.Prepare(3' "bla")' // event 8  					Rec.Prepare(3' "bla")' // event 9  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(truncateBefore: 7))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")' // event 0  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")' // event 1  					Rec.Prepare(2' "bla")' // event 2  					Rec.Prepare(2' "bla")' // event 3  					Rec.Prepare(2' "bla")' // event 4  					Rec.Prepare(2' "bla")' // event 5  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")' // event 6  					Rec.Prepare(3' "bla")' // event 7  					Rec.Prepare(3' "bla")' // event 8  					Rec.Prepare(3' "bla")' // event 9  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(truncateBefore: 7))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")' // event 0  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")' // event 1  					Rec.Prepare(2' "bla")' // event 2  					Rec.Prepare(2' "bla")' // event 3  					Rec.Prepare(2' "bla")' // event 4  					Rec.Prepare(2' "bla")' // event 5  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")' // event 6  					Rec.Prepare(3' "bla")' // event 7  					Rec.Prepare(3' "bla")' // event 8  					Rec.Prepare(3' "bla")' // event 9  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(truncateBefore: 7))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")' // event 0  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")' // event 1  					Rec.Prepare(2' "bla")' // event 2  					Rec.Prepare(2' "bla")' // event 3  					Rec.Prepare(2' "bla")' // event 4  					Rec.Prepare(2' "bla")' // event 5  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")' // event 6  					Rec.Prepare(3' "bla")' // event 7  					Rec.Prepare(3' "bla")' // event 8  					Rec.Prepare(3' "bla")' // event 9  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(truncateBefore: 7))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla")' // event 0  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla")' // event 1  					Rec.Prepare(2' "bla")' // event 2  					Rec.Prepare(2' "bla")' // event 3  					Rec.Prepare(2' "bla")' // event 4  					Rec.Prepare(2' "bla")' // event 5  					Rec.Commit(2' "bla")'  					Rec.Prepare(3' "bla")' // event 6  					Rec.Prepare(3' "bla")' // event 7  					Rec.Prepare(3' "bla")' // event 8  					Rec.Prepare(3' "bla")' // event 9  					Rec.Commit(3' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_truncatebefore_specified,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_start_from_specified.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 11' 12' 13' 14}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_strict_max_age_leaving_no_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_strict_max_age_leaving_no_events_in_stream.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(1)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(25))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(10))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(5))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_strict_max_age_leaving_no_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_strict_max_age_leaving_no_events_in_stream.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(1)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(25))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(10))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(5))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_strict_max_age_leaving_no_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_strict_max_age_leaving_no_events_in_stream.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(1)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(25))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(10))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(5))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_strict_max_age_leaving_no_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_strict_max_age_leaving_no_events_in_stream.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(1)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(25))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(10))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(5))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_strict_max_age_leaving_no_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_strict_max_age_leaving_no_events_in_stream.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(1)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(25))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(10))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(5))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_strict_max_age_leaving_no_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_strict_max_age_leaving_no_events_in_stream.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(1)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(25))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(10))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(5))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_strict_max_age_leaving_no_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_strict_max_age_leaving_no_events_in_stream.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(1)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(25))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(10))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(5))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_strict_max_age_leaving_no_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_strict_max_age_leaving_no_events_in_stream.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(1)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(25))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(10))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(5))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_strict_max_age_leaving_no_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_strict_max_age_leaving_no_events_in_stream.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(1)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(25))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(10))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(5))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_strict_max_age_leaving_no_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_strict_max_age_leaving_no_events_in_stream.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(  					Rec.Prepare(0' "$$bla"'  						metadata: new StreamMetadata(null' TimeSpan.FromMinutes(1)' null' null' null))'  					Rec.Commit(0' "$$bla")'  					Rec.Prepare(1' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(25))'  					Rec.Commit(1' "bla")'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(20))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(10))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(5))'  					Rec.Prepare(2' "bla"' timestamp: DateTime.UtcNow - TimeSpan.FromMinutes(3))'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_strict_max_age_leaving_no_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_strict_max_age_leaving_no_events_in_stream.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 7' 8}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_having_stream_with_strict_max_age_leaving_no_events_in_stream,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_having_stream_with_strict_max_age_leaving_no_events_in_stream.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => new[] {0' 1' 7' 8}.Contains(i)).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_metastream_is_scavenged_and_read_index_is_set_to_keep_just_last_metaevent,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_metastream_is_scavenged_and_read_index_is_set_to_keep_just_last_metaevent.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(10' null' null' null' null))'  					Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(5' null' null' null' null))'  					Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(3' null' null' null' null))'  					Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(2' null' null' null' null))'  					Rec.Commit(0' "$$bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_metastream_is_scavenged_and_read_index_is_set_to_keep_just_last_metaevent,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_metastream_is_scavenged_and_read_index_is_set_to_keep_just_last_metaevent.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(10' null' null' null' null))'  					Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(5' null' null' null' null))'  					Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(3' null' null' null' null))'  					Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(2' null' null' null' null))'  					Rec.Commit(0' "$$bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_metastream_is_scavenged_and_read_index_is_set_to_keep_just_last_metaevent,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_metastream_is_scavenged_and_read_index_is_set_to_keep_just_last_metaevent.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(10' null' null' null' null))'  					Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(5' null' null' null' null))'  					Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(3' null' null' null' null))'  					Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(2' null' null' null' null))'  					Rec.Commit(0' "$$bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_metastream_is_scavenged_and_read_index_is_set_to_keep_just_last_metaevent,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_metastream_is_scavenged_and_read_index_is_set_to_keep_just_last_metaevent.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(10' null' null' null' null))'  					Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(5' null' null' null' null))'  					Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(3' null' null' null' null))'  					Rec.Prepare(0' "$$bla"' metadata: new StreamMetadata(2' null' null' null' null))'  					Rec.Commit(0' "$$bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_metastream_is_scavenged_and_read_index_is_set_to_keep_just_last_metaevent,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_metastream_is_scavenged_and_read_index_is_set_to_keep_just_last_metaevent.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => i >= 3).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_metastream_is_scavenged_and_read_index_is_set_to_keep_last_3_metaevents,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_metastream_is_scavenged_and_read_index_is_set_to_keep_last_3_metaevents.cs,KeptRecords,The following statement contains a magic number: return new[] {  				dbResult.Recs[0].Where((x' i) => i >= 2).ToArray()  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_scavenge_cancelled_after_completed,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_scavenge_cancelled_after_completed.cs,scavenge_record_for_all_completed_chunks,The following statement contains a magic number: Assert.That(Log.Scavenged' Has.Count.EqualTo(2));
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_scavenge_succeeds_without_error,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_scavenge_succeeds_without_error.cs,scavenge_record_for_all_completed_chunks,The following statement contains a magic number: Assert.That(Log.Scavenged' Has.Count.EqualTo(2));
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_stream_is_deleted_and_bulk_transaction_spans_chunks_boundary,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_stream_is_deleted_and_bulk_transaction_spans_chunks_boundary.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla"))  				.Chunk(Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Delete(2' "bla")'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_stream_is_deleted_and_bulk_transaction_spans_chunks_boundary,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_stream_is_deleted_and_bulk_transaction_spans_chunks_boundary.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla"))  				.Chunk(Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Commit(1' "bla")'  					Rec.Delete(2' "bla")'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_stream_is_deleted_and_bulk_transaction_spans_chunks_boundary,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_stream_is_deleted_and_bulk_transaction_spans_chunks_boundary.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {dbResult.Recs[0][2]}' // first prepare in commit that is in different chunk  				dbResult.Recs[1].Where((x' i) => i >= 3).ToArray()'  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_stream_is_deleted_and_bulk_transaction_spans_chunks_boundary,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_stream_is_deleted_and_bulk_transaction_spans_chunks_boundary.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {dbResult.Recs[0][2]}' // first prepare in commit that is in different chunk  				dbResult.Recs[1].Where((x' i) => i >= 3).ToArray()'  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_stream_is_deleted_and_explicit_transaction_spans_chunks_boundary,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_stream_is_deleted_and_explicit_transaction_spans_chunks_boundary.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.TransSt(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla"))  				.Chunk(Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.TransEnd(1' "bla")'  					Rec.Commit(1' "bla"))  				.Chunk(Rec.Delete(2' "bla")'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_stream_is_deleted_and_explicit_transaction_spans_chunks_boundary,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_stream_is_deleted_and_explicit_transaction_spans_chunks_boundary.cs,CreateDb,The following statement contains a magic number: return dbCreator  				.Chunk(Rec.Prepare(0' "bla")'  					Rec.Commit(0' "bla")'  					Rec.TransSt(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla"))  				.Chunk(Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.Prepare(1' "bla")'  					Rec.TransEnd(1' "bla")'  					Rec.Commit(1' "bla"))  				.Chunk(Rec.Delete(2' "bla")'  					Rec.Commit(2' "bla"))  				.CompleteLastChunk()  				.CreateDb();
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_stream_is_deleted_and_explicit_transaction_spans_chunks_boundary,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_stream_is_deleted_and_explicit_transaction_spans_chunks_boundary.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {dbResult.Recs[0][2]}'  				new[] {dbResult.Recs[1][6]}' // commit  				dbResult.Recs[2]  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_stream_is_deleted_and_explicit_transaction_spans_chunks_boundary,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_stream_is_deleted_and_explicit_transaction_spans_chunks_boundary.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {dbResult.Recs[0][2]}'  				new[] {dbResult.Recs[1][6]}' // commit  				dbResult.Recs[2]  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Scavenging,when_stream_is_deleted_and_explicit_transaction_spans_chunks_boundary,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Scavenging\when_stream_is_deleted_and_explicit_transaction_spans_chunks_boundary.cs,KeptRecords,The following statement contains a magic number: return new[] {  				new[] {dbResult.Recs[0][2]}'  				new[] {dbResult.Recs[1][6]}' // commit  				dbResult.Recs[2]  			};
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,TruncateAndReOpenDbScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\TruncateAndReOpenDbScenario.cs,ReOpenDb,The following statement contains a magic number: var readers = new ObjectPool<ITransactionFileReader>("Readers"' 2' 5'  				() => new TFChunkReader(Db' Db.Config.WriterCheckpoint));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,TruncateAndReOpenDbScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\TruncateAndReOpenDbScenario.cs,ReOpenDb,The following statement contains a magic number: var readers = new ObjectPool<ITransactionFileReader>("Readers"' 2' 5'  				() => new TFChunkReader(Db' Db.Config.WriterCheckpoint));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,TruncateAndReOpenDbScenario,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\TruncateAndReOpenDbScenario.cs,ReOpenDb,The following statement contains a magic number: TableIndex = new TableIndex(Path.Combine(PathName' "index")' lowHasher' highHasher'  				() => new HashListMemTable(PTableVersions.IndexV3' MaxEntriesInMemTable * 2)'  				() => new TFReaderLease(readers)'  				PTableVersions.IndexV3'  				MaxEntriesInMemTable);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_database,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_database.cs,everything_should_go_fine,The following statement contains a magic number: const int cnt = 50;
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_database,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_database.cs,everything_should_go_fine,The following statement contains a magic number: Assert.IsTrue(countdown.Wait(TimeSpan.FromSeconds(10))' "Took too long writing first part of events.");
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_database,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_database.cs,everything_should_go_fine,The following statement contains a magic number: Assert.IsTrue(countdown.Wait(TimeSpan.FromSeconds(10))' "Took too long writing second part of events.");
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_database,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_database.cs,everything_should_go_fine,The following statement contains a magic number: Assert.IsTrue(countdown.Wait(TimeSpan.FromSeconds(10))' "Took too long writing third part of events.");
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_database,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_database.cs,with_truncate_position_in_completed_chunk_everything_should_go_fine,The following statement contains a magic number: const int chunkSize = 1024 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_database,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_database.cs,with_truncate_position_in_completed_chunk_everything_should_go_fine,The following statement contains a magic number: const int chunkSize = 1024 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_database,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_database.cs,with_truncate_position_in_completed_chunk_everything_should_go_fine,The following statement contains a magic number: const int cachedSize = chunkSize * 3;
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_database,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_database.cs,with_truncate_position_in_completed_chunk_everything_should_go_fine,The following statement contains a magic number: WriteEvents(cnt' miniNode' countdown' MiniNode.ChunkSize / 5 * 3);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_database,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_database.cs,with_truncate_position_in_completed_chunk_everything_should_go_fine,The following statement contains a magic number: WriteEvents(cnt' miniNode' countdown' MiniNode.ChunkSize / 5 * 3);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_database,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_database.cs,with_truncate_position_in_completed_chunk_everything_should_go_fine,The following statement contains a magic number: Assert.IsTrue(countdown.Wait(TimeSpan.FromSeconds(10))' "Took too long writing first part of events.");
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_database,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_database.cs,with_truncate_position_in_completed_chunk_everything_should_go_fine,The following statement contains a magic number: WriteEvents(cnt' miniNode' countdown' MiniNode.ChunkSize / 2);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_database,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_database.cs,with_truncate_position_in_completed_chunk_everything_should_go_fine,The following statement contains a magic number: Assert.IsTrue(countdown.Wait(TimeSpan.FromSeconds(10))' "Took too long writing second part of events.");
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_database,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_database.cs,with_truncate_position_in_completed_chunk_everything_should_go_fine,The following statement contains a magic number: WriteEvents(cnt' miniNode' countdown' MiniNode.ChunkSize / 5);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_database,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_database.cs,with_truncate_position_in_completed_chunk_everything_should_go_fine,The following statement contains a magic number: Assert.IsTrue(countdown.Wait(TimeSpan.FromSeconds(10))' "Took too long writing third part of events.");
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' new string('.'' 4000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 1' new string('.'' 4000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 4000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 4000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 3' new string('.'' 4000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 3' new string('.'' 4000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 4' new string('.'' 4000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 4' new string('.'' 4000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 5' new string('.'' 4000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 5' new string('.'' 4000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 6' new string('.'' 4000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 6' new string('.'' 4000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: _chunk2 = GetChunkName(2);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: _chunk3 = GetChunkName(3);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk.cs,not_truncated_chunks_should_survive,The following statement contains a magic number: Assert.AreEqual(2' chunks.Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _event1 = WriteSingleEvent("ES"' 0' new string('.'' 4000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _event2 = WriteSingleEvent("ES"' 1' new string('.'' 4000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 2' new string('.'' 4000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 2' new string('.'' 4000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 3' new string('.'' 4000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _event4 = WriteSingleEvent("ES"' 3' new string('.'' 4000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 4' new string('.'' 4000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 4' new string('.'' 4000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 5' new string('.'' 4000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 5' new string('.'' 4000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _event7 = WriteSingleEvent("ES"' 6' new string('.'' 4000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _event7 = WriteSingleEvent("ES"' 6' new string('.'' 4000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _chunk2 = GetChunkName(2);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _chunk3 = GetChunkName(3);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,not_truncated_chunks_should_survive,The following statement contains a magic number: Assert.AreEqual(2' chunks.Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_one_by_one_doesnt_return_truncated_records,The following statement contains a magic number: res = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_one_by_one_doesnt_return_truncated_records,The following statement contains a magic number: res = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_one_by_one_doesnt_return_truncated_records,The following statement contains a magic number: res = ReadIndex.ReadEvent("ES"' 4);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_one_by_one_doesnt_return_truncated_records,The following statement contains a magic number: res = ReadIndex.ReadEvent("ES"' 5);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_one_by_one_doesnt_return_truncated_records,The following statement contains a magic number: res = ReadIndex.ReadEvent("ES"' 6);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_one_by_one_doesnt_return_truncated_records,The following statement contains a magic number: res = ReadIndex.ReadEvent("ES"' 7);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_stream_forward_doesnt_return_truncated_records,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_stream_forward_doesnt_return_truncated_records,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_stream_forward_doesnt_return_truncated_records,The following statement contains a magic number: Assert.AreEqual(_event3' records[2]);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_stream_backward_doesnt_return_truncated_records,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_stream_backward_doesnt_return_truncated_records,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_stream_backward_doesnt_return_truncated_records,The following statement contains a magic number: Assert.AreEqual(_event1' records[2]);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_all_returns_only_survived_events,The following statement contains a magic number: var res = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_all_returns_only_survived_events,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_all_returns_only_survived_events,The following statement contains a magic number: Assert.AreEqual(_event3' records[2]);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_all_backward_doesnt_return_truncated_records,The following statement contains a magic number: var res = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_all_backward_doesnt_return_truncated_records,The following statement contains a magic number: Assert.AreEqual(3' records.Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_all_backward_doesnt_return_truncated_records,The following statement contains a magic number: Assert.AreEqual(_event1' records[2]);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_few_chunks_with_index_on_disk_and_then_reopening_db.cs,read_all_backward_from_last_truncated_record_returns_no_records,The following statement contains a magic number: var res = ReadIndex.ReadAllEventsForward(pos' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_completed_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_completed_chunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 1711' 5500' 5500' 1111' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_completed_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_completed_chunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 1711' 5500' 5500' 1111' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_completed_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_completed_chunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 1711' 5500' 5500' 1111' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_completed_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_completed_chunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 1711' 5500' 5500' 1111' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_completed_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_completed_chunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 1711' 5500' 5500' 1111' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_completed_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_completed_chunk.cs,TestFixtureTearDown,The following statement contains a magic number: Assert.AreEqual(2' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_completed_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_completed_chunk.cs,writer_checkpoint_should_be_set_to_exactly_truncation_checkpoint,The following statement contains a magic number: Assert.AreEqual(1111' _config.WriterCheckpoint.Read());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_completed_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_completed_chunk.cs,writer_checkpoint_should_be_set_to_exactly_truncation_checkpoint,The following statement contains a magic number: Assert.AreEqual(1111' _config.WriterCheckpoint.ReadNonFlushed());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_completed_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_completed_chunk.cs,chaser_checkpoint_should_be_adjusted_if_less_than_actual_truncate_checkpoint,The following statement contains a magic number: Assert.AreEqual(1111' _config.ChaserCheckpoint.Read());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_completed_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_completed_chunk.cs,chaser_checkpoint_should_be_adjusted_if_less_than_actual_truncate_checkpoint,The following statement contains a magic number: Assert.AreEqual(1111' _config.ChaserCheckpoint.ReadNonFlushed());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_completed_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_completed_chunk.cs,all_chunks_are_preserved,The following statement contains a magic number: Assert.AreEqual(2' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_completed_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_completed_chunk.cs,ongoing_chunk_should_have_full_size_and_filled_with_zeros_after_writer_checkpoint,The following statement contains a magic number: Assert.AreEqual(ChunkHeader.Size + 1000 + ChunkFooter.Size' fileInfo.Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 11111' 5500' 5500' 5757' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 11111' 5500' 5500' 5757' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 11111' 5500' 5500' 5757' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 11111' 5500' 5500' 5757' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 11111' 5500' 5500' 5757' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 0' 2' GetFilePathFor("chunk-000000.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 0' 2' GetFilePathFor("chunk-000000.000002"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 3' 10' GetFilePathFor("chunk-000003.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 3' 10' GetFilePathFor("chunk-000003.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 3' 10' GetFilePathFor("chunk-000003.000002"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 3' 10' GetFilePathFor("chunk-000003.000002"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 7' 8' GetFilePathFor("chunk-000007.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 7' 8' GetFilePathFor("chunk-000007.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateOngoingChunk(_config' 11' GetFilePathFor("chunk-000011.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,TestFixtureTearDown,The following statement contains a magic number: Assert.AreEqual(2' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,writer_checkpoint_should_be_set_to_start_of_new_chunk,The following statement contains a magic number: Assert.AreEqual(3000' _config.WriterCheckpoint.Read());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,writer_checkpoint_should_be_set_to_start_of_new_chunk,The following statement contains a magic number: Assert.AreEqual(3000' _config.WriterCheckpoint.ReadNonFlushed());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,chaser_checkpoint_should_be_adjusted_if_less_than_actual_truncate_checkpoint,The following statement contains a magic number: Assert.AreEqual(3000' _config.ChaserCheckpoint.Read());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,chaser_checkpoint_should_be_adjusted_if_less_than_actual_truncate_checkpoint,The following statement contains a magic number: Assert.AreEqual(3000' _config.ChaserCheckpoint.ReadNonFlushed());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_multichunk.cs,all_excessive_chunks_should_be_deleted,The following statement contains a magic number: Assert.AreEqual(2' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_ongoing_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_ongoing_chunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 1711' 5500' 5500' 1111' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_ongoing_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_ongoing_chunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 1711' 5500' 5500' 1111' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_ongoing_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_ongoing_chunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 1711' 5500' 5500' 1111' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_ongoing_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_ongoing_chunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 1711' 5500' 5500' 1111' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_ongoing_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_ongoing_chunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 1711' 5500' 5500' 1111' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_ongoing_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_ongoing_chunk.cs,TestFixtureTearDown,The following statement contains a magic number: Assert.AreEqual(2' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_ongoing_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_ongoing_chunk.cs,writer_checkpoint_should_be_set_to_exactly_truncation_checkpoint,The following statement contains a magic number: Assert.AreEqual(1111' _config.WriterCheckpoint.Read());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_ongoing_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_ongoing_chunk.cs,writer_checkpoint_should_be_set_to_exactly_truncation_checkpoint,The following statement contains a magic number: Assert.AreEqual(1111' _config.WriterCheckpoint.ReadNonFlushed());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_ongoing_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_ongoing_chunk.cs,chaser_checkpoint_should_be_adjusted_if_less_than_actual_truncate_checkpoint,The following statement contains a magic number: Assert.AreEqual(1111' _config.ChaserCheckpoint.Read());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_ongoing_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_ongoing_chunk.cs,chaser_checkpoint_should_be_adjusted_if_less_than_actual_truncate_checkpoint,The following statement contains a magic number: Assert.AreEqual(1111' _config.ChaserCheckpoint.ReadNonFlushed());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_ongoing_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_ongoing_chunk.cs,all_chunks_are_preserved,The following statement contains a magic number: Assert.AreEqual(2' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_ongoing_chunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_ongoing_chunk.cs,ongoing_chunk_should_have_full_size_and_filled_with_zeros_after_writer_checkpoint,The following statement contains a magic number: Assert.AreEqual(ChunkHeader.Size + 1000 + ChunkFooter.Size' fileInfo.Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES2"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: chunkEdge = WriteSingleEvent("ES1"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: chunkEdge = WriteSingleEvent("ES1"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: var ackRec = WriteSingleEvent("ES1"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: var ackRec = WriteSingleEvent("ES1"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 5' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 5' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 6' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 6' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 7' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 7' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 8' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 8' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,OnBeforeTruncating,The following statement contains a magic number: chunk2 = GetChunkName(2);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory.cs,OnBeforeTruncating,The following statement contains a magic number: chunk3 = GetChunkName(3);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 1' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _event2 = WriteSingleEvent("ES2"' 0' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _chunkEdge = WriteSingleEvent("ES1"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _chunkEdge = WriteSingleEvent("ES1"' 2' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: var rec = WriteSingleEvent("ES1"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: var rec = WriteSingleEvent("ES1"' 3' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 4' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 5' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 5' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 6' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 6' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 7' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 7' new string('.'' 3000));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 8' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES1"' 8' new string('.'' 3000)' retryOnFail: true);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,OnBeforeTruncating,The following statement contains a magic number: _chunk2 = GetChunkName(2);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,OnBeforeTruncating,The following statement contains a magic number: _chunk3 = GetChunkName(3);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,read_stream_forward_doesnt_return_untouched_records,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES2"' 0' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,read_stream_forward_doesnt_return_truncated_or_scavenged_records_but_returns_stream_created,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES1"' 0' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,read_stream_backward_doesnt_return_untoucned_records,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES2"' -1' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,read_stream_backward_doesnt_return_truncated_records,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES1"' -1' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,read_all_forward_returns_only_survived_events,The following statement contains a magic number: var res = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_into_the_middle_of_scavenged_chunk_with_index_in_memory_and_then_reopening_db.cs,read_all_backward_doesnt_return_truncated_records,The following statement contains a magic number: var res = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 13500' 5500' 5500' 11000' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 13500' 5500' 5500' 11000' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 13500' 5500' 5500' 11000' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 13500' 5500' 5500' 11000' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 13500' 5500' 5500' 11000' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 0' 2' GetFilePathFor("chunk-000000.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 0' 2' GetFilePathFor("chunk-000000.000002"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 3' 10' GetFilePathFor("chunk-000003.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 3' 10' GetFilePathFor("chunk-000003.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 3' 10' GetFilePathFor("chunk-000003.000002"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 3' 10' GetFilePathFor("chunk-000003.000002"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 7' 8' GetFilePathFor("chunk-000007.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 7' 8' GetFilePathFor("chunk-000007.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 11' 12' GetFilePathFor("chunk-000011.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 11' 12' GetFilePathFor("chunk-000011.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateOngoingChunk(_config' 13' GetFilePathFor("chunk-000013.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,TestFixtureTearDown,The following statement contains a magic number: Assert.AreEqual(3' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,writer_checkpoint_should_be_set_to_truncate_checkpoint,The following statement contains a magic number: Assert.AreEqual(11000' _config.WriterCheckpoint.Read());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,writer_checkpoint_should_be_set_to_truncate_checkpoint,The following statement contains a magic number: Assert.AreEqual(11000' _config.WriterCheckpoint.ReadNonFlushed());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,chaser_checkpoint_should_be_left_as_is_if_less_than_truncate_checkpoint,The following statement contains a magic number: Assert.AreEqual(5500' _config.ChaserCheckpoint.Read());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,chaser_checkpoint_should_be_left_as_is_if_less_than_truncate_checkpoint,The following statement contains a magic number: Assert.AreEqual(5500' _config.ChaserCheckpoint.ReadNonFlushed());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,epoch_checkpoint_should_be_left_as_is_if_less_than_truncate_checkpoint,The following statement contains a magic number: Assert.AreEqual(5500' _config.EpochCheckpoint.Read());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,epoch_checkpoint_should_be_left_as_is_if_less_than_truncate_checkpoint,The following statement contains a magic number: Assert.AreEqual(5500' _config.EpochCheckpoint.ReadNonFlushed());
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_right_at_the_end_of_multichunk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_right_at_the_end_of_multichunk.cs,every_chunk_that_end_by_the_truncation_checkpoint_is_preserved,The following statement contains a magic number: Assert.AreEqual(5' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _event1 = WriteSingleEvent("ES"' 0' new string('.'' 500));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _event2 = WriteSingleEvent("ES"' 1' new string('.'' 500));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 2' new string('.'' 500));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db.cs,WriteTestScenario,The following statement contains a magic number: _event3 = WriteSingleEvent("ES"' 2' new string('.'' 500));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db.cs,read_one_by_one_doesnt_return_truncated_records,The following statement contains a magic number: res = ReadIndex.ReadEvent("ES"' 2);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db.cs,read_one_by_one_doesnt_return_truncated_records,The following statement contains a magic number: res = ReadIndex.ReadEvent("ES"' 3);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db.cs,read_stream_forward_doesnt_return_truncated_records,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsForward("ES"' 0' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db.cs,read_stream_backward_doesnt_return_truncated_records,The following statement contains a magic number: var res = ReadIndex.ReadStreamEventsBackward("ES"' -1' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db.cs,read_all_forward_doesnt_return_truncated_records,The following statement contains a magic number: var res = ReadIndex.ReadAllEventsForward(new TFPos(0' 0)' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db.cs,read_all_backward_doesnt_return_truncated_records,The following statement contains a magic number: var res = ReadIndex.ReadAllEventsBackward(GetBackwardReadPos()' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_in_memory_and_then_reopening_db.cs,read_all_backward_from_last_truncated_record_returns_no_records,The following statement contains a magic number: var res = ReadIndex.ReadAllEventsForward(pos' 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 0' new string('.'' 500));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: _event2 = WriteSingleEvent("ES"' 1' new string('.'' 500));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 500));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 2' new string('.'' 500));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 500));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_single_uncompleted_chunk_with_index_on_disk,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_single_uncompleted_chunk_with_index_on_disk.cs,WriteTestScenario,The following statement contains a magic number: WriteSingleEvent("ES"' 3' new string('.'' 500));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_to_the_very_beginning_of_multichunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_to_the_very_beginning_of_db.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 11111' 5500' 5500' 0' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_to_the_very_beginning_of_multichunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_to_the_very_beginning_of_db.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 11111' 5500' 5500' 0' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_to_the_very_beginning_of_multichunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_to_the_very_beginning_of_db.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 11111' 5500' 5500' 0' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_to_the_very_beginning_of_multichunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_to_the_very_beginning_of_db.cs,TestFixtureSetUp,The following statement contains a magic number: _config = TFChunkHelper.CreateDbConfig(PathName' 11111' 5500' 5500' 0' 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_to_the_very_beginning_of_multichunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_to_the_very_beginning_of_db.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 0' 2' GetFilePathFor("chunk-000000.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_to_the_very_beginning_of_multichunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_to_the_very_beginning_of_db.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 0' 2' GetFilePathFor("chunk-000000.000002"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_to_the_very_beginning_of_multichunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_to_the_very_beginning_of_db.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 3' 10' GetFilePathFor("chunk-000003.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_to_the_very_beginning_of_multichunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_to_the_very_beginning_of_db.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 3' 10' GetFilePathFor("chunk-000003.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_to_the_very_beginning_of_multichunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_to_the_very_beginning_of_db.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 3' 10' GetFilePathFor("chunk-000003.000002"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_to_the_very_beginning_of_multichunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_to_the_very_beginning_of_db.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 3' 10' GetFilePathFor("chunk-000003.000002"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_to_the_very_beginning_of_multichunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_to_the_very_beginning_of_db.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 7' 8' GetFilePathFor("chunk-000007.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_to_the_very_beginning_of_multichunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_to_the_very_beginning_of_db.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateMultiChunk(_config' 7' 8' GetFilePathFor("chunk-000007.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Truncation,when_truncating_to_the_very_beginning_of_multichunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Truncation\when_truncating_to_the_very_beginning_of_db.cs,TestFixtureSetUp,The following statement contains a magic number: DbUtil.CreateOngoingChunk(_config' 11' GetFilePathFor("chunk-000011.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_resizing_a_file,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_resizing_a_file,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_resizing_a_file,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_resizing_a_file,The following statement contains a magic number: stream.SetLength(4096 * 1024);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_resizing_a_file,The following statement contains a magic number: stream.SetLength(4096 * 1024);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_resizing_a_file,The following statement contains a magic number: Assert.AreEqual(4096 * 1024' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_resizing_a_file,The following statement contains a magic number: Assert.AreEqual(4096 * 1024' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_page,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_page,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_page,The following statement contains a magic number: stream.SetLength(initialFileSize + 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_page,The following statement contains a magic number: Assert.AreEqual(initialFileSize + 4096' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_less_than_one_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_less_than_one_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_less_than_one_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_less_than_one_page,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_less_than_one_page,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_less_than_one_page,The following statement contains a magic number: stream.SetLength(initialFileSize + 4095);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_less_than_one_page,The following statement contains a magic number: Assert.AreEqual(initialFileSize + 4096' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_more_than_one_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_more_than_one_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_more_than_one_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_more_than_one_page,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_more_than_one_page,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_more_than_one_page,The following statement contains a magic number: stream.SetLength(initialFileSize + 4097);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_more_than_one_page,The following statement contains a magic number: Assert.AreEqual(initialFileSize + 4096 * 2' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte_more_than_one_page,The following statement contains a magic number: Assert.AreEqual(initialFileSize + 4096 * 2' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_expanding_an_aligned_file_by_one_byte,The following statement contains a magic number: Assert.AreEqual(initialFileSize + 4096' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page,The following statement contains a magic number: stream.SetLength(initialFileSize - 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page,The following statement contains a magic number: Assert.AreEqual(initialFileSize - 4096' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page,The following statement contains a magic number: Assert.AreEqual(initialFileSize - 4096' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page_and_position_one_page_from_eof,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page_and_position_one_page_from_eof,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page_and_position_one_page_from_eof,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page_and_position_one_page_from_eof,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page_and_position_one_page_from_eof,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page_and_position_one_page_from_eof,The following statement contains a magic number: stream.Seek(-4096' SeekOrigin.End);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page_and_position_one_page_from_eof,The following statement contains a magic number: Assert.AreEqual(initialFileSize - 4096' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page_and_position_one_page_from_eof,The following statement contains a magic number: stream.SetLength(initialFileSize - 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page_and_position_one_page_from_eof,The following statement contains a magic number: Assert.AreEqual(initialFileSize - 4096' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_page_and_position_one_page_from_eof,The following statement contains a magic number: Assert.AreEqual(initialFileSize - 4096' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte_less_than_a_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte_less_than_a_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte_less_than_a_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte_less_than_a_page,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte_less_than_a_page,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte_less_than_a_page,The following statement contains a magic number: stream.SetLength(initialFileSize - 4095);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte_more_than_a_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte_more_than_a_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte_more_than_a_page,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte_more_than_a_page,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte_more_than_a_page,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte_more_than_a_page,The following statement contains a magic number: stream.SetLength(initialFileSize - 4097);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte_more_than_a_page,The following statement contains a magic number: Assert.AreEqual(initialFileSize - 4096' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte_more_than_a_page,The following statement contains a magic number: Assert.AreEqual(initialFileSize - 4096' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte,The following statement contains a magic number: var stream = UnbufferedFileStream.Create(filename' FileMode.CreateNew' FileAccess.ReadWrite'  				FileShare.ReadWrite' false' 4096' 4096' false' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_truncating_an_aligned_file_by_one_byte,The following statement contains a magic number: var initialFileSize = 4096 * 1024;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_less_than_buffer,The following statement contains a magic number: var bytes = GetBytes(255);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_more_than_buffer,The following statement contains a magic number: var bytes = GetBytes(9000);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_more_than_buffer,The following statement contains a magic number: Assert.AreEqual(4096 * 2' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_more_than_buffer,The following statement contains a magic number: Assert.AreEqual(4096 * 2' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_more_than_buffer,The following statement contains a magic number: Assert.AreEqual(i % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_more_than_buffer,The following statement contains a magic number: i < 4096 * 2
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_more_than_buffer,The following statement contains a magic number: i < 4096 * 2
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_less_than_buffer_and_closing,The following statement contains a magic number: var bytes = GetBytes(255);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_less_than_buffer_and_closing,The following statement contains a magic number: Assert.AreEqual(4096' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_less_than_buffer_and_closing,The following statement contains a magic number: Assert.AreEqual(i % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_less_than_buffer_and_closing,The following statement contains a magic number: i < 255
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_seeking_greater_than_2gb,The following statement contains a magic number: var GIGABYTE = 1024L * 1024L * 1024L;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_seeking_greater_than_2gb,The following statement contains a magic number: var GIGABYTE = 1024L * 1024L * 1024L;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_seeking_greater_than_2gb,The following statement contains a magic number: var GIGABYTE = 1024L * 1024L * 1024L;
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_seeking_greater_than_2gb,The following statement contains a magic number: stream.SetLength(4L * GIGABYTE);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_seeking_greater_than_2gb,The following statement contains a magic number: stream.Seek(3L * GIGABYTE' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_less_than_buffer_and_seeking,The following statement contains a magic number: var bytes = GetBytes(255);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_less_than_buffer_and_seeking,The following statement contains a magic number: Assert.AreEqual(4096' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_less_than_buffer_and_seeking,The following statement contains a magic number: Assert.AreEqual(i % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_less_than_buffer_and_seeking,The following statement contains a magic number: i < 255
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_exact_to_alignment_and_writing_again,The following statement contains a magic number: var bytes = GetBytes(4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_exact_to_alignment_and_writing_again,The following statement contains a magic number: Assert.AreEqual(4096' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_exact_to_alignment_and_writing_again,The following statement contains a magic number: bytes = GetBytes(15);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_exact_to_alignment_and_writing_again,The following statement contains a magic number: Assert.AreEqual(4111' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_exact_to_alignment_and_writing_again,The following statement contains a magic number: Assert.AreEqual(4111' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_exact_to_alignment_and_writing_again,The following statement contains a magic number: Assert.AreEqual(8192' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_exact_to_alignment_and_writing_again,The following statement contains a magic number: Assert.AreEqual(i % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_exact_to_alignment_and_writing_again,The following statement contains a magic number: i < 255
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_then_seeking_exact_to_alignment_and_writing_again,The following statement contains a magic number: var bytes = GetBytes(8192);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_then_seeking_exact_to_alignment_and_writing_again,The following statement contains a magic number: stream.Write(bytes' 0' 5012);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_then_seeking_exact_to_alignment_and_writing_again,The following statement contains a magic number: Assert.AreEqual(5012' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_then_seeking_exact_to_alignment_and_writing_again,The following statement contains a magic number: stream.Seek(4096' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_then_seeking_exact_to_alignment_and_writing_again,The following statement contains a magic number: Assert.AreEqual(4096' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_then_seeking_exact_to_alignment_and_writing_again,The following statement contains a magic number: bytes = GetBytes(15);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_then_seeking_exact_to_alignment_and_writing_again,The following statement contains a magic number: Assert.AreEqual(4111' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_then_seeking_exact_to_alignment_and_writing_again,The following statement contains a magic number: Assert.AreEqual(4111' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_then_seeking_exact_to_alignment_and_writing_again,The following statement contains a magic number: Assert.AreEqual(8192' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_then_seeking_exact_to_alignment_and_writing_again,The following statement contains a magic number: Assert.AreEqual(i % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_then_seeking_exact_to_alignment_and_writing_again,The following statement contains a magic number: i < 255
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_seeking_non_exact_to_zero_block_and_writing,The following statement contains a magic number: MakeFile(filename' 4096 * 64);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_seeking_non_exact_to_zero_block_and_writing,The following statement contains a magic number: MakeFile(filename' 4096 * 64);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_seeking_non_exact_to_zero_block_and_writing,The following statement contains a magic number: var bytes = GetBytes(512);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_seeking_non_exact_to_zero_block_and_writing,The following statement contains a magic number: stream.Seek(128' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_seeking_non_exact_to_zero_block_and_writing,The following statement contains a magic number: var read = new byte[128];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_seeking_non_exact_to_zero_block_and_writing,The following statement contains a magic number: stream.Read(read' 0' 128);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_multiple_times,The following statement contains a magic number: var bytes = GetBytes(256);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_multiple_times,The following statement contains a magic number: Assert.AreEqual(256' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_multiple_times,The following statement contains a magic number: Assert.AreEqual(256' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_multiple_times,The following statement contains a magic number: Assert.AreEqual(512' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_multiple_times,The following statement contains a magic number: Assert.AreEqual(512' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_multiple_times,The following statement contains a magic number: Assert.AreEqual(4096' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_multiple_times,The following statement contains a magic number: Assert.AreEqual(i % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_multiple_times,The following statement contains a magic number: i < 512
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: MakeFile(filename' 20000);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: stream.Seek(4096 + 15' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: stream.Seek(4096 + 15' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: var read = new byte[1000];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: stream.Read(read' 0' 500);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: Assert.AreEqual(4096 + 15 + 500' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: Assert.AreEqual(4096 + 15 + 500' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: Assert.AreEqual(4096 + 15 + 500' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: stream.Read(read' 500' 500);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: stream.Read(read' 500' 500);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: Assert.AreEqual(4096 + 15 + 1000' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: Assert.AreEqual(4096 + 15 + 1000' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: Assert.AreEqual(4096 + 15 + 1000' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: Assert.AreEqual((i + 15) % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times,The following statement contains a magic number: Assert.AreEqual((i + 15) % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_no_seek,The following statement contains a magic number: MakeFile(filename' 20000);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_no_seek,The following statement contains a magic number: var read = new byte[1000];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_no_seek,The following statement contains a magic number: stream.Read(read' 0' 500);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_no_seek,The following statement contains a magic number: Assert.AreEqual(500' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_no_seek,The following statement contains a magic number: stream.Read(read' 500' 500);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_no_seek,The following statement contains a magic number: stream.Read(read' 500' 500);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_no_seek,The following statement contains a magic number: Assert.AreEqual(1000' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_no_seek,The following statement contains a magic number: Assert.AreEqual(i % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_over_page_size,The following statement contains a magic number: MakeFile(filename' 20000);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_over_page_size,The following statement contains a magic number: var read = new byte[6000];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_over_page_size,The following statement contains a magic number: stream.Read(read' 0' 3000);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_over_page_size,The following statement contains a magic number: Assert.AreEqual(3000' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_over_page_size,The following statement contains a magic number: var total = stream.Read(read' 3000' 3000);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_over_page_size,The following statement contains a magic number: var total = stream.Read(read' 3000' 3000);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_over_page_size,The following statement contains a magic number: Assert.AreEqual(3000' total);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_over_page_size,The following statement contains a magic number: Assert.AreEqual(6000' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_over_page_size,The following statement contains a magic number: Assert.AreEqual(i % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_on_page_size,The following statement contains a magic number: MakeFile(filename' 20000);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_on_page_size,The following statement contains a magic number: var read = new byte[6000];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_on_page_size,The following statement contains a magic number: stream.Read(read' 0' 3000);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_on_page_size,The following statement contains a magic number: Assert.AreEqual(3000' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_on_page_size,The following statement contains a magic number: var total = stream.Read(read' 3000' 1096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_on_page_size,The following statement contains a magic number: var total = stream.Read(read' 3000' 1096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_on_page_size,The following statement contains a magic number: Assert.AreEqual(1096' total);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_on_page_size,The following statement contains a magic number: total = stream.Read(read' 4096' read.Length - 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_on_page_size,The following statement contains a magic number: total = stream.Read(read' 4096' read.Length - 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_on_page_size,The following statement contains a magic number: Assert.AreEqual(read.Length - 4096' total);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_on_page_size,The following statement contains a magic number: Assert.AreEqual(6000' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_on_page_size,The following statement contains a magic number: Assert.AreEqual(i % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: MakeFile(filename' 4096 * 100 + 50);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: MakeFile(filename' 4096 * 100 + 50);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: MakeFile(filename' 4096 * 100 + 50);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: var read = new byte[4096];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: var total = stream.Read(read' 0' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: Assert.AreEqual(4096 * (i + 1)' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: Assert.AreEqual(4096' total);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: Assert.AreEqual(j % 256' read[j]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: i < 100
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: var total2 = stream.Read(read' 0' 50);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: Assert.AreEqual(409600 + 50' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: Assert.AreEqual(409600 + 50' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: Assert.AreEqual(50' total2);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: Assert.AreEqual(j % 256' read[j]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_exact_page_size,The following statement contains a magic number: j < 50
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: MakeFile(filename' 4096 * 100 + 50);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: MakeFile(filename' 4096 * 100 + 50);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: MakeFile(filename' 4096 * 100 + 50);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: stream.Seek(50' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: var read = new byte[4096];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: i == 99
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: var total = stream.Read(read' 0' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: Assert.AreEqual(4096 * (i + 1) + 50' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: Assert.AreEqual(4096 * (i + 1) + 50' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: Assert.AreEqual(4096' total);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: Assert.AreEqual((j + 50) % 256' read[j]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: Assert.AreEqual((j + 50) % 256' read[j]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: i < 100
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: Assert.AreEqual(4096 * 100 + 50' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: Assert.AreEqual(4096 * 100 + 50' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_multiple_times_offset_page_size,The following statement contains a magic number: Assert.AreEqual(4096 * 100 + 50' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_more_than_buffer_and_closing,The following statement contains a magic number: var bytes = GetBytes(9000);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_more_than_buffer_and_closing,The following statement contains a magic number: Assert.AreEqual(4096 * 3' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_more_than_buffer_and_closing,The following statement contains a magic number: Assert.AreEqual(4096 * 3' new FileInfo(filename).Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_more_than_buffer_and_closing,The following statement contains a magic number: Assert.AreEqual(i % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_writing_more_than_buffer_and_closing,The following statement contains a magic number: i < 9000
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_on_aligned_buffer,The following statement contains a magic number: MakeFile(filename' 20000);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_on_aligned_buffer,The following statement contains a magic number: var read = new byte[4096];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_on_aligned_buffer,The following statement contains a magic number: stream.Read(read' 0' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_on_aligned_buffer,The following statement contains a magic number: Assert.AreEqual(i % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_on_aligned_buffer,The following statement contains a magic number: i < 4096
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_on_unaligned_buffer,The following statement contains a magic number: MakeFile(filename' 20000);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_on_unaligned_buffer,The following statement contains a magic number: stream.Seek(15' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_on_unaligned_buffer,The following statement contains a magic number: var read = new byte[999];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_on_unaligned_buffer,The following statement contains a magic number: Assert.AreEqual((i + 15) % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,when_reading_on_unaligned_buffer,The following statement contains a magic number: Assert.AreEqual((i + 15) % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_and_read_on_unaligned_buffer,The following statement contains a magic number: MakeFile(filename' 20000);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_and_read_on_unaligned_buffer,The following statement contains a magic number: stream.Seek(4096 + 15' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_and_read_on_unaligned_buffer,The following statement contains a magic number: stream.Seek(4096 + 15' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_and_read_on_unaligned_buffer,The following statement contains a magic number: Assert.AreEqual(4096 + 15' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_and_read_on_unaligned_buffer,The following statement contains a magic number: Assert.AreEqual(4096 + 15' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_and_read_on_unaligned_buffer,The following statement contains a magic number: var read = new byte[999];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_and_read_on_unaligned_buffer,The following statement contains a magic number: Assert.AreEqual(4096 + 15 + 999' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_and_read_on_unaligned_buffer,The following statement contains a magic number: Assert.AreEqual(4096 + 15 + 999' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_and_read_on_unaligned_buffer,The following statement contains a magic number: Assert.AreEqual(4096 + 15 + 999' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_and_read_on_unaligned_buffer,The following statement contains a magic number: Assert.AreEqual((i + 15) % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_and_read_on_unaligned_buffer,The following statement contains a magic number: Assert.AreEqual((i + 15) % 256' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_origin_end_to_mid_of_file,The following statement contains a magic number: stream.Seek(-30' SeekOrigin.End);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_origin_end_to_mid_of_file,The following statement contains a magic number: Assert.AreEqual(stream.Length - 30' stream.Position);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_write_seek_read_in_buffer,The following statement contains a magic number: var buffer = GetBytes(255);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_write_seek_read_in_buffer,The following statement contains a magic number: stream.Seek(4096 + 15' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_write_seek_read_in_buffer,The following statement contains a magic number: stream.Seek(4096 + 15' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_write_seek_read_in_buffer,The following statement contains a magic number: stream.Seek(4096 + 15' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_write_seek_read_in_buffer,The following statement contains a magic number: stream.Seek(4096 + 15' SeekOrigin.Begin);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_write_seek_read_in_buffer,The following statement contains a magic number: var read = new byte[255];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,seek_write_seek_read_in_buffer,The following statement contains a magic number: Assert.AreEqual(i % 255' read[i]);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads,The following statement contains a magic number: var bytes = BuildBytes(4096 * 128);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads,The following statement contains a magic number: var bytes = BuildBytes(4096 * 128);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads,The following statement contains a magic number: var readf = new byte[4096];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads,The following statement contains a magic number: var readb = new byte[4096];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads,The following statement contains a magic number: var totalf = f.Read(readf' 0' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads,The following statement contains a magic number: var totalb = b.Read(readb' 0' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads,The following statement contains a magic number: j < 4096
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads,The following statement contains a magic number: i < 128
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads_with_bigger_buffer,The following statement contains a magic number: var bytes = BuildBytes(4096 * 128);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads_with_bigger_buffer,The following statement contains a magic number: var bytes = BuildBytes(4096 * 128);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads_with_bigger_buffer,The following statement contains a magic number: var readf = new byte[4096];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads_with_bigger_buffer,The following statement contains a magic number: var readb = new byte[4096];
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads_with_bigger_buffer,The following statement contains a magic number: var totalf = f.Read(readf' 0' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads_with_bigger_buffer,The following statement contains a magic number: var totalb = b.Read(readb' 0' 4096);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads_with_bigger_buffer,The following statement contains a magic number: j < 4096
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,same_as_file_stream_on_reads_with_bigger_buffer,The following statement contains a magic number: i < 128
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,BuildBytes,The following statement contains a magic number: ret.Write(Guid.NewGuid().ToByteArray()' 0' 16);
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,BuildBytes,The following statement contains a magic number: i < count / 16
Magic Number,EventStore.Core.Tests.TransactionLog.Unbuffered,UnbufferedTests,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Unbuffered\UnbufferedTests.cs,GetBytes,The following statement contains a magic number: ret[i] = (byte)(i % 256);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunkdb_without_previous_files,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunkdb_without_previous_files.cs,with_a_writer_checksum_of_nonzero_and_no_files_a_corrupted_database_exception_is_thrown,The following statement contains a magic number: var db = new TFChunkDb(TFChunkHelper.CreateDbConfig(PathName' 500));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,with_file_of_wrong_size_database_corruption_is_detected,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 500);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,with_not_enough_files_to_reach_checksum_throws,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 15000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,allows_with_exactly_enough_file_to_reach_checksum,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 10000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,does_not_allow_not_completed_not_last_chunks,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 4000' chunkSize: 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,does_not_allow_not_completed_not_last_chunks,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 4000' chunkSize: 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,does_not_allow_not_completed_not_last_chunks,The following statement contains a magic number: DbUtil.CreateOngoingChunk(config' 2' GetFilePathFor("chunk-000002.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,does_not_allow_not_completed_not_last_chunks,The following statement contains a magic number: DbUtil.CreateOngoingChunk(config' 3' GetFilePathFor("chunk-000003.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,allows_next_new_chunk_when_checksum_is_exactly_in_between_two_chunks,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 10000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,does_not_allow_next_new_completed_chunk_when_checksum_is_exactly_in_between_two_chunks,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 10000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,allows_last_chunk_to_be_not_completed_when_checksum_is_exactly_in_between_two_chunks_and_no_next_chunk_exists,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 10000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,does_not_allow_pre_last_chunk_to_be_not_completed_when_checksum_is_exactly_in_between_two_chunks_and_next_chunk_exists,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 10000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,with_wrong_size_file_less_than_checksum_throws,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 15000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,with_wrong_size_file_less_than_checksum_throws,The following statement contains a magic number: DbUtil.CreateSingleChunk(config' 1' GetFilePathFor("chunk-000001.000000")'  					actualDataSize: config.ChunkSize - 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_in_first_extraneous_files_throws_corrupt_database_exception,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 9000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_in_multiple_extraneous_files_throws_corrupt_database_exception,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 15000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_in_multiple_extraneous_files_throws_corrupt_database_exception,The following statement contains a magic number: DbUtil.CreateSingleChunk(config' 2' GetFilePathFor("chunk-000002.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_in_brand_new_extraneous_files_throws_corrupt_database_exception,The following statement contains a magic number: DbUtil.CreateSingleChunk(config' 4' GetFilePathFor("chunk-000004.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_a_chaser_checksum_is_ahead_of_writer_checksum_throws_corrupt_database_exception,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 0' 11);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_an_epoch_checksum_is_ahead_of_writer_checksum_throws_corrupt_database_exception,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 0' 0' 11);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,allows_checkpoint_to_point_into_the_middle_of_completed_chunk_when_enough_actual_data_in_chunk,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 1500' chunkSize: 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,allows_checkpoint_to_point_into_the_middle_of_completed_chunk_when_enough_actual_data_in_chunk,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 1500' chunkSize: 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,allows_checkpoint_to_point_into_the_middle_of_completed_chunk_when_enough_actual_data_in_chunk,The following statement contains a magic number: DbUtil.CreateSingleChunk(config' 1' GetFilePathFor("chunk-000001.000001")' actualDataSize: 500);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,allows_checkpoint_to_point_into_the_middle_of_completed_chunk_when_enough_actual_data_in_chunk,The following statement contains a magic number: Assert.AreEqual(2' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,does_not_allow_checkpoint_to_point_into_the_middle_of_completed_chunk_when_not_enough_actual_data,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 1500);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,does_not_allow_checkpoint_to_point_into_the_middle_of_completed_chunk_when_not_enough_actual_data,The following statement contains a magic number: DbUtil.CreateSingleChunk(config' 1' GetFilePathFor("chunk-000001.000001")' actualDataSize: 499);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,does_not_allow_checkpoint_to_point_into_the_middle_of_scavenged_chunk,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 1500' chunkSize: 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,does_not_allow_checkpoint_to_point_into_the_middle_of_scavenged_chunk,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 1500' chunkSize: 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,does_not_allow_checkpoint_to_point_into_the_middle_of_scavenged_chunk,The following statement contains a magic number: DbUtil.CreateSingleChunk(config' 1' GetFilePathFor("chunk-000001.000001")' isScavenged: true'  					actualDataSize: 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,old_version_of_chunks_are_removed,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 350' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,old_version_of_chunks_are_removed,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 350' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,old_version_of_chunks_are_removed,The following statement contains a magic number: DbUtil.CreateSingleChunk(config' 2' GetFilePathFor("chunk-000002.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,old_version_of_chunks_are_removed,The following statement contains a magic number: DbUtil.CreateSingleChunk(config' 3' GetFilePathFor("chunk-000003.000007"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,old_version_of_chunks_are_removed,The following statement contains a magic number: DbUtil.CreateOngoingChunk(config' 3' GetFilePathFor("chunk-000003.000008"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,old_version_of_chunks_are_removed,The following statement contains a magic number: Assert.AreEqual(6' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_chunk_last_chunk_is_preserved,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_chunk_last_chunk_is_preserved,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_chunk_last_chunk_is_preserved,The following statement contains a magic number: DbUtil.CreateOngoingChunk(config' 2' GetFilePathFor("chunk-000002.000005"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_chunk_last_chunk_is_preserved,The following statement contains a magic number: Assert.AreEqual(3' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_new_chunk_last_chunk_is_preserved_and_excessive_versions_are_removed_if_present,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_new_chunk_last_chunk_is_preserved_and_excessive_versions_are_removed_if_present,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_new_chunk_last_chunk_is_preserved_and_excessive_versions_are_removed_if_present,The following statement contains a magic number: DbUtil.CreateSingleChunk(config' 2' GetFilePathFor("chunk-000002.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_new_chunk_last_chunk_is_preserved_and_excessive_versions_are_removed_if_present,The following statement contains a magic number: DbUtil.CreateOngoingChunk(config' 2' GetFilePathFor("chunk-000002.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_new_chunk_last_chunk_is_preserved_and_excessive_versions_are_removed_if_present,The following statement contains a magic number: Assert.AreEqual(3' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_not_present_but_should_be_created,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_not_present_but_should_be_created,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_not_present_but_should_be_created,The following statement contains a magic number: Assert.IsNotNull(db.Manager.GetChunk(2));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_not_present_but_should_be_created,The following statement contains a magic number: Assert.AreEqual(3' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_present,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_present,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_present,The following statement contains a magic number: DbUtil.CreateOngoingChunk(config' 2' GetFilePathFor("chunk-000002.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_present,The following statement contains a magic number: Assert.IsNotNull(db.Manager.GetChunk(2));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_present,The following statement contains a magic number: Assert.AreEqual(3' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_no_exception_is_thrown,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_no_exception_is_thrown,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_no_exception_is_thrown,The following statement contains a magic number: DbUtil.CreateSingleChunk(config' 1' GetFilePathFor("chunk-000001.000001")'  					actualDataSize: config.ChunkSize - 10);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_no_exception_is_thrown,The following statement contains a magic number: Assert.IsNotNull(db.Manager.GetChunk(2));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_no_exception_is_thrown,The following statement contains a magic number: Assert.AreEqual(3' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_but_not_completed_exception_is_thrown,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_but_not_completed_exception_is_thrown,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_but_not_completed_exception_is_thrown,The following statement contains a magic number: DbUtil.CreateOngoingChunk(config' 1' GetFilePathFor("chunk-000001.000001")'  					actualSize: config.ChunkSize - 10);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,temporary_files_are_removed,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 150' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,temporary_files_are_removed,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 150' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,temporary_files_are_removed,The following statement contains a magic number: Assert.AreEqual(3' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_prelast_chunk_corrupted_throw_hash_validation_exception,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 15000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_prelast_chunk_corrupted_throw_hash_validation_exception,The following statement contains a magic number: var data = new byte[3];
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_prelast_chunk_corrupted_throw_hash_validation_exception,The following statement contains a magic number: data[1] = 2;
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_prelast_chunk_corrupted_throw_hash_validation_exception,The following statement contains a magic number: data[2] = 3;
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_prelast_chunk_corrupted_throw_hash_validation_exception,The following statement contains a magic number: data[2] = 3;
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_prelast_chunk_corrupted_throw_hash_validation_exception,The following statement contains a magic number: stream.Position = ChunkHeader.Size + 15;
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db.cs,when_prelast_chunk_corrupted_throw_hash_validation_exception,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,with_not_enough_files_to_reach_checksum_throws,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 25000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,with_checksum_inside_multi_chunk_throws,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 25000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,with_checksum_inside_multi_chunk_throws,The following statement contains a magic number: DbUtil.CreateMultiChunk(config' 0' 2' GetFilePathFor("chunk-000000.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,allows_with_exactly_enough_file_to_reach_checksum_while_last_is_multi_chunk,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 30000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,allows_with_exactly_enough_file_to_reach_checksum_while_last_is_multi_chunk,The following statement contains a magic number: DbUtil.CreateMultiChunk(config' 1' 2' GetFilePathFor("chunk-000001.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,allows_with_exactly_enough_file_to_reach_checksum_while_last_is_multi_chunk,The following statement contains a magic number: Assert.AreEqual(3' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,allows_next_new_chunk_when_checksum_is_exactly_in_between_two_chunks_if_last_is_ongoing_chunk,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 20000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,allows_next_new_chunk_when_checksum_is_exactly_in_between_two_chunks_if_last_is_ongoing_chunk,The following statement contains a magic number: DbUtil.CreateOngoingChunk(config' 2' GetFilePathFor("chunk-000002.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,allows_next_new_chunk_when_checksum_is_exactly_in_between_two_chunks_if_last_is_ongoing_chunk,The following statement contains a magic number: Assert.AreEqual(2' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,does_not_allow_next_new_chunk_when_checksum_is_exactly_in_between_two_chunks_and_last_is_multi_chunk,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 10000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,does_not_allow_next_new_chunk_when_checksum_is_exactly_in_between_two_chunks_and_last_is_multi_chunk,The following statement contains a magic number: DbUtil.CreateMultiChunk(config' 1' 2' GetFilePathFor("chunk-000001.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,old_version_of_chunks_are_removed,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 350' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,old_version_of_chunks_are_removed,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 350' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,old_version_of_chunks_are_removed,The following statement contains a magic number: DbUtil.CreateMultiChunk(config' 1' 2' GetFilePathFor("chunk-000001.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,old_version_of_chunks_are_removed,The following statement contains a magic number: DbUtil.CreateSingleChunk(config' 2' GetFilePathFor("chunk-000002.000000"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,old_version_of_chunks_are_removed,The following statement contains a magic number: DbUtil.CreateSingleChunk(config' 3' GetFilePathFor("chunk-000003.000007"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,old_version_of_chunks_are_removed,The following statement contains a magic number: DbUtil.CreateOngoingChunk(config' 3' GetFilePathFor("chunk-000003.000008"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,old_version_of_chunks_are_removed,The following statement contains a magic number: Assert.AreEqual(5' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_not_present_but_should_be_created,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_not_present_but_should_be_created,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_not_present_but_should_be_created,The following statement contains a magic number: Assert.IsNotNull(db.Manager.GetChunk(2));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_not_present_but_should_be_created,The following statement contains a magic number: Assert.AreEqual(2' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_present,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_present,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 200' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_present,The following statement contains a magic number: DbUtil.CreateOngoingChunk(config' 2' GetFilePathFor("chunk-000002.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_present,The following statement contains a magic number: Assert.IsNotNull(db.Manager.GetChunk(2));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_exactly_on_the_boundary_of_chunk_the_last_chunk_could_be_present,The following statement contains a magic number: Assert.AreEqual(2' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_no_exception_is_thrown,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 300' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_no_exception_is_thrown,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 300' chunkSize: 100);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_no_exception_is_thrown,The following statement contains a magic number: DbUtil.CreateMultiChunk(config' 1' 2' GetFilePathFor("chunk-000001.000001")' physicalSize: 50'  					logicalSize: 150);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_no_exception_is_thrown,The following statement contains a magic number: DbUtil.CreateMultiChunk(config' 1' 2' GetFilePathFor("chunk-000001.000001")' physicalSize: 50'  					logicalSize: 150);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_no_exception_is_thrown,The following statement contains a magic number: DbUtil.CreateMultiChunk(config' 1' 2' GetFilePathFor("chunk-000001.000001")' physicalSize: 50'  					logicalSize: 150);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_no_exception_is_thrown,The following statement contains a magic number: Assert.IsNotNull(db.Manager.GetChunk(2));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,when_checkpoint_is_on_boundary_of_new_chunk_and_last_chunk_is_truncated_no_exception_is_thrown,The following statement contains a magic number: Assert.AreEqual(3' Directory.GetFiles(PathName' "*").Length);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,does_not_allow_checkpoint_to_point_into_the_middle_of_multichunk_chunk,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 1500' chunkSize: 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,does_not_allow_checkpoint_to_point_into_the_middle_of_multichunk_chunk,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 1500' chunkSize: 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,does_not_allow_checkpoint_to_point_into_the_middle_of_multichunk_chunk,The following statement contains a magic number: DbUtil.CreateMultiChunk(config' 1' 10' GetFilePathFor("chunk-000001.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,allows_last_chunk_to_be_multichunk_when_checkpoint_point_at_the_start_of_next_chunk,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 4000' chunkSize: 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,allows_last_chunk_to_be_multichunk_when_checkpoint_point_at_the_start_of_next_chunk,The following statement contains a magic number: var config = TFChunkHelper.CreateDbConfig(PathName' 4000' chunkSize: 1000);
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,allows_last_chunk_to_be_multichunk_when_checkpoint_point_at_the_start_of_next_chunk,The following statement contains a magic number: DbUtil.CreateMultiChunk(config' 1' 3' GetFilePathFor("chunk-000001.000001"));
Magic Number,EventStore.Core.Tests.TransactionLog.Validation,when_validating_tfchunk_db_with_multi_chunks,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\TransactionLog\Validation\when_validating_tfchunk_db_with_multi_chunks.cs,allows_last_chunk_to_be_multichunk_when_checkpoint_point_at_the_start_of_next_chunk,The following statement contains a magic number: Assert.AreEqual(3' Directory.GetFiles(PathName' "*").Length);
Duplicate Code,EventStore.Core.Tests.Index.IndexV1,adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The method contains a code clone-set at the following line numbers (starting from the method definition): ((13' 32)' (18' 37)' (23' 42)' (28' 47)' (33' 52)' (38' 57)' (43' 62)' (48' 67)' (53' 72)' (58' 77)' (63' 82)' (68' 87))
Duplicate Code,EventStore.Core.Tests.Index.IndexV1,adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The method contains a code clone-set at the following line numbers (starting from the method definition): ((13' 81)' (18' 86))
Duplicate Code,EventStore.Core.Tests.Index.IndexV1,adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Index\IndexV1\adding_sixteen_items_to_empty_index_map_with_four_tables_per_level_causes_double_merge.cs,TestFixtureSetUp,The method contains a code clone-set at the following line numbers (starting from the method definition): ((13' 32)' (23' 42)' (28' 47)' (33' 52)' (38' 57)' (43' 62)' (48' 67)' (53' 72)' (58' 77)' (63' 82)' (68' 87))
Missing Default,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_committed_on_master_and_on_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_committed_on_master_and_on_slaves.cs,Handle,The following switch statement is missing a default case: switch (msg.State) {  				case Data.VNodeState.Master:  					_expectedNumberOfRoleAssignments.Signal();  					break;  				case Data.VNodeState.Slave:  					_expectedNumberOfRoleAssignments.Signal();  					break;  			}
Missing Default,EventStore.Core.Tests.Replication.ReadStream,when_reading_an_event_from_a_single_node,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_an_event_from_a_single_node.cs,Handle,The following switch statement is missing a default case: switch (msg.State) {  				case Data.VNodeState.Master:  					_expectedNumberOfRoleAssignments.Signal();  					break;  				case Data.VNodeState.Slave:  					_expectedNumberOfRoleAssignments.Signal();  					break;  			}
Missing Default,EventStore.Core.Tests.Replication.ReadStream,when_reading_events_from_cluster_with_replication_checkpoint_not_set,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\ReadStream\when_reading_events_from_cluster_with_replication_checkpoint_not_set.cs,Handle,The following switch statement is missing a default case: switch (msg.State) {  				case Data.VNodeState.Master:  					_expectedNumberOfRoleAssignments.Signal();  					break;  				case Data.VNodeState.Slave:  					_expectedNumberOfRoleAssignments.Signal();  					break;  			}
Missing Default,EventStore.Core.Tests.Replication.ReadStream,when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves,D:\research\architectureSmells\repos\EventStore_EventStore\src\EventStore.Core.Tests\Services\Replication\Subscriptions\when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves.cs,Handle,The following switch statement is missing a default case: switch (msg.State) {  				case Data.VNodeState.Master:  					_expectedNumberOfRoleAssignments.Signal();  					break;  				case Data.VNodeState.Slave:  					_expectedNumberOfRoleAssignments.Signal();  					break;  			}
