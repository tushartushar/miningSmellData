Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The method has 6 parameters.
Long Parameter List,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The method has 5 parameters.
Long Parameter List,QuickImage.Presenter,AuthorizationPresenter,C:\repos\EmilGedda_QuickImage\Presenter\AuthorizationPresenter.cs,OnResourceResponse,The method has 6 parameters.
Long Parameter List,QuickImage.Presenter,AuthorizationPresenter,C:\repos\EmilGedda_QuickImage\Presenter\AuthorizationPresenter.cs,GetDownloadHandler,The method has 5 parameters.
Long Parameter List,QuickImage.Presenter,AuthorizationPresenter,C:\repos\EmilGedda_QuickImage\Presenter\AuthorizationPresenter.cs,GetAuthCredentials,The method has 8 parameters.
Long Statement,QuickImage.Components,CustomListView,C:\repos\EmilGedda_QuickImage\Components\CustomListView.cs,SetSpacing,The length of the statement  "	NativeMethods.SendMessage (listview.Handle' LVM_SETICONSPACING' IntPtr.Zero' (IntPtr)MakeLong (leftPadding' topPadding)); " is 121.
Long Statement,QuickImage.Components,CustomListView,C:\repos\EmilGedda_QuickImage\Components\CustomListView.cs,OnDrawItem,The length of the statement  "	GraphicsPath rounded = RoundedRectangle.Create (item.Bounds.X - 1' item.Bounds.Y - 1' img.Width + 2' img.Height + 1' 5); " is 120.
Long Statement,QuickImage.Model,Printscreen,C:\repos\EmilGedda_QuickImage\Model\PrintscreenFactory.cs,LoadFromFile,The length of the statement  "		MessageBox.Show (string.Format ("Unable to load {0}!\nError: {1}"' Path.GetFileNameWithoutExtension (path)' ex.Message)); " is 121.
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: if ((RectangleCorners.TopLeft & corners) == RectangleCorners.TopLeft) {  	p.AddArc (x' y' r2' r2' 180' 90);  }  else {  	p.AddLine (x' yr' x' y);  	p.AddLine (x' y' xr' y);  }  
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: if ((RectangleCorners.TopLeft & corners) == RectangleCorners.TopLeft) {  	p.AddArc (x' y' r2' r2' 180' 90);  }  else {  	p.AddLine (x' yr' x' y);  	p.AddLine (x' y' xr' y);  }  
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: p.AddArc (x' y' r2' r2' 180' 90);  
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: p.AddArc (x' y' r2' r2' 180' 90);  
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: if ((RectangleCorners.TopRight & corners) == RectangleCorners.TopRight) {  	p.AddArc (xwr2' y' r2' r2' 270' 90);  }  else {  	p.AddLine (xwr' y' xw' y);  	p.AddLine (xw' y' xw' yr);  }  
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: if ((RectangleCorners.TopRight & corners) == RectangleCorners.TopRight) {  	p.AddArc (xwr2' y' r2' r2' 270' 90);  }  else {  	p.AddLine (xwr' y' xw' y);  	p.AddLine (xw' y' xw' yr);  }  
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: p.AddArc (xwr2' y' r2' r2' 270' 90);  
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: p.AddArc (xwr2' y' r2' r2' 270' 90);  
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: if ((RectangleCorners.BottomRight & corners) == RectangleCorners.BottomRight) {  	p.AddArc (xwr2' yhr2' r2' r2' 0' 90);  }  else {  	p.AddLine (xw' yhr' xw' yh);  	p.AddLine (xw' yh' xwr' yh);  }  
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: p.AddArc (xwr2' yhr2' r2' r2' 0' 90);  
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: if ((RectangleCorners.BottomLeft & corners) == RectangleCorners.BottomLeft) {  	p.AddArc (x' yhr2' r2' r2' 90' 90);  }  else {  	p.AddLine (xr' yh' x' yh);  	p.AddLine (x' yh' x' yhr);  }  
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: if ((RectangleCorners.BottomLeft & corners) == RectangleCorners.BottomLeft) {  	p.AddArc (x' yhr2' r2' r2' 90' 90);  }  else {  	p.AddLine (xr' yh' x' yh);  	p.AddLine (x' yh' x' yhr);  }  
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: p.AddArc (x' yhr2' r2' r2' 90' 90);  
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: p.AddArc (x' yhr2' r2' r2' 90' 90);  
Magic Number,QuickImage.Classes,RoundedRectangle,C:\repos\EmilGedda_QuickImage\Classes\RoundedRectangle.cs,Create,The following statement contains a magic number: return Create (x' y' width' height' 5);  
Magic Number,QuickImage.Components,CustomListView,C:\repos\EmilGedda_QuickImage\Components\CustomListView.cs,MakeLong,The following statement contains a magic number: return (int)(((ushort)lowPart) | (uint)(highPart << 16));  
Magic Number,QuickImage.Components,CustomListView,C:\repos\EmilGedda_QuickImage\Components\CustomListView.cs,OnDrawItem,The following statement contains a magic number: if (item.Selected && item.SelectionOpacity < 255)  	item.SelectionOpacity += 5;  
Magic Number,QuickImage.Components,CustomListView,C:\repos\EmilGedda_QuickImage\Components\CustomListView.cs,OnDrawItem,The following statement contains a magic number: if (item.Selected && item.SelectionOpacity < 255)  	item.SelectionOpacity += 5;  
Magic Number,QuickImage.Components,CustomListView,C:\repos\EmilGedda_QuickImage\Components\CustomListView.cs,OnDrawItem,The following statement contains a magic number: item.SelectionOpacity += 5;  
Magic Number,QuickImage.Components,CustomListView,C:\repos\EmilGedda_QuickImage\Components\CustomListView.cs,OnDrawItem,The following statement contains a magic number: if (!item.Selected && item.SelectionOpacity > 0)  	item.SelectionOpacity -= 5;  
Magic Number,QuickImage.Components,CustomListView,C:\repos\EmilGedda_QuickImage\Components\CustomListView.cs,OnDrawItem,The following statement contains a magic number: item.SelectionOpacity -= 5;  
Magic Number,QuickImage.Components,CustomListView,C:\repos\EmilGedda_QuickImage\Components\CustomListView.cs,OnDrawItem,The following statement contains a magic number: if (item.SelectionOpacity > 0 && item.SelectionOpacity < 255)  	Invalidate ();  
Magic Number,QuickImage.Model,Printscreen,C:\repos\EmilGedda_QuickImage\Model\PrintscreenFactory.cs,Capture,The following statement contains a magic number: printscreen.Thumb = img.GetThumbnailImage (200' 112' null' IntPtr.Zero);  
Magic Number,QuickImage.Model,Printscreen,C:\repos\EmilGedda_QuickImage\Model\PrintscreenFactory.cs,Capture,The following statement contains a magic number: printscreen.Thumb = img.GetThumbnailImage (200' 112' null' IntPtr.Zero);  
Magic Number,QuickImage.Views,MainView,C:\repos\EmilGedda_QuickImage\Views\MainView.cs,MainView,The following statement contains a magic number: imageView.SetSpacing (imageView' 210' 120);  
Magic Number,QuickImage.Views,MainView,C:\repos\EmilGedda_QuickImage\Views\MainView.cs,MainView,The following statement contains a magic number: imageView.SetSpacing (imageView' 210' 120);  
Missing Default,QuickImage.Model,Printscreen,C:\repos\EmilGedda_QuickImage\Model\PrintscreenFactory.cs,Capture,The following switch statement is missing a default case: switch (Options.Type) {  case Options.ImageType.PNG:  	img.Save (printscreen.filePath' ImageFormat.Png);  	break;  case Options.ImageType.JPEG:  	SaveJPEG (printscreen.filePath' img);  	break;  }  
