Implementation smell,Namespace,Class,File,Method,Description
Long Method,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The method has 111 lines of code.
Complex Method,WingTail,LogFileCache,C:\repos\pilotcam_WingTail\WingTail\LogFileCache.cs,FillTailCache,Cyclomatic complexity of the method is 9
Complex Method,WingTail,LogFileCache,C:\repos\pilotcam_WingTail\WingTail\LogFileCache.cs,PrepareCache,Cyclomatic complexity of the method is 15
Complex Method,WingTail,LogFileStream,C:\repos\pilotcam_WingTail\WingTail\LogFileStream.cs,CheckLogFile,Cyclomatic complexity of the method is 18
Complex Method,WingTail,LogFileStream,C:\repos\pilotcam_WingTail\WingTail\LogFileStream.cs,LoadFile,Cyclomatic complexity of the method is 18
Complex Method,WingTail,LogFileStream,C:\repos\pilotcam_WingTail\WingTail\LogFileStream.cs,ReadLine,Cyclomatic complexity of the method is 8
Complex Method,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,OpenFileSelection,Cyclomatic complexity of the method is 8
Complex Method,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,SaveSession,Cyclomatic complexity of the method is 8
Complex Method,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,LoadSession,Cyclomatic complexity of the method is 16
Complex Method,WingTail,SearchForm,C:\repos\pilotcam_WingTail\WingTail\SearchForm.cs,SearchAgain,Cyclomatic complexity of the method is 8
Complex Method,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,Cyclomatic complexity of the method is 30
Complex Method,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,SearchForText,Cyclomatic complexity of the method is 14
Complex Method,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,Cyclomatic complexity of the method is 9
Complex Method,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,MatchesKeyword,Cyclomatic complexity of the method is 13
Complex Method,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_KeyDown,Cyclomatic complexity of the method is 12
Complex Method,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailTimer_Tick,Cyclomatic complexity of the method is 14
Complex Method,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,configureViewToolStripMenuItem_Click,Cyclomatic complexity of the method is 10
Long Parameter List,WingTail,MiniDumper,C:\repos\pilotcam_WingTail\WingTail\MiniDumper.cs,MiniDumpWriteDump,The method has 7 parameters.
Long Parameter List,WingTail,MiniDumper,C:\repos\pilotcam_WingTail\WingTail\MiniDumper.cs,MiniDumpWriteDump,The method has 7 parameters.
Long Parameter List,WingTail,LogFileStream,C:\repos\pilotcam_WingTail\WingTail\LogFileStream.cs,LogFileStream,The method has 5 parameters.
Long Parameter List,WingTail,SearchForm,C:\repos\pilotcam_WingTail\WingTail\SearchForm.cs,SetWindowPos,The method has 7 parameters.
Long Parameter List,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,MatchTextSearch,The method has 5 parameters.
Long Parameter List,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,SearchForTextForward,The method has 6 parameters.
Long Statement,WingTail,ClipboardHelper,C:\repos\pilotcam_WingTail\WingTail\ClipboardHelper.cs,CopyToClipboard,The length of the statement  "		System.Diagnostics.Debug.WriteLine ("Clipboard cannot be updated' maybe locked by another application: " + firstException.Message); " is 131.
Long Statement,WingTail,ClipboardHelper,C:\repos\pilotcam_WingTail\WingTail\ClipboardHelper.cs,CopyToClipboard,The length of the statement  "			System.Diagnostics.Debug.WriteLine ("Clipboard cannot be updated' maybe locked by another application: " + retryException.Message); " is 131.
Long Statement,WingTail,ListViewUtil,C:\repos\pilotcam_WingTail\WingTail\ListViewUtil.cs,SetVirtualListSizeWithoutRefresh,The length of the statement  "	SendMessage (listView.Handle' (uint)ListViewMessages.LVM_SETITEMCOUNT' (IntPtr)count' (IntPtr)(ListViewSetItemCountFlags.LVSICF_NOINVALIDATEALL | ListViewSetItemCountFlags.LVSICF_NOSCROLL)); " is 190.
Long Statement,WingTail,MiniDumper,C:\repos\pilotcam_WingTail\WingTail\MiniDumper.cs,Write,The length of the statement  "	using (var fs = new System.IO.FileStream (fileName' System.IO.FileMode.Create' System.IO.FileAccess.Write' System.IO.FileShare.None)) { " is 135.
Long Statement,WingTail,MiniDumper,C:\repos\pilotcam_WingTail\WingTail\MiniDumper.cs,Write,The length of the statement  "			bRet = MiniDumpWriteDump (GetCurrentProcess ()' GetCurrentProcessId ()' fs.SafeFileHandle.DangerousGetHandle ()' (uint)dumpTyp' IntPtr.Zero' IntPtr.Zero' IntPtr.Zero); " is 167.
Long Statement,WingTail,MiniDumper,C:\repos\pilotcam_WingTail\WingTail\MiniDumper.cs,Write,The length of the statement  "			bRet = MiniDumpWriteDump (GetCurrentProcess ()' GetCurrentProcessId ()' fs.SafeFileHandle.DangerousGetHandle ()' (uint)dumpTyp' ref exp' IntPtr.Zero' IntPtr.Zero); " is 163.
Long Statement,WingTail,KeywordConfigForm,C:\repos\pilotcam_WingTail\WingTail\KeywordConfigForm.cs,_okBtn_Click,The length of the statement  "				testParsing = new System.Text.RegularExpressions.Regex (TailKeywordConfig.Keyword' System.Text.RegularExpressions.RegexOptions.IgnoreCase); " is 139.
Long Statement,WingTail,KeywordConfigForm,C:\repos\pilotcam_WingTail\WingTail\KeywordConfigForm.cs,_okBtn_Click,The length of the statement  "			MessageBox.Show (String.Format ("Failed to parse regular expression:\n\n{0} ({1})"' exception.Message' exception.GetType ().ToString ())' "Invalid regular expression"' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 214.
Long Statement,WingTail,LogFileStream,C:\repos\pilotcam_WingTail\WingTail\LogFileStream.cs,CheckLogFile,The length of the statement  "		using (LogFileStream testLogFile = new LogFileStream (configPath' _filePathAbsolute' _fileEncoding' _fileCheckFrequency.Seconds' _fileCheckPattern)) { " is 150.
Long Statement,WingTail,LogFileStream,C:\repos\pilotcam_WingTail\WingTail\LogFileStream.cs,LoadFile,The length of the statement  "		_fileStream = new FileStream (filepath' FileMode.Open' FileAccess.Read' FileShare.ReadWrite | FileShare.Delete' 65536' FileOptions.SequentialScan); " is 147.
Long Statement,WingTail,LogFileStream,C:\repos\pilotcam_WingTail\WingTail\LogFileStream.cs,ReadLine,The length of the statement  "			return "Cannot open file: " + _filePathAbsolute + (String.IsNullOrEmpty (_lastFileCheckError) ? "" : " (" + _lastFileCheckError + ")"); " is 135.
Long Statement,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,openToolStripMenuItem_Click,The length of the statement  "	fileDialog.Filter = "Default Filter|*.txt;*.text;*.log*;*.xlog|Log Files|*.log*;*.xlog|Text Files|*.txt;*.text|All Files|*.*"; " is 126.
Long Statement,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,GetDefaultConfigPath,The length of the statement  "	string roamingPath = Environment.GetFolderPath (Environment.SpecialFolder.ApplicationData) + "\\WingTail\\WingTail.xml"; " is 120.
Long Statement,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,GetDefaultConfigPath,The length of the statement  "	string localPath = Environment.GetFolderPath (Environment.SpecialFolder.LocalApplicationData) + "\\WingTail\\WingTail.xml"; " is 123.
Long Statement,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,GetDefaultConfigPath,The length of the statement  "	string commonPath = Environment.GetFolderPath (Environment.SpecialFolder.CommonApplicationData) + "\\WingTail\\WingTail.xml"; " is 125.
Long Statement,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,LoadSessionFile,The length of the statement  "		MessageBox.Show ("Failed to open session xml file' please ensure it is valid file:\n\n   " + filepath + "\n\n" + errorMsg' ""' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 171.
Long Statement,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,minimizeToTrayToolStripMenuItem_Click,The length of the statement  "		_trayIcon.ShowBalloonTip (3' "Minimized to tray"' "Double click the system tray icon to restore window"' ToolTipIcon.Info); " is 123.
Long Statement,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,worker_DoWork,The length of the statement  "	// Discovered a strange problem where the Windows Explorer would lock' eventhough I deferred the actual DragDrop operation using BeginInvoke(). " is 143.
Long Statement,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,worker_DoWork,The length of the statement  "	// The solution was to create a thread' that slept for 100 ms and then invoked the wanted method. If I removed the sleep from the new thread' " is 141.
Long Statement,WingTail,ThreadPoolQueue,C:\repos\pilotcam_WingTail\WingTail\ThreadPoolQueue.cs,ExecuteRequest,The length of the statement  "		nextPendingRequest.Value.Key.BeginInvoke (nextPendingRequest.Value.Value' RequestCallback' nextPendingRequest.Value.Key); " is 121.
Long Statement,WingTail,ThreadPoolQueue,C:\repos\pilotcam_WingTail\WingTail\ThreadPoolQueue.cs,QueueRequest,The length of the statement  "		nextPendingRequest.Value.Key.BeginInvoke (nextPendingRequest.Value.Value' RequestCallback' nextPendingRequest.Value.Key); " is 121.
Long Statement,WingTail,ThreadPoolQueue,C:\repos\pilotcam_WingTail\WingTail\ThreadPoolQueue.cs,CheckResult,The length of the statement  "		nextPendingRequest.Value.Key.BeginInvoke (nextPendingRequest.Value.Value' RequestCallback' nextPendingRequest.Value.Key); " is 121.
Long Statement,WingTail,SearchForm,C:\repos\pilotcam_WingTail\WingTail\SearchForm.cs,SearchAgain,The length of the statement  "				found = ActiveTailForm.SearchForText (_searchTextBox.Text' _matchCaseCheckBox.Checked' searchForward' keywordHighlights); " is 121.
Long Statement,WingTail,SearchForm,C:\repos\pilotcam_WingTail\WingTail\SearchForm.cs,SearchAgain,The length of the statement  "				MessageBox.Show ("Cannot find any highlighted lines"' "Search Result"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 121.
Long Statement,WingTail,SearchForm,C:\repos\pilotcam_WingTail\WingTail\SearchForm.cs,SearchAgain,The length of the statement  "				MessageBox.Show ("Cannot find \"" + _searchTextBox.Text + "\""' "Search Result"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 131.
Long Statement,WingTail,TailConfigForm,C:\repos\pilotcam_WingTail\WingTail\TailConfigForm.cs,_edtWordBtn_Click,The length of the statement  "	KeywordConfigForm dlg = new KeywordConfigForm (_keywordListView.SelectedItems [0].Tag as TailKeywordConfig' TailFileConfig); " is 124.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The length of the statement  "		MessageBox.Show (String.Format ("Failed to open file:\n\n{0}\n\nError:{1}"' tailConfig.FilePath' ex.Message)' "Invalid filename"' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 180.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The length of the statement  "					keyword.KeywordRegex = new System.Text.RegularExpressions.Regex (keyword.Keyword' System.Text.RegularExpressions.RegexOptions.IgnoreCase); " is 138.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The length of the statement  "	if (_logFileStream == null || _logFileStream.FilePath != tailConfig.FilePath || _logFileStream.FileEncoding != fileEncoding || _logFileStream.FileCheckInterval != tailConfig.FileCheckInterval || _logFileStream.FileCheckPattern != tailConfig.FileCheckPattern) { " is 260.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The length of the statement  "		_logFileStream = new LogFileStream (configPath' tailConfig.FilePath' fileEncoding' tailConfig.FileCheckInterval' tailConfig.FileCheckPattern); " is 142.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The length of the statement  "	if (_logTailStream == null || _logTailStream.FilePath != tailConfig.FilePath || _logTailStream.FileEncoding != fileEncoding || _logTailStream.FileCheckInterval != tailConfig.FileCheckInterval || _logTailStream.FileCheckPattern != tailConfig.FileCheckPattern) { " is 260.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The length of the statement  "		_logTailStream = new LogFileStream (configPath' tailConfig.FilePath' fileEncoding' tailConfig.FileCheckInterval' tailConfig.FileCheckPattern); " is 142.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The length of the statement  "			if (MessageBox.Show (String.Format ("The file is very large' sure you want to open it?\n\nFile Name: {0}\nFile Size: {1} Megabytes"' _logTailStream.FilePath' _logTailStream.Length / 1024 / 1024)' "Large file detected"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No) { " is 289.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The length of the statement  "			MessageBox.Show ("Failed to load icon\n\n   " + formIconFilePathAbsolute + "\n\n" + ex.Message' null' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 146.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,SearchForText,The length of the statement  "		int matchFound = SearchForTextForward (searchText' matchCase' lineHighlights' startIndex' endIndex' ref searchFileCache); " is 121.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The length of the statement  "			e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256); " is 184.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The length of the statement  "	TextFormatFlags flags = TextFormatFlags.Left | TextFormatFlags.ExpandTabs | TextFormatFlags.SingleLine | TextFormatFlags.NoPrefix; " is 130.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The length of the statement  "		TextRenderer.DrawText (e.Graphics' e.Item.Text.Substring (0' 1000)' e.Item.ListView.Font' e.Bounds' e.SubItem.ForeColor' flags); " is 128.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,MatchesKeyword,The length of the statement  "				if ((!matchKeyword.LogHitCounter && !keyword.LogHitCounter) && (!matchKeyword.AlertHighlight.Value && !keyword.AlertHighlight.Value)) " is 133.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,MatchesKeyword,The length of the statement  "			if ((keyword.KeywordRegex != null && keyword.KeywordRegex.IsMatch (line)) || (keyword.KeywordRegex == null && keyword.MatchCaseSensitive && line.IndexOf (keyword.Keyword' StringComparison.CurrentCulture) != -1) || (keyword.KeywordRegex == null && !keyword.MatchCaseSensitive && line.IndexOf (keyword.Keyword' StringComparison.CurrentCultureIgnoreCase) != -1)) { " is 361.
Long Statement,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_KeyDown,The length of the statement  "			_logFileCache.PrepareCache (Math.Max (_tailListView.VirtualListSize - _logFileCache.Items.Count' 0)' _tailListView.VirtualListSize' false); " is 139.
Complex Conditional,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The conditional expression  "_logFileStream == null || _logFileStream.FilePath != tailConfig.FilePath || _logFileStream.FileEncoding != fileEncoding || _logFileStream.FileCheckInterval != tailConfig.FileCheckInterval || _logFileStream.FileCheckPattern != tailConfig.FileCheckPattern"  is complex.
Complex Conditional,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The conditional expression  "_logTailStream == null || _logTailStream.FilePath != tailConfig.FilePath || _logTailStream.FileEncoding != fileEncoding || _logTailStream.FileCheckInterval != tailConfig.FileCheckInterval || _logTailStream.FileCheckPattern != tailConfig.FileCheckPattern"  is complex.
Complex Conditional,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,SearchForText,The conditional expression  "lineHighlights && (_keywordHighlight == null || _keywordHighlight.Count == 0) && _bookmarks.Count == 0"  is complex.
Complex Conditional,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,MatchesKeyword,The conditional expression  "(!matchKeyword.LogHitCounter && !keyword.LogHitCounter) && (!matchKeyword.AlertHighlight.Value && !keyword.AlertHighlight.Value)"  is complex.
Complex Conditional,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,MatchesKeyword,The conditional expression  "(keyword.KeywordRegex != null && keyword.KeywordRegex.IsMatch (line)) || (keyword.KeywordRegex == null && keyword.MatchCaseSensitive && line.IndexOf (keyword.Keyword' StringComparison.CurrentCulture) != -1) || (keyword.KeywordRegex == null && !keyword.MatchCaseSensitive && line.IndexOf (keyword.Keyword' StringComparison.CurrentCultureIgnoreCase) != -1)"  is complex.
Complex Conditional,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailTimer_Tick,The conditional expression  "parentTab != null && parentTab.Parent != null && parentTab.Parent.Visible && !parentTab.Visible"  is complex.
Empty Catch Block,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,OpenFileSelection,The method has an empty catch block.
Empty Catch Block,WingTail,ThreadPoolQueue,C:\repos\pilotcam_WingTail\WingTail\ThreadPoolQueue.cs,Dispose,The method has an empty catch block.
Empty Catch Block,WingTail,MemoryPerformanceReport,C:\repos\pilotcam_WingTail\WingTail\ThreadExceptionDialogEx.cs,MemoryPerformanceReport,The method has an empty catch block.
Magic Number,WingTail,ClipboardHelper,C:\repos\pilotcam_WingTail\WingTail\ClipboardHelper.cs,CopyToClipboard,The following statement contains a magic number: try {  	Clipboard.SetText (content);  }  catch (Exception firstException) {  	System.Diagnostics.Debug.WriteLine ("Clipboard cannot be updated' maybe locked by another application: " + firstException.Message);  	try {  		// Perform a last retry as recommended on stackoverflow  		System.Threading.Thread.Sleep (100);  		Clipboard.Clear ();  		System.Threading.Thread.Sleep (100);  		Clipboard.SetDataObject (content' true' 0' 0);  		return;  	}  	catch (Exception retryException) {  		System.Diagnostics.Debug.WriteLine ("Clipboard cannot be updated' maybe locked by another application: " + retryException.Message);  	}  	throw;  }  
Magic Number,WingTail,ClipboardHelper,C:\repos\pilotcam_WingTail\WingTail\ClipboardHelper.cs,CopyToClipboard,The following statement contains a magic number: try {  	Clipboard.SetText (content);  }  catch (Exception firstException) {  	System.Diagnostics.Debug.WriteLine ("Clipboard cannot be updated' maybe locked by another application: " + firstException.Message);  	try {  		// Perform a last retry as recommended on stackoverflow  		System.Threading.Thread.Sleep (100);  		Clipboard.Clear ();  		System.Threading.Thread.Sleep (100);  		Clipboard.SetDataObject (content' true' 0' 0);  		return;  	}  	catch (Exception retryException) {  		System.Diagnostics.Debug.WriteLine ("Clipboard cannot be updated' maybe locked by another application: " + retryException.Message);  	}  	throw;  }  
Magic Number,WingTail,ClipboardHelper,C:\repos\pilotcam_WingTail\WingTail\ClipboardHelper.cs,CopyToClipboard,The following statement contains a magic number: try {  	// Perform a last retry as recommended on stackoverflow  	System.Threading.Thread.Sleep (100);  	Clipboard.Clear ();  	System.Threading.Thread.Sleep (100);  	Clipboard.SetDataObject (content' true' 0' 0);  	return;  }  catch (Exception retryException) {  	System.Diagnostics.Debug.WriteLine ("Clipboard cannot be updated' maybe locked by another application: " + retryException.Message);  }  
Magic Number,WingTail,ClipboardHelper,C:\repos\pilotcam_WingTail\WingTail\ClipboardHelper.cs,CopyToClipboard,The following statement contains a magic number: try {  	// Perform a last retry as recommended on stackoverflow  	System.Threading.Thread.Sleep (100);  	Clipboard.Clear ();  	System.Threading.Thread.Sleep (100);  	Clipboard.SetDataObject (content' true' 0' 0);  	return;  }  catch (Exception retryException) {  	System.Diagnostics.Debug.WriteLine ("Clipboard cannot be updated' maybe locked by another application: " + retryException.Message);  }  
Magic Number,WingTail,ClipboardHelper,C:\repos\pilotcam_WingTail\WingTail\ClipboardHelper.cs,CopyToClipboard,The following statement contains a magic number: System.Threading.Thread.Sleep (100);  
Magic Number,WingTail,ClipboardHelper,C:\repos\pilotcam_WingTail\WingTail\ClipboardHelper.cs,CopyToClipboard,The following statement contains a magic number: System.Threading.Thread.Sleep (100);  
Magic Number,WingTail,LogFileCache,C:\repos\pilotcam_WingTail\WingTail\LogFileCache.cs,FillTailCache,The following statement contains a magic number: do {  	int lastCacheIndex = FillCache (logFileStream' FirstIndex + Items.Count);  	System.Diagnostics.Debug.Assert (lastCacheIndex != -1 || logFileStream.Length == 0);  	continueReading = (lastCacheIndex == Items.Count - 1);  	lineCount = FirstIndex + lastCacheIndex + 1;  	if (continueReading)  		PrepareCache (lineCount + Items.Count / 2' lineCount + Items.Count / 2' true);  }  while (continueReading);  
Magic Number,WingTail,LogFileCache,C:\repos\pilotcam_WingTail\WingTail\LogFileCache.cs,FillTailCache,The following statement contains a magic number: do {  	int lastCacheIndex = FillCache (logFileStream' FirstIndex + Items.Count);  	System.Diagnostics.Debug.Assert (lastCacheIndex != -1 || logFileStream.Length == 0);  	continueReading = (lastCacheIndex == Items.Count - 1);  	lineCount = FirstIndex + lastCacheIndex + 1;  	if (continueReading)  		PrepareCache (lineCount + Items.Count / 2' lineCount + Items.Count / 2' true);  }  while (continueReading);  
Magic Number,WingTail,LogFileCache,C:\repos\pilotcam_WingTail\WingTail\LogFileCache.cs,FillTailCache,The following statement contains a magic number: if (continueReading)  	PrepareCache (lineCount + Items.Count / 2' lineCount + Items.Count / 2' true);  
Magic Number,WingTail,LogFileCache,C:\repos\pilotcam_WingTail\WingTail\LogFileCache.cs,FillTailCache,The following statement contains a magic number: if (continueReading)  	PrepareCache (lineCount + Items.Count / 2' lineCount + Items.Count / 2' true);  
Magic Number,WingTail,LogFileCache,C:\repos\pilotcam_WingTail\WingTail\LogFileCache.cs,FillTailCache,The following statement contains a magic number: PrepareCache (lineCount + Items.Count / 2' lineCount + Items.Count / 2' true);  
Magic Number,WingTail,LogFileCache,C:\repos\pilotcam_WingTail\WingTail\LogFileCache.cs,FillTailCache,The following statement contains a magic number: PrepareCache (lineCount + Items.Count / 2' lineCount + Items.Count / 2' true);  
Magic Number,WingTail,LogFileCache,C:\repos\pilotcam_WingTail\WingTail\LogFileCache.cs,PrepareCache,The following statement contains a magic number: if (startindex >= FirstIndex) {  	// Reading forward' we attempt to keep most of the cache  	int maxRemoveCount = startindex - FirstIndex;  	int minRemoveCount = Math.Max (0' maxRemoveCount - Items.Count + (endindex - startindex) + 1);  	if (minRemoveCount >= Items.Count) {  		for (int i = 0; i < Items.Count; ++i)  			Items [i] = null;  		FirstIndex = startindex;  	}  	else if (minRemoveCount > 0) {  		for (int i = 0; i < minRemoveCount; ++i) {  			Items.RemoveAt (0);  			Items.Add (null);  		}  		FirstIndex += minRemoveCount;  		while (mustBeFilled && Items [0] == null && FirstIndex < startindex) {  			Items.RemoveAt (0);  			Items.Add (null);  			FirstIndex++;  		}  	}  }  else {  	// Reading backward' we attempt to move further back as restart is expensive  	int firstIndex = Math.Max (0' startindex - Items.Count / 2);  	if (firstIndex + Items.Count < endindex)  		firstIndex = Math.Min (startindex' endindex - Items.Count + 1);  	int removeCount = FirstIndex - firstIndex;  	if (removeCount >= Items.Count) {  		for (int i = 0; i < Items.Count; ++i)  			Items [i] = null;  	}  	else if (removeCount > 0) {  		// Need to move elements FirstLine - StartIndex forward  		for (int i = 0; i < removeCount; ++i) {  			Items.RemoveAt (Items.Count - 1);  			Items.Insert (0' null);  		}  	}  	FirstIndex = firstIndex;  }  
Magic Number,WingTail,LogFileStream,C:\repos\pilotcam_WingTail\WingTail\LogFileStream.cs,LoadFile,The following statement contains a magic number: try {  	_fileStream = new FileStream (filepath' FileMode.Open' FileAccess.Read' FileShare.ReadWrite | FileShare.Delete' 65536' FileOptions.SequentialScan);  }  catch (ArgumentException ex) {  	_lastFileCheckError = "Invalid argument for opening file - " + ex.Message;  	return false;  }  catch (System.Security.SecurityException) {  	_lastFileCheckError = "No permission to open the file";  	return false;  }  catch (UnauthorizedAccessException) {  	_lastFileCheckError = "Access to the file is denied";  	return false;  }  catch (DirectoryNotFoundException) {  	_lastFileCheckError = "Directory not found";  	return false;  }  catch (FileNotFoundException) {  	_lastFileCheckError = "File not found";  	return false;  }  catch (IOException ex) {  	_lastFileCheckError = ex.Message;  	return false;  }  
Magic Number,WingTail,LogFileStream,C:\repos\pilotcam_WingTail\WingTail\LogFileStream.cs,LoadFile,The following statement contains a magic number: _fileStream = new FileStream (filepath' FileMode.Open' FileAccess.Read' FileShare.ReadWrite | FileShare.Delete' 65536' FileOptions.SequentialScan);  
Magic Number,WingTail,LogFileStream,C:\repos\pilotcam_WingTail\WingTail\LogFileStream.cs,LoadFile,The following statement contains a magic number: _fileReader = new StreamReader (_fileStream' fileEncoding' true' 65536);  
Magic Number,WingTail,LogFileStream,C:\repos\pilotcam_WingTail\WingTail\LogFileStream.cs,CloseToEnd,The following statement contains a magic number: try {  	if (_fileReader == null)  		return true;  	if (_fileReader.EndOfStream)  		return true;  	if (_fileStream.Length <= _fileStream.Position + lineCount * 80)  		return true;  	else  		return false;  }  catch (System.IO.IOException) {  	CloseFile (true);  	return true;  	// File is non-existing (empty)  }  
Magic Number,WingTail,LogFileStream,C:\repos\pilotcam_WingTail\WingTail\LogFileStream.cs,CloseToEnd,The following statement contains a magic number: if (_fileStream.Length <= _fileStream.Position + lineCount * 80)  	return true;  else  	return false;  
Magic Number,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,MainForm,The following statement contains a magic number: _MDITabControl.ImageList.ImageSize = new System.Drawing.Size (16' 16);  
Magic Number,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,MainForm,The following statement contains a magic number: _MDITabControl.ImageList.ImageSize = new System.Drawing.Size (16' 16);  
Magic Number,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,MainForm_Shown,The following statement contains a magic number: if (args.Length > 1) {  	int filesOpened = 0;  	for (int i = 1; i < args.Length; ++i) {  		if (args [1].EndsWith (".xml"' StringComparison.CurrentCultureIgnoreCase)) {  			if (LoadSession (args [1]))  				++filesOpened;  		}  		else {  			filesOpened += OpenFileSelection (new string[] {  				args [i]  			});  		}  		if (filesOpened == 0 && i >= 2)  			break;  		// Stop attempting to open all arguements if the first two fails  	}  }  
Magic Number,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,MainForm_Shown,The following statement contains a magic number: for (int i = 1; i < args.Length; ++i) {  	if (args [1].EndsWith (".xml"' StringComparison.CurrentCultureIgnoreCase)) {  		if (LoadSession (args [1]))  			++filesOpened;  	}  	else {  		filesOpened += OpenFileSelection (new string[] {  			args [i]  		});  	}  	if (filesOpened == 0 && i >= 2)  		break;  	// Stop attempting to open all arguements if the first two fails  }  
Magic Number,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,MainForm_Shown,The following statement contains a magic number: if (filesOpened == 0 && i >= 2)  	break;  
Magic Number,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,minimizeToTrayToolStripMenuItem_Click,The following statement contains a magic number: if (!_trayIcon.Visible) {  	_trayIcon.Visible = true;  	WindowState = FormWindowState.Minimized;  	Visible = false;  	minimizeToTrayToolStripMenuItem.Checked = true;  	_trayIcon.ShowBalloonTip (3' "Minimized to tray"' "Double click the system tray icon to restore window"' ToolTipIcon.Info);  }  else {  	Visible = true;  	WindowState = FormWindowState.Normal;  	_trayIcon.Visible = false;  	minimizeToTrayToolStripMenuItem.Checked = false;  }  
Magic Number,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,minimizeToTrayToolStripMenuItem_Click,The following statement contains a magic number: _trayIcon.ShowBalloonTip (3' "Minimized to tray"' "Double click the system tray icon to restore window"' ToolTipIcon.Info);  
Magic Number,WingTail,MainForm,C:\repos\pilotcam_WingTail\WingTail\MainForm.cs,worker_DoWork,The following statement contains a magic number: System.Threading.Thread.Sleep (100);  
Magic Number,WingTail,ThreadPoolQueue,C:\repos\pilotcam_WingTail\WingTail\ThreadPoolQueue.cs,Dispose,The following statement contains a magic number: if (originalRequest != null && resultReply == null) {  	// We need to wait for the request to complete  	while (originalRequest != null) {  		System.Threading.Thread.Sleep (10);  		lock (_syncLock) {  			if (_pendingReplyResult != null) {  				originalRequest = null;  				resultReply = _pendingReplyResult;  				_pendingReplyResult = null;  			}  		}  	}  }  
Magic Number,WingTail,ThreadPoolQueue,C:\repos\pilotcam_WingTail\WingTail\ThreadPoolQueue.cs,Dispose,The following statement contains a magic number: while (originalRequest != null) {  	System.Threading.Thread.Sleep (10);  	lock (_syncLock) {  		if (_pendingReplyResult != null) {  			originalRequest = null;  			resultReply = _pendingReplyResult;  			_pendingReplyResult = null;  		}  	}  }  
Magic Number,WingTail,ThreadPoolQueue,C:\repos\pilotcam_WingTail\WingTail\ThreadPoolQueue.cs,Dispose,The following statement contains a magic number: System.Threading.Thread.Sleep (10);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The following statement contains a magic number: if (tailConfig.FileCacheSize <= 0)  	tailConfig.FileCacheSize = 1000;  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The following statement contains a magic number: tailConfig.FileCacheSize = 1000;  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The following statement contains a magic number: if (_logTailStream == null || _logTailStream.FilePath != tailConfig.FilePath || _logTailStream.FileEncoding != fileEncoding || _logTailStream.FileCheckInterval != tailConfig.FileCheckInterval || _logTailStream.FileCheckPattern != tailConfig.FileCheckPattern) {  	if (_logTailStream != null)  		_logTailStream.Dispose ();  	_logTailStream = new LogFileStream (configPath' tailConfig.FilePath' fileEncoding' tailConfig.FileCheckInterval' tailConfig.FileCheckPattern);  	if (_logTailStream.Length > 500 * 1024 * 1024) {  		if (MessageBox.Show (String.Format ("The file is very large' sure you want to open it?\n\nFile Name: {0}\nFile Size: {1} Megabytes"' _logTailStream.FilePath' _logTailStream.Length / 1024 / 1024)' "Large file detected"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No) {  			Close ();  			return;  		}  	}  	if (_logFileCache != null) {  		_logFileCache.Reset ();  		_logFileCache = null;  		// Reset Cache' as the file contents can have changed  	}  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The following statement contains a magic number: if (_logTailStream == null || _logTailStream.FilePath != tailConfig.FilePath || _logTailStream.FileEncoding != fileEncoding || _logTailStream.FileCheckInterval != tailConfig.FileCheckInterval || _logTailStream.FileCheckPattern != tailConfig.FileCheckPattern) {  	if (_logTailStream != null)  		_logTailStream.Dispose ();  	_logTailStream = new LogFileStream (configPath' tailConfig.FilePath' fileEncoding' tailConfig.FileCheckInterval' tailConfig.FileCheckPattern);  	if (_logTailStream.Length > 500 * 1024 * 1024) {  		if (MessageBox.Show (String.Format ("The file is very large' sure you want to open it?\n\nFile Name: {0}\nFile Size: {1} Megabytes"' _logTailStream.FilePath' _logTailStream.Length / 1024 / 1024)' "Large file detected"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No) {  			Close ();  			return;  		}  	}  	if (_logFileCache != null) {  		_logFileCache.Reset ();  		_logFileCache = null;  		// Reset Cache' as the file contents can have changed  	}  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The following statement contains a magic number: if (_logTailStream == null || _logTailStream.FilePath != tailConfig.FilePath || _logTailStream.FileEncoding != fileEncoding || _logTailStream.FileCheckInterval != tailConfig.FileCheckInterval || _logTailStream.FileCheckPattern != tailConfig.FileCheckPattern) {  	if (_logTailStream != null)  		_logTailStream.Dispose ();  	_logTailStream = new LogFileStream (configPath' tailConfig.FilePath' fileEncoding' tailConfig.FileCheckInterval' tailConfig.FileCheckPattern);  	if (_logTailStream.Length > 500 * 1024 * 1024) {  		if (MessageBox.Show (String.Format ("The file is very large' sure you want to open it?\n\nFile Name: {0}\nFile Size: {1} Megabytes"' _logTailStream.FilePath' _logTailStream.Length / 1024 / 1024)' "Large file detected"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No) {  			Close ();  			return;  		}  	}  	if (_logFileCache != null) {  		_logFileCache.Reset ();  		_logFileCache = null;  		// Reset Cache' as the file contents can have changed  	}  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The following statement contains a magic number: if (_logTailStream == null || _logTailStream.FilePath != tailConfig.FilePath || _logTailStream.FileEncoding != fileEncoding || _logTailStream.FileCheckInterval != tailConfig.FileCheckInterval || _logTailStream.FileCheckPattern != tailConfig.FileCheckPattern) {  	if (_logTailStream != null)  		_logTailStream.Dispose ();  	_logTailStream = new LogFileStream (configPath' tailConfig.FilePath' fileEncoding' tailConfig.FileCheckInterval' tailConfig.FileCheckPattern);  	if (_logTailStream.Length > 500 * 1024 * 1024) {  		if (MessageBox.Show (String.Format ("The file is very large' sure you want to open it?\n\nFile Name: {0}\nFile Size: {1} Megabytes"' _logTailStream.FilePath' _logTailStream.Length / 1024 / 1024)' "Large file detected"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No) {  			Close ();  			return;  		}  	}  	if (_logFileCache != null) {  		_logFileCache.Reset ();  		_logFileCache = null;  		// Reset Cache' as the file contents can have changed  	}  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The following statement contains a magic number: if (_logTailStream == null || _logTailStream.FilePath != tailConfig.FilePath || _logTailStream.FileEncoding != fileEncoding || _logTailStream.FileCheckInterval != tailConfig.FileCheckInterval || _logTailStream.FileCheckPattern != tailConfig.FileCheckPattern) {  	if (_logTailStream != null)  		_logTailStream.Dispose ();  	_logTailStream = new LogFileStream (configPath' tailConfig.FilePath' fileEncoding' tailConfig.FileCheckInterval' tailConfig.FileCheckPattern);  	if (_logTailStream.Length > 500 * 1024 * 1024) {  		if (MessageBox.Show (String.Format ("The file is very large' sure you want to open it?\n\nFile Name: {0}\nFile Size: {1} Megabytes"' _logTailStream.FilePath' _logTailStream.Length / 1024 / 1024)' "Large file detected"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No) {  			Close ();  			return;  		}  	}  	if (_logFileCache != null) {  		_logFileCache.Reset ();  		_logFileCache = null;  		// Reset Cache' as the file contents can have changed  	}  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The following statement contains a magic number: if (_logTailStream.Length > 500 * 1024 * 1024) {  	if (MessageBox.Show (String.Format ("The file is very large' sure you want to open it?\n\nFile Name: {0}\nFile Size: {1} Megabytes"' _logTailStream.FilePath' _logTailStream.Length / 1024 / 1024)' "Large file detected"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No) {  		Close ();  		return;  	}  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The following statement contains a magic number: if (_logTailStream.Length > 500 * 1024 * 1024) {  	if (MessageBox.Show (String.Format ("The file is very large' sure you want to open it?\n\nFile Name: {0}\nFile Size: {1} Megabytes"' _logTailStream.FilePath' _logTailStream.Length / 1024 / 1024)' "Large file detected"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No) {  		Close ();  		return;  	}  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The following statement contains a magic number: if (_logTailStream.Length > 500 * 1024 * 1024) {  	if (MessageBox.Show (String.Format ("The file is very large' sure you want to open it?\n\nFile Name: {0}\nFile Size: {1} Megabytes"' _logTailStream.FilePath' _logTailStream.Length / 1024 / 1024)' "Large file detected"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No) {  		Close ();  		return;  	}  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The following statement contains a magic number: if (_logTailStream.Length > 500 * 1024 * 1024) {  	if (MessageBox.Show (String.Format ("The file is very large' sure you want to open it?\n\nFile Name: {0}\nFile Size: {1} Megabytes"' _logTailStream.FilePath' _logTailStream.Length / 1024 / 1024)' "Large file detected"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No) {  		Close ();  		return;  	}  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The following statement contains a magic number: if (_logTailStream.Length > 500 * 1024 * 1024) {  	if (MessageBox.Show (String.Format ("The file is very large' sure you want to open it?\n\nFile Name: {0}\nFile Size: {1} Megabytes"' _logTailStream.FilePath' _logTailStream.Length / 1024 / 1024)' "Large file detected"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No) {  		Close ();  		return;  	}  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The following statement contains a magic number: if (MessageBox.Show (String.Format ("The file is very large' sure you want to open it?\n\nFile Name: {0}\nFile Size: {1} Megabytes"' _logTailStream.FilePath' _logTailStream.Length / 1024 / 1024)' "Large file detected"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No) {  	Close ();  	return;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,LoadConfig,The following statement contains a magic number: if (MessageBox.Show (String.Format ("The file is very large' sure you want to open it?\n\nFile Name: {0}\nFile Size: {1} Megabytes"' _logTailStream.FilePath' _logTailStream.Length / 1024 / 1024)' "Large file detected"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No) {  	Close ();  	return;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_logFileCache_LoadingFileEvent,The following statement contains a magic number: if (filestream != null) {  	double position = filestream.Position / (double)filestream.Length * 100;  	SetStatusBar ("Loading file..."' (int)position' 100);  }  else {  	SetStatusBar (null);  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_logFileCache_LoadingFileEvent,The following statement contains a magic number: if (filestream != null) {  	double position = filestream.Position / (double)filestream.Length * 100;  	SetStatusBar ("Loading file..."' (int)position' 100);  }  else {  	SetStatusBar (null);  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_logFileCache_LoadingFileEvent,The following statement contains a magic number: SetStatusBar ("Loading file..."' (int)position' 100);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,SearchForTextForward,The following statement contains a magic number: for (int i = startIndex; i < endIndex; ++i) {  	if (i % _logFileCache.Items.Count == 0)  		SetStatusBar ("Searching..."' i' endIndex);  	string lineText = null;  	if (searchFileCache == null) {  		ListViewItem lvi = _logFileCache.LookupCache (i);  		if (lvi != null)  			lineText = lvi.Text;  		else {  			// Copy the current cache position' in case the search hit is the next line  			searchFileCache = new LogFileCache (_logFileCache.Items.Count);  			searchFileCache.Items = _logFileCache.Items.GetRange (0' _logFileCache.Items.Count);  			searchFileCache.FirstIndex = _logFileCache.FirstIndex;  		}  	}  	if (searchFileCache != null) {  		ListViewItem lvi = searchFileCache.LookupCache (i);  		if (lvi == null) {  			searchFileCache.PrepareCache (i' i + searchFileCache.Items.Count / 2' true);  			searchFileCache.FillCache (_logFileStream' i + searchFileCache.Items.Count / 2);  			lvi = searchFileCache.LookupCache (i);  		}  		lineText = lvi.Text;  	}  	if (MatchTextSearch (i' lineText' searchText' matchCase' lineHighlights))  		return i;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,SearchForTextForward,The following statement contains a magic number: for (int i = startIndex; i < endIndex; ++i) {  	if (i % _logFileCache.Items.Count == 0)  		SetStatusBar ("Searching..."' i' endIndex);  	string lineText = null;  	if (searchFileCache == null) {  		ListViewItem lvi = _logFileCache.LookupCache (i);  		if (lvi != null)  			lineText = lvi.Text;  		else {  			// Copy the current cache position' in case the search hit is the next line  			searchFileCache = new LogFileCache (_logFileCache.Items.Count);  			searchFileCache.Items = _logFileCache.Items.GetRange (0' _logFileCache.Items.Count);  			searchFileCache.FirstIndex = _logFileCache.FirstIndex;  		}  	}  	if (searchFileCache != null) {  		ListViewItem lvi = searchFileCache.LookupCache (i);  		if (lvi == null) {  			searchFileCache.PrepareCache (i' i + searchFileCache.Items.Count / 2' true);  			searchFileCache.FillCache (_logFileStream' i + searchFileCache.Items.Count / 2);  			lvi = searchFileCache.LookupCache (i);  		}  		lineText = lvi.Text;  	}  	if (MatchTextSearch (i' lineText' searchText' matchCase' lineHighlights))  		return i;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,SearchForTextForward,The following statement contains a magic number: if (searchFileCache != null) {  	ListViewItem lvi = searchFileCache.LookupCache (i);  	if (lvi == null) {  		searchFileCache.PrepareCache (i' i + searchFileCache.Items.Count / 2' true);  		searchFileCache.FillCache (_logFileStream' i + searchFileCache.Items.Count / 2);  		lvi = searchFileCache.LookupCache (i);  	}  	lineText = lvi.Text;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,SearchForTextForward,The following statement contains a magic number: if (searchFileCache != null) {  	ListViewItem lvi = searchFileCache.LookupCache (i);  	if (lvi == null) {  		searchFileCache.PrepareCache (i' i + searchFileCache.Items.Count / 2' true);  		searchFileCache.FillCache (_logFileStream' i + searchFileCache.Items.Count / 2);  		lvi = searchFileCache.LookupCache (i);  	}  	lineText = lvi.Text;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,SearchForTextForward,The following statement contains a magic number: if (lvi == null) {  	searchFileCache.PrepareCache (i' i + searchFileCache.Items.Count / 2' true);  	searchFileCache.FillCache (_logFileStream' i + searchFileCache.Items.Count / 2);  	lvi = searchFileCache.LookupCache (i);  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,SearchForTextForward,The following statement contains a magic number: if (lvi == null) {  	searchFileCache.PrepareCache (i' i + searchFileCache.Items.Count / 2' true);  	searchFileCache.FillCache (_logFileStream' i + searchFileCache.Items.Count / 2);  	lvi = searchFileCache.LookupCache (i);  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,SearchForTextForward,The following statement contains a magic number: searchFileCache.PrepareCache (i' i + searchFileCache.Items.Count / 2' true);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,SearchForTextForward,The following statement contains a magic number: searchFileCache.FillCache (_logFileStream' i + searchFileCache.Items.Count / 2);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_RetrieveVirtualItem,The following statement contains a magic number: if (!_topIndexHack) {  	_topIndexHack = true;  	ListViewItem topItem = _tailListView.TopItem;  	_topIndexHack = false;  	if (topItem == null || e.ItemIndex < topItem.Index || e.ItemIndex > topItem.Index + 1000) {  		// Ignore invalid requests outside the visible zone  		lvi.Text = "";  		e.Item = lvi;  		return;  	}  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_RetrieveVirtualItem,The following statement contains a magic number: if (topItem == null || e.ItemIndex < topItem.Index || e.ItemIndex > topItem.Index + 1000) {  	// Ignore invalid requests outside the visible zone  	lvi.Text = "";  	e.Item = lvi;  	return;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,TailForm_Load,The following statement contains a magic number: using (Graphics graphics = _tailListView.CreateGraphics ()) {  	string textstring = new string ('X'' 1001);  	_tailListView.Columns [1].Width = (int)graphics.MeasureString (textstring' _tailListView.Font).Width;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: if (e.Item.Selected) {  	if (backColor.HasValue || textColor.HasValue) {  		e.SubItem.BackColor = SystemColors.Highlight;  		e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  	}  	else {  		e.SubItem.BackColor = SystemColors.Highlight;  		e.SubItem.ForeColor = SystemColors.HighlightText;  	}  }  else {  	if (backColor.HasValue)  		e.SubItem.BackColor = backColor.Value;  	else  		e.SubItem.BackColor = e.Item.ListView.BackColor;  	if (textColor.HasValue)  		e.SubItem.ForeColor = textColor.Value;  	else  		e.SubItem.ForeColor = e.Item.ListView.ForeColor;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: if (e.Item.Selected) {  	if (backColor.HasValue || textColor.HasValue) {  		e.SubItem.BackColor = SystemColors.Highlight;  		e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  	}  	else {  		e.SubItem.BackColor = SystemColors.Highlight;  		e.SubItem.ForeColor = SystemColors.HighlightText;  	}  }  else {  	if (backColor.HasValue)  		e.SubItem.BackColor = backColor.Value;  	else  		e.SubItem.BackColor = e.Item.ListView.BackColor;  	if (textColor.HasValue)  		e.SubItem.ForeColor = textColor.Value;  	else  		e.SubItem.ForeColor = e.Item.ListView.ForeColor;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: if (e.Item.Selected) {  	if (backColor.HasValue || textColor.HasValue) {  		e.SubItem.BackColor = SystemColors.Highlight;  		e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  	}  	else {  		e.SubItem.BackColor = SystemColors.Highlight;  		e.SubItem.ForeColor = SystemColors.HighlightText;  	}  }  else {  	if (backColor.HasValue)  		e.SubItem.BackColor = backColor.Value;  	else  		e.SubItem.BackColor = e.Item.ListView.BackColor;  	if (textColor.HasValue)  		e.SubItem.ForeColor = textColor.Value;  	else  		e.SubItem.ForeColor = e.Item.ListView.ForeColor;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: if (e.Item.Selected) {  	if (backColor.HasValue || textColor.HasValue) {  		e.SubItem.BackColor = SystemColors.Highlight;  		e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  	}  	else {  		e.SubItem.BackColor = SystemColors.Highlight;  		e.SubItem.ForeColor = SystemColors.HighlightText;  	}  }  else {  	if (backColor.HasValue)  		e.SubItem.BackColor = backColor.Value;  	else  		e.SubItem.BackColor = e.Item.ListView.BackColor;  	if (textColor.HasValue)  		e.SubItem.ForeColor = textColor.Value;  	else  		e.SubItem.ForeColor = e.Item.ListView.ForeColor;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: if (e.Item.Selected) {  	if (backColor.HasValue || textColor.HasValue) {  		e.SubItem.BackColor = SystemColors.Highlight;  		e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  	}  	else {  		e.SubItem.BackColor = SystemColors.Highlight;  		e.SubItem.ForeColor = SystemColors.HighlightText;  	}  }  else {  	if (backColor.HasValue)  		e.SubItem.BackColor = backColor.Value;  	else  		e.SubItem.BackColor = e.Item.ListView.BackColor;  	if (textColor.HasValue)  		e.SubItem.ForeColor = textColor.Value;  	else  		e.SubItem.ForeColor = e.Item.ListView.ForeColor;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: if (e.Item.Selected) {  	if (backColor.HasValue || textColor.HasValue) {  		e.SubItem.BackColor = SystemColors.Highlight;  		e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  	}  	else {  		e.SubItem.BackColor = SystemColors.Highlight;  		e.SubItem.ForeColor = SystemColors.HighlightText;  	}  }  else {  	if (backColor.HasValue)  		e.SubItem.BackColor = backColor.Value;  	else  		e.SubItem.BackColor = e.Item.ListView.BackColor;  	if (textColor.HasValue)  		e.SubItem.ForeColor = textColor.Value;  	else  		e.SubItem.ForeColor = e.Item.ListView.ForeColor;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: if (backColor.HasValue || textColor.HasValue) {  	e.SubItem.BackColor = SystemColors.Highlight;  	e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  }  else {  	e.SubItem.BackColor = SystemColors.Highlight;  	e.SubItem.ForeColor = SystemColors.HighlightText;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: if (backColor.HasValue || textColor.HasValue) {  	e.SubItem.BackColor = SystemColors.Highlight;  	e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  }  else {  	e.SubItem.BackColor = SystemColors.Highlight;  	e.SubItem.ForeColor = SystemColors.HighlightText;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: if (backColor.HasValue || textColor.HasValue) {  	e.SubItem.BackColor = SystemColors.Highlight;  	e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  }  else {  	e.SubItem.BackColor = SystemColors.Highlight;  	e.SubItem.ForeColor = SystemColors.HighlightText;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: if (backColor.HasValue || textColor.HasValue) {  	e.SubItem.BackColor = SystemColors.Highlight;  	e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  }  else {  	e.SubItem.BackColor = SystemColors.Highlight;  	e.SubItem.ForeColor = SystemColors.HighlightText;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: if (backColor.HasValue || textColor.HasValue) {  	e.SubItem.BackColor = SystemColors.Highlight;  	e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  }  else {  	e.SubItem.BackColor = SystemColors.Highlight;  	e.SubItem.ForeColor = SystemColors.HighlightText;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: if (backColor.HasValue || textColor.HasValue) {  	e.SubItem.BackColor = SystemColors.Highlight;  	e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  }  else {  	e.SubItem.BackColor = SystemColors.Highlight;  	e.SubItem.ForeColor = SystemColors.HighlightText;  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: e.SubItem.ForeColor = Color.FromArgb (SystemColors.Highlight.A' (SystemColors.Highlight.R + 128) % 256' (SystemColors.Highlight.G + 128) % 256' (SystemColors.Highlight.B + 128) % 256);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: if (e.Item.Text.Length > 1000)  	TextRenderer.DrawText (e.Graphics' e.Item.Text.Substring (0' 1000)' e.Item.ListView.Font' e.Bounds' e.SubItem.ForeColor' flags);  else  	TextRenderer.DrawText (e.Graphics' e.Item.Text' e.Item.ListView.Font' e.Bounds' e.SubItem.ForeColor' flags);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: if (e.Item.Text.Length > 1000)  	TextRenderer.DrawText (e.Graphics' e.Item.Text.Substring (0' 1000)' e.Item.ListView.Font' e.Bounds' e.SubItem.ForeColor' flags);  else  	TextRenderer.DrawText (e.Graphics' e.Item.Text' e.Item.ListView.Font' e.Bounds' e.SubItem.ForeColor' flags);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_DrawSubItem,The following statement contains a magic number: TextRenderer.DrawText (e.Graphics' e.Item.Text.Substring (0' 1000)' e.Item.ListView.Font' e.Bounds' e.SubItem.ForeColor' flags);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_KeyDown,The following statement contains a magic number: if (e.KeyCode == Keys.PageDown) {  	int topIndex = _tailListView.TopItem.Index;  	_logFileCache.PrepareCache (topIndex + _logFileCache.Items.Count / 2' topIndex + _logFileCache.Items.Count / 2' false);  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_KeyDown,The following statement contains a magic number: if (e.KeyCode == Keys.PageDown) {  	int topIndex = _tailListView.TopItem.Index;  	_logFileCache.PrepareCache (topIndex + _logFileCache.Items.Count / 2' topIndex + _logFileCache.Items.Count / 2' false);  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_KeyDown,The following statement contains a magic number: _logFileCache.PrepareCache (topIndex + _logFileCache.Items.Count / 2' topIndex + _logFileCache.Items.Count / 2' false);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_KeyDown,The following statement contains a magic number: _logFileCache.PrepareCache (topIndex + _logFileCache.Items.Count / 2' topIndex + _logFileCache.Items.Count / 2' false);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_KeyDown,The following statement contains a magic number: if (e.KeyCode == Keys.PageUp) {  	int topIndex = _tailListView.TopItem.Index;  	_logFileCache.PrepareCache (topIndex - _logFileCache.Items.Count / 2' topIndex + 100' false);  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_KeyDown,The following statement contains a magic number: if (e.KeyCode == Keys.PageUp) {  	int topIndex = _tailListView.TopItem.Index;  	_logFileCache.PrepareCache (topIndex - _logFileCache.Items.Count / 2' topIndex + 100' false);  }  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_KeyDown,The following statement contains a magic number: _logFileCache.PrepareCache (topIndex - _logFileCache.Items.Count / 2' topIndex + 100' false);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,_tailListView_KeyDown,The following statement contains a magic number: _logFileCache.PrepareCache (topIndex - _logFileCache.Items.Count / 2' topIndex + 100' false);  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,ListAtBottom,The following statement contains a magic number: if (_tailListView.VirtualListSize <= 5)  	return true;  
Magic Number,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,ListAtBottom,The following statement contains a magic number: return IsItemVisible (_tailListView.VirtualListSize - 5);  
Magic Number,WingTail,ThreadExceptionDialogEx,C:\repos\pilotcam_WingTail\WingTail\ThreadExceptionDialogEx.cs,_detailsBtn_Click,The following statement contains a magic number: if (_reportListBox.Visible)  	this.Height += 150;  else  	this.Height -= 150;  
Magic Number,WingTail,ThreadExceptionDialogEx,C:\repos\pilotcam_WingTail\WingTail\ThreadExceptionDialogEx.cs,_detailsBtn_Click,The following statement contains a magic number: if (_reportListBox.Visible)  	this.Height += 150;  else  	this.Height -= 150;  
Magic Number,WingTail,ThreadExceptionDialogEx,C:\repos\pilotcam_WingTail\WingTail\ThreadExceptionDialogEx.cs,_detailsBtn_Click,The following statement contains a magic number: this.Height += 150;  
Magic Number,WingTail,ThreadExceptionDialogEx,C:\repos\pilotcam_WingTail\WingTail\ThreadExceptionDialogEx.cs,_detailsBtn_Click,The following statement contains a magic number: this.Height -= 150;  
Magic Number,WingTail,SystemReport,C:\repos\pilotcam_WingTail\WingTail\ThreadExceptionDialogEx.cs,SystemReport,The following statement contains a magic number: if (IntPtr.Size == 4)  	Platform = "x86";  else  	Platform = "x64";  
Missing Default,WingTail,TailForm,C:\repos\pilotcam_WingTail\WingTail\TailForm.cs,configureViewToolStripMenuItem_Click,The following switch statement is missing a default case: switch (configForm.ShowDialog ()) {  case DialogResult.OK: {  	LoadConfig (configForm.TailFileConfig' _configPath);  	break;  }  case DialogResult.Retry: {  	// Apply Config To All  	LoadConfig (configForm.TailFileConfig' _configPath);  	configFile = new TailFileConfig ();  	SaveConfig (configFile);  	TailConfigApplyAllForm configFormApply = new TailConfigApplyAllForm ();  	if (configFormApply.ShowDialog () == DialogResult.OK) {  		// Then we loop through all forms (includes free floating)  		foreach (Form childForm in Application.OpenForms) {  			TailForm tailForm = childForm as TailForm;  			if (tailForm != null && tailForm != this) {  				TailFileConfig configFileOther = new TailFileConfig ();  				tailForm.SaveConfig (configFileOther);  				if (configFormApply._checkBoxColors.Checked) {  					configFileOther.FormBackColor = configFile.FormBackColor;  					configFileOther.FormTextColor = configFile.FormTextColor;  					configFileOther.FormBookmarkBackColor = configFile.FormBookmarkBackColor;  					configFileOther.FormBookmarkTextColor = configFile.FormBookmarkTextColor;  				}  				if (configFormApply._checkBoxFont.Checked)  					configFileOther.FontInvariant = configFile.FontInvariant;  				if (configFormApply._checkboxKeywords.Checked)  					configFileOther.KeywordHighlight = configFile.KeywordHighlight;  				tailForm.LoadConfig (configFileOther' _configPath);  			}  		}  	}  	break;  }  }  
