Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Sdl.Web.Tridion.Context,ContextEngine,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Context\ContextEngine.cs,GetDeviceFamily,Cyclomatic complexity of the method is 8
Complex Method,Sdl.Web.Tridion.Markup,TridionMarkup,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Markup\TridionMarkup.cs,ParseEntity,Cyclomatic complexity of the method is 8
Long Identifier,Sdl.Web.Tridion.Config,TridionConfig,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Config\TridionConfig.cs,,The length of the parameter StandardMetadataTitleXmlFieldName is 33.
Long Identifier,Sdl.Web.Tridion.Config,TridionConfig,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Config\TridionConfig.cs,,The length of the parameter StandardMetadataDescriptionXmlFieldName is 39.
Long Identifier,Sdl.Web.Tridion.Config,TridionConfig,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Config\TridionConfig.cs,,The length of the parameter ComponentXmlFieldNameForPageTitle is 33.
Long Statement,Sdl.Web.Tridion.Config,TridionConfig,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Config\TridionConfig.cs,LoadRegions,The length of the statement  "                var configPath = Path.Combine(new[] { rootApplicationFolder' SiteConfiguration.StaticsFolder' SiteConfiguration.DefaultLocalization.ToCombinePath()' @"system\mappings\regions.json" }); " is 184.
Long Statement,Sdl.Web.Tridion.Markup,TridionMarkup,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Markup\TridionMarkup.cs,ParseEntity,The length of the statement  "                        HtmlCommentNode cpData = html.CreateComment(String.Format(ComponentPresentationFormat' compId' compModified' templateId' templateModified' isRepositoryPublished)); " is 163.
Long Statement,Sdl.Web.Tridion.Markup,TridionMarkup,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Markup\TridionMarkup.cs,PageMarkup,The length of the statement  "            return String.Format(PageFormat' pageId' pageDate' pageTemplateId' pageTemplateDate) + String.Format(PageScript' cmsUrl); " is 121.
Long Statement,Sdl.Web.Tridion.Query,BrokerQuery,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Query\BrokerQuery.cs,ExecuteQuery,The length of the statement  "            global::Tridion.ContentDelivery.DynamicContent.Query.Query query = new global::Tridion.ContentDelivery.DynamicContent.Query.Query(criteria); " is 140.
Magic Number,Sdl.Web.Tridion.Context,ContextEngine,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Context\ContextEngine.cs,GetDeviceFamily,The following statement contains a magic number: if (File.Exists(path))              {                  XDocument families = XDocument.Load(path);                  foreach (var i in families.Descendants("devicefamily"))                  {                      string family = i.Attribute("name").Value;                      bool inFamily = true;                      foreach (var c in i.Descendants("condition"))                      {                          Uri uri = new Uri(c.Attribute("uri").Value);                          string expectedValue = c.Attribute("value").Value;                            if (expectedValue.StartsWith("<"))                          {                              int value = Convert.ToInt32(expectedValue.Replace("<"' String.Empty));                              int claimValue = Convert.ToInt32(AmbientDataContext.CurrentClaimStore.Get<string>(uri));                              if (claimValue >= value)                                  inFamily = false;                          }                          else if (expectedValue.StartsWith(">"))                          {                              int value = Convert.ToInt32(expectedValue.Replace(">"' String.Empty));                              int claimValue = Convert.ToInt32(AmbientDataContext.CurrentClaimStore.Get<string>(uri));                              if (claimValue <= value)                                  inFamily = false;                          }                          else                          {                              string stringClaimValue = AmbientDataContext.CurrentClaimStore.Get<string>(uri);                              if (!stringClaimValue.Equals(expectedValue))                                  inFamily = false; // move on to next family                          }                      }                      if (inFamily)                      {                          _deviceFamily = family;                          break;                      }                      // Need to evaluate if all conditions are true.                  }              }              else              {                  // Defaults                  if (!Device.IsMobile && !Device.IsTablet) _deviceFamily = "desktop";                  if (Device.IsTablet) _deviceFamily = "tablet";                  if (Device.IsMobile && !Device.IsTablet)                  {                      _deviceFamily = Device.DisplayWidth > 319 ? "smartphone" : "featurephone";                  }              }
Magic Number,Sdl.Web.Tridion.Linking,TridionHelper,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Linking\LinkResolver.cs,ResolveLink,The following statement contains a magic number: if (uri.StartsWith("tcm:"))              {                  uri = uri.Substring(4);              }
Magic Number,Sdl.Web.Tridion.Linking,TridionHelper,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Linking\LinkResolver.cs,ResolveLink,The following statement contains a magic number: if (bits.Length > 2)              {                  switch(bits[2])                  {                      case "64":                          return ResolvePageLink(uri' localizationId);                      case "16":                          return isBinary ? ResolveBinaryLink(uri' localizationId) : ResolveComponentLink(uri' localizationId);                      default:                          return null;                  }              }
Magic Number,Sdl.Web.Tridion.Linking,TridionHelper,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Linking\LinkResolver.cs,ResolveLink,The following statement contains a magic number: if (bits.Length > 2)              {                  switch(bits[2])                  {                      case "64":                          return ResolvePageLink(uri' localizationId);                      case "16":                          return isBinary ? ResolveBinaryLink(uri' localizationId) : ResolveComponentLink(uri' localizationId);                      default:                          return null;                  }              }
Magic Number,Sdl.Web.Tridion.Linking,TridionHelper,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Linking\LinkResolver.cs,GetPublicationIdFromUri,The following statement contains a magic number: if (uri.StartsWith("tcm:"))              {                  uri = uri.Substring(4);              }
Magic Number,Sdl.Web.Tridion.Linking,TridionHelper,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Linking\LinkResolver.cs,GetItemTypeFromUri,The following statement contains a magic number: if (bits.Length > 2)              {                  int res;                  if (Int32.TryParse(bits[2]' out res))                  {                      return res;                  }                    throw new Exception("Invalid URI: " + uri);              }
Magic Number,Sdl.Web.Tridion.Linking,TridionHelper,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Linking\LinkResolver.cs,GetItemTypeFromUri,The following statement contains a magic number: if (bits.Length > 2)              {                  int res;                  if (Int32.TryParse(bits[2]' out res))                  {                      return res;                  }                    throw new Exception("Invalid URI: " + uri);              }
Magic Number,Sdl.Web.Tridion.Linking,TridionHelper,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Linking\LinkResolver.cs,GetItemTypeFromUri,The following statement contains a magic number: {                  return 16;              }
Magic Number,Sdl.Web.Tridion.Query,BrokerQuery,C:\repos\bkoopman_tri\web-application\Sdl.Web.Tridion\Query\BrokerQuery.cs,BuildCriteria,The following statement contains a magic number: var children = new List<Criteria> { new ItemTypeCriteria(16) };
