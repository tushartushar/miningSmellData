Implementation smell,Namespace,Class,File,Method,Description
Long Method,Umbraco.ModelsBuilder.Console,Program,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder.Console\Program.cs,Main,The method has 105 lines of code.
Long Parameter List,Umbraco.ModelsBuilder.Console,Program,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder.Console\Program.cs,GenerateModels,The method has 5 parameters. Parameters: apiUrl' apiUser' apiPassword' modelsDirectory' modelsNamespace
Long Statement,Umbraco.ModelsBuilder.Console,Program,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder.Console\Program.cs,Usage,The length of the statement  "            SysConsole.WriteLine("Example: Umbraco.ModelsBuilder.Console -d c:/models -ns My.Models http://john%40doe.com:1234@example.com"); " is 129.
Magic Number,Umbraco.ModelsBuilder.Console,Program,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder.Console\Program.cs,Main,The following statement contains a magic number: while (args.Length > i)              {                  if (args[i] == "-d")                  {                      if (args.Length == i + 1)                      {                          Usage();                          return;                      }                      var dir = args[i + 1];                      modelsDirectory = Path.IsPathRooted(dir)                          ? dir                          : Path.Combine(Directory.GetCurrentDirectory()' dir);                      i += 2;                  }                  else if (args[i] == "-ns")                  {                      if (args.Length == i + 1)                      {                          Usage();                          return;                      }                      modelsNamespace = args[i + 1];                      i += 2;                  }                  else if (!visitedUri)                  {                      var uriString = args[i];                      Uri uri;                      if (!Uri.TryCreate(uriString' UriKind.Absolute' out uri))                      {                          SysConsole.WriteLine("Invalid API uri.");                          Usage();                          return;                      }                      var pos = uri.UserInfo.IndexOf(':');                      if (pos <= 0 || pos == uri.UserInfo.Length - 1)                      {                          SysConsole.WriteLine("Invalid API uri.");                          Usage();                          return;                      }                      apiUser = uri.UserInfo.Substring(0' pos).Replace('+'' ' ');                      apiUser = Uri.UnescapeDataString(apiUser);                      apiPassword = uri.UserInfo.Substring(pos + 1).Replace('+'' ' ');                      apiPassword = Uri.UnescapeDataString(apiPassword);                      apiUrl = uri.GetComponents(UriComponents.SchemeAndServer' UriFormat.UriEscaped);                      visitedUri = true;                      i += 1;                  }                  else                  {                      Usage();                      return;                  }              }
Magic Number,Umbraco.ModelsBuilder.Console,Program,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder.Console\Program.cs,Main,The following statement contains a magic number: while (args.Length > i)              {                  if (args[i] == "-d")                  {                      if (args.Length == i + 1)                      {                          Usage();                          return;                      }                      var dir = args[i + 1];                      modelsDirectory = Path.IsPathRooted(dir)                          ? dir                          : Path.Combine(Directory.GetCurrentDirectory()' dir);                      i += 2;                  }                  else if (args[i] == "-ns")                  {                      if (args.Length == i + 1)                      {                          Usage();                          return;                      }                      modelsNamespace = args[i + 1];                      i += 2;                  }                  else if (!visitedUri)                  {                      var uriString = args[i];                      Uri uri;                      if (!Uri.TryCreate(uriString' UriKind.Absolute' out uri))                      {                          SysConsole.WriteLine("Invalid API uri.");                          Usage();                          return;                      }                      var pos = uri.UserInfo.IndexOf(':');                      if (pos <= 0 || pos == uri.UserInfo.Length - 1)                      {                          SysConsole.WriteLine("Invalid API uri.");                          Usage();                          return;                      }                      apiUser = uri.UserInfo.Substring(0' pos).Replace('+'' ' ');                      apiUser = Uri.UnescapeDataString(apiUser);                      apiPassword = uri.UserInfo.Substring(pos + 1).Replace('+'' ' ');                      apiPassword = Uri.UnescapeDataString(apiPassword);                      apiUrl = uri.GetComponents(UriComponents.SchemeAndServer' UriFormat.UriEscaped);                      visitedUri = true;                      i += 1;                  }                  else                  {                      Usage();                      return;                  }              }
