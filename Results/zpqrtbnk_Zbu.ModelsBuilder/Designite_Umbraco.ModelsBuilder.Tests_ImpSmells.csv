Implementation smell,Namespace,Class,File,Method,Description
Long Method,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,PropertyTypeImplementOnInterface,The method has 118 lines of code.
Long Method,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,MixinPropertyStatic,The method has 178 lines of code.
Long Method,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,GenerateSimpleType_AmbiguousIssue,The method has 100 lines of code.
Long Method,Umbraco.ModelsBuilder.Tests,RoslynTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\RoslynTests.cs,SemTest1,The method has 105 lines of code.
Complex Method,Umbraco.ModelsBuilder.Tests,RoslynTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\RoslynTests.cs,SemTest1,Cyclomatic complexity of the method is 8
Long Statement,Umbraco.ModelsBuilder.Tests,ApiTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiTests.cs,TokenTests,The length of the statement  "            var token = Convert.ToBase64String(Encoding.UTF8.GetBytes(ApiClient.EncodeTokenElement(username) + ':' + ApiClient.EncodeTokenElement(password))); " is 146.
Long Statement,Umbraco.ModelsBuilder.Tests,ExpressionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ExpressionTests.cs,FindProperty,The length of the statement  "                throw new ArgumentException($"Expression '{lambda}' must resolve to top-level member and not any child object's properties. Use a custom resolver on the child type or the AfterMap option instead."' nameof(lambda)); " is 214.
Long Statement,Umbraco.ModelsBuilder.Tests,ExpressionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ExpressionTests.cs,FindProperty,The length of the statement  "                    //    if (method.DeclaringType != typeof(NPocoSqlExtensions.Statics) || method.Name != "Alias" || !(callExpr.Arguments[1] is ConstantExpression aliasExpr)) " is 155.
Long Statement,Umbraco.ModelsBuilder.Tests,ExpressionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ExpressionTests.cs,FindProperty,The length of the statement  "                        if (memberExpr.Expression.NodeType != ExpressionType.Parameter && memberExpr.Expression.NodeType != ExpressionType.Convert) " is 123.
Long Statement,Umbraco.ModelsBuilder.Tests,ParserTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ParserTests.cs,ExpressionBodiedPropertiesRequireCSharp6,The length of the statement  "            // Umbraco.ModelsBuilder.Building.CompilerException : Feature 'expression-bodied property' is not available in C# 5.  Please use language version 6 or greater. " is 159.
Long Statement,Umbraco.ModelsBuilder.Tests,RoslynTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\RoslynTests.cs,SemTest1,The length of the statement  "            // http://social.msdn.microsoft.com/Forums/vstudio/en-US/64ee86b8-0fd7-457d-8428-a0f238133476/can-roslyn-tell-me-if-a-member-of-a-symbol-is-visible-from-a-position-in-a-document?forum=roslyn " is 190.
Long Statement,Umbraco.ModelsBuilder.Tests,RoslynTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\RoslynTests.cs,SemTest1,The length of the statement  "            //var classDeclarations = tree.GetRoot().DescendantNodes(x => x is ClassDeclarationSyntax).OfType<ClassDeclarationSyntax>(); " is 124.
Long Statement,Umbraco.ModelsBuilder.Tests,UmbracoInternals,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\UmbracoInternals.cs,CreatePublishedPropertyType,The length of the statement  "            return new PublishedPropertyType(alias' definition' false' ContentVariation.Nothing' valueConverters' publishedModelFactory' publishedContentTypeFactory); " is 154.
Long Statement,Umbraco.ModelsBuilder.Tests,UmbracoInternals,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\UmbracoInternals.cs,CreatePublishedContentType,The length of the statement  "            return new PublishedContentType(id' alias' PublishedItemType.Content' Enumerable.Empty<string>()' propertyTypes' ContentVariation.Nothing); " is 139.
Magic Number,Umbraco.ModelsBuilder.Tests,ApiTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiTests.cs,TokenTests,The following statement contains a magic number: credentials.Length != 2
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeIgnoreWildcard,The following statement contains a magic number: var type2 = new TypeModel              {                  Id = 2'                  Alias = "type2"'                  ClrName = "Type2"'                  ParentId = 0'                  BaseType = null'                  ItemType = TypeModel.ItemTypes.Content'              };
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeIgnoreWildcard,The following statement contains a magic number: var type3 = new TypeModel              {                  Id = 3'                  Alias = "ttype3"'                  ClrName = "Ttype3"'                  ParentId = 0'                  BaseType = null'                  ItemType = TypeModel.ItemTypes.Content'              };
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeIgnoreWildcard,The following statement contains a magic number: Assert.AreEqual(3' btypes.Count);
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeIgnoreWildcard,The following statement contains a magic number: Assert.IsFalse(btypes[2].IsContentIgnored);
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeIgnoreParent,The following statement contains a magic number: var type2 = new TypeModel              {                  Id = 2'                  Alias = "type2"'                  ClrName = "Type2"'                  ParentId = 1'                  BaseType = type1'                  ItemType = TypeModel.ItemTypes.Content'              };
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeIgnoreParent,The following statement contains a magic number: Assert.AreEqual(2' btypes.Count);
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeIgnoreMixin,The following statement contains a magic number: var type2 = new TypeModel              {                  Id = 2'                  Alias = "type2"'                  ClrName = "Type2"'                  ParentId = 0'                  BaseType = null'                  ItemType = TypeModel.ItemTypes.Content'              };
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeIgnoreMixin,The following statement contains a magic number: Assert.AreEqual(2' btypes.Count);
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeRenameOnAssembly,The following statement contains a magic number: var type2 = new TypeModel              {                  Id = 2'                  Alias = "type2"'                  ClrName = "Type2"'                  ParentId = 0'                  BaseType = null'                  ItemType = TypeModel.ItemTypes.Content'              };
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeRenameOnAssembly,The following statement contains a magic number: Assert.AreEqual(2' btypes.Count);
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeRenameOnClass,The following statement contains a magic number: var type2 = new TypeModel              {                  Id = 2'                  Alias = "type2"'                  ClrName = "Type2"'                  ParentId = 0'                  BaseType = null'                  ItemType = TypeModel.ItemTypes.Content'              };
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeRenameOnClass,The following statement contains a magic number: Assert.AreEqual(2' btypes.Count);
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeCustomBaseClass,The following statement contains a magic number: var type2 = new TypeModel              {                  Id = 2'                  Alias = "type2"'                  ClrName = "Type2"'                  ParentId = 0'                  BaseType = null'                  ItemType = TypeModel.ItemTypes.Content'              };
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeCustomBaseClass,The following statement contains a magic number: var type3 = new TypeModel              {                  Id = 3'                  Alias = "type3"'                  ClrName = "Type3"'                  ParentId = 1'                  BaseType = type1'                  ItemType = TypeModel.ItemTypes.Content'              };
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeCustomBaseClass,The following statement contains a magic number: Assert.AreEqual(3' btypes.Count);
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,ContentTypeCustomBaseClass,The following statement contains a magic number: var btype3 = btypes[2];
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,PropertyTypeIgnoreWildcard,The following statement contains a magic number: Assert.IsFalse(btypes[0].Properties[2].IsIgnored);
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,PropertyTypeImplementOnInterface,The following statement contains a magic number: Assert.AreEqual(2' btypes.Count);
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,MixinPropertyStatic,The following statement contains a magic number: var type2 = new TypeModel              {                  Id = 2'                  Alias = "type2"'                  ClrName = "Type2"'                  ParentId = 0'                  BaseType = null'                  ItemType = TypeModel.ItemTypes.Content'              };
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,GenerateSimpleType_AmbiguousIssue,The following statement contains a magic number: var type2 = new TypeModel              {                  Id = 2'                  Alias = "foo"'                  ClrName = "Foo"'                  ParentId = 0'                  BaseType = null'                  ItemType = TypeModel.ItemTypes.Element'              };
Magic Number,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,GenerateMixinType,The following statement contains a magic number: var type2 = new TypeModel              {                  Id = 2'                  Alias = "type2"'                  ClrName = "Type2"'                  ParentId = 0'                  BaseType = null'                  ItemType = TypeModel.ItemTypes.Content'              };
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,IsCompatibleTest,The following statement contains a magic number: var av = new ApiVersion(new SemVersion(3' 0' 0)' new SemVersion(2' 0' 0));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,IsCompatibleTest,The following statement contains a magic number: var av = new ApiVersion(new SemVersion(3' 0' 0)' new SemVersion(2' 0' 0));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,IsCompatibleTest,The following statement contains a magic number: Assert.IsTrue(av.IsCompatibleWith(new SemVersion(2' 0' 0)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,IsCompatibleTest,The following statement contains a magic number: Assert.IsTrue(av.IsCompatibleWith(new SemVersion(3' 0' 0)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,IsCompatibleTest,The following statement contains a magic number: Assert.IsFalse(av.IsCompatibleWith(new SemVersion(4' 0' 0)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,IsCompatibleTest,The following statement contains a magic number: Assert.IsTrue(av.IsCompatibleWith(new SemVersion(4' 0' 0)' new SemVersion(2' 0' 0)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,IsCompatibleTest,The following statement contains a magic number: Assert.IsTrue(av.IsCompatibleWith(new SemVersion(4' 0' 0)' new SemVersion(2' 0' 0)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,IsCompatibleTest,The following statement contains a magic number: Assert.IsTrue(av.IsCompatibleWith(new SemVersion(4' 0' 0)' new SemVersion(3' 0' 0)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,IsCompatibleTest,The following statement contains a magic number: Assert.IsTrue(av.IsCompatibleWith(new SemVersion(4' 0' 0)' new SemVersion(3' 0' 0)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,IsCompatibleTest,The following statement contains a magic number: Assert.IsFalse(av.IsCompatibleWith(new SemVersion(4' 0' 0)' new SemVersion(3' 0' 1)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,IsCompatibleTest,The following statement contains a magic number: Assert.IsFalse(av.IsCompatibleWith(new SemVersion(4' 0' 0)' new SemVersion(3' 0' 1)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,NextVersionTest,The following statement contains a magic number: Assert.AreEqual(new SemVersion(1' 0' 8)' GetNextVersion(new SemVersion(1' 0' 7)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,NextVersionTest,The following statement contains a magic number: Assert.AreEqual(new SemVersion(1' 0' 8)' GetNextVersion(new SemVersion(1' 0' 7)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,PreviousVersionTest,The following statement contains a magic number: Assert.AreEqual(new SemVersion(0' 0' 1)' GetPreviousVersion(new SemVersion(0' 0' 2)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,PreviousVersionTest,The following statement contains a magic number: Assert.AreEqual(new SemVersion(0' 0' 999)' GetPreviousVersion(new SemVersion(0' 1' 0)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,PreviousVersionTest,The following statement contains a magic number: Assert.AreEqual(new SemVersion(0' 0' 999)' GetPreviousVersion(new SemVersion(0' 1' 0)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,PreviousVersionTest,The following statement contains a magic number: Assert.AreEqual(new SemVersion(0' 999' 999)' GetPreviousVersion(new SemVersion(1' 0' 0)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,PreviousVersionTest,The following statement contains a magic number: Assert.AreEqual(new SemVersion(0' 999' 999)' GetPreviousVersion(new SemVersion(1' 0' 0)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,PreviousVersionTest,The following statement contains a magic number: Assert.AreEqual(new SemVersion(1' 999' 999)' GetPreviousVersion(new SemVersion(2' 0' 0)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,PreviousVersionTest,The following statement contains a magic number: Assert.AreEqual(new SemVersion(1' 999' 999)' GetPreviousVersion(new SemVersion(2' 0' 0)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,PreviousVersionTest,The following statement contains a magic number: Assert.AreEqual(new SemVersion(1' 999' 999)' GetPreviousVersion(new SemVersion(2' 0' 0)));
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,GetPreviousVersion,The following statement contains a magic number: return new SemVersion(version.Major' version.Minor - 1' 999);
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,GetPreviousVersion,The following statement contains a magic number: return new SemVersion(version.Major - 1' 999' 999);
Magic Number,Umbraco.ModelsBuilder.Tests,ApiVersionTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ApiVersionTests.cs,GetPreviousVersion,The following statement contains a magic number: return new SemVersion(version.Major - 1' 999' 999);
Magic Number,Umbraco.ModelsBuilder.Tests,ExtensionsTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\ExtensionsTests.cs,RemoveAll,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,Umbraco.ModelsBuilder.Tests,RoslynTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\RoslynTests.cs,SemTestMissingReference,The following statement contains a magic number: Assert.GreaterOrEqual(diags.Length' 2);
Magic Number,Umbraco.ModelsBuilder.Tests,RoslynTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\RoslynTests.cs,SymbolLookup_Ambiguous1,The following statement contains a magic number: Assert.AreEqual(2' LookupSymbol(model' pos' null' "ASCIIEncoding"));
Magic Number,Umbraco.ModelsBuilder.Tests,ConsoleDumpWalker,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\RoslynTests.cs,Visit,The following statement contains a magic number: Console.WriteLine(new string(' '' padding + 4) + "> " + attr.Name);
Magic Number,Umbraco.ModelsBuilder.Tests,ConsoleDumpWalker,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\RoslynTests.cs,Visit,The following statement contains a magic number: Console.WriteLine(new string(' '' padding + 4) + "> " + (expr == null ? null : expr.Token.Value));
Magic Number,Umbraco.ModelsBuilder.Tests,ConsoleDumpWalker,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\RoslynTests.cs,Visit,The following statement contains a magic number: Console.WriteLine(new string(' '' padding + 4) + "T " + attr2.Identifier.GetType());
Magic Number,Umbraco.ModelsBuilder.Tests,ConsoleDumpWalker,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\RoslynTests.cs,Visit,The following statement contains a magic number: Console.WriteLine(new string(' '' padding + 4) + "V " + attr2.Identifier);
Magic Number,Umbraco.ModelsBuilder.Tests,ConsoleDumpWalker,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\RoslynTests.cs,Visit,The following statement contains a magic number: Console.WriteLine(new string(' '' padding + 4) + "> " + xtype);
Magic Number,Umbraco.ModelsBuilder.Tests,UmbracoApplicationTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\UmbracoApplicationTests.cs,ThrowsOnDuplicateAliases,The following statement contains a magic number: Assert.AreEqual(6' UmbracoServices.EnsureDistinctAliases(typeModels).Count);
Duplicate Code,Umbraco.ModelsBuilder.Tests,BuilderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\BuilderTests.cs,MixinPropertyStatic,The method contains a code clone-set at the following line numbers (starting from the method definition): ((72' 92)' (140' 160))
Missing Default,Umbraco.ModelsBuilder.Tests,CSharpCodeProviderTests,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\CSharpCodeProviderTests.cs,IsSpecialTypeChar,The following switch statement is missing a default case: switch (ch)              {                  case ':':                  case '.':                  case '$':                  case '+':                  case '<':                  case '>':                  case '-':                  case '[':                  case ']':                  case ''':                  case '&':                  case '*':                      nextMustBeStartChar = true;                      return true;                    case '`':                      return true;              }
Missing Default,Umbraco.ModelsBuilder.Tests,TestWalker,D:\research\architectureSmells\repos\zpqrtbnk_Zbu.ModelsBuilder\src\Umbraco.ModelsBuilder.Tests\RoslynTests.cs,VisitLiteralExpression,The following switch statement is missing a default case: switch (_attributeName)                  {                      case "Generator.IgnoreContentType":                          Console.WriteLine("Ignore ContentType {0}"' node.Token.ValueText);                          break;                      case "Generator.IgnorePropertyType":                          className = _classNames.Peek();                          Console.WriteLine("Ignore PropertyType {0}.{1}"' className' node.Token.ValueText);                          break;                      case "PublishedModel":                          className = _classNames.Peek();                          Console.WriteLine("Name {0} for ContentType {1}"' className' node.Token.ValueText);                          break;                  }
