Implementation smell,Namespace,Class,File,Method,Description
Long Method,Umbraco.ModelsBuilder.Building,Builder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\Builder.cs,Prepare,The method has 115 lines of code.
Long Method,Umbraco.ModelsBuilder.Configuration,Config,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Configuration\Config.cs,Config,The method has 117 lines of code.
Long Method,Umbraco.ModelsBuilder.Umbraco,PureLiveModelFactory,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Umbraco\PureLiveModelFactory.cs,GetModelsAssembly,The method has 104 lines of code.
Complex Method,Umbraco.ModelsBuilder.Building,Builder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\Builder.cs,Prepare,Cyclomatic complexity of the method is 22
Complex Method,Umbraco.ModelsBuilder.Building,CodeDomBuilder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\CodeDomBuilder.cs,Generate,Cyclomatic complexity of the method is 9
Complex Method,Umbraco.ModelsBuilder.Building,TextBuilder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\TextBuilder.cs,WriteContentType,Cyclomatic complexity of the method is 12
Complex Method,Umbraco.ModelsBuilder.Building,TextBuilder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\TextBuilder.cs,WriteProperty,Cyclomatic complexity of the method is 13
Complex Method,Umbraco.ModelsBuilder.Configuration,Config,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Configuration\Config.cs,Config,Cyclomatic complexity of the method is 15
Complex Method,Umbraco.ModelsBuilder.Umbraco,Application,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Umbraco\Application.cs,GetTypes,Cyclomatic complexity of the method is 14
Complex Method,Umbraco.ModelsBuilder.Umbraco,PureLiveModelFactory,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Umbraco\PureLiveModelFactory.cs,GetModelsAssembly,Cyclomatic complexity of the method is 10
Long Parameter List,Umbraco.ModelsBuilder.Configuration,Config,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Configuration\Config.cs,Config,The method has 13 parameters. Parameters: enable' modelsMode' enableApi' modelsNamespace' enableFactory' languageVersion' staticMixinGetters' staticMixinGetterPattern' flagOutOfDateModels' clrNameSource' modelsDirectory' acceptUnsafeModelsDirectory' debugLevel
Long Identifier,Umbraco.ModelsBuilder.Api,ApiVersion,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Api\ApiVersion.cs,ApiVersion,The length of the parameter minClientVersionSupportedByServer is 33.
Long Identifier,Umbraco.ModelsBuilder.Api,ApiVersion,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Api\ApiVersion.cs,ApiVersion,The length of the parameter minServerVersionSupportingClient is 32.
Long Identifier,Umbraco.ModelsBuilder.Api,ApiVersion,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Api\ApiVersion.cs,IsCompatibleWith,The length of the parameter minServerVersionSupportingClient is 32.
Long Identifier,Umbraco.ModelsBuilder.Api,ApiVersion,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Api\ApiVersion.cs,,The length of the parameter MinClientVersionSupportedByServerConst is 38.
Long Identifier,Umbraco.ModelsBuilder.Api,ApiVersion,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Api\ApiVersion.cs,,The length of the parameter MinServerVersionSupportingClientConst is 37.
Long Identifier,Umbraco.ModelsBuilder.Configuration,Config,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Configuration\Config.cs,,The length of the parameter DefaultStaticMixinGetterPattern is 31.
Long Statement,Umbraco.ModelsBuilder.Building,Builder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\Builder.cs,Prepare,The length of the statement  "            foreach (var typeModel in _typeModels.Where(x => !x.IsContentIgnored && x.EnumerateBaseTypes().Any(xx => xx.IsContentIgnored))) " is 127.
Long Statement,Umbraco.ModelsBuilder.Building,Builder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\Builder.cs,Prepare,The length of the statement  "            foreach (var typeModel in _typeModels.Where(x => ParseResult.HasContentBase(ParseResult.ContentClrName(x.Alias) ?? x.ClrName))) " is 127.
Long Statement,Umbraco.ModelsBuilder.Building,Builder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\Builder.cs,Prepare,The length of the statement  "                    .Where(property => tm.EnumerateBaseTypes(true).Any(x => ParseResult.IsPropertyIgnored(ParseResult.ContentClrName(x.Alias) ?? x.ClrName' property.Alias)))) " is 154.
Long Statement,Umbraco.ModelsBuilder.Building,Builder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\Builder.cs,Prepare,The length of the statement  "                    property.ClrName = ParseResult.PropertyClrName(ParseResult.ContentClrName(typeModel.Alias) ?? typeModel.ClrName' property.Alias) ?? property.ClrName; " is 149.
Long Statement,Umbraco.ModelsBuilder.Building,Builder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\Builder.cs,Prepare,The length of the statement  "                    + $" for types with alias {string.Join("' "' xx.Select(x => x.ItemType + ":\"" + x.Alias + "\""))}. Names have to be unique." " is 125.
Long Statement,Umbraco.ModelsBuilder.Building,Builder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\Builder.cs,Prepare,The length of the statement  "                        + $" is used for properties with alias {string.Join("' "' xx.Select(x => "\"" + x.Alias + "\""))}. Names have to be unique." " is 124.
Long Statement,Umbraco.ModelsBuilder.Building,Builder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\Builder.cs,Prepare,The length of the statement  "                        throw new InvalidOperationException($"The model class for content type with alias \"{typeModel.Alias}\" is named \"{xx.ClrName}\"." " is 131.
Long Statement,Umbraco.ModelsBuilder.Building,Builder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\Builder.cs,Prepare,The length of the statement  "                        + $" CSharp does not support naming the property with alias \"{xx.Alias}\" with the same name as content type with alias \"{typeModel.Alias}\"." " is 144.
Long Statement,Umbraco.ModelsBuilder.Building,Builder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\Builder.cs,PrepareAmbiguousSymbols,The length of the statement  "            var compilation = compiler.GetCompilation("MyCompilation"' new Dictionary<string' string> { { "code"' codeBuilder.ToString() } }' out trees); " is 141.
Long Statement,Umbraco.ModelsBuilder.Building,CodeParser,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\CodeParser.cs,Parse,The length of the statement  "                    //disco.SetContentBaseClass(SymbolDisplay.ToDisplayString(classSymbol)' SymbolDisplay.ToDisplayString(baseClassSymbol)); " is 120.
Long Statement,Umbraco.ModelsBuilder.Building,CodeParser,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\CodeParser.cs,ParseClassSymbols,The length of the statement  "                        disco.SetRenamedProperty(symbol.Name /*SymbolDisplay.ToDisplayString(symbol)*/' propertyAliasToRename' propertyRenamed); " is 120.
Long Statement,Umbraco.ModelsBuilder.Building,TextBuilder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\TextBuilder.cs,WriteContentType,The length of the statement  "            sb.AppendFormat("\t\tpublic static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<{0}' TValue>> selector)\n"' " is 129.
Long Statement,Umbraco.ModelsBuilder.Building,TextBuilder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\TextBuilder.cs,WriteContentType,The length of the statement  "            sb.Append("\t\t{\n\t\t\treturn PublishedContentModelUtility.GetModelPropertyType(GetModelContentType()' selector);\n\t\t}\n"); " is 126.
Long Statement,Umbraco.ModelsBuilder.Umbraco,Application,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Umbraco\Application.cs,GetAllTypes,The length of the statement  "            types.AddRange(GetTypes(PublishedItemType.Content' contentTypeService.GetAllContentTypes().Cast<IContentTypeBase>().ToArray())); " is 128.
Long Statement,Umbraco.ModelsBuilder.Umbraco,Application,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Umbraco\Application.cs,GetAllTypes,The length of the statement  "            types.AddRange(GetTypes(PublishedItemType.Media' contentTypeService.GetAllMediaTypes().Cast<IContentTypeBase>().ToArray())); " is 124.
Long Statement,Umbraco.ModelsBuilder.Umbraco,ModelsBuilderApplication,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Umbraco\ModelsBuilderApplication.cs,InstallServerVars,The length of the statement  "                umbracoUrls["modelsBuilderBaseUrl"] = urlHelper.GetUmbracoApiServiceBaseUrl<ModelsBuilderBackOfficeController>(controller => controller.BuildModels()); " is 151.
Long Statement,Umbraco.ModelsBuilder.Umbraco,PureLiveModelFactory,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Umbraco\PureLiveModelFactory.cs,RegisterModels,The length of the statement  "            var constructors = new Dictionary<string' Func<IPublishedContent' IPublishedContent>>(StringComparer.InvariantCultureIgnoreCase); " is 129.
Long Statement,Umbraco.ModelsBuilder.Umbraco,PureLiveModelFactory,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Umbraco\PureLiveModelFactory.cs,RegisterModels,The length of the statement  "                    throw new InvalidOperationException($"Type {type.FullName} is missing a public constructor with one argument of type IPublishedContent."); " is 138.
Long Statement,Umbraco.ModelsBuilder.Validation,ContentTypeModelValidatorBase<TModel;TProperty>,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Validation\ContentTypeModelValidator.cs,PerformValidate,The length of the statement  "                        yield return new ValidationResult(string.Format("With Models Builder enabled' you can't have a property with a the alias \"{0}\" when the content type alias is also \"{0}\"."' prop.Alias)' new[] " is 194.
Long Statement,Umbraco.ModelsBuilder.Validation,ContentTypeModelValidatorBase<TModel;TProperty>,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Validation\ContentTypeModelValidator.cs,PerformValidate,The length of the statement  "                        string.Format("Groups[{0}].Properties[{1}].Alias"' model.Groups.IndexOf(propertyGroup)' propertyGroup.Properties.IndexOf(prop)) " is 127.
Complex Conditional,Umbraco.ModelsBuilder.Building,CodeParser,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\CodeParser.cs,ParseMethodSymbol,The conditional expression  "methodSymbol == null                  || !methodSymbol.IsStatic                  || methodSymbol.IsGenericMethod                  || methodSymbol.ReturnsVoid                  || methodSymbol.IsExtensionMethod                  || methodSymbol.Parameters.Length != 1"  is complex.
Magic Number,Umbraco.ModelsBuilder.Building,TextBuilder,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\TextBuilder.cs,SplitError,The following statement contains a magic number: while (p < error.Length)              {                  var n = p + 50;                  while (n < error.Length && error[n] != ' ') n++;                  if (n >= error.Length) break;                  yield return error.Substring(p' n - p);                  p = n + 1;              }
Magic Number,Umbraco.ModelsBuilder.Umbraco,HashCombiner,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Umbraco\HashCombiner.cs,Add,The following statement contains a magic number: _combinedHash = ((_combinedHash << 5) + _combinedHash) ^ i;
Magic Number,Umbraco.ModelsBuilder.Umbraco,LiveModelsProvider,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Umbraco\LiveModelsProvider.cs,GenerateModelsIfRequested,The following statement contains a magic number: try              {                  LogHelper.Debug<LiveModelsProvider>("Generate models...");                  const int timeout = 2*60*1000; // 2 mins                  _mutex.WaitOne(timeout); // wait until it is safe' and acquire                  LogHelper.Info<LiveModelsProvider>("Generate models now.");                  GenerateModels();                  ModelsGenerationError.Clear();                  LogHelper.Info<LiveModelsProvider>("Generated.");              }              catch (TimeoutException)              {                  LogHelper.Warn<LiveModelsProvider>("Timeout' models were NOT generated.");              }              catch (Exception e)              {                  ModelsGenerationError.Report("Failed to build Live models."' e);                  LogHelper.Error<LiveModelsProvider>("Failed to generate models."' e);              }              finally              {                  _mutex.ReleaseMutex(); // release              }
Magic Number,Umbraco.ModelsBuilder.Umbraco,LiveModelsProvider,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Umbraco\LiveModelsProvider.cs,GenerateModelsIfRequested,The following statement contains a magic number: try              {                  LogHelper.Debug<LiveModelsProvider>("Generate models...");                  const int timeout = 2*60*1000; // 2 mins                  _mutex.WaitOne(timeout); // wait until it is safe' and acquire                  LogHelper.Info<LiveModelsProvider>("Generate models now.");                  GenerateModels();                  ModelsGenerationError.Clear();                  LogHelper.Info<LiveModelsProvider>("Generated.");              }              catch (TimeoutException)              {                  LogHelper.Warn<LiveModelsProvider>("Timeout' models were NOT generated.");              }              catch (Exception e)              {                  ModelsGenerationError.Report("Failed to build Live models."' e);                  LogHelper.Error<LiveModelsProvider>("Failed to generate models."' e);              }              finally              {                  _mutex.ReleaseMutex(); // release              }
Magic Number,Umbraco.ModelsBuilder.Umbraco,LiveModelsProvider,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Umbraco\LiveModelsProvider.cs,GenerateModelsIfRequested,The following statement contains a magic number: try              {                  LogHelper.Debug<LiveModelsProvider>("Generate models...");                  const int timeout = 2*60*1000; // 2 mins                  _mutex.WaitOne(timeout); // wait until it is safe' and acquire                  LogHelper.Info<LiveModelsProvider>("Generate models now.");                  GenerateModels();                  ModelsGenerationError.Clear();                  LogHelper.Info<LiveModelsProvider>("Generated.");              }              catch (TimeoutException)              {                  LogHelper.Warn<LiveModelsProvider>("Timeout' models were NOT generated.");              }              catch (Exception e)              {                  ModelsGenerationError.Report("Failed to build Live models."' e);                  LogHelper.Error<LiveModelsProvider>("Failed to generate models."' e);              }              finally              {                  _mutex.ReleaseMutex(); // release              }
Missing Default,Umbraco.ModelsBuilder.Building,CodeParser,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\CodeParser.cs,ParseClassSymbols,The following switch statement is missing a default case: switch (attrClassName)                  {                      case "Umbraco.ModelsBuilder.IgnorePropertyTypeAttribute":                          var propertyAliasToIgnore = (string)attrData.ConstructorArguments[0].Value;                          disco.SetIgnoredProperty(symbol.Name /*SymbolDisplay.ToDisplayString(symbol)*/' propertyAliasToIgnore);                          break;                      case "Umbraco.ModelsBuilder.RenamePropertyTypeAttribute":                          var propertyAliasToRename = (string)attrData.ConstructorArguments[0].Value;                          var propertyRenamed = (string)attrData.ConstructorArguments[1].Value;                          disco.SetRenamedProperty(symbol.Name /*SymbolDisplay.ToDisplayString(symbol)*/' propertyAliasToRename' propertyRenamed);                          break;                      // that one causes all sorts of issues with references to Umbraco.Core in Roslyn                      //case "Umbraco.Core.Models.PublishedContent.PublishedContentModelAttribute":                      //    var contentAliasToRename = (string)attrData.ConstructorArguments[0].Value;                      //    disco.SetRenamedContent(contentAliasToRename' symbol.Name /*SymbolDisplay.ToDisplayString(symbol)*/);                      //    break;                      case "Umbraco.ModelsBuilder.ImplementContentTypeAttribute":                          var contentAliasToRename = (string)attrData.ConstructorArguments[0].Value;                          disco.SetRenamedContent(contentAliasToRename' symbol.Name' true /*SymbolDisplay.ToDisplayString(symbol)*/);                          break;                  }
Missing Default,Umbraco.ModelsBuilder.Building,CodeParser,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\CodeParser.cs,ParsePropertySymbols,The following switch statement is missing a default case: switch (attrClassName)                  {                      case "Umbraco.ModelsBuilder.ImplementPropertyTypeAttribute":                          var propertyAliasToIgnore = (string)attrData.ConstructorArguments[0].Value;                          disco.SetIgnoredProperty(classSymbol.Name /*SymbolDisplay.ToDisplayString(classSymbol)*/' propertyAliasToIgnore);                          break;                  }
Missing Default,Umbraco.ModelsBuilder.Building,CodeParser,C:\repos\zpqrtbnk_Zbu.ModelsBuilder\Umbraco.ModelsBuilder\Building\CodeParser.cs,ParseAssemblySymbols,The following switch statement is missing a default case: switch (attrClassName)                  {                      case "Umbraco.ModelsBuilder.IgnoreContentTypeAttribute":                          var contentAliasToIgnore = (string)attrData.ConstructorArguments[0].Value;                          // see notes in IgnoreContentTypeAttribute                          //var ignoreContent = (bool)attrData.ConstructorArguments[1].Value;                          //var ignoreMixin = (bool)attrData.ConstructorArguments[1].Value;                          //var ignoreMixinProperties = (bool)attrData.ConstructorArguments[1].Value;                          disco.SetIgnoredContent(contentAliasToIgnore /*' ignoreContent' ignoreMixin' ignoreMixinProperties*/);                          break;                        case "Umbraco.ModelsBuilder.RenameContentTypeAttribute":                          var contentAliasToRename = (string) attrData.ConstructorArguments[0].Value;                          var contentRenamed = (string)attrData.ConstructorArguments[1].Value;                          disco.SetRenamedContent(contentAliasToRename' contentRenamed' false);                          break;                        case "Umbraco.ModelsBuilder.ModelsBaseClassAttribute":                          var modelsBaseClass = (INamedTypeSymbol) attrData.ConstructorArguments[0].Value;                          if (modelsBaseClass is IErrorTypeSymbol)                              throw new Exception($"Invalid base class type \"{modelsBaseClass.Name}\".");                          disco.SetModelsBaseClassName(SymbolDisplay.ToDisplayString(modelsBaseClass));                          break;                        case "Umbraco.ModelsBuilder.ModelsNamespaceAttribute":                          var modelsNamespace= (string) attrData.ConstructorArguments[0].Value;                          disco.SetModelsNamespace(modelsNamespace);                          break;                        case "Umbraco.ModelsBuilder.ModelsUsingAttribute":                          var usingNamespace = (string)attrData.ConstructorArguments[0].Value;                          disco.SetUsingNamespace(usingNamespace);                          break;                  }
