Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BingWallpaper,BingInteractionAndParsing,C:\repos\BlythMeister_BingImageDowload\src\BingInteractionAndParsing.cs,DownloadAndSaveImage,Cyclomatic complexity of the method is 12
Long Statement,BingWallpaper,BingInteractionAndParsing,C:\repos\BlythMeister_BingImageDowload\src\BingInteractionAndParsing.cs,GetBingImages,The length of the statement  "					ConsoleWriter.WriteLine (1' "Image for: '{0}' on {1}-{2} index {3} was: {4}"' country.Name' xmlNode.SelectSingleNode ("startdate").InnerText' xmlNode.SelectSingleNode ("enddate").InnerText' currentIndex' imageUrl); " is 214.
Long Statement,BingWallpaper,SetupAndTearDown,C:\repos\BlythMeister_BingImageDowload\src\SetupAndTearDown.cs,Startup,The length of the statement  "	ConsoleWriter.SetupLogWriter (Path.Combine (logPath' String.Format ("Log-{0}.txt"' DateTime.UtcNow.ToString ("yyyy-MM-dd")))); " is 126.
Long Statement,BingWallpaper,SetupAndTearDown,C:\repos\BlythMeister_BingImageDowload\src\SetupAndTearDown.cs,Startup,The length of the statement  "	BingInteractionAndParsing.UrlsRetrieved.AddRange (Serializer.Deserialize<List<string>> (Path.Combine (Program.AppData' "urlsRetrieved.bin"))); " is 142.
Long Statement,BingWallpaper,SetupAndTearDown,C:\repos\BlythMeister_BingImageDowload\src\SetupAndTearDown.cs,Startup,The length of the statement  "	BingInteractionAndParsing.Countries.AddRange (CultureInfo.GetCultures (CultureTypes.AllCultures).Where (x => x.Name.Contains ("-") && x.Name.Length == 5)); " is 155.
Long Statement,BingWallpaper,SetupAndTearDown,C:\repos\BlythMeister_BingImageDowload\src\SetupAndTearDown.cs,Startup,The length of the statement  "	ImageHashing.HistogramHashTable.AddRange (Serializer.Deserialize<List<HistogramHash>> (Path.Combine (Program.AppData' "imageHistogram.bin"))); " is 142.
Long Statement,BingWallpaper,SetupAndTearDown,C:\repos\BlythMeister_BingImageDowload\src\SetupAndTearDown.cs,HashExistingImages,The length of the statement  "		foreach (var file in Directory.GetFiles (Program.SavePath' "*.jpg").Where (x => !ImageHashing.HaveFilePathInHashTable (x))) { " is 125.
Long Statement,BingWallpaper,SetupAndTearDown,C:\repos\BlythMeister_BingImageDowload\src\SetupAndTearDown.cs,HashExistingImages,The length of the statement  "			foreach (var file in Directory.GetFiles (archivePath' "*.jpg").Where (x => !ImageHashing.HaveFilePathInHashTable (x))) { " is 120.
Empty Catch Block,BingWallpaper,Serializer,C:\repos\BlythMeister_BingImageDowload\src\Serializer.cs,Deserialize,The method has an empty catch block.
Empty Catch Block,BingWallpaper,SetupAndTearDown,C:\repos\BlythMeister_BingImageDowload\src\SetupAndTearDown.cs,ArchiveOldImages,The method has an empty catch block.
Magic Number,BingWallpaper,BingInteractionAndParsing,C:\repos\BlythMeister_BingImageDowload\src\BingInteractionAndParsing.cs,DownloadAndSaveImage,The following statement contains a magic number: if (UrlsRetrieved.Contains (fileurl)) {  	ConsoleWriter.WriteLine (2' "Already Dowloaded Image URL");  	return false;  }  
Magic Number,BingWallpaper,BingInteractionAndParsing,C:\repos\BlythMeister_BingImageDowload\src\BingInteractionAndParsing.cs,DownloadAndSaveImage,The following statement contains a magic number: ConsoleWriter.WriteLine (2' "Already Dowloaded Image URL");  
Magic Number,BingWallpaper,BingInteractionAndParsing,C:\repos\BlythMeister_BingImageDowload\src\BingInteractionAndParsing.cs,DownloadAndSaveImage,The following statement contains a magic number: using (var fileWebResponse = fileWebRequest.GetResponse ()) {  	using (var tempStream = File.Create (tempfilename)) {  		var buffer = new byte[1024];  		using (var fileStream = fileWebResponse.GetResponseStream ()) {  			int bytesRead;  			do {  				bytesRead = fileStream.Read (buffer' 0' buffer.Length);  				tempStream.Write (buffer' 0' bytesRead);  			}  			while (bytesRead > 0);  		}  	}  }  
Magic Number,BingWallpaper,BingInteractionAndParsing,C:\repos\BlythMeister_BingImageDowload\src\BingInteractionAndParsing.cs,DownloadAndSaveImage,The following statement contains a magic number: using (var tempStream = File.Create (tempfilename)) {  	var buffer = new byte[1024];  	using (var fileStream = fileWebResponse.GetResponseStream ()) {  		int bytesRead;  		do {  			bytesRead = fileStream.Read (buffer' 0' buffer.Length);  			tempStream.Write (buffer' 0' bytesRead);  		}  		while (bytesRead > 0);  	}  }  
Magic Number,BingWallpaper,BingInteractionAndParsing,C:\repos\BlythMeister_BingImageDowload\src\BingInteractionAndParsing.cs,DownloadAndSaveImage,The following statement contains a magic number: ConsoleWriter.WriteLine (2' "Downloaded Image' Checking If Duplicate");  
Magic Number,BingWallpaper,BingInteractionAndParsing,C:\repos\BlythMeister_BingImageDowload\src\BingInteractionAndParsing.cs,DownloadAndSaveImage,The following statement contains a magic number: if (!ImageHashing.ImageInHash (tempfilename) && !File.Exists (filePath)) {  	newImage = true;  	ConsoleWriter.WriteLine (3' "Found New Image");  	using (var srcImg = Image.FromFile (tempfilename)) {  		ImagePropertyHandling.SetTitleOnImage (xmlNode' srcImg);  		srcImg.Save (filePath);  	}  	ImageHashing.AddHash (filePath);  }  else {  	ConsoleWriter.WriteLine (3' "Identical Image Downloaded");  }  
Magic Number,BingWallpaper,BingInteractionAndParsing,C:\repos\BlythMeister_BingImageDowload\src\BingInteractionAndParsing.cs,DownloadAndSaveImage,The following statement contains a magic number: if (!ImageHashing.ImageInHash (tempfilename) && !File.Exists (filePath)) {  	newImage = true;  	ConsoleWriter.WriteLine (3' "Found New Image");  	using (var srcImg = Image.FromFile (tempfilename)) {  		ImagePropertyHandling.SetTitleOnImage (xmlNode' srcImg);  		srcImg.Save (filePath);  	}  	ImageHashing.AddHash (filePath);  }  else {  	ConsoleWriter.WriteLine (3' "Identical Image Downloaded");  }  
Magic Number,BingWallpaper,BingInteractionAndParsing,C:\repos\BlythMeister_BingImageDowload\src\BingInteractionAndParsing.cs,DownloadAndSaveImage,The following statement contains a magic number: ConsoleWriter.WriteLine (3' "Found New Image");  
Magic Number,BingWallpaper,BingInteractionAndParsing,C:\repos\BlythMeister_BingImageDowload\src\BingInteractionAndParsing.cs,DownloadAndSaveImage,The following statement contains a magic number: ConsoleWriter.WriteLine (3' "Identical Image Downloaded");  
Magic Number,BingWallpaper,ConsoleWriter,C:\repos\BlythMeister_BingImageDowload\src\ConsoleWriter.cs,WriteException,The following statement contains a magic number: if (exception.InnerException != null && calls < 5) {  	WriteException (text' exception.InnerException' calls + 1);  }  
Magic Number,BingWallpaper,Program,C:\repos\BlythMeister_BingImageDowload\src\Program.cs,Main,The following statement contains a magic number: try {  	SetupAndTearDown.Startup ();  	BingInteractionAndParsing.GetBingImages ();  }  catch (Exception e) {  	ConsoleWriter.WriteLine ("Error: {0}"' e.Message);  	throw;  }  finally {  	Thread.Sleep (TimeSpan.FromSeconds (30));  	SetupAndTearDown.Finish ();  }  
Magic Number,BingWallpaper,Program,C:\repos\BlythMeister_BingImageDowload\src\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (TimeSpan.FromSeconds (30));  
Magic Number,BingWallpaper,SetupAndTearDown,C:\repos\BlythMeister_BingImageDowload\src\SetupAndTearDown.cs,Startup,The following statement contains a magic number: BingInteractionAndParsing.Countries.AddRange (CultureInfo.GetCultures (CultureTypes.AllCultures).Where (x => x.Name.Contains ("-") && x.Name.Length == 5));  
Magic Number,BingWallpaper,SetupAndTearDown,C:\repos\BlythMeister_BingImageDowload\src\SetupAndTearDown.cs,HashExistingImages,The following statement contains a magic number: try {  	foreach (var file in Directory.GetFiles (Program.SavePath' "*.jpg").Where (x => !ImageHashing.HaveFilePathInHashTable (x))) {  		ConsoleWriter.WriteLine ("Hashing file: {0}"' file);  		ImageHashing.AddHash (file);  	}  	var preventArchiveDupes = bool.Parse (ConfigurationManager.AppSettings ["PreventDuplicatesInArchive"]);  	if (preventArchiveDupes) {  		var archivePath = Path.Combine (Program.SavePath' "Archive");  		if (!Directory.Exists (archivePath))  			Directory.CreateDirectory (archivePath);  		foreach (var file in Directory.GetFiles (archivePath' "*.jpg").Where (x => !ImageHashing.HaveFilePathInHashTable (x))) {  			ConsoleWriter.WriteLine ("Hashing file: {0}"' file);  			ImageHashing.AddHash (file);  		}  	}  }  catch (Exception) {  	if (retryCount < 5) {  		HashExistingImages (retryCount + 1);  	}  	else {  		throw;  	}  }  
Magic Number,BingWallpaper,SetupAndTearDown,C:\repos\BlythMeister_BingImageDowload\src\SetupAndTearDown.cs,HashExistingImages,The following statement contains a magic number: if (retryCount < 5) {  	HashExistingImages (retryCount + 1);  }  else {  	throw;  }  
Magic Number,BingWallpaper,SetupAndTearDown,C:\repos\BlythMeister_BingImageDowload\src\SetupAndTearDown.cs,ClearLogFiles,The following statement contains a magic number: foreach (var file in Directory.GetFiles (logPath)) {  	var fileInfo = new FileInfo (file);  	if (fileInfo.LastAccessTimeUtc < DateTime.UtcNow.AddDays (-28)) {  		try {  			fileInfo.Delete ();  		}  		catch (Exception exception) {  			ConsoleWriter.WriteLine ("Error clearing a log file"' exception);  		}  	}  }  
Magic Number,BingWallpaper,SetupAndTearDown,C:\repos\BlythMeister_BingImageDowload\src\SetupAndTearDown.cs,ClearLogFiles,The following statement contains a magic number: if (fileInfo.LastAccessTimeUtc < DateTime.UtcNow.AddDays (-28)) {  	try {  		fileInfo.Delete ();  	}  	catch (Exception exception) {  		ConsoleWriter.WriteLine ("Error clearing a log file"' exception);  	}  }  
