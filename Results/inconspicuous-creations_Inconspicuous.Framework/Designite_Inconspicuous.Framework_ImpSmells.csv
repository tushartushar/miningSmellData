Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Inconspicuous.Framework,Container,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\Container.cs,Register,Cyclomatic complexity of the method is 9
Complex Method,Inconspicuous.Framework,Container,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\Container.cs,RegisterDecorator,Cyclomatic complexity of the method is 7
Complex Method,System.Collections.Specialized,NotifyCollectionChangedEventArgs,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\ViewModel\NotifyCollectionChangedEventArgs.cs,NotifyCollectionChangedEventArgs,Cyclomatic complexity of the method is 7
Long Parameter List,System.Collections.Specialized,NotifyCollectionChangedEventArgs,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\ViewModel\NotifyCollectionChangedEventArgs.cs,NotifyCollectionChangedEventArgs,The method has 4 parameters.
Long Parameter List,System.Collections.Specialized,NotifyCollectionChangedEventArgs,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\ViewModel\NotifyCollectionChangedEventArgs.cs,NotifyCollectionChangedEventArgs,The method has 4 parameters.
Long Parameter List,System.Collections.Specialized,NotifyCollectionChangedEventArgs,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\ViewModel\NotifyCollectionChangedEventArgs.cs,NotifyCollectionChangedEventArgs,The method has 4 parameters.
Long Parameter List,System.Collections.Specialized,NotifyCollectionChangedEventArgs,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\ViewModel\NotifyCollectionChangedEventArgs.cs,NotifyCollectionChangedEventArgs,The method has 4 parameters.
Long Parameter List,System.Collections.Specialized,NotifyCollectionChangedEventArgs,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\ViewModel\NotifyCollectionChangedEventArgs.cs,NotifyCollectionChangedEventArgs,The method has 5 parameters.
Long Parameter List,System.Collections.Specialized,NotifyCollectionChangedEventArgs,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\ViewModel\NotifyCollectionChangedEventArgs.cs,InitializeMoveOrReplace,The method has 5 parameters.
Long Parameter List,System.Collections.ObjectModel,ObservableCollection,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\ViewModel\ObservableCollection.cs,OnCollectionChanged,The method has 4 parameters.
Long Parameter List,System.Collections.ObjectModel,ObservableCollection,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\ViewModel\ObservableCollection.cs,OnCollectionChanged,The method has 4 parameters.
Long Statement,Inconspicuous.Framework,PrefabGameObjectFactory,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Common\GameObjectFactory.cs,Create,The length of the statement  "			gameObject.name = string.IsNullOrEmpty (prefabGameObjectData.Name) ? prefabGameObjectData.Prefab.name : prefabGameObjectData.Name; " is 130.
Long Statement,Inconspicuous.Framework,Container,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\Container.cs,Inject,The length of the statement  "	var methods = instance.GetType ().GetMethods ().Where (m => m.GetCustomAttributes (typeof(InjectAttribute)' false).Any ()).ToList (); " is 133.
Long Statement,Inconspicuous.Framework,Context,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\Context.cs,RegisterExports,The length of the statement  "	var types = (assemblies ?? AppDomain.CurrentDomain.GetAssemblies ()).Where (x => !(x is System.Reflection.Emit.AssemblyBuilder) && x.GetType ().FullName != "System.Reflection.Emit.InternalAssemblyBuilder").SelectMany (x => x.GetExportedTypes ().Where (t => t.GetCustomAttributes (typeof(ExportAttribute)' true).Any ()).ToList ()).ToList (); " is 340.
Long Statement,Inconspicuous.Framework,Context,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\Context.cs,RegisterExports,The length of the statement  "			var isSingleton = type.GetCustomAttributes (typeof(PartCreationPolicyAttribute)' true).Any () ? type.GetCustomAttributes (typeof(PartCreationPolicyAttribute)' true).OfType<PartCreationPolicyAttribute> ().Select (p => p.CreationPolicy != CreationPolicy.NonShared).First () : true; " is 279.
Long Statement,Inconspicuous.Framework,CustomContextView,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\CustomContextView.cs,Start,The length of the statement  "				Observable.WhenAll (loadingSubContexts).Select (subContexts => subContexts.Cast<Context> ().ToArray ()).ObserveOnMainThread ().Subscribe (subContexts => { " is 154.
Long Statement,Inconspicuous.Framework,MainContext,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\MainContext.cs,Start,The length of the statement  "	container.Resolve<ICommandDispatcher> ().Dispatch (new StartCommand ()).Subscribe ().AddTo (container.Resolve<IContextView> ().GameObject); " is 139.
Long Statement,Inconspicuous.Framework,CommandDispatcher,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Controller\CommandDispatcher.cs,ResolveHandlerForCommand,The length of the statement  "	var handler = container.Resolve (typeof(ICommandHandler<' >).MakeGenericType (command.GetType ()' resultType)) as ICommandHandler; " is 130.
Long Statement,Inconspicuous.Framework,DebugCommandHandlerDecorator,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Controller\DebugCommandHandlerDecorator.cs,Handle,The length of the statement  "		return original.Handle (command).Dump ().Finally (() => UnityEngine.Debug.Log (string.Format ("{0}... stopped"' typeof(TCommand)))); " is 132.
Long Statement,Inconspicuous.Framework,QuitApplicationCommandHandler,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Controller\QuitApplicationCommand.cs,Handle,The length of the statement  "		var editorApplicationType = AppDomain.CurrentDomain.GetAssemblies ().Select (x => x.GetType ("UnityEditor.EditorApplication")).Where (x => x != null).FirstOrDefault (); " is 168.
Long Statement,Inconspicuous.Framework,UniRxExtensions,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Utility\UniRxExtensions.cs,AsObservable,The length of the statement  "	return Observable.FromEvent<PropertyChangedEventHandler' string> (x => new PropertyChangedEventHandler ((_' args) => x (args.PropertyName))' x => notifyPropertyChanged.PropertyChanged += x' x => notifyPropertyChanged.PropertyChanged -= x); " is 239.
Long Statement,Inconspicuous.Framework,UniRxExtensions,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Utility\UniRxExtensions.cs,AsObservable,The length of the statement  "	})' x => notifyPropertyChanged.PropertyChanged += x' x => notifyPropertyChanged.PropertyChanged -= x).Select (_ => selector ()); " is 128.
Long Statement,Inconspicuous.Framework,UniRxExtensions,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Utility\UniRxExtensions.cs,CollectionAsObservable,The length of the statement  "	return Observable.FromEvent<NotifyCollectionChangedEventHandler' NotifyCollectionChangedEventArgs> (x => new NotifyCollectionChangedEventHandler ((_' y) => x (y))' x => notifyCollectionChanged.CollectionChanged += x' x => notifyCollectionChanged.CollectionChanged -= x); " is 270.
Long Statement,Inconspicuous.Framework,CollectionProperty,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\ViewModel\CollectionProperty.cs,AsObservable,The length of the statement  "	return Observable.Merge (addSubject.Select (_ => this as IList<T>)' removeSubject.Select (_ => this as IList<T>)' clearSubject.Select (_ => this as IList<T>)' insertSubject.Select (_ => this as IList<T>)' removeAtSubject.Select (_ => this as IList<T>)' updateSubject.Select (_ => this as IList<T>)' Observable.Return (this as IList<T>)); " is 337.
Long Statement,Inconspicuous.Framework,ViewMediationBinder,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\View\ViewMediationBinder.cs,Mediate,The length of the statement  "		foreach (var view in rootView.GameObject.transform.GetComponentsInChildren (typeof(IView)' true).Cast<IView> ().ToArray ()) { " is 125.
Empty Catch Block,Inconspicuous.Framework,MainContext,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\MainContext.cs,MainContext,The method has an empty catch block.
Empty Catch Block,Inconspicuous.Framework,MainContext,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\MainContext.cs,Start,The method has an empty catch block.
Magic Number,Inconspicuous.Framework,ContextView,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\ContextView.cs,CheckAndRemoveDuplicate,The following statement contains a magic number: if (dupes >= 2) {  	Destroy (gameObject);  	return true;  }  
Missing Default,Inconspicuous.Framework,Container,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\Container.cs,Register,The following switch statement is missing a default case: switch (reuse) {  case Reuse.Transient:  	serviceMap [service] = () => {  		var parameters = parameterTypes.Select (t => Resolve (t)).ToArray ();  		return constructor.Invoke (parameters);  	};  	break;  case Reuse.Singleton:  	object instance = null;  	serviceMap [service] = () => {  		if (instance == null) {  			var parameters = parameterTypes.Select (t => Resolve (t)).ToArray ();  			instance = constructor.Invoke (parameters);  		}  		return instance;  	};  	break;  }  
Missing Default,Inconspicuous.Framework,Container,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\Container.cs,RegisterDecorator,The following switch statement is missing a default case: switch (reuse) {  case Reuse.Transient:  	serviceMap [service] = () => {  		var parameters = parameterTypes.Select (t => t == service ? originalFactory () : Resolve (t)).ToArray ();  		return constructor.Invoke (parameters);  	};  	break;  case Reuse.Singleton:  	object instance = null;  	serviceMap [service] = () => {  		if (instance == null) {  			var parameters = parameterTypes.Select (t => t == service ? originalFactory () : Resolve (t)).ToArray ();  			instance = constructor.Invoke (parameters);  		}  		return instance;  	};  	break;  }  
Missing Default,Inconspicuous.Framework,MacroCommandHandler,D:\newReposJune17\inconspicuous-creations_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Controller\MacroCommand.cs,Handle,The following switch statement is missing a default case: switch (command.MacroCommandType) {  case MacroCommandType.Parallel:  	var results = command.Select (c => commandDispatcher.Dispatch (c)).ToArray ();  	return Observable.WhenAll (results).ObserveOn (contextScheduler).Select (r => r.ToList () as ICollection<object>);  case MacroCommandType.Sequence:  	var queue = new ObservableQueue<object> (contextScheduler);  	queue.AddRange (command.Select (c => Observable.Defer (() => commandDispatcher.Dispatch (c))));  	return queue.Buffer (command.Count).Select (r => r.ToList () as ICollection<object>);  }  
