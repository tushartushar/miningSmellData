Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Castle.MonoRail.Extension.OData.Tests,SegmentProcessorTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentProcessorTestCase.EntityType.cs,Process,The method has 6 parameters. Parameters: fullPath' operation' model' contentType' accept' inputStream
Long Statement,Castle.MonoRail.Extension.OData.Tests,AtomServiceDocSerializerTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\AtomServiceDocSerializerTestCase.cs,OnlyWritesEntitySets_,The length of the statement  "					.AddAttribute(new EntityPropertyMappingAttribute("Name"' SyndicationItemProperty.Title' SyndicationTextContentKind.Plaintext' true)); " is 133.
Long Statement,Castle.MonoRail.Extension.OData.Tests,AtomServiceDocSerializerTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\AtomServiceDocSerializerTestCase.cs,OnlyWritesEntitySets_,The length of the statement  "			AtomServiceDocSerializer.serialize(writer' new Uri("http://localhost/app")'  new DataServiceMetadataProviderWrapper(model)' Encoding.UTF8); " is 139.
Long Statement,Castle.MonoRail.Extension.OData.Tests,SegmentProcessorTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentProcessorTestCase.EntityType.cs,EntitySet_Create_Atom_Atom_Success,The length of the statement  "<entry xml:base=""http://localhost/base/"" xmlns:d=""http://schemas.microsoft.com/ado/2007/08/dataservices"" xmlns:m=""http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"" xmlns=""http://www.w3.org/2005/Atom""> " is 222.
Long Statement,Castle.MonoRail.Extension.OData.Tests,SegmentProcessorTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentProcessorTestCase.EntityType.cs,EntitySet_WithPropMappingToTitle_View_Atom_Atom_Success,The length of the statement  "						AddAttribute(new EntityPropertyMappingAttribute("Name"' SyndicationItemProperty.Title' SyndicationTextContentKind.Xhtml' false)); " is 129.
Long Statement,Castle.MonoRail.Extension.OData.Tests,MetadataSerializerTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\MetadataSerializerTestCase.cs,EmptySet_,The length of the statement  "//  <edmx:DataServices xmlns:m=""http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"" m:DataServiceVersion=""2.0"" /> " is 129.
Long Statement,Castle.MonoRail.Extension.OData.Tests,MetadataSerializerTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\MetadataSerializerTestCase.cs,SimpleModel_,The length of the statement  "//  <edmx:DataServices xmlns:m=""http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"" m:DataServiceVersion=""2.0"" /> " is 129.
Long Statement,Castle.MonoRail.Extension.OData.Tests,MetadataSerializerTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\MetadataSerializerTestCase.cs,ModelWithRelationship_,The length of the statement  "					.AddAttribute(new EntityPropertyMappingAttribute("Name"' SyndicationItemProperty.Title' SyndicationTextContentKind.Plaintext' true)); " is 133.
Long Statement,Castle.MonoRail.Extension.OData.Tests,MetadataSerializerTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\MetadataSerializerTestCase.cs,ModelWithRelationship_,The length of the statement  "//  <edmx:DataServices xmlns:m=""http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"" m:DataServiceVersion=""2.0"" /> " is 129.
Long Statement,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntityByKey_,The length of the statement  "			Asserts.IsEntityType(segments.ElementAt(0)' Key: "1"' Name: "catalogs"' resource: model.GetResourceType("catalogs").Value); " is 123.
Long Statement,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntityByKey_2,The length of the statement  "			Asserts.IsEntityType(segments.ElementAt(0)' Key: "10"' Name: "catalogs"' resource: model.GetResourceType("catalogs").Value); " is 124.
Long Statement,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntityAndProp_,The length of the statement  "			Asserts.IsEntityType(segments.ElementAt(0)' Key: "1"' Name: "catalogs"' resource: model.GetResourceType("catalogs").Value); " is 123.
Long Statement,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntityAndProp_2,The length of the statement  "			Asserts.IsEntityType(segments.ElementAt(0)' Key: "1"' Name: "catalogs"' resource: model.GetResourceType("catalogs").Value); " is 123.
Long Statement,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntityAndPropValue_,The length of the statement  "			Asserts.IsEntityType(segments.ElementAt(0)' Key: "1"' Name: "catalogs"' resource: model.GetResourceType("catalogs").Value); " is 123.
Long Statement,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntityAndPropValue_2,The length of the statement  "			Asserts.IsEntityType(segments.ElementAt(0)' Key: "1"' Name: "catalogs"' resource: model.GetResourceType("catalogs").Value); " is 123.
Long Statement,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntity_And_OneToManyRelationship_1,The length of the statement  "			Asserts.IsEntityType(segments.ElementAt(0)' Key: "1"' Name: "catalogs"' resource: model.GetResourceType("catalogs").Value); " is 123.
Long Statement,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntity_And_OneToManyRelationship_1,The length of the statement  "			Asserts.IsPropertyCollection(segments.ElementAt(1)' Name: "Products"' resource: model.GetResourceType("products").Value); " is 121.
Long Statement,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntity_And_OneToManyRelationshipWithKey_,The length of the statement  "			Asserts.IsEntityType(segments.ElementAt(0)' Key: "1"' Name: "catalogs"' resource: model.GetResourceType("catalogs").Value); " is 123.
Long Statement,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntity_And_OneToManyRelationshipWithKey_And_Property,The length of the statement  "			Asserts.IsEntityType(segments.ElementAt(0)' Key: "1"' Name: "catalogs"' resource: model.GetResourceType("catalogs").Value); " is 123.
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentProcessorTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentProcessorTestCase.EntityType.cs,Init,The following statement contains a magic number: _product1Set = new List<Product1>  			               	{  			               		new Product1() { Id = 1' Name = "Product1" }'  								new Product1() { Id = 2' Name = "Product2" }'  			               	}.AsQueryable();
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentProcessorTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentProcessorTestCase.EntityType.cs,Init,The following statement contains a magic number: _catalog1Set = new List<Catalog1>  			               	{  			               		new Catalog1() { Id = 1' Name = "Cat1"}'   								new Catalog1() { Id = 2' Name = "Cat2" }  			               	}.AsQueryable();
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentProcessorTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentProcessorTestCase.EntityType.cs,Init,The following statement contains a magic number: _supplier1Set = new List<Supplier1>  							{  								new Supplier1() { Id = 1' Address = new Address1() { Street = "wilson ave"' Zip = "vxxxx"' Country = "canada"} }'  								new Supplier1() { Id = 2' Address = new Address1() { Street = "kingsway ave"' Zip = "zxxxx"' Country = "canada"} }'  							}.AsQueryable();
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentProcessorTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentProcessorTestCase.EntityType.cs,Process,The following statement contains a magic number: _response = new ResponseParameters(null' Encoding.UTF8' new StringWriter(_body)' 200);
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentProcessorTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentProcessorTestCase.EntityType.cs,EntitySet_View_Atom_Atom_Success,The following statement contains a magic number: feed.Items.Should().HaveCount(2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentProcessorTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentProcessorTestCase.EntityType.cs,EntitySet_WithResourceProperty_View_Atom_Atom_Success,The following statement contains a magic number: feed.Items.Should().HaveCount(2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentProcessorTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentProcessorTestCase.EntityType.cs,EntitySet_WithPropMappingToTitle_View_Atom_Atom_Success,The following statement contains a magic number: feed.Items.Should().HaveCount(2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentProcessorTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentProcessorTestCase.EntityType.cs,EntitySet_WithComplexType_View_Atom_Atom_Success,The following statement contains a magic number: feed.Items.Should().HaveCount(2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,ODataMetadataBuilderTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\ODataMetadataBuilderTestCase.cs,SingleEntityWithPrimitiveProperties_BuildsResource,The following statement contains a magic number: resType.Properties.Count.Should().Be(4);
Magic Number,Castle.MonoRail.Extension.OData.Tests,ODataMetadataBuilderTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\ODataMetadataBuilderTestCase.cs,SingleEntityWithPrimitivePropertiesAndAttributes_BuildsResource,The following statement contains a magic number: resType.Properties.Count.Should().Be(4);
Magic Number,Castle.MonoRail.Extension.OData.Tests,ODataMetadataBuilderTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\ODataMetadataBuilderTestCase.cs,SingleEntityWithComplexTypeProperty_BuildsResource,The following statement contains a magic number: resType.Properties.Count.Should().Be(2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,ODataMetadataBuilderTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\ODataMetadataBuilderTestCase.cs,SingleEntityWithComplexTypeProperty_BuildsResource,The following statement contains a magic number: address.ResourceType.Properties.Count.Should().Be(2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,ODataMetadataBuilderTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\ODataMetadataBuilderTestCase.cs,TwoEntitiesNotRelated_BuildsTwoResources,The following statement contains a magic number: result.Count().Should().Be(2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,ODataMetadataBuilderTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\ODataMetadataBuilderTestCase.cs,TwoEntitiesRelatedByDirectResourceRef_CardinalityOne_BuildsTwoResources,The following statement contains a magic number: result.Count().Should().Be(2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,ODataMetadataBuilderTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\ODataMetadataBuilderTestCase.cs,TwoEntitiesRelatedByDirectResourceRef_CardinalityMany_BuildsTwoResources,The following statement contains a magic number: result.Count().Should().Be(2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,ODataMetadataBuilderTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\ODataMetadataBuilderTestCase.cs,TwoEntitiesReferencingEachOther_CardinalityOneAndMany_BuildsTwoResources,The following statement contains a magic number: result.Count().Should().Be(2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,ODataMetadataBuilderTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\ODataMetadataBuilderTestCase.cs,ComplexType_,The following statement contains a magic number: result.Count().Should().Be(2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntityAndProp_,The following statement contains a magic number: Asserts.ExpectingSegmentsCount(segments' 2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntityAndProp_2,The following statement contains a magic number: Asserts.ExpectingSegmentsCount(segments' 2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntityAndPropValue_,The following statement contains a magic number: Asserts.ExpectingSegmentsCount(segments' 3);
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntityAndPropValue_,The following statement contains a magic number: Asserts.IsMeta_Value(segments.ElementAt(2));
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntityAndPropValue_2,The following statement contains a magic number: Asserts.ExpectingSegmentsCount(segments' 3);
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntityAndPropValue_2,The following statement contains a magic number: Asserts.IsMeta_Value(segments.ElementAt(2));
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntity_And_OneToManyRelationship_1,The following statement contains a magic number: Asserts.ExpectingSegmentsCount(segments' 2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntity_And_OneToManyRelationshipWithKey_,The following statement contains a magic number: Asserts.ExpectingSegmentsCount(segments' 2);
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntity_And_OneToManyRelationshipWithKey_And_Property,The following statement contains a magic number: Asserts.ExpectingSegmentsCount(segments' 3);
Magic Number,Castle.MonoRail.Extension.OData.Tests,SegmentParserTestCase,D:\research\architectureSmells\repos\castleproject_MonoRail\MR3\Extensions\OData\tests\Castle.MonoRail.Extension.OData.Tests\SegmentParserTestCase.cs,AccessingEntity_And_OneToManyRelationshipWithKey_And_Property,The following statement contains a magic number: Asserts.IsPropertySingle(segments.ElementAt(2)' name: "Name");
