Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NDesk.Options,Option,C:\repos\garrensmith_DrivenMetrics\lib\ndesk-options\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 9
Complex Method,NDesk.Options,OptionSet,C:\repos\garrensmith_DrivenMetrics\lib\ndesk-options\Options.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Long Parameter List,NDesk.Options,OptionSet,C:\repos\garrensmith_DrivenMetrics\lib\ndesk-options\Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Complex Conditional,NDesk.Options,Option,C:\repos\garrensmith_DrivenMetrics\lib\ndesk-options\Options.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 &&   					((names.Length == 1 && this.type != OptionValueType.None) ||  					 (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,NDesk.Options,OptionSet,C:\repos\garrensmith_DrivenMetrics\lib\ndesk-options\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length-1] == '+' || n [n.Length-1] == '-') &&  					Contains ((rn = n.Substring (0' n.Length-1)))"  is complex.
Magic Number,NDesk.Options,OptionSet,C:\repos\garrensmith_DrivenMetrics\lib\ndesk-options\Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption (prototype' description' 2'   					delegate (OptionValueCollection v) {action (v [0]' v [1]);});
Magic Number,NDesk.Options,OptionSet,C:\repos\garrensmith_DrivenMetrics\lib\ndesk-options\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: foreach (Option p in this) {  				int written = 0;  				if (!WriteOptionPrototype (o' p' ref written))  					continue;    				if (written < OptionWidth)  					o.Write (new string (' '' OptionWidth - written));  				else {  					o.WriteLine ();  					o.Write (new string (' '' OptionWidth));  				}    				List<string> lines = GetLines (localizer (GetDescription (p.Description)));  				o.WriteLine (lines [0]);  				string prefix = new string (' '' OptionWidth+2);  				for (int i = 1; i < lines.Count; ++i) {  					o.Write (prefix);  					o.WriteLine (lines [i]);  				}  			}
Magic Number,NDesk.Options,OptionSet,C:\repos\garrensmith_DrivenMetrics\lib\ndesk-options\Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Magic Number,NDesk.Options,OptionSet,C:\repos\garrensmith_DrivenMetrics\lib\ndesk-options\Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Missing Default,NDesk.Options,OptionSet,C:\repos\garrensmith_DrivenMetrics\lib\ndesk-options\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  					case OptionValueType.None:  						c.OptionValues.Add (n);  						c.Option.Invoke (c);  						break;  					case OptionValueType.Optional:  					case OptionValueType.Required:   						ParseValue (v' c);  						break;  				}
Missing Default,NDesk.Options,OptionSet,C:\repos\garrensmith_DrivenMetrics\lib\ndesk-options\Options.cs,GetLineEnd,The following switch statement is missing a default case: switch (description [i]) {  					case ' ':  					case '\t':  					case '\v':  					case '-':  					case ''':  					case '.':  					case ';':  						sep = i;  						break;  					case '\n':  						return i;  				}
