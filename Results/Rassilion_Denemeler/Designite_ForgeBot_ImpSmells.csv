Implementation smell,Namespace,Class,File,Method,Description
Long Method,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,DoSupplyClicks,The method has 101 lines of code.
Long Method,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The method has 100 lines of code.
Complex Method,ForgeBot,FoEResourceInterceptor,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\FoEResourceInterceptor.cs,ParseData,Cyclomatic complexity of the method is 12
Complex Method,ForgeBot,Program,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Program.cs,Main,Cyclomatic complexity of the method is 8
Complex Method,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,DoSupplyClicks,Cyclomatic complexity of the method is 16
Complex Method,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,TryClosePopup,Cyclomatic complexity of the method is 14
Complex Method,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,Cyclomatic complexity of the method is 13
Complex Method,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,UpdateStatus,Cyclomatic complexity of the method is 58
Complex Method,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AutoLogin,Cyclomatic complexity of the method is 9
Complex Method,ForgeBot,SettingsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\SettingsForm.cs,SettingsForm,Cyclomatic complexity of the method is 28
Complex Method,ForgeBot,SettingsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\SettingsForm.cs,ApplyCulture2Form,Cyclomatic complexity of the method is 8
Long Parameter List,ForgeBot,FastBitmapSurface,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\FastBitmapSurface.cs,CopyMemoryRectangular,The method has 7 parameters.
Long Parameter List,ForgeBot,BitmapHelper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Algorithms2D.cs,CopyTo,The method has 5 parameters.
Long Parameter List,ForgeBot,GraphicsHelper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Algorithms2D.cs,GdiDrawImage,The method has 5 parameters.
Long Parameter List,ForgeBot,GraphicsHelper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Algorithms2D.cs,GdiDrawImage2,The method has 5 parameters.
Long Parameter List,ForgeBot,GraphicsHelper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Algorithms2D.cs,GdiDrawImage3,The method has 5 parameters.
Long Parameter List,ForgeBot,GraphicsHelper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Algorithms2D.cs,NewGdiDrawImage,The method has 5 parameters.
Long Parameter List,ForgeBot,GraphicsHelper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Algorithms2D.cs,GdiDrawImage,The method has 5 parameters.
Long Parameter List,ForgeBot,GraphicsHelper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Algorithms2D.cs,GdiDrawImage,The method has 5 parameters.
Long Parameter List,ForgeBot,GraphicsHelper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Algorithms2D.cs,RenderInternal,The method has 5 parameters.
Long Parameter List,ForgeBot,GdiInterop,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\GdiInterop.cs,BitBlt,The method has 9 parameters.
Long Parameter List,ForgeBot,GdiInterop,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\GdiInterop.cs,BitBlt,The method has 9 parameters.
Long Parameter List,ForgeBot,GdiInterop,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\GdiInterop.cs,StretchBlt,The method has 11 parameters.
Long Parameter List,ForgeBot,GdiInterop,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\GdiInterop.cs,CreateDIBSection,The method has 6 parameters.
Long Parameter List,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,FindCloseButton,The method has 5 parameters.
Long Parameter List,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,SaveScanResultToFile,The method has 5 parameters.
Long Identifier,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AutoLogin,The length of the parameter maxTimeForDocumentToBecomeReady is 31.
Long Statement,ForgeBot,CachedBitmapReader,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CachedBitmapReader.cs,GetCachedBitmapBuffer,The length of the statement  "		_imageSrcPtr = GdiInterop.CreateDIBSection (_bitmapContext' _bih' (int)GdiInterop.DIBColorsType.DIB_RGB_COLORS' out _bitmapBuffer' IntPtr.Zero' 0); " is 147.
Long Statement,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The length of the statement  "				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ())); " is 380.
Long Statement,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,BuildCoordinateData,The length of the statement  "		l_Data.AppendFormat ("{0}'{1}'{2}'{3}'{4}'{5};"' pair.Key' pair.Value.m_OffsetX' pair.Value.m_OffsetY' pair.Value.timestamp' pair.Value.YStepping' pair.Value.LastClickWasSuccessful); " is 182.
Long Statement,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The length of the statement  "					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5])); " is 230.
Long Statement,ForgeBot,FastBitmapSurface,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\FastBitmapSurface.cs,Paint,The length of the statement  "	CopyMemoryRectangular (srcBuffer' _internalBuffer' srcRowSpan' _width * BytesPerPixel' srcRect' destRect' BytesPerPixel); " is 121.
Long Statement,ForgeBot,FastBitmapSurface,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\FastBitmapSurface.cs,CalculateTotalUpdatedRectangle,The length of the statement  "	_dirtyRegion = new AweRect (destRect.X < _dirtyRegion.X ? destRect.X : _dirtyRegion.X' destRect.Y < _dirtyRegion.Y ? destRect.Y : _dirtyRegion.Y' destRect.Width > _dirtyRegion.Width ? destRect.Width : _dirtyRegion.Width' destRect.Height > _dirtyRegion.Height ? destRect.Height : _dirtyRegion.Height); " is 300.
Long Statement,ForgeBot,FastBitmapSurface,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\FastBitmapSurface.cs,Scroll,The length of the statement  "	CopyMemoryRectangular (_internalBuffer' _tempScrollingBuffer' srcRowSpan' destRowSpan' srcRect' srcRect' BytesPerPixel); " is 120.
Long Statement,ForgeBot,FastBitmapSurface,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\FastBitmapSurface.cs,Scroll,The length of the statement  "	CopyMemoryRectangular (_tempScrollingBuffer' _internalBuffer' srcRowSpan' destRowSpan' srcRect' destRect' BytesPerPixel); " is 121.
Long Statement,ForgeBot,FastBitmapSurface,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\FastBitmapSurface.cs,SaveToFile,The length of the statement  "		var bitmapData = _originalImage.LockBits (new Rectangle (0' 0' _width' _height)' ImageLockMode.WriteOnly' PixelFormat.Format32bppRgb); " is 134.
Long Statement,ForgeBot,FastBitmapSurface,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\FastBitmapSurface.cs,CopyMemoryRectangular,The length of the statement  "	for (int rowSrc = startSrcY; rowSrc < srcRect.Height + startSrcY; rowSrc++)//Parallel.For(startSrcY' srcRect.Height ' (rowSrc) => " is 129.
Long Statement,ForgeBot,Logger,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Logger.cs,LogInfo,The length of the statement  "	string err = string.Format ("Message: {0}. Exception: {1}"' message ?? string.Empty' EventFormatter.FormatEvent (MethodBase.GetCurrentMethod ()' ex)); " is 150.
Long Statement,ForgeBot,Logger,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Logger.cs,LogWarning,The length of the statement  "	string err = string.Format ("Message: {0}. Exception: {1}"' message ?? string.Empty' EventFormatter.FormatEvent (MethodBase.GetCurrentMethod ()' ex)); " is 150.
Long Statement,ForgeBot,Logger,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Logger.cs,LogError,The length of the statement  "	string err = string.Format ("Message: {0}. Exception: {1}"' message ?? string.Empty' EventFormatter.FormatEvent (MethodBase.GetCurrentMethod ()' ex)); " is 150.
Long Statement,ForgeBot,GraphicsHelper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Algorithms2D.cs,GdiDrawImage,The length of the statement  "	//var locked=image.LockBits(new Rectangle(0' 0' rectangleDst.Width' rectangleDst.Height)'ImageLockMode.ReadWrite'image.PixelFormat); " is 132.
Long Statement,ForgeBot,GraphicsHelper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Algorithms2D.cs,GdiDrawImage2,The length of the statement  "	GdiInterop.BitBlt (targetDc' rectangleDst.Left' rectangleDst.Top' rectangleDst.Width' rectangleDst.Height' memdc' nXSrc' nYSrc' GdiInterop.TernaryRasterOperations.SRCCOPY); " is 172.
Long Statement,ForgeBot,GraphicsHelper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Algorithms2D.cs,GdiDrawImage3,The length of the statement  "	GdiInterop.BitBlt (targetDc' rectangleDst.Left' rectangleDst.Top' rectangleDst.Width' rectangleDst.Height' memdc' nXSrc' nYSrc' GdiInterop.TernaryRasterOperations.SRCCOPY); " is 172.
Long Statement,ForgeBot,GraphicsHelper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Algorithms2D.cs,GdiDrawImage,The length of the statement  "	GdiInterop.BitBlt (targetDc' rectangleDst.Left' rectangleDst.Top' rectangleDst.Width' rectangleDst.Height' memdc' nXSrc' nYSrc' GdiInterop.TernaryRasterOperations.SRCCOPY); " is 172.
Long Statement,ForgeBot,GraphicsHelper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Algorithms2D.cs,RenderInternal,The length of the statement  "		GdiInterop.BitBlt (refTargetDC' rectangleDst.X' rectangleDst.Y' rectangleDst.Width' rectangleDst.Height' new HandleRef (sourceBuffer' sourceDC)' nXSrc' nYSrc' (int)GdiInterop.TernaryRasterOperations.SRCCOPY); " is 208.
Long Statement,ForgeBot,MessagesForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MessagesForm.cs,ApplyFormPositionAndSize,The length of the statement  "	this.ApplyDimensions (_applicationSettings.MessageLogFormInfo.IsEmpty ? DefaultFormPositionAndSize : _applicationSettings.MessageLogFormInfo); " is 142.
Long Statement,ForgeBot,PictureScanner,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\PictureScanner.cs,MakeScreenshot,The length of the statement  "	var bitmapData = sourceImage.LockBits (new Rectangle (0' 0' _width' _height)' ImageLockMode.WriteOnly' sourceImage.PixelFormat); " is 128.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ReloadWebCore,The length of the statement  "		_aweWebSession = WebCore.CreateWebSession (String.Format ("{0}{1}Cache"' Path.GetDirectoryName (Application.ExecutablePath)' Path.DirectorySeparatorChar)' webPreferences); " is 171.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BotDoActionsThreaded,The length of the statement  "			UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_BotDoActionsThreaded_BotIdleBeforeProduction' Settings.WaitBeforeProductionInMillis / 1000)); " is 161.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BotDoActionsThreaded,The length of the statement  "	var limitWindowNotRecognized = Settings.ReloadAfterXTimesNotRecognized == 0 ? int.MaxValue : Settings.ReloadAfterXTimesNotRecognized; " is 133.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,TimeTick,The length of the statement  "	labelTimer.Text = string.Format ("Timer: {0:00}:{1:00}:{2:00}"' _countdownTimer.Hours' _countdownTimer.Minutes' _countdownTimer.Seconds); " is 137.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureContainerPaint,The length of the statement  "			FastBitmapSurface.CopyMemoryRectangular (surface.Buffer' destinationBuffer' surface.Width * 4' surface.Width * 4' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' 4); " is 315.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureContainerPaint,The length of the statement  "		GraphicsHelper.GdiDrawImage (e.Graphics' _cachedBitmap.GetSourceImageHBitmap' e.ClipRectangle' e.ClipRectangle.X' e.ClipRectangle.Y); " is 133.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,TimerPauseCountdownTick,The length of the statement  "	labelTimer.Text = string.Format ("Pause: {0:00}:{1:00}:{2:00}"' _pauseTimer.Hours' _pauseTimer.Minutes' _pauseTimer.Seconds); " is 125.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ClickMilitaryItems,The length of the statement  "		//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' startingMilitaryItemButton.X' startingMilitaryItemButton.Y)); " is 126.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,TryFindCloseButton,The length of the statement  "	var coords = FindCloseButton (image' Settings.BotPictureWidth / 2' Settings.BotPictureHeight / 2' Settings.BotPictureWidth / 2' Settings.BotPictureHeight / 2); " is 159.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The length of the statement  "				if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) { " is 404.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The length of the statement  "							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful); " is 219.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The length of the statement  "							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true); " is 173.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The length of the statement  "						if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) { " is 156.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The length of the statement  "								l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful); " is 219.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The length of the statement  "								l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true); " is 173.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The length of the statement  "						if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) { " is 166.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The length of the statement  "								l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful); " is 219.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The length of the statement  "								l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true); " is 173.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The length of the statement  "						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful); " is 219.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The length of the statement  "						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.SupplyDistanceX' Settings.SupplyDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true); " is 171.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,SaveScanResultToFile,The length of the statement  "	UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_saveScanResultToFile_Saving_scan_results_to_file' fileName)); " is 129.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ThreadedTaskExceptionHandler,The length of the statement  "	Logger.LogError ("ThreadedTaskExceptionHandler exception occured. Trying to restart ivanJo BOT thread only."' exception); " is 121.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AutoLogin,The length of the statement  "			if (((JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"login_world_id\"]")) != null) { " is 129.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AutoLogin,The length of the statement  "		dynamic formWorldId = (JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"login_world_id\"]"); " is 135.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AutoLogin,The length of the statement  "		dynamic formSubmit = (JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"submit_login\"]"); " is 132.
Long Statement,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,UpdateWindowsPosition,The length of the statement  "		Settings.MessageLogFormInfo = new Rectangle (MessageLogForm.Left' MessageLogForm.Top' MessageLogForm.Width' MessageLogForm.Height); " is 131.
Long Statement,ForgeBot,Screenshot,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Screenshot.cs,GetPixelRgb,The length of the statement  "	return (int)(((ulong)((((_rgbValues [position + 2] << 16) | (_rgbValues [position + 1] << 8)) | _rgbValues [position]) | (0xFF << 0x18))) & 0xffffffffL); " is 153.
Long Statement,ForgeBot,Screenshot,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Screenshot.cs,GetPixelRgb,The length of the statement  "	//return Color.FromArgb(_rgbValues[position + 3]'_rgbValues[position + 2]' _rgbValues[position + 1]' _rgbValues[position]).ToArgb(); " is 132.
Long Statement,ForgeBot,SettingsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\SettingsForm.cs,buttonSave_Click,The length of the statement  "	if (_oldSupplyDistanceY != _settings.SupplyDistanceY || _oldSupplyDistanceX != _settings.SupplyDistanceX || _oldCollectDistanceY != _settings.CollectDistanceY) " is 159.
Long Statement,ForgeBot.Diagnostics,EventFormatter,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\EventFormatter.cs,FormatEvent,The length of the statement  "	return string.Format (CultureInfo.CurrentCulture' EventLogMessageFormat' memberInfo.ToString ()' memberInfo.ReflectedType.ToString ()' message); " is 144.
Long Statement,ForgeBot.Diagnostics,EventFormatter,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\EventFormatter.cs,FormatEvent,The length of the statement  "	return string.Format (CultureInfo.CurrentCulture' EventLogFormat' exception.Message' memberInfo.ReflectedType.ToString ()' memberInfo.ToString ()' exception.Source ?? string.Empty' exception.TargetSite == null ? string.Empty : exception.TargetSite.ToString ()' exception.StackTrace ?? string.Empty); " is 299.
Long Statement,ForgeBot.Diagnostics,EventFormatter,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\EventFormatter.cs,FormatEvent,The length of the statement  "	return string.Format (CultureInfo.CurrentCulture' EventLogFaultContractFormat' exception.Message' stackFrame.GetMethod ().ReflectedType.FullName' stackFrame.GetMethod ().Name' guid.ToString ()' exception.Source.ToString ()' exception.TargetSite.ToString ()' exception.StackTrace.ToString ()); " is 292.
Long Statement,ForgeBot.Diagnostics,EventFormatter,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\EventFormatter.cs,FormatError,The length of the statement  "		return string.Format (CultureInfo.CurrentCulture' ErrorMessageFormat' memberInfo.ReflectedType.ToString ()' memberInfo.ToString ()' errorMessage' errorSource); " is 159.
Long Statement,ForgeBot.Diagnostics,EventFormatter,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\EventFormatter.cs,FormatError,The length of the statement  "		return string.Format (CultureInfo.CurrentCulture' ErrorSourceFormat' memberInfo.ReflectedType.ToString ()' memberInfo.ToString ()' errorSource); " is 144.
Complex Conditional,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsInputKey,The conditional expression  "keyData == Keys.Right || keyData == Keys.Left || keyData == Keys.Up || keyData == Keys.Down"  is complex.
Complex Conditional,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The conditional expression  "image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])"  is complex.
Complex Conditional,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ResizeView,The conditional expression  "(_aweWebView == null) || !_aweWebView.IsLive || _formIsResizing || !_isViewUserFriendly"  is complex.
Empty Catch Block,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The method has an empty catch block.
Empty Catch Block,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,saveDataToSettings,The method has an empty catch block.
Empty Catch Block,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The method has an empty catch block.
Empty Catch Block,ForgeBot,Program,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Program.cs,Check4BSOD,The method has an empty catch block.
Empty Catch Block,ForgeBot,Program,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Program.cs,Check4BSOD,The method has an empty catch block.
Empty Catch Block,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureBox2Click,The method has an empty catch block.
Empty Catch Block,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AutoLogin,The method has an empty catch block.
Magic Number,ForgeBot,CachedBitmapReader,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CachedBitmapReader.cs,GetCachedBitmapBuffer,The following statement contains a magic number: if (_imageSrcPtr == IntPtr.Zero) {  	_width = width;  	_height = height;  	_bih = new GdiInterop.BITMAPINFO ();  	_bih.biSize = 40;  	_bih.biBitCount = 32;  	_bih.biCompression = (int)GdiInterop.BICompressionType.BI_RGB;  	_bih.biPlanes = 1;  	_bih.biWidth = width;  	_bih.biHeight = -height;  	// fixes problem with vertical flip (the way image is copied)  	// creates HBitmap object  	_imageSrcPtr = GdiInterop.CreateDIBSection (_bitmapContext' _bih' (int)GdiInterop.DIBColorsType.DIB_RGB_COLORS' out _bitmapBuffer' IntPtr.Zero' 0);  }  
Magic Number,ForgeBot,CachedBitmapReader,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CachedBitmapReader.cs,GetCachedBitmapBuffer,The following statement contains a magic number: if (_imageSrcPtr == IntPtr.Zero) {  	_width = width;  	_height = height;  	_bih = new GdiInterop.BITMAPINFO ();  	_bih.biSize = 40;  	_bih.biBitCount = 32;  	_bih.biCompression = (int)GdiInterop.BICompressionType.BI_RGB;  	_bih.biPlanes = 1;  	_bih.biWidth = width;  	_bih.biHeight = -height;  	// fixes problem with vertical flip (the way image is copied)  	// creates HBitmap object  	_imageSrcPtr = GdiInterop.CreateDIBSection (_bitmapContext' _bih' (int)GdiInterop.DIBColorsType.DIB_RGB_COLORS' out _bitmapBuffer' IntPtr.Zero' 0);  }  
Magic Number,ForgeBot,CachedBitmapReader,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CachedBitmapReader.cs,GetCachedBitmapBuffer,The following statement contains a magic number: _bih.biSize = 40;  
Magic Number,ForgeBot,CachedBitmapReader,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CachedBitmapReader.cs,GetCachedBitmapBuffer,The following statement contains a magic number: _bih.biBitCount = 32;  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: try {  	//Save  	ItemCollection l_ItemCollection = ItemCollection.Instance;  	l_ItemCollection.Items.Clear ();  	string l_CoordinateString;  	//Format xxxxyyyy  	for (int i = 0; i < dataGridView1.Rows.Count; i++) {  		//ItemCollection.Item l_Item = new ItemCollection.Item();  		if (dataGridView1.Rows [i].Cells [0].Value != null) {  			l_CoordinateString = dataGridView1.Rows [i].Cells [0].Value.ToString ();  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  		}  		else {  			break;  		}  	}  	saveDataToSettings ();  }  catch (Exception) {  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: try {  	//Save  	ItemCollection l_ItemCollection = ItemCollection.Instance;  	l_ItemCollection.Items.Clear ();  	string l_CoordinateString;  	//Format xxxxyyyy  	for (int i = 0; i < dataGridView1.Rows.Count; i++) {  		//ItemCollection.Item l_Item = new ItemCollection.Item();  		if (dataGridView1.Rows [i].Cells [0].Value != null) {  			l_CoordinateString = dataGridView1.Rows [i].Cells [0].Value.ToString ();  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  		}  		else {  			break;  		}  	}  	saveDataToSettings ();  }  catch (Exception) {  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: try {  	//Save  	ItemCollection l_ItemCollection = ItemCollection.Instance;  	l_ItemCollection.Items.Clear ();  	string l_CoordinateString;  	//Format xxxxyyyy  	for (int i = 0; i < dataGridView1.Rows.Count; i++) {  		//ItemCollection.Item l_Item = new ItemCollection.Item();  		if (dataGridView1.Rows [i].Cells [0].Value != null) {  			l_CoordinateString = dataGridView1.Rows [i].Cells [0].Value.ToString ();  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  		}  		else {  			break;  		}  	}  	saveDataToSettings ();  }  catch (Exception) {  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: try {  	//Save  	ItemCollection l_ItemCollection = ItemCollection.Instance;  	l_ItemCollection.Items.Clear ();  	string l_CoordinateString;  	//Format xxxxyyyy  	for (int i = 0; i < dataGridView1.Rows.Count; i++) {  		//ItemCollection.Item l_Item = new ItemCollection.Item();  		if (dataGridView1.Rows [i].Cells [0].Value != null) {  			l_CoordinateString = dataGridView1.Rows [i].Cells [0].Value.ToString ();  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  		}  		else {  			break;  		}  	}  	saveDataToSettings ();  }  catch (Exception) {  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: for (int i = 0; i < dataGridView1.Rows.Count; i++) {  	//ItemCollection.Item l_Item = new ItemCollection.Item();  	if (dataGridView1.Rows [i].Cells [0].Value != null) {  		l_CoordinateString = dataGridView1.Rows [i].Cells [0].Value.ToString ();  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  	}  	else {  		break;  	}  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: for (int i = 0; i < dataGridView1.Rows.Count; i++) {  	//ItemCollection.Item l_Item = new ItemCollection.Item();  	if (dataGridView1.Rows [i].Cells [0].Value != null) {  		l_CoordinateString = dataGridView1.Rows [i].Cells [0].Value.ToString ();  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  	}  	else {  		break;  	}  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: for (int i = 0; i < dataGridView1.Rows.Count; i++) {  	//ItemCollection.Item l_Item = new ItemCollection.Item();  	if (dataGridView1.Rows [i].Cells [0].Value != null) {  		l_CoordinateString = dataGridView1.Rows [i].Cells [0].Value.ToString ();  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  	}  	else {  		break;  	}  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: for (int i = 0; i < dataGridView1.Rows.Count; i++) {  	//ItemCollection.Item l_Item = new ItemCollection.Item();  	if (dataGridView1.Rows [i].Cells [0].Value != null) {  		l_CoordinateString = dataGridView1.Rows [i].Cells [0].Value.ToString ();  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  	}  	else {  		break;  	}  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: if (dataGridView1.Rows [i].Cells [0].Value != null) {  	l_CoordinateString = dataGridView1.Rows [i].Cells [0].Value.ToString ();  	l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  }  else {  	break;  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: if (dataGridView1.Rows [i].Cells [0].Value != null) {  	l_CoordinateString = dataGridView1.Rows [i].Cells [0].Value.ToString ();  	l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  }  else {  	break;  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: if (dataGridView1.Rows [i].Cells [0].Value != null) {  	l_CoordinateString = dataGridView1.Rows [i].Cells [0].Value.ToString ();  	l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  }  else {  	break;  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: if (dataGridView1.Rows [i].Cells [0].Value != null) {  	l_CoordinateString = dataGridView1.Rows [i].Cells [0].Value.ToString ();  	l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  }  else {  	break;  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,CoordsForm_FormClosing,The following statement contains a magic number: l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (dataGridView1.Rows [i].Cells [1].Value.ToString ())' int.Parse (dataGridView1.Rows [i].Cells [2].Value.ToString ())' dataGridView1.Rows [i].Cells [5].Value.ToString ()' int.Parse (dataGridView1.Rows [i].Cells [3].Value.ToString ())' bool.Parse (dataGridView1.Rows [i].Cells [4].Value.ToString ()));  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,loadData,The following statement contains a magic number: foreach (KeyValuePair<string' ItemCollection.Item> pair in l_ItemCollection.Items) {  	l_Index = dataGridView1.Rows.Add ();  	dataGridView1.Rows [l_Index].Cells [0].Value = pair.Key;  	dataGridView1.Rows [l_Index].Cells [1].Value = pair.Value.m_OffsetX;  	dataGridView1.Rows [l_Index].Cells [2].Value = pair.Value.m_OffsetY;  	dataGridView1.Rows [l_Index].Cells [5].Value = pair.Value.timestamp;  	dataGridView1.Rows [l_Index].Cells [3].Value = pair.Value.YStepping;  	dataGridView1.Rows [l_Index].Cells [4].Value = pair.Value.LastClickWasSuccessful;  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,loadData,The following statement contains a magic number: foreach (KeyValuePair<string' ItemCollection.Item> pair in l_ItemCollection.Items) {  	l_Index = dataGridView1.Rows.Add ();  	dataGridView1.Rows [l_Index].Cells [0].Value = pair.Key;  	dataGridView1.Rows [l_Index].Cells [1].Value = pair.Value.m_OffsetX;  	dataGridView1.Rows [l_Index].Cells [2].Value = pair.Value.m_OffsetY;  	dataGridView1.Rows [l_Index].Cells [5].Value = pair.Value.timestamp;  	dataGridView1.Rows [l_Index].Cells [3].Value = pair.Value.YStepping;  	dataGridView1.Rows [l_Index].Cells [4].Value = pair.Value.LastClickWasSuccessful;  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,loadData,The following statement contains a magic number: foreach (KeyValuePair<string' ItemCollection.Item> pair in l_ItemCollection.Items) {  	l_Index = dataGridView1.Rows.Add ();  	dataGridView1.Rows [l_Index].Cells [0].Value = pair.Key;  	dataGridView1.Rows [l_Index].Cells [1].Value = pair.Value.m_OffsetX;  	dataGridView1.Rows [l_Index].Cells [2].Value = pair.Value.m_OffsetY;  	dataGridView1.Rows [l_Index].Cells [5].Value = pair.Value.timestamp;  	dataGridView1.Rows [l_Index].Cells [3].Value = pair.Value.YStepping;  	dataGridView1.Rows [l_Index].Cells [4].Value = pair.Value.LastClickWasSuccessful;  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,loadData,The following statement contains a magic number: foreach (KeyValuePair<string' ItemCollection.Item> pair in l_ItemCollection.Items) {  	l_Index = dataGridView1.Rows.Add ();  	dataGridView1.Rows [l_Index].Cells [0].Value = pair.Key;  	dataGridView1.Rows [l_Index].Cells [1].Value = pair.Value.m_OffsetX;  	dataGridView1.Rows [l_Index].Cells [2].Value = pair.Value.m_OffsetY;  	dataGridView1.Rows [l_Index].Cells [5].Value = pair.Value.timestamp;  	dataGridView1.Rows [l_Index].Cells [3].Value = pair.Value.YStepping;  	dataGridView1.Rows [l_Index].Cells [4].Value = pair.Value.LastClickWasSuccessful;  }  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,loadData,The following statement contains a magic number: dataGridView1.Rows [l_Index].Cells [2].Value = pair.Value.m_OffsetY;  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,loadData,The following statement contains a magic number: dataGridView1.Rows [l_Index].Cells [5].Value = pair.Value.timestamp;  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,loadData,The following statement contains a magic number: dataGridView1.Rows [l_Index].Cells [3].Value = pair.Value.YStepping;  
Magic Number,ForgeBot,CoordsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\CoordsForm.cs,loadData,The following statement contains a magic number: dataGridView1.Rows [l_Index].Cells [4].Value = pair.Value.LastClickWasSuccessful;  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,PurgeOldItems,The following statement contains a magic number: foreach (KeyValuePair<string' ItemCollection.Item> pair in ItemCollection.Instance.Items) {  	var ts = new TimeSpan (now.Ticks - long.Parse (pair.Value.timestamp));  	if (ts.TotalDays > 30)  		keysToDelete.Add (pair.Key);  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,PurgeOldItems,The following statement contains a magic number: if (ts.TotalDays > 30)  	keysToDelete.Add (pair.Key);  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: try {  	ItemCollection l_ItemCollection = ItemCollection.Instance;  	string l_CoordinateString;  	//Format xxxxyyyy  	string[] l_CoordinatesData = settingsCoordinateData.Split (';');  	string[] l_CoordinateData = l_CoordinatesData [0].Split (''');  	for (int i = 0; i < l_CoordinatesData.Length; i++) {  		ItemCollection.Item l_Item = new ItemCollection.Item ();  		l_CoordinateData = l_CoordinatesData [i].Split (''');  		if (l_CoordinateData.Length >= 6) {  			l_CoordinateString = l_CoordinateData [0];  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				//Item already loaded  			}  			else {  				//New item  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  			}  		}  	}  }  catch (Exception) {  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: try {  	ItemCollection l_ItemCollection = ItemCollection.Instance;  	string l_CoordinateString;  	//Format xxxxyyyy  	string[] l_CoordinatesData = settingsCoordinateData.Split (';');  	string[] l_CoordinateData = l_CoordinatesData [0].Split (''');  	for (int i = 0; i < l_CoordinatesData.Length; i++) {  		ItemCollection.Item l_Item = new ItemCollection.Item ();  		l_CoordinateData = l_CoordinatesData [i].Split (''');  		if (l_CoordinateData.Length >= 6) {  			l_CoordinateString = l_CoordinateData [0];  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				//Item already loaded  			}  			else {  				//New item  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  			}  		}  	}  }  catch (Exception) {  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: try {  	ItemCollection l_ItemCollection = ItemCollection.Instance;  	string l_CoordinateString;  	//Format xxxxyyyy  	string[] l_CoordinatesData = settingsCoordinateData.Split (';');  	string[] l_CoordinateData = l_CoordinatesData [0].Split (''');  	for (int i = 0; i < l_CoordinatesData.Length; i++) {  		ItemCollection.Item l_Item = new ItemCollection.Item ();  		l_CoordinateData = l_CoordinatesData [i].Split (''');  		if (l_CoordinateData.Length >= 6) {  			l_CoordinateString = l_CoordinateData [0];  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				//Item already loaded  			}  			else {  				//New item  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  			}  		}  	}  }  catch (Exception) {  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: try {  	ItemCollection l_ItemCollection = ItemCollection.Instance;  	string l_CoordinateString;  	//Format xxxxyyyy  	string[] l_CoordinatesData = settingsCoordinateData.Split (';');  	string[] l_CoordinateData = l_CoordinatesData [0].Split (''');  	for (int i = 0; i < l_CoordinatesData.Length; i++) {  		ItemCollection.Item l_Item = new ItemCollection.Item ();  		l_CoordinateData = l_CoordinatesData [i].Split (''');  		if (l_CoordinateData.Length >= 6) {  			l_CoordinateString = l_CoordinateData [0];  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				//Item already loaded  			}  			else {  				//New item  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  			}  		}  	}  }  catch (Exception) {  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: try {  	ItemCollection l_ItemCollection = ItemCollection.Instance;  	string l_CoordinateString;  	//Format xxxxyyyy  	string[] l_CoordinatesData = settingsCoordinateData.Split (';');  	string[] l_CoordinateData = l_CoordinatesData [0].Split (''');  	for (int i = 0; i < l_CoordinatesData.Length; i++) {  		ItemCollection.Item l_Item = new ItemCollection.Item ();  		l_CoordinateData = l_CoordinatesData [i].Split (''');  		if (l_CoordinateData.Length >= 6) {  			l_CoordinateString = l_CoordinateData [0];  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				//Item already loaded  			}  			else {  				//New item  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  			}  		}  	}  }  catch (Exception) {  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: for (int i = 0; i < l_CoordinatesData.Length; i++) {  	ItemCollection.Item l_Item = new ItemCollection.Item ();  	l_CoordinateData = l_CoordinatesData [i].Split (''');  	if (l_CoordinateData.Length >= 6) {  		l_CoordinateString = l_CoordinateData [0];  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item already loaded  		}  		else {  			//New item  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  		}  	}  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: for (int i = 0; i < l_CoordinatesData.Length; i++) {  	ItemCollection.Item l_Item = new ItemCollection.Item ();  	l_CoordinateData = l_CoordinatesData [i].Split (''');  	if (l_CoordinateData.Length >= 6) {  		l_CoordinateString = l_CoordinateData [0];  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item already loaded  		}  		else {  			//New item  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  		}  	}  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: for (int i = 0; i < l_CoordinatesData.Length; i++) {  	ItemCollection.Item l_Item = new ItemCollection.Item ();  	l_CoordinateData = l_CoordinatesData [i].Split (''');  	if (l_CoordinateData.Length >= 6) {  		l_CoordinateString = l_CoordinateData [0];  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item already loaded  		}  		else {  			//New item  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  		}  	}  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: for (int i = 0; i < l_CoordinatesData.Length; i++) {  	ItemCollection.Item l_Item = new ItemCollection.Item ();  	l_CoordinateData = l_CoordinatesData [i].Split (''');  	if (l_CoordinateData.Length >= 6) {  		l_CoordinateString = l_CoordinateData [0];  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item already loaded  		}  		else {  			//New item  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  		}  	}  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: for (int i = 0; i < l_CoordinatesData.Length; i++) {  	ItemCollection.Item l_Item = new ItemCollection.Item ();  	l_CoordinateData = l_CoordinatesData [i].Split (''');  	if (l_CoordinateData.Length >= 6) {  		l_CoordinateString = l_CoordinateData [0];  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item already loaded  		}  		else {  			//New item  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  		}  	}  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: if (l_CoordinateData.Length >= 6) {  	l_CoordinateString = l_CoordinateData [0];  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item already loaded  	}  	else {  		//New item  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  	}  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: if (l_CoordinateData.Length >= 6) {  	l_CoordinateString = l_CoordinateData [0];  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item already loaded  	}  	else {  		//New item  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  	}  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: if (l_CoordinateData.Length >= 6) {  	l_CoordinateString = l_CoordinateData [0];  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item already loaded  	}  	else {  		//New item  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  	}  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: if (l_CoordinateData.Length >= 6) {  	l_CoordinateString = l_CoordinateData [0];  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item already loaded  	}  	else {  		//New item  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  	}  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: if (l_CoordinateData.Length >= 6) {  	l_CoordinateString = l_CoordinateData [0];  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item already loaded  	}  	else {  		//New item  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  	}  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  	//Item already loaded  }  else {  	//New item  	l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  	//Item already loaded  }  else {  	//New item  	l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  	//Item already loaded  }  else {  	//New item  	l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  	//Item already loaded  }  else {  	//New item  	l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  }  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  
Magic Number,ForgeBot,ItemCollection,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\ItemCollection.cs,LoadInstanceFromCoordinateData,The following statement contains a magic number: l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (int.Parse (l_CoordinateData [1])' int.Parse (l_CoordinateData [2])' l_CoordinateData [3]' int.Parse (l_CoordinateData [4])' bool.Parse (l_CoordinateData [5]));  
Magic Number,ForgeBot,FoEResourceInterceptor,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\FoEResourceInterceptor.cs,ParseData,The following statement contains a magic number: foreach (Match myMatch in myRegex.Matches (data)) {  	if (myMatch.Success) {  		var singles = myMatch.ToString ().Substring (1' myMatch.Length - 2).Split (new char[] {  			'''  		}' StringSplitOptions.RemoveEmptyEntries);  		foreach (var single in singles) {  			var keyValuePair = single.Replace ("\""' "").Split (new char[] {  				':'  			}' StringSplitOptions.None);  			switch (keyValuePair [0]) {  			case "name":  				loginData.Username = keyValuePair [1];  				break;  			case "password":  				loginData.PasswordHash = keyValuePair [1];  				break;  			case "world_id":  				loginData.WorldId = keyValuePair [1];  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,FoEResourceInterceptor,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\FoEResourceInterceptor.cs,ParseData,The following statement contains a magic number: if (myMatch.Success) {  	var singles = myMatch.ToString ().Substring (1' myMatch.Length - 2).Split (new char[] {  		'''  	}' StringSplitOptions.RemoveEmptyEntries);  	foreach (var single in singles) {  		var keyValuePair = single.Replace ("\""' "").Split (new char[] {  			':'  		}' StringSplitOptions.None);  		switch (keyValuePair [0]) {  		case "name":  			loginData.Username = keyValuePair [1];  			break;  		case "password":  			loginData.PasswordHash = keyValuePair [1];  			break;  		case "world_id":  			loginData.WorldId = keyValuePair [1];  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,MainForm,The following statement contains a magic number: splitContainer1.SplitterDistance = 475;  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,MainForm,The following statement contains a magic number: webCoreTimer.Interval = 15;  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BotDoActionsThreaded,The following statement contains a magic number: Sleeping (200);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BotDoActionsThreaded,The following statement contains a magic number: if (!Settings.DoSupplyClicks) {  	BotIdleInvokeForced ();  }  else {  	if (crdClickList.Count > 0) {  		UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_BotDoActionsThreaded_BotIdleBeforeProduction' Settings.WaitBeforeProductionInMillis / 1000));  		Sleeping (Settings.WaitBeforeProductionInMillis);  	}  	var crdSupplyList = ScanPicture4Production ();  	DoSupplyClicks (crdSupplyList);  	BotIdleInvokeForced ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BotDoActionsThreaded,The following statement contains a magic number: if (crdClickList.Count > 0) {  	UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_BotDoActionsThreaded_BotIdleBeforeProduction' Settings.WaitBeforeProductionInMillis / 1000));  	Sleeping (Settings.WaitBeforeProductionInMillis);  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BotDoActionsThreaded,The following statement contains a magic number: UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_BotDoActionsThreaded_BotIdleBeforeProduction' Settings.WaitBeforeProductionInMillis / 1000));  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,StartTimer,The following statement contains a magic number: timerBotCountdown.Interval = 1000;  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,OnLoad,The following statement contains a magic number: textBox1.Left = -100;  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureContainerPaint,The following statement contains a magic number: if (_aweWebView != null && _aweWebView.IsLive && _aweWebView.Surface != null) {  	var surface = (BitmapSurface)_aweWebView.Surface;  	#if DEBUG  	                var sw = new Stopwatch();                 sw.Start();                  const int runs = 1;                 for (int i = 0; i < runs; i++)                 {  #endif  	IntPtr destinationBuffer;  	//if (_cachedBitmap.IsDisposed)  	//  throw new RestartApplicationNeededException();  	_cachedBitmap.GetCachedBitmapBuffer (surface.Width' surface.Height' out destinationBuffer);  	if (_isViewUserFriendly)  		Win32.memcpy (destinationBuffer' surface.Buffer' new UIntPtr ((uint)(surface.Width * 4 * surface.Height)));  	else  		FastBitmapSurface.CopyMemoryRectangular (surface.Buffer' destinationBuffer' surface.Width * 4' surface.Width * 4' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' 4);  	surface.IsDirty = false;  	GraphicsHelper.GdiDrawImage (e.Graphics' _cachedBitmap.GetSourceImageHBitmap' e.ClipRectangle' e.ClipRectangle.X' e.ClipRectangle.Y);  	#if DEBUG  	                }                  sw.Stop();                 var avg = CalculateAverage(sw.ElapsedTicks/runs)/10000;                 double ppms = (e.ClipRectangle.Height*e.ClipRectangle.Width)/avg;                 //AddMessage(string.Format("exec: {0:0.00000} msec'W={2}'H={1}'Size={4}KB'Mpix/s={3:0.00}"'                 //                         avg' e.ClipRectangle.Height' e.ClipRectangle.Width' ppms'                 //                         (e.ClipRectangle.Height * e.ClipRectangle.Width * 4) / 1024));  #endif  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureContainerPaint,The following statement contains a magic number: if (_aweWebView != null && _aweWebView.IsLive && _aweWebView.Surface != null) {  	var surface = (BitmapSurface)_aweWebView.Surface;  	#if DEBUG  	                var sw = new Stopwatch();                 sw.Start();                  const int runs = 1;                 for (int i = 0; i < runs; i++)                 {  #endif  	IntPtr destinationBuffer;  	//if (_cachedBitmap.IsDisposed)  	//  throw new RestartApplicationNeededException();  	_cachedBitmap.GetCachedBitmapBuffer (surface.Width' surface.Height' out destinationBuffer);  	if (_isViewUserFriendly)  		Win32.memcpy (destinationBuffer' surface.Buffer' new UIntPtr ((uint)(surface.Width * 4 * surface.Height)));  	else  		FastBitmapSurface.CopyMemoryRectangular (surface.Buffer' destinationBuffer' surface.Width * 4' surface.Width * 4' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' 4);  	surface.IsDirty = false;  	GraphicsHelper.GdiDrawImage (e.Graphics' _cachedBitmap.GetSourceImageHBitmap' e.ClipRectangle' e.ClipRectangle.X' e.ClipRectangle.Y);  	#if DEBUG  	                }                  sw.Stop();                 var avg = CalculateAverage(sw.ElapsedTicks/runs)/10000;                 double ppms = (e.ClipRectangle.Height*e.ClipRectangle.Width)/avg;                 //AddMessage(string.Format("exec: {0:0.00000} msec'W={2}'H={1}'Size={4}KB'Mpix/s={3:0.00}"'                 //                         avg' e.ClipRectangle.Height' e.ClipRectangle.Width' ppms'                 //                         (e.ClipRectangle.Height * e.ClipRectangle.Width * 4) / 1024));  #endif  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureContainerPaint,The following statement contains a magic number: if (_aweWebView != null && _aweWebView.IsLive && _aweWebView.Surface != null) {  	var surface = (BitmapSurface)_aweWebView.Surface;  	#if DEBUG  	                var sw = new Stopwatch();                 sw.Start();                  const int runs = 1;                 for (int i = 0; i < runs; i++)                 {  #endif  	IntPtr destinationBuffer;  	//if (_cachedBitmap.IsDisposed)  	//  throw new RestartApplicationNeededException();  	_cachedBitmap.GetCachedBitmapBuffer (surface.Width' surface.Height' out destinationBuffer);  	if (_isViewUserFriendly)  		Win32.memcpy (destinationBuffer' surface.Buffer' new UIntPtr ((uint)(surface.Width * 4 * surface.Height)));  	else  		FastBitmapSurface.CopyMemoryRectangular (surface.Buffer' destinationBuffer' surface.Width * 4' surface.Width * 4' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' 4);  	surface.IsDirty = false;  	GraphicsHelper.GdiDrawImage (e.Graphics' _cachedBitmap.GetSourceImageHBitmap' e.ClipRectangle' e.ClipRectangle.X' e.ClipRectangle.Y);  	#if DEBUG  	                }                  sw.Stop();                 var avg = CalculateAverage(sw.ElapsedTicks/runs)/10000;                 double ppms = (e.ClipRectangle.Height*e.ClipRectangle.Width)/avg;                 //AddMessage(string.Format("exec: {0:0.00000} msec'W={2}'H={1}'Size={4}KB'Mpix/s={3:0.00}"'                 //                         avg' e.ClipRectangle.Height' e.ClipRectangle.Width' ppms'                 //                         (e.ClipRectangle.Height * e.ClipRectangle.Width * 4) / 1024));  #endif  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureContainerPaint,The following statement contains a magic number: if (_aweWebView != null && _aweWebView.IsLive && _aweWebView.Surface != null) {  	var surface = (BitmapSurface)_aweWebView.Surface;  	#if DEBUG  	                var sw = new Stopwatch();                 sw.Start();                  const int runs = 1;                 for (int i = 0; i < runs; i++)                 {  #endif  	IntPtr destinationBuffer;  	//if (_cachedBitmap.IsDisposed)  	//  throw new RestartApplicationNeededException();  	_cachedBitmap.GetCachedBitmapBuffer (surface.Width' surface.Height' out destinationBuffer);  	if (_isViewUserFriendly)  		Win32.memcpy (destinationBuffer' surface.Buffer' new UIntPtr ((uint)(surface.Width * 4 * surface.Height)));  	else  		FastBitmapSurface.CopyMemoryRectangular (surface.Buffer' destinationBuffer' surface.Width * 4' surface.Width * 4' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' 4);  	surface.IsDirty = false;  	GraphicsHelper.GdiDrawImage (e.Graphics' _cachedBitmap.GetSourceImageHBitmap' e.ClipRectangle' e.ClipRectangle.X' e.ClipRectangle.Y);  	#if DEBUG  	                }                  sw.Stop();                 var avg = CalculateAverage(sw.ElapsedTicks/runs)/10000;                 double ppms = (e.ClipRectangle.Height*e.ClipRectangle.Width)/avg;                 //AddMessage(string.Format("exec: {0:0.00000} msec'W={2}'H={1}'Size={4}KB'Mpix/s={3:0.00}"'                 //                         avg' e.ClipRectangle.Height' e.ClipRectangle.Width' ppms'                 //                         (e.ClipRectangle.Height * e.ClipRectangle.Width * 4) / 1024));  #endif  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureContainerPaint,The following statement contains a magic number: if (_isViewUserFriendly)  	Win32.memcpy (destinationBuffer' surface.Buffer' new UIntPtr ((uint)(surface.Width * 4 * surface.Height)));  else  	FastBitmapSurface.CopyMemoryRectangular (surface.Buffer' destinationBuffer' surface.Width * 4' surface.Width * 4' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' 4);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureContainerPaint,The following statement contains a magic number: if (_isViewUserFriendly)  	Win32.memcpy (destinationBuffer' surface.Buffer' new UIntPtr ((uint)(surface.Width * 4 * surface.Height)));  else  	FastBitmapSurface.CopyMemoryRectangular (surface.Buffer' destinationBuffer' surface.Width * 4' surface.Width * 4' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' 4);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureContainerPaint,The following statement contains a magic number: if (_isViewUserFriendly)  	Win32.memcpy (destinationBuffer' surface.Buffer' new UIntPtr ((uint)(surface.Width * 4 * surface.Height)));  else  	FastBitmapSurface.CopyMemoryRectangular (surface.Buffer' destinationBuffer' surface.Width * 4' surface.Width * 4' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' 4);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureContainerPaint,The following statement contains a magic number: if (_isViewUserFriendly)  	Win32.memcpy (destinationBuffer' surface.Buffer' new UIntPtr ((uint)(surface.Width * 4 * surface.Height)));  else  	FastBitmapSurface.CopyMemoryRectangular (surface.Buffer' destinationBuffer' surface.Width * 4' surface.Width * 4' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' 4);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureContainerPaint,The following statement contains a magic number: Win32.memcpy (destinationBuffer' surface.Buffer' new UIntPtr ((uint)(surface.Width * 4 * surface.Height)));  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureContainerPaint,The following statement contains a magic number: FastBitmapSurface.CopyMemoryRectangular (surface.Buffer' destinationBuffer' surface.Width * 4' surface.Width * 4' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' 4);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureContainerPaint,The following statement contains a magic number: FastBitmapSurface.CopyMemoryRectangular (surface.Buffer' destinationBuffer' surface.Width * 4' surface.Width * 4' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' 4);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,PictureContainerPaint,The following statement contains a magic number: FastBitmapSurface.CopyMemoryRectangular (surface.Buffer' destinationBuffer' surface.Width * 4' surface.Width * 4' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' new AweRect (e.ClipRectangle.X' e.ClipRectangle.Y' e.ClipRectangle.Width' e.ClipRectangle.Height)' 4);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,DoCollectClicks,The following statement contains a magic number: foreach (Coordinate coordinate in crdList) {  	colors.Add (image.GetPixelRgb (coordinate.X' coordinate.Y));  	string l_CoordinateString = ItemCollection.MakePoint (coordinate.X' coordinate.Y);  	if (ItemCollection.Instance.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		l_Item.CalculateNewTrialCoordinates ();  		InjectClickAtInvokeForced (coordinate.X + l_Item.m_OffsetX' coordinate.Y + l_Item.m_OffsetY);  		num++;  		UpdateStatus (LogType.ClickDone' num.ToString ());  		if (num >= maxClickedItems)  			break;  		Sleeping (200);  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,DoCollectClicks,The following statement contains a magic number: if (ItemCollection.Instance.Items.TryGetValue (l_CoordinateString' out l_Item)) {  	l_Item.CalculateNewTrialCoordinates ();  	InjectClickAtInvokeForced (coordinate.X + l_Item.m_OffsetX' coordinate.Y + l_Item.m_OffsetY);  	num++;  	UpdateStatus (LogType.ClickDone' num.ToString ());  	if (num >= maxClickedItems)  		break;  	Sleeping (200);  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,DoCollectClicks,The following statement contains a magic number: Sleeping (200);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,DoCollectClicks,The following statement contains a magic number: Sleeping (500);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ClickMilitaryItems,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' startingMilitaryItemButton.X' startingMilitaryItemButton.Y));  	var pixel = image.GetPixelRgb (startingMilitaryItemButton.X' startingMilitaryItemButton.Y);  	if (pixel == borderColor || pixel == activeBorderColor) {  		//updateStatus(LogType.JustMessage' string.Format("black color found."' i + 1));  		var unlocked = false;  		// unlock not working since there's no "moon sign" above the military barrack  		if (false && Settings.DoMilitaryUnitsUnblock && pixel == unlockColor) {  			InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  			unlocked = true;  			UpdateStatus (LogType.JustMessage' string.Format ("Unlocking military item #{0}"' i + 1));  			Sleeping (1000);  		}  		var pixelPlusOne = image.GetPixelRgb (startingMilitaryItemButton.X + 1' startingMilitaryItemButton.Y);  		if (unlocked || pixelPlusOne == readyColor || pixelPlusOne == activeReadyColor) {  			InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  			UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_ClickMilitaryItems_MilitaryItemSelected' i + 1));  			break;  		}  	}  	startingMilitaryItemButton.X += distButtons;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ClickMilitaryItems,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' startingMilitaryItemButton.X' startingMilitaryItemButton.Y));  	var pixel = image.GetPixelRgb (startingMilitaryItemButton.X' startingMilitaryItemButton.Y);  	if (pixel == borderColor || pixel == activeBorderColor) {  		//updateStatus(LogType.JustMessage' string.Format("black color found."' i + 1));  		var unlocked = false;  		// unlock not working since there's no "moon sign" above the military barrack  		if (false && Settings.DoMilitaryUnitsUnblock && pixel == unlockColor) {  			InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  			unlocked = true;  			UpdateStatus (LogType.JustMessage' string.Format ("Unlocking military item #{0}"' i + 1));  			Sleeping (1000);  		}  		var pixelPlusOne = image.GetPixelRgb (startingMilitaryItemButton.X + 1' startingMilitaryItemButton.Y);  		if (unlocked || pixelPlusOne == readyColor || pixelPlusOne == activeReadyColor) {  			InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  			UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_ClickMilitaryItems_MilitaryItemSelected' i + 1));  			break;  		}  	}  	startingMilitaryItemButton.X += distButtons;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ClickMilitaryItems,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' startingMilitaryItemButton.X' startingMilitaryItemButton.Y));  	var pixel = image.GetPixelRgb (startingMilitaryItemButton.X' startingMilitaryItemButton.Y);  	if (pixel == borderColor || pixel == activeBorderColor) {  		//updateStatus(LogType.JustMessage' string.Format("black color found."' i + 1));  		var unlocked = false;  		// unlock not working since there's no "moon sign" above the military barrack  		if (false && Settings.DoMilitaryUnitsUnblock && pixel == unlockColor) {  			InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  			unlocked = true;  			UpdateStatus (LogType.JustMessage' string.Format ("Unlocking military item #{0}"' i + 1));  			Sleeping (1000);  		}  		var pixelPlusOne = image.GetPixelRgb (startingMilitaryItemButton.X + 1' startingMilitaryItemButton.Y);  		if (unlocked || pixelPlusOne == readyColor || pixelPlusOne == activeReadyColor) {  			InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  			UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_ClickMilitaryItems_MilitaryItemSelected' i + 1));  			break;  		}  	}  	startingMilitaryItemButton.X += distButtons;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ClickMilitaryItems,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' startingMilitaryItemButton.X' startingMilitaryItemButton.Y));  	var pixel = image.GetPixelRgb (startingMilitaryItemButton.X' startingMilitaryItemButton.Y);  	if (pixel == borderColor || pixel == activeBorderColor) {  		//updateStatus(LogType.JustMessage' string.Format("black color found."' i + 1));  		var unlocked = false;  		// unlock not working since there's no "moon sign" above the military barrack  		if (false && Settings.DoMilitaryUnitsUnblock && pixel == unlockColor) {  			InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  			unlocked = true;  			UpdateStatus (LogType.JustMessage' string.Format ("Unlocking military item #{0}"' i + 1));  			Sleeping (1000);  		}  		var pixelPlusOne = image.GetPixelRgb (startingMilitaryItemButton.X + 1' startingMilitaryItemButton.Y);  		if (unlocked || pixelPlusOne == readyColor || pixelPlusOne == activeReadyColor) {  			InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  			UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_ClickMilitaryItems_MilitaryItemSelected' i + 1));  			break;  		}  	}  	startingMilitaryItemButton.X += distButtons;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ClickMilitaryItems,The following statement contains a magic number: if (pixel == borderColor || pixel == activeBorderColor) {  	//updateStatus(LogType.JustMessage' string.Format("black color found."' i + 1));  	var unlocked = false;  	// unlock not working since there's no "moon sign" above the military barrack  	if (false && Settings.DoMilitaryUnitsUnblock && pixel == unlockColor) {  		InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  		unlocked = true;  		UpdateStatus (LogType.JustMessage' string.Format ("Unlocking military item #{0}"' i + 1));  		Sleeping (1000);  	}  	var pixelPlusOne = image.GetPixelRgb (startingMilitaryItemButton.X + 1' startingMilitaryItemButton.Y);  	if (unlocked || pixelPlusOne == readyColor || pixelPlusOne == activeReadyColor) {  		InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  		UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_ClickMilitaryItems_MilitaryItemSelected' i + 1));  		break;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ClickMilitaryItems,The following statement contains a magic number: if (pixel == borderColor || pixel == activeBorderColor) {  	//updateStatus(LogType.JustMessage' string.Format("black color found."' i + 1));  	var unlocked = false;  	// unlock not working since there's no "moon sign" above the military barrack  	if (false && Settings.DoMilitaryUnitsUnblock && pixel == unlockColor) {  		InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  		unlocked = true;  		UpdateStatus (LogType.JustMessage' string.Format ("Unlocking military item #{0}"' i + 1));  		Sleeping (1000);  	}  	var pixelPlusOne = image.GetPixelRgb (startingMilitaryItemButton.X + 1' startingMilitaryItemButton.Y);  	if (unlocked || pixelPlusOne == readyColor || pixelPlusOne == activeReadyColor) {  		InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  		UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_ClickMilitaryItems_MilitaryItemSelected' i + 1));  		break;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ClickMilitaryItems,The following statement contains a magic number: if (pixel == borderColor || pixel == activeBorderColor) {  	//updateStatus(LogType.JustMessage' string.Format("black color found."' i + 1));  	var unlocked = false;  	// unlock not working since there's no "moon sign" above the military barrack  	if (false && Settings.DoMilitaryUnitsUnblock && pixel == unlockColor) {  		InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  		unlocked = true;  		UpdateStatus (LogType.JustMessage' string.Format ("Unlocking military item #{0}"' i + 1));  		Sleeping (1000);  	}  	var pixelPlusOne = image.GetPixelRgb (startingMilitaryItemButton.X + 1' startingMilitaryItemButton.Y);  	if (unlocked || pixelPlusOne == readyColor || pixelPlusOne == activeReadyColor) {  		InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  		UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_ClickMilitaryItems_MilitaryItemSelected' i + 1));  		break;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ClickMilitaryItems,The following statement contains a magic number: if (false && Settings.DoMilitaryUnitsUnblock && pixel == unlockColor) {  	InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  	unlocked = true;  	UpdateStatus (LogType.JustMessage' string.Format ("Unlocking military item #{0}"' i + 1));  	Sleeping (1000);  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ClickMilitaryItems,The following statement contains a magic number: if (false && Settings.DoMilitaryUnitsUnblock && pixel == unlockColor) {  	InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  	unlocked = true;  	UpdateStatus (LogType.JustMessage' string.Format ("Unlocking military item #{0}"' i + 1));  	Sleeping (1000);  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ClickMilitaryItems,The following statement contains a magic number: InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ClickMilitaryItems,The following statement contains a magic number: Sleeping (1000);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ClickMilitaryItems,The following statement contains a magic number: if (unlocked || pixelPlusOne == readyColor || pixelPlusOne == activeReadyColor) {  	InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  	UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_ClickMilitaryItems_MilitaryItemSelected' i + 1));  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ClickMilitaryItems,The following statement contains a magic number: InjectClickAtInvokeForced (startingMilitaryItemButton.X + 50' startingMilitaryItemButton.Y);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,TryClosePopup,The following statement contains a magic number: using (var image = GetNewBrowserImageInvokeForced ()) {  	bool recognized = true;  	try {  		Coordinate coordOpenMenuClose;  		if (IsPopupPresent (image)) {  			if (IsEventWinPresent (image' out coordOpenMenuClose)) {  			}  			else if (IsGoodsWinPresent (image' out coordOpenMenuClose)) {  			}  			else if (IsUnitWinPresent (image' out coordOpenMenuClose)) {  			}  			else if (IsEventSmallPresent (image' out coordOpenMenuClose)) {  			}  			else if (IsSupplyWinPresent (image' out coordOpenMenuClose)) {  			}  			else if (IsOngoingProductionWinPresent (image' out coordOpenMenuClose)) {  			}  			if (coordOpenMenuClose == null)  				TryFindCloseButton (image' out coordOpenMenuClose);  			if (coordOpenMenuClose != null) {  				InjectClickAtInvokeForced (coordOpenMenuClose.X + 9' coordOpenMenuClose.Y + 8);  				if (BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis)) {  					return true;  				}  				image.Image.Save ("closePopupError.png"' ImageFormat.Png);  				SaveErrorToFile ("closePopupEorror.txt"' string.Concat (new object[] {  					Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click'  					Environment.NewLine'  					"X="'  					coordOpenMenuClose.X'  					"+9  Y="'  					coordOpenMenuClose.Y'  					"+8"  				}));  				UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click);  			}  			else {  				image.Image.Save ("closePopupError.png"' ImageFormat.Png);  				UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Game_window_not_recognized);  				recognized = false;  				_blueScreenDetected = CheckForBlueScreen (image);  				if (_blueScreenDetected) {  					UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Blue_Screen_Of_Death);  				}  				return false;  			}  		}  	}  	finally {  		// game window was recognized?  		WindowNotRecognized = !recognized;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,TryClosePopup,The following statement contains a magic number: using (var image = GetNewBrowserImageInvokeForced ()) {  	bool recognized = true;  	try {  		Coordinate coordOpenMenuClose;  		if (IsPopupPresent (image)) {  			if (IsEventWinPresent (image' out coordOpenMenuClose)) {  			}  			else if (IsGoodsWinPresent (image' out coordOpenMenuClose)) {  			}  			else if (IsUnitWinPresent (image' out coordOpenMenuClose)) {  			}  			else if (IsEventSmallPresent (image' out coordOpenMenuClose)) {  			}  			else if (IsSupplyWinPresent (image' out coordOpenMenuClose)) {  			}  			else if (IsOngoingProductionWinPresent (image' out coordOpenMenuClose)) {  			}  			if (coordOpenMenuClose == null)  				TryFindCloseButton (image' out coordOpenMenuClose);  			if (coordOpenMenuClose != null) {  				InjectClickAtInvokeForced (coordOpenMenuClose.X + 9' coordOpenMenuClose.Y + 8);  				if (BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis)) {  					return true;  				}  				image.Image.Save ("closePopupError.png"' ImageFormat.Png);  				SaveErrorToFile ("closePopupEorror.txt"' string.Concat (new object[] {  					Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click'  					Environment.NewLine'  					"X="'  					coordOpenMenuClose.X'  					"+9  Y="'  					coordOpenMenuClose.Y'  					"+8"  				}));  				UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click);  			}  			else {  				image.Image.Save ("closePopupError.png"' ImageFormat.Png);  				UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Game_window_not_recognized);  				recognized = false;  				_blueScreenDetected = CheckForBlueScreen (image);  				if (_blueScreenDetected) {  					UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Blue_Screen_Of_Death);  				}  				return false;  			}  		}  	}  	finally {  		// game window was recognized?  		WindowNotRecognized = !recognized;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,TryClosePopup,The following statement contains a magic number: try {  	Coordinate coordOpenMenuClose;  	if (IsPopupPresent (image)) {  		if (IsEventWinPresent (image' out coordOpenMenuClose)) {  		}  		else if (IsGoodsWinPresent (image' out coordOpenMenuClose)) {  		}  		else if (IsUnitWinPresent (image' out coordOpenMenuClose)) {  		}  		else if (IsEventSmallPresent (image' out coordOpenMenuClose)) {  		}  		else if (IsSupplyWinPresent (image' out coordOpenMenuClose)) {  		}  		else if (IsOngoingProductionWinPresent (image' out coordOpenMenuClose)) {  		}  		if (coordOpenMenuClose == null)  			TryFindCloseButton (image' out coordOpenMenuClose);  		if (coordOpenMenuClose != null) {  			InjectClickAtInvokeForced (coordOpenMenuClose.X + 9' coordOpenMenuClose.Y + 8);  			if (BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis)) {  				return true;  			}  			image.Image.Save ("closePopupError.png"' ImageFormat.Png);  			SaveErrorToFile ("closePopupEorror.txt"' string.Concat (new object[] {  				Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click'  				Environment.NewLine'  				"X="'  				coordOpenMenuClose.X'  				"+9  Y="'  				coordOpenMenuClose.Y'  				"+8"  			}));  			UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click);  		}  		else {  			image.Image.Save ("closePopupError.png"' ImageFormat.Png);  			UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Game_window_not_recognized);  			recognized = false;  			_blueScreenDetected = CheckForBlueScreen (image);  			if (_blueScreenDetected) {  				UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Blue_Screen_Of_Death);  			}  			return false;  		}  	}  }  finally {  	// game window was recognized?  	WindowNotRecognized = !recognized;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,TryClosePopup,The following statement contains a magic number: try {  	Coordinate coordOpenMenuClose;  	if (IsPopupPresent (image)) {  		if (IsEventWinPresent (image' out coordOpenMenuClose)) {  		}  		else if (IsGoodsWinPresent (image' out coordOpenMenuClose)) {  		}  		else if (IsUnitWinPresent (image' out coordOpenMenuClose)) {  		}  		else if (IsEventSmallPresent (image' out coordOpenMenuClose)) {  		}  		else if (IsSupplyWinPresent (image' out coordOpenMenuClose)) {  		}  		else if (IsOngoingProductionWinPresent (image' out coordOpenMenuClose)) {  		}  		if (coordOpenMenuClose == null)  			TryFindCloseButton (image' out coordOpenMenuClose);  		if (coordOpenMenuClose != null) {  			InjectClickAtInvokeForced (coordOpenMenuClose.X + 9' coordOpenMenuClose.Y + 8);  			if (BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis)) {  				return true;  			}  			image.Image.Save ("closePopupError.png"' ImageFormat.Png);  			SaveErrorToFile ("closePopupEorror.txt"' string.Concat (new object[] {  				Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click'  				Environment.NewLine'  				"X="'  				coordOpenMenuClose.X'  				"+9  Y="'  				coordOpenMenuClose.Y'  				"+8"  			}));  			UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click);  		}  		else {  			image.Image.Save ("closePopupError.png"' ImageFormat.Png);  			UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Game_window_not_recognized);  			recognized = false;  			_blueScreenDetected = CheckForBlueScreen (image);  			if (_blueScreenDetected) {  				UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Blue_Screen_Of_Death);  			}  			return false;  		}  	}  }  finally {  	// game window was recognized?  	WindowNotRecognized = !recognized;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,TryClosePopup,The following statement contains a magic number: if (IsPopupPresent (image)) {  	if (IsEventWinPresent (image' out coordOpenMenuClose)) {  	}  	else if (IsGoodsWinPresent (image' out coordOpenMenuClose)) {  	}  	else if (IsUnitWinPresent (image' out coordOpenMenuClose)) {  	}  	else if (IsEventSmallPresent (image' out coordOpenMenuClose)) {  	}  	else if (IsSupplyWinPresent (image' out coordOpenMenuClose)) {  	}  	else if (IsOngoingProductionWinPresent (image' out coordOpenMenuClose)) {  	}  	if (coordOpenMenuClose == null)  		TryFindCloseButton (image' out coordOpenMenuClose);  	if (coordOpenMenuClose != null) {  		InjectClickAtInvokeForced (coordOpenMenuClose.X + 9' coordOpenMenuClose.Y + 8);  		if (BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis)) {  			return true;  		}  		image.Image.Save ("closePopupError.png"' ImageFormat.Png);  		SaveErrorToFile ("closePopupEorror.txt"' string.Concat (new object[] {  			Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click'  			Environment.NewLine'  			"X="'  			coordOpenMenuClose.X'  			"+9  Y="'  			coordOpenMenuClose.Y'  			"+8"  		}));  		UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click);  	}  	else {  		image.Image.Save ("closePopupError.png"' ImageFormat.Png);  		UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Game_window_not_recognized);  		recognized = false;  		_blueScreenDetected = CheckForBlueScreen (image);  		if (_blueScreenDetected) {  			UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Blue_Screen_Of_Death);  		}  		return false;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,TryClosePopup,The following statement contains a magic number: if (IsPopupPresent (image)) {  	if (IsEventWinPresent (image' out coordOpenMenuClose)) {  	}  	else if (IsGoodsWinPresent (image' out coordOpenMenuClose)) {  	}  	else if (IsUnitWinPresent (image' out coordOpenMenuClose)) {  	}  	else if (IsEventSmallPresent (image' out coordOpenMenuClose)) {  	}  	else if (IsSupplyWinPresent (image' out coordOpenMenuClose)) {  	}  	else if (IsOngoingProductionWinPresent (image' out coordOpenMenuClose)) {  	}  	if (coordOpenMenuClose == null)  		TryFindCloseButton (image' out coordOpenMenuClose);  	if (coordOpenMenuClose != null) {  		InjectClickAtInvokeForced (coordOpenMenuClose.X + 9' coordOpenMenuClose.Y + 8);  		if (BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis)) {  			return true;  		}  		image.Image.Save ("closePopupError.png"' ImageFormat.Png);  		SaveErrorToFile ("closePopupEorror.txt"' string.Concat (new object[] {  			Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click'  			Environment.NewLine'  			"X="'  			coordOpenMenuClose.X'  			"+9  Y="'  			coordOpenMenuClose.Y'  			"+8"  		}));  		UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click);  	}  	else {  		image.Image.Save ("closePopupError.png"' ImageFormat.Png);  		UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Game_window_not_recognized);  		recognized = false;  		_blueScreenDetected = CheckForBlueScreen (image);  		if (_blueScreenDetected) {  			UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Blue_Screen_Of_Death);  		}  		return false;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,TryClosePopup,The following statement contains a magic number: if (coordOpenMenuClose != null) {  	InjectClickAtInvokeForced (coordOpenMenuClose.X + 9' coordOpenMenuClose.Y + 8);  	if (BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis)) {  		return true;  	}  	image.Image.Save ("closePopupError.png"' ImageFormat.Png);  	SaveErrorToFile ("closePopupEorror.txt"' string.Concat (new object[] {  		Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click'  		Environment.NewLine'  		"X="'  		coordOpenMenuClose.X'  		"+9  Y="'  		coordOpenMenuClose.Y'  		"+8"  	}));  	UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click);  }  else {  	image.Image.Save ("closePopupError.png"' ImageFormat.Png);  	UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Game_window_not_recognized);  	recognized = false;  	_blueScreenDetected = CheckForBlueScreen (image);  	if (_blueScreenDetected) {  		UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Blue_Screen_Of_Death);  	}  	return false;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,TryClosePopup,The following statement contains a magic number: if (coordOpenMenuClose != null) {  	InjectClickAtInvokeForced (coordOpenMenuClose.X + 9' coordOpenMenuClose.Y + 8);  	if (BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis)) {  		return true;  	}  	image.Image.Save ("closePopupError.png"' ImageFormat.Png);  	SaveErrorToFile ("closePopupEorror.txt"' string.Concat (new object[] {  		Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click'  		Environment.NewLine'  		"X="'  		coordOpenMenuClose.X'  		"+9  Y="'  		coordOpenMenuClose.Y'  		"+8"  	}));  	UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Popup_still_there_after_close_click);  }  else {  	image.Image.Save ("closePopupError.png"' ImageFormat.Png);  	UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Game_window_not_recognized);  	recognized = false;  	_blueScreenDetected = CheckForBlueScreen (image);  	if (_blueScreenDetected) {  		UpdateStatus (LogType.JustMessage' Resource.MainForm_closePopup_Error_Blue_Screen_Of_Death);  	}  	return false;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,TryClosePopup,The following statement contains a magic number: InjectClickAtInvokeForced (coordOpenMenuClose.X + 9' coordOpenMenuClose.Y + 8);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,TryClosePopup,The following statement contains a magic number: InjectClickAtInvokeForced (coordOpenMenuClose.X + 9' coordOpenMenuClose.Y + 8);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == color) {  	color = Color.FromArgb (90' 106' 131).ToArgb ();  	if (image.GetPixelRgb (x + 17' y) == color) {  		color = Color.FromArgb (178' 188' 204).ToArgb ();  		if (image.GetPixelRgb (x + 9' y + 8) == color) {  			return true;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == color) {  	color = Color.FromArgb (90' 106' 131).ToArgb ();  	if (image.GetPixelRgb (x + 17' y) == color) {  		color = Color.FromArgb (178' 188' 204).ToArgb ();  		if (image.GetPixelRgb (x + 9' y + 8) == color) {  			return true;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == color) {  	color = Color.FromArgb (90' 106' 131).ToArgb ();  	if (image.GetPixelRgb (x + 17' y) == color) {  		color = Color.FromArgb (178' 188' 204).ToArgb ();  		if (image.GetPixelRgb (x + 9' y + 8) == color) {  			return true;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == color) {  	color = Color.FromArgb (90' 106' 131).ToArgb ();  	if (image.GetPixelRgb (x + 17' y) == color) {  		color = Color.FromArgb (178' 188' 204).ToArgb ();  		if (image.GetPixelRgb (x + 9' y + 8) == color) {  			return true;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == color) {  	color = Color.FromArgb (90' 106' 131).ToArgb ();  	if (image.GetPixelRgb (x + 17' y) == color) {  		color = Color.FromArgb (178' 188' 204).ToArgb ();  		if (image.GetPixelRgb (x + 9' y + 8) == color) {  			return true;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == color) {  	color = Color.FromArgb (90' 106' 131).ToArgb ();  	if (image.GetPixelRgb (x + 17' y) == color) {  		color = Color.FromArgb (178' 188' 204).ToArgb ();  		if (image.GetPixelRgb (x + 9' y + 8) == color) {  			return true;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == color) {  	color = Color.FromArgb (90' 106' 131).ToArgb ();  	if (image.GetPixelRgb (x + 17' y) == color) {  		color = Color.FromArgb (178' 188' 204).ToArgb ();  		if (image.GetPixelRgb (x + 9' y + 8) == color) {  			return true;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == color) {  	color = Color.FromArgb (90' 106' 131).ToArgb ();  	if (image.GetPixelRgb (x + 17' y) == color) {  		color = Color.FromArgb (178' 188' 204).ToArgb ();  		if (image.GetPixelRgb (x + 9' y + 8) == color) {  			return true;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == color) {  	color = Color.FromArgb (90' 106' 131).ToArgb ();  	if (image.GetPixelRgb (x + 17' y) == color) {  		color = Color.FromArgb (178' 188' 204).ToArgb ();  		if (image.GetPixelRgb (x + 9' y + 8) == color) {  			return true;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: color = Color.FromArgb (90' 106' 131).ToArgb ();  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: color = Color.FromArgb (90' 106' 131).ToArgb ();  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: color = Color.FromArgb (90' 106' 131).ToArgb ();  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x + 17' y) == color) {  	color = Color.FromArgb (178' 188' 204).ToArgb ();  	if (image.GetPixelRgb (x + 9' y + 8) == color) {  		return true;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x + 17' y) == color) {  	color = Color.FromArgb (178' 188' 204).ToArgb ();  	if (image.GetPixelRgb (x + 9' y + 8) == color) {  		return true;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x + 17' y) == color) {  	color = Color.FromArgb (178' 188' 204).ToArgb ();  	if (image.GetPixelRgb (x + 9' y + 8) == color) {  		return true;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x + 17' y) == color) {  	color = Color.FromArgb (178' 188' 204).ToArgb ();  	if (image.GetPixelRgb (x + 9' y + 8) == color) {  		return true;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x + 17' y) == color) {  	color = Color.FromArgb (178' 188' 204).ToArgb ();  	if (image.GetPixelRgb (x + 9' y + 8) == color) {  		return true;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x + 17' y) == color) {  	color = Color.FromArgb (178' 188' 204).ToArgb ();  	if (image.GetPixelRgb (x + 9' y + 8) == color) {  		return true;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: color = Color.FromArgb (178' 188' 204).ToArgb ();  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: color = Color.FromArgb (178' 188' 204).ToArgb ();  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: color = Color.FromArgb (178' 188' 204).ToArgb ();  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x + 9' y + 8) == color) {  	return true;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsCloseBtnPresent,The following statement contains a magic number: if (image.GetPixelRgb (x + 9' y + 8) == color) {  	return true;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsEventSmallPresent,The following statement contains a magic number: if (IsCloseBtnPresent (image' 2205' 889)) {  	closeButton = new Coordinate (2205' 889);  	return true;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsEventSmallPresent,The following statement contains a magic number: if (IsCloseBtnPresent (image' 2205' 889)) {  	closeButton = new Coordinate (2205' 889);  	return true;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsEventSmallPresent,The following statement contains a magic number: if (IsCloseBtnPresent (image' 2205' 889)) {  	closeButton = new Coordinate (2205' 889);  	return true;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsEventSmallPresent,The following statement contains a magic number: if (IsCloseBtnPresent (image' 2205' 889)) {  	closeButton = new Coordinate (2205' 889);  	return true;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsEventSmallPresent,The following statement contains a magic number: closeButton = new Coordinate (2205' 889);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsEventSmallPresent,The following statement contains a magic number: closeButton = new Coordinate (2205' 889);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsEventWinPresent,The following statement contains a magic number: for (int i = 500; i <= Settings.BotPictureHeight - 500; i++) {  	var coords = FindCloseButton (image' 2466' i' 10' 0);  	if (coords != null) {  		btnClose = coords;  		break;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsEventWinPresent,The following statement contains a magic number: for (int i = 500; i <= Settings.BotPictureHeight - 500; i++) {  	var coords = FindCloseButton (image' 2466' i' 10' 0);  	if (coords != null) {  		btnClose = coords;  		break;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsEventWinPresent,The following statement contains a magic number: for (int i = 500; i <= Settings.BotPictureHeight - 500; i++) {  	var coords = FindCloseButton (image' 2466' i' 10' 0);  	if (coords != null) {  		btnClose = coords;  		break;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,IsEventWinPresent,The following statement contains a magic number: for (int i = 500; i <= Settings.BotPictureHeight - 500; i++) {  	var coords = FindCloseButton (image' 2466' i' 10' 0);  	if (coords != null) {  		btnClose = coords;  		break;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,FindCloseButton,The following statement contains a magic number: for (int i = -xPerimeter / 2; i <= xPerimeter / 2; i++) {  	for (int j = -yPerimeter / 2; j <= yPerimeter / 2; j++) {  		if (IsCloseBtnPresent (image' x + i' y + j)) {  			//updateStatus(LogType.JustMessage' string.Format("Close button @ {0}'{1}"'x+i'y+j));  			coords = new Coordinate (x + i' y + j);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,FindCloseButton,The following statement contains a magic number: for (int i = -xPerimeter / 2; i <= xPerimeter / 2; i++) {  	for (int j = -yPerimeter / 2; j <= yPerimeter / 2; j++) {  		if (IsCloseBtnPresent (image' x + i' y + j)) {  			//updateStatus(LogType.JustMessage' string.Format("Close button @ {0}'{1}"'x+i'y+j));  			coords = new Coordinate (x + i' y + j);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,FindCloseButton,The following statement contains a magic number: for (int i = -xPerimeter / 2; i <= xPerimeter / 2; i++) {  	for (int j = -yPerimeter / 2; j <= yPerimeter / 2; j++) {  		if (IsCloseBtnPresent (image' x + i' y + j)) {  			//updateStatus(LogType.JustMessage' string.Format("Close button @ {0}'{1}"'x+i'y+j));  			coords = new Coordinate (x + i' y + j);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,FindCloseButton,The following statement contains a magic number: for (int i = -xPerimeter / 2; i <= xPerimeter / 2; i++) {  	for (int j = -yPerimeter / 2; j <= yPerimeter / 2; j++) {  		if (IsCloseBtnPresent (image' x + i' y + j)) {  			//updateStatus(LogType.JustMessage' string.Format("Close button @ {0}'{1}"'x+i'y+j));  			coords = new Coordinate (x + i' y + j);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,FindCloseButton,The following statement contains a magic number: for (int j = -yPerimeter / 2; j <= yPerimeter / 2; j++) {  	if (IsCloseBtnPresent (image' x + i' y + j)) {  		//updateStatus(LogType.JustMessage' string.Format("Close button @ {0}'{1}"'x+i'y+j));  		coords = new Coordinate (x + i' y + j);  		break;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,FindCloseButton,The following statement contains a magic number: for (int j = -yPerimeter / 2; j <= yPerimeter / 2; j++) {  	if (IsCloseBtnPresent (image' x + i' y + j)) {  		//updateStatus(LogType.JustMessage' string.Format("Close button @ {0}'{1}"'x+i'y+j));  		coords = new Coordinate (x + i' y + j);  		break;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BlockUntilPopupIs,The following statement contains a magic number: if (present)  	color = Color.FromArgb (102' 61' 27).ToArgb ();  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BlockUntilPopupIs,The following statement contains a magic number: if (present)  	color = Color.FromArgb (102' 61' 27).ToArgb ();  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BlockUntilPopupIs,The following statement contains a magic number: if (present)  	color = Color.FromArgb (102' 61' 27).ToArgb ();  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BlockUntilPopupIs,The following statement contains a magic number: color = Color.FromArgb (102' 61' 27).ToArgb ();  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BlockUntilPopupIs,The following statement contains a magic number: color = Color.FromArgb (102' 61' 27).ToArgb ();  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BlockUntilPopupIs,The following statement contains a magic number: color = Color.FromArgb (102' 61' 27).ToArgb ();  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BlockUntilPopupIs,The following statement contains a magic number: while (maxTimeInMilliseconds > 0) {  	using (var image = GetNewBrowserImageInvokeForced ()) {  		if (image.GetPixelRgb (1' 1) == color) {  			return true;  		}  	}  	Sleeping (250);  	maxTimeInMilliseconds -= 250;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BlockUntilPopupIs,The following statement contains a magic number: while (maxTimeInMilliseconds > 0) {  	using (var image = GetNewBrowserImageInvokeForced ()) {  		if (image.GetPixelRgb (1' 1) == color) {  			return true;  		}  	}  	Sleeping (250);  	maxTimeInMilliseconds -= 250;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BlockUntilPopupIs,The following statement contains a magic number: Sleeping (250);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,BlockUntilPopupIs,The following statement contains a magic number: maxTimeInMilliseconds -= 250;  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AssureZoomedIn,The following statement contains a magic number: Sleeping (500);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AssureZoomedIn,The following statement contains a magic number: InjectClickAtInvokeForced (150' 50);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AssureZoomedIn,The following statement contains a magic number: InjectClickAtInvokeForced (150' 50);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (42' 47' 54).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (42' 47' 54).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (42' 47' 54).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (25' 30' 37).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (25' 30' 37).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (25' 30' 37).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (172' 183' 199).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (172' 183' 199).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (172' 183' 199).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (174' 185' 201).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (174' 185' 201).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (174' 185' 201).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (172' 181' 198).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (172' 181' 198).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (172' 181' 198).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (174' 183' 200).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (174' 183' 200).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (174' 183' 200).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (127' 136' 153).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (127' 136' 153).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (127' 136' 153).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (151' 162' 181).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (151' 162' 181).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: colors.Add (Color.FromArgb (151' 162' 181).ToArgb ());  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int x = 0; x < 300; x++) {  	for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  		{  			if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  				coordinate = new Coordinate (x + 7' y + 7);  				break;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: for (int y = Settings.BotPictureHeight - 50; y < Settings.BotPictureHeight; y++) {  	{  		if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  			coordinate = new Coordinate (x + 7' y + 7);  			break;  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: if (image.GetPixelRgb (x' y) == colors [0] && image.GetPixelRgb (x + 17' y) == colors [1] && (image.GetPixelRgb (x + 14' y + 15) == colors [2] || image.GetPixelRgb (x + 14' y + 15) == colors [3]) && (image.GetPixelRgb (x + 7' y + 5) == colors [4] || image.GetPixelRgb (x + 7' y + 5) == colors [5]) && (image.GetPixelRgb (x + 8' y + 10) == colors [6] || image.GetPixelRgb (x + 8' y + 10) == colors [7])) {  	coordinate = new Coordinate (x + 7' y + 7);  	break;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: coordinate = new Coordinate (x + 7' y + 7);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4ZoomInButton,The following statement contains a magic number: coordinate = new Coordinate (x + 7' y + 7);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: Sleeping (500);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: InjectClickAtInvokeForced (150' 50);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: InjectClickAtInvokeForced (150' 50);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var itemColor = Color.FromArgb (191' 169' 135).ToArgb ();  	var goldBoxColor = Color.FromArgb (221' 189' 118).ToArgb ();  	var plungedColor1 = Color.FromArgb (248' 238' 214).ToArgb ();  	var plungedColor2 = Color.FromArgb (160' 144' 124).ToArgb ();  	var plungedColor3 = Color.FromArgb (197' 183' 149).ToArgb ();  	var wentBadColor1 = Color.FromArgb (255' 248' 229).ToArgb ();  	var wentBadColor2 = Color.FromArgb (255' 247' 217).ToArgb ();  	var wentBadColor3 = Color.FromArgb (43' 25' 4).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			{  				if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  					UpdateStatus (LogType.ScanFound' (++num).ToString ());  					//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						//Item found in ItemCollection' update timestamp.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				if (Settings.DoPlungedItemsClick) {  					// scan for plunged items  					if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  						UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  					// scan for "rotted supplies" items - dead fish  					if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  						UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  						crdList.Add (new Coordinate (i' j));  						var l_Item = new ItemCollection.Item ();  						l_CoordinateString = ItemCollection.MakePoint (i' j);  						if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  							//Item found in ItemCollection' update timestamp.  							var existingItem = l_ItemCollection.Items [l_CoordinateString];  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  						}  						else {  							//Item not found in ItemCollection' add new one.  							l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  						}  						continue;  					}  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdList' 0' Settings.CollectDistanceY' "scanresults.png");  	}  }  finally {  	// dispose potentially heavy resource  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int i = 0; i < Settings.BotPictureWidth; i++) {  	for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  		{  			if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  				UpdateStatus (LogType.ScanFound' (++num).ToString ());  				//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					//Item found in ItemCollection' update timestamp.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			if (Settings.DoPlungedItemsClick) {  				// scan for plunged items  				if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  					UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				// scan for "rotted supplies" items - dead fish  				if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  					UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int i = 0; i < Settings.BotPictureWidth; i++) {  	for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  		{  			if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  				UpdateStatus (LogType.ScanFound' (++num).ToString ());  				//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					//Item found in ItemCollection' update timestamp.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			if (Settings.DoPlungedItemsClick) {  				// scan for plunged items  				if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  					UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				// scan for "rotted supplies" items - dead fish  				if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  					UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int i = 0; i < Settings.BotPictureWidth; i++) {  	for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  		{  			if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  				UpdateStatus (LogType.ScanFound' (++num).ToString ());  				//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					//Item found in ItemCollection' update timestamp.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			if (Settings.DoPlungedItemsClick) {  				// scan for plunged items  				if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  					UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				// scan for "rotted supplies" items - dead fish  				if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  					UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int i = 0; i < Settings.BotPictureWidth; i++) {  	for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  		{  			if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  				UpdateStatus (LogType.ScanFound' (++num).ToString ());  				//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					//Item found in ItemCollection' update timestamp.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			if (Settings.DoPlungedItemsClick) {  				// scan for plunged items  				if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  					UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				// scan for "rotted supplies" items - dead fish  				if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  					UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int i = 0; i < Settings.BotPictureWidth; i++) {  	for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  		{  			if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  				UpdateStatus (LogType.ScanFound' (++num).ToString ());  				//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					//Item found in ItemCollection' update timestamp.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			if (Settings.DoPlungedItemsClick) {  				// scan for plunged items  				if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  					UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				// scan for "rotted supplies" items - dead fish  				if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  					UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int i = 0; i < Settings.BotPictureWidth; i++) {  	for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  		{  			if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  				UpdateStatus (LogType.ScanFound' (++num).ToString ());  				//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					//Item found in ItemCollection' update timestamp.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			if (Settings.DoPlungedItemsClick) {  				// scan for plunged items  				if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  					UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				// scan for "rotted supplies" items - dead fish  				if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  					UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int i = 0; i < Settings.BotPictureWidth; i++) {  	for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  		{  			if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  				UpdateStatus (LogType.ScanFound' (++num).ToString ());  				//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					//Item found in ItemCollection' update timestamp.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			if (Settings.DoPlungedItemsClick) {  				// scan for plunged items  				if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  					UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				// scan for "rotted supplies" items - dead fish  				if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  					UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int i = 0; i < Settings.BotPictureWidth; i++) {  	for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  		{  			if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  				UpdateStatus (LogType.ScanFound' (++num).ToString ());  				//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					//Item found in ItemCollection' update timestamp.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			if (Settings.DoPlungedItemsClick) {  				// scan for plunged items  				if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  					UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				// scan for "rotted supplies" items - dead fish  				if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  					UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int i = 0; i < Settings.BotPictureWidth; i++) {  	for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  		{  			if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  				UpdateStatus (LogType.ScanFound' (++num).ToString ());  				//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					//Item found in ItemCollection' update timestamp.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			if (Settings.DoPlungedItemsClick) {  				// scan for plunged items  				if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  					UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				// scan for "rotted supplies" items - dead fish  				if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  					UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int i = 0; i < Settings.BotPictureWidth; i++) {  	for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  		{  			if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  				UpdateStatus (LogType.ScanFound' (++num).ToString ());  				//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					//Item found in ItemCollection' update timestamp.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			if (Settings.DoPlungedItemsClick) {  				// scan for plunged items  				if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  					UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				// scan for "rotted supplies" items - dead fish  				if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  					UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int i = 0; i < Settings.BotPictureWidth; i++) {  	for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  		{  			if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  				UpdateStatus (LogType.ScanFound' (++num).ToString ());  				//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					//Item found in ItemCollection' update timestamp.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			if (Settings.DoPlungedItemsClick) {  				// scan for plunged items  				if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  					UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				// scan for "rotted supplies" items - dead fish  				if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  					UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int i = 0; i < Settings.BotPictureWidth; i++) {  	for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  		{  			if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  				UpdateStatus (LogType.ScanFound' (++num).ToString ());  				//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					//Item found in ItemCollection' update timestamp.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			if (Settings.DoPlungedItemsClick) {  				// scan for plunged items  				if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  					UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  				// scan for "rotted supplies" items - dead fish  				if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  					UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  					crdList.Add (new Coordinate (i' j));  					var l_Item = new ItemCollection.Item ();  					l_CoordinateString = ItemCollection.MakePoint (i' j);  					if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  						//Item found in ItemCollection' update timestamp.  						var existingItem = l_ItemCollection.Items [l_CoordinateString];  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  					}  					else {  						//Item not found in ItemCollection' add new one.  						l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  					}  					continue;  				}  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  	{  		if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  			UpdateStatus (LogType.ScanFound' (++num).ToString ());  			//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  			crdList.Add (new Coordinate (i' j));  			var l_Item = new ItemCollection.Item ();  			l_CoordinateString = ItemCollection.MakePoint (i' j);  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				var existingItem = l_ItemCollection.Items [l_CoordinateString];  				//Item found in ItemCollection' update timestamp.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  			}  			else {  				//Item not found in ItemCollection' add new one.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  			}  			continue;  		}  		if (Settings.DoPlungedItemsClick) {  			// scan for plunged items  			if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  				UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			// scan for "rotted supplies" items - dead fish  			if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  				UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  	{  		if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  			UpdateStatus (LogType.ScanFound' (++num).ToString ());  			//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  			crdList.Add (new Coordinate (i' j));  			var l_Item = new ItemCollection.Item ();  			l_CoordinateString = ItemCollection.MakePoint (i' j);  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				var existingItem = l_ItemCollection.Items [l_CoordinateString];  				//Item found in ItemCollection' update timestamp.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  			}  			else {  				//Item not found in ItemCollection' add new one.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  			}  			continue;  		}  		if (Settings.DoPlungedItemsClick) {  			// scan for plunged items  			if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  				UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			// scan for "rotted supplies" items - dead fish  			if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  				UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  	{  		if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  			UpdateStatus (LogType.ScanFound' (++num).ToString ());  			//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  			crdList.Add (new Coordinate (i' j));  			var l_Item = new ItemCollection.Item ();  			l_CoordinateString = ItemCollection.MakePoint (i' j);  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				var existingItem = l_ItemCollection.Items [l_CoordinateString];  				//Item found in ItemCollection' update timestamp.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  			}  			else {  				//Item not found in ItemCollection' add new one.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  			}  			continue;  		}  		if (Settings.DoPlungedItemsClick) {  			// scan for plunged items  			if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  				UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			// scan for "rotted supplies" items - dead fish  			if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  				UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  	{  		if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  			UpdateStatus (LogType.ScanFound' (++num).ToString ());  			//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  			crdList.Add (new Coordinate (i' j));  			var l_Item = new ItemCollection.Item ();  			l_CoordinateString = ItemCollection.MakePoint (i' j);  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				var existingItem = l_ItemCollection.Items [l_CoordinateString];  				//Item found in ItemCollection' update timestamp.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  			}  			else {  				//Item not found in ItemCollection' add new one.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  			}  			continue;  		}  		if (Settings.DoPlungedItemsClick) {  			// scan for plunged items  			if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  				UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			// scan for "rotted supplies" items - dead fish  			if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  				UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  	{  		if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  			UpdateStatus (LogType.ScanFound' (++num).ToString ());  			//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  			crdList.Add (new Coordinate (i' j));  			var l_Item = new ItemCollection.Item ();  			l_CoordinateString = ItemCollection.MakePoint (i' j);  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				var existingItem = l_ItemCollection.Items [l_CoordinateString];  				//Item found in ItemCollection' update timestamp.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  			}  			else {  				//Item not found in ItemCollection' add new one.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  			}  			continue;  		}  		if (Settings.DoPlungedItemsClick) {  			// scan for plunged items  			if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  				UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			// scan for "rotted supplies" items - dead fish  			if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  				UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  	{  		if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  			UpdateStatus (LogType.ScanFound' (++num).ToString ());  			//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  			crdList.Add (new Coordinate (i' j));  			var l_Item = new ItemCollection.Item ();  			l_CoordinateString = ItemCollection.MakePoint (i' j);  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				var existingItem = l_ItemCollection.Items [l_CoordinateString];  				//Item found in ItemCollection' update timestamp.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  			}  			else {  				//Item not found in ItemCollection' add new one.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  			}  			continue;  		}  		if (Settings.DoPlungedItemsClick) {  			// scan for plunged items  			if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  				UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			// scan for "rotted supplies" items - dead fish  			if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  				UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  	{  		if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  			UpdateStatus (LogType.ScanFound' (++num).ToString ());  			//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  			crdList.Add (new Coordinate (i' j));  			var l_Item = new ItemCollection.Item ();  			l_CoordinateString = ItemCollection.MakePoint (i' j);  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				var existingItem = l_ItemCollection.Items [l_CoordinateString];  				//Item found in ItemCollection' update timestamp.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  			}  			else {  				//Item not found in ItemCollection' add new one.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  			}  			continue;  		}  		if (Settings.DoPlungedItemsClick) {  			// scan for plunged items  			if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  				UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			// scan for "rotted supplies" items - dead fish  			if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  				UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  	{  		if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  			UpdateStatus (LogType.ScanFound' (++num).ToString ());  			//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  			crdList.Add (new Coordinate (i' j));  			var l_Item = new ItemCollection.Item ();  			l_CoordinateString = ItemCollection.MakePoint (i' j);  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				var existingItem = l_ItemCollection.Items [l_CoordinateString];  				//Item found in ItemCollection' update timestamp.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  			}  			else {  				//Item not found in ItemCollection' add new one.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  			}  			continue;  		}  		if (Settings.DoPlungedItemsClick) {  			// scan for plunged items  			if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  				UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			// scan for "rotted supplies" items - dead fish  			if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  				UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  	{  		if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  			UpdateStatus (LogType.ScanFound' (++num).ToString ());  			//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  			crdList.Add (new Coordinate (i' j));  			var l_Item = new ItemCollection.Item ();  			l_CoordinateString = ItemCollection.MakePoint (i' j);  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				var existingItem = l_ItemCollection.Items [l_CoordinateString];  				//Item found in ItemCollection' update timestamp.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  			}  			else {  				//Item not found in ItemCollection' add new one.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  			}  			continue;  		}  		if (Settings.DoPlungedItemsClick) {  			// scan for plunged items  			if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  				UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			// scan for "rotted supplies" items - dead fish  			if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  				UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  	{  		if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  			UpdateStatus (LogType.ScanFound' (++num).ToString ());  			//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  			crdList.Add (new Coordinate (i' j));  			var l_Item = new ItemCollection.Item ();  			l_CoordinateString = ItemCollection.MakePoint (i' j);  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				var existingItem = l_ItemCollection.Items [l_CoordinateString];  				//Item found in ItemCollection' update timestamp.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  			}  			else {  				//Item not found in ItemCollection' add new one.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  			}  			continue;  		}  		if (Settings.DoPlungedItemsClick) {  			// scan for plunged items  			if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  				UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			// scan for "rotted supplies" items - dead fish  			if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  				UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  	{  		if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  			UpdateStatus (LogType.ScanFound' (++num).ToString ());  			//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  			crdList.Add (new Coordinate (i' j));  			var l_Item = new ItemCollection.Item ();  			l_CoordinateString = ItemCollection.MakePoint (i' j);  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				var existingItem = l_ItemCollection.Items [l_CoordinateString];  				//Item found in ItemCollection' update timestamp.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  			}  			else {  				//Item not found in ItemCollection' add new one.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  			}  			continue;  		}  		if (Settings.DoPlungedItemsClick) {  			// scan for plunged items  			if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  				UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			// scan for "rotted supplies" items - dead fish  			if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  				UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  	{  		if (image.GetPixelRgb (i' j) == itemColor || image.GetPixelRgb (i' j) == goldBoxColor) {  			UpdateStatus (LogType.ScanFound' (++num).ToString ());  			//updateStatus(LogType.JustMessage' string.Format("x={0}'y={1}"' i' j));  			crdList.Add (new Coordinate (i' j));  			var l_Item = new ItemCollection.Item ();  			l_CoordinateString = ItemCollection.MakePoint (i' j);  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				var existingItem = l_ItemCollection.Items [l_CoordinateString];  				//Item found in ItemCollection' update timestamp.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  			}  			else {  				//Item not found in ItemCollection' add new one.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  			}  			continue;  		}  		if (Settings.DoPlungedItemsClick) {  			// scan for plunged items  			if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  				UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  			// scan for "rotted supplies" items - dead fish  			if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  				UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  				crdList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  				continue;  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (Settings.DoPlungedItemsClick) {  	// scan for plunged items  	if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  		UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  	// scan for "rotted supplies" items - dead fish  	if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  		UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (Settings.DoPlungedItemsClick) {  	// scan for plunged items  	if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  		UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  	// scan for "rotted supplies" items - dead fish  	if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  		UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (Settings.DoPlungedItemsClick) {  	// scan for plunged items  	if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  		UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  	// scan for "rotted supplies" items - dead fish  	if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  		UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (Settings.DoPlungedItemsClick) {  	// scan for plunged items  	if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  		UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  	// scan for "rotted supplies" items - dead fish  	if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  		UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (Settings.DoPlungedItemsClick) {  	// scan for plunged items  	if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  		UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  	// scan for "rotted supplies" items - dead fish  	if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  		UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (Settings.DoPlungedItemsClick) {  	// scan for plunged items  	if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  		UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  	// scan for "rotted supplies" items - dead fish  	if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  		UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (Settings.DoPlungedItemsClick) {  	// scan for plunged items  	if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  		UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  	// scan for "rotted supplies" items - dead fish  	if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  		UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (Settings.DoPlungedItemsClick) {  	// scan for plunged items  	if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  		UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  	// scan for "rotted supplies" items - dead fish  	if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  		UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (Settings.DoPlungedItemsClick) {  	// scan for plunged items  	if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  		UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  	// scan for "rotted supplies" items - dead fish  	if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  		UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (Settings.DoPlungedItemsClick) {  	// scan for plunged items  	if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  		UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  	// scan for "rotted supplies" items - dead fish  	if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  		UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  		crdList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  		continue;  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  	UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  	crdList.Add (new Coordinate (i' j));  	var l_Item = new ItemCollection.Item ();  	l_CoordinateString = ItemCollection.MakePoint (i' j);  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item found in ItemCollection' update timestamp.  		var existingItem = l_ItemCollection.Items [l_CoordinateString];  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  	}  	else {  		//Item not found in ItemCollection' add new one.  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  	}  	continue;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  	UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  	crdList.Add (new Coordinate (i' j));  	var l_Item = new ItemCollection.Item ();  	l_CoordinateString = ItemCollection.MakePoint (i' j);  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item found in ItemCollection' update timestamp.  		var existingItem = l_ItemCollection.Items [l_CoordinateString];  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  	}  	else {  		//Item not found in ItemCollection' add new one.  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  	}  	continue;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  	UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  	crdList.Add (new Coordinate (i' j));  	var l_Item = new ItemCollection.Item ();  	l_CoordinateString = ItemCollection.MakePoint (i' j);  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item found in ItemCollection' update timestamp.  		var existingItem = l_ItemCollection.Items [l_CoordinateString];  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  	}  	else {  		//Item not found in ItemCollection' add new one.  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  	}  	continue;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (image.GetPixelRgb (i' j) == plungedColor1 && image.GetPixelRgb (i - 3' j + 12) == plungedColor2 && image.GetPixelRgb (i + 9' j + 12) == plungedColor3) {  	UpdateStatus (LogType.PlungedScanFound' (++num).ToString ());  	crdList.Add (new Coordinate (i' j));  	var l_Item = new ItemCollection.Item ();  	l_CoordinateString = ItemCollection.MakePoint (i' j);  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item found in ItemCollection' update timestamp.  		var existingItem = l_ItemCollection.Items [l_CoordinateString];  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  	}  	else {  		//Item not found in ItemCollection' add new one.  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  	}  	continue;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  	UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  	crdList.Add (new Coordinate (i' j));  	var l_Item = new ItemCollection.Item ();  	l_CoordinateString = ItemCollection.MakePoint (i' j);  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item found in ItemCollection' update timestamp.  		var existingItem = l_ItemCollection.Items [l_CoordinateString];  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  	}  	else {  		//Item not found in ItemCollection' add new one.  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  	}  	continue;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  	UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  	crdList.Add (new Coordinate (i' j));  	var l_Item = new ItemCollection.Item ();  	l_CoordinateString = ItemCollection.MakePoint (i' j);  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item found in ItemCollection' update timestamp.  		var existingItem = l_ItemCollection.Items [l_CoordinateString];  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  	}  	else {  		//Item not found in ItemCollection' add new one.  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  	}  	continue;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  	UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  	crdList.Add (new Coordinate (i' j));  	var l_Item = new ItemCollection.Item ();  	l_CoordinateString = ItemCollection.MakePoint (i' j);  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item found in ItemCollection' update timestamp.  		var existingItem = l_ItemCollection.Items [l_CoordinateString];  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  	}  	else {  		//Item not found in ItemCollection' add new one.  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  	}  	continue;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  	UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  	crdList.Add (new Coordinate (i' j));  	var l_Item = new ItemCollection.Item ();  	l_CoordinateString = ItemCollection.MakePoint (i' j);  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item found in ItemCollection' update timestamp.  		var existingItem = l_ItemCollection.Items [l_CoordinateString];  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  	}  	else {  		//Item not found in ItemCollection' add new one.  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  	}  	continue;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  	UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  	crdList.Add (new Coordinate (i' j));  	var l_Item = new ItemCollection.Item ();  	l_CoordinateString = ItemCollection.MakePoint (i' j);  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item found in ItemCollection' update timestamp.  		var existingItem = l_ItemCollection.Items [l_CoordinateString];  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  	}  	else {  		//Item not found in ItemCollection' add new one.  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  	}  	continue;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: if (image.GetPixelRgb (i - 6' j + 18) == wentBadColor1 && image.GetPixelRgb (i - 3' j + 18) == wentBadColor2 && image.GetPixelRgb (i + 28' j + 10) == wentBadColor3) {  	UpdateStatus (LogType.RottedSuppliesScanFound' (++num).ToString ());  	crdList.Add (new Coordinate (i' j));  	var l_Item = new ItemCollection.Item ();  	l_CoordinateString = ItemCollection.MakePoint (i' j);  	if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  		//Item found in ItemCollection' update timestamp.  		var existingItem = l_ItemCollection.Items [l_CoordinateString];  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  	}  	else {  		//Item not found in ItemCollection' add new one.  		l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.CollectDistanceX' Settings.CollectDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  	}  	continue;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Collect,The following statement contains a magic number: UpdateStatus (LogType.ScanStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var color = Color.FromArgb (240' 210' 174).ToArgb ();  	var color2 = Color.FromArgb (131' 100' 67).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			if ((image.GetPixelRgb (i' j) == color) && (image.GetPixelRgb (i + 1' j) == color2)) {  				UpdateStatus (LogType.ScanProductionFound' (++num).ToString ());  				crdResultList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.SupplyDistanceX' Settings.SupplyDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanProductionStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdResultList' Settings.SupplyDistanceX' Settings.SupplyDistanceY' "supplyresults.png");  	}  }  finally {  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var color = Color.FromArgb (240' 210' 174).ToArgb ();  	var color2 = Color.FromArgb (131' 100' 67).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			if ((image.GetPixelRgb (i' j) == color) && (image.GetPixelRgb (i + 1' j) == color2)) {  				UpdateStatus (LogType.ScanProductionFound' (++num).ToString ());  				crdResultList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.SupplyDistanceX' Settings.SupplyDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanProductionStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdResultList' Settings.SupplyDistanceX' Settings.SupplyDistanceY' "supplyresults.png");  	}  }  finally {  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var color = Color.FromArgb (240' 210' 174).ToArgb ();  	var color2 = Color.FromArgb (131' 100' 67).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			if ((image.GetPixelRgb (i' j) == color) && (image.GetPixelRgb (i + 1' j) == color2)) {  				UpdateStatus (LogType.ScanProductionFound' (++num).ToString ());  				crdResultList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.SupplyDistanceX' Settings.SupplyDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanProductionStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdResultList' Settings.SupplyDistanceX' Settings.SupplyDistanceY' "supplyresults.png");  	}  }  finally {  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var color = Color.FromArgb (240' 210' 174).ToArgb ();  	var color2 = Color.FromArgb (131' 100' 67).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			if ((image.GetPixelRgb (i' j) == color) && (image.GetPixelRgb (i + 1' j) == color2)) {  				UpdateStatus (LogType.ScanProductionFound' (++num).ToString ());  				crdResultList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.SupplyDistanceX' Settings.SupplyDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanProductionStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdResultList' Settings.SupplyDistanceX' Settings.SupplyDistanceY' "supplyresults.png");  	}  }  finally {  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var color = Color.FromArgb (240' 210' 174).ToArgb ();  	var color2 = Color.FromArgb (131' 100' 67).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			if ((image.GetPixelRgb (i' j) == color) && (image.GetPixelRgb (i + 1' j) == color2)) {  				UpdateStatus (LogType.ScanProductionFound' (++num).ToString ());  				crdResultList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.SupplyDistanceX' Settings.SupplyDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanProductionStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdResultList' Settings.SupplyDistanceX' Settings.SupplyDistanceY' "supplyresults.png");  	}  }  finally {  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var color = Color.FromArgb (240' 210' 174).ToArgb ();  	var color2 = Color.FromArgb (131' 100' 67).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			if ((image.GetPixelRgb (i' j) == color) && (image.GetPixelRgb (i + 1' j) == color2)) {  				UpdateStatus (LogType.ScanProductionFound' (++num).ToString ());  				crdResultList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.SupplyDistanceX' Settings.SupplyDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanProductionStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdResultList' Settings.SupplyDistanceX' Settings.SupplyDistanceY' "supplyresults.png");  	}  }  finally {  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var color = Color.FromArgb (240' 210' 174).ToArgb ();  	var color2 = Color.FromArgb (131' 100' 67).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			if ((image.GetPixelRgb (i' j) == color) && (image.GetPixelRgb (i + 1' j) == color2)) {  				UpdateStatus (LogType.ScanProductionFound' (++num).ToString ());  				crdResultList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.SupplyDistanceX' Settings.SupplyDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanProductionStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdResultList' Settings.SupplyDistanceX' Settings.SupplyDistanceY' "supplyresults.png");  	}  }  finally {  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var color = Color.FromArgb (240' 210' 174).ToArgb ();  	var color2 = Color.FromArgb (131' 100' 67).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			if ((image.GetPixelRgb (i' j) == color) && (image.GetPixelRgb (i + 1' j) == color2)) {  				UpdateStatus (LogType.ScanProductionFound' (++num).ToString ());  				crdResultList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.SupplyDistanceX' Settings.SupplyDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanProductionStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdResultList' Settings.SupplyDistanceX' Settings.SupplyDistanceY' "supplyresults.png");  	}  }  finally {  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The following statement contains a magic number: try {  	if (IsPopupPresent (image)) {  		TryClosePopup ();  		BlockUntilPopupIs (false' Settings.WaitOnPopupInMillis);  		image.Dispose ();  		image = GetNewBrowserImageInvokeForced ();  	}  	var color = Color.FromArgb (240' 210' 174).ToArgb ();  	var color2 = Color.FromArgb (131' 100' 67).ToArgb ();  	uint num = 0;  	// Using picture scanner so we can use Parallel. Graphics in C# is not thread-safe  	//Parallel.For(0' Settings.BotPictureWidth' i =>  	for (int i = 0; i < Settings.BotPictureWidth; i++) {  		for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  			if ((image.GetPixelRgb (i' j) == color) && (image.GetPixelRgb (i + 1' j) == color2)) {  				UpdateStatus (LogType.ScanProductionFound' (++num).ToString ());  				crdResultList.Add (new Coordinate (i' j));  				var l_Item = new ItemCollection.Item ();  				l_CoordinateString = ItemCollection.MakePoint (i' j);  				if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  					//Item found in ItemCollection' update timestamp.  					var existingItem = l_ItemCollection.Items [l_CoordinateString];  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  				}  				else {  					//Item not found in ItemCollection' add new one.  					l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.SupplyDistanceX' Settings.SupplyDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  				}  			}  		}  	}  	sw.Stop ();  	UpdateStatus (LogType.ScanProductionStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  	if (Settings.SaveScanResults) {  		SaveScanResultToFile (image' crdResultList' Settings.SupplyDistanceX' Settings.SupplyDistanceY' "supplyresults.png");  	}  }  finally {  	image.Dispose ();  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The following statement contains a magic number: for (int i = 0; i < Settings.BotPictureWidth; i++) {  	for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  		if ((image.GetPixelRgb (i' j) == color) && (image.GetPixelRgb (i + 1' j) == color2)) {  			UpdateStatus (LogType.ScanProductionFound' (++num).ToString ());  			crdResultList.Add (new Coordinate (i' j));  			var l_Item = new ItemCollection.Item ();  			l_CoordinateString = ItemCollection.MakePoint (i' j);  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				//Item found in ItemCollection' update timestamp.  				var existingItem = l_ItemCollection.Items [l_CoordinateString];  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  			}  			else {  				//Item not found in ItemCollection' add new one.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.SupplyDistanceX' Settings.SupplyDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The following statement contains a magic number: for (int i = 0; i < Settings.BotPictureWidth; i++) {  	for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  		if ((image.GetPixelRgb (i' j) == color) && (image.GetPixelRgb (i + 1' j) == color2)) {  			UpdateStatus (LogType.ScanProductionFound' (++num).ToString ());  			crdResultList.Add (new Coordinate (i' j));  			var l_Item = new ItemCollection.Item ();  			l_CoordinateString = ItemCollection.MakePoint (i' j);  			if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  				//Item found in ItemCollection' update timestamp.  				var existingItem = l_ItemCollection.Items [l_CoordinateString];  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  			}  			else {  				//Item not found in ItemCollection' add new one.  				l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.SupplyDistanceX' Settings.SupplyDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  			}  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The following statement contains a magic number: for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  	if ((image.GetPixelRgb (i' j) == color) && (image.GetPixelRgb (i + 1' j) == color2)) {  		UpdateStatus (LogType.ScanProductionFound' (++num).ToString ());  		crdResultList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.SupplyDistanceX' Settings.SupplyDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The following statement contains a magic number: for (int j = 50; j < Settings.BotPictureHeight - 150; j++) {  	if ((image.GetPixelRgb (i' j) == color) && (image.GetPixelRgb (i + 1' j) == color2)) {  		UpdateStatus (LogType.ScanProductionFound' (++num).ToString ());  		crdResultList.Add (new Coordinate (i' j));  		var l_Item = new ItemCollection.Item ();  		l_CoordinateString = ItemCollection.MakePoint (i' j);  		if (l_ItemCollection.Items.TryGetValue (l_CoordinateString' out l_Item)) {  			//Item found in ItemCollection' update timestamp.  			var existingItem = l_ItemCollection.Items [l_CoordinateString];  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (existingItem.m_OffsetX' existingItem.m_OffsetY' System.DateTime.Now.Ticks.ToString ()' existingItem.YStepping' existingItem.LastClickWasSuccessful);  		}  		else {  			//Item not found in ItemCollection' add new one.  			l_ItemCollection.Items [l_CoordinateString] = new ItemCollection.Item (Settings.SupplyDistanceX' Settings.SupplyDistanceY' System.DateTime.Now.Ticks.ToString ()' 0' true);  		}  	}  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ScanPicture4Production,The following statement contains a magic number: UpdateStatus (LogType.ScanProductionStop' ((double)sw.ElapsedMilliseconds / 1000).ToString ("0.00"));  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,SaveScanResultToFile,The following statement contains a magic number: try {  	foreach (Coordinate coordinate2 in crdResultList) {  		image.Image.SetPixel (coordinate2.X' coordinate2.Y' Color.Black);  		image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y - 1' Color.White);  		image.Image.SetPixel (coordinate2.X' coordinate2.Y - 1' Color.White);  		image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y - 1' Color.White);  		image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y' Color.White);  		image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y' Color.White);  		image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y + 1' Color.White);  		image.Image.SetPixel (coordinate2.X' coordinate2.Y + 1' Color.White);  		image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y + 1' Color.White);  		var fromCoordinate = new Coordinate (coordinate2.X' coordinate2.Y);  		var toCoordinate = new Coordinate (coordinate2.X + deltaX' coordinate2.Y + deltaY);  		Algorithms2D.Line (fromCoordinate' toCoordinate' setPixelFunc);  		image.Image.SetPixel (toCoordinate.X - 1' toCoordinate.Y - 1' Color.White);  		image.Image.SetPixel (toCoordinate.X - 2' toCoordinate.Y - 2' Color.White);  		image.Image.SetPixel (toCoordinate.X + 1' toCoordinate.Y - 1' Color.White);  		image.Image.SetPixel (toCoordinate.X + 2' toCoordinate.Y - 2' Color.White);  	}  	image.Image.Save (fileName);  	UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_SaveScanResultToFile_ScanResultsSaved' fileName));  }  catch (Exception exception) {  	UpdateStatus (LogType.JustMessage' string.Format ("Save scan results exception. Error: {0}"' exception.Message));  	Logger.LogError ("Save scan results exception."' exception);  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,SaveScanResultToFile,The following statement contains a magic number: try {  	foreach (Coordinate coordinate2 in crdResultList) {  		image.Image.SetPixel (coordinate2.X' coordinate2.Y' Color.Black);  		image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y - 1' Color.White);  		image.Image.SetPixel (coordinate2.X' coordinate2.Y - 1' Color.White);  		image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y - 1' Color.White);  		image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y' Color.White);  		image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y' Color.White);  		image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y + 1' Color.White);  		image.Image.SetPixel (coordinate2.X' coordinate2.Y + 1' Color.White);  		image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y + 1' Color.White);  		var fromCoordinate = new Coordinate (coordinate2.X' coordinate2.Y);  		var toCoordinate = new Coordinate (coordinate2.X + deltaX' coordinate2.Y + deltaY);  		Algorithms2D.Line (fromCoordinate' toCoordinate' setPixelFunc);  		image.Image.SetPixel (toCoordinate.X - 1' toCoordinate.Y - 1' Color.White);  		image.Image.SetPixel (toCoordinate.X - 2' toCoordinate.Y - 2' Color.White);  		image.Image.SetPixel (toCoordinate.X + 1' toCoordinate.Y - 1' Color.White);  		image.Image.SetPixel (toCoordinate.X + 2' toCoordinate.Y - 2' Color.White);  	}  	image.Image.Save (fileName);  	UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_SaveScanResultToFile_ScanResultsSaved' fileName));  }  catch (Exception exception) {  	UpdateStatus (LogType.JustMessage' string.Format ("Save scan results exception. Error: {0}"' exception.Message));  	Logger.LogError ("Save scan results exception."' exception);  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,SaveScanResultToFile,The following statement contains a magic number: try {  	foreach (Coordinate coordinate2 in crdResultList) {  		image.Image.SetPixel (coordinate2.X' coordinate2.Y' Color.Black);  		image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y - 1' Color.White);  		image.Image.SetPixel (coordinate2.X' coordinate2.Y - 1' Color.White);  		image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y - 1' Color.White);  		image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y' Color.White);  		image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y' Color.White);  		image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y + 1' Color.White);  		image.Image.SetPixel (coordinate2.X' coordinate2.Y + 1' Color.White);  		image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y + 1' Color.White);  		var fromCoordinate = new Coordinate (coordinate2.X' coordinate2.Y);  		var toCoordinate = new Coordinate (coordinate2.X + deltaX' coordinate2.Y + deltaY);  		Algorithms2D.Line (fromCoordinate' toCoordinate' setPixelFunc);  		image.Image.SetPixel (toCoordinate.X - 1' toCoordinate.Y - 1' Color.White);  		image.Image.SetPixel (toCoordinate.X - 2' toCoordinate.Y - 2' Color.White);  		image.Image.SetPixel (toCoordinate.X + 1' toCoordinate.Y - 1' Color.White);  		image.Image.SetPixel (toCoordinate.X + 2' toCoordinate.Y - 2' Color.White);  	}  	image.Image.Save (fileName);  	UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_SaveScanResultToFile_ScanResultsSaved' fileName));  }  catch (Exception exception) {  	UpdateStatus (LogType.JustMessage' string.Format ("Save scan results exception. Error: {0}"' exception.Message));  	Logger.LogError ("Save scan results exception."' exception);  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,SaveScanResultToFile,The following statement contains a magic number: try {  	foreach (Coordinate coordinate2 in crdResultList) {  		image.Image.SetPixel (coordinate2.X' coordinate2.Y' Color.Black);  		image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y - 1' Color.White);  		image.Image.SetPixel (coordinate2.X' coordinate2.Y - 1' Color.White);  		image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y - 1' Color.White);  		image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y' Color.White);  		image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y' Color.White);  		image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y + 1' Color.White);  		image.Image.SetPixel (coordinate2.X' coordinate2.Y + 1' Color.White);  		image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y + 1' Color.White);  		var fromCoordinate = new Coordinate (coordinate2.X' coordinate2.Y);  		var toCoordinate = new Coordinate (coordinate2.X + deltaX' coordinate2.Y + deltaY);  		Algorithms2D.Line (fromCoordinate' toCoordinate' setPixelFunc);  		image.Image.SetPixel (toCoordinate.X - 1' toCoordinate.Y - 1' Color.White);  		image.Image.SetPixel (toCoordinate.X - 2' toCoordinate.Y - 2' Color.White);  		image.Image.SetPixel (toCoordinate.X + 1' toCoordinate.Y - 1' Color.White);  		image.Image.SetPixel (toCoordinate.X + 2' toCoordinate.Y - 2' Color.White);  	}  	image.Image.Save (fileName);  	UpdateStatus (LogType.JustMessage' string.Format (Resource.MainForm_SaveScanResultToFile_ScanResultsSaved' fileName));  }  catch (Exception exception) {  	UpdateStatus (LogType.JustMessage' string.Format ("Save scan results exception. Error: {0}"' exception.Message));  	Logger.LogError ("Save scan results exception."' exception);  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,SaveScanResultToFile,The following statement contains a magic number: foreach (Coordinate coordinate2 in crdResultList) {  	image.Image.SetPixel (coordinate2.X' coordinate2.Y' Color.Black);  	image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y - 1' Color.White);  	image.Image.SetPixel (coordinate2.X' coordinate2.Y - 1' Color.White);  	image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y - 1' Color.White);  	image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y' Color.White);  	image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y' Color.White);  	image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y + 1' Color.White);  	image.Image.SetPixel (coordinate2.X' coordinate2.Y + 1' Color.White);  	image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y + 1' Color.White);  	var fromCoordinate = new Coordinate (coordinate2.X' coordinate2.Y);  	var toCoordinate = new Coordinate (coordinate2.X + deltaX' coordinate2.Y + deltaY);  	Algorithms2D.Line (fromCoordinate' toCoordinate' setPixelFunc);  	image.Image.SetPixel (toCoordinate.X - 1' toCoordinate.Y - 1' Color.White);  	image.Image.SetPixel (toCoordinate.X - 2' toCoordinate.Y - 2' Color.White);  	image.Image.SetPixel (toCoordinate.X + 1' toCoordinate.Y - 1' Color.White);  	image.Image.SetPixel (toCoordinate.X + 2' toCoordinate.Y - 2' Color.White);  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,SaveScanResultToFile,The following statement contains a magic number: foreach (Coordinate coordinate2 in crdResultList) {  	image.Image.SetPixel (coordinate2.X' coordinate2.Y' Color.Black);  	image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y - 1' Color.White);  	image.Image.SetPixel (coordinate2.X' coordinate2.Y - 1' Color.White);  	image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y - 1' Color.White);  	image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y' Color.White);  	image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y' Color.White);  	image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y + 1' Color.White);  	image.Image.SetPixel (coordinate2.X' coordinate2.Y + 1' Color.White);  	image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y + 1' Color.White);  	var fromCoordinate = new Coordinate (coordinate2.X' coordinate2.Y);  	var toCoordinate = new Coordinate (coordinate2.X + deltaX' coordinate2.Y + deltaY);  	Algorithms2D.Line (fromCoordinate' toCoordinate' setPixelFunc);  	image.Image.SetPixel (toCoordinate.X - 1' toCoordinate.Y - 1' Color.White);  	image.Image.SetPixel (toCoordinate.X - 2' toCoordinate.Y - 2' Color.White);  	image.Image.SetPixel (toCoordinate.X + 1' toCoordinate.Y - 1' Color.White);  	image.Image.SetPixel (toCoordinate.X + 2' toCoordinate.Y - 2' Color.White);  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,SaveScanResultToFile,The following statement contains a magic number: foreach (Coordinate coordinate2 in crdResultList) {  	image.Image.SetPixel (coordinate2.X' coordinate2.Y' Color.Black);  	image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y - 1' Color.White);  	image.Image.SetPixel (coordinate2.X' coordinate2.Y - 1' Color.White);  	image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y - 1' Color.White);  	image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y' Color.White);  	image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y' Color.White);  	image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y + 1' Color.White);  	image.Image.SetPixel (coordinate2.X' coordinate2.Y + 1' Color.White);  	image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y + 1' Color.White);  	var fromCoordinate = new Coordinate (coordinate2.X' coordinate2.Y);  	var toCoordinate = new Coordinate (coordinate2.X + deltaX' coordinate2.Y + deltaY);  	Algorithms2D.Line (fromCoordinate' toCoordinate' setPixelFunc);  	image.Image.SetPixel (toCoordinate.X - 1' toCoordinate.Y - 1' Color.White);  	image.Image.SetPixel (toCoordinate.X - 2' toCoordinate.Y - 2' Color.White);  	image.Image.SetPixel (toCoordinate.X + 1' toCoordinate.Y - 1' Color.White);  	image.Image.SetPixel (toCoordinate.X + 2' toCoordinate.Y - 2' Color.White);  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,SaveScanResultToFile,The following statement contains a magic number: foreach (Coordinate coordinate2 in crdResultList) {  	image.Image.SetPixel (coordinate2.X' coordinate2.Y' Color.Black);  	image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y - 1' Color.White);  	image.Image.SetPixel (coordinate2.X' coordinate2.Y - 1' Color.White);  	image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y - 1' Color.White);  	image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y' Color.White);  	image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y' Color.White);  	image.Image.SetPixel (coordinate2.X - 1' coordinate2.Y + 1' Color.White);  	image.Image.SetPixel (coordinate2.X' coordinate2.Y + 1' Color.White);  	image.Image.SetPixel (coordinate2.X + 1' coordinate2.Y + 1' Color.White);  	var fromCoordinate = new Coordinate (coordinate2.X' coordinate2.Y);  	var toCoordinate = new Coordinate (coordinate2.X + deltaX' coordinate2.Y + deltaY);  	Algorithms2D.Line (fromCoordinate' toCoordinate' setPixelFunc);  	image.Image.SetPixel (toCoordinate.X - 1' toCoordinate.Y - 1' Color.White);  	image.Image.SetPixel (toCoordinate.X - 2' toCoordinate.Y - 2' Color.White);  	image.Image.SetPixel (toCoordinate.X + 1' toCoordinate.Y - 1' Color.White);  	image.Image.SetPixel (toCoordinate.X + 2' toCoordinate.Y - 2' Color.White);  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,SaveScanResultToFile,The following statement contains a magic number: image.Image.SetPixel (toCoordinate.X - 2' toCoordinate.Y - 2' Color.White);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,SaveScanResultToFile,The following statement contains a magic number: image.Image.SetPixel (toCoordinate.X - 2' toCoordinate.Y - 2' Color.White);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,SaveScanResultToFile,The following statement contains a magic number: image.Image.SetPixel (toCoordinate.X + 2' toCoordinate.Y - 2' Color.White);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,SaveScanResultToFile,The following statement contains a magic number: image.Image.SetPixel (toCoordinate.X + 2' toCoordinate.Y - 2' Color.White);  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AutoLogin,The following statement contains a magic number: try {  	AddMessage (Resource.MainForm_AutoLogin_LoadingLastUsedWorld);  	const int sleepInMillis = 50;  	const int maxTimeoutCount = 10000 / sleepInMillis;  	int tries = 0;  	while (!_documentLoadedcompletly && tries < maxTimeoutCount) {  		Sleeping (sleepInMillis);  		tries++;  	}  	if (tries >= maxTimeoutCount) {  		AddMessage (string.Format (Resource.MainForm_AutoLogin_PageLoadTooSlow' maxTimeoutCount / 1000));  		return;  	}  	AddMessage (Resource.MainForm_AutoLogin_WaitPageToCompleteLoading);  	const int maxTimeForDocumentToBecomeReady = 10000 / sleepInMillis;  	tries = 0;  	while (tries < maxTimeForDocumentToBecomeReady) {  		Sleeping (sleepInMillis);  		if (((JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"login_world_id\"]")) != null) {  			tries = maxTimeForDocumentToBecomeReady;  		}  	}  	dynamic formWorldId = (JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"login_world_id\"]");  	dynamic formSubmit = (JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"submit_login\"]");  	// Make sure we have the object.  	if (formWorldId == null) {  		AddMessage (Resource.MainForm_AutoLogin_PageNotReady);  		return;  	}  	using (formWorldId) {  		// Invoke 'form.click' just as you would in JS!  		formWorldId.value = Settings.LastLoadedWorld;  		try {  			formSubmit.click ();  		}  		catch {  		}  	}  }  finally {  	_allowedInteraction = true;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AutoLogin,The following statement contains a magic number: try {  	AddMessage (Resource.MainForm_AutoLogin_LoadingLastUsedWorld);  	const int sleepInMillis = 50;  	const int maxTimeoutCount = 10000 / sleepInMillis;  	int tries = 0;  	while (!_documentLoadedcompletly && tries < maxTimeoutCount) {  		Sleeping (sleepInMillis);  		tries++;  	}  	if (tries >= maxTimeoutCount) {  		AddMessage (string.Format (Resource.MainForm_AutoLogin_PageLoadTooSlow' maxTimeoutCount / 1000));  		return;  	}  	AddMessage (Resource.MainForm_AutoLogin_WaitPageToCompleteLoading);  	const int maxTimeForDocumentToBecomeReady = 10000 / sleepInMillis;  	tries = 0;  	while (tries < maxTimeForDocumentToBecomeReady) {  		Sleeping (sleepInMillis);  		if (((JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"login_world_id\"]")) != null) {  			tries = maxTimeForDocumentToBecomeReady;  		}  	}  	dynamic formWorldId = (JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"login_world_id\"]");  	dynamic formSubmit = (JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"submit_login\"]");  	// Make sure we have the object.  	if (formWorldId == null) {  		AddMessage (Resource.MainForm_AutoLogin_PageNotReady);  		return;  	}  	using (formWorldId) {  		// Invoke 'form.click' just as you would in JS!  		formWorldId.value = Settings.LastLoadedWorld;  		try {  			formSubmit.click ();  		}  		catch {  		}  	}  }  finally {  	_allowedInteraction = true;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AutoLogin,The following statement contains a magic number: try {  	AddMessage (Resource.MainForm_AutoLogin_LoadingLastUsedWorld);  	const int sleepInMillis = 50;  	const int maxTimeoutCount = 10000 / sleepInMillis;  	int tries = 0;  	while (!_documentLoadedcompletly && tries < maxTimeoutCount) {  		Sleeping (sleepInMillis);  		tries++;  	}  	if (tries >= maxTimeoutCount) {  		AddMessage (string.Format (Resource.MainForm_AutoLogin_PageLoadTooSlow' maxTimeoutCount / 1000));  		return;  	}  	AddMessage (Resource.MainForm_AutoLogin_WaitPageToCompleteLoading);  	const int maxTimeForDocumentToBecomeReady = 10000 / sleepInMillis;  	tries = 0;  	while (tries < maxTimeForDocumentToBecomeReady) {  		Sleeping (sleepInMillis);  		if (((JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"login_world_id\"]")) != null) {  			tries = maxTimeForDocumentToBecomeReady;  		}  	}  	dynamic formWorldId = (JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"login_world_id\"]");  	dynamic formSubmit = (JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"submit_login\"]");  	// Make sure we have the object.  	if (formWorldId == null) {  		AddMessage (Resource.MainForm_AutoLogin_PageNotReady);  		return;  	}  	using (formWorldId) {  		// Invoke 'form.click' just as you would in JS!  		formWorldId.value = Settings.LastLoadedWorld;  		try {  			formSubmit.click ();  		}  		catch {  		}  	}  }  finally {  	_allowedInteraction = true;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AutoLogin,The following statement contains a magic number: try {  	AddMessage (Resource.MainForm_AutoLogin_LoadingLastUsedWorld);  	const int sleepInMillis = 50;  	const int maxTimeoutCount = 10000 / sleepInMillis;  	int tries = 0;  	while (!_documentLoadedcompletly && tries < maxTimeoutCount) {  		Sleeping (sleepInMillis);  		tries++;  	}  	if (tries >= maxTimeoutCount) {  		AddMessage (string.Format (Resource.MainForm_AutoLogin_PageLoadTooSlow' maxTimeoutCount / 1000));  		return;  	}  	AddMessage (Resource.MainForm_AutoLogin_WaitPageToCompleteLoading);  	const int maxTimeForDocumentToBecomeReady = 10000 / sleepInMillis;  	tries = 0;  	while (tries < maxTimeForDocumentToBecomeReady) {  		Sleeping (sleepInMillis);  		if (((JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"login_world_id\"]")) != null) {  			tries = maxTimeForDocumentToBecomeReady;  		}  	}  	dynamic formWorldId = (JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"login_world_id\"]");  	dynamic formSubmit = (JSObject)_aweWebView.ExecuteJavascriptWithResult ("document.forms[\"landing_login_form\"][\"submit_login\"]");  	// Make sure we have the object.  	if (formWorldId == null) {  		AddMessage (Resource.MainForm_AutoLogin_PageNotReady);  		return;  	}  	using (formWorldId) {  		// Invoke 'form.click' just as you would in JS!  		formWorldId.value = Settings.LastLoadedWorld;  		try {  			formSubmit.click ();  		}  		catch {  		}  	}  }  finally {  	_allowedInteraction = true;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AutoLogin,The following statement contains a magic number: if (tries >= maxTimeoutCount) {  	AddMessage (string.Format (Resource.MainForm_AutoLogin_PageLoadTooSlow' maxTimeoutCount / 1000));  	return;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,AutoLogin,The following statement contains a magic number: AddMessage (string.Format (Resource.MainForm_AutoLogin_PageLoadTooSlow' maxTimeoutCount / 1000));  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ResizeMainFormIfNecessary,The following statement contains a magic number: if (Settings.BotPictureWidth < Width)  	Width = Settings.BotPictureWidth + 8;  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ResizeMainFormIfNecessary,The following statement contains a magic number: Width = Settings.BotPictureWidth + 8;  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ResizeMainFormIfNecessary,The following statement contains a magic number: if (Settings.BotPictureHeight < Height)  	Height = Settings.BotPictureHeight + panelButtonControls.Height + 27;  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,ResizeMainFormIfNecessary,The following statement contains a magic number: Height = Settings.BotPictureHeight + panelButtonControls.Height + 27;  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,Sleeping,The following statement contains a magic number: while (i < count) {  	Thread.Sleep (10);  	Application.DoEvents ();  	i++;  }  
Magic Number,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,Sleeping,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,ForgeBot,Screenshot,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Screenshot.cs,GetPixelRgb,The following statement contains a magic number: if (position + 3 >= _bufferLength || position < 0)  	return 0;  
Magic Number,ForgeBot,Screenshot,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Screenshot.cs,GetPixelRgb,The following statement contains a magic number: return (int)(((ulong)((((_rgbValues [position + 2] << 16) | (_rgbValues [position + 1] << 8)) | _rgbValues [position]) | (0xFF << 0x18))) & 0xffffffffL);  
Magic Number,ForgeBot,Screenshot,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Screenshot.cs,GetPixelRgb,The following statement contains a magic number: return (int)(((ulong)((((_rgbValues [position + 2] << 16) | (_rgbValues [position + 1] << 8)) | _rgbValues [position]) | (0xFF << 0x18))) & 0xffffffffL);  
Magic Number,ForgeBot,Screenshot,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Screenshot.cs,GetPixelRgb,The following statement contains a magic number: return (int)(((ulong)((((_rgbValues [position + 2] << 16) | (_rgbValues [position + 1] << 8)) | _rgbValues [position]) | (0xFF << 0x18))) & 0xffffffffL);  
Magic Number,ForgeBot,SettingsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\SettingsForm.cs,SettingsForm,The following statement contains a magic number: numericUpDown_WaitBeforeProduction.Value = _settings.WaitBeforeProductionInMillis / 1000;  
Magic Number,ForgeBot,SettingsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\SettingsForm.cs,SettingsForm,The following statement contains a magic number: switch (language) {  case "it-IT":  	comboBoxLanguage.SelectedIndex = 2;  	break;  case "en-US":  	comboBoxLanguage.SelectedIndex = 0;  	break;  case "de-DE":  	comboBoxLanguage.SelectedIndex = 1;  	break;  case "ru-RU":  	comboBoxLanguage.SelectedIndex = 3;  	break;  case "pl-PL":  	comboBoxLanguage.SelectedIndex = 4;  	break;  default:  	comboBoxLanguage.SelectedIndex = 0;  	//MessageBox.Show("error initializing settings: application language");  	break;  }  
Magic Number,ForgeBot,SettingsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\SettingsForm.cs,SettingsForm,The following statement contains a magic number: switch (language) {  case "it-IT":  	comboBoxLanguage.SelectedIndex = 2;  	break;  case "en-US":  	comboBoxLanguage.SelectedIndex = 0;  	break;  case "de-DE":  	comboBoxLanguage.SelectedIndex = 1;  	break;  case "ru-RU":  	comboBoxLanguage.SelectedIndex = 3;  	break;  case "pl-PL":  	comboBoxLanguage.SelectedIndex = 4;  	break;  default:  	comboBoxLanguage.SelectedIndex = 0;  	//MessageBox.Show("error initializing settings: application language");  	break;  }  
Magic Number,ForgeBot,SettingsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\SettingsForm.cs,SettingsForm,The following statement contains a magic number: switch (language) {  case "it-IT":  	comboBoxLanguage.SelectedIndex = 2;  	break;  case "en-US":  	comboBoxLanguage.SelectedIndex = 0;  	break;  case "de-DE":  	comboBoxLanguage.SelectedIndex = 1;  	break;  case "ru-RU":  	comboBoxLanguage.SelectedIndex = 3;  	break;  case "pl-PL":  	comboBoxLanguage.SelectedIndex = 4;  	break;  default:  	comboBoxLanguage.SelectedIndex = 0;  	//MessageBox.Show("error initializing settings: application language");  	break;  }  
Magic Number,ForgeBot,SettingsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\SettingsForm.cs,SettingsForm,The following statement contains a magic number: comboBoxLanguage.SelectedIndex = 2;  
Magic Number,ForgeBot,SettingsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\SettingsForm.cs,SettingsForm,The following statement contains a magic number: comboBoxLanguage.SelectedIndex = 3;  
Magic Number,ForgeBot,SettingsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\SettingsForm.cs,SettingsForm,The following statement contains a magic number: comboBoxLanguage.SelectedIndex = 4;  
Magic Number,ForgeBot,SettingsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\SettingsForm.cs,buttonSave_Click,The following statement contains a magic number: _settings.WaitBeforeProductionInMillis = ((int)numericUpDown_WaitBeforeProduction.Value) * 1000;  
Magic Number,ForgeBot,SettingsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\SettingsForm.cs,DetectCultureFromCombo,The following statement contains a magic number: switch (language) {  case 2:  	return "it-IT";  case 0:  	return "en-US";  case 1:  	return "de-DE";  case 3:  	return "ru-RU";  case 4:  	return "pl-PL";  default:  	return "en-US";  }  
Magic Number,ForgeBot,SettingsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\SettingsForm.cs,DetectCultureFromCombo,The following statement contains a magic number: switch (language) {  case 2:  	return "it-IT";  case 0:  	return "en-US";  case 1:  	return "de-DE";  case 3:  	return "ru-RU";  case 4:  	return "pl-PL";  default:  	return "en-US";  }  
Magic Number,ForgeBot,SettingsForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\SettingsForm.cs,DetectCultureFromCombo,The following statement contains a magic number: switch (language) {  case 2:  	return "it-IT";  case 0:  	return "en-US";  case 1:  	return "de-DE";  case 3:  	return "ru-RU";  case 4:  	return "pl-PL";  default:  	return "en-US";  }  
Magic Number,ForgeBot,TripleDESStringEncryptor,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\TrippleDESStringEncryptor.cs,TripleDESStringEncryptor,The following statement contains a magic number: _key = Encoding.ASCII.GetBytes (guid.Substring (0' 24));  
Magic Number,ForgeBot,TripleDESStringEncryptor,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\TrippleDESStringEncryptor.cs,TripleDESStringEncryptor,The following statement contains a magic number: _iv = Encoding.ASCII.GetBytes (guid.Substring (24' 8));  
Magic Number,ForgeBot,TripleDESStringEncryptor,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\TrippleDESStringEncryptor.cs,TripleDESStringEncryptor,The following statement contains a magic number: _iv = Encoding.ASCII.GetBytes (guid.Substring (24' 8));  
Magic Number,ForgeBot,Zipper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Zipper.cs,ReadFully,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var buffer = new byte[16 * 1024];  	int read;  	while ((read = input.Read (buffer' 0' buffer.Length)) > 0) {  		ms.Write (buffer' 0' read);  	}  	return ms.ToArray ();  }  
Magic Number,ForgeBot,Zipper,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\Zipper.cs,ReadFully,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var buffer = new byte[16 * 1024];  	int read;  	while ((read = input.Read (buffer' 0' buffer.Length)) > 0) {  		ms.Write (buffer' 0' read);  	}  	return ms.ToArray ();  }  
Missing Default,ForgeBot,FoEResourceInterceptor,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\FoEResourceInterceptor.cs,ParseData,The following switch statement is missing a default case: switch (keyValuePair [0]) {  case "name":  	loginData.Username = keyValuePair [1];  	break;  case "password":  	loginData.PasswordHash = keyValuePair [1];  	break;  case "world_id":  	loginData.WorldId = keyValuePair [1];  	break;  }  
Missing Default,ForgeBot,MainForm,C:\repos\Rassilion_Denemeler\ivanJo-FoE-source\MainForm.cs,UpdateStatus,The following switch statement is missing a default case: switch (status) {  case LogType.JustMessage:  	AddMessage (info);  	return;  case LogType.ScanFound:  	AddMessage (string.Format (Resource.MainForm_updateStatus_Item_X_found' info));  	return;  case LogType.PlungedScanFound:  	AddMessage (string.Format (Resource.MainForm_updateStatus_Plunged_item_X_found' info));  	return;  case LogType.RottedSuppliesScanFound:  	AddMessage (string.Format (Resource.MainForm_updateStatus_RottedSupply_item_X_found' info));  	return;  case LogType.ScanProductionFound:  	AddMessage (string.Format (Resource.MainForm_updateStatus_Production_item_X_found' info));  	return;  case LogType.ScanStart:  	_botStatus = BotStatus.Scan;  	labelStatus.Text = Resource.MainForm_updateStatus_Bot_Scanning;  	AddMessage (Resource.MainForm_updateStatus_Started_scanning);  	return;  case LogType.ScanProductionStart:  	_botStatus = BotStatus.ScanProd;  	labelStatus.Text = Resource.MainForm_updateStatus_Bot_Scanning_production;  	AddMessage (Resource.MainForm_updateStatus_Started_scanning_for_production);  	return;  case LogType.ClickProductionStart:  	_botStatus = BotStatus.ClickProd;  	labelStatus.Text = Resource.MainForm_updateStatus_Bot_Clicking_production;  	AddMessage (Resource.MainForm_updateStatus_Started_clicking_production_items);  	return;  case LogType.ClickProductionSelect:  	AddMessage (string.Format (Resource.MainForm_updateStatus_Selected_production_item_X' info));  	return;  case LogType.ClickProductionDone:  	AddMessage (Resource.MainForm_updateStatus_Selected_production_type);  	return;  case LogType.ScanStop:  	_botStatus = BotStatus.Idle;  	labelStatus.Text = string.Format (Resource.MainForm_updateStatus_Bot_Scanning_done' info);  	AddMessage (string.Format (Resource.MainForm_updateStatus_Scanning_done' info));  	return;  case LogType.ScanProductionStop:  	_botStatus = BotStatus.Idle;  	labelStatus.Text = string.Format (Resource.MainForm_updateStatus_Bot_Production_scanning_done' info);  	AddMessage (string.Format (Resource.MainForm_updateStatus_Production_scanning_done' info));  	return;  case LogType.ClickDone:  	AddMessage (string.Format (Resource.MainForm_updateStatus_Clicked_item_X' info));  	return;  case LogType.ClickStart:  	_botStatus = BotStatus.Click;  	labelStatus.Text = Resource.MainForm_updateStatus_Bot_Clicking;  	AddMessage (Resource.MainForm_updateStatus_Started_clicking);  	return;  case LogType.ClickStop:  	_botStatus = BotStatus.Idle;  	labelStatus.Text = Resource.MainForm_updateStatus_Bot_Done_clicking;  	AddMessage (Resource.MainForm_updateStatus_Bot_Done_clicking);  	return;  case LogType.BotIdle:  	_botStatus = BotStatus.Idle;  	labelStatus.Text = Resource.MainForm_updateStatus_Bot_Idle;  	AddMessage (string.Format (Resource.MainForm_updateStatus_Bot_Idle_for_X_min' Settings.CheckEveryXMinutes));  	return;  case LogType.ZoomingIn:  	labelStatus.Text = Resource.MainForm_updateStatus_Bot_Zooming;  	AddMessage (string.Format (Resource.MainForm_updateStatus_Trying_to_zoom_in));  	return;  case LogType.CheckForZoom:  	labelStatus.Text = Resource.MainForm_updateStatus_Check_for_zoom;  	AddMessage (string.Format (Resource.MainForm_updateStatus_Check_for_zoom));  	return;  case LogType.BotInPause:  	labelStatus.Text = string.Format (Resource.MainForm_updateStatus_Bot_Paused' Settings.PauseCountdownForXSeconds);  	AddMessage (string.Format (Resource.MainForm_updateStatus_Bot_Paused_for_X_min' Settings.PauseCountdownForXSeconds));  	return;  }  
