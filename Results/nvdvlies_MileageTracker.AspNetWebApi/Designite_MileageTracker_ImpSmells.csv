Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MileageTracker.Extensions,TripExtensions,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Extensions\TripExtensions.cs,ResolveAddress,The method has 5 parameters.
Long Parameter List,MileageTracker.Extensions,TripExtensions,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Extensions\TripExtensions.cs,ResolveCar,The method has 5 parameters.
Long Parameter List,MileageTracker.Services,AddressService,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Services\AddressService.cs,GetAddressesPaginated,The method has 5 parameters.
Long Parameter List,MileageTracker.Services,CarService,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Services\CarService.cs,GetCarsPaginated,The method has 5 parameters.
Long Parameter List,MileageTracker.Services,TripService,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Services\TripService.cs,GetTripsPaginated,The method has 6 parameters.
Long Statement,MileageTracker,AutofacConfig,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\App_Start\AutofacConfig.cs,RegisterContainer,The length of the statement  "	//builder.RegisterInstance(new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()))); " is 121.
Long Statement,MileageTracker.Extensions,DbEntityValidationExceptionExtensions,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Extensions\DbEntityValidationExceptionExtensions.cs,GetErrorResult,The length of the statement  "		var message = ex.EntityValidationErrors.SelectMany (error => error.ValidationErrors).Aggregate (String.Empty' (errors' error) => errors + String.Format ("Property: {0} Error: {1}{2}"' error.PropertyName' error.ErrorMessage' Environment.NewLine)); " is 246.
Long Statement,MileageTracker.Services,AddressService,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Services\AddressService.cs,GetAddressesPaginated,The length of the statement  "		Items = _dbContext.Addresses.Where (t => t.User.Id == _applicationUser.Id).OrderBy (t => t.Name).Skip ((pageNumber - 1) * pageSize).Take (pageSize) " is 147.
Long Statement,MileageTracker.Services,AddressService,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Services\AddressService.cs,UpdateAddress,The length of the statement  "	var existingAddress = _dbContext.Addresses.SingleOrDefault (t => t.User.Id == _applicationUser.Id && t.Id == address.Id); " is 121.
Long Statement,MileageTracker.Services,CarService,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Services\CarService.cs,GetCarsPaginated,The length of the statement  "		Items = _dbContext.Cars.Where (c => c.User.Id == _applicationUser.Id).OrderBy (c => c.Make).Skip ((pageNumber - 1) * pageSize).Take (pageSize) " is 142.
Long Statement,MileageTracker.Services,TripService,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Services\TripService.cs,GetTripsPaginated,The length of the statement  "		Items = _dbContext.Trips.Where (t => t.User.Id == _applicationUser.Id).OrderByDescending (t => t.Date).ThenByDescending (t => t.Id).Skip ((pageNumber - 1) * pageSize).Take (pageSize) " is 182.
Long Statement,MileageTracker.Services,TripService,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Services\TripService.cs,GetNewTripTemplate,The length of the statement  "	var previousTrip = _dbContext.Trips.Where (t => t.User.Id == _applicationUser.Id).OrderByDescending (t => t.Date).FirstOrDefault (); " is 132.
Long Statement,MileageTracker.Services,TripService,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Services\TripService.cs,AddTrip,The length of the statement  "		trip.DistanceInKm = _distanceCalculatorService.GetDistance (trip.AddressOrigin' trip.AddressDestination' Mode.Driving' Units.Metric); " is 133.
Long Statement,MileageTracker.Services,TripService,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Services\TripService.cs,UpdateTrip,The length of the statement  "		existingTrip.DistanceInKm = _distanceCalculatorService.GetDistance (existingTrip.AddressOrigin' existingTrip.AddressDestination' Mode.Driving' Units.Metric); " is 157.
Magic Number,MileageTracker,Startup,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Startup.cs,ConfigureOAuth,The following statement contains a magic number: app.Use (async (context' next) =>  {  	var request = context.Request;  	var response = context.Response;  	if (request.Path.StartsWithSegments (oAuthServerOptions.TokenEndpointPath)) {  		var origin = request.Headers.Get ("Origin");  		if (!string.IsNullOrEmpty (origin)) {  			response.Headers.Set ("Access-Control-Allow-Origin"' origin);  		}  		if (request.Method == "OPTIONS") {  			response.StatusCode = 200;  			response.Headers.AppendCommaSeparatedValues ("Access-Control-Allow-Methods"' "GET"' "POST");  			response.Headers.AppendCommaSeparatedValues ("Access-Control-Allow-Headers"' "authorization"' "content-type");  			return;  		}  	}  	await next ();  });  
Magic Number,MileageTracker,Startup,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Startup.cs,ConfigureOAuth,The following statement contains a magic number: if (request.Path.StartsWithSegments (oAuthServerOptions.TokenEndpointPath)) {  	var origin = request.Headers.Get ("Origin");  	if (!string.IsNullOrEmpty (origin)) {  		response.Headers.Set ("Access-Control-Allow-Origin"' origin);  	}  	if (request.Method == "OPTIONS") {  		response.StatusCode = 200;  		response.Headers.AppendCommaSeparatedValues ("Access-Control-Allow-Methods"' "GET"' "POST");  		response.Headers.AppendCommaSeparatedValues ("Access-Control-Allow-Headers"' "authorization"' "content-type");  		return;  	}  }  
Magic Number,MileageTracker,Startup,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Startup.cs,ConfigureOAuth,The following statement contains a magic number: if (request.Method == "OPTIONS") {  	response.StatusCode = 200;  	response.Headers.AppendCommaSeparatedValues ("Access-Control-Allow-Methods"' "GET"' "POST");  	response.Headers.AppendCommaSeparatedValues ("Access-Control-Allow-Headers"' "authorization"' "content-type");  	return;  }  
Magic Number,MileageTracker,Startup,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Startup.cs,ConfigureOAuth,The following statement contains a magic number: response.StatusCode = 200;  
Magic Number,MileageTracker.Controllers,CarsController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\CarsController.cs,AddCar,The following statement contains a magic number: try {  	if (car == null) {  		return Request.CreateResponse (HttpStatusCode.BadRequest);  	}  	car = _carService.AddCar (car);  	return Request.CreateResponse (HttpStatusCode.Created' car);  }  catch (DbEntityValidationException ex) {  	return Request.CreateResponse ((HttpStatusCode)422' new {  		message = ex.GetErrorResult ()  	});  }  catch (Exception ex) {  	LoggingFactory.GetLogger ().LogError (ex.Message' ex);  	return Request.CreateResponse (HttpStatusCode.InternalServerError);  }  
Magic Number,MileageTracker.Controllers,CarsController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\CarsController.cs,AddCar,The following statement contains a magic number: return Request.CreateResponse ((HttpStatusCode)422' new {  	message = ex.GetErrorResult ()  });  
Magic Number,MileageTracker.Controllers,CarsController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\CarsController.cs,UpdateCar,The following statement contains a magic number: try {  	if (car == null) {  		return Request.CreateResponse (HttpStatusCode.BadRequest);  	}  	car.Id = id;  	car = _carService.UpdateCar (car);  	return Request.CreateResponse (HttpStatusCode.OK' car);  }  catch (ObjectNotFoundException) {  	return Request.CreateResponse (HttpStatusCode.NotFound' new {  		message = "Not found."  	});  }  catch (DbEntityValidationException ex) {  	return Request.CreateResponse ((HttpStatusCode)422' new {  		message = ex.GetErrorResult ()  	});  }  catch (Exception ex) {  	LoggingFactory.GetLogger ().LogError (ex.Message' ex);  	return Request.CreateResponse (HttpStatusCode.InternalServerError);  }  
Magic Number,MileageTracker.Controllers,CarsController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\CarsController.cs,UpdateCar,The following statement contains a magic number: return Request.CreateResponse ((HttpStatusCode)422' new {  	message = ex.GetErrorResult ()  });  
Magic Number,MileageTracker.Controllers,CarsController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\CarsController.cs,DeleteCar,The following statement contains a magic number: try {  	_carService.DeleteCar (id);  	return Request.CreateResponse (HttpStatusCode.OK);  }  catch (ObjectNotFoundException) {  	return Request.CreateResponse (HttpStatusCode.NotFound' new {  		message = "Not found."  	});  }  catch (DbEntityValidationException ex) {  	return Request.CreateResponse ((HttpStatusCode)422' new {  		message = ex.GetErrorResult ()  	});  }  catch (Exception ex) {  	LoggingFactory.GetLogger ().LogError (ex.Message' ex);  	return Request.CreateResponse (HttpStatusCode.InternalServerError);  }  
Magic Number,MileageTracker.Controllers,CarsController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\CarsController.cs,DeleteCar,The following statement contains a magic number: return Request.CreateResponse ((HttpStatusCode)422' new {  	message = ex.GetErrorResult ()  });  
Magic Number,MileageTracker.Controllers,TripsController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\TripsController.cs,AddTrip,The following statement contains a magic number: try {  	if (trip == null) {  		return Request.CreateResponse (HttpStatusCode.BadRequest);  	}  	trip = _tripService.AddTrip (trip);  	return Request.CreateResponse (HttpStatusCode.Created' trip);  }  catch (DbEntityValidationException ex) {  	throw new HttpResponseException (Request.CreateResponse ((HttpStatusCode)422' new {  		message = ex.GetErrorResult ()  	}));  }  catch (Exception ex) {  	LoggingFactory.GetLogger ().LogError (ex.Message' ex);  	return Request.CreateResponse (HttpStatusCode.InternalServerError);  }  
Magic Number,MileageTracker.Controllers,TripsController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\TripsController.cs,AddTrip,The following statement contains a magic number: throw new HttpResponseException (Request.CreateResponse ((HttpStatusCode)422' new {  	message = ex.GetErrorResult ()  }));  
Magic Number,MileageTracker.Controllers,TripsController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\TripsController.cs,UpdateTrip,The following statement contains a magic number: try {  	if (trip == null) {  		return Request.CreateResponse (HttpStatusCode.BadRequest);  	}  	trip.Id = id;  	trip = _tripService.UpdateTrip (trip);  	return Request.CreateResponse (HttpStatusCode.OK' trip);  }  catch (ObjectNotFoundException) {  	return Request.CreateResponse (HttpStatusCode.NotFound' new {  		message = "Not found."  	});  }  catch (DbEntityValidationException ex) {  	return Request.CreateResponse ((HttpStatusCode)422' new {  		message = ex.GetErrorResult ()  	});  }  catch (Exception ex) {  	LoggingFactory.GetLogger ().LogError (ex.Message' ex);  	return Request.CreateResponse (HttpStatusCode.InternalServerError);  }  
Magic Number,MileageTracker.Controllers,TripsController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\TripsController.cs,UpdateTrip,The following statement contains a magic number: return Request.CreateResponse ((HttpStatusCode)422' new {  	message = ex.GetErrorResult ()  });  
Magic Number,MileageTracker.Controllers,TripsController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\TripsController.cs,DeleteTrip,The following statement contains a magic number: try {  	_tripService.DeleteTrip (id);  	return Request.CreateResponse (HttpStatusCode.OK);  }  catch (ObjectNotFoundException) {  	return Request.CreateResponse (HttpStatusCode.NotFound' new {  		message = "Not found."  	});  }  catch (DbEntityValidationException ex) {  	return Request.CreateResponse ((HttpStatusCode)422' new {  		message = ex.GetErrorResult ()  	});  }  catch (Exception ex) {  	LoggingFactory.GetLogger ().LogError (ex.Message' ex);  	return Request.CreateResponse (HttpStatusCode.InternalServerError);  }  
Magic Number,MileageTracker.Controllers,TripsController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\TripsController.cs,DeleteTrip,The following statement contains a magic number: return Request.CreateResponse ((HttpStatusCode)422' new {  	message = ex.GetErrorResult ()  });  
Magic Number,MileageTracker.Controllers,AddressesController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\AddressesController.cs,AddAddress,The following statement contains a magic number: try {  	if (address == null) {  		return Request.CreateResponse (HttpStatusCode.BadRequest);  	}  	address = _addressService.AddAddress (address);  	return Request.CreateResponse (HttpStatusCode.Created' address);  }  catch (DbEntityValidationException ex) {  	return Request.CreateResponse ((HttpStatusCode)422' new {  		message = ex.GetErrorResult ()  	});  }  catch (Exception ex) {  	LoggingFactory.GetLogger ().LogError (ex.Message' ex);  	return Request.CreateResponse (HttpStatusCode.InternalServerError);  }  
Magic Number,MileageTracker.Controllers,AddressesController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\AddressesController.cs,AddAddress,The following statement contains a magic number: return Request.CreateResponse ((HttpStatusCode)422' new {  	message = ex.GetErrorResult ()  });  
Magic Number,MileageTracker.Controllers,AddressesController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\AddressesController.cs,UpdateAddress,The following statement contains a magic number: try {  	if (address == null) {  		return Request.CreateResponse (HttpStatusCode.BadRequest);  	}  	address.Id = id;  	address = _addressService.UpdateAddress (address);  	return Request.CreateResponse (HttpStatusCode.OK' address);  }  catch (ObjectNotFoundException) {  	return Request.CreateResponse (HttpStatusCode.NotFound' new {  		message = "Not found."  	});  }  catch (DbEntityValidationException ex) {  	return Request.CreateResponse ((HttpStatusCode)422' new {  		message = ex.GetErrorResult ()  	});  }  catch (Exception ex) {  	LoggingFactory.GetLogger ().LogError (ex.Message' ex);  	return Request.CreateResponse (HttpStatusCode.InternalServerError);  }  
Magic Number,MileageTracker.Controllers,AddressesController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\AddressesController.cs,UpdateAddress,The following statement contains a magic number: return Request.CreateResponse ((HttpStatusCode)422' new {  	message = ex.GetErrorResult ()  });  
Magic Number,MileageTracker.Controllers,AddressesController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\AddressesController.cs,DeleteAddress,The following statement contains a magic number: try {  	_addressService.DeleteAddress (id);  	return Request.CreateResponse (HttpStatusCode.OK);  }  catch (ObjectNotFoundException) {  	return Request.CreateResponse (HttpStatusCode.NotFound' new {  		message = "Not found."  	});  }  catch (DbEntityValidationException ex) {  	return Request.CreateResponse ((HttpStatusCode)422' new {  		message = ex.GetErrorResult ()  	});  }  catch (Exception ex) {  	LoggingFactory.GetLogger ().LogError (ex.Message' ex);  	return Request.CreateResponse (HttpStatusCode.InternalServerError);  }  
Magic Number,MileageTracker.Controllers,AddressesController,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Controllers\AddressesController.cs,DeleteAddress,The following statement contains a magic number: return Request.CreateResponse ((HttpStatusCode)422' new {  	message = ex.GetErrorResult ()  });  
Magic Number,MileageTracker.Services,AccountService,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Services\AccountService.cs,AccountService,The following statement contains a magic number: _userManager.PasswordValidator = new PasswordValidator {  	RequiredLength = 6'  	RequireNonLetterOrDigit = true'  	RequireDigit = false'  	RequireLowercase = false'  	RequireUppercase = false'  };  
Magic Number,MileageTracker.Services,GoogleDistanceCalculatorService,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Services\GoogleDistanceCalculatorService.cs,GetDistance,The following statement contains a magic number: using (var streamReader = new StreamReader (response.GetResponseStream ())) {  	var result = streamReader.ReadToEnd ();  	if (string.IsNullOrEmpty (result))  		return 0;  	var jsonObject = JObject.Parse (result);  	var distance = (int)jsonObject.SelectToken ("rows[0].elements[0].distance.value");  	return distance / 1000;  }  
Magic Number,MileageTracker.Services,GoogleDistanceCalculatorService,D:\SecondaryReposToAnalyze\nvdvlies_MileageTracker.AspNetWebApi\MileageTracker\Services\GoogleDistanceCalculatorService.cs,GetDistance,The following statement contains a magic number: return distance / 1000;  
