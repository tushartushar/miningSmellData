Implementation smell,Namespace,Class,File,Method,Description
Complex Method,iCodeGenerator.GenericDataAccess,DataAccessProviderTypeFactory,D:\newReposJune17\VientoDigital_codegenerator\src\GenericDataAccess\DataAccessProviderTypeFactory.cs,DataAccessProviderTypeFactory,Cyclomatic complexity of the method is 15
Long Parameter List,iCodeGenerator.GenericDataAccess,ConnectionStringManager,D:\newReposJune17\VientoDigital_codegenerator\src\GenericDataAccess\ConnectionStringManager.cs,Creator,The method has 5 parameters.
Long Parameter List,iCodeGenerator.GenericDataAccess,DataAccessProviderFactory,D:\newReposJune17\VientoDigital_codegenerator\src\GenericDataAccess\DataAccessProviderFactory.cs,CreateParameter,The method has 4 parameters.
Long Statement,iCodeGenerator.GenericDataAccess,ConnectionStringManager,D:\newReposJune17\VientoDigital_codegenerator\src\GenericDataAccess\ConnectionStringManager.cs,Creator,The length of the statement  "		return "Data Source=" + server + ";Initial Catalog=" + database + ";User Id=" + username + ";Password=" + password + ";"; " is 121.
Missing Default,iCodeGenerator.GenericDataAccess,DataAccessProviderTypeFactory,D:\newReposJune17\VientoDigital_codegenerator\src\GenericDataAccess\DataAccessProviderTypeFactory.cs,DataAccessProviderTypeFactory,The following switch statement is missing a default case: switch (dataTypeName.ToLower ().Trim ()) {  case "sqlclient":  	_providerType = DataProviderType.SqlClient;  	break;  case "mysql":  	_providerType = DataProviderType.MySql;  	break;  case "access":  	_providerType = DataProviderType.Access;  	break;  case "postgressql":  	_providerType = DataProviderType.PostgresSql;  	break;  case "oracle":  	_providerType = DataProviderType.Oracle;  	break;  }  
