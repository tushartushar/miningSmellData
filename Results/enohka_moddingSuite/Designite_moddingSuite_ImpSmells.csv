Implementation smell,Namespace,Class,File,Method,Description
Long Method,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,GetBitsPerPixel,The method has 116 lines of code.
Long Method,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The method has 108 lines of code.
Long Method,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The method has 180 lines of code.
Long Method,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The method has 277 lines of code.
Long Method,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The method has 282 lines of code.
Long Method,moddingSuite.BL.TGV,TgvReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvReader.cs,TranslatePixelFormat,The method has 113 lines of code.
Long Method,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The method has 209 lines of code.
Long Method,ZoneEditor,ZoneEditorData,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ZoneEditorData.cs,doZoneProperties,The method has 102 lines of code.
Complex Method,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,GetBitsPerPixel,Cyclomatic complexity of the method is 10
Complex Method,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,Cyclomatic complexity of the method is 27
Complex Method,moddingSuite.BL.DDS,DDSHelper,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDSHelper.cs,GetDXGIFormat,Cyclomatic complexity of the method is 12
Complex Method,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,Cyclomatic complexity of the method is 23
Complex Method,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,Cyclomatic complexity of the method is 47
Complex Method,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,Cyclomatic complexity of the method is 47
Complex Method,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRange,Cyclomatic complexity of the method is 10
Complex Method,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,Cyclomatic complexity of the method is 12
Complex Method,moddingSuite.BL.Mesh,MeshReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Mesh\MeshReader.cs,ReadMeshDictionary,Cyclomatic complexity of the method is 9
Complex Method,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadValue,Cyclomatic complexity of the method is 10
Complex Method,moddingSuite.BL.TGV,TgvReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvReader.cs,TranslatePixelFormat,Cyclomatic complexity of the method is 23
Complex Method,moddingSuite.BL.TGV,TgvWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvWriter.cs,TranslatePixelFormatBack,Cyclomatic complexity of the method is 22
Complex Method,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdatV2Dictionary,Cyclomatic complexity of the method is 9
Complex Method,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdatV1Dictionary,Cyclomatic complexity of the method is 9
Complex Method,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV2,Cyclomatic complexity of the method is 9
Complex Method,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV1,Cyclomatic complexity of the method is 9
Complex Method,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetValue,Cyclomatic complexity of the method is 32
Complex Method,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,SizeofType,Cyclomatic complexity of the method is 9
Complex Method,moddingSuite.ViewModel.Ndf,NdfClassViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Ndf\NdfClassViewModel.cs,FilterInstances,Cyclomatic complexity of the method is 8
Complex Method,moddingSuite.ViewModel.VersionManager,VersionManagerViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\VersionManager\VersionManagerViewModel.cs,Initialize,Cyclomatic complexity of the method is 8
Complex Method,moddingSuite.View.Extension,EditingControlDataTemplateSelector,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Extension\EditingControlDataTemplateSelector.cs,SelectTemplate,Cyclomatic complexity of the method is 17
Complex Method,ZoneEditor,ZoneEditorData,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ZoneEditorData.cs,doZoneProperties,Cyclomatic complexity of the method is 16
Long Parameter List,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,ComputePitch,The method has 8 parameters. Parameters: fmt' width' height' rowPitch' slicePitch' widthCount' heightCount' flags
Long Parameter List,moddingSuite.BL.DDS,PixelFormat,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormat,The method has 7 parameters. Parameters: flags' fourCC' rgbBitCount' rBitMask' gBitMask' bBitMask' aBitMask
Long Parameter List,moddingSuite.ZoneEditor.ScenarioItems,Spawn,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Spawn.cs,Spawn,The method has 5 parameters. Parameters: p' rot' scale' i' t
Long Identifier,moddingSuite.ViewModel.Mesh,MeshEditorViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Mesh\MeshEditorViewModel.cs,,The length of the parameter _multiMaterialMeshesCollectionView is 34.
Long Identifier,moddingSuite.ViewModel.Mesh,MeshEditorViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Mesh\MeshEditorViewModel.cs,,The length of the parameter _multiMaterialMeshesFilterExpression is 36.
Long Identifier,moddingSuite.View.Extension,TreeViewExtension,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Extension\TreeViewExtensions.cs,,The length of the parameter SelectItemOnRightClickProperty is 30.
Long Statement,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,Write,The length of the statement  "            file.ContentFiles[1] = ndfBinWriter.Write(file.NdfBinary' false); // something wrong here; enohka: Should be fixed by now? " is 122.
Long Statement,moddingSuite.BL.TGV,TgvDDSWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvDDSWriter.cs,CreateDDSHeader,The length of the statement  "            DDS.DDS.ComputePitch(file.Format' (int)file.ImageWidth' (int)file.ImageHeight' out rowPitch' out slicePitch' out widthCount' " is 124.
Long Statement,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,ExportKdTreeExecute,The length of the statement  "            var logFile=new StreamWriter(new FileStream(Path.Combine(settings.SavePath' "exportLogFile.txt")' FileMode.OpenOrCreate)); " is 122.
Long Statement,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,ExportRawExecute,The length of the statement  "            using (var fs = new FileStream(Path.Combine(settings.SavePath' string.Format("blobdump_{0}"' DateTime.Now.ToString("dd_MM_yyyy_HH_mm_ff")))' FileMode.OpenOrCreate)) " is 164.
Long Statement,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,getFromOutline,The length of the statement  "            Console.WriteLine("bt=[{0:G}'{1:G}'{2:G}'{3:G}]"' scen.BorderTriangle.StartTriangle' scen.BorderTriangle.StartVertex' scen.BorderTriangle.TriangleCount' scen.BorderTriangle.VertexCount); " is 186.
Long Statement,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,getFromOutline,The length of the statement  "            Console.WriteLine("bv=[{0:G}'{1:G}'{2:G}'{3:G}]"' scen.BorderVertex.StartTriangle' scen.BorderVertex.StartVertex' scen.BorderVertex.TriangleCount' scen.BorderVertex.VertexCount); " is 178.
Long Statement,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,getFromOutline,The length of the statement  "                Console.WriteLine("t{4}=[{0:G}'{1:G}'{2:G}'{3:G}]"' a.StartTriangle' a.StartVertex' a.TriangleCount' a.VertexCount' k++); " is 121.
Long Statement,moddingSuite.ViewModel.Edata,EdataManagerViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Edata\EdataManagerViewModel.cs,InitializeCommands,The length of the statement  "            ReplaceTextureFromWorkspaceCommand = new ActionCommand(ReplaceTextureFromWorkspaceExecute' () => IsOfType(EdataFileType.Image)); " is 128.
Long Statement,moddingSuite.ViewModel.Ndf,AddCollectionItemViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Ndf\AddCollectionItemViewModel.cs,GetValueForType,The length of the statement  "            Wrapper = new CollectionItemValueHolder(NdfTypeManager.GetValue(new byte[NdfTypeManager.SizeofType(Type)]' Type' Manager)' Manager); " is 132.
Long Statement,moddingSuite.ViewModel.Ndf,ListEditorViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Ndf\ListEditorViewModel.cs,AddRowOfCommonTypeExecute,The length of the statement  "                new CollectionItemValueHolder(NdfTypeManager.GetValue(new byte[NdfTypeManager.SizeofType(type)]' type' NdfbinManager)' NdfbinManager); " is 134.
Long Statement,moddingSuite.ViewModel.Mesh,MeshEditorViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Mesh\MeshEditorViewModel.cs,FilterMultiMaterialMeshes,The length of the statement  "            if (file == null || MultiMaterialMeshesFilterExpression == string.Empty || MultiMaterialMeshesFilterExpression.Length < 3) " is 122.
Long Statement,moddingSuite.View.Common,AboutView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Common\AboutView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/common/aboutview.xaml"' System.UriKind.Relative); " is 123.
Long Statement,moddingSuite.View.Common,AboutView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Common\AboutView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Image)(target)).MouseUp += new System.Windows.Input.MouseButtonEventHandler(this.ImageMouseUp1); " is 122.
Long Statement,moddingSuite.View.Common,AboutView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Common\AboutView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Image)(target)).MouseUp += new System.Windows.Input.MouseButtonEventHandler(this.UIElement_OnMouseUp); " is 128.
Long Statement,moddingSuite.View.Common,UnhandledExceptionView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Common\UnhandledExceptionView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/common/unhandledexceptionview.xaml"' System.UriKind.Relative); " is 136.
Long Statement,moddingSuite.View.Common,MoviePlaybackView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Common\MoviePlaybackView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/common/movieplaybackview.xaml"' System.UriKind.Relative); " is 131.
Long Statement,moddingSuite.View.Common,TradFileView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Common\TradFileView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/common/tradfileview.xaml"' System.UriKind.Relative); " is 126.
Long Statement,moddingSuite.View.Edata,EdataFileView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Edata\EdataFileView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/edata/edatafileview.xaml"' System.UriKind.Relative); " is 126.
Long Statement,moddingSuite.View.Edata,EdataManagerView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Edata\EdataManagerView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/edata/edatamanagerview.xaml"' System.UriKind.Relative); " is 129.
Long Statement,moddingSuite.View.Extension,Masking,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Extension\Masking.cs,TextBoxPreviewKeyDown,The length of the statement  "            //pressing space doesn't raise PreviewTextInput' reasons here http://social.msdn.microsoft.com/Forums/en-US/wpf/thread/446ec083-04c8-43f2-89dc-1e2521a31f6b?prof=required " is 169.
Long Statement,moddingSuite.View.Mesh,MeshView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Mesh\MeshView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/mesh/meshview.xaml"' System.UriKind.Relative); " is 120.
Long Statement,moddingSuite.View.Ndfbin.ValueEditing,BlobEditingTemplate,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\ValueEditing\BlobEditingTemplate.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/valueediting/blobeditingtemplate.xaml"' System.UriKind.Relative); " is 146.
Long Statement,moddingSuite.View.Ndfbin.ValueEditing,FloatPairEditingTemplate,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\ValueEditing\FloatPairEditingTemplate.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/valueediting/floatpaireditingtemplate.xaml"' System.UriKind.Relative); " is 151.
Long Statement,moddingSuite.View.Ndfbin.ValueEditing,LocaleHashEditingTemplate,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\ValueEditing\LocaleHashEditingTemplate.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/valueediting/localehasheditingtemplate.xaml"' System.UriKind.Relative); " is 152.
Long Statement,moddingSuite.View.Ndfbin.ValueEditing,StringTableEditingTemplate,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\ValueEditing\StringTableEditingTemplate.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/valueediting/stringtableeditingtemplate.xaml"' System.UriKind.Relative); " is 153.
Long Statement,moddingSuite.View.Ndfbin.ValueEditing,TransTableReferenceEditingTemplate,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\ValueEditing\TransTableReferenceEditingTemplate.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/valueediting/transtablereferenceeditingtempla" + " is 129.
Long Statement,moddingSuite.View.Ndfbin.ValueEditing,VectorEditingTemplate,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\ValueEditing\VectorEditingTemplate.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/valueediting/vectoreditingtemplate.xaml"' System.UriKind.Relative); " is 148.
Long Statement,moddingSuite.View.Ndfbin.ValueEditing,BooleanEditingTemplate,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\ValueEditing\BooleanEditingTemplate.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/valueediting/booleaneditingtemplate.xaml"' System.UriKind.Relative); " is 149.
Long Statement,moddingSuite.View.Ndfbin.ValueEditing,ColorPickerEditingTemplate,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\ValueEditing\ColorPickerEditingTemplate.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/valueediting/colorpickereditingtemplate.xaml"' System.UriKind.Relative); " is 153.
Long Statement,moddingSuite.View.Ndfbin.ValueEditing,FloatEditingTemplate,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\ValueEditing\FloatEditingTemplate.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/valueediting/floateditingtemplate.xaml"' System.UriKind.Relative); " is 147.
Long Statement,moddingSuite.View.Ndfbin.ValueEditing,GuidEditingTemplate,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\ValueEditing\GuidEditingTemplate.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/valueediting/guideditingtemplate.xaml"' System.UriKind.Relative); " is 146.
Long Statement,moddingSuite.View.Ndfbin.ValueEditing,Int32EditingTemplate,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\ValueEditing\Int32EditingTemplate.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/valueediting/int32editingtemplate.xaml"' System.UriKind.Relative); " is 147.
Long Statement,moddingSuite.View.Ndfbin.ValueEditing,MapEditingTemplate,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\ValueEditing\MapEditingTemplate.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/valueediting/mapeditingtemplate.xaml"' System.UriKind.Relative); " is 145.
Long Statement,moddingSuite.View.Ndfbin.ValueEditing,ObjectReferenceEditingTemplate,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\ValueEditing\ObjectReferenceEditingTemplate.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/valueediting/objectreferenceeditingtemplate.x" + " is 129.
Long Statement,moddingSuite.View.Ndfbin.ValueEditing,UInt32EditingTemaplte,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\ValueEditing\UInt32EditingTemaplte.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/valueediting/uint32editingtemaplte.xaml"' System.UriKind.Relative); " is 148.
Long Statement,moddingSuite.View.Ndfbin.Viewer,AddCollectionItemView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Viewer\AddCollectionItemView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/viewer/addcollectionitemview.xaml"' System.UriKind.Relative); " is 142.
Long Statement,moddingSuite.View.Ndfbin.Viewer,ArmourDamageTableWindowView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Viewer\ArmourDamageTableWindowView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/viewer/armourdamagetablewindowview.xaml"' System.UriKind.Relative); " is 148.
Long Statement,moddingSuite.View.Ndfbin.Viewer,ArmourDamageTableWindowView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Viewer\ArmourDamageTableWindowView.xaml.cs,Connect,The length of the statement  "            this.damageGrid.LoadingRow += new System.EventHandler<System.Windows.Controls.DataGridRowEventArgs>(this.DataGrid_LoadingRow); " is 126.
Long Statement,moddingSuite.View.Ndfbin.Viewer,InstanceWindowView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Viewer\InstanceWindowView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/viewer/instancewindowview.xaml"' System.UriKind.Relative); " is 139.
Long Statement,moddingSuite.View.Ndfbin.Viewer,InstanceView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Viewer\InstanceView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/viewer/instanceview.xaml"' System.UriKind.Relative); " is 133.
Long Statement,moddingSuite.View.Ndfbin.Viewer,ListEditorWindow,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Viewer\ListEditorWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/viewer/listeditorwindow.xaml"' System.UriKind.Relative); " is 137.
Long Statement,moddingSuite.View.Ndfbin.Viewer,ListViewer,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Viewer\ListViewer.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/viewer/listviewer.xaml"' System.UriKind.Relative); " is 131.
Long Statement,moddingSuite.View.Ndfbin.Viewer,ObjectCopyResultView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Viewer\ObjectCopyResultView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/viewer/objectcopyresultview.xaml"' System.UriKind.Relative); " is 141.
Long Statement,moddingSuite.View.Ndfbin.Viewer,ReferenceSearchResultView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Viewer\ReferenceSearchResultView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/viewer/referencesearchresultview.xaml"' System.UriKind.Relative); " is 146.
Long Statement,moddingSuite.View.Ndfbin,NdfbinView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\NdfbinView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/ndfbinview.xaml"' System.UriKind.Relative); " is 124.
Long Statement,moddingSuite.View.Scenario,ScenarioView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Scenario\ScenarioView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/ndfbin/scenario/scenarioview.xaml"' System.UriKind.Relative); " is 135.
Long Statement,moddingSuite.View,SettingsView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SettingsView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WorkSpaceBrowserButtonClick); " is 124.
Long Statement,moddingSuite.View,SpinningWheel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SpinningWheel\SpinningWheel.cs,CreateAnimation,The length of the statement  "         Storyboard.SetTargetProperty(this.rotateAnimation' new PropertyPath("(UIElement.RenderTransform).(RotateTransform.Angle)"));          " is 124.
Long Statement,moddingSuite.View.VersionManager,VersionManagerView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\VersionManager\VersionManagerView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/moddingSuite;component/view/versionmanager/versionmanagerview.xaml"' System.UriKind.Relative); " is 140.
Long Statement,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The length of the statement  "            this.listBox1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 144.
Long Statement,moddingSuite.ZoneEditor.ScenarioItems,Spawn,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Spawn.cs,paint,The length of the statement  "            ahBase.Offset(-(int)(width * arrowHeadLength * Math.Cos(rot) / Geometry.Geometry.scaleFactor)' -(int)(width * arrowHeadLength * Math.Sin(rot) / Geometry.Geometry.scaleFactor)); " is 176.
Long Statement,moddingSuite.ZoneEditor.ScenarioItems,Spawn,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Spawn.cs,paint,The length of the statement  "            ahLeft.Offset(-(int)(width * arrowHeadLength * Math.Cos(rot) / Geometry.Geometry.scaleFactor)' -(int)(width * arrowHeadLength * Math.Sin(rot) / Geometry.Geometry.scaleFactor)); " is 176.
Long Statement,moddingSuite.ZoneEditor.ScenarioItems,Spawn,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Spawn.cs,paint,The length of the statement  "            ahRight.Offset(-(int)(width * arrowHeadLength * Math.Cos(rot) / Geometry.Geometry.scaleFactor)' -(int)(width * arrowHeadLength * Math.Sin(rot) / Geometry.Geometry.scaleFactor)); " is 177.
Long Statement,moddingSuite.ZoneEditor.ScenarioItems,Spawn,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Spawn.cs,paint,The length of the statement  "            ahBase.Offset((int)(500 * width * Math.Cos(rot) / Geometry.Geometry.scaleFactor)' (int)(500 * width * Math.Sin(rot) / Geometry.Geometry.scaleFactor)); " is 150.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,moddingSuite.BL.DDS,DDSHelper,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDSHelper.cs,GetDXGIFormat,The conditional expression  "pixelFormat.RBitMask == entry.PixelFormat.RBitMask                              && pixelFormat.GBitMask == entry.PixelFormat.GBitMask                              && pixelFormat.BBitMask == entry.PixelFormat.BBitMask                              && pixelFormat.ABitMask == entry.PixelFormat.ABitMask"  is complex.
Complex Conditional,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,isInside,The conditional expression  "v1.Equals(b1) || v1.Equals(b2) || v2.Equals(b1) || v2.Equals(b2)"  is complex.
Complex Conditional,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,lineIntersect,The conditional expression  "v1.Equals(b1) || v1.Equals(b2) || v2.Equals(b1) || v2.Equals(b2)"  is complex.
Complex Conditional,moddingSuite.ViewModel.Ndf,NdfEditorMainViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Ndf\NdfEditorMainViewModel.cs,FilterClasses,The conditional expression  "parts.Length > 1 && Int32.TryParse(parts[0]' out cls) && (clas.Id == cls || clas.Name == parts[0])"  is complex.
Virtual Method Call from Constructor,moddingSuite.ViewModel.Ndf,NdfEditorMainViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Ndf\NdfEditorMainViewModel.cs,NdfEditorMainViewModel,The constructor "NdfEditorMainViewModel" calls a virtual method "GetRawData".
Virtual Method Call from Constructor,moddingSuite.ViewModel.Scenario,ScenarioEditorViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Scenario\ScenarioEditorViewModel.cs,ScenarioEditorViewModel,The constructor "ScenarioEditorViewModel" calls a virtual method "GetRawData".
Virtual Method Call from Constructor,moddingSuite.ViewModel.Trad,TradFileViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Trad\TradFileViewModel.cs,TradFileViewModel,The constructor "TradFileViewModel" calls a virtual method "GetRawData".
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,GetBitsPerPixel,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R32G32B32A32_TYPELESS:                  case PixelFormats.R32G32B32A32_FLOAT:                  case PixelFormats.R32G32B32A32_UINT:                  case PixelFormats.R32G32B32A32_SINT:                      return 128;                    case PixelFormats.R32G32B32_TYPELESS:                  case PixelFormats.R32G32B32_FLOAT:                  case PixelFormats.R32G32B32_UINT:                  case PixelFormats.R32G32B32_SINT:                      return 96;                    case PixelFormats.R16G16B16A16_TYPELESS:                  case PixelFormats.R16G16B16A16_FLOAT:                  case PixelFormats.R16G16B16A16_UNORM:                  case PixelFormats.R16G16B16A16_UINT:                  case PixelFormats.R16G16B16A16_SNORM:                  case PixelFormats.R16G16B16A16_SINT:                  case PixelFormats.R32G32_TYPELESS:                  case PixelFormats.R32G32_FLOAT:                  case PixelFormats.R32G32_UINT:                  case PixelFormats.R32G32_SINT:                  case PixelFormats.R32G8X24_TYPELESS:                  case PixelFormats.D32_FLOAT_S8X24_UINT:                  case PixelFormats.R32_FLOAT_X8X24_TYPELESS:                  case PixelFormats.X32_TYPELESS_G8X24_UINT:                      return 64;                    case PixelFormats.R10G10B10A2_TYPELESS:                  case PixelFormats.R10G10B10A2_UNORM:                  case PixelFormats.R10G10B10A2_UINT:                  case PixelFormats.R11G11B10_FLOAT:                  case PixelFormats.R8G8B8A8_TYPELESS:                  case PixelFormats.R8G8B8A8_UNORM:                  case PixelFormats.R8G8B8A8_UNORM_SRGB:                  case PixelFormats.R8G8B8A8_UINT:                  case PixelFormats.R8G8B8A8_SNORM:                  case PixelFormats.R8G8B8A8_SINT:                  case PixelFormats.R16G16_TYPELESS:                  case PixelFormats.R16G16_FLOAT:                  case PixelFormats.R16G16_UNORM:                  case PixelFormats.R16G16_UINT:                  case PixelFormats.R16G16_SNORM:                  case PixelFormats.R16G16_SINT:                  case PixelFormats.R32_TYPELESS:                  case PixelFormats.D32_FLOAT:                  case PixelFormats.R32_FLOAT:                  case PixelFormats.R32_UINT:                  case PixelFormats.R32_SINT:                  case PixelFormats.R24G8_TYPELESS:                  case PixelFormats.D24_UNORM_S8_UINT:                  case PixelFormats.R24_UNORM_X8_TYPELESS:                  case PixelFormats.X24_TYPELESS_G8_UINT:                  case PixelFormats.R9G9B9E5_SHAREDEXP:                  case PixelFormats.R8G8_B8G8_UNORM:                  case PixelFormats.G8R8_G8B8_UNORM:                  case PixelFormats.B8G8R8A8_UNORM:                  case PixelFormats.B8G8R8X8_UNORM:                  case PixelFormats.R10G10B10_XR_BIAS_A2_UNORM:                  case PixelFormats.B8G8R8A8_TYPELESS:                  case PixelFormats.B8G8R8A8_UNORM_SRGB:                  case PixelFormats.B8G8R8X8_TYPELESS:                  case PixelFormats.B8G8R8X8_UNORM_SRGB:                      return 32;                    case PixelFormats.R8G8_TYPELESS:                  case PixelFormats.R8G8_UNORM:                  case PixelFormats.R8G8_UINT:                  case PixelFormats.R8G8_SNORM:                  case PixelFormats.R8G8_SINT:                  case PixelFormats.R16_TYPELESS:                  case PixelFormats.R16_FLOAT:                  case PixelFormats.D16_UNORM:                  case PixelFormats.R16_UNORM:                  case PixelFormats.R16_UINT:                  case PixelFormats.R16_SNORM:                  case PixelFormats.R16_SINT:                  case PixelFormats.B5G6R5_UNORM:                  case PixelFormats.B5G5R5A1_UNORM:                  case PixelFormats.B4G4R4A4_UNORM:                      return 16;                    case PixelFormats.R8_TYPELESS:                  case PixelFormats.R8_UNORM:                  case PixelFormats.R8_UINT:                  case PixelFormats.R8_SNORM:                  case PixelFormats.R8_SINT:                  case PixelFormats.A8_UNORM:                      return 8;                    case PixelFormats.R1_UNORM:                      return 1;                    case PixelFormats.BC1_TYPELESS:                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                  case PixelFormats.BC4_TYPELESS:                  case PixelFormats.BC4_UNORM:                  case PixelFormats.BC4_SNORM:                      return 4;                    case PixelFormats.BC2_TYPELESS:                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                  case PixelFormats.BC3_TYPELESS:                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                  case PixelFormats.BC5_TYPELESS:                  case PixelFormats.BC5_UNORM:                  case PixelFormats.BC5_SNORM:                  case PixelFormats.BC6H_TYPELESS:                  case PixelFormats.BC6H_UF16:                  case PixelFormats.BC6H_SF16:                  case PixelFormats.BC7_TYPELESS:                  case PixelFormats.BC7_UNORM:                  case PixelFormats.BC7_UNORM_SRGB:                      return 8;                    default:                      return 0;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,GetBitsPerPixel,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R32G32B32A32_TYPELESS:                  case PixelFormats.R32G32B32A32_FLOAT:                  case PixelFormats.R32G32B32A32_UINT:                  case PixelFormats.R32G32B32A32_SINT:                      return 128;                    case PixelFormats.R32G32B32_TYPELESS:                  case PixelFormats.R32G32B32_FLOAT:                  case PixelFormats.R32G32B32_UINT:                  case PixelFormats.R32G32B32_SINT:                      return 96;                    case PixelFormats.R16G16B16A16_TYPELESS:                  case PixelFormats.R16G16B16A16_FLOAT:                  case PixelFormats.R16G16B16A16_UNORM:                  case PixelFormats.R16G16B16A16_UINT:                  case PixelFormats.R16G16B16A16_SNORM:                  case PixelFormats.R16G16B16A16_SINT:                  case PixelFormats.R32G32_TYPELESS:                  case PixelFormats.R32G32_FLOAT:                  case PixelFormats.R32G32_UINT:                  case PixelFormats.R32G32_SINT:                  case PixelFormats.R32G8X24_TYPELESS:                  case PixelFormats.D32_FLOAT_S8X24_UINT:                  case PixelFormats.R32_FLOAT_X8X24_TYPELESS:                  case PixelFormats.X32_TYPELESS_G8X24_UINT:                      return 64;                    case PixelFormats.R10G10B10A2_TYPELESS:                  case PixelFormats.R10G10B10A2_UNORM:                  case PixelFormats.R10G10B10A2_UINT:                  case PixelFormats.R11G11B10_FLOAT:                  case PixelFormats.R8G8B8A8_TYPELESS:                  case PixelFormats.R8G8B8A8_UNORM:                  case PixelFormats.R8G8B8A8_UNORM_SRGB:                  case PixelFormats.R8G8B8A8_UINT:                  case PixelFormats.R8G8B8A8_SNORM:                  case PixelFormats.R8G8B8A8_SINT:                  case PixelFormats.R16G16_TYPELESS:                  case PixelFormats.R16G16_FLOAT:                  case PixelFormats.R16G16_UNORM:                  case PixelFormats.R16G16_UINT:                  case PixelFormats.R16G16_SNORM:                  case PixelFormats.R16G16_SINT:                  case PixelFormats.R32_TYPELESS:                  case PixelFormats.D32_FLOAT:                  case PixelFormats.R32_FLOAT:                  case PixelFormats.R32_UINT:                  case PixelFormats.R32_SINT:                  case PixelFormats.R24G8_TYPELESS:                  case PixelFormats.D24_UNORM_S8_UINT:                  case PixelFormats.R24_UNORM_X8_TYPELESS:                  case PixelFormats.X24_TYPELESS_G8_UINT:                  case PixelFormats.R9G9B9E5_SHAREDEXP:                  case PixelFormats.R8G8_B8G8_UNORM:                  case PixelFormats.G8R8_G8B8_UNORM:                  case PixelFormats.B8G8R8A8_UNORM:                  case PixelFormats.B8G8R8X8_UNORM:                  case PixelFormats.R10G10B10_XR_BIAS_A2_UNORM:                  case PixelFormats.B8G8R8A8_TYPELESS:                  case PixelFormats.B8G8R8A8_UNORM_SRGB:                  case PixelFormats.B8G8R8X8_TYPELESS:                  case PixelFormats.B8G8R8X8_UNORM_SRGB:                      return 32;                    case PixelFormats.R8G8_TYPELESS:                  case PixelFormats.R8G8_UNORM:                  case PixelFormats.R8G8_UINT:                  case PixelFormats.R8G8_SNORM:                  case PixelFormats.R8G8_SINT:                  case PixelFormats.R16_TYPELESS:                  case PixelFormats.R16_FLOAT:                  case PixelFormats.D16_UNORM:                  case PixelFormats.R16_UNORM:                  case PixelFormats.R16_UINT:                  case PixelFormats.R16_SNORM:                  case PixelFormats.R16_SINT:                  case PixelFormats.B5G6R5_UNORM:                  case PixelFormats.B5G5R5A1_UNORM:                  case PixelFormats.B4G4R4A4_UNORM:                      return 16;                    case PixelFormats.R8_TYPELESS:                  case PixelFormats.R8_UNORM:                  case PixelFormats.R8_UINT:                  case PixelFormats.R8_SNORM:                  case PixelFormats.R8_SINT:                  case PixelFormats.A8_UNORM:                      return 8;                    case PixelFormats.R1_UNORM:                      return 1;                    case PixelFormats.BC1_TYPELESS:                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                  case PixelFormats.BC4_TYPELESS:                  case PixelFormats.BC4_UNORM:                  case PixelFormats.BC4_SNORM:                      return 4;                    case PixelFormats.BC2_TYPELESS:                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                  case PixelFormats.BC3_TYPELESS:                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                  case PixelFormats.BC5_TYPELESS:                  case PixelFormats.BC5_UNORM:                  case PixelFormats.BC5_SNORM:                  case PixelFormats.BC6H_TYPELESS:                  case PixelFormats.BC6H_UF16:                  case PixelFormats.BC6H_SF16:                  case PixelFormats.BC7_TYPELESS:                  case PixelFormats.BC7_UNORM:                  case PixelFormats.BC7_UNORM_SRGB:                      return 8;                    default:                      return 0;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,GetBitsPerPixel,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R32G32B32A32_TYPELESS:                  case PixelFormats.R32G32B32A32_FLOAT:                  case PixelFormats.R32G32B32A32_UINT:                  case PixelFormats.R32G32B32A32_SINT:                      return 128;                    case PixelFormats.R32G32B32_TYPELESS:                  case PixelFormats.R32G32B32_FLOAT:                  case PixelFormats.R32G32B32_UINT:                  case PixelFormats.R32G32B32_SINT:                      return 96;                    case PixelFormats.R16G16B16A16_TYPELESS:                  case PixelFormats.R16G16B16A16_FLOAT:                  case PixelFormats.R16G16B16A16_UNORM:                  case PixelFormats.R16G16B16A16_UINT:                  case PixelFormats.R16G16B16A16_SNORM:                  case PixelFormats.R16G16B16A16_SINT:                  case PixelFormats.R32G32_TYPELESS:                  case PixelFormats.R32G32_FLOAT:                  case PixelFormats.R32G32_UINT:                  case PixelFormats.R32G32_SINT:                  case PixelFormats.R32G8X24_TYPELESS:                  case PixelFormats.D32_FLOAT_S8X24_UINT:                  case PixelFormats.R32_FLOAT_X8X24_TYPELESS:                  case PixelFormats.X32_TYPELESS_G8X24_UINT:                      return 64;                    case PixelFormats.R10G10B10A2_TYPELESS:                  case PixelFormats.R10G10B10A2_UNORM:                  case PixelFormats.R10G10B10A2_UINT:                  case PixelFormats.R11G11B10_FLOAT:                  case PixelFormats.R8G8B8A8_TYPELESS:                  case PixelFormats.R8G8B8A8_UNORM:                  case PixelFormats.R8G8B8A8_UNORM_SRGB:                  case PixelFormats.R8G8B8A8_UINT:                  case PixelFormats.R8G8B8A8_SNORM:                  case PixelFormats.R8G8B8A8_SINT:                  case PixelFormats.R16G16_TYPELESS:                  case PixelFormats.R16G16_FLOAT:                  case PixelFormats.R16G16_UNORM:                  case PixelFormats.R16G16_UINT:                  case PixelFormats.R16G16_SNORM:                  case PixelFormats.R16G16_SINT:                  case PixelFormats.R32_TYPELESS:                  case PixelFormats.D32_FLOAT:                  case PixelFormats.R32_FLOAT:                  case PixelFormats.R32_UINT:                  case PixelFormats.R32_SINT:                  case PixelFormats.R24G8_TYPELESS:                  case PixelFormats.D24_UNORM_S8_UINT:                  case PixelFormats.R24_UNORM_X8_TYPELESS:                  case PixelFormats.X24_TYPELESS_G8_UINT:                  case PixelFormats.R9G9B9E5_SHAREDEXP:                  case PixelFormats.R8G8_B8G8_UNORM:                  case PixelFormats.G8R8_G8B8_UNORM:                  case PixelFormats.B8G8R8A8_UNORM:                  case PixelFormats.B8G8R8X8_UNORM:                  case PixelFormats.R10G10B10_XR_BIAS_A2_UNORM:                  case PixelFormats.B8G8R8A8_TYPELESS:                  case PixelFormats.B8G8R8A8_UNORM_SRGB:                  case PixelFormats.B8G8R8X8_TYPELESS:                  case PixelFormats.B8G8R8X8_UNORM_SRGB:                      return 32;                    case PixelFormats.R8G8_TYPELESS:                  case PixelFormats.R8G8_UNORM:                  case PixelFormats.R8G8_UINT:                  case PixelFormats.R8G8_SNORM:                  case PixelFormats.R8G8_SINT:                  case PixelFormats.R16_TYPELESS:                  case PixelFormats.R16_FLOAT:                  case PixelFormats.D16_UNORM:                  case PixelFormats.R16_UNORM:                  case PixelFormats.R16_UINT:                  case PixelFormats.R16_SNORM:                  case PixelFormats.R16_SINT:                  case PixelFormats.B5G6R5_UNORM:                  case PixelFormats.B5G5R5A1_UNORM:                  case PixelFormats.B4G4R4A4_UNORM:                      return 16;                    case PixelFormats.R8_TYPELESS:                  case PixelFormats.R8_UNORM:                  case PixelFormats.R8_UINT:                  case PixelFormats.R8_SNORM:                  case PixelFormats.R8_SINT:                  case PixelFormats.A8_UNORM:                      return 8;                    case PixelFormats.R1_UNORM:                      return 1;                    case PixelFormats.BC1_TYPELESS:                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                  case PixelFormats.BC4_TYPELESS:                  case PixelFormats.BC4_UNORM:                  case PixelFormats.BC4_SNORM:                      return 4;                    case PixelFormats.BC2_TYPELESS:                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                  case PixelFormats.BC3_TYPELESS:                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                  case PixelFormats.BC5_TYPELESS:                  case PixelFormats.BC5_UNORM:                  case PixelFormats.BC5_SNORM:                  case PixelFormats.BC6H_TYPELESS:                  case PixelFormats.BC6H_UF16:                  case PixelFormats.BC6H_SF16:                  case PixelFormats.BC7_TYPELESS:                  case PixelFormats.BC7_UNORM:                  case PixelFormats.BC7_UNORM_SRGB:                      return 8;                    default:                      return 0;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,GetBitsPerPixel,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R32G32B32A32_TYPELESS:                  case PixelFormats.R32G32B32A32_FLOAT:                  case PixelFormats.R32G32B32A32_UINT:                  case PixelFormats.R32G32B32A32_SINT:                      return 128;                    case PixelFormats.R32G32B32_TYPELESS:                  case PixelFormats.R32G32B32_FLOAT:                  case PixelFormats.R32G32B32_UINT:                  case PixelFormats.R32G32B32_SINT:                      return 96;                    case PixelFormats.R16G16B16A16_TYPELESS:                  case PixelFormats.R16G16B16A16_FLOAT:                  case PixelFormats.R16G16B16A16_UNORM:                  case PixelFormats.R16G16B16A16_UINT:                  case PixelFormats.R16G16B16A16_SNORM:                  case PixelFormats.R16G16B16A16_SINT:                  case PixelFormats.R32G32_TYPELESS:                  case PixelFormats.R32G32_FLOAT:                  case PixelFormats.R32G32_UINT:                  case PixelFormats.R32G32_SINT:                  case PixelFormats.R32G8X24_TYPELESS:                  case PixelFormats.D32_FLOAT_S8X24_UINT:                  case PixelFormats.R32_FLOAT_X8X24_TYPELESS:                  case PixelFormats.X32_TYPELESS_G8X24_UINT:                      return 64;                    case PixelFormats.R10G10B10A2_TYPELESS:                  case PixelFormats.R10G10B10A2_UNORM:                  case PixelFormats.R10G10B10A2_UINT:                  case PixelFormats.R11G11B10_FLOAT:                  case PixelFormats.R8G8B8A8_TYPELESS:                  case PixelFormats.R8G8B8A8_UNORM:                  case PixelFormats.R8G8B8A8_UNORM_SRGB:                  case PixelFormats.R8G8B8A8_UINT:                  case PixelFormats.R8G8B8A8_SNORM:                  case PixelFormats.R8G8B8A8_SINT:                  case PixelFormats.R16G16_TYPELESS:                  case PixelFormats.R16G16_FLOAT:                  case PixelFormats.R16G16_UNORM:                  case PixelFormats.R16G16_UINT:                  case PixelFormats.R16G16_SNORM:                  case PixelFormats.R16G16_SINT:                  case PixelFormats.R32_TYPELESS:                  case PixelFormats.D32_FLOAT:                  case PixelFormats.R32_FLOAT:                  case PixelFormats.R32_UINT:                  case PixelFormats.R32_SINT:                  case PixelFormats.R24G8_TYPELESS:                  case PixelFormats.D24_UNORM_S8_UINT:                  case PixelFormats.R24_UNORM_X8_TYPELESS:                  case PixelFormats.X24_TYPELESS_G8_UINT:                  case PixelFormats.R9G9B9E5_SHAREDEXP:                  case PixelFormats.R8G8_B8G8_UNORM:                  case PixelFormats.G8R8_G8B8_UNORM:                  case PixelFormats.B8G8R8A8_UNORM:                  case PixelFormats.B8G8R8X8_UNORM:                  case PixelFormats.R10G10B10_XR_BIAS_A2_UNORM:                  case PixelFormats.B8G8R8A8_TYPELESS:                  case PixelFormats.B8G8R8A8_UNORM_SRGB:                  case PixelFormats.B8G8R8X8_TYPELESS:                  case PixelFormats.B8G8R8X8_UNORM_SRGB:                      return 32;                    case PixelFormats.R8G8_TYPELESS:                  case PixelFormats.R8G8_UNORM:                  case PixelFormats.R8G8_UINT:                  case PixelFormats.R8G8_SNORM:                  case PixelFormats.R8G8_SINT:                  case PixelFormats.R16_TYPELESS:                  case PixelFormats.R16_FLOAT:                  case PixelFormats.D16_UNORM:                  case PixelFormats.R16_UNORM:                  case PixelFormats.R16_UINT:                  case PixelFormats.R16_SNORM:                  case PixelFormats.R16_SINT:                  case PixelFormats.B5G6R5_UNORM:                  case PixelFormats.B5G5R5A1_UNORM:                  case PixelFormats.B4G4R4A4_UNORM:                      return 16;                    case PixelFormats.R8_TYPELESS:                  case PixelFormats.R8_UNORM:                  case PixelFormats.R8_UINT:                  case PixelFormats.R8_SNORM:                  case PixelFormats.R8_SINT:                  case PixelFormats.A8_UNORM:                      return 8;                    case PixelFormats.R1_UNORM:                      return 1;                    case PixelFormats.BC1_TYPELESS:                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                  case PixelFormats.BC4_TYPELESS:                  case PixelFormats.BC4_UNORM:                  case PixelFormats.BC4_SNORM:                      return 4;                    case PixelFormats.BC2_TYPELESS:                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                  case PixelFormats.BC3_TYPELESS:                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                  case PixelFormats.BC5_TYPELESS:                  case PixelFormats.BC5_UNORM:                  case PixelFormats.BC5_SNORM:                  case PixelFormats.BC6H_TYPELESS:                  case PixelFormats.BC6H_UF16:                  case PixelFormats.BC6H_SF16:                  case PixelFormats.BC7_TYPELESS:                  case PixelFormats.BC7_UNORM:                  case PixelFormats.BC7_UNORM_SRGB:                      return 8;                    default:                      return 0;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,GetBitsPerPixel,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R32G32B32A32_TYPELESS:                  case PixelFormats.R32G32B32A32_FLOAT:                  case PixelFormats.R32G32B32A32_UINT:                  case PixelFormats.R32G32B32A32_SINT:                      return 128;                    case PixelFormats.R32G32B32_TYPELESS:                  case PixelFormats.R32G32B32_FLOAT:                  case PixelFormats.R32G32B32_UINT:                  case PixelFormats.R32G32B32_SINT:                      return 96;                    case PixelFormats.R16G16B16A16_TYPELESS:                  case PixelFormats.R16G16B16A16_FLOAT:                  case PixelFormats.R16G16B16A16_UNORM:                  case PixelFormats.R16G16B16A16_UINT:                  case PixelFormats.R16G16B16A16_SNORM:                  case PixelFormats.R16G16B16A16_SINT:                  case PixelFormats.R32G32_TYPELESS:                  case PixelFormats.R32G32_FLOAT:                  case PixelFormats.R32G32_UINT:                  case PixelFormats.R32G32_SINT:                  case PixelFormats.R32G8X24_TYPELESS:                  case PixelFormats.D32_FLOAT_S8X24_UINT:                  case PixelFormats.R32_FLOAT_X8X24_TYPELESS:                  case PixelFormats.X32_TYPELESS_G8X24_UINT:                      return 64;                    case PixelFormats.R10G10B10A2_TYPELESS:                  case PixelFormats.R10G10B10A2_UNORM:                  case PixelFormats.R10G10B10A2_UINT:                  case PixelFormats.R11G11B10_FLOAT:                  case PixelFormats.R8G8B8A8_TYPELESS:                  case PixelFormats.R8G8B8A8_UNORM:                  case PixelFormats.R8G8B8A8_UNORM_SRGB:                  case PixelFormats.R8G8B8A8_UINT:                  case PixelFormats.R8G8B8A8_SNORM:                  case PixelFormats.R8G8B8A8_SINT:                  case PixelFormats.R16G16_TYPELESS:                  case PixelFormats.R16G16_FLOAT:                  case PixelFormats.R16G16_UNORM:                  case PixelFormats.R16G16_UINT:                  case PixelFormats.R16G16_SNORM:                  case PixelFormats.R16G16_SINT:                  case PixelFormats.R32_TYPELESS:                  case PixelFormats.D32_FLOAT:                  case PixelFormats.R32_FLOAT:                  case PixelFormats.R32_UINT:                  case PixelFormats.R32_SINT:                  case PixelFormats.R24G8_TYPELESS:                  case PixelFormats.D24_UNORM_S8_UINT:                  case PixelFormats.R24_UNORM_X8_TYPELESS:                  case PixelFormats.X24_TYPELESS_G8_UINT:                  case PixelFormats.R9G9B9E5_SHAREDEXP:                  case PixelFormats.R8G8_B8G8_UNORM:                  case PixelFormats.G8R8_G8B8_UNORM:                  case PixelFormats.B8G8R8A8_UNORM:                  case PixelFormats.B8G8R8X8_UNORM:                  case PixelFormats.R10G10B10_XR_BIAS_A2_UNORM:                  case PixelFormats.B8G8R8A8_TYPELESS:                  case PixelFormats.B8G8R8A8_UNORM_SRGB:                  case PixelFormats.B8G8R8X8_TYPELESS:                  case PixelFormats.B8G8R8X8_UNORM_SRGB:                      return 32;                    case PixelFormats.R8G8_TYPELESS:                  case PixelFormats.R8G8_UNORM:                  case PixelFormats.R8G8_UINT:                  case PixelFormats.R8G8_SNORM:                  case PixelFormats.R8G8_SINT:                  case PixelFormats.R16_TYPELESS:                  case PixelFormats.R16_FLOAT:                  case PixelFormats.D16_UNORM:                  case PixelFormats.R16_UNORM:                  case PixelFormats.R16_UINT:                  case PixelFormats.R16_SNORM:                  case PixelFormats.R16_SINT:                  case PixelFormats.B5G6R5_UNORM:                  case PixelFormats.B5G5R5A1_UNORM:                  case PixelFormats.B4G4R4A4_UNORM:                      return 16;                    case PixelFormats.R8_TYPELESS:                  case PixelFormats.R8_UNORM:                  case PixelFormats.R8_UINT:                  case PixelFormats.R8_SNORM:                  case PixelFormats.R8_SINT:                  case PixelFormats.A8_UNORM:                      return 8;                    case PixelFormats.R1_UNORM:                      return 1;                    case PixelFormats.BC1_TYPELESS:                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                  case PixelFormats.BC4_TYPELESS:                  case PixelFormats.BC4_UNORM:                  case PixelFormats.BC4_SNORM:                      return 4;                    case PixelFormats.BC2_TYPELESS:                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                  case PixelFormats.BC3_TYPELESS:                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                  case PixelFormats.BC5_TYPELESS:                  case PixelFormats.BC5_UNORM:                  case PixelFormats.BC5_SNORM:                  case PixelFormats.BC6H_TYPELESS:                  case PixelFormats.BC6H_UF16:                  case PixelFormats.BC6H_SF16:                  case PixelFormats.BC7_TYPELESS:                  case PixelFormats.BC7_UNORM:                  case PixelFormats.BC7_UNORM_SRGB:                      return 8;                    default:                      return 0;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,GetBitsPerPixel,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R32G32B32A32_TYPELESS:                  case PixelFormats.R32G32B32A32_FLOAT:                  case PixelFormats.R32G32B32A32_UINT:                  case PixelFormats.R32G32B32A32_SINT:                      return 128;                    case PixelFormats.R32G32B32_TYPELESS:                  case PixelFormats.R32G32B32_FLOAT:                  case PixelFormats.R32G32B32_UINT:                  case PixelFormats.R32G32B32_SINT:                      return 96;                    case PixelFormats.R16G16B16A16_TYPELESS:                  case PixelFormats.R16G16B16A16_FLOAT:                  case PixelFormats.R16G16B16A16_UNORM:                  case PixelFormats.R16G16B16A16_UINT:                  case PixelFormats.R16G16B16A16_SNORM:                  case PixelFormats.R16G16B16A16_SINT:                  case PixelFormats.R32G32_TYPELESS:                  case PixelFormats.R32G32_FLOAT:                  case PixelFormats.R32G32_UINT:                  case PixelFormats.R32G32_SINT:                  case PixelFormats.R32G8X24_TYPELESS:                  case PixelFormats.D32_FLOAT_S8X24_UINT:                  case PixelFormats.R32_FLOAT_X8X24_TYPELESS:                  case PixelFormats.X32_TYPELESS_G8X24_UINT:                      return 64;                    case PixelFormats.R10G10B10A2_TYPELESS:                  case PixelFormats.R10G10B10A2_UNORM:                  case PixelFormats.R10G10B10A2_UINT:                  case PixelFormats.R11G11B10_FLOAT:                  case PixelFormats.R8G8B8A8_TYPELESS:                  case PixelFormats.R8G8B8A8_UNORM:                  case PixelFormats.R8G8B8A8_UNORM_SRGB:                  case PixelFormats.R8G8B8A8_UINT:                  case PixelFormats.R8G8B8A8_SNORM:                  case PixelFormats.R8G8B8A8_SINT:                  case PixelFormats.R16G16_TYPELESS:                  case PixelFormats.R16G16_FLOAT:                  case PixelFormats.R16G16_UNORM:                  case PixelFormats.R16G16_UINT:                  case PixelFormats.R16G16_SNORM:                  case PixelFormats.R16G16_SINT:                  case PixelFormats.R32_TYPELESS:                  case PixelFormats.D32_FLOAT:                  case PixelFormats.R32_FLOAT:                  case PixelFormats.R32_UINT:                  case PixelFormats.R32_SINT:                  case PixelFormats.R24G8_TYPELESS:                  case PixelFormats.D24_UNORM_S8_UINT:                  case PixelFormats.R24_UNORM_X8_TYPELESS:                  case PixelFormats.X24_TYPELESS_G8_UINT:                  case PixelFormats.R9G9B9E5_SHAREDEXP:                  case PixelFormats.R8G8_B8G8_UNORM:                  case PixelFormats.G8R8_G8B8_UNORM:                  case PixelFormats.B8G8R8A8_UNORM:                  case PixelFormats.B8G8R8X8_UNORM:                  case PixelFormats.R10G10B10_XR_BIAS_A2_UNORM:                  case PixelFormats.B8G8R8A8_TYPELESS:                  case PixelFormats.B8G8R8A8_UNORM_SRGB:                  case PixelFormats.B8G8R8X8_TYPELESS:                  case PixelFormats.B8G8R8X8_UNORM_SRGB:                      return 32;                    case PixelFormats.R8G8_TYPELESS:                  case PixelFormats.R8G8_UNORM:                  case PixelFormats.R8G8_UINT:                  case PixelFormats.R8G8_SNORM:                  case PixelFormats.R8G8_SINT:                  case PixelFormats.R16_TYPELESS:                  case PixelFormats.R16_FLOAT:                  case PixelFormats.D16_UNORM:                  case PixelFormats.R16_UNORM:                  case PixelFormats.R16_UINT:                  case PixelFormats.R16_SNORM:                  case PixelFormats.R16_SINT:                  case PixelFormats.B5G6R5_UNORM:                  case PixelFormats.B5G5R5A1_UNORM:                  case PixelFormats.B4G4R4A4_UNORM:                      return 16;                    case PixelFormats.R8_TYPELESS:                  case PixelFormats.R8_UNORM:                  case PixelFormats.R8_UINT:                  case PixelFormats.R8_SNORM:                  case PixelFormats.R8_SINT:                  case PixelFormats.A8_UNORM:                      return 8;                    case PixelFormats.R1_UNORM:                      return 1;                    case PixelFormats.BC1_TYPELESS:                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                  case PixelFormats.BC4_TYPELESS:                  case PixelFormats.BC4_UNORM:                  case PixelFormats.BC4_SNORM:                      return 4;                    case PixelFormats.BC2_TYPELESS:                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                  case PixelFormats.BC3_TYPELESS:                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                  case PixelFormats.BC5_TYPELESS:                  case PixelFormats.BC5_UNORM:                  case PixelFormats.BC5_SNORM:                  case PixelFormats.BC6H_TYPELESS:                  case PixelFormats.BC6H_UF16:                  case PixelFormats.BC6H_SF16:                  case PixelFormats.BC7_TYPELESS:                  case PixelFormats.BC7_UNORM:                  case PixelFormats.BC7_UNORM_SRGB:                      return 8;                    default:                      return 0;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,GetBitsPerPixel,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R32G32B32A32_TYPELESS:                  case PixelFormats.R32G32B32A32_FLOAT:                  case PixelFormats.R32G32B32A32_UINT:                  case PixelFormats.R32G32B32A32_SINT:                      return 128;                    case PixelFormats.R32G32B32_TYPELESS:                  case PixelFormats.R32G32B32_FLOAT:                  case PixelFormats.R32G32B32_UINT:                  case PixelFormats.R32G32B32_SINT:                      return 96;                    case PixelFormats.R16G16B16A16_TYPELESS:                  case PixelFormats.R16G16B16A16_FLOAT:                  case PixelFormats.R16G16B16A16_UNORM:                  case PixelFormats.R16G16B16A16_UINT:                  case PixelFormats.R16G16B16A16_SNORM:                  case PixelFormats.R16G16B16A16_SINT:                  case PixelFormats.R32G32_TYPELESS:                  case PixelFormats.R32G32_FLOAT:                  case PixelFormats.R32G32_UINT:                  case PixelFormats.R32G32_SINT:                  case PixelFormats.R32G8X24_TYPELESS:                  case PixelFormats.D32_FLOAT_S8X24_UINT:                  case PixelFormats.R32_FLOAT_X8X24_TYPELESS:                  case PixelFormats.X32_TYPELESS_G8X24_UINT:                      return 64;                    case PixelFormats.R10G10B10A2_TYPELESS:                  case PixelFormats.R10G10B10A2_UNORM:                  case PixelFormats.R10G10B10A2_UINT:                  case PixelFormats.R11G11B10_FLOAT:                  case PixelFormats.R8G8B8A8_TYPELESS:                  case PixelFormats.R8G8B8A8_UNORM:                  case PixelFormats.R8G8B8A8_UNORM_SRGB:                  case PixelFormats.R8G8B8A8_UINT:                  case PixelFormats.R8G8B8A8_SNORM:                  case PixelFormats.R8G8B8A8_SINT:                  case PixelFormats.R16G16_TYPELESS:                  case PixelFormats.R16G16_FLOAT:                  case PixelFormats.R16G16_UNORM:                  case PixelFormats.R16G16_UINT:                  case PixelFormats.R16G16_SNORM:                  case PixelFormats.R16G16_SINT:                  case PixelFormats.R32_TYPELESS:                  case PixelFormats.D32_FLOAT:                  case PixelFormats.R32_FLOAT:                  case PixelFormats.R32_UINT:                  case PixelFormats.R32_SINT:                  case PixelFormats.R24G8_TYPELESS:                  case PixelFormats.D24_UNORM_S8_UINT:                  case PixelFormats.R24_UNORM_X8_TYPELESS:                  case PixelFormats.X24_TYPELESS_G8_UINT:                  case PixelFormats.R9G9B9E5_SHAREDEXP:                  case PixelFormats.R8G8_B8G8_UNORM:                  case PixelFormats.G8R8_G8B8_UNORM:                  case PixelFormats.B8G8R8A8_UNORM:                  case PixelFormats.B8G8R8X8_UNORM:                  case PixelFormats.R10G10B10_XR_BIAS_A2_UNORM:                  case PixelFormats.B8G8R8A8_TYPELESS:                  case PixelFormats.B8G8R8A8_UNORM_SRGB:                  case PixelFormats.B8G8R8X8_TYPELESS:                  case PixelFormats.B8G8R8X8_UNORM_SRGB:                      return 32;                    case PixelFormats.R8G8_TYPELESS:                  case PixelFormats.R8G8_UNORM:                  case PixelFormats.R8G8_UINT:                  case PixelFormats.R8G8_SNORM:                  case PixelFormats.R8G8_SINT:                  case PixelFormats.R16_TYPELESS:                  case PixelFormats.R16_FLOAT:                  case PixelFormats.D16_UNORM:                  case PixelFormats.R16_UNORM:                  case PixelFormats.R16_UINT:                  case PixelFormats.R16_SNORM:                  case PixelFormats.R16_SINT:                  case PixelFormats.B5G6R5_UNORM:                  case PixelFormats.B5G5R5A1_UNORM:                  case PixelFormats.B4G4R4A4_UNORM:                      return 16;                    case PixelFormats.R8_TYPELESS:                  case PixelFormats.R8_UNORM:                  case PixelFormats.R8_UINT:                  case PixelFormats.R8_SNORM:                  case PixelFormats.R8_SINT:                  case PixelFormats.A8_UNORM:                      return 8;                    case PixelFormats.R1_UNORM:                      return 1;                    case PixelFormats.BC1_TYPELESS:                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                  case PixelFormats.BC4_TYPELESS:                  case PixelFormats.BC4_UNORM:                  case PixelFormats.BC4_SNORM:                      return 4;                    case PixelFormats.BC2_TYPELESS:                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                  case PixelFormats.BC3_TYPELESS:                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                  case PixelFormats.BC5_TYPELESS:                  case PixelFormats.BC5_UNORM:                  case PixelFormats.BC5_SNORM:                  case PixelFormats.BC6H_TYPELESS:                  case PixelFormats.BC6H_UF16:                  case PixelFormats.BC6H_SF16:                  case PixelFormats.BC7_TYPELESS:                  case PixelFormats.BC7_UNORM:                  case PixelFormats.BC7_UNORM_SRGB:                      return 8;                    default:                      return 0;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,GetBitsPerPixel,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R32G32B32A32_TYPELESS:                  case PixelFormats.R32G32B32A32_FLOAT:                  case PixelFormats.R32G32B32A32_UINT:                  case PixelFormats.R32G32B32A32_SINT:                      return 128;                    case PixelFormats.R32G32B32_TYPELESS:                  case PixelFormats.R32G32B32_FLOAT:                  case PixelFormats.R32G32B32_UINT:                  case PixelFormats.R32G32B32_SINT:                      return 96;                    case PixelFormats.R16G16B16A16_TYPELESS:                  case PixelFormats.R16G16B16A16_FLOAT:                  case PixelFormats.R16G16B16A16_UNORM:                  case PixelFormats.R16G16B16A16_UINT:                  case PixelFormats.R16G16B16A16_SNORM:                  case PixelFormats.R16G16B16A16_SINT:                  case PixelFormats.R32G32_TYPELESS:                  case PixelFormats.R32G32_FLOAT:                  case PixelFormats.R32G32_UINT:                  case PixelFormats.R32G32_SINT:                  case PixelFormats.R32G8X24_TYPELESS:                  case PixelFormats.D32_FLOAT_S8X24_UINT:                  case PixelFormats.R32_FLOAT_X8X24_TYPELESS:                  case PixelFormats.X32_TYPELESS_G8X24_UINT:                      return 64;                    case PixelFormats.R10G10B10A2_TYPELESS:                  case PixelFormats.R10G10B10A2_UNORM:                  case PixelFormats.R10G10B10A2_UINT:                  case PixelFormats.R11G11B10_FLOAT:                  case PixelFormats.R8G8B8A8_TYPELESS:                  case PixelFormats.R8G8B8A8_UNORM:                  case PixelFormats.R8G8B8A8_UNORM_SRGB:                  case PixelFormats.R8G8B8A8_UINT:                  case PixelFormats.R8G8B8A8_SNORM:                  case PixelFormats.R8G8B8A8_SINT:                  case PixelFormats.R16G16_TYPELESS:                  case PixelFormats.R16G16_FLOAT:                  case PixelFormats.R16G16_UNORM:                  case PixelFormats.R16G16_UINT:                  case PixelFormats.R16G16_SNORM:                  case PixelFormats.R16G16_SINT:                  case PixelFormats.R32_TYPELESS:                  case PixelFormats.D32_FLOAT:                  case PixelFormats.R32_FLOAT:                  case PixelFormats.R32_UINT:                  case PixelFormats.R32_SINT:                  case PixelFormats.R24G8_TYPELESS:                  case PixelFormats.D24_UNORM_S8_UINT:                  case PixelFormats.R24_UNORM_X8_TYPELESS:                  case PixelFormats.X24_TYPELESS_G8_UINT:                  case PixelFormats.R9G9B9E5_SHAREDEXP:                  case PixelFormats.R8G8_B8G8_UNORM:                  case PixelFormats.G8R8_G8B8_UNORM:                  case PixelFormats.B8G8R8A8_UNORM:                  case PixelFormats.B8G8R8X8_UNORM:                  case PixelFormats.R10G10B10_XR_BIAS_A2_UNORM:                  case PixelFormats.B8G8R8A8_TYPELESS:                  case PixelFormats.B8G8R8A8_UNORM_SRGB:                  case PixelFormats.B8G8R8X8_TYPELESS:                  case PixelFormats.B8G8R8X8_UNORM_SRGB:                      return 32;                    case PixelFormats.R8G8_TYPELESS:                  case PixelFormats.R8G8_UNORM:                  case PixelFormats.R8G8_UINT:                  case PixelFormats.R8G8_SNORM:                  case PixelFormats.R8G8_SINT:                  case PixelFormats.R16_TYPELESS:                  case PixelFormats.R16_FLOAT:                  case PixelFormats.D16_UNORM:                  case PixelFormats.R16_UNORM:                  case PixelFormats.R16_UINT:                  case PixelFormats.R16_SNORM:                  case PixelFormats.R16_SINT:                  case PixelFormats.B5G6R5_UNORM:                  case PixelFormats.B5G5R5A1_UNORM:                  case PixelFormats.B4G4R4A4_UNORM:                      return 16;                    case PixelFormats.R8_TYPELESS:                  case PixelFormats.R8_UNORM:                  case PixelFormats.R8_UINT:                  case PixelFormats.R8_SNORM:                  case PixelFormats.R8_SINT:                  case PixelFormats.A8_UNORM:                      return 8;                    case PixelFormats.R1_UNORM:                      return 1;                    case PixelFormats.BC1_TYPELESS:                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                  case PixelFormats.BC4_TYPELESS:                  case PixelFormats.BC4_UNORM:                  case PixelFormats.BC4_SNORM:                      return 4;                    case PixelFormats.BC2_TYPELESS:                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                  case PixelFormats.BC3_TYPELESS:                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                  case PixelFormats.BC5_TYPELESS:                  case PixelFormats.BC5_UNORM:                  case PixelFormats.BC5_SNORM:                  case PixelFormats.BC6H_TYPELESS:                  case PixelFormats.BC6H_UF16:                  case PixelFormats.BC6H_SF16:                  case PixelFormats.BC7_TYPELESS:                  case PixelFormats.BC7_UNORM:                  case PixelFormats.BC7_UNORM_SRGB:                      return 8;                    default:                      return 0;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,ComputePitch,The following statement contains a magic number: int bpb = (fmt == PixelFormats.BC1_TYPELESS                             || fmt == PixelFormats.BC1_UNORM                             || fmt == PixelFormats.BC1_UNORM_SRGB                             || fmt == PixelFormats.BC4_TYPELESS                             || fmt == PixelFormats.BC4_UNORM                             || fmt == PixelFormats.BC4_SNORM)                                ? 8                                : 16;
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,ComputePitch,The following statement contains a magic number: int bpb = (fmt == PixelFormats.BC1_TYPELESS                             || fmt == PixelFormats.BC1_UNORM                             || fmt == PixelFormats.BC1_UNORM_SRGB                             || fmt == PixelFormats.BC4_TYPELESS                             || fmt == PixelFormats.BC4_UNORM                             || fmt == PixelFormats.BC4_SNORM)                                ? 8                                : 16;
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,ComputePitch,The following statement contains a magic number: widthCount = Math.Max(1' (width + 3)/4);
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,ComputePitch,The following statement contains a magic number: widthCount = Math.Max(1' (width + 3)/4);
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,ComputePitch,The following statement contains a magic number: heightCount = Math.Max(1' (height + 3)/4);
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,ComputePitch,The following statement contains a magic number: heightCount = Math.Max(1' (height + 3)/4);
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following statement contains a magic number: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Magic Number,moddingSuite.BL.DDS,PixelFormat,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormat,The following statement contains a magic number: Size = 32;
Magic Number,moddingSuite.BL.DDS,FourCC,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\FourCC.cs,FourCC,The following statement contains a magic number: fourCC.Length != 4
Magic Number,moddingSuite.BL.DDS,FourCC,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\FourCC.cs,FourCC,The following statement contains a magic number: this.value = ((uint)fourCC[3]) << 24 | ((uint)fourCC[2]) << 16 | ((uint)fourCC[1]) << 8 | ((uint)fourCC[0]);
Magic Number,moddingSuite.BL.DDS,FourCC,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\FourCC.cs,FourCC,The following statement contains a magic number: this.value = ((uint)fourCC[3]) << 24 | ((uint)fourCC[2]) << 16 | ((uint)fourCC[1]) << 8 | ((uint)fourCC[0]);
Magic Number,moddingSuite.BL.DDS,FourCC,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\FourCC.cs,FourCC,The following statement contains a magic number: this.value = ((uint)fourCC[3]) << 24 | ((uint)fourCC[2]) << 16 | ((uint)fourCC[1]) << 8 | ((uint)fourCC[0]);
Magic Number,moddingSuite.BL.DDS,FourCC,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\FourCC.cs,FourCC,The following statement contains a magic number: this.value = ((uint)fourCC[3]) << 24 | ((uint)fourCC[2]) << 16 | ((uint)fourCC[1]) << 8 | ((uint)fourCC[0]);
Magic Number,moddingSuite.BL.DDS,FourCC,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\FourCC.cs,FourCC,The following statement contains a magic number: this.value = ((uint)fourCC[3]) << 24 | ((uint)fourCC[2]) << 16 | ((uint)fourCC[1]) << 8 | ((uint)fourCC[0]);
Magic Number,moddingSuite.BL.DDS,FourCC,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\FourCC.cs,FourCC,The following statement contains a magic number: this.value = ((uint)byte4) << 24 | ((uint)byte3) << 16 | ((uint)byte2) << 8 | ((uint)byte1);
Magic Number,moddingSuite.BL.DDS,FourCC,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\FourCC.cs,FourCC,The following statement contains a magic number: this.value = ((uint)byte4) << 24 | ((uint)byte3) << 16 | ((uint)byte2) << 8 | ((uint)byte1);
Magic Number,moddingSuite.BL.DDS,FourCC,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\FourCC.cs,FourCC,The following statement contains a magic number: this.value = ((uint)byte4) << 24 | ((uint)byte3) << 16 | ((uint)byte2) << 8 | ((uint)byte1);
Magic Number,moddingSuite.BL.DDS,FourCC,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\FourCC.cs,ToString,The following statement contains a magic number: return string.Format("{0}"' new string(new[]                                    {                                        (char) (value & 0xFF)'                                        (char) ((value >> 8) & 0xFF)'                                        (char) ((value >> 16) & 0xFF)'                                        (char) ((value >> 24) & 0xFF)'                                    }));
Magic Number,moddingSuite.BL.DDS,FourCC,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\FourCC.cs,ToString,The following statement contains a magic number: return string.Format("{0}"' new string(new[]                                    {                                        (char) (value & 0xFF)'                                        (char) ((value >> 8) & 0xFF)'                                        (char) ((value >> 16) & 0xFF)'                                        (char) ((value >> 24) & 0xFF)'                                    }));
Magic Number,moddingSuite.BL.DDS,FourCC,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\FourCC.cs,ToString,The following statement contains a magic number: return string.Format("{0}"' new string(new[]                                    {                                        (char) (value & 0xFF)'                                        (char) ((value >> 8) & 0xFF)'                                        (char) ((value >> 16) & 0xFF)'                                        (char) ((value >> 24) & 0xFF)'                                    }));
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,Writewavheader,The following statement contains a magic number: bw.Write(bytes + 36);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,Writewavheader,The following statement contains a magic number: bw.Write(16);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,Writewavheader,The following statement contains a magic number: bw.Write(samplerate * channels * 2);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,Writewavheader,The following statement contains a magic number: bw.Write((short)(channels * 2));
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,Writewavheader,The following statement contains a magic number: bw.Write((short)16);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,Swap,The following statement contains a magic number: uint b2 = (le >> 8) & 0xFF;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,Swap,The following statement contains a magic number: uint b3 = (le >> 16) & 0xFF;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,Swap,The following statement contains a magic number: uint b4 = (le >> 24) & 0xFF;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,Swap,The following statement contains a magic number: return b1 * 16777216 + b2 * 65536 + b3 * 256 + b4;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,Swap,The following statement contains a magic number: return b1 * 16777216 + b2 * 65536 + b3 * 256 + b4;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,Swap,The following statement contains a magic number: return b1 * 16777216 + b2 * 65536 + b3 * 256 + b4;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: int samplerate = br.ReadByte()*256 + br.ReadByte();
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: Writewavheader(bw' channels' samplerate' numSamples*channels*2);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: inMs.Position + (int) Swap(br.ReadUInt32()) + 4 < inMs.Length
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: int[] audio = new int[1024];
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: int[] os = new int[1024];
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: int frSize = frs[j + 1] - frs[j] - 20*channels;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: frSamples = 1024;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: frSamples > 1024
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: inMs.Seek(datapos + frs[j] + 20*channels' SeekOrigin.Begin);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: vv20 = br.ReadSByte() << 8 | br.ReadByte();
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: vv21 = br.ReadSByte() << 8 | br.ReadByte();
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: output = br.ReadSByte() << 8 | br.ReadByte();
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: vv22 = br.ReadSByte() << 8 | br.ReadByte();
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: sample1 = br.ReadSByte() << 8 | br.ReadByte();
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: sample2 = br.ReadSByte() << 8 | br.ReadByte();
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: vv10 = br.ReadSByte() << 8 | br.ReadByte();
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C1 = br.ReadSByte() << 8 | br.ReadByte();
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C2 = br.ReadSByte() << 8 | br.ReadByte();
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C3 = br.ReadSByte() << 8 | br.ReadByte();
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: bb = ((frame[bn/8]) >> (7 - bn%8)) & 1;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: bb = ((frame[bn/8]) >> (7 - bn%8)) & 1;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: bb = ((frame[bn/8]) >> (7 - bn%8)) & 1;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: Bit16 = Bit16*2 + (((frame[bn/8]) >> (7 - bn%8)) & 1);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: Bit16 = Bit16*2 + (((frame[bn/8]) >> (7 - bn%8)) & 1);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: Bit16 = Bit16*2 + (((frame[bn/8]) >> (7 - bn%8)) & 1);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: Bit16 = Bit16*2 + (((frame[bn/8]) >> (7 - bn%8)) & 1);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: k < 16
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: Bitvalue = Bit16 + 24;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: Bitvalue == 24
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: v6 = C1 + v27 + (v26 + 1)*((Bitvalue >> 1) - 2);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C1 += 6*((C1 + 2048)/2048);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C1 += 6*((C1 + 2048)/2048);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C1 += 6*((C1 + 2048)/2048);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C2 = v27 + 6*((v27 + 1024)/1024);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C2 = v27 + 6*((v27 + 1024)/1024);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C2 = v27 + 6*((v27 + 1024)/1024);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C3 = v26 + 6*((v26 + 512)/512);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C3 = v26 + 6*((v26 + 512)/512);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C3 = v26 + 6*((v26 + 512)/512);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: Bitvalue >= 6
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: Bitvalue >= 4
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: Bitvalue >= 2
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C3 = C3 - 2*((C3 + 510)/512);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C3 = C3 - 2*((C3 + 510)/512);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: C3 = C3 - 2*((C3 + 510)/512);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: v34 = v31/4 + 1;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: bb = ((frame[bn/8]) >> (7 - bn%8)) & 1;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: bb = ((frame[bn/8]) >> (7 - bn%8)) & 1;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: bb = ((frame[bn/8]) >> (7 - bn%8)) & 1;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: v35 = bb*2 + (((frame[bn/8]) >> (7 - bn%8)) & 1);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: v35 = bb*2 + (((frame[bn/8]) >> (7 - bn%8)) & 1);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: v35 = bb*2 + (((frame[bn/8]) >> (7 - bn%8)) & 1);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: v35 = bb*2 + (((frame[bn/8]) >> (7 - bn%8)) & 1);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: bprev += 2;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: v14 = 2*(2*sample1 - vv10) - 5*sample2;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: v14 = 2*(2*sample1 - vv10) - 5*sample2;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: v14 = 2*(2*sample1 - vv10) - 5*sample2;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: v12 = 2*output - vv22;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: sample1 = input + ((vv21*v14 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: sample1 = input + ((vv21*v14 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: vv21 += ((v14 ^ input) & -0x20000001 | 0x40000000) >> 29;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: sample = sample1 + ((vv20*v12 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: sample = sample1 + ((vv20*v12 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: sample = 32767;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: sample > 32767
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: sample = -32768;
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: sample < -32768
Magic Number,moddingSuite.BL.Ess,EssReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssReader.cs,ReadEss,The following statement contains a magic number: vv20 += ((sample1 ^ v12) & -0x20000001 | 0x40000000) >> 29;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Swap,The following statement contains a magic number: uint b2 = (le >> 8) & 0xFF;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Swap,The following statement contains a magic number: uint b3 = (le >> 16) & 0xFF;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Swap,The following statement contains a magic number: uint b4 = (le >> 24) & 0xFF;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Swap,The following statement contains a magic number: return b1*16777216 + b2*65536 + b3*256 + b4;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Swap,The following statement contains a magic number: return b1*16777216 + b2*65536 + b3*256 + b4;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Swap,The following statement contains a magic number: return b1*16777216 + b2*65536 + b3*256 + b4;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: id != 16
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: id == 16
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: int nsamples = br.ReadInt32()/channels/2;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: int frsize = 1024;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: ms.WriteByte((byte) (samplerate >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: ms.Seek(frn*4' SeekOrigin.Current);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: ms.WriteByte((byte) (pred1 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: ms.WriteByte((byte) (pred2 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: ms.WriteByte((byte) (output >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: ms.WriteByte((byte) (vv22 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: ms.WriteByte((byte) (sample1 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: ms.WriteByte((byte) (sample2 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: ms.WriteByte((byte) (vv10 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: ms.WriteByte((byte) (C1 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: ms.WriteByte((byte) (C2 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: ms.WriteByte((byte) (C3 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: k2 = 2*(2*sample1 - vv10) - 5*sample2;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: k2 = 2*(2*sample1 - vv10) - 5*sample2;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: k2 = 2*(2*sample1 - vv10) - 5*sample2;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: k1 = 2*output - vv22;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: predict = ((pred2*k2 + 128) >> 8) + ((pred1*k1 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: predict = ((pred2*k2 + 128) >> 8) + ((pred1*k1 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: predict = ((pred2*k2 + 128) >> 8) + ((pred1*k1 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: predict = ((pred2*k2 + 128) >> 8) + ((pred1*k1 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: Bitvalue = d + 2;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: bfrac[i] = (dk - C1 - C2 - C3*d)*4/C3;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: r1 = C1 + C2 + (C3 + 1)*((Bitvalue >> 1) - 2);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: C1 += 6*((C1 + 2048)/2048);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: C1 += 6*((C1 + 2048)/2048);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: C1 += 6*((C1 + 2048)/2048);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: C2 += 6*((C2 + 1024)/1024);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: C2 += 6*((C2 + 1024)/1024);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: C2 += 6*((C2 + 1024)/1024);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: C3 += 6*((C3 + 512)/512);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: C3 += 6*((C3 + 512)/512);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: C3 += 6*((C3 + 512)/512);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: Bitvalue > 5
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: Bitvalue > 3
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: C3 = C3 - 2*((C3 + 510)/512);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: C3 = C3 - 2*((C3 + 510)/512);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: C3 = C3 - 2*((C3 + 510)/512);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: diff = (r2 - r1)/4 + 1;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: sample1 = input + ((pred2*k2 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: sample1 = input + ((pred2*k2 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: pred2 += ((k2 ^ input) & -0x20000001 | 0x40000000) >> 29;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: sample = sample1 + ((pred1*k1 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: sample = sample1 + ((pred1*k1 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: sample = 32767;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: sample > 32767
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: sample = -32768;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: sample < -32768
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: pred1 += ((sample1 ^ k1) & -0x20000001 | 0x40000000) >> 29;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: j < 24
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: Bitvalue = d - 24;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: j < 16
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: d > 23
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: bfrac[i] < 2
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: (esstr.Count%8) != 0
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: Bitvalue *= 2;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: esstr[i*8 + j]
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: j < 8
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,WriteEss,The following statement contains a magic number: i < esstr.Count/8
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: id != 16
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: id == 16
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: int nsamples = br.ReadInt32()/channels/2;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: int frsize = 1024;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: ms.WriteByte((byte) (samplerate >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: ms.Seek(frn*4' SeekOrigin.Current);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: ms.WriteByte((byte) (pred1 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: ms.WriteByte((byte) (pred2 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: ms.WriteByte((byte) (output >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: ms.WriteByte((byte) (vv22 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: ms.WriteByte((byte) (sample1 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: ms.WriteByte((byte) (sample2 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: ms.WriteByte((byte) (vv10 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: ms.WriteByte((byte) (C1 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: ms.WriteByte((byte) (C2 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: ms.WriteByte((byte) (C3 >> 8));
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: k2 = 2*(2*sample1 - vv10) - 5*sample2;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: k2 = 2*(2*sample1 - vv10) - 5*sample2;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: k2 = 2*(2*sample1 - vv10) - 5*sample2;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: k1 = 2*output - vv22;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: predict = ((pred2*k2 + 128) >> 8) + ((pred1*k1 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: predict = ((pred2*k2 + 128) >> 8) + ((pred1*k1 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: predict = ((pred2*k2 + 128) >> 8) + ((pred1*k1 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: predict = ((pred2*k2 + 128) >> 8) + ((pred1*k1 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: Bitvalue = d + 2;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: bfrac[i] = (dk - C1 - C2 - C3*d)*4/C3;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: r1 = C1 + C2 + (C3 + 1)*((Bitvalue >> 1) - 2);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: C1 += 6*((C1 + 2048)/2048);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: C1 += 6*((C1 + 2048)/2048);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: C1 += 6*((C1 + 2048)/2048);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: C2 += 6*((C2 + 1024)/1024);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: C2 += 6*((C2 + 1024)/1024);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: C2 += 6*((C2 + 1024)/1024);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: C3 += 6*((C3 + 512)/512);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: C3 += 6*((C3 + 512)/512);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: C3 += 6*((C3 + 512)/512);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: Bitvalue > 5
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: Bitvalue > 3
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: C3 = C3 - 2*((C3 + 510)/512);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: C3 = C3 - 2*((C3 + 510)/512);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: C3 = C3 - 2*((C3 + 510)/512);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: diff = (r2 - r1)/4 + 1;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: sample1 = input + ((pred2*k2 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: sample1 = input + ((pred2*k2 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: pred2 += ((k2 ^ input) & -0x20000001 | 0x40000000) >> 29;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: sample = sample1 + ((pred1*k1 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: sample = sample1 + ((pred1*k1 + 128) >> 8);
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: sample = 32767;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: sample > 32767
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: sample = -32768;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: sample < -32768
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: pred1 += ((sample1 ^ k1) & -0x20000001 | 0x40000000) >> 29;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: j < 24
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: Bitvalue = d - 24;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: j < 16
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: d > 23
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: bfrac[i] < 2
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: (esstr.Count%8) != 0
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: Bitvalue *= 2;
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: esstr[i*8 + j]
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: j < 8
Magic Number,moddingSuite.BL.Ess,EssWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ess\EssWriter.cs,Write,The following statement contains a magic number: i < esstr.Count/8
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette,The following statement contains a magic number: alpha.Length > 8
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha.Length != 8
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[2] = (byte)((6 * alpha[0] + 1 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[2] = (byte)((6 * alpha[0] + 1 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[2] = (byte)((6 * alpha[0] + 1 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[3] = (byte)((5 * alpha[0] + 2 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[3] = (byte)((5 * alpha[0] + 2 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[3] = (byte)((5 * alpha[0] + 2 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[3] = (byte)((5 * alpha[0] + 2 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[4] = (byte)((4 * alpha[0] + 3 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[4] = (byte)((4 * alpha[0] + 3 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[4] = (byte)((4 * alpha[0] + 3 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[4] = (byte)((4 * alpha[0] + 3 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[5] = (byte)((3 * alpha[0] + 4 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[5] = (byte)((3 * alpha[0] + 4 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[5] = (byte)((3 * alpha[0] + 4 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[5] = (byte)((3 * alpha[0] + 4 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[6] = (byte)((2 * alpha[0] + 5 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[6] = (byte)((2 * alpha[0] + 5 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[6] = (byte)((2 * alpha[0] + 5 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[6] = (byte)((2 * alpha[0] + 5 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[7] = (byte)((1 * alpha[0] + 6 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[7] = (byte)((1 * alpha[0] + 6 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette8,The following statement contains a magic number: alpha[7] = (byte)((1 * alpha[0] + 6 * alpha[1]) / 7);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha.Length != 8
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[2] = (byte)((4 * alpha[0] + 1 * alpha[1]) / 5);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[2] = (byte)((4 * alpha[0] + 1 * alpha[1]) / 5);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[2] = (byte)((4 * alpha[0] + 1 * alpha[1]) / 5);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[3] = (byte)((3 * alpha[0] + 2 * alpha[1]) / 5);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[3] = (byte)((3 * alpha[0] + 2 * alpha[1]) / 5);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[3] = (byte)((3 * alpha[0] + 2 * alpha[1]) / 5);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[3] = (byte)((3 * alpha[0] + 2 * alpha[1]) / 5);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[4] = (byte)((2 * alpha[0] + 3 * alpha[1]) / 5);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[4] = (byte)((2 * alpha[0] + 3 * alpha[1]) / 5);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[4] = (byte)((2 * alpha[0] + 3 * alpha[1]) / 5);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[4] = (byte)((2 * alpha[0] + 3 * alpha[1]) / 5);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[5] = (byte)((1 * alpha[0] + 4 * alpha[1]) / 5);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[5] = (byte)((1 * alpha[0] + 4 * alpha[1]) / 5);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[5] = (byte)((1 * alpha[0] + 4 * alpha[1]) / 5);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[6] = 0x00;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,evaluatePalette6,The following statement contains a magic number: alpha[7] = 0xFF;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,indices,The following statement contains a magic number: index_array.Length != 16
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,index,The following statement contains a magic number: index > 16
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,index,The following statement contains a magic number: int offset = (int)(3 * index + 16);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,index,The following statement contains a magic number: int offset = (int)(3 * index + 16);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,setIndex,The following statement contains a magic number: index > 16
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,setIndex,The following statement contains a magic number: value > 8
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,setIndex,The following statement contains a magic number: int offset = (int)(3 * index + 16);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,setIndex,The following statement contains a magic number: int offset = (int)(3 * index + 16);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,decodeBlock,The following statement contains a magic number: byte[] alpha_array = new byte[8];
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,decodeBlock,The following statement contains a magic number: byte[] index_array = new byte[16];
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,decodeBlock,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,flip4,The following statement contains a magic number: tmp |= (u & 0x000000000FFF0000UL) << 36;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,flip4,The following statement contains a magic number: tmp |= (u & 0x000000FFF0000000UL) << 12;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,flip4,The following statement contains a magic number: tmp |= (u & 0x000FFF0000000000UL) >> 12;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,flip4,The following statement contains a magic number: tmp |= (u & 0xFFF0000000000000UL) >> 36;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,flip2,The following statement contains a magic number: tmp |= ((uint)u & 0x00000FFF) << 12;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,AlphaBlockDXT5,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\AlphaBlockDXT5.cs,flip2,The following statement contains a magic number: tmp |= ((uint)u & 0x00FFF000) >> 12;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,row,The following statement contains a magic number: r > 3
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,row,The following statement contains a magic number: switch (r)              {                  case 0:                      return row_1;                  case 1:                      return row_2;                  case 2:                      return row_3;                  case 3:                      return row_4;              }
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,row,The following statement contains a magic number: switch (r)              {                  case 0:                      return row_1;                  case 1:                      return row_2;                  case 2:                      return row_3;                  case 3:                      return row_4;              }
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array.Length > 4
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[0].b = (byte)((col0.b << 3) | (col0.b >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[0].b = (byte)((col0.b << 3) | (col0.b >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[0].g = (byte)((col0.g << 2) | (col0.g >> 4));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[0].g = (byte)((col0.g << 2) | (col0.g >> 4));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[0].r = (byte)((col0.r << 3) | (col0.r >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[0].r = (byte)((col0.r << 3) | (col0.r >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[1].r = (byte)((col1.r << 3) | (col1.r >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[1].r = (byte)((col1.r << 3) | (col1.r >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[1].g = (byte)((col1.g << 2) | (col1.g >> 4));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[1].g = (byte)((col1.g << 2) | (col1.g >> 4));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[1].b = (byte)((col1.b << 3) | (col1.b >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[1].b = (byte)((col1.b << 3) | (col1.b >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[2].r = (byte)((2 * color_array[0].r + color_array[1].r) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[2].r = (byte)((2 * color_array[0].r + color_array[1].r) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[2].r = (byte)((2 * color_array[0].r + color_array[1].r) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[2].g = (byte)((2 * color_array[0].g + color_array[1].g) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[2].g = (byte)((2 * color_array[0].g + color_array[1].g) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[2].g = (byte)((2 * color_array[0].g + color_array[1].g) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[2].b = (byte)((2 * color_array[0].b + color_array[1].b) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[2].b = (byte)((2 * color_array[0].b + color_array[1].b) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[2].b = (byte)((2 * color_array[0].b + color_array[1].b) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[2].a = 0xFF;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[3].r = (byte)((2 * color_array[1].r + color_array[0].r) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[3].r = (byte)((2 * color_array[1].r + color_array[0].r) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[3].r = (byte)((2 * color_array[1].r + color_array[0].r) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[3].g = (byte)((2 * color_array[1].g + color_array[0].g) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[3].g = (byte)((2 * color_array[1].g + color_array[0].g) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[3].g = (byte)((2 * color_array[1].g + color_array[0].g) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[3].b = (byte)((2 * color_array[1].b + color_array[0].b) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[3].b = (byte)((2 * color_array[1].b + color_array[0].b) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[3].b = (byte)((2 * color_array[1].b + color_array[0].b) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: color_array[3].a = 0xFF;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette,The following statement contains a magic number: return 4;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array.Length > 4
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[0].b = (byte)((col0.b << 3) | (col0.b >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[0].b = (byte)((col0.b << 3) | (col0.b >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[0].g = (byte)((col0.g << 2) | (col0.g >> 4));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[0].g = (byte)((col0.g << 2) | (col0.g >> 4));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[0].r = (byte)((col0.r << 3) | (col0.r >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[0].r = (byte)((col0.r << 3) | (col0.r >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[1].r = (byte)((col1.r << 3) | (col1.r >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[1].r = (byte)((col1.r << 3) | (col1.r >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[1].g = (byte)((col1.g << 2) | (col1.g >> 4));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[1].g = (byte)((col1.g << 2) | (col1.g >> 4));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[1].b = (byte)((col1.b << 3) | (col1.b >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[1].b = (byte)((col1.b << 3) | (col1.b >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[2].r = (byte)((color_array[0].r + color_array[1].r) / 2);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[2].r = (byte)((color_array[0].r + color_array[1].r) / 2);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[2].g = (byte)((color_array[0].g + color_array[1].g) / 2);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[2].g = (byte)((color_array[0].g + color_array[1].g) / 2);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[2].b = (byte)((color_array[0].b + color_array[1].b) / 2);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[2].b = (byte)((color_array[0].b + color_array[1].b) / 2);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[2].a = 0xFF;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[3].r = 0x00;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[3].g = 0x00;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[3].b = 0x00;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette3,The following statement contains a magic number: color_array[3].a = 0x00;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array.Length > 4
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[0].b = (byte)((col0.b << 3) | (col0.b >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[0].b = (byte)((col0.b << 3) | (col0.b >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[0].g = (byte)((col0.g << 2) | (col0.g >> 4));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[0].g = (byte)((col0.g << 2) | (col0.g >> 4));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[0].r = (byte)((col0.r << 3) | (col0.r >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[0].r = (byte)((col0.r << 3) | (col0.r >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[1].r = (byte)((col1.r << 3) | (col1.r >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[1].r = (byte)((col1.r << 3) | (col1.r >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[1].g = (byte)((col1.g << 2) | (col1.g >> 4));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[1].g = (byte)((col1.g << 2) | (col1.g >> 4));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[1].b = (byte)((col1.b << 3) | (col1.b >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[1].b = (byte)((col1.b << 3) | (col1.b >> 2));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[2].r = (byte)((2 * color_array[0].r + color_array[1].r) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[2].r = (byte)((2 * color_array[0].r + color_array[1].r) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[2].r = (byte)((2 * color_array[0].r + color_array[1].r) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[2].g = (byte)((2 * color_array[0].g + color_array[1].g) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[2].g = (byte)((2 * color_array[0].g + color_array[1].g) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[2].g = (byte)((2 * color_array[0].g + color_array[1].g) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[2].b = (byte)((2 * color_array[0].b + color_array[1].b) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[2].b = (byte)((2 * color_array[0].b + color_array[1].b) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[2].b = (byte)((2 * color_array[0].b + color_array[1].b) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[2].a = 0xFF;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[3].r = (byte)((2 * color_array[1].r + color_array[0].r) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[3].r = (byte)((2 * color_array[1].r + color_array[0].r) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[3].r = (byte)((2 * color_array[1].r + color_array[0].r) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[3].g = (byte)((2 * color_array[1].g + color_array[0].g) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[3].g = (byte)((2 * color_array[1].g + color_array[0].g) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[3].g = (byte)((2 * color_array[1].g + color_array[0].g) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[3].b = (byte)((2 * color_array[1].b + color_array[0].b) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[3].b = (byte)((2 * color_array[1].b + color_array[0].b) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[3].b = (byte)((2 * color_array[1].b + color_array[0].b) / 3);
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,evaluatePalette4,The following statement contains a magic number: color_array[3].a = 0xFF;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,decodeBlock,The following statement contains a magic number: uint idx = ((uint)row(j) >> (ushort)(2 * i)) & 3;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,decodeBlock,The following statement contains a magic number: uint idx = ((uint)row(j) >> (ushort)(2 * i)) & 3;
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,decodeBlock,The following statement contains a magic number: block.Data[j * 4 + i] = color_array[idx];
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,decodeBlock,The following statement contains a magic number: i < 4
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,decodeBlock,The following statement contains a magic number: j < 4
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,setIndices,The following statement contains a magic number: indices |= (uint) ((idx[i] & 3) << (short)(2 * i));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,setIndices,The following statement contains a magic number: indices |= (uint) ((idx[i] & 3) << (short)(2 * i));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,setIndices,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,flip4,The following statement contains a magic number: Utils.Swap(row(0)' row(3));
Magic Number,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,flip4,The following statement contains a magic number: Utils.Swap(row(1)' row(2));
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,Color,The following statement contains a magic number: !(x < 4 && y < 4)
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,Color,The following statement contains a magic number: !(x < 4 && y < 4)
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,Color,The following statement contains a magic number: return Data[y * 4 + x];
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,ColorBlock,The following statement contains a magic number: _data = new Color32[4 * 4];
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,ColorBlock,The following statement contains a magic number: _data = new Color32[4 * 4];
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,ColorBlock,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,ColorBlock,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,init,The following statement contains a magic number: uint bw = Math.Min(img.Width - x' 4U);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,init,The following statement contains a magic number: uint bh = Math.Min(img.Height - y' 4U);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,init,The following statement contains a magic number: uint[] remainder = {  		            0' 0' 0' 0'  		            0' 1' 0' 1'  		            0' 1' 2' 0'  		            0' 1' 2' 3 };
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,init,The following statement contains a magic number: uint[] remainder = {  		            0' 0' 0' 0'  		            0' 1' 0' 1'  		            0' 1' 2' 0'  		            0' 1' 2' 3 };
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,init,The following statement contains a magic number: uint[] remainder = {  		            0' 0' 0' 0'  		            0' 1' 0' 1'  		            0' 1' 2' 0'  		            0' 1' 2' 3 };
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,init,The following statement contains a magic number: uint by = remainder[(bh - 1) * 4 + i];
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,init,The following statement contains a magic number: uint bx = remainder[(bw - 1) * 4 + e];
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,init,The following statement contains a magic number: Data[i * 4 + e] = img.Pixel(x + bx' y + by);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,init,The following statement contains a magic number: e < 4
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,init,The following statement contains a magic number: i < 4
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,swizzleDXT5n,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,splatX,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,splatY,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,isSingleColor,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,countUniqueColors,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,averageColor,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,averageColor,The following statement contains a magic number: return new Color32((byte)(r / 16)' (byte)(g / 16)' (byte)(b / 16)' (byte)(a / 16));
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,averageColor,The following statement contains a magic number: return new Color32((byte)(r / 16)' (byte)(g / 16)' (byte)(b / 16)' (byte)(a / 16));
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,averageColor,The following statement contains a magic number: return new Color32((byte)(r / 16)' (byte)(g / 16)' (byte)(b / 16)' (byte)(a / 16));
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,averageColor,The following statement contains a magic number: return new Color32((byte)(r / 16)' (byte)(g / 16)' (byte)(b / 16)' (byte)(a / 16));
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,hasAlpha,The following statement contains a magic number: Data[i].a != 255
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,hasAlpha,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,diameterRange,The following statement contains a magic number: j < 16
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,diameterRange,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,luminanceRange,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRange,The following statement contains a magic number: var minColor = new Color32(255' 255' 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRange,The following statement contains a magic number: var minColor = new Color32(255' 255' 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRange,The following statement contains a magic number: var minColor = new Color32(255' 255' 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRange,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRange,The following statement contains a magic number: inset.r = (byte)((maxColor.r - minColor.r) >> 4);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRange,The following statement contains a magic number: inset.g = (byte)((maxColor.g - minColor.g) >> 4);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRange,The following statement contains a magic number: inset.b = (byte)((maxColor.b - minColor.b) >> 4);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRange,The following statement contains a magic number: minColor.r = (byte)((minColor.r + inset.r <= 255) ? minColor.r + inset.r : 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRange,The following statement contains a magic number: minColor.r = (byte)((minColor.r + inset.r <= 255) ? minColor.r + inset.r : 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRange,The following statement contains a magic number: minColor.g = (byte)((minColor.g + inset.g <= 255) ? minColor.g + inset.g : 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRange,The following statement contains a magic number: minColor.g = (byte)((minColor.g + inset.g <= 255) ? minColor.g + inset.g : 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRange,The following statement contains a magic number: minColor.b = (byte)((minColor.b + inset.b <= 255) ? minColor.b + inset.b : 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRange,The following statement contains a magic number: minColor.b = (byte)((minColor.b + inset.b <= 255) ? minColor.b + inset.b : 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: Color32 minColor = new Color32(255' 255' 255' 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: Color32 minColor = new Color32(255' 255' 255' 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: Color32 minColor = new Color32(255' 255' 255' 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: Color32 minColor = new Color32(255' 255' 255' 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: i < 16
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: inset.r = (byte)((maxColor.r - minColor.r) >> 4);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: inset.g = (byte)((maxColor.g - minColor.g) >> 4);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: inset.b = (byte)((maxColor.b - minColor.b) >> 4);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: inset.a = (byte)((maxColor.a - minColor.a) >> 4);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: minColor.r = (byte)((minColor.r + inset.r <= 255) ? minColor.r + inset.r : 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: minColor.r = (byte)((minColor.r + inset.r <= 255) ? minColor.r + inset.r : 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: minColor.g = (byte)((minColor.g + inset.g <= 255) ? minColor.g + inset.g : 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: minColor.g = (byte)((minColor.g + inset.g <= 255) ? minColor.g + inset.g : 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: minColor.b = (byte)((minColor.b + inset.b <= 255) ? minColor.b + inset.b : 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: minColor.b = (byte)((minColor.b + inset.b <= 255) ? minColor.b + inset.b : 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: minColor.a = (byte)((minColor.a + inset.a <= 255) ? minColor.a + inset.a : 255);
Magic Number,moddingSuite.BL.ImageService,ColorBlock,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\ColorBlock.cs,boundsRangeAlpha,The following statement contains a magic number: minColor.a = (byte)((minColor.a + inset.a <= 255) ? minColor.a + inset.a : 255);
Magic Number,moddingSuite.BL.ImageService,Color32,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\Color32.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ g.GetHashCode();
Magic Number,moddingSuite.BL.ImageService,Color32,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\Color32.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ r.GetHashCode();
Magic Number,moddingSuite.BL.ImageService,Color32,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\Color32.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ a.GetHashCode();
Magic Number,moddingSuite.BL.ImageService,Color32,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\Color32.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (int) u;
Magic Number,moddingSuite.BL.ImageService,RawImage,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\RawImage.cs,RawImage,The following statement contains a magic number: _data = new Color32[width * height * 4];
Magic Number,moddingSuite.BL.Mesh,MeshReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Mesh\MeshReader.cs,ReadSubHeader,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Mesh,MeshReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Mesh\MeshReader.cs,ReadSubHeaderEntry,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Mesh,MeshReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Mesh\MeshReader.cs,ReadSubHeaderEntryWithCount,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Mesh,MeshReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Mesh\MeshReader.cs,ReadHeader,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Mesh,MeshReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Mesh\MeshReader.cs,ReadHeader,The following statement contains a magic number: var chkSumBuffer = new byte[16];
Magic Number,moddingSuite.BL.Mesh,MeshReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Mesh\MeshReader.cs,ReadMeshDictionary,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Mesh,MeshReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Mesh\MeshReader.cs,ReadMeshDictionary,The following statement contains a magic number: s.Read(buffer' 0' 4);
Magic Number,moddingSuite.BL.Mesh,MeshReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Mesh\MeshReader.cs,ReadMeshDictionary,The following statement contains a magic number: s.Read(buffer' 0' 4);
Magic Number,moddingSuite.BL.Mesh,MeshReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Mesh\MeshReader.cs,ReadMeshDictionary,The following statement contains a magic number: buffer = new byte[2];
Magic Number,moddingSuite.BL.Mesh,MeshReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Mesh\MeshReader.cs,ReadMeshDictionary,The following statement contains a magic number: file.Name.Length % 2 == 0
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,Read,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,GetUncompressedNdfbinary,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadHeader,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadHeader,The following statement contains a magic number: BitConverter.ToUInt32(buffer' 0) != 809981253
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadHeader,The following statement contains a magic number: BitConverter.ToUInt32(buffer' 0) != 1178881603
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadHeader,The following statement contains a magic number: header.IsCompressedBody = BitConverter.ToInt32(buffer' 0) == 128;
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadHeader,The following statement contains a magic number: buffer = new byte[8];
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadFooter,The following statement contains a magic number: var dwdBuffer = new byte[4];
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadFooter,The following statement contains a magic number: var qwdbuffer = new byte[8];
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadFooter,The following statement contains a magic number: BitConverter.ToUInt32(dwdBuffer' 0) != 809717588
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadClasses,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadProperties,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadStrings,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadTrans,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadChunk,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadUIntList,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadObject,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadValue,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Ndf,NdfbinReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinReader.cs,ReadValue,The following statement contains a magic number: var k = 64;
Magic Number,moddingSuite.BL.Ndf,NdfbinWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinWriter.cs,Write,The following statement contains a magic number: uint compressedFlag = compressed ? 128 : 0u;
Magic Number,moddingSuite.BL.Ndf,NdfbinWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinWriter.cs,Write,The following statement contains a magic number: outStream.Write(BitConverter.GetBytes(EugenMagic)' 0' 4);
Magic Number,moddingSuite.BL.Ndf,NdfbinWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinWriter.cs,Write,The following statement contains a magic number: outStream.Write(BitConverter.GetBytes((uint)0)' 0' 4);
Magic Number,moddingSuite.BL.Ndf,NdfbinWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinWriter.cs,Write,The following statement contains a magic number: outStream.Write(BitConverter.GetBytes(NdfBinMagic)' 0' 4);
Magic Number,moddingSuite.BL.Ndf,NdfbinWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinWriter.cs,Write,The following statement contains a magic number: outStream.Write(BitConverter.GetBytes(compressedFlag)' 0' 4);
Magic Number,moddingSuite.BL.Ndf,NdfbinWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinWriter.cs,Write,The following statement contains a magic number: outStream.Write(BitConverter.GetBytes(ndf.Footer.Offset)' 0' 8);
Magic Number,moddingSuite.BL.Ndf,NdfbinWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinWriter.cs,Write,The following statement contains a magic number: outStream.Write(BitConverter.GetBytes(NdfbinHeaderSize)' 0' 8);
Magic Number,moddingSuite.BL.Ndf,NdfbinWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinWriter.cs,Write,The following statement contains a magic number: outStream.Write(BitConverter.GetBytes(NdfbinHeaderSize + (ulong)data.Length)' 0' 8);
Magic Number,moddingSuite.BL.Ndf,NdfbinWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Ndf\NdfbinWriter.cs,Write,The following statement contains a magic number: outStream.Write(BitConverter.GetBytes(data.Length)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioExtensions,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioExtensions.cs,AssertAreaMagic,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Scenario,ScenarioReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioReader.cs,Read,The following statement contains a magic number: var buffer = new byte[10];
Magic Number,moddingSuite.BL.Scenario,ScenarioReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioReader.cs,Read,The following statement contains a magic number: buffer = new byte[16];
Magic Number,moddingSuite.BL.Scenario,ScenarioReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioReader.cs,Read,The following statement contains a magic number: s.Seek(2' SeekOrigin.Current);
Magic Number,moddingSuite.BL.Scenario,ScenarioReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioReader.cs,Read,The following statement contains a magic number: buffer = new byte[4];
Magic Number,moddingSuite.BL.Scenario,ScenarioReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioReader.cs,Read,The following statement contains a magic number: uncompressedPrintToFile(f.ContentFiles[2]' "thirdPart");
Magic Number,moddingSuite.BL.Scenario,ScenarioReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioReader.cs,ReadZoneData,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Scenario,ScenarioReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioReader.cs,ReadZoneData,The following statement contains a magic number: ms.Seek(4' SeekOrigin.Current);
Magic Number,moddingSuite.BL.Scenario,ScenarioReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioReader.cs,ReadArea,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.Scenario,ScenarioReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioReader.cs,ReadArea,The following statement contains a magic number: zoneDataVersion != 2
Magic Number,moddingSuite.BL.Scenario,ScenarioReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioReader.cs,ReadArea,The following statement contains a magic number: ms.Seek(4' SeekOrigin.Current);
Magic Number,moddingSuite.BL.Scenario,ScenarioReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioReader.cs,ReadArea,The following statement contains a magic number: BitConverter.ToUInt32(buffer' 0) != 809782853
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,Write,The following statement contains a magic number: scenarioData.InsertRange(10' hash.Concat(new byte[] { 0x00' 0x00 }));
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(AreaFileVersion)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Seek(4' SeekOrigin.Current);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(file.AreaManagers.Count)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(areaManager.Count)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(AreaPartVersion)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(area.Id)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(area.Name.Length)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes((float)area.AttachmentPoint.X)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes((float)area.AttachmentPoint.Y)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes((float)area.AttachmentPoint.Z)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(area.Content.ClippedAreas.Count)'0'4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(clippedArea.StartTriangle)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(clippedArea.TriangleCount)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(clippedArea.StartVertex)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(clippedArea.VertexCount)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(area.Content.BorderTriangle.StartTriangle)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(area.Content.BorderTriangle.TriangleCount)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(area.Content.BorderTriangle.StartVertex)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(area.Content.BorderTriangle.VertexCount)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(area.Content.BorderVertex.StartVertex)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(area.Content.BorderVertex.VertexCount)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(area.Content.Vertices.Count)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(area.Content.Triangles.Count)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(vertex.X)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(vertex.Y)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(vertex.Z)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(vertex.W)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(vertex.Center)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(triangle.Point1)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(triangle.Point2)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(triangle.Point3)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Seek(4' SeekOrigin.Current);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(809782853)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(809782853)' 0' 4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Seek(8' SeekOrigin.Begin);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes((uint)(ms.Length-12))'0'4);
Magic Number,moddingSuite.BL.Scenario,ScenarioWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Scenario\ScenarioWriter.cs,CreateAreaSubFile,The following statement contains a magic number: ms.Write(BitConverter.GetBytes((uint)(ms.Length-12))'0'4);
Magic Number,moddingSuite.BL.TGV,TgvBitmapReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvBitmapReader.cs,GetMip,The following statement contains a magic number: width = Math.Max(1' width / 2);
Magic Number,moddingSuite.BL.TGV,TgvBitmapReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvBitmapReader.cs,GetMip,The following statement contains a magic number: height = Math.Max(1' height / 2);
Magic Number,moddingSuite.BL.TGV,TgvBitmapReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvBitmapReader.cs,ReadBlockFormat,The following statement contains a magic number: uint bw = (w + 3) / 4;
Magic Number,moddingSuite.BL.TGV,TgvBitmapReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvBitmapReader.cs,ReadBlockFormat,The following statement contains a magic number: uint bw = (w + 3) / 4;
Magic Number,moddingSuite.BL.TGV,TgvBitmapReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvBitmapReader.cs,ReadBlockFormat,The following statement contains a magic number: uint bh = (h + 3) / 4;
Magic Number,moddingSuite.BL.TGV,TgvBitmapReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvBitmapReader.cs,ReadBlockFormat,The following statement contains a magic number: uint bh = (h + 3) / 4;
Magic Number,moddingSuite.BL.TGV,TgvBitmapReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvBitmapReader.cs,ReadBlockFormat,The following statement contains a magic number: ret.Data[(4 * by + y) * ret.Width + (4 * bx + x)] = block.Color(x' y);
Magic Number,moddingSuite.BL.TGV,TgvBitmapReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvBitmapReader.cs,ReadBlockFormat,The following statement contains a magic number: ret.Data[(4 * by + y) * ret.Width + (4 * bx + x)] = block.Color(x' y);
Magic Number,moddingSuite.BL.TGV,TgvBitmapReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvBitmapReader.cs,ReadBlockFormat,The following statement contains a magic number: x < Math.Min(4' w - 4 * bx)
Magic Number,moddingSuite.BL.TGV,TgvBitmapReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvBitmapReader.cs,ReadBlockFormat,The following statement contains a magic number: x < Math.Min(4' w - 4 * bx)
Magic Number,moddingSuite.BL.TGV,TgvDDSReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvDDSReader.cs,ReadDDS,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.TGV,TgvDDSReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvDDSReader.cs,ReadDDS,The following statement contains a magic number: mipSize /= 4;
Magic Number,moddingSuite.BL.TGV,TgvDDSWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvDDSWriter.cs,CreateDDSHeader,The following statement contains a magic number: var hd = new DDS.DDS.Header                           {                               Size = 124'                               Flags = DDS.DDS.HeaderFlags.Texture'                               SurfaceFlags = DDS.DDS.SurfaceFlags.Texture'                               Width = file.ImageWidth'                               Height = file.ImageHeight'                               Depth = 0'                               MipMapCount = 1                           };
Magic Number,moddingSuite.BL.TGV,TgvReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvReader.cs,Read,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL.TGV,TgvReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvReader.cs,Read,The following statement contains a magic number: buffer = new byte[2];
Magic Number,moddingSuite.BL.TGV,TgvReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvReader.cs,Read,The following statement contains a magic number: buffer = new byte[16];
Magic Number,moddingSuite.BL.TGV,TgvReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvReader.cs,Read,The following statement contains a magic number: buffer = new byte[4];
Magic Number,moddingSuite.BL.TGV,TgvReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvReader.cs,ReadMip,The following statement contains a magic number: buffer = new byte[4];
Magic Number,moddingSuite.BL.TGV,TgvReader,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvReader.cs,ReadMip,The following statement contains a magic number: buffer = new byte[mipMap.Size - 8];
Magic Number,moddingSuite.BL.TGV,TgvWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvWriter.cs,Write,The following statement contains a magic number: sourceChecksum.Length > 16
Magic Number,moddingSuite.BL.TGV,TgvWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvWriter.cs,Write,The following statement contains a magic number: destStream.Seek(8' SeekOrigin.Current);
Magic Number,moddingSuite.BL.TGV,TgvWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvWriter.cs,Write,The following statement contains a magic number: tileSize /= 4;
Magic Number,moddingSuite.BL.TGV,TgvWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvWriter.cs,Write,The following statement contains a magic number: buffer = BitConverter.GetBytes((int)Math.Pow(4' sortedMipMaps.IndexOf(sortedMipMap)));
Magic Number,moddingSuite.BL.TGV,TgvWriter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TGV\TgvWriter.cs,Write,The following statement contains a magic number: buffer = BitConverter.GetBytes(sortedMipMaps[i].Size + 8);
Magic Number,moddingSuite.BL,SavManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\SavManager.cs,Read,The following statement contains a magic number: byte[] buffer = new byte[4];
Magic Number,moddingSuite.BL,SavManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\SavManager.cs,Read,The following statement contains a magic number: ms.Seek(4' SeekOrigin.Current);
Magic Number,moddingSuite.BL,SavManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\SavManager.cs,Read,The following statement contains a magic number: buffer = new byte[16];
Magic Number,moddingSuite.BL,SavManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\SavManager.cs,Read,The following statement contains a magic number: Array.Copy(buffer' ret.Checksum' 16);
Magic Number,moddingSuite.BL,SavManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\SavManager.cs,Read,The following statement contains a magic number: buffer = new byte[4];
Magic Number,moddingSuite.BL,SavManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\SavManager.cs,Read,The following statement contains a magic number: buffer = new byte[8];
Magic Number,moddingSuite.BL,TradManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TradManager.cs,GetEntryContents,The following statement contains a magic number: var buffer = new byte[entry.ContLen * 2];
Magic Number,moddingSuite.BL,TradManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TradManager.cs,ReadDictionary,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL,TradManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TradManager.cs,ReadDictionary,The following statement contains a magic number: var hashBuffer = new byte[8];
Magic Number,moddingSuite.BL,TradManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TradManager.cs,ReadHeader,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL,TradManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TradManager.cs,BuildTradFile,The following statement contains a magic number: ms.Seek(4' SeekOrigin.Current);
Magic Number,moddingSuite.BL,TradManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\TradManager.cs,BuildTradFile,The following statement contains a magic number: ms.Seek(8' SeekOrigin.Current);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,EdataManager,The following statement contains a magic number: byte[] tgvHeader = { 2 };
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ParseEdataFile,The following statement contains a magic number: switch (Header.Version)              {                  case 1:                      Files = ReadEdatV1Dictionary();                      break;                  case 2:                      Files = ReadEdatV2Dictionary();                      break;                  default:                      throw new NotSupportedException(string.Format("Edata Version {0} is currently not supported"' Header.Version));              }
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdataHeader,The following statement contains a magic number: header.Version > 2
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdatV2Dictionary,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdatV2Dictionary,The following statement contains a magic number: fileStream.Read(buffer' 0' 4);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdatV2Dictionary,The following statement contains a magic number: fileStream.Read(buffer' 0' 4);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdatV2Dictionary,The following statement contains a magic number: buffer = new byte[8];
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdatV2Dictionary,The following statement contains a magic number: var checkSum = new byte[16];
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdatV2Dictionary,The following statement contains a magic number: file.Name.Length % 2 == 0
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdatV1Dictionary,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdatV1Dictionary,The following statement contains a magic number: fileStream.Read(buffer' 0' 4);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdatV1Dictionary,The following statement contains a magic number: fileStream.Read(buffer' 0' 4);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdatV1Dictionary,The following statement contains a magic number: fileStream.Read(buffer' 0' 4);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdatV1Dictionary,The following statement contains a magic number: fileStream.Read(buffer' 0' 4);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReadEdatV1Dictionary,The following statement contains a magic number: (file.Name.Length + 1) % 2 == 0
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV2,The following statement contains a magic number: var reserveBuffer = new byte[200];
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV2,The following statement contains a magic number: newFile.Write(BitConverter.GetBytes(filesContentLength)' 0' 4);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV2,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV2,The following statement contains a magic number: newFile.Read(buffer' 0' 4);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV2,The following statement contains a magic number: newFile.Seek(4' SeekOrigin.Current);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV2,The following statement contains a magic number: (name.Length + 1) % 2 == 1
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV1,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV1,The following statement contains a magic number: newFile.Read(buffer' 0' 4);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV1,The following statement contains a magic number: newFile.Seek(4' SeekOrigin.Current);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV1,The following statement contains a magic number: (name.Length + 1) % 2 == 0
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV1,The following statement contains a magic number: newFile.Seek(8' SeekOrigin.Begin);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV1,The following statement contains a magic number: newFile.Seek(13' SeekOrigin.Current);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceRebuildV1,The following statement contains a magic number: newFile.Write(BitConverter.GetBytes(filesContentLength)' 0' 4);
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ReplaceFile,The following statement contains a magic number: switch (Header.Version)              {                  case 1:                      newFile = ReplaceRebuildV1(oldFile' newContent);                      break;                  case 2:                      newFile = ReplaceRebuildV2(oldFile' newContent);                      break;                  default:                      throw new NotSupportedException(string.Format("Edata Version {0} is currently not supported"' Header.Version));              }
Magic Number,moddingSuite.BL,EdataManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\EdataManager.cs,ResolveFileType,The following statement contains a magic number: var headerBuffer = new byte[12];
Magic Number,moddingSuite.Model.Common,Md5Hash,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Common\Md5Hash.cs,GetHash,The following statement contains a magic number: h.B_3 = arr[2];
Magic Number,moddingSuite.Model.Common,Md5Hash,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Common\Md5Hash.cs,GetHash,The following statement contains a magic number: h.B_4 = arr[3];
Magic Number,moddingSuite.Model.Common,Md5Hash,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Common\Md5Hash.cs,GetHash,The following statement contains a magic number: h.B_5 = arr[4];
Magic Number,moddingSuite.Model.Common,Md5Hash,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Common\Md5Hash.cs,GetHash,The following statement contains a magic number: h.B_6 = arr[5];
Magic Number,moddingSuite.Model.Common,Md5Hash,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Common\Md5Hash.cs,GetHash,The following statement contains a magic number: h.B_7 = arr[6];
Magic Number,moddingSuite.Model.Common,Md5Hash,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Common\Md5Hash.cs,GetHash,The following statement contains a magic number: h.B_8 = arr[7];
Magic Number,moddingSuite.Model.Common,Md5Hash,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Common\Md5Hash.cs,GetHash,The following statement contains a magic number: h.B_9 = arr[8];
Magic Number,moddingSuite.Model.Common,Md5Hash,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Common\Md5Hash.cs,GetHash,The following statement contains a magic number: h.B_10 = arr[9];
Magic Number,moddingSuite.Model.Common,Md5Hash,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Common\Md5Hash.cs,GetHash,The following statement contains a magic number: h.B_11 = arr[10];
Magic Number,moddingSuite.Model.Common,Md5Hash,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Common\Md5Hash.cs,GetHash,The following statement contains a magic number: h.B_12 = arr[11];
Magic Number,moddingSuite.Model.Common,Md5Hash,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Common\Md5Hash.cs,GetHash,The following statement contains a magic number: h.B_13 = arr[12];
Magic Number,moddingSuite.Model.Common,Md5Hash,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Common\Md5Hash.cs,GetHash,The following statement contains a magic number: h.B_14 = arr[13];
Magic Number,moddingSuite.Model.Common,Md5Hash,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Common\Md5Hash.cs,GetHash,The following statement contains a magic number: h.B_15 = arr[14];
Magic Number,moddingSuite.Model.Common,Md5Hash,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Common\Md5Hash.cs,GetHash,The following statement contains a magic number: h.B_16 = arr[15];
Magic Number,moddingSuite.Model.Ndfbin,NdfFooter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\NdfFooter.cs,GetBytes,The following statement contains a magic number: var seperator = new byte[4];
Magic Number,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,ExportKdTreeExecute,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,ExportKdTreeExecute,The following statement contains a magic number: uncompressedPrintToFile(ms' "3rdPartUnComp"' 8' logFile);
Magic Number,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,ExportKdTreeExecute,The following statement contains a magic number: uncompressedPrintToFile(ms' "5thPartUnComp"' 4' logFile);
Magic Number,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,ExportKdTreeExecute,The following statement contains a magic number: var off = ms.Position % 8;
Magic Number,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,ExportKdTreeExecute,The following statement contains a magic number: off = 8;
Magic Number,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,ExportKdTreeExecute,The following statement contains a magic number: uncompressedPrintToFile(ms' "7thPartUncomp"' (int)(72 - off)' logFile);
Magic Number,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,printToFile,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,printToFile,The following statement contains a magic number: var subBlockBuffer = new byte[blockLenComp - 4];
Magic Number,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,readVertexes,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,readVertexes,The following statement contains a magic number: var subBlockBuffer = new byte[blockLenComp - 4];
Magic Number,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,readVertexes,The following statement contains a magic number: bs.Seek(2' SeekOrigin.Current);
Magic Number,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,readVertexes,The following statement contains a magic number: uint x = (coord & xMask) >> 18;
Magic Number,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfBlob,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfBlob.cs,readVertexes,The following statement contains a magic number: uint y = (coord & yMask) >> 4;
Magic Number,moddingSuite.Model.Ndfbin.Types.AllTypes,NdfTime64,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\AllTypes\NdfTime64.cs,GetBytes,The following statement contains a magic number: var unixdt = new DateTime(1970' 1' 1);
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetType,The following statement contains a magic number: data.Length != 4
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetValue,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                      return new NdfBoolean(BitConverter.ToBoolean(data' 0));                  case NdfType.Int8:                      return new NdfInt8(data[0]);                  case NdfType.Int16:                      return new NdfInt16(BitConverter.ToInt16(data' 0));                  case NdfType.UInt16:                      return new NdfUInt16(BitConverter.ToUInt16(data' 0));                  /*case NdfType.Int24:                      var buf = new byte[4];                                            Array.Copy(data' buf' 3);                      return new NdfInt32(BitConverter.ToInt32(buf' 0));*/                  case NdfType.Int32:                      return new NdfInt32(BitConverter.ToInt32(data' 0));                  case NdfType.UInt32:                      return new NdfUInt32(BitConverter.ToUInt32(data' 0));                  case NdfType.Long:                      return new NdfLong(BitConverter.ToInt64(data' 0));                  case NdfType.Float32:                      return new NdfSingle(BitConverter.ToSingle(data' 0));                  case NdfType.Float64:                      return new NdfDouble(BitConverter.ToDouble(data' 0));                    case NdfType.TableStringFile:                      int id = BitConverter.ToInt32(data' 0);                      return new NdfFileNameString(mgr.Strings[id]);                  case NdfType.TableString:                      int id2 = BitConverter.ToInt32(data' 0);                      return new NdfString(mgr.Strings[id2]);                  case NdfType.Color32:                      return new NdfColor32(Color.FromArgb(data[3]' data[0]' data[1]' data[2]));                  case NdfType.Color128:                      return new NdfColor128(data);                  case NdfType.Vector:                      byte[] px = data.Take(4).ToArray();                      byte[] py = data.Skip(4).Take(4).ToArray();                      byte[] pz = data.Skip(8).ToArray();                      return new NdfVector(new Point3D(BitConverter.ToSingle(px' 0)'                                                       BitConverter.ToSingle(py' 0)'                                                       BitConverter.ToSingle(pz' 0)));                    case NdfType.ObjectReference:                      uint instId = BitConverter.ToUInt32(data.Take(4).ToArray()' 0);                      uint clsId = BitConverter.ToUInt32(data.Skip(4).ToArray()' 0);                      NdfClass cls = null;                        // possible deadrefs here                      if (clsId <= mgr.Classes.Count)                          cls = mgr.Classes[(int)clsId];                        return new NdfObjectReference(cls' instId' cls == null);                    case NdfType.Map:                      return new NdfMap(new MapValueHolder(null' mgr)' new MapValueHolder(null' mgr)' mgr);                    case NdfType.Guid:                      return new NdfGuid(new Guid(data));                    case NdfType.WideString:                      return new NdfWideString(Encoding.Unicode.GetString(data));                    case NdfType.TransTableReference:                      int id3 = BitConverter.ToInt32(data' 0);                      return new NdfTrans(mgr.Trans[id3]);                    case NdfType.LocalisationHash:                      return new NdfLocalisationHash(data);                    case NdfType.List:                      return new NdfCollection();                  case NdfType.MapList:                      return new NdfMapList();                    case NdfType.Blob:                      return new NdfBlob(data);                    case NdfType.ZipBlob:                      return new NdfZipBlob(data);                    case NdfType.EugInt2:                      return new NdfEugInt2(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4));                  case NdfType.EugFloat2:                      return new NdfEugFloat2(BitConverter.ToSingle(data' 0)' BitConverter.ToSingle(data' 4));                    case NdfType.TrippleInt:                      return new NdfTrippleInt(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4)' BitConverter.ToInt32(data' 8));                    case NdfType.Hash:                      return new NdfHash(data);                    case NdfType.Time64:                      return new NdfTime64(new DateTime(1970' 1' 1).AddSeconds(BitConverter.ToUInt32(data' 0)));                    case NdfType.Unset:                      return new NdfNull();                    default:                      return null;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetValue,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                      return new NdfBoolean(BitConverter.ToBoolean(data' 0));                  case NdfType.Int8:                      return new NdfInt8(data[0]);                  case NdfType.Int16:                      return new NdfInt16(BitConverter.ToInt16(data' 0));                  case NdfType.UInt16:                      return new NdfUInt16(BitConverter.ToUInt16(data' 0));                  /*case NdfType.Int24:                      var buf = new byte[4];                                            Array.Copy(data' buf' 3);                      return new NdfInt32(BitConverter.ToInt32(buf' 0));*/                  case NdfType.Int32:                      return new NdfInt32(BitConverter.ToInt32(data' 0));                  case NdfType.UInt32:                      return new NdfUInt32(BitConverter.ToUInt32(data' 0));                  case NdfType.Long:                      return new NdfLong(BitConverter.ToInt64(data' 0));                  case NdfType.Float32:                      return new NdfSingle(BitConverter.ToSingle(data' 0));                  case NdfType.Float64:                      return new NdfDouble(BitConverter.ToDouble(data' 0));                    case NdfType.TableStringFile:                      int id = BitConverter.ToInt32(data' 0);                      return new NdfFileNameString(mgr.Strings[id]);                  case NdfType.TableString:                      int id2 = BitConverter.ToInt32(data' 0);                      return new NdfString(mgr.Strings[id2]);                  case NdfType.Color32:                      return new NdfColor32(Color.FromArgb(data[3]' data[0]' data[1]' data[2]));                  case NdfType.Color128:                      return new NdfColor128(data);                  case NdfType.Vector:                      byte[] px = data.Take(4).ToArray();                      byte[] py = data.Skip(4).Take(4).ToArray();                      byte[] pz = data.Skip(8).ToArray();                      return new NdfVector(new Point3D(BitConverter.ToSingle(px' 0)'                                                       BitConverter.ToSingle(py' 0)'                                                       BitConverter.ToSingle(pz' 0)));                    case NdfType.ObjectReference:                      uint instId = BitConverter.ToUInt32(data.Take(4).ToArray()' 0);                      uint clsId = BitConverter.ToUInt32(data.Skip(4).ToArray()' 0);                      NdfClass cls = null;                        // possible deadrefs here                      if (clsId <= mgr.Classes.Count)                          cls = mgr.Classes[(int)clsId];                        return new NdfObjectReference(cls' instId' cls == null);                    case NdfType.Map:                      return new NdfMap(new MapValueHolder(null' mgr)' new MapValueHolder(null' mgr)' mgr);                    case NdfType.Guid:                      return new NdfGuid(new Guid(data));                    case NdfType.WideString:                      return new NdfWideString(Encoding.Unicode.GetString(data));                    case NdfType.TransTableReference:                      int id3 = BitConverter.ToInt32(data' 0);                      return new NdfTrans(mgr.Trans[id3]);                    case NdfType.LocalisationHash:                      return new NdfLocalisationHash(data);                    case NdfType.List:                      return new NdfCollection();                  case NdfType.MapList:                      return new NdfMapList();                    case NdfType.Blob:                      return new NdfBlob(data);                    case NdfType.ZipBlob:                      return new NdfZipBlob(data);                    case NdfType.EugInt2:                      return new NdfEugInt2(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4));                  case NdfType.EugFloat2:                      return new NdfEugFloat2(BitConverter.ToSingle(data' 0)' BitConverter.ToSingle(data' 4));                    case NdfType.TrippleInt:                      return new NdfTrippleInt(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4)' BitConverter.ToInt32(data' 8));                    case NdfType.Hash:                      return new NdfHash(data);                    case NdfType.Time64:                      return new NdfTime64(new DateTime(1970' 1' 1).AddSeconds(BitConverter.ToUInt32(data' 0)));                    case NdfType.Unset:                      return new NdfNull();                    default:                      return null;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetValue,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                      return new NdfBoolean(BitConverter.ToBoolean(data' 0));                  case NdfType.Int8:                      return new NdfInt8(data[0]);                  case NdfType.Int16:                      return new NdfInt16(BitConverter.ToInt16(data' 0));                  case NdfType.UInt16:                      return new NdfUInt16(BitConverter.ToUInt16(data' 0));                  /*case NdfType.Int24:                      var buf = new byte[4];                                            Array.Copy(data' buf' 3);                      return new NdfInt32(BitConverter.ToInt32(buf' 0));*/                  case NdfType.Int32:                      return new NdfInt32(BitConverter.ToInt32(data' 0));                  case NdfType.UInt32:                      return new NdfUInt32(BitConverter.ToUInt32(data' 0));                  case NdfType.Long:                      return new NdfLong(BitConverter.ToInt64(data' 0));                  case NdfType.Float32:                      return new NdfSingle(BitConverter.ToSingle(data' 0));                  case NdfType.Float64:                      return new NdfDouble(BitConverter.ToDouble(data' 0));                    case NdfType.TableStringFile:                      int id = BitConverter.ToInt32(data' 0);                      return new NdfFileNameString(mgr.Strings[id]);                  case NdfType.TableString:                      int id2 = BitConverter.ToInt32(data' 0);                      return new NdfString(mgr.Strings[id2]);                  case NdfType.Color32:                      return new NdfColor32(Color.FromArgb(data[3]' data[0]' data[1]' data[2]));                  case NdfType.Color128:                      return new NdfColor128(data);                  case NdfType.Vector:                      byte[] px = data.Take(4).ToArray();                      byte[] py = data.Skip(4).Take(4).ToArray();                      byte[] pz = data.Skip(8).ToArray();                      return new NdfVector(new Point3D(BitConverter.ToSingle(px' 0)'                                                       BitConverter.ToSingle(py' 0)'                                                       BitConverter.ToSingle(pz' 0)));                    case NdfType.ObjectReference:                      uint instId = BitConverter.ToUInt32(data.Take(4).ToArray()' 0);                      uint clsId = BitConverter.ToUInt32(data.Skip(4).ToArray()' 0);                      NdfClass cls = null;                        // possible deadrefs here                      if (clsId <= mgr.Classes.Count)                          cls = mgr.Classes[(int)clsId];                        return new NdfObjectReference(cls' instId' cls == null);                    case NdfType.Map:                      return new NdfMap(new MapValueHolder(null' mgr)' new MapValueHolder(null' mgr)' mgr);                    case NdfType.Guid:                      return new NdfGuid(new Guid(data));                    case NdfType.WideString:                      return new NdfWideString(Encoding.Unicode.GetString(data));                    case NdfType.TransTableReference:                      int id3 = BitConverter.ToInt32(data' 0);                      return new NdfTrans(mgr.Trans[id3]);                    case NdfType.LocalisationHash:                      return new NdfLocalisationHash(data);                    case NdfType.List:                      return new NdfCollection();                  case NdfType.MapList:                      return new NdfMapList();                    case NdfType.Blob:                      return new NdfBlob(data);                    case NdfType.ZipBlob:                      return new NdfZipBlob(data);                    case NdfType.EugInt2:                      return new NdfEugInt2(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4));                  case NdfType.EugFloat2:                      return new NdfEugFloat2(BitConverter.ToSingle(data' 0)' BitConverter.ToSingle(data' 4));                    case NdfType.TrippleInt:                      return new NdfTrippleInt(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4)' BitConverter.ToInt32(data' 8));                    case NdfType.Hash:                      return new NdfHash(data);                    case NdfType.Time64:                      return new NdfTime64(new DateTime(1970' 1' 1).AddSeconds(BitConverter.ToUInt32(data' 0)));                    case NdfType.Unset:                      return new NdfNull();                    default:                      return null;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetValue,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                      return new NdfBoolean(BitConverter.ToBoolean(data' 0));                  case NdfType.Int8:                      return new NdfInt8(data[0]);                  case NdfType.Int16:                      return new NdfInt16(BitConverter.ToInt16(data' 0));                  case NdfType.UInt16:                      return new NdfUInt16(BitConverter.ToUInt16(data' 0));                  /*case NdfType.Int24:                      var buf = new byte[4];                                            Array.Copy(data' buf' 3);                      return new NdfInt32(BitConverter.ToInt32(buf' 0));*/                  case NdfType.Int32:                      return new NdfInt32(BitConverter.ToInt32(data' 0));                  case NdfType.UInt32:                      return new NdfUInt32(BitConverter.ToUInt32(data' 0));                  case NdfType.Long:                      return new NdfLong(BitConverter.ToInt64(data' 0));                  case NdfType.Float32:                      return new NdfSingle(BitConverter.ToSingle(data' 0));                  case NdfType.Float64:                      return new NdfDouble(BitConverter.ToDouble(data' 0));                    case NdfType.TableStringFile:                      int id = BitConverter.ToInt32(data' 0);                      return new NdfFileNameString(mgr.Strings[id]);                  case NdfType.TableString:                      int id2 = BitConverter.ToInt32(data' 0);                      return new NdfString(mgr.Strings[id2]);                  case NdfType.Color32:                      return new NdfColor32(Color.FromArgb(data[3]' data[0]' data[1]' data[2]));                  case NdfType.Color128:                      return new NdfColor128(data);                  case NdfType.Vector:                      byte[] px = data.Take(4).ToArray();                      byte[] py = data.Skip(4).Take(4).ToArray();                      byte[] pz = data.Skip(8).ToArray();                      return new NdfVector(new Point3D(BitConverter.ToSingle(px' 0)'                                                       BitConverter.ToSingle(py' 0)'                                                       BitConverter.ToSingle(pz' 0)));                    case NdfType.ObjectReference:                      uint instId = BitConverter.ToUInt32(data.Take(4).ToArray()' 0);                      uint clsId = BitConverter.ToUInt32(data.Skip(4).ToArray()' 0);                      NdfClass cls = null;                        // possible deadrefs here                      if (clsId <= mgr.Classes.Count)                          cls = mgr.Classes[(int)clsId];                        return new NdfObjectReference(cls' instId' cls == null);                    case NdfType.Map:                      return new NdfMap(new MapValueHolder(null' mgr)' new MapValueHolder(null' mgr)' mgr);                    case NdfType.Guid:                      return new NdfGuid(new Guid(data));                    case NdfType.WideString:                      return new NdfWideString(Encoding.Unicode.GetString(data));                    case NdfType.TransTableReference:                      int id3 = BitConverter.ToInt32(data' 0);                      return new NdfTrans(mgr.Trans[id3]);                    case NdfType.LocalisationHash:                      return new NdfLocalisationHash(data);                    case NdfType.List:                      return new NdfCollection();                  case NdfType.MapList:                      return new NdfMapList();                    case NdfType.Blob:                      return new NdfBlob(data);                    case NdfType.ZipBlob:                      return new NdfZipBlob(data);                    case NdfType.EugInt2:                      return new NdfEugInt2(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4));                  case NdfType.EugFloat2:                      return new NdfEugFloat2(BitConverter.ToSingle(data' 0)' BitConverter.ToSingle(data' 4));                    case NdfType.TrippleInt:                      return new NdfTrippleInt(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4)' BitConverter.ToInt32(data' 8));                    case NdfType.Hash:                      return new NdfHash(data);                    case NdfType.Time64:                      return new NdfTime64(new DateTime(1970' 1' 1).AddSeconds(BitConverter.ToUInt32(data' 0)));                    case NdfType.Unset:                      return new NdfNull();                    default:                      return null;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetValue,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                      return new NdfBoolean(BitConverter.ToBoolean(data' 0));                  case NdfType.Int8:                      return new NdfInt8(data[0]);                  case NdfType.Int16:                      return new NdfInt16(BitConverter.ToInt16(data' 0));                  case NdfType.UInt16:                      return new NdfUInt16(BitConverter.ToUInt16(data' 0));                  /*case NdfType.Int24:                      var buf = new byte[4];                                            Array.Copy(data' buf' 3);                      return new NdfInt32(BitConverter.ToInt32(buf' 0));*/                  case NdfType.Int32:                      return new NdfInt32(BitConverter.ToInt32(data' 0));                  case NdfType.UInt32:                      return new NdfUInt32(BitConverter.ToUInt32(data' 0));                  case NdfType.Long:                      return new NdfLong(BitConverter.ToInt64(data' 0));                  case NdfType.Float32:                      return new NdfSingle(BitConverter.ToSingle(data' 0));                  case NdfType.Float64:                      return new NdfDouble(BitConverter.ToDouble(data' 0));                    case NdfType.TableStringFile:                      int id = BitConverter.ToInt32(data' 0);                      return new NdfFileNameString(mgr.Strings[id]);                  case NdfType.TableString:                      int id2 = BitConverter.ToInt32(data' 0);                      return new NdfString(mgr.Strings[id2]);                  case NdfType.Color32:                      return new NdfColor32(Color.FromArgb(data[3]' data[0]' data[1]' data[2]));                  case NdfType.Color128:                      return new NdfColor128(data);                  case NdfType.Vector:                      byte[] px = data.Take(4).ToArray();                      byte[] py = data.Skip(4).Take(4).ToArray();                      byte[] pz = data.Skip(8).ToArray();                      return new NdfVector(new Point3D(BitConverter.ToSingle(px' 0)'                                                       BitConverter.ToSingle(py' 0)'                                                       BitConverter.ToSingle(pz' 0)));                    case NdfType.ObjectReference:                      uint instId = BitConverter.ToUInt32(data.Take(4).ToArray()' 0);                      uint clsId = BitConverter.ToUInt32(data.Skip(4).ToArray()' 0);                      NdfClass cls = null;                        // possible deadrefs here                      if (clsId <= mgr.Classes.Count)                          cls = mgr.Classes[(int)clsId];                        return new NdfObjectReference(cls' instId' cls == null);                    case NdfType.Map:                      return new NdfMap(new MapValueHolder(null' mgr)' new MapValueHolder(null' mgr)' mgr);                    case NdfType.Guid:                      return new NdfGuid(new Guid(data));                    case NdfType.WideString:                      return new NdfWideString(Encoding.Unicode.GetString(data));                    case NdfType.TransTableReference:                      int id3 = BitConverter.ToInt32(data' 0);                      return new NdfTrans(mgr.Trans[id3]);                    case NdfType.LocalisationHash:                      return new NdfLocalisationHash(data);                    case NdfType.List:                      return new NdfCollection();                  case NdfType.MapList:                      return new NdfMapList();                    case NdfType.Blob:                      return new NdfBlob(data);                    case NdfType.ZipBlob:                      return new NdfZipBlob(data);                    case NdfType.EugInt2:                      return new NdfEugInt2(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4));                  case NdfType.EugFloat2:                      return new NdfEugFloat2(BitConverter.ToSingle(data' 0)' BitConverter.ToSingle(data' 4));                    case NdfType.TrippleInt:                      return new NdfTrippleInt(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4)' BitConverter.ToInt32(data' 8));                    case NdfType.Hash:                      return new NdfHash(data);                    case NdfType.Time64:                      return new NdfTime64(new DateTime(1970' 1' 1).AddSeconds(BitConverter.ToUInt32(data' 0)));                    case NdfType.Unset:                      return new NdfNull();                    default:                      return null;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetValue,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                      return new NdfBoolean(BitConverter.ToBoolean(data' 0));                  case NdfType.Int8:                      return new NdfInt8(data[0]);                  case NdfType.Int16:                      return new NdfInt16(BitConverter.ToInt16(data' 0));                  case NdfType.UInt16:                      return new NdfUInt16(BitConverter.ToUInt16(data' 0));                  /*case NdfType.Int24:                      var buf = new byte[4];                                            Array.Copy(data' buf' 3);                      return new NdfInt32(BitConverter.ToInt32(buf' 0));*/                  case NdfType.Int32:                      return new NdfInt32(BitConverter.ToInt32(data' 0));                  case NdfType.UInt32:                      return new NdfUInt32(BitConverter.ToUInt32(data' 0));                  case NdfType.Long:                      return new NdfLong(BitConverter.ToInt64(data' 0));                  case NdfType.Float32:                      return new NdfSingle(BitConverter.ToSingle(data' 0));                  case NdfType.Float64:                      return new NdfDouble(BitConverter.ToDouble(data' 0));                    case NdfType.TableStringFile:                      int id = BitConverter.ToInt32(data' 0);                      return new NdfFileNameString(mgr.Strings[id]);                  case NdfType.TableString:                      int id2 = BitConverter.ToInt32(data' 0);                      return new NdfString(mgr.Strings[id2]);                  case NdfType.Color32:                      return new NdfColor32(Color.FromArgb(data[3]' data[0]' data[1]' data[2]));                  case NdfType.Color128:                      return new NdfColor128(data);                  case NdfType.Vector:                      byte[] px = data.Take(4).ToArray();                      byte[] py = data.Skip(4).Take(4).ToArray();                      byte[] pz = data.Skip(8).ToArray();                      return new NdfVector(new Point3D(BitConverter.ToSingle(px' 0)'                                                       BitConverter.ToSingle(py' 0)'                                                       BitConverter.ToSingle(pz' 0)));                    case NdfType.ObjectReference:                      uint instId = BitConverter.ToUInt32(data.Take(4).ToArray()' 0);                      uint clsId = BitConverter.ToUInt32(data.Skip(4).ToArray()' 0);                      NdfClass cls = null;                        // possible deadrefs here                      if (clsId <= mgr.Classes.Count)                          cls = mgr.Classes[(int)clsId];                        return new NdfObjectReference(cls' instId' cls == null);                    case NdfType.Map:                      return new NdfMap(new MapValueHolder(null' mgr)' new MapValueHolder(null' mgr)' mgr);                    case NdfType.Guid:                      return new NdfGuid(new Guid(data));                    case NdfType.WideString:                      return new NdfWideString(Encoding.Unicode.GetString(data));                    case NdfType.TransTableReference:                      int id3 = BitConverter.ToInt32(data' 0);                      return new NdfTrans(mgr.Trans[id3]);                    case NdfType.LocalisationHash:                      return new NdfLocalisationHash(data);                    case NdfType.List:                      return new NdfCollection();                  case NdfType.MapList:                      return new NdfMapList();                    case NdfType.Blob:                      return new NdfBlob(data);                    case NdfType.ZipBlob:                      return new NdfZipBlob(data);                    case NdfType.EugInt2:                      return new NdfEugInt2(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4));                  case NdfType.EugFloat2:                      return new NdfEugFloat2(BitConverter.ToSingle(data' 0)' BitConverter.ToSingle(data' 4));                    case NdfType.TrippleInt:                      return new NdfTrippleInt(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4)' BitConverter.ToInt32(data' 8));                    case NdfType.Hash:                      return new NdfHash(data);                    case NdfType.Time64:                      return new NdfTime64(new DateTime(1970' 1' 1).AddSeconds(BitConverter.ToUInt32(data' 0)));                    case NdfType.Unset:                      return new NdfNull();                    default:                      return null;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetValue,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                      return new NdfBoolean(BitConverter.ToBoolean(data' 0));                  case NdfType.Int8:                      return new NdfInt8(data[0]);                  case NdfType.Int16:                      return new NdfInt16(BitConverter.ToInt16(data' 0));                  case NdfType.UInt16:                      return new NdfUInt16(BitConverter.ToUInt16(data' 0));                  /*case NdfType.Int24:                      var buf = new byte[4];                                            Array.Copy(data' buf' 3);                      return new NdfInt32(BitConverter.ToInt32(buf' 0));*/                  case NdfType.Int32:                      return new NdfInt32(BitConverter.ToInt32(data' 0));                  case NdfType.UInt32:                      return new NdfUInt32(BitConverter.ToUInt32(data' 0));                  case NdfType.Long:                      return new NdfLong(BitConverter.ToInt64(data' 0));                  case NdfType.Float32:                      return new NdfSingle(BitConverter.ToSingle(data' 0));                  case NdfType.Float64:                      return new NdfDouble(BitConverter.ToDouble(data' 0));                    case NdfType.TableStringFile:                      int id = BitConverter.ToInt32(data' 0);                      return new NdfFileNameString(mgr.Strings[id]);                  case NdfType.TableString:                      int id2 = BitConverter.ToInt32(data' 0);                      return new NdfString(mgr.Strings[id2]);                  case NdfType.Color32:                      return new NdfColor32(Color.FromArgb(data[3]' data[0]' data[1]' data[2]));                  case NdfType.Color128:                      return new NdfColor128(data);                  case NdfType.Vector:                      byte[] px = data.Take(4).ToArray();                      byte[] py = data.Skip(4).Take(4).ToArray();                      byte[] pz = data.Skip(8).ToArray();                      return new NdfVector(new Point3D(BitConverter.ToSingle(px' 0)'                                                       BitConverter.ToSingle(py' 0)'                                                       BitConverter.ToSingle(pz' 0)));                    case NdfType.ObjectReference:                      uint instId = BitConverter.ToUInt32(data.Take(4).ToArray()' 0);                      uint clsId = BitConverter.ToUInt32(data.Skip(4).ToArray()' 0);                      NdfClass cls = null;                        // possible deadrefs here                      if (clsId <= mgr.Classes.Count)                          cls = mgr.Classes[(int)clsId];                        return new NdfObjectReference(cls' instId' cls == null);                    case NdfType.Map:                      return new NdfMap(new MapValueHolder(null' mgr)' new MapValueHolder(null' mgr)' mgr);                    case NdfType.Guid:                      return new NdfGuid(new Guid(data));                    case NdfType.WideString:                      return new NdfWideString(Encoding.Unicode.GetString(data));                    case NdfType.TransTableReference:                      int id3 = BitConverter.ToInt32(data' 0);                      return new NdfTrans(mgr.Trans[id3]);                    case NdfType.LocalisationHash:                      return new NdfLocalisationHash(data);                    case NdfType.List:                      return new NdfCollection();                  case NdfType.MapList:                      return new NdfMapList();                    case NdfType.Blob:                      return new NdfBlob(data);                    case NdfType.ZipBlob:                      return new NdfZipBlob(data);                    case NdfType.EugInt2:                      return new NdfEugInt2(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4));                  case NdfType.EugFloat2:                      return new NdfEugFloat2(BitConverter.ToSingle(data' 0)' BitConverter.ToSingle(data' 4));                    case NdfType.TrippleInt:                      return new NdfTrippleInt(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4)' BitConverter.ToInt32(data' 8));                    case NdfType.Hash:                      return new NdfHash(data);                    case NdfType.Time64:                      return new NdfTime64(new DateTime(1970' 1' 1).AddSeconds(BitConverter.ToUInt32(data' 0)));                    case NdfType.Unset:                      return new NdfNull();                    default:                      return null;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetValue,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                      return new NdfBoolean(BitConverter.ToBoolean(data' 0));                  case NdfType.Int8:                      return new NdfInt8(data[0]);                  case NdfType.Int16:                      return new NdfInt16(BitConverter.ToInt16(data' 0));                  case NdfType.UInt16:                      return new NdfUInt16(BitConverter.ToUInt16(data' 0));                  /*case NdfType.Int24:                      var buf = new byte[4];                                            Array.Copy(data' buf' 3);                      return new NdfInt32(BitConverter.ToInt32(buf' 0));*/                  case NdfType.Int32:                      return new NdfInt32(BitConverter.ToInt32(data' 0));                  case NdfType.UInt32:                      return new NdfUInt32(BitConverter.ToUInt32(data' 0));                  case NdfType.Long:                      return new NdfLong(BitConverter.ToInt64(data' 0));                  case NdfType.Float32:                      return new NdfSingle(BitConverter.ToSingle(data' 0));                  case NdfType.Float64:                      return new NdfDouble(BitConverter.ToDouble(data' 0));                    case NdfType.TableStringFile:                      int id = BitConverter.ToInt32(data' 0);                      return new NdfFileNameString(mgr.Strings[id]);                  case NdfType.TableString:                      int id2 = BitConverter.ToInt32(data' 0);                      return new NdfString(mgr.Strings[id2]);                  case NdfType.Color32:                      return new NdfColor32(Color.FromArgb(data[3]' data[0]' data[1]' data[2]));                  case NdfType.Color128:                      return new NdfColor128(data);                  case NdfType.Vector:                      byte[] px = data.Take(4).ToArray();                      byte[] py = data.Skip(4).Take(4).ToArray();                      byte[] pz = data.Skip(8).ToArray();                      return new NdfVector(new Point3D(BitConverter.ToSingle(px' 0)'                                                       BitConverter.ToSingle(py' 0)'                                                       BitConverter.ToSingle(pz' 0)));                    case NdfType.ObjectReference:                      uint instId = BitConverter.ToUInt32(data.Take(4).ToArray()' 0);                      uint clsId = BitConverter.ToUInt32(data.Skip(4).ToArray()' 0);                      NdfClass cls = null;                        // possible deadrefs here                      if (clsId <= mgr.Classes.Count)                          cls = mgr.Classes[(int)clsId];                        return new NdfObjectReference(cls' instId' cls == null);                    case NdfType.Map:                      return new NdfMap(new MapValueHolder(null' mgr)' new MapValueHolder(null' mgr)' mgr);                    case NdfType.Guid:                      return new NdfGuid(new Guid(data));                    case NdfType.WideString:                      return new NdfWideString(Encoding.Unicode.GetString(data));                    case NdfType.TransTableReference:                      int id3 = BitConverter.ToInt32(data' 0);                      return new NdfTrans(mgr.Trans[id3]);                    case NdfType.LocalisationHash:                      return new NdfLocalisationHash(data);                    case NdfType.List:                      return new NdfCollection();                  case NdfType.MapList:                      return new NdfMapList();                    case NdfType.Blob:                      return new NdfBlob(data);                    case NdfType.ZipBlob:                      return new NdfZipBlob(data);                    case NdfType.EugInt2:                      return new NdfEugInt2(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4));                  case NdfType.EugFloat2:                      return new NdfEugFloat2(BitConverter.ToSingle(data' 0)' BitConverter.ToSingle(data' 4));                    case NdfType.TrippleInt:                      return new NdfTrippleInt(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4)' BitConverter.ToInt32(data' 8));                    case NdfType.Hash:                      return new NdfHash(data);                    case NdfType.Time64:                      return new NdfTime64(new DateTime(1970' 1' 1).AddSeconds(BitConverter.ToUInt32(data' 0)));                    case NdfType.Unset:                      return new NdfNull();                    default:                      return null;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetValue,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                      return new NdfBoolean(BitConverter.ToBoolean(data' 0));                  case NdfType.Int8:                      return new NdfInt8(data[0]);                  case NdfType.Int16:                      return new NdfInt16(BitConverter.ToInt16(data' 0));                  case NdfType.UInt16:                      return new NdfUInt16(BitConverter.ToUInt16(data' 0));                  /*case NdfType.Int24:                      var buf = new byte[4];                                            Array.Copy(data' buf' 3);                      return new NdfInt32(BitConverter.ToInt32(buf' 0));*/                  case NdfType.Int32:                      return new NdfInt32(BitConverter.ToInt32(data' 0));                  case NdfType.UInt32:                      return new NdfUInt32(BitConverter.ToUInt32(data' 0));                  case NdfType.Long:                      return new NdfLong(BitConverter.ToInt64(data' 0));                  case NdfType.Float32:                      return new NdfSingle(BitConverter.ToSingle(data' 0));                  case NdfType.Float64:                      return new NdfDouble(BitConverter.ToDouble(data' 0));                    case NdfType.TableStringFile:                      int id = BitConverter.ToInt32(data' 0);                      return new NdfFileNameString(mgr.Strings[id]);                  case NdfType.TableString:                      int id2 = BitConverter.ToInt32(data' 0);                      return new NdfString(mgr.Strings[id2]);                  case NdfType.Color32:                      return new NdfColor32(Color.FromArgb(data[3]' data[0]' data[1]' data[2]));                  case NdfType.Color128:                      return new NdfColor128(data);                  case NdfType.Vector:                      byte[] px = data.Take(4).ToArray();                      byte[] py = data.Skip(4).Take(4).ToArray();                      byte[] pz = data.Skip(8).ToArray();                      return new NdfVector(new Point3D(BitConverter.ToSingle(px' 0)'                                                       BitConverter.ToSingle(py' 0)'                                                       BitConverter.ToSingle(pz' 0)));                    case NdfType.ObjectReference:                      uint instId = BitConverter.ToUInt32(data.Take(4).ToArray()' 0);                      uint clsId = BitConverter.ToUInt32(data.Skip(4).ToArray()' 0);                      NdfClass cls = null;                        // possible deadrefs here                      if (clsId <= mgr.Classes.Count)                          cls = mgr.Classes[(int)clsId];                        return new NdfObjectReference(cls' instId' cls == null);                    case NdfType.Map:                      return new NdfMap(new MapValueHolder(null' mgr)' new MapValueHolder(null' mgr)' mgr);                    case NdfType.Guid:                      return new NdfGuid(new Guid(data));                    case NdfType.WideString:                      return new NdfWideString(Encoding.Unicode.GetString(data));                    case NdfType.TransTableReference:                      int id3 = BitConverter.ToInt32(data' 0);                      return new NdfTrans(mgr.Trans[id3]);                    case NdfType.LocalisationHash:                      return new NdfLocalisationHash(data);                    case NdfType.List:                      return new NdfCollection();                  case NdfType.MapList:                      return new NdfMapList();                    case NdfType.Blob:                      return new NdfBlob(data);                    case NdfType.ZipBlob:                      return new NdfZipBlob(data);                    case NdfType.EugInt2:                      return new NdfEugInt2(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4));                  case NdfType.EugFloat2:                      return new NdfEugFloat2(BitConverter.ToSingle(data' 0)' BitConverter.ToSingle(data' 4));                    case NdfType.TrippleInt:                      return new NdfTrippleInt(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4)' BitConverter.ToInt32(data' 8));                    case NdfType.Hash:                      return new NdfHash(data);                    case NdfType.Time64:                      return new NdfTime64(new DateTime(1970' 1' 1).AddSeconds(BitConverter.ToUInt32(data' 0)));                    case NdfType.Unset:                      return new NdfNull();                    default:                      return null;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetValue,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                      return new NdfBoolean(BitConverter.ToBoolean(data' 0));                  case NdfType.Int8:                      return new NdfInt8(data[0]);                  case NdfType.Int16:                      return new NdfInt16(BitConverter.ToInt16(data' 0));                  case NdfType.UInt16:                      return new NdfUInt16(BitConverter.ToUInt16(data' 0));                  /*case NdfType.Int24:                      var buf = new byte[4];                                            Array.Copy(data' buf' 3);                      return new NdfInt32(BitConverter.ToInt32(buf' 0));*/                  case NdfType.Int32:                      return new NdfInt32(BitConverter.ToInt32(data' 0));                  case NdfType.UInt32:                      return new NdfUInt32(BitConverter.ToUInt32(data' 0));                  case NdfType.Long:                      return new NdfLong(BitConverter.ToInt64(data' 0));                  case NdfType.Float32:                      return new NdfSingle(BitConverter.ToSingle(data' 0));                  case NdfType.Float64:                      return new NdfDouble(BitConverter.ToDouble(data' 0));                    case NdfType.TableStringFile:                      int id = BitConverter.ToInt32(data' 0);                      return new NdfFileNameString(mgr.Strings[id]);                  case NdfType.TableString:                      int id2 = BitConverter.ToInt32(data' 0);                      return new NdfString(mgr.Strings[id2]);                  case NdfType.Color32:                      return new NdfColor32(Color.FromArgb(data[3]' data[0]' data[1]' data[2]));                  case NdfType.Color128:                      return new NdfColor128(data);                  case NdfType.Vector:                      byte[] px = data.Take(4).ToArray();                      byte[] py = data.Skip(4).Take(4).ToArray();                      byte[] pz = data.Skip(8).ToArray();                      return new NdfVector(new Point3D(BitConverter.ToSingle(px' 0)'                                                       BitConverter.ToSingle(py' 0)'                                                       BitConverter.ToSingle(pz' 0)));                    case NdfType.ObjectReference:                      uint instId = BitConverter.ToUInt32(data.Take(4).ToArray()' 0);                      uint clsId = BitConverter.ToUInt32(data.Skip(4).ToArray()' 0);                      NdfClass cls = null;                        // possible deadrefs here                      if (clsId <= mgr.Classes.Count)                          cls = mgr.Classes[(int)clsId];                        return new NdfObjectReference(cls' instId' cls == null);                    case NdfType.Map:                      return new NdfMap(new MapValueHolder(null' mgr)' new MapValueHolder(null' mgr)' mgr);                    case NdfType.Guid:                      return new NdfGuid(new Guid(data));                    case NdfType.WideString:                      return new NdfWideString(Encoding.Unicode.GetString(data));                    case NdfType.TransTableReference:                      int id3 = BitConverter.ToInt32(data' 0);                      return new NdfTrans(mgr.Trans[id3]);                    case NdfType.LocalisationHash:                      return new NdfLocalisationHash(data);                    case NdfType.List:                      return new NdfCollection();                  case NdfType.MapList:                      return new NdfMapList();                    case NdfType.Blob:                      return new NdfBlob(data);                    case NdfType.ZipBlob:                      return new NdfZipBlob(data);                    case NdfType.EugInt2:                      return new NdfEugInt2(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4));                  case NdfType.EugFloat2:                      return new NdfEugFloat2(BitConverter.ToSingle(data' 0)' BitConverter.ToSingle(data' 4));                    case NdfType.TrippleInt:                      return new NdfTrippleInt(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4)' BitConverter.ToInt32(data' 8));                    case NdfType.Hash:                      return new NdfHash(data);                    case NdfType.Time64:                      return new NdfTime64(new DateTime(1970' 1' 1).AddSeconds(BitConverter.ToUInt32(data' 0)));                    case NdfType.Unset:                      return new NdfNull();                    default:                      return null;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetValue,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                      return new NdfBoolean(BitConverter.ToBoolean(data' 0));                  case NdfType.Int8:                      return new NdfInt8(data[0]);                  case NdfType.Int16:                      return new NdfInt16(BitConverter.ToInt16(data' 0));                  case NdfType.UInt16:                      return new NdfUInt16(BitConverter.ToUInt16(data' 0));                  /*case NdfType.Int24:                      var buf = new byte[4];                                            Array.Copy(data' buf' 3);                      return new NdfInt32(BitConverter.ToInt32(buf' 0));*/                  case NdfType.Int32:                      return new NdfInt32(BitConverter.ToInt32(data' 0));                  case NdfType.UInt32:                      return new NdfUInt32(BitConverter.ToUInt32(data' 0));                  case NdfType.Long:                      return new NdfLong(BitConverter.ToInt64(data' 0));                  case NdfType.Float32:                      return new NdfSingle(BitConverter.ToSingle(data' 0));                  case NdfType.Float64:                      return new NdfDouble(BitConverter.ToDouble(data' 0));                    case NdfType.TableStringFile:                      int id = BitConverter.ToInt32(data' 0);                      return new NdfFileNameString(mgr.Strings[id]);                  case NdfType.TableString:                      int id2 = BitConverter.ToInt32(data' 0);                      return new NdfString(mgr.Strings[id2]);                  case NdfType.Color32:                      return new NdfColor32(Color.FromArgb(data[3]' data[0]' data[1]' data[2]));                  case NdfType.Color128:                      return new NdfColor128(data);                  case NdfType.Vector:                      byte[] px = data.Take(4).ToArray();                      byte[] py = data.Skip(4).Take(4).ToArray();                      byte[] pz = data.Skip(8).ToArray();                      return new NdfVector(new Point3D(BitConverter.ToSingle(px' 0)'                                                       BitConverter.ToSingle(py' 0)'                                                       BitConverter.ToSingle(pz' 0)));                    case NdfType.ObjectReference:                      uint instId = BitConverter.ToUInt32(data.Take(4).ToArray()' 0);                      uint clsId = BitConverter.ToUInt32(data.Skip(4).ToArray()' 0);                      NdfClass cls = null;                        // possible deadrefs here                      if (clsId <= mgr.Classes.Count)                          cls = mgr.Classes[(int)clsId];                        return new NdfObjectReference(cls' instId' cls == null);                    case NdfType.Map:                      return new NdfMap(new MapValueHolder(null' mgr)' new MapValueHolder(null' mgr)' mgr);                    case NdfType.Guid:                      return new NdfGuid(new Guid(data));                    case NdfType.WideString:                      return new NdfWideString(Encoding.Unicode.GetString(data));                    case NdfType.TransTableReference:                      int id3 = BitConverter.ToInt32(data' 0);                      return new NdfTrans(mgr.Trans[id3]);                    case NdfType.LocalisationHash:                      return new NdfLocalisationHash(data);                    case NdfType.List:                      return new NdfCollection();                  case NdfType.MapList:                      return new NdfMapList();                    case NdfType.Blob:                      return new NdfBlob(data);                    case NdfType.ZipBlob:                      return new NdfZipBlob(data);                    case NdfType.EugInt2:                      return new NdfEugInt2(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4));                  case NdfType.EugFloat2:                      return new NdfEugFloat2(BitConverter.ToSingle(data' 0)' BitConverter.ToSingle(data' 4));                    case NdfType.TrippleInt:                      return new NdfTrippleInt(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4)' BitConverter.ToInt32(data' 8));                    case NdfType.Hash:                      return new NdfHash(data);                    case NdfType.Time64:                      return new NdfTime64(new DateTime(1970' 1' 1).AddSeconds(BitConverter.ToUInt32(data' 0)));                    case NdfType.Unset:                      return new NdfNull();                    default:                      return null;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetValue,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                      return new NdfBoolean(BitConverter.ToBoolean(data' 0));                  case NdfType.Int8:                      return new NdfInt8(data[0]);                  case NdfType.Int16:                      return new NdfInt16(BitConverter.ToInt16(data' 0));                  case NdfType.UInt16:                      return new NdfUInt16(BitConverter.ToUInt16(data' 0));                  /*case NdfType.Int24:                      var buf = new byte[4];                                            Array.Copy(data' buf' 3);                      return new NdfInt32(BitConverter.ToInt32(buf' 0));*/                  case NdfType.Int32:                      return new NdfInt32(BitConverter.ToInt32(data' 0));                  case NdfType.UInt32:                      return new NdfUInt32(BitConverter.ToUInt32(data' 0));                  case NdfType.Long:                      return new NdfLong(BitConverter.ToInt64(data' 0));                  case NdfType.Float32:                      return new NdfSingle(BitConverter.ToSingle(data' 0));                  case NdfType.Float64:                      return new NdfDouble(BitConverter.ToDouble(data' 0));                    case NdfType.TableStringFile:                      int id = BitConverter.ToInt32(data' 0);                      return new NdfFileNameString(mgr.Strings[id]);                  case NdfType.TableString:                      int id2 = BitConverter.ToInt32(data' 0);                      return new NdfString(mgr.Strings[id2]);                  case NdfType.Color32:                      return new NdfColor32(Color.FromArgb(data[3]' data[0]' data[1]' data[2]));                  case NdfType.Color128:                      return new NdfColor128(data);                  case NdfType.Vector:                      byte[] px = data.Take(4).ToArray();                      byte[] py = data.Skip(4).Take(4).ToArray();                      byte[] pz = data.Skip(8).ToArray();                      return new NdfVector(new Point3D(BitConverter.ToSingle(px' 0)'                                                       BitConverter.ToSingle(py' 0)'                                                       BitConverter.ToSingle(pz' 0)));                    case NdfType.ObjectReference:                      uint instId = BitConverter.ToUInt32(data.Take(4).ToArray()' 0);                      uint clsId = BitConverter.ToUInt32(data.Skip(4).ToArray()' 0);                      NdfClass cls = null;                        // possible deadrefs here                      if (clsId <= mgr.Classes.Count)                          cls = mgr.Classes[(int)clsId];                        return new NdfObjectReference(cls' instId' cls == null);                    case NdfType.Map:                      return new NdfMap(new MapValueHolder(null' mgr)' new MapValueHolder(null' mgr)' mgr);                    case NdfType.Guid:                      return new NdfGuid(new Guid(data));                    case NdfType.WideString:                      return new NdfWideString(Encoding.Unicode.GetString(data));                    case NdfType.TransTableReference:                      int id3 = BitConverter.ToInt32(data' 0);                      return new NdfTrans(mgr.Trans[id3]);                    case NdfType.LocalisationHash:                      return new NdfLocalisationHash(data);                    case NdfType.List:                      return new NdfCollection();                  case NdfType.MapList:                      return new NdfMapList();                    case NdfType.Blob:                      return new NdfBlob(data);                    case NdfType.ZipBlob:                      return new NdfZipBlob(data);                    case NdfType.EugInt2:                      return new NdfEugInt2(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4));                  case NdfType.EugFloat2:                      return new NdfEugFloat2(BitConverter.ToSingle(data' 0)' BitConverter.ToSingle(data' 4));                    case NdfType.TrippleInt:                      return new NdfTrippleInt(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4)' BitConverter.ToInt32(data' 8));                    case NdfType.Hash:                      return new NdfHash(data);                    case NdfType.Time64:                      return new NdfTime64(new DateTime(1970' 1' 1).AddSeconds(BitConverter.ToUInt32(data' 0)));                    case NdfType.Unset:                      return new NdfNull();                    default:                      return null;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,GetValue,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                      return new NdfBoolean(BitConverter.ToBoolean(data' 0));                  case NdfType.Int8:                      return new NdfInt8(data[0]);                  case NdfType.Int16:                      return new NdfInt16(BitConverter.ToInt16(data' 0));                  case NdfType.UInt16:                      return new NdfUInt16(BitConverter.ToUInt16(data' 0));                  /*case NdfType.Int24:                      var buf = new byte[4];                                            Array.Copy(data' buf' 3);                      return new NdfInt32(BitConverter.ToInt32(buf' 0));*/                  case NdfType.Int32:                      return new NdfInt32(BitConverter.ToInt32(data' 0));                  case NdfType.UInt32:                      return new NdfUInt32(BitConverter.ToUInt32(data' 0));                  case NdfType.Long:                      return new NdfLong(BitConverter.ToInt64(data' 0));                  case NdfType.Float32:                      return new NdfSingle(BitConverter.ToSingle(data' 0));                  case NdfType.Float64:                      return new NdfDouble(BitConverter.ToDouble(data' 0));                    case NdfType.TableStringFile:                      int id = BitConverter.ToInt32(data' 0);                      return new NdfFileNameString(mgr.Strings[id]);                  case NdfType.TableString:                      int id2 = BitConverter.ToInt32(data' 0);                      return new NdfString(mgr.Strings[id2]);                  case NdfType.Color32:                      return new NdfColor32(Color.FromArgb(data[3]' data[0]' data[1]' data[2]));                  case NdfType.Color128:                      return new NdfColor128(data);                  case NdfType.Vector:                      byte[] px = data.Take(4).ToArray();                      byte[] py = data.Skip(4).Take(4).ToArray();                      byte[] pz = data.Skip(8).ToArray();                      return new NdfVector(new Point3D(BitConverter.ToSingle(px' 0)'                                                       BitConverter.ToSingle(py' 0)'                                                       BitConverter.ToSingle(pz' 0)));                    case NdfType.ObjectReference:                      uint instId = BitConverter.ToUInt32(data.Take(4).ToArray()' 0);                      uint clsId = BitConverter.ToUInt32(data.Skip(4).ToArray()' 0);                      NdfClass cls = null;                        // possible deadrefs here                      if (clsId <= mgr.Classes.Count)                          cls = mgr.Classes[(int)clsId];                        return new NdfObjectReference(cls' instId' cls == null);                    case NdfType.Map:                      return new NdfMap(new MapValueHolder(null' mgr)' new MapValueHolder(null' mgr)' mgr);                    case NdfType.Guid:                      return new NdfGuid(new Guid(data));                    case NdfType.WideString:                      return new NdfWideString(Encoding.Unicode.GetString(data));                    case NdfType.TransTableReference:                      int id3 = BitConverter.ToInt32(data' 0);                      return new NdfTrans(mgr.Trans[id3]);                    case NdfType.LocalisationHash:                      return new NdfLocalisationHash(data);                    case NdfType.List:                      return new NdfCollection();                  case NdfType.MapList:                      return new NdfMapList();                    case NdfType.Blob:                      return new NdfBlob(data);                    case NdfType.ZipBlob:                      return new NdfZipBlob(data);                    case NdfType.EugInt2:                      return new NdfEugInt2(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4));                  case NdfType.EugFloat2:                      return new NdfEugFloat2(BitConverter.ToSingle(data' 0)' BitConverter.ToSingle(data' 4));                    case NdfType.TrippleInt:                      return new NdfTrippleInt(BitConverter.ToInt32(data' 0)' BitConverter.ToInt32(data' 4)' BitConverter.ToInt32(data' 8));                    case NdfType.Hash:                      return new NdfHash(data);                    case NdfType.Time64:                      return new NdfTime64(new DateTime(1970' 1' 1).AddSeconds(BitConverter.ToUInt32(data' 0)));                    case NdfType.Unset:                      return new NdfNull();                    default:                      return null;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,SizeofType,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                  case NdfType.Int8:                      return 1;                  case NdfType.Int16:                  case NdfType.UInt16:                      return 2;                  case NdfType.Int32:                  case NdfType.UInt32:                  case NdfType.Float32:                  case NdfType.TableStringFile:                  case NdfType.TableString:                  case NdfType.Color32:                  case NdfType.WideString:                      return 4;                  case NdfType.Float64:                  case NdfType.Long:                  case NdfType.LocalisationHash:                  case NdfType.ObjectReference:                  case NdfType.EugInt2:                  case NdfType.EugFloat2:                  case NdfType.Time64:                      return 8;                  case NdfType.TrippleInt:                  case NdfType.Vector:                      return 12;                  case NdfType.Color128:                  case NdfType.Guid:                  case NdfType.Hash:                      return 16;                    case NdfType.Map:                      return 0;                    case NdfType.List:                  case NdfType.MapList:                  case NdfType.TransTableReference:                      return 4;                    default:                      return 0;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,SizeofType,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                  case NdfType.Int8:                      return 1;                  case NdfType.Int16:                  case NdfType.UInt16:                      return 2;                  case NdfType.Int32:                  case NdfType.UInt32:                  case NdfType.Float32:                  case NdfType.TableStringFile:                  case NdfType.TableString:                  case NdfType.Color32:                  case NdfType.WideString:                      return 4;                  case NdfType.Float64:                  case NdfType.Long:                  case NdfType.LocalisationHash:                  case NdfType.ObjectReference:                  case NdfType.EugInt2:                  case NdfType.EugFloat2:                  case NdfType.Time64:                      return 8;                  case NdfType.TrippleInt:                  case NdfType.Vector:                      return 12;                  case NdfType.Color128:                  case NdfType.Guid:                  case NdfType.Hash:                      return 16;                    case NdfType.Map:                      return 0;                    case NdfType.List:                  case NdfType.MapList:                  case NdfType.TransTableReference:                      return 4;                    default:                      return 0;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,SizeofType,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                  case NdfType.Int8:                      return 1;                  case NdfType.Int16:                  case NdfType.UInt16:                      return 2;                  case NdfType.Int32:                  case NdfType.UInt32:                  case NdfType.Float32:                  case NdfType.TableStringFile:                  case NdfType.TableString:                  case NdfType.Color32:                  case NdfType.WideString:                      return 4;                  case NdfType.Float64:                  case NdfType.Long:                  case NdfType.LocalisationHash:                  case NdfType.ObjectReference:                  case NdfType.EugInt2:                  case NdfType.EugFloat2:                  case NdfType.Time64:                      return 8;                  case NdfType.TrippleInt:                  case NdfType.Vector:                      return 12;                  case NdfType.Color128:                  case NdfType.Guid:                  case NdfType.Hash:                      return 16;                    case NdfType.Map:                      return 0;                    case NdfType.List:                  case NdfType.MapList:                  case NdfType.TransTableReference:                      return 4;                    default:                      return 0;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,SizeofType,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                  case NdfType.Int8:                      return 1;                  case NdfType.Int16:                  case NdfType.UInt16:                      return 2;                  case NdfType.Int32:                  case NdfType.UInt32:                  case NdfType.Float32:                  case NdfType.TableStringFile:                  case NdfType.TableString:                  case NdfType.Color32:                  case NdfType.WideString:                      return 4;                  case NdfType.Float64:                  case NdfType.Long:                  case NdfType.LocalisationHash:                  case NdfType.ObjectReference:                  case NdfType.EugInt2:                  case NdfType.EugFloat2:                  case NdfType.Time64:                      return 8;                  case NdfType.TrippleInt:                  case NdfType.Vector:                      return 12;                  case NdfType.Color128:                  case NdfType.Guid:                  case NdfType.Hash:                      return 16;                    case NdfType.Map:                      return 0;                    case NdfType.List:                  case NdfType.MapList:                  case NdfType.TransTableReference:                      return 4;                    default:                      return 0;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,SizeofType,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                  case NdfType.Int8:                      return 1;                  case NdfType.Int16:                  case NdfType.UInt16:                      return 2;                  case NdfType.Int32:                  case NdfType.UInt32:                  case NdfType.Float32:                  case NdfType.TableStringFile:                  case NdfType.TableString:                  case NdfType.Color32:                  case NdfType.WideString:                      return 4;                  case NdfType.Float64:                  case NdfType.Long:                  case NdfType.LocalisationHash:                  case NdfType.ObjectReference:                  case NdfType.EugInt2:                  case NdfType.EugFloat2:                  case NdfType.Time64:                      return 8;                  case NdfType.TrippleInt:                  case NdfType.Vector:                      return 12;                  case NdfType.Color128:                  case NdfType.Guid:                  case NdfType.Hash:                      return 16;                    case NdfType.Map:                      return 0;                    case NdfType.List:                  case NdfType.MapList:                  case NdfType.TransTableReference:                      return 4;                    default:                      return 0;              }
Magic Number,moddingSuite.Model.Ndfbin.Types,NdfTypeManager,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Model\Ndfbin\Types\NdfTypeManager.cs,SizeofType,The following statement contains a magic number: switch (type)              {                  case NdfType.Boolean:                  case NdfType.Int8:                      return 1;                  case NdfType.Int16:                  case NdfType.UInt16:                      return 2;                  case NdfType.Int32:                  case NdfType.UInt32:                  case NdfType.Float32:                  case NdfType.TableStringFile:                  case NdfType.TableString:                  case NdfType.Color32:                  case NdfType.WideString:                      return 4;                  case NdfType.Float64:                  case NdfType.Long:                  case NdfType.LocalisationHash:                  case NdfType.ObjectReference:                  case NdfType.EugInt2:                  case NdfType.EugFloat2:                  case NdfType.Time64:                      return 8;                  case NdfType.TrippleInt:                  case NdfType.Vector:                      return 12;                  case NdfType.Color128:                  case NdfType.Guid:                  case NdfType.Hash:                      return 16;                    case NdfType.Map:                      return 0;                    case NdfType.List:                  case NdfType.MapList:                  case NdfType.TransTableReference:                      return 4;                    default:                      return 0;              }
Magic Number,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,getFromOutline,The following statement contains a magic number: bt.VertexCount = 2 * outline.Count;
Magic Number,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,getFromOutline,The following statement contains a magic number: bv.StartVertex = 2*outline.Count;
Magic Number,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,isInside,The following statement contains a magic number: return crossings % 2 == 1;
Magic Number,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,getInnerRing,The following statement contains a magic number: var localAngle = (getAngle(outline.ElementAt(im)' outline.ElementAt(i)' outline.ElementAt(ip)) + Math.PI) / 2;
Magic Number,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,getInnerRing,The following statement contains a magic number: float offset = 5 * scaleFactor / (float)Math.Abs(Math.Sin(localAngle));
Magic Number,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,getBorderTriangles,The following statement contains a magic number: var upper = 2*count;
Magic Number,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,getBorderTriangles,The following statement contains a magic number: var forwardUpper = 2 * count + 1;
Magic Number,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,getBorderTriangles,The following statement contains a magic number: var triangle3 = new MeshTriangularFace(2*count-1' lower' 3*count-1);
Magic Number,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,getBorderTriangles,The following statement contains a magic number: var triangle3 = new MeshTriangularFace(2*count-1' lower' 3*count-1);
Magic Number,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,getBorderTriangles,The following statement contains a magic number: var triangle4 = new MeshTriangularFace(3 * count - 1' lower' upper);
Magic Number,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,getAngle,The following statement contains a magic number: deltaAngle+=2*Math.PI;
Magic Number,moddingSuite.Geometry,Geometry,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Geometry.cs,getAngle,The following statement contains a magic number: deltaAngle-=2*Math.PI;
Magic Number,moddingSuite.Util,Utils,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Utils.cs,Int32ToBigEndianHexByteString,The following statement contains a magic number: return String.Format(format' bytes[0]' bytes[1]' bytes[2]' bytes[3]);
Magic Number,moddingSuite.Util,Utils,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Utils.cs,Int32ToBigEndianHexByteString,The following statement contains a magic number: return String.Format(format' bytes[0]' bytes[1]' bytes[2]' bytes[3]);
Magic Number,moddingSuite.Util,Utils,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Utils.cs,StringToByteArrayFastest,The following statement contains a magic number: hex.Length % 2 == 1
Magic Number,moddingSuite.Util,Utils,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Utils.cs,StringToByteArrayFastest,The following statement contains a magic number: arr[i] = (byte)((GetHexVal(hex[i << 1]) << 4) + (GetHexVal(hex[(i << 1) + 1])));
Magic Number,moddingSuite.Util,Utils,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Utils.cs,GetHexVal,The following statement contains a magic number: return val - (val < 58 ? 48 : (val < 97 ? 55 : 87));
Magic Number,moddingSuite.Util,Utils,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Utils.cs,GetHexVal,The following statement contains a magic number: return val - (val < 58 ? 48 : (val < 97 ? 55 : 87));
Magic Number,moddingSuite.Util,Utils,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Utils.cs,GetHexVal,The following statement contains a magic number: return val - (val < 58 ? 48 : (val < 97 ? 55 : 87));
Magic Number,moddingSuite.Util,Utils,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Utils.cs,GetHexVal,The following statement contains a magic number: return val - (val < 58 ? 48 : (val < 97 ? 55 : 87));
Magic Number,moddingSuite.Util,Utils,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Utils.cs,GetHexVal,The following statement contains a magic number: return val - (val < 58 ? 48 : (val < 97 ? 55 : 87));
Magic Number,moddingSuite.Util,Utils,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Utils.cs,CreateLocalisationHash,The following statement contains a magic number: hash = (hash << 6) | value;
Magic Number,moddingSuite.Util,Utils,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\Util\Utils.cs,RoundToNextDivBy4,The following statement contains a magic number: number % 4 != 0
Magic Number,moddingSuite.ViewModel.Edata,EdataFileViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Edata\EdataFileViewModel.cs,FilterPath,The following statement contains a magic number: file == null || FilterExpression == string.Empty || FilterExpression.Length < 3
Magic Number,moddingSuite.ViewModel.Edata,EdataManagerViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Edata\EdataManagerViewModel.cs,HandleNewFile,The following statement contains a magic number: var headerBuffer = new byte[12];
Magic Number,moddingSuite.ViewModel.Ndf,ArmourDamageViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Ndf\ArmourDamageViewModel.cs,readTGameplayArmeArmureContainer,The following statement contains a magic number: i < 42
Magic Number,moddingSuite.ViewModel.Ndf,ArmourDamageViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Ndf\ArmourDamageViewModel.cs,readTGameplayArmeArmureContainer,The following statement contains a magic number: i < 70
Magic Number,moddingSuite.ViewModel.Ndf,ArmourDamageViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Ndf\ArmourDamageViewModel.cs,readTGameplayDamageResistanceContainer,The following statement contains a magic number: var values = obj.PropertyValues[2].Value as NdfCollection;
Magic Number,moddingSuite.ViewModel.Mesh,MeshEditorViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Mesh\MeshEditorViewModel.cs,FilterMultiMaterialMeshes,The following statement contains a magic number: file == null || MultiMaterialMeshesFilterExpression == string.Empty || MultiMaterialMeshesFilterExpression.Length < 3
Magic Number,moddingSuite.ViewModel.Trad,TradFileViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Trad\TradFileViewModel.cs,FilterEntries,The following statement contains a magic number: FilterExpression.Length < 2
Magic Number,moddingSuite.View.Common,AboutView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Common\AboutView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 52 "..\..\..\..\View\Common\AboutView.xaml"              ((System.Windows.Controls.Image)(target)).MouseUp += new System.Windows.Input.MouseButtonEventHandler(this.ImageMouseUp1);                            #line default              #line hidden              return;              case 2:                            #line 66 "..\..\..\..\View\Common\AboutView.xaml"              ((System.Windows.Controls.Image)(target)).MouseUp += new System.Windows.Input.MouseButtonEventHandler(this.UIElement_OnMouseUp);                            #line default              #line hidden              return;              case 3:                            #line 92 "..\..\..\..\View\Common\AboutView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonClick1);                            #line default              #line hidden              return;              }
Magic Number,moddingSuite.View.Common,AboutView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Common\AboutView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 52 "..\..\..\..\View\Common\AboutView.xaml"              ((System.Windows.Controls.Image)(target)).MouseUp += new System.Windows.Input.MouseButtonEventHandler(this.ImageMouseUp1);                            #line default              #line hidden              return;              case 2:                            #line 66 "..\..\..\..\View\Common\AboutView.xaml"              ((System.Windows.Controls.Image)(target)).MouseUp += new System.Windows.Input.MouseButtonEventHandler(this.UIElement_OnMouseUp);                            #line default              #line hidden              return;              case 3:                            #line 92 "..\..\..\..\View\Common\AboutView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonClick1);                            #line default              #line hidden              return;              }
Magic Number,moddingSuite.View.Edata,EdataManagerView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Edata\EdataManagerView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.wheel = ((moddingSuite.View.SpinningWheel)(target));              return;              case 2:              this.OutputPushPin = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,moddingSuite.View.Extension,ByteToKiloByteConverter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Extension\ByteToKiloByteConverter.cs,Convert,The following statement contains a magic number: val < 1000
Magic Number,moddingSuite.View.Extension,Color32ValueConverter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Extension\Color32ValueConverter.cs,ConvertBack,The following statement contains a magic number: return Color.FromArgb(colArr[3]' colArr[0]' colArr[1]' colArr[2]);
Magic Number,moddingSuite.View.Extension,Color32ValueConverter,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Extension\Color32ValueConverter.cs,ConvertBack,The following statement contains a magic number: return Color.FromArgb(colArr[3]' colArr[0]' colArr[1]' colArr[2]);
Magic Number,moddingSuite.View.Ndfbin,NdfbinView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\NdfbinView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.wheel = ((moddingSuite.View.SpinningWheel)(target));              return;              case 2:              this.ChangesButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 3:              this.classGrid = ((System.Windows.Controls.DataGrid)(target));              return;              case 4:              this.instanceGrid = ((System.Windows.Controls.DataGrid)(target));              return;              case 5:              this.filterButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,moddingSuite.View.Ndfbin,NdfbinView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\NdfbinView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.wheel = ((moddingSuite.View.SpinningWheel)(target));              return;              case 2:              this.ChangesButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 3:              this.classGrid = ((System.Windows.Controls.DataGrid)(target));              return;              case 4:              this.instanceGrid = ((System.Windows.Controls.DataGrid)(target));              return;              case 5:              this.filterButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,moddingSuite.View.Ndfbin,NdfbinView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\NdfbinView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.wheel = ((moddingSuite.View.SpinningWheel)(target));              return;              case 2:              this.ChangesButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 3:              this.classGrid = ((System.Windows.Controls.DataGrid)(target));              return;              case 4:              this.instanceGrid = ((System.Windows.Controls.DataGrid)(target));              return;              case 5:              this.filterButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,moddingSuite.View.Ndfbin,NdfbinView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\NdfbinView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.wheel = ((moddingSuite.View.SpinningWheel)(target));              return;              case 2:              this.ChangesButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 3:              this.classGrid = ((System.Windows.Controls.DataGrid)(target));              return;              case 4:              this.instanceGrid = ((System.Windows.Controls.DataGrid)(target));              return;              case 5:              this.filterButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,moddingSuite.View,SettingsView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SettingsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 62 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WorkSpaceBrowserButtonClick);                            #line default              #line hidden              return;              case 2:              this.WorkSpaceTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 97 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GameSpaceButtonClick);                            #line default              #line hidden              return;              case 4:              this.GameSpaceTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 5:                            #line 130 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 6:                            #line 137 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CanceButtonClick);                            #line default              #line hidden              return;              }
Magic Number,moddingSuite.View,SettingsView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SettingsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 62 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WorkSpaceBrowserButtonClick);                            #line default              #line hidden              return;              case 2:              this.WorkSpaceTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 97 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GameSpaceButtonClick);                            #line default              #line hidden              return;              case 4:              this.GameSpaceTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 5:                            #line 130 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 6:                            #line 137 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CanceButtonClick);                            #line default              #line hidden              return;              }
Magic Number,moddingSuite.View,SettingsView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SettingsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 62 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WorkSpaceBrowserButtonClick);                            #line default              #line hidden              return;              case 2:              this.WorkSpaceTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 97 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GameSpaceButtonClick);                            #line default              #line hidden              return;              case 4:              this.GameSpaceTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 5:                            #line 130 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 6:                            #line 137 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CanceButtonClick);                            #line default              #line hidden              return;              }
Magic Number,moddingSuite.View,SettingsView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SettingsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 62 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WorkSpaceBrowserButtonClick);                            #line default              #line hidden              return;              case 2:              this.WorkSpaceTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 97 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GameSpaceButtonClick);                            #line default              #line hidden              return;              case 4:              this.GameSpaceTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 5:                            #line 130 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 6:                            #line 137 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CanceButtonClick);                            #line default              #line hidden              return;              }
Magic Number,moddingSuite.View,SettingsView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SettingsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 62 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WorkSpaceBrowserButtonClick);                            #line default              #line hidden              return;              case 2:              this.WorkSpaceTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 97 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GameSpaceButtonClick);                            #line default              #line hidden              return;              case 4:              this.GameSpaceTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 5:                            #line 130 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 6:                            #line 137 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CanceButtonClick);                            #line default              #line hidden              return;              }
Magic Number,moddingSuite.View,SpinningWheel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SpinningWheel\SpinningWheel.cs,OnDotRadiusChanged,The following statement contains a magic number: UpdateEllipses(wheel.container.Children' (c' ellipse) =>                 {                    ellipse.Width = newRadius * 2;                    ellipse.Height = newRadius * 2;                      wheel.SetEllipsePosition(ellipse' c);                 });
Magic Number,moddingSuite.View,SpinningWheel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SpinningWheel\SpinningWheel.cs,OnDotRadiusChanged,The following statement contains a magic number: UpdateEllipses(wheel.container.Children' (c' ellipse) =>                 {                    ellipse.Width = newRadius * 2;                    ellipse.Height = newRadius * 2;                      wheel.SetEllipsePosition(ellipse' c);                 });
Magic Number,moddingSuite.View,SpinningWheel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SpinningWheel\SpinningWheel.cs,CreateEllipse,The following statement contains a magic number: ellipse.Width = this.DotRadius * 2;
Magic Number,moddingSuite.View,SpinningWheel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SpinningWheel\SpinningWheel.cs,CreateEllipse,The following statement contains a magic number: ellipse.Height = this.DotRadius * 2;
Magic Number,moddingSuite.View,SpinningWheel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SpinningWheel\SpinningWheel.cs,SetEllipsePosition,The following statement contains a magic number: var maxCount = this.SymmetricalArrange ? this.DotCount : (2 * this.Radius * Math.PI) / (2 * this.DotRadius + 2);
Magic Number,moddingSuite.View,SpinningWheel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SpinningWheel\SpinningWheel.cs,SetEllipsePosition,The following statement contains a magic number: var maxCount = this.SymmetricalArrange ? this.DotCount : (2 * this.Radius * Math.PI) / (2 * this.DotRadius + 2);
Magic Number,moddingSuite.View,SpinningWheel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SpinningWheel\SpinningWheel.cs,SetEllipsePosition,The following statement contains a magic number: var maxCount = this.SymmetricalArrange ? this.DotCount : (2 * this.Radius * Math.PI) / (2 * this.DotRadius + 2);
Magic Number,moddingSuite.View,SpinningWheel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SpinningWheel\SpinningWheel.cs,SetEllipsePosition,The following statement contains a magic number: var position = this.CalculatePosition(ellipseCounter * 2 * Math.PI / maxCount);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,Editor,The following statement contains a magic number: var spawns = contextMenuStrip1.Items[2] as ToolStripMenuItem;
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,Editor,The following statement contains a magic number: spawns.DropDown.Items[2].Click += ze.AddSeaSpawn;
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,Editor,The following statement contains a magic number: var positions = contextMenuStrip1.Items[3] as ToolStripMenuItem;
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,buildImage,The following statement contains a magic number: image = new Bitmap(500'500);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,buildImage,The following statement contains a magic number: image = new Bitmap(500'500);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size(500' 486);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size(500' 486);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(835' 488);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(835' 488);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.SplitterDistance = 502;
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.TabIndex = 7;
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer2.Size = new System.Drawing.Size(329' 488);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer2.Size = new System.Drawing.Size(329' 488);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer2.SplitterDistance = 204;
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(0' 179);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(327' 23);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(327' 23);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Location = new System.Drawing.Point(3' 0);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Size = new System.Drawing.Size(325' 134);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Size = new System.Drawing.Size(325' 134);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(327' 278);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(327' 278);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.contextMenuStrip1.Size = new System.Drawing.Size(161' 95);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.contextMenuStrip1.Size = new System.Drawing.Size(161' 95);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.Label.Size = new System.Drawing.Size(100' 23);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.Label.Size = new System.Drawing.Size(100' 23);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.Zone.Size = new System.Drawing.Size(160' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.Zone.Size = new System.Drawing.Size(160' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.Spawn.Size = new System.Drawing.Size(160' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.Spawn.Size = new System.Drawing.Size(160' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.Land.Size = new System.Drawing.Size(100' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.Land.Size = new System.Drawing.Size(100' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.Air.Size = new System.Drawing.Size(100' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.Air.Size = new System.Drawing.Size(100' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.Sea.Size = new System.Drawing.Size(100' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.Sea.Size = new System.Drawing.Size(100' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.StartPosition.Size = new System.Drawing.Size(160' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.StartPosition.Size = new System.Drawing.Size(160' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.CV.Size = new System.Drawing.Size(96' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.CV.Size = new System.Drawing.Size(96' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.FOB.Size = new System.Drawing.Size(96' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.FOB.Size = new System.Drawing.Size(96' 22);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(835' 488);
Magic Number,moddingSuite.ZoneEditor,Editor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Editor.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(835' 488);
Magic Number,moddingSuite.ZoneEditor.Markers,CreaterMarker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\CreaterMarker.cs,CreaterMarker,The following statement contains a magic number: this.Size = new System.Drawing.Size(5' 5);
Magic Number,moddingSuite.ZoneEditor.Markers,CreaterMarker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\CreaterMarker.cs,CreaterMarker,The following statement contains a magic number: this.Size = new System.Drawing.Size(5' 5);
Magic Number,moddingSuite.ZoneEditor.Markers,CreaterMarker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\CreaterMarker.cs,paint,The following statement contains a magic number: e.Graphics.FillRectangle(Brushes.Red' new Rectangle(0' 0' 5' 5));
Magic Number,moddingSuite.ZoneEditor.Markers,CreaterMarker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\CreaterMarker.cs,paint,The following statement contains a magic number: e.Graphics.FillRectangle(Brushes.Red' new Rectangle(0' 0' 5' 5));
Magic Number,moddingSuite.ZoneEditor.Markers,Marker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\Marker.cs,Marker,The following statement contains a magic number: this.Location = new System.Drawing.Point(30' 30);
Magic Number,moddingSuite.ZoneEditor.Markers,Marker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\Marker.cs,Marker,The following statement contains a magic number: this.Location = new System.Drawing.Point(30' 30);
Magic Number,moddingSuite.ZoneEditor.Markers,Marker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\Marker.cs,getPosition,The following statement contains a magic number: loc.Offset(Size.Width / 2 + 1' Size.Height / 2 + 1);
Magic Number,moddingSuite.ZoneEditor.Markers,Marker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\Marker.cs,getPosition,The following statement contains a magic number: loc.Offset(Size.Width / 2 + 1' Size.Height / 2 + 1);
Magic Number,moddingSuite.ZoneEditor.Markers,Marker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\Marker.cs,UpdateMarker,The following statement contains a magic number: loc.Offset(-Size.Width / 2' -Size.Height / 2);
Magic Number,moddingSuite.ZoneEditor.Markers,Marker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\Marker.cs,UpdateMarker,The following statement contains a magic number: loc.Offset(-Size.Width / 2' -Size.Height / 2);
Magic Number,moddingSuite.ZoneEditor.Markers,VertexMarker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\VertexMarker.cs,VertexMarker,The following statement contains a magic number: this.Location = new System.Drawing.Point(30' 30);
Magic Number,moddingSuite.ZoneEditor.Markers,VertexMarker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\VertexMarker.cs,VertexMarker,The following statement contains a magic number: this.Location = new System.Drawing.Point(30' 30);
Magic Number,moddingSuite.ZoneEditor.Markers,VertexMarker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\VertexMarker.cs,VertexMarker,The following statement contains a magic number: this.Size = new System.Drawing.Size(10' 10);
Magic Number,moddingSuite.ZoneEditor.Markers,VertexMarker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\VertexMarker.cs,VertexMarker,The following statement contains a magic number: this.Size = new System.Drawing.Size(10' 10);
Magic Number,moddingSuite.ZoneEditor.Markers,VertexMarker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\VertexMarker.cs,paint,The following statement contains a magic number: e.Graphics.FillRectangle(Colour' new Rectangle(0' 0' 10' 10));
Magic Number,moddingSuite.ZoneEditor.Markers,VertexMarker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\VertexMarker.cs,paint,The following statement contains a magic number: e.Graphics.FillRectangle(Colour' new Rectangle(0' 0' 10' 10));
Magic Number,moddingSuite.ZoneEditor.Markers,VertexMarker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\VertexMarker.cs,OnDrag,The following statement contains a magic number: p.Offset(-Size.Width / 2 - 1' -Size.Height / 2 - 1);
Magic Number,moddingSuite.ZoneEditor.Markers,VertexMarker,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Markers\VertexMarker.cs,OnDrag,The following statement contains a magic number: p.Offset(-Size.Width / 2 - 1' -Size.Height / 2 - 1);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Icon,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Icon.cs,paint,The following statement contains a magic number: var size=20;
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Icon,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Icon.cs,paint,The following statement contains a magic number: e.Graphics.DrawImage(image' new Rectangle(-size/2'-size/2'size'size));
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Icon,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Icon.cs,paint,The following statement contains a magic number: e.Graphics.DrawImage(image' new Rectangle(-size/2'-size/2'size'size));
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Spawn,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Spawn.cs,paint,The following statement contains a magic number: Pen p = new Pen(Brushes.White' 10);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Spawn,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Spawn.cs,paint,The following statement contains a magic number: var width = 5;
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Spawn,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Spawn.cs,paint,The following statement contains a magic number: switch (type){                  case SpawnType.Land:                      width = 10;                                            break;                  case SpawnType.Air:                      b=Brushes.Blue;                                            break;                  case SpawnType.Sea:                                            break;              }
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Spawn,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Spawn.cs,paint,The following statement contains a magic number: rot += (float)Math.PI / 2;
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Spawn,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Spawn.cs,paint,The following statement contains a magic number: rot += (float)Math.PI / 2;
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Spawn,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Spawn.cs,paint,The following statement contains a magic number: ahBase.Offset((int)(500 * width * Math.Cos(rot) / Geometry.Geometry.scaleFactor)' (int)(500 * width * Math.Sin(rot) / Geometry.Geometry.scaleFactor));
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Spawn,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Spawn.cs,paint,The following statement contains a magic number: ahBase.Offset((int)(500 * width * Math.Cos(rot) / Geometry.Geometry.scaleFactor)' (int)(500 * width * Math.Sin(rot) / Geometry.Geometry.scaleFactor));
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Zone,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Zone.cs,paint,The following statement contains a magic number: Font font = new Font(System.Drawing.FontFamily.GenericSansSerif' 16);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Zone,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Zone.cs,paint,The following statement contains a magic number: namePos.Offset(-(int)(10* Name.Length) / 2' -font.Height);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Zone,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Zone.cs,paint,The following statement contains a magic number: namePos.Offset(-(int)(10* Name.Length) / 2' -font.Height);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Zone,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Zone.cs,paint,The following statement contains a magic number: valPos.Offset(-(int)(10 * valString.Length) / 2' 0);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems,Zone,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Zone.cs,paint,The following statement contains a magic number: valPos.Offset(-(int)(10 * valString.Length) / 2' 0);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(378' 206);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(378' 206);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(48' 0);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(135' 21);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(135' 21);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(3' 0);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.label1.Padding = new System.Windows.Forms.Padding(4);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(39' 21);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(39' 21);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(4' 32);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(4' 32);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(38' 13);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(38' 13);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 2;
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(48' 25);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(48' 25);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(135' 20);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(135' 20);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.TabIndex = 3;
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(378' 206);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,IconProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\IconProperty.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(378' 206);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point(0' 3);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(257' 38);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(257' 38);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(84' 3);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(84' 3);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(135' 21);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(135' 21);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(3' 0);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.label1.Padding = new System.Windows.Forms.Padding(4);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(75' 21);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(75' 21);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(257' 173);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,SpawnProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\SpawnProperty.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(257' 173);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(340' 26);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(340' 26);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(107' 0);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(95' 21);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(95' 21);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.label1.Padding = new System.Windows.Forms.Padding(4);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(107' 21);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(107' 21);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.panel2.Location = new System.Drawing.Point(0' 32);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.panel2.Size = new System.Drawing.Size(345' 28);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.panel2.Size = new System.Drawing.Size(345' 28);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(107' 3);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(107' 3);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(95' 20);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(95' 20);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.label2.Padding = new System.Windows.Forms.Padding(3);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(67' 19);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(67' 19);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(340' 221);
Magic Number,moddingSuite.ZoneEditor.ScenarioItems.PropertyPanels,ZoneProperty,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\PropertyPanels\ZoneProperty.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(340' 221);
Magic Number,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,Outline,The following statement contains a magic number: var sideLength = 50;
Magic Number,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,Outline,The following statement contains a magic number: center.Offset(-sideLength / 2' -sideLength/2);
Magic Number,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,Outline,The following statement contains a magic number: center.Offset(-sideLength / 2' -sideLength/2);
Magic Number,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,paint,The following statement contains a magic number: Point p = new Point((p1.X + p2.X) / 2' (p1.Y + p2.Y) / 2);
Magic Number,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,paint,The following statement contains a magic number: Point p = new Point((p1.X + p2.X) / 2' (p1.Y + p2.Y) / 2);
Magic Number,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,paint,The following statement contains a magic number: switch (possession)              {                  case Possession.Redfor:                      c = Color.FromArgb(80' 255' 0' 0);                      break;                  case Possession.Bluefor:                      c = Color.FromArgb(80' 0' 0' 255);                      break;                  case Possession.Neutral:                      c = Color.FromArgb(80' 255' 255' 255);                      break;                                    }
Magic Number,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,paint,The following statement contains a magic number: switch (possession)              {                  case Possession.Redfor:                      c = Color.FromArgb(80' 255' 0' 0);                      break;                  case Possession.Bluefor:                      c = Color.FromArgb(80' 0' 0' 255);                      break;                  case Possession.Neutral:                      c = Color.FromArgb(80' 255' 255' 255);                      break;                                    }
Magic Number,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,paint,The following statement contains a magic number: switch (possession)              {                  case Possession.Redfor:                      c = Color.FromArgb(80' 255' 0' 0);                      break;                  case Possession.Bluefor:                      c = Color.FromArgb(80' 0' 0' 255);                      break;                  case Possession.Neutral:                      c = Color.FromArgb(80' 255' 255' 255);                      break;                                    }
Magic Number,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,paint,The following statement contains a magic number: switch (possession)              {                  case Possession.Redfor:                      c = Color.FromArgb(80' 255' 0' 0);                      break;                  case Possession.Bluefor:                      c = Color.FromArgb(80' 0' 0' 255);                      break;                  case Possession.Neutral:                      c = Color.FromArgb(80' 255' 255' 255);                      break;                                    }
Magic Number,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,paint,The following statement contains a magic number: switch (possession)              {                  case Possession.Redfor:                      c = Color.FromArgb(80' 255' 0' 0);                      break;                  case Possession.Bluefor:                      c = Color.FromArgb(80' 0' 0' 255);                      break;                  case Possession.Neutral:                      c = Color.FromArgb(80' 255' 255' 255);                      break;                                    }
Magic Number,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,paint,The following statement contains a magic number: switch (possession)              {                  case Possession.Redfor:                      c = Color.FromArgb(80' 255' 0' 0);                      break;                  case Possession.Bluefor:                      c = Color.FromArgb(80' 0' 0' 255);                      break;                  case Possession.Neutral:                      c = Color.FromArgb(80' 255' 255' 255);                      break;                                    }
Magic Number,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,paint,The following statement contains a magic number: switch (possession)              {                  case Possession.Redfor:                      c = Color.FromArgb(80' 255' 0' 0);                      break;                  case Possession.Bluefor:                      c = Color.FromArgb(80' 0' 0' 255);                      break;                  case Possession.Neutral:                      c = Color.FromArgb(80' 255' 255' 255);                      break;                                    }
Magic Number,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,paint,The following statement contains a magic number: switch (possession)              {                  case Possession.Redfor:                      c = Color.FromArgb(80' 255' 0' 0);                      break;                  case Possession.Bluefor:                      c = Color.FromArgb(80' 0' 0' 255);                      break;                  case Possession.Neutral:                      c = Color.FromArgb(80' 255' 255' 255);                      break;                                    }
Magic Number,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,deleteMarker,The following statement contains a magic number: e.Button != MouseButtons.Right || markers.Count <= 3
Magic Number,ZoneEditor,PanAndZoom,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\PanAndZoom.cs,OnMouseWheel,The following statement contains a magic number: zoom *= (float)Math.Pow(1.001' e.Delta);
Magic Number,moddingSuite.BL.Compressing,Compressor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Compressing\Compressing.cs,Decomp,The following statement contains a magic number: byte[] buffer = input.Length > 4096 ? new byte[4096] : new byte[input.Length];
Magic Number,moddingSuite.BL.Compressing,Compressor,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\Compressing\Compressing.cs,Decomp,The following statement contains a magic number: byte[] buffer = input.Length > 4096 ? new byte[4096] : new byte[input.Length];
Missing Default,moddingSuite.BL.DDS,DDS,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\DDS\DDS.cs,PixelFormatFromDXGIFormat,The following switch statement is missing a default case: switch (format)              {                  case PixelFormats.R8G8B8A8_UNORM:                      ddpf = PixelFormat.A8B8G8R8;                      break;                  case PixelFormats.R16G16_UNORM:                      ddpf = PixelFormat.G16R16;                      break;                  case PixelFormats.R8G8_UNORM:                      ddpf = PixelFormat.A8L8;                      break;                  case PixelFormats.R16_UNORM:                      ddpf = PixelFormat.L16;                      break;                  case PixelFormats.R8_UNORM:                      ddpf = PixelFormat.L8;                      break;                  case PixelFormats.A8_UNORM:                      ddpf = PixelFormat.A8;                      break;                  case PixelFormats.R8G8_B8G8_UNORM:                      ddpf = PixelFormat.R8G8_B8G8;                      break;                  case PixelFormats.G8R8_G8B8_UNORM:                      ddpf = PixelFormat.G8R8_G8B8;                      break;                  case PixelFormats.BC1_UNORM:                  case PixelFormats.BC1_UNORM_SRGB:                      ddpf = PixelFormat.DXT1;                      break;                  case PixelFormats.BC2_UNORM:                  case PixelFormats.BC2_UNORM_SRGB:                      ddpf = PixelFormat.DXT3;                      break;                  case PixelFormats.BC3_UNORM:                  case PixelFormats.BC3_UNORM_SRGB:                      ddpf = PixelFormat.DXT5;                      break;                  case PixelFormats.BC4_UNORM:                      ddpf = PixelFormat.BC4_UNorm;                      break;                  case PixelFormats.BC4_SNORM:                      ddpf = PixelFormat.BC4_SNorm;                      break;                  case PixelFormats.BC5_UNORM:                      ddpf = PixelFormat.BC5_UNorm;                      break;                  case PixelFormats.BC5_SNORM:                      ddpf = PixelFormat.BC5_SNorm;                      break;                  case PixelFormats.B5G6R5_UNORM:                      ddpf = PixelFormat.R5G6B5;                      break;                  case PixelFormats.B5G5R5A1_UNORM:                      ddpf = PixelFormat.A1R5G5B5;                      break;                  case PixelFormats.B8G8R8A8_UNORM:                      ddpf = PixelFormat.A8R8G8B8;                      break; // DXGI 1.1                  case PixelFormats.B8G8R8X8_UNORM:                      ddpf = PixelFormat.X8R8G8B8;                      break; // DXGI 1.1                        // Legacy D3DX formats using D3DFMT enum value as FourCC                  case PixelFormats.R32G32B32A32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 116; // D3DFMT_A32B32G32R32F                      break;                  case PixelFormats.R16G16B16A16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 113; // D3DFMT_A16B16G16R16F                      break;                  case PixelFormats.R16G16B16A16_UNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 36; // D3DFMT_A16B16G16R16                      break;                  case PixelFormats.R16G16B16A16_SNORM:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 110; // D3DFMT_Q16W16V16U16                      break;                  case PixelFormats.R32G32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 115; // D3DFMT_G32R32F                      break;                  case PixelFormats.R16G16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 112; // D3DFMT_G16R16F                      break;                  case PixelFormats.R32_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 114; // D3DFMT_R32F                      break;                  case PixelFormats.R16_FLOAT:                      ddpf.Size = 32;                      ddpf.Flags = PixelFormatFlags.FourCC;                      ddpf.FourCC = 111; // D3DFMT_R16F                      break;              }
Missing Default,moddingSuite.BL.ImageService.BlockDXT,BlockDXT1,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\BL\ImageService\BlockDXT\BlockDXT1.cs,row,The following switch statement is missing a default case: switch (r)              {                  case 0:                      return row_1;                  case 1:                      return row_2;                  case 2:                      return row_3;                  case 3:                      return row_4;              }
Missing Default,moddingSuite.ViewModel.Edata,WorkspaceViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Edata\WorkspaceViewModel.cs,SyncronizeChange,The following switch statement is missing a default case: switch (e.ChangeType)              {                  case WatcherChangeTypes.Changed:                  case WatcherChangeTypes.Created:                      if (!changedDir.Items.Any(x => x.Name.Equals(newVm.Name)))                      {                          Application.Current.Dispatcher.Invoke(() => changedDir.Items.Add(newVm));                      }                      break;                  case WatcherChangeTypes.Deleted:                      Application.Current.Dispatcher.Invoke(                          () => changedDir.Items.Remove(changedDir.Items.Single(x => x.Name.Equals(newVm.Name))));                      break;                  case WatcherChangeTypes.Renamed:                      var renEa = e as RenamedEventArgs;                      var oldName = renEa.OldName.Split('\\').Last();                        var changedItem = changedDir.Items.Single(x => x.Name.Equals(oldName));                        if (changedItem is DirectoryViewModel)                          (changedItem as DirectoryViewModel).Info = new DirectoryInfo(renEa.FullPath);                      else                          (changedItem as FileViewModel).Info = new FileInfo(renEa.FullPath);                        changedItem.Invalidate();                      break;              }
Missing Default,moddingSuite.ViewModel.Edata,EdataFileViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Edata\EdataFileViewModel.cs,DetailsExecute,The following switch statement is missing a default case: switch (file.FileType)              {                  case EdataFileType.Ndfbin:                      ParentVm.EditNdfbinCommand.Execute(obj);                      break;                  case EdataFileType.Image:                      ParentVm.ExportTextureCommand.Execute(obj);                      break;                  case EdataFileType.Dictionary:                      ParentVm.EditTradFileCommand.Execute(obj);                      break;                  case EdataFileType.Mesh:                      ParentVm.EditMeshCommand.Execute(obj);                      break;                  case EdataFileType.Scenario:                      ParentVm.EditScenarioCommand.Execute(obj);                      break;              }
Missing Default,moddingSuite.ViewModel.Ndf,NdfEditorMainViewModel,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ViewModel\Ndf\NdfEditorMainViewModel.cs,GetValue,The following switch statement is missing a default case: switch (valueHolder.Value.Type)              {                  case NdfType.ObjectReference:                      var ndfObjectReference = valueHolder.Value as NdfObjectReference;                      if (ndfObjectReference != null && ndfObjectReference.InstanceId == inst.Object.Id)                          result.Add(propertyValue);                      break;                  case NdfType.List:                  case NdfType.MapList:                      var ndfCollection = valueHolder.Value as NdfCollection;                      if (ndfCollection != null)                          foreach (var col in ndfCollection)                              GetValue(col' inst' result' propertyValue);                      break;                  case NdfType.Map:                      var map = valueHolder.Value as NdfMap;                      if (map != null)                      {                          GetValue(map.Key' inst' result' propertyValue);                          GetValue(map.Value as IValueHolder' inst' result' propertyValue);                      }                      break;              }
Missing Default,moddingSuite.View.Common,AboutView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Common\AboutView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 52 "..\..\..\..\View\Common\AboutView.xaml"              ((System.Windows.Controls.Image)(target)).MouseUp += new System.Windows.Input.MouseButtonEventHandler(this.ImageMouseUp1);                            #line default              #line hidden              return;              case 2:                            #line 66 "..\..\..\..\View\Common\AboutView.xaml"              ((System.Windows.Controls.Image)(target)).MouseUp += new System.Windows.Input.MouseButtonEventHandler(this.UIElement_OnMouseUp);                            #line default              #line hidden              return;              case 3:                            #line 92 "..\..\..\..\View\Common\AboutView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonClick1);                            #line default              #line hidden              return;              }
Missing Default,moddingSuite.View.Common,UnhandledExceptionView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Common\UnhandledExceptionView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 30 "..\..\..\..\View\Common\UnhandledExceptionView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click_1);                            #line default              #line hidden              return;              }
Missing Default,moddingSuite.View.Edata,EdataFileView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Edata\EdataFileView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.DataGrid = ((System.Windows.Controls.DataGrid)(target));              return;              }
Missing Default,moddingSuite.View.Edata,EdataManagerView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Edata\EdataManagerView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.wheel = ((moddingSuite.View.SpinningWheel)(target));              return;              case 2:              this.OutputPushPin = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Missing Default,moddingSuite.View.Extension,EditingControlDataTemplateSelector,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Extension\EditingControlDataTemplateSelector.cs,SelectTemplate,The following switch statement is missing a default case: switch (wrap.Type)              {                  case NdfType.Float32:                  case NdfType.Float64:                      return element.FindResource("FloatEditingTemplate") as DataTemplate;                  case NdfType.UInt16:                  case NdfType.UInt32:                      return element.FindResource("UInt32EditingTemplate") as DataTemplate;                  case NdfType.Int32:                  case NdfType.Int8:                  case NdfType.Int16:                      return element.FindResource("Int32EditingTemplate") as DataTemplate;                  case NdfType.Guid:                      return element.FindResource("GuidEditingTemplate") as DataTemplate;                  case NdfType.Boolean:                      return element.FindResource("BooleanEditingTemplate") as DataTemplate;                    case NdfType.Color32:                      return element.FindResource("ColorPickerEditingTemplate") as DataTemplate;                    case NdfType.Vector:                      return element.FindResource("VectorEditingTemplate") as DataTemplate;                                          case NdfType.Map:                      return element.FindResource("MapEditingTemplate") as DataTemplate;                    case NdfType.ObjectReference:                      return element.FindResource("ObjectReferenceEditingTemplate") as DataTemplate;                    case NdfType.LocalisationHash:                      return element.FindResource("LocaleHashEditingTemplate") as DataTemplate;                    case NdfType.TableString:                  case NdfType.TableStringFile:                      return element.FindResource("StringTableEditingTemplate") as DataTemplate;                    case NdfType.TransTableReference:                      return element.FindResource("TransTableReferenceEditingTemplate") as DataTemplate;                    case NdfType.Blob:                      return element.FindResource("BlobEditingTemplate") as DataTemplate;                    case NdfType.EugFloat2:                      return element.FindResource("FloatPairEditingTemplate") as DataTemplate;                    case NdfType.List:                      return null;              }
Missing Default,moddingSuite.View.Mesh,MeshView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Mesh\MeshView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.DataGrid = ((System.Windows.Controls.DataGrid)(target));              return;              }
Missing Default,moddingSuite.View.Ndfbin.Viewer,ArmourDamageTableWindowView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Viewer\ArmourDamageTableWindowView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.damageGrid = ((System.Windows.Controls.DataGrid)(target));                            #line 20 "..\..\..\..\..\View\Ndfbin\Viewer\ArmourDamageTableWindowView.xaml"              this.damageGrid.LoadingRow += new System.EventHandler<System.Windows.Controls.DataGridRowEventArgs>(this.DataGrid_LoadingRow);                            #line default              #line hidden              return;              }
Missing Default,moddingSuite.View.Ndfbin.Viewer,InstanceView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Viewer\InstanceView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.propGrid = ((System.Windows.Controls.DataGrid)(target));              return;              }
Missing Default,moddingSuite.View.Ndfbin.Viewer,ListViewer,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Viewer\ListViewer.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.listGrid = ((System.Windows.Controls.DataGrid)(target));              return;              }
Missing Default,moddingSuite.View.Ndfbin.Viewer,ObjectCopyResultView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Viewer\ObjectCopyResultView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ResultGrid = ((System.Windows.Controls.DataGrid)(target));              return;              }
Missing Default,moddingSuite.View.Ndfbin.Viewer,ReferenceSearchResultView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\Viewer\ReferenceSearchResultView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ResultGrid = ((System.Windows.Controls.DataGrid)(target));              return;              }
Missing Default,moddingSuite.View.Ndfbin,NdfbinView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\Ndfbin\NdfbinView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.wheel = ((moddingSuite.View.SpinningWheel)(target));              return;              case 2:              this.ChangesButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              case 3:              this.classGrid = ((System.Windows.Controls.DataGrid)(target));              return;              case 4:              this.instanceGrid = ((System.Windows.Controls.DataGrid)(target));              return;              case 5:              this.filterButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Missing Default,moddingSuite.View,SettingsView,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\View\SettingsView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 62 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.WorkSpaceBrowserButtonClick);                            #line default              #line hidden              return;              case 2:              this.WorkSpaceTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 97 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GameSpaceButtonClick);                            #line default              #line hidden              return;              case 4:              this.GameSpaceTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 5:                            #line 130 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 6:                            #line 137 "..\..\..\View\SettingsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CanceButtonClick);                            #line default              #line hidden              return;              }
Missing Default,moddingSuite.ZoneEditor.ScenarioItems,Icon,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Icon.cs,updateImage,The following switch statement is missing a default case: switch (type)              {                  case IconType.CV:                      typeString = "CV.png";                      break;                  case IconType.FOB:                      typeString = "FOB.png";                      break;              }
Missing Default,moddingSuite.ZoneEditor.ScenarioItems,Icon,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Icon.cs,buildNdf,The following switch statement is missing a default case: switch (type)              {                  case IconType.CV:                      name = "TGameDesignAddOn_StartingCommandUnit";                      ranking = "StartingCommandUnits";                        break;                  case IconType.FOB:                      name = "TGameDesignAddOn_StartingFOB";                      ranking = "StartingFOB";                      break;              }
Missing Default,moddingSuite.ZoneEditor.ScenarioItems,Spawn,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Spawn.cs,paint,The following switch statement is missing a default case: switch (type){                  case SpawnType.Land:                      width = 10;                                            break;                  case SpawnType.Air:                      b=Brushes.Blue;                                            break;                  case SpawnType.Sea:                                            break;              }
Missing Default,moddingSuite.ZoneEditor.ScenarioItems,Spawn,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\ScenarioItems\Spawn.cs,buildNdf,The following switch statement is missing a default case: switch (type)              {                  case SpawnType.Land:                      name="TGameDesignAddOn_ReinforcementLocation";                      ranking = "ReinforcementLocations";                        break;                  case SpawnType.Sea:                      name="TGameDesignAddOn_MaritimeCorridor";                      ranking = "MaritimeCorridors";                      break;                  case SpawnType.Air:                      name="TGameDesignAddOn_AerialCorridor";                      ranking = "AerialCorridors";                      break;                }
Missing Default,ZoneEditor,Outline,D:\research\architectureSmells\repos\enohka_moddingSuite\moddingSuite\ZoneEditor\Outline.cs,paint,The following switch statement is missing a default case: switch (possession)              {                  case Possession.Redfor:                      c = Color.FromArgb(80' 255' 0' 0);                      break;                  case Possession.Bluefor:                      c = Color.FromArgb(80' 0' 0' 255);                      break;                  case Possession.Neutral:                      c = Color.FromArgb(80' 255' 255' 255);                      break;                                    }
