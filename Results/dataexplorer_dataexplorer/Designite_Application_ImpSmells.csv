Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DataExplorer.Application.Layouts.General.Commands,AutoLayoutColumnCommandHandler,C:\repos\dataexplorer_dataexplorer\Application\Layouts\General\Commands\AutoLayoutColumnCommandHandler.cs,GetSetColumnAction,Cyclomatic complexity of the method is 8
Complex Method,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DateTimeGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DateTimeGridLineFactory.cs,Create,Cyclomatic complexity of the method is 16
Long Parameter List,DataExplorer.Application.Importers.CsvFiles.Commands,ImportCsvFileSourceCommandHandler,C:\repos\dataexplorer_dataexplorer\Application\Importers\CsvFiles\Commands\ImportCsvFileSourceCommandHandler.cs,ImportCsvFileSourceCommandHandler,The method has 10 parameters. Parameters: repository' eventBus' stateService' dataContext' dataAdapter' converterFactory' loaderFactory' columnFactory' columnRepository' rowRepository
Long Parameter List,DataExplorer.Application.Importers.CsvFiles.Commands,UpdateCsvFileSourceCommandHandler,C:\repos\dataexplorer_dataexplorer\Application\Importers\CsvFiles\Commands\UpdateCsvFileSourceCommandHandler.cs,UpdateCsvFileSourceCommandHandler,The method has 6 parameters. Parameters: repository' dataAdapter' dataTypeDetector' semanticTypeDetector' factory' eventBus
Long Parameter List,DataExplorer.Application.Legends.Colors.Factories,ColorLegendFactory,C:\repos\dataexplorer_dataexplorer\Application\Legends\Colors\Factories\ColorLegendFactory.cs,ColorLegendFactory,The method has 5 parameters. Parameters: booleanFactory' dateTimeFactory' floatFactory' integerFactory' stringFactory
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,ISizeLegendFactory,C:\repos\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\ISizeLegendFactory.cs,Create,The method has 5 parameters. Parameters: type' map' values' lowerSize' upperSize
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,SizeLegendFactory,C:\repos\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\SizeLegendFactory.cs,SizeLegendFactory,The method has 5 parameters. Parameters: booleanFactory' dateTimeFactory' floatFactory' integerFactory' stringFactory
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,SizeLegendFactory,C:\repos\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\SizeLegendFactory.cs,Create,The method has 5 parameters. Parameters: type' map' values' lowerSize' upperSize
Long Parameter List,DataExplorer.Application.Projects.Commands,OpenProjectCommandHandler,C:\repos\dataexplorer_dataexplorer\Application\Projects\Commands\OpenProjectCommandHandler.cs,OpenProjectCommandHandler,The method has 6 parameters. Parameters: dialogService' eventBus' stateService' dataContext' xmlFileService' projectSerializer
Long Parameter List,DataExplorer.Application.Projects.Commands,SaveProjectCommandHandler,C:\repos\dataexplorer_dataexplorer\Application\Projects\Commands\SaveProjectCommandHandler.cs,SaveProjectCommandHandler,The method has 5 parameters. Parameters: dialogService' dataContext' projectSerializer' xmlFileService' eventBus
Long Parameter List,DataExplorer.Application.Views.ScatterPlots.Axes.Factories,GridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\GridLineFactory.cs,GridLineFactory,The method has 5 parameters. Parameters: booleanFactory' dateTimeFactory' floatFactory' integerFactory' stringFactory
Long Parameter List,DataExplorer.Application.Views.ScatterPlots.Axes.Factories,GridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\GridLineFactory.cs,Create,The method has 5 parameters. Parameters: type' map' values' lower' upper
Long Parameter List,DataExplorer.Application.Views.ScatterPlots.Axes.Factories,IGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\IGridLineFactory.cs,Create,The method has 5 parameters. Parameters: type' map' values' lower' upper
Complex Conditional,DataExplorer.Application.Legends.Colors.Factories,FloatColorLegendFactory,C:\repos\dataexplorer_dataexplorer\Application\Legends\Colors\Factories\FloatColorLegendFactory.cs,GetLabelName,The conditional expression  "value <= -1000000d || value >= 1000000d                  || (value >= -0.001d && value <= 0.001d && value != 0d)"  is complex.
Complex Conditional,DataExplorer.Application.Legends.Sizes.Factories,FloatSizeLegendFactory,C:\repos\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\FloatSizeLegendFactory.cs,GetLabelName,The conditional expression  "value <= -1000000d || value >= 1000000d                  || (value >= -0.001d && value <= 0.001d && value != 0d)"  is complex.
Complex Conditional,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,GetLabelName,The conditional expression  "value <= -1000000d || value >= 1000000d                   || (value >= -0.001d && value <= 0.001d && value != 0d)"  is complex.
Magic Number,DataExplorer.Application.Legends.Colors.Factories,IntegerColorLegendFactory,C:\repos\dataexplorer_dataexplorer\Application\Legends\Colors\Factories\IntegerColorLegendFactory.cs,GetLabelName,The following statement contains a magic number: if (value <= -1000000 || value >= 1000000)                  return value.ToString("E2");
Magic Number,DataExplorer.Application.Legends.Colors.Factories,IntegerColorLegendFactory,C:\repos\dataexplorer_dataexplorer\Application\Legends\Colors\Factories\IntegerColorLegendFactory.cs,GetLabelName,The following statement contains a magic number: if (value <= -1000000 || value >= 1000000)                  return value.ToString("E2");
Magic Number,DataExplorer.Application.Legends.Sizes.Factories,DateTimeSizeLegendFactory,C:\repos\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\DateTimeSizeLegendFactory.cs,CreateContinuousSizeLegendItems,The following statement contains a magic number: var unit = (upperSize - lowerSize) / 2;
Magic Number,DataExplorer.Application.Legends.Sizes.Factories,FloatSizeLegendFactory,C:\repos\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\FloatSizeLegendFactory.cs,CreateContinuousSizeLegendItems,The following statement contains a magic number: var unit = (upperSize - lowerSize) / 2;
Magic Number,DataExplorer.Application.Legends.Sizes.Factories,IntegerSizeLegendFactory,C:\repos\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\IntegerSizeLegendFactory.cs,CreateContinuousSizeLegendItems,The following statement contains a magic number: var unit = (upperSize - lowerSize) / 2;
Magic Number,DataExplorer.Application.Legends.Sizes.Factories,IntegerSizeLegendFactory,C:\repos\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\IntegerSizeLegendFactory.cs,GetLabelName,The following statement contains a magic number: if (value <= -1000000 || value >= 1000000)                  return value.Value.ToString("E2");
Magic Number,DataExplorer.Application.Legends.Sizes.Factories,IntegerSizeLegendFactory,C:\repos\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\IntegerSizeLegendFactory.cs,GetLabelName,The following statement contains a magic number: if (value <= -1000000 || value >= 1000000)                  return value.Value.ToString("E2");
Magic Number,DataExplorer.Application.Legends.Sizes.Factories,StringSizeLegendFactory,C:\repos\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\StringSizeLegendFactory.cs,CreateContinuousSizeLegendItems,The following statement contains a magic number: var unit = (upperSize - lowerSize) / 2;
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,CreateQuarters,The following statement contains a magic number: var endDate = GetFirstDayOfQuarter(upper).AddMonths(4);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,CreateQuarters,The following statement contains a magic number: for (var date = startDate; date <= endDate; date = date.AddMonths(3))                  yield return CreateAxisGridLine(map' date);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,CreateWeeks,The following statement contains a magic number: var endDate = GetFirstDayOfWeek(upper).AddDays(7).Date;
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,CreateWeeks,The following statement contains a magic number: for (var date = startDate; date <= endDate; date = date.AddDays(7))                  yield return CreateAxisGridLine(map' date);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: if (dateTime.Month <= 3)                  return new DateTime(dateTime.Year' 1' 1);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: if (dateTime.Month <= 6)                  return new DateTime(dateTime.Year' 4' 1);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: if (dateTime.Month <= 6)                  return new DateTime(dateTime.Year' 4' 1);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: if (dateTime.Month <= 9)                  return new DateTime(dateTime.Year' 7' 1);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: if (dateTime.Month <= 9)                  return new DateTime(dateTime.Year' 7' 1);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: if (dateTime.Month <= 12)                  return new DateTime(dateTime.Year' 10' 1);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: if (dateTime.Month <= 12)                  return new DateTime(dateTime.Year' 10' 1);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,SecondAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\SecondAxisGridLineFactory.cs,CreateFourHours,The following statement contains a magic number: for (var date = startTime; date <= endTime; date = date.AddHours(4))                  yield return CreateAxisGridLine(map' date);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,SecondAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\SecondAxisGridLineFactory.cs,CreateTenMinutes,The following statement contains a magic number: for (var date = startTime; date <= endTime; date = date.AddMinutes(10))                  yield return CreateAxisGridLine(map' date);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,SecondAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\SecondAxisGridLineFactory.cs,CreateTenSeconds,The following statement contains a magic number: for (var date = startTime; date <= endTime; date = date.AddSeconds(10))                  yield return CreateAxisGridLine(map' date);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,YearAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\YearAxisGridLineFactory.cs,Create,The following statement contains a magic number: if (step == 1000)                  endYear += 1000;
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,YearAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\YearAxisGridLineFactory.cs,Create,The following statement contains a magic number: if (step == 1000)                  endYear += 1000;
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,YearAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\YearAxisGridLineFactory.cs,GetDateFromYear,The following statement contains a magic number: if (year >= 10000)                  return DateTime.MaxValue;
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,YearAxisGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\YearAxisGridLineFactory.cs,GetLabel,The following statement contains a magic number: return value.Year.ToString().PadLeft(4' '0');
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: var lowerFloat = map.SortOrder == SortOrder.Ascending                  ? (double) map.MapInverse(lower) / 2                  : (double)map.MapInverse(upper) / 2;
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: var lowerFloat = map.SortOrder == SortOrder.Ascending                  ? (double) map.MapInverse(lower) / 2                  : (double)map.MapInverse(upper) / 2;
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: var upperFloat = map.SortOrder == SortOrder.Ascending                  ? (double)map.MapInverse(upper) / 2                  : (double)map.MapInverse(lower) / 2;
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: var upperFloat = map.SortOrder == SortOrder.Ascending                  ? (double)map.MapInverse(upper) / 2                  : (double)map.MapInverse(lower) / 2;
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: if (lowerFloat <=  double.MinValue / 2)                  yield return CreateAxisGridLine(map' double.MinValue);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: if (upperFloat >= double.MaxValue / 2)                  yield return CreateAxisGridLine(map' double.MaxValue);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: for (var i = 0.0000000001; i < double.MaxValue; i *= 10)              {                  double i2 = i / 2;                    if (width >= i2 && width < i2 * 20)                  {                      step = i2;                      start = lowerFloat - (lowerFloat % i2);                      break;                  }              }
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: for (var i = 0.0000000001; i < double.MaxValue; i *= 10)              {                  double i2 = i / 2;                    if (width >= i2 && width < i2 * 20)                  {                      step = i2;                      start = lowerFloat - (lowerFloat % i2);                      break;                  }              }
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: for (var i = 0.0000000001; i < double.MaxValue; i *= 10)              {                  double i2 = i / 2;                    if (width >= i2 && width < i2 * 20)                  {                      step = i2;                      start = lowerFloat - (lowerFloat % i2);                      break;                  }              }
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: for (var i = 0.0000000001; i < double.MaxValue; i *= 10)              {                  double i2 = i / 2;                    if (width >= i2 && width < i2 * 20)                  {                      step = i2;                      start = lowerFloat - (lowerFloat % i2);                      break;                  }              }
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: for (var i = start; i <= upperFloat; i += step)                  yield return CreateAxisGridLine(map' i * 2);
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines,IntegerGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\IntegerGridLines\IntegerGridLineFactory.cs,Create,The following statement contains a magic number: for (var i = 1d; i < int.MaxValue; i *= 10)              {                  if (width >= i && width < i * 15)                  {                      step = i;                      start = (int) (lowerInt - (lowerInt % i));                      break;                  }              }
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines,IntegerGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\IntegerGridLines\IntegerGridLineFactory.cs,Create,The following statement contains a magic number: for (var i = 1d; i < int.MaxValue; i *= 10)              {                  if (width >= i && width < i * 15)                  {                      step = i;                      start = (int) (lowerInt - (lowerInt % i));                      break;                  }              }
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines,IntegerGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\IntegerGridLines\IntegerGridLineFactory.cs,GetLabelName,The following statement contains a magic number: if (value <= -1000000 || value >= 1000000)                  return value.ToString("E2");
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines,IntegerGridLineFactory,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\IntegerGridLines\IntegerGridLineFactory.cs,GetLabelName,The following statement contains a magic number: if (value <= -1000000 || value >= 1000000)                  return value.ToString("E2");
Magic Number,DataExplorer.Application.Views.ScatterPlots.Commands,ZoomInCommandHandler,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Commands\ZoomInCommandHandler.cs,Execute,The following statement contains a magic number: var x = viewExtent.X + (command.Center.X * ZoomInFactor) + (viewExtent.Width * ZoomInFactor) / 2;
Magic Number,DataExplorer.Application.Views.ScatterPlots.Commands,ZoomInCommandHandler,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Commands\ZoomInCommandHandler.cs,Execute,The following statement contains a magic number: var y = viewExtent.Y + (command.Center.Y * ZoomInFactor) + (viewExtent.Height * ZoomInFactor) / 2;
Magic Number,DataExplorer.Application.Views.ScatterPlots.Commands,ZoomOutCommandHandler,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Commands\ZoomOutCommandHandler.cs,Execute,The following statement contains a magic number: var x = viewExtent.X - (command.Center.X * ZoomOutFactor) - (viewExtent.Width * ZoomOutFactor) / 2;
Magic Number,DataExplorer.Application.Views.ScatterPlots.Commands,ZoomOutCommandHandler,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Commands\ZoomOutCommandHandler.cs,Execute,The following statement contains a magic number: var y = viewExtent.Y - (command.Center.Y * ZoomOutFactor) - (viewExtent.Height * ZoomOutFactor) / 2;
Magic Number,DataExplorer.Application.Views.ScatterPlots.Commands,ZoomToFullExtentCommandHandler,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Commands\ZoomToFullExtentCommandHandler.cs,Execute,The following statement contains a magic number: var x = DefaultWorldX - (width - DefaultWorldWidth) / 2;
Magic Number,DataExplorer.Application.Views.ScatterPlots.Commands,ZoomToFullExtentCommandHandler,C:\repos\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Commands\ZoomToFullExtentCommandHandler.cs,Execute,The following statement contains a magic number: var y = DefaultWorldY - (height - DefaultWorldHeight) / 2;
