Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,Cyclomatic complexity of the method is 8
Complex Method,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines,IntegerGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\IntegerGridLines\IntegerGridLineFactory.cs,Create,Cyclomatic complexity of the method is 8
Long Parameter List,DataExplorer.Application.Clipboard.Commands,CopyDataToClipboardCommandHandler,D:\newReposJune17\dataexplorer_dataexplorer\Application\Clipboard\Commands\CopyDataToClipboardCommandHandler.cs,CopyDataToClipboardCommandHandler,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Core.Logs,ILogProvider,D:\newReposJune17\dataexplorer_dataexplorer\Application\Core\Logs\ILogProvider.cs,WriteLog,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Core.Logs,LogProvider,D:\newReposJune17\dataexplorer_dataexplorer\Application\Core\Logs\LogProvider.cs,WriteLog,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Core.Logs,LogProvider,D:\newReposJune17\dataexplorer_dataexplorer\Application\Core\Logs\LogProvider.cs,Write,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Importers.CsvFiles.Commands,ImportCsvFileSourceCommandHandler,D:\newReposJune17\dataexplorer_dataexplorer\Application\Importers\CsvFiles\Commands\ImportCsvFileSourceCommandHandler.cs,ImportCsvFileSourceCommandHandler,The method has 10 parameters.
Long Parameter List,DataExplorer.Application.Importers.CsvFiles.Commands,UpdateCsvFileSourceCommandHandler,D:\newReposJune17\dataexplorer_dataexplorer\Application\Importers\CsvFiles\Commands\UpdateCsvFileSourceCommandHandler.cs,UpdateCsvFileSourceCommandHandler,The method has 6 parameters.
Long Parameter List,DataExplorer.Application.Legends.Colors.Factories,ColorLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Colors\Factories\ColorLegendFactory.cs,ColorLegendFactory,The method has 5 parameters.
Long Parameter List,DataExplorer.Application.Legends.Colors.Factories,ColorLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Colors\Factories\ColorLegendFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Legends.Colors.Factories,IColorLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Colors\Factories\IColorLegendFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,BooleanSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\BooleanSizeLegendFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,DateTimeSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\DateTimeSizeLegendFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,FloatSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\FloatSizeLegendFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,IBooleanSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\IBooleanSizeLegendFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,IDateTimeSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\IDateTimeSizeLegendFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,IFloatSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\IFloatSizeLegendFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,IIntegerSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\IIntegerSizeLegendFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,IntegerSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\IntegerSizeLegendFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,ISizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\ISizeLegendFactory.cs,Create,The method has 5 parameters.
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,IStringSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\IStringSizeLegendFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,SizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\SizeLegendFactory.cs,SizeLegendFactory,The method has 5 parameters.
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,SizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\SizeLegendFactory.cs,Create,The method has 5 parameters.
Long Parameter List,DataExplorer.Application.Legends.Sizes.Factories,StringSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\StringSizeLegendFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Projects.Commands,OpenProjectCommandHandler,D:\newReposJune17\dataexplorer_dataexplorer\Application\Projects\Commands\OpenProjectCommandHandler.cs,OpenProjectCommandHandler,The method has 6 parameters.
Long Parameter List,DataExplorer.Application.Projects.Commands,SaveProjectCommandHandler,D:\newReposJune17\dataexplorer_dataexplorer\Application\Projects\Commands\SaveProjectCommandHandler.cs,SaveProjectCommandHandler,The method has 5 parameters.
Long Parameter List,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DateTimeGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DateTimeGridLineFactory.cs,DateTimeGridLineFactory,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,IYearAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\IYearAxisGridLineFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,YearAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\YearAxisGridLineFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Views.ScatterPlots.Axes.Factories,GridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\GridLineFactory.cs,GridLineFactory,The method has 5 parameters.
Long Parameter List,DataExplorer.Application.Views.ScatterPlots.Axes.Factories,GridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\GridLineFactory.cs,Create,The method has 5 parameters.
Long Parameter List,DataExplorer.Application.Views.ScatterPlots.Axes.Factories,IGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\IGridLineFactory.cs,Create,The method has 5 parameters.
Long Parameter List,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines,IStringGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\StringGridLines\IStringGridLineFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines,StringGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\StringGridLines\StringGridLineFactory.cs,Create,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines,StringGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\StringGridLines\StringGridLineFactory.cs,CreateValueGridLines,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines,StringGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\StringGridLines\StringGridLineFactory.cs,CreateAlphaGridLines,The method has 4 parameters.
Long Parameter List,DataExplorer.Application.Views.ScatterPlots.Commands,UpdatePlotsCommandHandler,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Commands\UpdatePlotsCommandHandler.cs,UpdatePlotsCommandHandler,The method has 4 parameters.
Long Statement,DataExplorer.Application.Core.Logs,Log,D:\newReposJune17\dataexplorer_dataexplorer\Application\Core\Logs\Log.cs,GetExceptionText,The length of the statement  "	var text = new StringBuilder ().AppendLine (ex.Message).AppendLine ("Type: " + ex.GetType ().FullName).AppendLine ("Source: " + ex.Source).AppendLine ("Stack Trace:" + Environment.NewLine + ex.StackTrace); " is 205.
Long Statement,DataExplorer.Application.Core.Logs,LogProvider,D:\newReposJune17\dataexplorer_dataexplorer\Application\Core\Logs\LogProvider.cs,GetFilePath,The length of the statement  "	return new StringBuilder ().Append (_logFolder.GetLogFolder ()).Append (Path.DirectorySeparatorChar).Append (dateTime.ToUniversalTime ().ToString ("yyyy-MM-dd")).Append (LogFileExtension).ToString (); " is 200.
Long Statement,DataExplorer.Application.Core.Logs,LogProvider,D:\newReposJune17\dataexplorer_dataexplorer\Application\Core\Logs\LogProvider.cs,Write,The length of the statement  "	return new StringBuilder ().Append (dateTime.ToUniversalTime ().ToString ("u")).Append (" ").AppendFormat ("[{0}]"' threadId).Append (" ").Append (level.ToString ().ToUpper ()).Append (" - ").Append (message).Append (Environment.NewLine).ToString (); " is 250.
Long Statement,DataExplorer.Application.Legends.Colors.Factories,DateTimeColorLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Colors\Factories\DateTimeColorLegendFactory.cs,Create,The length of the statement  "	var results = (values.Count () <= palette.Colors.Count ()) ? CreateDiscreteColorLegendItems (map' nonNullValues) : CreateContinuousColorLegendItems (map' palette); " is 163.
Long Statement,DataExplorer.Application.Legends.Colors.Factories,FloatColorLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Colors\Factories\FloatColorLegendFactory.cs,Create,The length of the statement  "	var results = (values.Count () <= palette.Colors.Count ()) ? CreateDiscreteColorLegendItems (map' nonNullValues) : CreateContinuousColorLegendItems (map' palette); " is 163.
Long Statement,DataExplorer.Application.Legends.Colors.Factories,IntegerColorLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Colors\Factories\IntegerColorLegendFactory.cs,Create,The length of the statement  "	var results = (values.Count () <= palette.Colors.Count ()) ? CreateDiscreteColorLegendItems (map' nonNullValues) : CreateContinuousColorLegendItems (map' palette); " is 163.
Long Statement,DataExplorer.Application.Legends.Colors.Factories,StringColorLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Colors\Factories\StringColorLegendFactory.cs,Create,The length of the statement  "	var results = (distinctValues.Count () <= palette.Colors.Count ()) ? CreateDiscreteColorLegendItems (map' nonNullValues) : CreateContinuousColorLegendItems (map' palette); " is 171.
Long Statement,DataExplorer.Application.Legends.Sizes.Factories,DateTimeSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\DateTimeSizeLegendFactory.cs,Create,The length of the statement  "	var results = (values.Count () <= MaxDiscreteValues) ? CreateDiscreteSizeLegendItems (map' nonNullValues) : CreateContinuousSizeLegendItems (map' lowerSize' upperSize); " is 168.
Long Statement,DataExplorer.Application.Legends.Sizes.Factories,FloatSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\FloatSizeLegendFactory.cs,Create,The length of the statement  "	var results = (values.Count () <= MaxDiscreteValues) ? CreateDiscreteSizeLegendItems (map' nonNullValues) : CreateContinuousSizeLegendItems (map' lowerSize' upperSize); " is 168.
Long Statement,DataExplorer.Application.Legends.Sizes.Factories,IntegerSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\IntegerSizeLegendFactory.cs,Create,The length of the statement  "	var results = (values.Count () <= MaxDiscreteValues) ? CreateDiscreteSizeLegendItems (map' nonNullValues) : CreateContinuousSizeLegendItems (map' lowerSize' upperSize); " is 168.
Long Statement,DataExplorer.Application.Legends.Sizes.Factories,StringSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\StringSizeLegendFactory.cs,Create,The length of the statement  "	var results = (distinctValues.Count () <= MaxDiscreteValues) ? CreateDiscreteSizeLegendItems (map' nonNullValues) : CreateContinuousSizeLegendItems (map' lowerSize' upperSize); " is 176.
Long Statement,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DateTimeGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DateTimeGridLineFactory.cs,Create,The length of the statement  "	var lowerDateTime = map.SortOrder == SortOrder.Ascending ? (DateTime)map.MapInverse (lower) : (DateTime)map.MapInverse (upper); " is 127.
Long Statement,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DateTimeGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DateTimeGridLineFactory.cs,Create,The length of the statement  "	var upperDateTime = map.SortOrder == SortOrder.Ascending ? (DateTime)map.MapInverse (upper) : (DateTime)map.MapInverse (lower); " is 127.
Long Statement,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The length of the statement  "	var lowerFloat = map.SortOrder == SortOrder.Ascending ? (double)map.MapInverse (lower) / 2 : (double)map.MapInverse (upper) / 2; " is 128.
Long Statement,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The length of the statement  "	var upperFloat = map.SortOrder == SortOrder.Ascending ? (double)map.MapInverse (upper) / 2 : (double)map.MapInverse (lower) / 2; " is 128.
Long Statement,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines,StringGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\StringGridLines\StringGridLineFactory.cs,Create,The length of the statement  "	return (count <= AlphaGroupMin) ? CreateValueGridLines (map' values' lower' upper) : CreateAlphaGridLines (map' values.Cast<string> ().ToList ()' lower' upper); " is 160.
Long Statement,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines,StringGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\StringGridLines\StringGridLineFactory.cs,CreateAlphaGridLines,The length of the statement  "	var lowerString = map.SortOrder == SortOrder.Ascending ? (string)map.MapInverse (lower) : (string)map.MapInverse (upper); " is 121.
Long Statement,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines,StringGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\StringGridLines\StringGridLineFactory.cs,CreateAlphaGridLines,The length of the statement  "	var upperString = map.SortOrder == SortOrder.Ascending ? (string)map.MapInverse (upper) : (string)map.MapInverse (lower); " is 121.
Long Statement,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines,StringGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\StringGridLines\StringGridLineFactory.cs,CreateAlphaGridLines,The length of the statement  "		var first = values.Where (p => p != string.Empty).FirstOrDefault (p => p [0].ToString ().ToUpper () == c.ToString ().ToUpper ()); " is 129.
Complex Conditional,DataExplorer.Application.Legends.Colors.Factories,FloatColorLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Colors\Factories\FloatColorLegendFactory.cs,GetLabelName,The conditional expression  "value <= -1000000d || value >= 1000000d || (value >= -0.001d && value <= 0.001d && value != 0d)"  is complex.
Complex Conditional,DataExplorer.Application.Legends.Sizes.Factories,FloatSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\FloatSizeLegendFactory.cs,GetLabelName,The conditional expression  "value <= -1000000d || value >= 1000000d || (value >= -0.001d && value <= 0.001d && value != 0d)"  is complex.
Complex Conditional,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,GetLabelName,The conditional expression  "value <= -1000000d || value >= 1000000d || (value >= -0.001d && value <= 0.001d && value != 0d)"  is complex.
Magic Number,DataExplorer.Application.Legends.Colors.Factories,IntegerColorLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Colors\Factories\IntegerColorLegendFactory.cs,GetLabelName,The following statement contains a magic number: if (value <= -1000000 || value >= 1000000)  	return value.ToString ("E2");  
Magic Number,DataExplorer.Application.Legends.Colors.Factories,IntegerColorLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Colors\Factories\IntegerColorLegendFactory.cs,GetLabelName,The following statement contains a magic number: if (value <= -1000000 || value >= 1000000)  	return value.ToString ("E2");  
Magic Number,DataExplorer.Application.Legends.Sizes.Factories,IntegerSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\IntegerSizeLegendFactory.cs,GetLabelName,The following statement contains a magic number: if (value <= -1000000 || value >= 1000000)  	return value.Value.ToString ("E2");  
Magic Number,DataExplorer.Application.Legends.Sizes.Factories,IntegerSizeLegendFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Legends\Sizes\Factories\IntegerSizeLegendFactory.cs,GetLabelName,The following statement contains a magic number: if (value <= -1000000 || value >= 1000000)  	return value.Value.ToString ("E2");  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,CreateQuarters,The following statement contains a magic number: for (var date = startDate; date <= endDate; date = date.AddMonths (3))  	yield return CreateAxisGridLine (map' date);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,CreateQuarters,The following statement contains a magic number: date = date.AddMonths (3)
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,CreateWeeks,The following statement contains a magic number: for (var date = startDate; date <= endDate; date = date.AddDays (7))  	yield return CreateAxisGridLine (map' date);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,CreateWeeks,The following statement contains a magic number: date = date.AddDays (7)
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: if (dateTime.Month <= 3)  	return new DateTime (dateTime.Year' 1' 1);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: if (dateTime.Month <= 6)  	return new DateTime (dateTime.Year' 4' 1);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: if (dateTime.Month <= 6)  	return new DateTime (dateTime.Year' 4' 1);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: return new DateTime (dateTime.Year' 4' 1);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: if (dateTime.Month <= 9)  	return new DateTime (dateTime.Year' 7' 1);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: if (dateTime.Month <= 9)  	return new DateTime (dateTime.Year' 7' 1);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: return new DateTime (dateTime.Year' 7' 1);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: if (dateTime.Month <= 12)  	return new DateTime (dateTime.Year' 10' 1);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: if (dateTime.Month <= 12)  	return new DateTime (dateTime.Year' 10' 1);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,DayAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\DayAxisGridLineFactory.cs,GetFirstDayOfQuarter,The following statement contains a magic number: return new DateTime (dateTime.Year' 10' 1);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,SecondAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\SecondAxisGridLineFactory.cs,CreateFourHours,The following statement contains a magic number: for (var date = startTime; date <= endTime; date = date.AddHours (4))  	yield return CreateAxisGridLine (map' date);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,SecondAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\SecondAxisGridLineFactory.cs,CreateFourHours,The following statement contains a magic number: date = date.AddHours (4)
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,SecondAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\SecondAxisGridLineFactory.cs,CreateTenMinutes,The following statement contains a magic number: for (var date = startTime; date <= endTime; date = date.AddMinutes (10))  	yield return CreateAxisGridLine (map' date);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,SecondAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\SecondAxisGridLineFactory.cs,CreateTenMinutes,The following statement contains a magic number: date = date.AddMinutes (10)
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,SecondAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\SecondAxisGridLineFactory.cs,CreateTenSeconds,The following statement contains a magic number: for (var date = startTime; date <= endTime; date = date.AddSeconds (10))  	yield return CreateAxisGridLine (map' date);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,SecondAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\SecondAxisGridLineFactory.cs,CreateTenSeconds,The following statement contains a magic number: date = date.AddSeconds (10)
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,YearAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\YearAxisGridLineFactory.cs,Create,The following statement contains a magic number: if (step == 1000)  	endYear += 1000;  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,YearAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\YearAxisGridLineFactory.cs,Create,The following statement contains a magic number: if (step == 1000)  	endYear += 1000;  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,YearAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\YearAxisGridLineFactory.cs,Create,The following statement contains a magic number: endYear += 1000;  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,YearAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\YearAxisGridLineFactory.cs,GetDateFromYear,The following statement contains a magic number: if (year >= 10000)  	return DateTime.MaxValue;  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines,YearAxisGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\DateTimeGridLines\YearAxisGridLineFactory.cs,GetLabel,The following statement contains a magic number: return value.Year.ToString ().PadLeft (4' '0');  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: if (lowerFloat <= double.MinValue / 2)  	yield return CreateAxisGridLine (map' double.MinValue);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: if (upperFloat >= double.MaxValue / 2)  	yield return CreateAxisGridLine (map' double.MaxValue);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: for (var i = 0.0000000001; i < double.MaxValue; i *= 10) {  	double i2 = i / 2;  	if (width >= i2 && width < i2 * 20) {  		step = i2;  		start = lowerFloat - (lowerFloat % i2);  		break;  	}  }  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: for (var i = 0.0000000001; i < double.MaxValue; i *= 10) {  	double i2 = i / 2;  	if (width >= i2 && width < i2 * 20) {  		step = i2;  		start = lowerFloat - (lowerFloat % i2);  		break;  	}  }  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: for (var i = 0.0000000001; i < double.MaxValue; i *= 10) {  	double i2 = i / 2;  	if (width >= i2 && width < i2 * 20) {  		step = i2;  		start = lowerFloat - (lowerFloat % i2);  		break;  	}  }  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: for (var i = 0.0000000001; i < double.MaxValue; i *= 10) {  	double i2 = i / 2;  	if (width >= i2 && width < i2 * 20) {  		step = i2;  		start = lowerFloat - (lowerFloat % i2);  		break;  	}  }  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: i *= 10
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: if (width >= i2 && width < i2 * 20) {  	step = i2;  	start = lowerFloat - (lowerFloat % i2);  	break;  }  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: for (var i = start; i <= upperFloat; i += step)  	yield return CreateAxisGridLine (map' i * 2);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines,FloatGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\FloatGridLines\FloatGridLineFactory.cs,Create,The following statement contains a magic number: yield return CreateAxisGridLine (map' i * 2);  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines,IntegerGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\IntegerGridLines\IntegerGridLineFactory.cs,Create,The following statement contains a magic number: for (var i = 1d; i < int.MaxValue; i *= 10) {  	if (width >= i && width < i * 15) {  		step = i;  		start = (int)(lowerInt - (lowerInt % i));  		break;  	}  }  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines,IntegerGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\IntegerGridLines\IntegerGridLineFactory.cs,Create,The following statement contains a magic number: for (var i = 1d; i < int.MaxValue; i *= 10) {  	if (width >= i && width < i * 15) {  		step = i;  		start = (int)(lowerInt - (lowerInt % i));  		break;  	}  }  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines,IntegerGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\IntegerGridLines\IntegerGridLineFactory.cs,Create,The following statement contains a magic number: i *= 10
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines,IntegerGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\IntegerGridLines\IntegerGridLineFactory.cs,Create,The following statement contains a magic number: if (width >= i && width < i * 15) {  	step = i;  	start = (int)(lowerInt - (lowerInt % i));  	break;  }  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines,IntegerGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\IntegerGridLines\IntegerGridLineFactory.cs,GetLabelName,The following statement contains a magic number: if (value <= -1000000 || value >= 1000000)  	return value.ToString ("E2");  
Magic Number,DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines,IntegerGridLineFactory,D:\newReposJune17\dataexplorer_dataexplorer\Application\Views\ScatterPlots\Axes\Factories\IntegerGridLines\IntegerGridLineFactory.cs,GetLabelName,The following statement contains a magic number: if (value <= -1000000 || value >= 1000000)  	return value.ToString ("E2");  
