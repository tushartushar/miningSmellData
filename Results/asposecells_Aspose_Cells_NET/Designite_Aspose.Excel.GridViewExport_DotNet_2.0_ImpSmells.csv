Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Aspose.Excel.GridViewExport,ExportGridViewToExcel,F:\newReposMay17\asposecells_Aspose_Cells_NET\Plugins\VisualStudio\Aspose.Excel.GridViewExport\.NET 2.0\ExportableGridView.cs,ExportButton_Click,Cyclomatic complexity of the method is 13
Complex Method,Aspose.Excel.GridViewExport,ExportGridViewToExcel,F:\newReposMay17\asposecells_Aspose_Cells_NET\Plugins\VisualStudio\Aspose.Excel.GridViewExport\.NET 2.0\ExportableGridView.cs,GetSaveFormat,Cyclomatic complexity of the method is 21
Long Statement,Aspose.Excel.GridViewExport,ExportGridViewToExcel,F:\newReposMay17\asposecells_Aspose_Cells_NET\Plugins\VisualStudio\Aspose.Excel.GridViewExport\.NET 2.0\ExportableGridView.cs,ExportButton_Click,The length of the statement  "		workbook.Save (HttpContext.Current.Response' fileNameWithExtension' ContentDisposition.Inline' GetSaveFormat (ExcelOutputFormat.ToString ())); " is 142.
Empty Catch Block,Aspose.Excel.GridViewExport,ExportGridViewToExcel,F:\newReposMay17\asposecells_Aspose_Cells_NET\Plugins\VisualStudio\Aspose.Excel.GridViewExport\.NET 2.0\ExportableGridView.cs,ExportButton_Click,The method has an empty catch block.
Magic Number,Aspose.Excel.GridViewExport,ExportGridViewToExcel,F:\newReposMay17\asposecells_Aspose_Cells_NET\Plugins\VisualStudio\Aspose.Excel.GridViewExport\.NET 2.0\ExportableGridView.cs,ExportButton_Click,The following statement contains a magic number: using (MemoryStream stream = new MemoryStream (Encoding.ASCII.GetBytes (pageSource))) {  	var loadOptions = new LoadOptions (LoadFormat.Html) {  		ConvertNumericData = false  	};  	Workbook workbook = new Workbook (stream' loadOptions);  	Worksheet worksheet = workbook.Worksheets [0];  	worksheet.AutoFitColumns ();  	worksheet.AutoFitRows ();  	Aspose.Cells.Cells cells = worksheet.Cells;  	Range range = worksheet.Cells.MaxDisplayRange;  	int tcols = range.ColumnCount;  	int trows = range.RowCount;  	for (int i = 0; i < trows; i++) {  		for (int j = 0; j < tcols; j++) {  			if (cells [i' j].Type != CellValueType.IsNull) {  				Aspose.Cells.Style style = cells [i' j].GetStyle ();  				if (i == 0) {  					style.Font.IsBold = true;  				}  				style.Borders [BorderType.TopBorder].LineStyle = CellBorderType.Thin;  				style.Borders [BorderType.TopBorder].Color = Color.Black;  				style.Borders [BorderType.BottomBorder].LineStyle = CellBorderType.Thin;  				style.Borders [BorderType.BottomBorder].Color = Color.Black;  				style.Borders [BorderType.LeftBorder].LineStyle = CellBorderType.Thin;  				style.Borders [BorderType.LeftBorder].Color = Color.Black;  				style.Borders [BorderType.RightBorder].LineStyle = CellBorderType.Thin;  				style.Borders [BorderType.RightBorder].Color = Color.Black;  				cells [i' j].SetStyle (style);  			}  		}  	}  	worksheet.Cells.InsertColumn (0);  	worksheet.Cells.InsertRow (0);  	worksheet.Cells ["B1"].HtmlString = heading;  	worksheet.Cells.InsertRow (0);  	worksheet.Cells.InsertRow (2);  	Aspose.Cells.Style style2 = worksheet.Cells ["B2"].GetStyle ();  	style2.Font.Size = 20;  	style2.Borders.SetStyle (CellBorderType.None);  	worksheet.Cells ["B2"].SetStyle (style2);  	string extension = ExcelOutputFormat.ToString ().ToLower ();  	if (string.IsNullOrEmpty (extension))  		extension = "xls";  	string fileNameWithExtension = System.Guid.NewGuid () + "." + extension;  	if (!string.IsNullOrEmpty (ExportOutputPathOnServer) && Directory.Exists (ExportOutputPathOnServer)) {  		try {  			workbook.Save (ExportOutputPathOnServer + "\\" + fileNameWithExtension);  		} catch (Exception) {  		}  	}  	workbook.Save (HttpContext.Current.Response' fileNameWithExtension' ContentDisposition.Inline' GetSaveFormat (ExcelOutputFormat.ToString ()));  	HttpContext.Current.Response.End ();  }  
Magic Number,Aspose.Excel.GridViewExport,ExportGridViewToExcel,F:\newReposMay17\asposecells_Aspose_Cells_NET\Plugins\VisualStudio\Aspose.Excel.GridViewExport\.NET 2.0\ExportableGridView.cs,ExportButton_Click,The following statement contains a magic number: using (MemoryStream stream = new MemoryStream (Encoding.ASCII.GetBytes (pageSource))) {  	var loadOptions = new LoadOptions (LoadFormat.Html) {  		ConvertNumericData = false  	};  	Workbook workbook = new Workbook (stream' loadOptions);  	Worksheet worksheet = workbook.Worksheets [0];  	worksheet.AutoFitColumns ();  	worksheet.AutoFitRows ();  	Aspose.Cells.Cells cells = worksheet.Cells;  	Range range = worksheet.Cells.MaxDisplayRange;  	int tcols = range.ColumnCount;  	int trows = range.RowCount;  	for (int i = 0; i < trows; i++) {  		for (int j = 0; j < tcols; j++) {  			if (cells [i' j].Type != CellValueType.IsNull) {  				Aspose.Cells.Style style = cells [i' j].GetStyle ();  				if (i == 0) {  					style.Font.IsBold = true;  				}  				style.Borders [BorderType.TopBorder].LineStyle = CellBorderType.Thin;  				style.Borders [BorderType.TopBorder].Color = Color.Black;  				style.Borders [BorderType.BottomBorder].LineStyle = CellBorderType.Thin;  				style.Borders [BorderType.BottomBorder].Color = Color.Black;  				style.Borders [BorderType.LeftBorder].LineStyle = CellBorderType.Thin;  				style.Borders [BorderType.LeftBorder].Color = Color.Black;  				style.Borders [BorderType.RightBorder].LineStyle = CellBorderType.Thin;  				style.Borders [BorderType.RightBorder].Color = Color.Black;  				cells [i' j].SetStyle (style);  			}  		}  	}  	worksheet.Cells.InsertColumn (0);  	worksheet.Cells.InsertRow (0);  	worksheet.Cells ["B1"].HtmlString = heading;  	worksheet.Cells.InsertRow (0);  	worksheet.Cells.InsertRow (2);  	Aspose.Cells.Style style2 = worksheet.Cells ["B2"].GetStyle ();  	style2.Font.Size = 20;  	style2.Borders.SetStyle (CellBorderType.None);  	worksheet.Cells ["B2"].SetStyle (style2);  	string extension = ExcelOutputFormat.ToString ().ToLower ();  	if (string.IsNullOrEmpty (extension))  		extension = "xls";  	string fileNameWithExtension = System.Guid.NewGuid () + "." + extension;  	if (!string.IsNullOrEmpty (ExportOutputPathOnServer) && Directory.Exists (ExportOutputPathOnServer)) {  		try {  			workbook.Save (ExportOutputPathOnServer + "\\" + fileNameWithExtension);  		} catch (Exception) {  		}  	}  	workbook.Save (HttpContext.Current.Response' fileNameWithExtension' ContentDisposition.Inline' GetSaveFormat (ExcelOutputFormat.ToString ()));  	HttpContext.Current.Response.End ();  }  
Magic Number,Aspose.Excel.GridViewExport,ExportGridViewToExcel,F:\newReposMay17\asposecells_Aspose_Cells_NET\Plugins\VisualStudio\Aspose.Excel.GridViewExport\.NET 2.0\ExportableGridView.cs,ExportButton_Click,The following statement contains a magic number: worksheet.Cells.InsertRow (2);  
Magic Number,Aspose.Excel.GridViewExport,ExportGridViewToExcel,F:\newReposMay17\asposecells_Aspose_Cells_NET\Plugins\VisualStudio\Aspose.Excel.GridViewExport\.NET 2.0\ExportableGridView.cs,ExportButton_Click,The following statement contains a magic number: style2.Font.Size = 20;  
