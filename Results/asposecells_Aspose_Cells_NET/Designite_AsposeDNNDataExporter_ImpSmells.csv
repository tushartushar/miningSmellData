Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Aspose.DotNetNuke.Modules.AsposeDNNDataExporterExcel.Data,DataProvider,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DatabaseDataExporterToExcel\Data\DataProvider.cs,Instance,The length of the statement  "                const string assembly = "Aspose.DotNetNuke.Modules.AsposeDNNDataExporterExcel.Data.SqlDataprovider'AsposeDNNDataExporter"; " is 122.
Long Statement,Aspose.DotNetNuke.Modules.AsposeDNNDataExporterExcel.Data,DataProvider,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DatabaseDataExporterToExcel\Data\DataProvider.cs,GetConnection,The length of the statement  "            if (!String.IsNullOrEmpty(objProvider.Attributes["connectionStringName"]) && !String.IsNullOrEmpty(System.Configuration.ConfigurationManager.AppSettings[objProvider.Attributes["connectionStringName"]])) " is 202.
Long Statement,Aspose.DotNetNuke.Modules.AsposeDNNDataExporterExcel.Data,DataProvider,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DatabaseDataExporterToExcel\Data\DataProvider.cs,GetConnection,The length of the statement  "                _connectionString = System.Configuration.ConfigurationManager.AppSettings[objProvider.Attributes["connectionStringName"]]; " is 122.
Missing Default,Aspose.DotNetNuke.Modules.AsposeDNNDataExporterExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DatabaseDataExporterToExcel\View.ascx.cs,ProcessButton_Click,The following switch statement is missing a default case: switch (ddlSource.SelectedValue)                  {                      case "0":                          if (ddlTables.Items.Count <= 0)                          {                              success_msg.Visible = false;                              error_msg.Visible = true;                              error_msg.InnerHtml = "There are no tables to select data.";                              return;                          }                          Query = "SELECT * FROM " + ddlTables.SelectedValue + " ORDER BY 1";                          break;                      case "1":                          if (ddlViews.Items.Count <= 0)                          {                              success_msg.Visible = false;                              error_msg.Visible = true;                              error_msg.InnerHtml = "There are no views to select data.";                              return;                          }                          Query = "SELECT * FROM " + ddlViews.SelectedValue;                          break;                      case "2":                          if (txtCustomQuery.Text.Trim().Equals(""))                          {                              success_msg.Visible = false;                              error_msg.Visible = true;                              error_msg.InnerHtml = "Please enter custom query.";                              return;                          }                          Query = txtCustomQuery.Text.Trim();                          break;                  }
Missing Default,Aspose.DotNetNuke.Modules.AsposeDNNDataExporterExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DatabaseDataExporterToExcel\View.ascx.cs,InitForm,The following switch statement is missing a default case: switch (ddlSource.SelectedValue)              {                  case "0":                      ddlTables.Style["display"] = "block";                      break;                  case "1":                      ddlViews.Style["display"] = "block";                      break;                  case "2":                      txtCustomQuery.Style["display"] = "block";                      break;              }
Missing Default,Aspose.DotNetNuke.Modules.AsposeDNNDataExporterExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DatabaseDataExporterToExcel\View.ascx.cs,GetSaveFormat,The following switch statement is missing a default case: switch (format)              {                  case "xlsx":                      saveOption = new XlsSaveOptions(SaveFormat.Xlsx); break;                  case "xlsb":                      saveOption = new XlsSaveOptions(SaveFormat.Xlsb); break;                  case "xls":                      saveOption = new XlsSaveOptions(SaveFormat.Excel97To2003); break;                  case "txt":                      saveOption = new XlsSaveOptions(SaveFormat.TabDelimited); break;                  case "csv":                      saveOption = new XlsSaveOptions(SaveFormat.CSV); break;                  case "ods":                      saveOption = new XlsSaveOptions(SaveFormat.ODS); break;              }
