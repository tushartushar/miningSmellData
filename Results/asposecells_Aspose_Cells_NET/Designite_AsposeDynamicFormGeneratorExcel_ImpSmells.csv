Implementation smell,Namespace,Class,File,Method,Description
Long Method,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,ProcessButton_Click,The method has 115 lines of code.
Long Method,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The method has 186 lines of code.
Complex Method,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,Settings,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\Settings.ascx.cs,GridView1_RowCommand,Cyclomatic complexity of the method is 9
Complex Method,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,Settings,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\Settings.ascx.cs,ProcessButton_Click,Cyclomatic complexity of the method is 9
Complex Method,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,ProcessButton_Click,Cyclomatic complexity of the method is 19
Complex Method,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,Cyclomatic complexity of the method is 28
Long Statement,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel.Data,DataProvider,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\Data\DataProvider.cs,Instance,The length of the statement  "                const string assembly = "Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel.Data.SqlDataprovider'AsposeDNNDynamicFormGenerator"; " is 135.
Long Statement,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel.Data,DataProvider,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\Data\DataProvider.cs,GetConnection,The length of the statement  "            if (!String.IsNullOrEmpty(objProvider.Attributes["connectionStringName"]) && !String.IsNullOrEmpty(System.Configuration.ConfigurationManager.AppSettings[objProvider.Attributes["connectionStringName"]])) " is 202.
Long Statement,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel.Data,DataProvider,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\Data\DataProvider.cs,GetConnection,The length of the statement  "                _connectionString = System.Configuration.ConfigurationManager.AppSettings[objProvider.Attributes["connectionStringName"]]; " is 122.
Long Statement,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,Edit,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\Edit.ascx.cs,ProcessButton_Click,The length of the statement  "                FileStream fstream = new FileStream(Server.MapPath("~/DesktopModules/Aspose.DNN.DynamicFormGenerator.Excel/Docs/AsposeDynamicFormsDataFile.xlsx")' FileMode.Open' FileAccess.Read); " is 179.
Long Statement,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,Edit,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\Edit.ascx.cs,ProcessButton_Click,The length of the statement  "                    dataTable = worksheet.Cells.ExportDataTableAsString(0' 0' worksheet.Cells.Rows.Count' worksheet.Cells.Columns.Count' true); " is 123.
Long Statement,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,Settings,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\Settings.ascx.cs,ProcessButton_Click,The length of the statement  "                                FileStream fstream = new FileStream(Server.MapPath("~/DesktopModules/Aspose.DNN.DynamicFormGenerator.Excel/Docs/AsposeDynamicFormsDataFile.xlsx")' FileMode.Open' FileAccess.Read); " is 179.
Long Statement,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,Settings,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\Settings.ascx.cs,ProcessButton_Click,The length of the statement  "                                workbook.Save(Server.MapPath("~/DesktopModules/Aspose.DNN.DynamicFormGenerator.Excel/Docs/AsposeDynamicFormsDataFile.xlsx")' SaveFormat.Xlsx); " is 142.
Long Statement,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,Settings,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\Settings.ascx.cs,PopulateGrid,The length of the statement  "                    FileStream fstream = new FileStream(Server.MapPath("~/DesktopModules/Aspose.DNN.DynamicFormGenerator.Excel/Docs/AsposeDynamicFormsDataFile.xlsx")' FileMode.Open' FileAccess.Read); " is 179.
Long Statement,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,ProcessButton_Click,The length of the statement  "                FileStream fstream = new FileStream(Server.MapPath("~/DesktopModules/Aspose.DNN.DynamicFormGenerator.Excel/Docs/AsposeDynamicFormsDataFile.xlsx")' FileMode.Open' FileAccess.Read); " is 179.
Long Statement,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,ProcessButton_Click,The length of the statement  "                    dataTable = worksheet.Cells.ExportDataTableAsString(0' 0' worksheet.Cells.Rows.Count' worksheet.Cells.Columns.Count' true); " is 123.
Long Statement,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,ProcessButton_Click,The length of the statement  "                workbook.Save(Server.MapPath("~/DesktopModules/Aspose.DNN.DynamicFormGenerator.Excel/Docs/AsposeDynamicFormsDataFile.xlsx")' SaveFormat.Xlsx); " is 142.
Long Statement,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The length of the statement  "                    FileStream fstream = new FileStream(Server.MapPath("~/DesktopModules/Aspose.DNN.DynamicFormGenerator.Excel/Docs/AsposeDynamicFormsDataFile.xlsx")' FileMode.Open' FileAccess.Read); " is 179.
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,Settings,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\Settings.ascx.cs,PopulateGrid,The following statement contains a magic number: dataTable = worksheet.Cells.ExportDataTableAsString(0' 0' worksheet.Cells.Rows.Count' 10' true);
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,ProcessButton_Click,The following statement contains a magic number: DataTable dataTable1 = worksheet1.Cells.ExportDataTableAsString(0' 0' worksheet1.Cells.Rows.Count' 10' true);
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,ProcessButton_Click,The following statement contains a magic number: row[2].ToString().Trim().Split(';')
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: dataTable = worksheet.Cells.ExportDataTableAsString(0' 0' worksheet.Cells.Rows.Count' 10' true);
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: switch (fieldType)                                  {                                      case "Title":                                          {                                              lblTitle.Text = row[4].ToString().Trim();                                          }                                          break;                                      case "Success":                                          {                                              success_msg.InnerText = row[4].ToString().Trim();                                          }                                          break;                                      case "Text":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString();                                              lbl.Text = row[3].ToString();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "MultiText":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                TextBox textBox = new TextBox();                                              textBox.ID = row[2].ToString().Trim();                                              textBox.Attributes.Add("placeholder"' row[4].ToString().Trim());                                              textBox.TextMode = TextBoxMode.MultiLine;                                              textBox.Rows = 5;                                              if (myPlaceHolder.FindControl(textBox.ID) == null)                                                  myPlaceHolder.Controls.Add(textBox);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      case "Radio":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[2].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      RadioButton radioButton = new RadioButton();                                                      radioButton.GroupName = "RadioGroup" + rows.ToString();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          radioButton.Text = row[4].ToString().Trim().Split(';')[i];                                                          radioButton.ID = row[2].ToString().Trim().Split(';')[i];                                                          if (i == 0)                                                          {                                                              radioButton.Checked = true;                                                          }                                                      }                                                      if (myPlaceHolder.FindControl(radioButton.ID) == null)                                                          myPlaceHolder.Controls.Add(radioButton);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "Check":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                int i = 0;                                              foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      CheckBox checkBox = new CheckBox();                                                        if (row[4].ToString().Trim().Split(';').Length >= i)                                                      {                                                          checkBox.Text = row[4].ToString().Trim().Split(';')[i];                                                          checkBox.ID = row[2].ToString().Trim().Split(';')[i];                                                      }                                                      if (myPlaceHolder.FindControl(checkBox.ID) == null)                                                          myPlaceHolder.Controls.Add(checkBox);                                                      i++;                                                  }                                              }                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                            }                                          break;                                      case "DropDown":                                          {                                              Label lbl = new Label();                                              lbl.ID = "lbl" + row[2].ToString().Trim();                                              lbl.Text = row[3].ToString().Trim();                                              lbl.CssClass = "dnnLabel";                                              myPlaceHolder.Controls.Add(lbl);                                                DropDownList dropdownList = new DropDownList();                                              dropdownList.ID = row[2].ToString().Trim();                                                foreach (string strItem in row[4].ToString().Trim().Split(';'))                                              {                                                  if (!strItem.Equals(""))                                                  {                                                      dropdownList.Items.Add(strItem);                                                  }                                              }                                              if (myPlaceHolder.FindControl(dropdownList.ID) == null)                                                  myPlaceHolder.Controls.Add(dropdownList);                                              LiteralControl literalBreak = new LiteralControl("<br />");                                              myPlaceHolder.Controls.Add(literalBreak);                                          }                                          break;                                      default:                                            break;                                  }
Magic Number,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,View,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\View.ascx.cs,InitForm,The following statement contains a magic number: !row[7].ToString().Trim().ToLower().Equals("false")
Missing Default,Aspose.DotNetNuke.Modules.AsposeDynamicFormGeneratorExcel,Edit,D:\research\architectureSmells\repos\asposecells_Aspose_Cells_NET\Plugins\DNN\Aspose.DNN.DynamicFormBuilderExcel\Edit.ascx.cs,GetSaveFormat,The following switch statement is missing a default case: switch (format)              {                  case "xlsx":                      saveOption = new XlsSaveOptions(SaveFormat.Xlsx); break;                  case "xlsb":                      saveOption = new XlsSaveOptions(SaveFormat.Xlsb); break;                  case "xls":                      saveOption = new XlsSaveOptions(SaveFormat.Excel97To2003); break;                  case "txt":                      saveOption = new XlsSaveOptions(SaveFormat.TabDelimited); break;                  case "csv":                      saveOption = new XlsSaveOptions(SaveFormat.CSV); break;                  case "ods":                      saveOption = new XlsSaveOptions(SaveFormat.ODS); break;              }
