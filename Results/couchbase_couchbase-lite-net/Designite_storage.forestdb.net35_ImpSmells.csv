Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,GetPossibleAncestors,Cyclomatic complexity of the method is 11
Complex Method,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,GetAllDocs,Cyclomatic complexity of the method is 10
Complex Method,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UpdateIndexes,Cyclomatic complexity of the method is 10
Complex Method,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,RegularQuery,Cyclomatic complexity of the method is 8
Complex Method,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,ReducedQuery,Cyclomatic complexity of the method is 12
Long Parameter List,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The method has 5 parameters. Parameters: docId' revId' withBody' create' block
Long Parameter List,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,PutRevision,The method has 7 parameters. Parameters: inDocId' inPrevRevId' properties' deleting' allowConflict' source' validationBlock
Long Parameter List,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,CreateReducedRow,The method has 7 parameters. Parameters: key' group' groupLevel' reduce' filter' keysToReduce' valsToReduce
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The length of the statement  "                        RetryHandler.RetryIfBusy().AllowError(410' C4ErrorDomain.HTTP).Execute((err => Native.c4doc_loadRevisionBody(doc' err))); " is 121.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,ChangesSince,The length of the statement  "                        var selection = enumerator.Select<CBForestDocStatus' RevisionInternal>(x => new ForestRevisionInternal(x.GetDocument()' includeBody)); " is 134.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,GetAllDocs,The length of the statement  "                    Log.To.Query.V(TAG' "AllDocs: No such row with key=\"{0}\""' new SecureLogString(docID' LogMessageSensitivity.PotentiallyInsecure)); " is 132.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,PutRevision,The length of the statement  "                        var existing = (C4Document*)ForestDBBridge.Check(err => Native.c4doc_getForPut(nativeDb' docId' prevRevId?.ToString()' deleting' " is 128.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,PutRevision,The length of the statement  "                            Log.To.Validation.I(TAG' "{0} ({1}) failed validation"' new SecureLogString(docId' LogMessageSensitivity.PotentiallyInsecure)' new SecureLogString(newRevID' LogMessageSensitivity.PotentiallyInsecure)); " is 201.
Complex Conditional,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,ReducedQuery,The conditional expression  "lastKey != null && (key == null || (group && !GroupTogether(lastKey' key' groupLevel)))"  is complex.
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: try {                   doc = (C4Document *)RetryHandler.RetryIfBusy().AllowErrors(                      new C4Error() { code = 404' domain = C4ErrorDomain.HTTP }'                      new C4Error() { code = (int)ForestDBStatus.KeyNotFound' domain = C4ErrorDomain.ForestDB })                      .Execute(err => Native.c4doc_get(Forest' docId' !create' err));                  if(doc != null) {                      var selected = true;                      if(revId != null) {                          selected = RetryHandler.RetryIfBusy().HandleExceptions(e =>                          {                              if(e.Code == 404) {                                  Native.c4doc_free(doc);                                  doc = null;                                  return;                              }                                throw e;                          }).AllowError(410' C4ErrorDomain.HTTP).Execute(err =>                          {                              bool result = false;                              revId.PinAndUse(slice =>                              {                                  result = Native.c4doc_selectRevision(doc' slice' withBody' err);                              });                                return result;                          });                      }                        if(selected && withBody) {                          RetryHandler.RetryIfBusy().AllowError(410' C4ErrorDomain.HTTP).Execute((err => Native.c4doc_loadRevisionBody(doc' err)));                      }                  }                    block(doc);              } finally {                  Native.c4doc_free(doc);              }
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: try {                   doc = (C4Document *)RetryHandler.RetryIfBusy().AllowErrors(                      new C4Error() { code = 404' domain = C4ErrorDomain.HTTP }'                      new C4Error() { code = (int)ForestDBStatus.KeyNotFound' domain = C4ErrorDomain.ForestDB })                      .Execute(err => Native.c4doc_get(Forest' docId' !create' err));                  if(doc != null) {                      var selected = true;                      if(revId != null) {                          selected = RetryHandler.RetryIfBusy().HandleExceptions(e =>                          {                              if(e.Code == 404) {                                  Native.c4doc_free(doc);                                  doc = null;                                  return;                              }                                throw e;                          }).AllowError(410' C4ErrorDomain.HTTP).Execute(err =>                          {                              bool result = false;                              revId.PinAndUse(slice =>                              {                                  result = Native.c4doc_selectRevision(doc' slice' withBody' err);                              });                                return result;                          });                      }                        if(selected && withBody) {                          RetryHandler.RetryIfBusy().AllowError(410' C4ErrorDomain.HTTP).Execute((err => Native.c4doc_loadRevisionBody(doc' err)));                      }                  }                    block(doc);              } finally {                  Native.c4doc_free(doc);              }
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: try {                   doc = (C4Document *)RetryHandler.RetryIfBusy().AllowErrors(                      new C4Error() { code = 404' domain = C4ErrorDomain.HTTP }'                      new C4Error() { code = (int)ForestDBStatus.KeyNotFound' domain = C4ErrorDomain.ForestDB })                      .Execute(err => Native.c4doc_get(Forest' docId' !create' err));                  if(doc != null) {                      var selected = true;                      if(revId != null) {                          selected = RetryHandler.RetryIfBusy().HandleExceptions(e =>                          {                              if(e.Code == 404) {                                  Native.c4doc_free(doc);                                  doc = null;                                  return;                              }                                throw e;                          }).AllowError(410' C4ErrorDomain.HTTP).Execute(err =>                          {                              bool result = false;                              revId.PinAndUse(slice =>                              {                                  result = Native.c4doc_selectRevision(doc' slice' withBody' err);                              });                                return result;                          });                      }                        if(selected && withBody) {                          RetryHandler.RetryIfBusy().AllowError(410' C4ErrorDomain.HTTP).Execute((err => Native.c4doc_loadRevisionBody(doc' err)));                      }                  }                    block(doc);              } finally {                  Native.c4doc_free(doc);              }
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: try {                   doc = (C4Document *)RetryHandler.RetryIfBusy().AllowErrors(                      new C4Error() { code = 404' domain = C4ErrorDomain.HTTP }'                      new C4Error() { code = (int)ForestDBStatus.KeyNotFound' domain = C4ErrorDomain.ForestDB })                      .Execute(err => Native.c4doc_get(Forest' docId' !create' err));                  if(doc != null) {                      var selected = true;                      if(revId != null) {                          selected = RetryHandler.RetryIfBusy().HandleExceptions(e =>                          {                              if(e.Code == 404) {                                  Native.c4doc_free(doc);                                  doc = null;                                  return;                              }                                throw e;                          }).AllowError(410' C4ErrorDomain.HTTP).Execute(err =>                          {                              bool result = false;                              revId.PinAndUse(slice =>                              {                                  result = Native.c4doc_selectRevision(doc' slice' withBody' err);                              });                                return result;                          });                      }                        if(selected && withBody) {                          RetryHandler.RetryIfBusy().AllowError(410' C4ErrorDomain.HTTP).Execute((err => Native.c4doc_loadRevisionBody(doc' err)));                      }                  }                    block(doc);              } finally {                  Native.c4doc_free(doc);              }
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) ||                  (c > 64 && c < 91) ||                  (c > 96 && c < 123) ||                  c == 45 || c == 46 || c == 95 || c > 127;
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) ||                  (c > 64 && c < 91) ||                  (c > 96 && c < 123) ||                  c == 45 || c == 46 || c == 95 || c > 127;
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) ||                  (c > 64 && c < 91) ||                  (c > 96 && c < 123) ||                  c == 45 || c == 46 || c == 95 || c > 127;
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) ||                  (c > 64 && c < 91) ||                  (c > 96 && c < 123) ||                  c == 45 || c == 46 || c == 95 || c > 127;
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) ||                  (c > 64 && c < 91) ||                  (c > 96 && c < 123) ||                  c == 45 || c == 46 || c == 95 || c > 127;
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) ||                  (c > 64 && c < 91) ||                  (c > 96 && c < 123) ||                  c == 45 || c == 46 || c == 95 || c > 127;
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) ||                  (c > 64 && c < 91) ||                  (c > 96 && c < 123) ||                  c == 45 || c == 46 || c == 95 || c > 127;
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) ||                  (c > 64 && c < 91) ||                  (c > 96 && c < 123) ||                  c == 45 || c == 46 || c == 95 || c > 127;
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) ||                  (c > 64 && c < 91) ||                  (c > 96 && c < 123) ||                  c == 45 || c == 46 || c == 95 || c > 127;
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) ||                  (c > 64 && c < 91) ||                  (c > 96 && c < 123) ||                  c == 45 || c == 46 || c == 95 || c > 127;
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,EscapeString,The following statement contains a magic number: var buffer = new byte[6];
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,EscapeString,The following statement contains a magic number: fixed (byte* bufPtr = buffer)              fixed (char* ptr = unescaped)              {                  var currentCharPtr = ptr;                  while(length < unescaped.Length) {                      var numBytes = Encoding.UTF8.GetBytes(currentCharPtr' 1' bufPtr' 6);                      if(IsLegalChar(buffer[0])) {                          sb.Append(*currentCharPtr);                      } else {                          sb.AppendFormat("@{0}"' Misc.ConvertToHex(buffer' numBytes));                      }                        currentCharPtr++;                      length++;                  }              }
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UnescapeString,The following statement contains a magic number: var buffer = new char[2];
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UnescapeString,The following statement contains a magic number: foreach(var c in escaped) {                  if(c == '@') {                      charCounter = 1;                      continue;                  } else if(charCounter > 0) {                      buffer[charCounter - 1] = c;                      if(charCounter == 2) {                          sb.Append((char)Convert.ToByte(new string(buffer)' 16));                          charCounter = 0;                      } else {                          charCounter++;                      }                  } else {                      sb.Append(c);                  }              }
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UnescapeString,The following statement contains a magic number: foreach(var c in escaped) {                  if(c == '@') {                      charCounter = 1;                      continue;                  } else if(charCounter > 0) {                      buffer[charCounter - 1] = c;                      if(charCounter == 2) {                          sb.Append((char)Convert.ToByte(new string(buffer)' 16));                          charCounter = 0;                      } else {                          charCounter++;                      }                  } else {                      sb.Append(c);                  }              }
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,RegularQuery,The following statement contains a magic number: foreach(var next in enumerator) {                  var key = CouchbaseBridge.DeserializeKey<object>(next.Key);                  var value = (next.Value as IEnumerable<byte>).ToArray();                  var docRevision = default(RevisionInternal);                  if(value.Length == 1 && value[0] == 42) {                      docRevision = _dbStorage.GetDocument(next.DocID' null' true);                  } else {                      docRevision = _dbStorage.GetDocument(next.DocID' null' optionsCopy.IncludeDocs);                  }                    var row = new QueryRow(next.DocID' next.DocSequence' key' value' docRevision' this);                  if(filter != null) {                      if(!filter(row)) {                          continue;                      }                        if(skip > 0) {                          skip--;                          continue;                      }                        if(limit-- == 0) {                          yield break;                      }                  }                    Log.To.Query.V(Tag' "Query {0} found row with key={1}' value={2}' id={3}"' Name'                      new SecureLogJsonString(key' LogMessageSensitivity.PotentiallyInsecure)'                      new SecureLogString(value' LogMessageSensitivity.PotentiallyInsecure)'                      new SecureLogString(next.DocID' LogMessageSensitivity.PotentiallyInsecure));                  yield return row;              }
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,ReducedQuery,The following statement contains a magic number: if(reduce != null) {                  keysToReduce = new List<object>(100);                  valsToReduce = new List<object>(100);              }
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,ReducedQuery,The following statement contains a magic number: if(reduce != null) {                  keysToReduce = new List<object>(100);                  valsToReduce = new List<object>(100);              }
Missing Default,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,ForestDBCouchStore,The following switch statement is missing a default case: switch(level) {                      case C4LogLevel.Debug:                          Log.To.Database.D("ForestDB"' msg);                          break;                      case C4LogLevel.Info:                          Log.To.Database.V("ForestDB"' msg);                          break;                      case C4LogLevel.Warning:                          Log.To.Database.W("ForestDB"' msg);                          break;                      case C4LogLevel.Error:                          Log.To.Database.E("ForestDB"' msg);                          break;                  }
Missing Default,Couchbase.Lite,JsonC4KeyReader,C:\repos\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\JsonC4KeyReader.cs,Read,The following switch statement is missing a default case: switch (Native.c4key_peek(r)) {                      case C4KeyToken.Array:                          Native.c4key_skipToken(r);                          SetToken(Newtonsoft.Json.JsonToken.StartArray);                          _sequenceStack.Push(Newtonsoft.Json.JsonToken.StartArray);                          break;                      case C4KeyToken.Bool:                          SetToken(Newtonsoft.Json.JsonToken.Boolean' Native.c4key_readBool(r));                          break;                      case C4KeyToken.EndSequence:                          {                              Native.c4key_skipToken(r);                              var lastSequence = _sequenceStack.Pop();                              if (lastSequence == Newtonsoft.Json.JsonToken.StartArray) {                                  SetToken(Newtonsoft.Json.JsonToken.EndArray);                              } else {                                  SetToken(Newtonsoft.Json.JsonToken.EndObject);                              }                                break;                          }                      case C4KeyToken.Map:                          Native.c4key_skipToken(r);                          SetToken(Newtonsoft.Json.JsonToken.StartObject);                          _sequenceStack.Push(Newtonsoft.Json.JsonToken.StartObject);                          break;                      case C4KeyToken.Null:                          Native.c4key_skipToken(r);                          SetToken(Newtonsoft.Json.JsonToken.Null' null);                          break;                      case C4KeyToken.Number:                          SetToken(Newtonsoft.Json.JsonToken.Float' Native.c4key_readNumber(r));                          break;                      case C4KeyToken.String:                          {                              var lastSequence = _sequenceStack.Count > 0 ? _sequenceStack.Peek() :                                   Newtonsoft.Json.JsonToken.None;                              if (lastSequence == Newtonsoft.Json.JsonToken.StartObject) {                                  SetToken(Newtonsoft.Json.JsonToken.PropertyName' Native.c4key_readString(r));                                  _sequenceStack.Push(Newtonsoft.Json.JsonToken.PropertyName);                              } else {                                  SetToken(Newtonsoft.Json.JsonToken.String' Native.c4key_readString(r));                                  if (lastSequence == Newtonsoft.Json.JsonToken.PropertyName) {                                      _sequenceStack.Pop();                                  }                              }                                break;                          }                      case C4KeyToken.Error:                          return false;                  }
