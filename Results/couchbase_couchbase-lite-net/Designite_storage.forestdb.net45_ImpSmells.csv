Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,GetPossibleAncestors,Cyclomatic complexity of the method is 8
Complex Method,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,ChangesSince,Cyclomatic complexity of the method is 12
Complex Method,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,ChangesSinceStreaming,Cyclomatic complexity of the method is 12
Complex Method,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,GetAllDocs,Cyclomatic complexity of the method is 12
Complex Method,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,FindAllAttachmentKeys,Cyclomatic complexity of the method is 9
Complex Method,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UpdateIndexes,Cyclomatic complexity of the method is 12
Complex Method,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,RegularQuery,Cyclomatic complexity of the method is 8
Complex Method,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,ReducedQuery,Cyclomatic complexity of the method is 15
Long Parameter List,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The method has 5 parameters.
Long Parameter List,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,PutRevision,The method has 7 parameters.
Long Parameter List,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,CreateReducedRow,The method has 7 parameters.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The length of the statement  "				RetryHandler.RetryIfBusy ().AllowError (410' C4ErrorDomain.HTTP).Execute ((err => Native.c4doc_loadRevisionBody (doc' err))); " is 125.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,Reopen,The length of the statement  "			throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.Unauthorized' TAG' "Failed to decrypt database' or it is corrupt"); " is 129.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,DeleteLocalRevision,The length of the statement  "		throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.BadId' TAG' "Local revision IDs must start with _local/"); " is 120.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,DeleteLocalRevision,The length of the statement  "			throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.NotFound' TAG' "No revision ID specified in local delete operation"); " is 131.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,DeleteLocalRevision,The length of the statement  "		throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.Conflict' TAG' "No revision ID specified in local delete operation"); " is 131.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,DeleteLocalRevision,The length of the statement  "				throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.NotFound' TAG' "Specified revision ({0}) in delete operation not found"' revId); " is 142.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,DeleteLocalRevision,The length of the statement  "				throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.Conflict' TAG' "Specified revision ({0}) in delete operation != current revision ({1})"' revId' currentRevID); " is 172.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,LoadRevisionBody,The length of the statement  "			throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.NotFound' TAG' "Cannot load revision body for non-existent revision {0}"' rev); " is 141.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,GetAllDocumentRevisions,The length of the statement  "			var expression = includeDeleted ? enumerator.Select (x => new ForestRevisionInternal (x.GetDocument ()' false)) : enumerator.Where (x => !x.SelectedRev.IsDeleted).Select (x => new ForestRevisionInternal (x.GetDocument ()' false)); " is 230.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,GetPossibleAncestors,The length of the statement  "			if (flags.HasFlag (C4RevisionFlags.RevLeaf) == (current == 1) && Native.c4rev_getGeneration (next.SelectedRev.revID) < generation) { " is 132.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,FindCommonAncestor,The length of the statement  "			if (possibleRevId.Generation <= generation && Native.c4doc_selectRevision (doc' possibleRevId.ToString ()' false' null)) { " is 122.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,ChangesSince,The length of the statement  "		throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.NotImplemented' TAG' "Descending ChangesSince is not currently implemented " + "(see https://github.com/couchbase/couchbase-lite-ios/issues/641)"); " is 209.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,ChangesSince,The length of the statement  "				var selection = enumerator.Select<CBForestDocStatus' RevisionInternal> (x => new ForestRevisionInternal (x.GetDocument ()' includeBody)); " is 137.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,ChangesSinceStreaming,The length of the statement  "		throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.NotImplemented' TAG' "Descending ChangesSince is not currently implemented " + "(see https://github.com/couchbase/couchbase-lite-ios/issues/641)"); " is 209.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,GetAllDocs,The length of the statement  "			Log.To.Query.V (TAG' "AllDocs: Found row with key=\"{0}\"' value={1}"' new SecureLogString (docID' LogMessageSensitivity.PotentiallyInsecure)' new SecureLogJsonString (value' LogMessageSensitivity.PotentiallyInsecure)); " is 219.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,GetAllDocs,The length of the statement  "			Log.To.Query.V (TAG' "AllDocs: No such row with key=\"{0}\""' new SecureLogString (docID' LogMessageSensitivity.PotentiallyInsecure)); " is 134.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,GetAllDocs,The length of the statement  "		var row = new QueryRow (value == null ? null : docID' sequenceNumber' docID' value' value == null ? null : new ForestRevisionInternal (next' options.IncludeDocs)' null); " is 169.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,PurgeRevisions,The length of the statement  "					throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.NotFound' TAG' "Invalid attempt to purge revisions of a nonexistent document (ID={0})"' new SecureLogString (docID' LogMessageSensitivity.PotentiallyInsecure)); " is 222.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,PurgeRevisions,The length of the statement  "					Log.To.Database.I (TAG' "Purged document '{0}'"' new SecureLogString (docID' LogMessageSensitivity.PotentiallyInsecure)); " is 121.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,PurgeRevisions,The length of the statement  "						Log.To.Database.I (TAG' "Purged doc '{0}' revs {1}"' new SecureLogString (docID' LogMessageSensitivity.PotentiallyInsecure)' new LogJsonString (revIDs)); " is 153.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,GetLocalDocument,The length of the statement  "			Log.To.Database.W (TAG' "Invalid JSON for document {0}\n{1}"' new SecureLogString (docId' LogMessageSensitivity.PotentiallyInsecure)' new SecureLogString (doc->body.ToArray ()' LogMessageSensitivity.PotentiallyInsecure)); " is 221.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,PutLocalRevision,The length of the statement  "		throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.BadId' TAG' "Invalid document ID ({0}) in write operation' it must start with _local/"' new SecureLogString (docId' LogMessageSensitivity.PotentiallyInsecure)); " is 222.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,PutLocalRevision,The length of the statement  "						throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.Conflict' TAG' "Attempt to write new revision on {0} of {1} when a newer revision ({2}) exists"' prevRevId' new SecureLogString (docId' LogMessageSensitivity.PotentiallyInsecure)' currentRevId); " is 256.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,PutLocalRevision,The length of the statement  "						throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.BadId' TAG' "Attempt to write new revision on invalid revision ID ({0}) for document {1}"' prevRevId' new SecureLogString (docId' LogMessageSensitivity.PotentiallyInsecure)); " is 236.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,PutLocalRevision,The length of the statement  "					throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.Conflict' TAG' "Revision ID not specified' but document {0} already exists (current rev: {1})"' new SecureLogString (docId' LogMessageSensitivity.PotentiallyInsecure)' currentRevId); " is 244.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,PutRevision,The length of the statement  "		throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.Forbidden' TAG' "Attempting to write to a readonly database (PutRevision)"); " is 138.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,PutRevision,The length of the statement  "				var existing = (C4Document*)ForestDBBridge.Check (err => Native.c4doc_getForPut (nativeDb' docId' prevRevId.ToString ()' deleting' allowConflict' err)); " is 152.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,PutRevision,The length of the statement  "					Log.To.Validation.I (TAG' "{0} ({1}) failed validation"' new SecureLogString (docId' LogMessageSensitivity.PotentiallyInsecure)' new SecureLogString (newRevID' LogMessageSensitivity.PotentiallyInsecure)); " is 204.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,ForceInsert,The length of the statement  "		throw Misc.CreateExceptionAndLog (Log.To.Database' StatusCode.Forbidden' TAG' "Attempting to write to a readonly database (ForceInsert)"); " is 138.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,ForceInsert,The length of the statement  "			ForestDBBridge.Check (err => Native.c4doc_insertRevisionWithHistory (doc' json' inRev.Deleted' inRev.GetAttachments () != null' revHistory.Select (x => x.ToString ()).ToArray ()' err)); " is 185.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,GetAllViews,The length of the statement  "	return System.IO.Directory.GetFiles (Directory' "*." + ForestDBViewStore.VIEW_INDEX_PATH_EXTENSION).Select (x => ForestDBViewStore.FileNameToViewName (Path.GetFileName (x))); " is 174.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,OpenIndexWithOptions,The length of the statement  "		return Native.c4view_open (_dbStorage.Forest' _path' Name' dryRun ? "0" : Delegate.MapVersion' options' &encryptionKey' err); " is 125.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,CreateReducedRow,The length of the statement  "		var row = new QueryRow (null' 0' group ? GroupKey (key' groupLevel) : null' CallReduce (reduce' keysToReduce' valsToReduce)' null' this); " is 137.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UpdateIndexes,The length of the statement  "				WithC4Keys (keys.ToArray ()' true' c4keys => ForestDBBridge.Check (err => Native.c4indexer_emit (indexer' next.GetDocument ()' (uint)i' c4keys' values.ToArray ()' err))); " is 170.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,RegularQuery,The length of the statement  "		Log.To.Query.V (Tag' "Query {0} found row with key={1}' value={2}' id={3}"' Name' new SecureLogJsonString (key' LogMessageSensitivity.PotentiallyInsecure)' new SecureLogString (value' LogMessageSensitivity.PotentiallyInsecure)' new SecureLogString (next.DocID' LogMessageSensitivity.PotentiallyInsecure)); " is 305.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,ReducedQuery,The length of the statement  "			throw Misc.CreateExceptionAndLog (Log.To.Query' StatusCode.BadParam' Tag' "Cannot use reduce option in view {0} which has no reduce block defined"' Name); " is 154.
Long Statement,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,ReducedQuery,The length of the statement  "				Log.To.Query.V (Tag' "Query {0} reduced row with key={1} value={2}"' Name' new SecureLogJsonString (key' LogMessageSensitivity.PotentiallyInsecure)' new SecureLogJsonString (value' LogMessageSensitivity.PotentiallyInsecure)); " is 225.
Complex Conditional,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,ReducedQuery,The conditional expression  "lastKey != null && (key == null || (group && !GroupTogether (lastKey' key' groupLevel)))"  is complex.
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: try {  	doc = (C4Document*)RetryHandler.RetryIfBusy ().AllowErrors (new C4Error () {  		code = 404'  		domain = C4ErrorDomain.HTTP  	}' new C4Error () {  		code = (int)ForestDBStatus.KeyNotFound'  		domain = C4ErrorDomain.ForestDB  	}).Execute (err => Native.c4doc_get (Forest' docId' !create' err));  	if (doc != null) {  		var selected = true;  		if (revId != null) {  			selected = RetryHandler.RetryIfBusy ().HandleExceptions (e => {  				if (e.Code == 404) {  					Native.c4doc_free (doc);  					doc = null;  					return;  				}  				throw e;  			}).AllowError (410' C4ErrorDomain.HTTP).Execute (err => {  				bool result = false;  				revId.PinAndUse (slice => {  					result = Native.c4doc_selectRevision (doc' slice' withBody' err);  				});  				return result;  			});  		}  		if (selected && withBody) {  			RetryHandler.RetryIfBusy ().AllowError (410' C4ErrorDomain.HTTP).Execute ((err => Native.c4doc_loadRevisionBody (doc' err)));  		}  	}  	block (doc);  } finally {  	Native.c4doc_free (doc);  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: try {  	doc = (C4Document*)RetryHandler.RetryIfBusy ().AllowErrors (new C4Error () {  		code = 404'  		domain = C4ErrorDomain.HTTP  	}' new C4Error () {  		code = (int)ForestDBStatus.KeyNotFound'  		domain = C4ErrorDomain.ForestDB  	}).Execute (err => Native.c4doc_get (Forest' docId' !create' err));  	if (doc != null) {  		var selected = true;  		if (revId != null) {  			selected = RetryHandler.RetryIfBusy ().HandleExceptions (e => {  				if (e.Code == 404) {  					Native.c4doc_free (doc);  					doc = null;  					return;  				}  				throw e;  			}).AllowError (410' C4ErrorDomain.HTTP).Execute (err => {  				bool result = false;  				revId.PinAndUse (slice => {  					result = Native.c4doc_selectRevision (doc' slice' withBody' err);  				});  				return result;  			});  		}  		if (selected && withBody) {  			RetryHandler.RetryIfBusy ().AllowError (410' C4ErrorDomain.HTTP).Execute ((err => Native.c4doc_loadRevisionBody (doc' err)));  		}  	}  	block (doc);  } finally {  	Native.c4doc_free (doc);  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: try {  	doc = (C4Document*)RetryHandler.RetryIfBusy ().AllowErrors (new C4Error () {  		code = 404'  		domain = C4ErrorDomain.HTTP  	}' new C4Error () {  		code = (int)ForestDBStatus.KeyNotFound'  		domain = C4ErrorDomain.ForestDB  	}).Execute (err => Native.c4doc_get (Forest' docId' !create' err));  	if (doc != null) {  		var selected = true;  		if (revId != null) {  			selected = RetryHandler.RetryIfBusy ().HandleExceptions (e => {  				if (e.Code == 404) {  					Native.c4doc_free (doc);  					doc = null;  					return;  				}  				throw e;  			}).AllowError (410' C4ErrorDomain.HTTP).Execute (err => {  				bool result = false;  				revId.PinAndUse (slice => {  					result = Native.c4doc_selectRevision (doc' slice' withBody' err);  				});  				return result;  			});  		}  		if (selected && withBody) {  			RetryHandler.RetryIfBusy ().AllowError (410' C4ErrorDomain.HTTP).Execute ((err => Native.c4doc_loadRevisionBody (doc' err)));  		}  	}  	block (doc);  } finally {  	Native.c4doc_free (doc);  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: try {  	doc = (C4Document*)RetryHandler.RetryIfBusy ().AllowErrors (new C4Error () {  		code = 404'  		domain = C4ErrorDomain.HTTP  	}' new C4Error () {  		code = (int)ForestDBStatus.KeyNotFound'  		domain = C4ErrorDomain.ForestDB  	}).Execute (err => Native.c4doc_get (Forest' docId' !create' err));  	if (doc != null) {  		var selected = true;  		if (revId != null) {  			selected = RetryHandler.RetryIfBusy ().HandleExceptions (e => {  				if (e.Code == 404) {  					Native.c4doc_free (doc);  					doc = null;  					return;  				}  				throw e;  			}).AllowError (410' C4ErrorDomain.HTTP).Execute (err => {  				bool result = false;  				revId.PinAndUse (slice => {  					result = Native.c4doc_selectRevision (doc' slice' withBody' err);  				});  				return result;  			});  		}  		if (selected && withBody) {  			RetryHandler.RetryIfBusy ().AllowError (410' C4ErrorDomain.HTTP).Execute ((err => Native.c4doc_loadRevisionBody (doc' err)));  		}  	}  	block (doc);  } finally {  	Native.c4doc_free (doc);  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: doc = (C4Document*)RetryHandler.RetryIfBusy ().AllowErrors (new C4Error () {  	code = 404'  	domain = C4ErrorDomain.HTTP  }' new C4Error () {  	code = (int)ForestDBStatus.KeyNotFound'  	domain = C4ErrorDomain.ForestDB  }).Execute (err => Native.c4doc_get (Forest' docId' !create' err));  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: if (doc != null) {  	var selected = true;  	if (revId != null) {  		selected = RetryHandler.RetryIfBusy ().HandleExceptions (e => {  			if (e.Code == 404) {  				Native.c4doc_free (doc);  				doc = null;  				return;  			}  			throw e;  		}).AllowError (410' C4ErrorDomain.HTTP).Execute (err => {  			bool result = false;  			revId.PinAndUse (slice => {  				result = Native.c4doc_selectRevision (doc' slice' withBody' err);  			});  			return result;  		});  	}  	if (selected && withBody) {  		RetryHandler.RetryIfBusy ().AllowError (410' C4ErrorDomain.HTTP).Execute ((err => Native.c4doc_loadRevisionBody (doc' err)));  	}  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: if (doc != null) {  	var selected = true;  	if (revId != null) {  		selected = RetryHandler.RetryIfBusy ().HandleExceptions (e => {  			if (e.Code == 404) {  				Native.c4doc_free (doc);  				doc = null;  				return;  			}  			throw e;  		}).AllowError (410' C4ErrorDomain.HTTP).Execute (err => {  			bool result = false;  			revId.PinAndUse (slice => {  				result = Native.c4doc_selectRevision (doc' slice' withBody' err);  			});  			return result;  		});  	}  	if (selected && withBody) {  		RetryHandler.RetryIfBusy ().AllowError (410' C4ErrorDomain.HTTP).Execute ((err => Native.c4doc_loadRevisionBody (doc' err)));  	}  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: if (doc != null) {  	var selected = true;  	if (revId != null) {  		selected = RetryHandler.RetryIfBusy ().HandleExceptions (e => {  			if (e.Code == 404) {  				Native.c4doc_free (doc);  				doc = null;  				return;  			}  			throw e;  		}).AllowError (410' C4ErrorDomain.HTTP).Execute (err => {  			bool result = false;  			revId.PinAndUse (slice => {  				result = Native.c4doc_selectRevision (doc' slice' withBody' err);  			});  			return result;  		});  	}  	if (selected && withBody) {  		RetryHandler.RetryIfBusy ().AllowError (410' C4ErrorDomain.HTTP).Execute ((err => Native.c4doc_loadRevisionBody (doc' err)));  	}  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: if (revId != null) {  	selected = RetryHandler.RetryIfBusy ().HandleExceptions (e => {  		if (e.Code == 404) {  			Native.c4doc_free (doc);  			doc = null;  			return;  		}  		throw e;  	}).AllowError (410' C4ErrorDomain.HTTP).Execute (err => {  		bool result = false;  		revId.PinAndUse (slice => {  			result = Native.c4doc_selectRevision (doc' slice' withBody' err);  		});  		return result;  	});  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: if (revId != null) {  	selected = RetryHandler.RetryIfBusy ().HandleExceptions (e => {  		if (e.Code == 404) {  			Native.c4doc_free (doc);  			doc = null;  			return;  		}  		throw e;  	}).AllowError (410' C4ErrorDomain.HTTP).Execute (err => {  		bool result = false;  		revId.PinAndUse (slice => {  			result = Native.c4doc_selectRevision (doc' slice' withBody' err);  		});  		return result;  	});  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: selected = RetryHandler.RetryIfBusy ().HandleExceptions (e => {  	if (e.Code == 404) {  		Native.c4doc_free (doc);  		doc = null;  		return;  	}  	throw e;  }).AllowError (410' C4ErrorDomain.HTTP).Execute (err => {  	bool result = false;  	revId.PinAndUse (slice => {  		result = Native.c4doc_selectRevision (doc' slice' withBody' err);  	});  	return result;  });  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: selected = RetryHandler.RetryIfBusy ().HandleExceptions (e => {  	if (e.Code == 404) {  		Native.c4doc_free (doc);  		doc = null;  		return;  	}  	throw e;  }).AllowError (410' C4ErrorDomain.HTTP).Execute (err => {  	bool result = false;  	revId.PinAndUse (slice => {  		result = Native.c4doc_selectRevision (doc' slice' withBody' err);  	});  	return result;  });  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: if (e.Code == 404) {  	Native.c4doc_free (doc);  	doc = null;  	return;  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: if (selected && withBody) {  	RetryHandler.RetryIfBusy ().AllowError (410' C4ErrorDomain.HTTP).Execute ((err => Native.c4doc_loadRevisionBody (doc' err)));  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,WithC4Document,The following statement contains a magic number: RetryHandler.RetryIfBusy ().AllowError (410' C4ErrorDomain.HTTP).Execute ((err => Native.c4doc_loadRevisionBody (doc' err)));  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) || (c > 64 && c < 91) || (c > 96 && c < 123) || c == 45 || c == 46 || c == 95 || c > 127;  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) || (c > 64 && c < 91) || (c > 96 && c < 123) || c == 45 || c == 46 || c == 95 || c > 127;  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) || (c > 64 && c < 91) || (c > 96 && c < 123) || c == 45 || c == 46 || c == 95 || c > 127;  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) || (c > 64 && c < 91) || (c > 96 && c < 123) || c == 45 || c == 46 || c == 95 || c > 127;  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) || (c > 64 && c < 91) || (c > 96 && c < 123) || c == 45 || c == 46 || c == 95 || c > 127;  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) || (c > 64 && c < 91) || (c > 96 && c < 123) || c == 45 || c == 46 || c == 95 || c > 127;  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) || (c > 64 && c < 91) || (c > 96 && c < 123) || c == 45 || c == 46 || c == 95 || c > 127;  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) || (c > 64 && c < 91) || (c > 96 && c < 123) || c == 45 || c == 46 || c == 95 || c > 127;  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) || (c > 64 && c < 91) || (c > 96 && c < 123) || c == 45 || c == 46 || c == 95 || c > 127;  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,IsLegalChar,The following statement contains a magic number: return (c > 47 && c < 58) || (c > 64 && c < 91) || (c > 96 && c < 123) || c == 45 || c == 46 || c == 95 || c > 127;  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,EscapeString,The following statement contains a magic number: fixed (byte* bufPtr = buffer)  	fixed (char* ptr = unescaped) {  		var currentCharPtr = ptr;  		while (length < unescaped.Length) {  			var numBytes = Encoding.UTF8.GetBytes (currentCharPtr' 1' bufPtr' 6);  			if (IsLegalChar (buffer [0])) {  				sb.Append (*currentCharPtr);  			} else {  				sb.AppendFormat ("@{0}"' Misc.ConvertToHex (buffer' numBytes));  			}  			currentCharPtr++;  			length++;  		}  	}  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,EscapeString,The following statement contains a magic number: fixed (char* ptr = unescaped) {  	var currentCharPtr = ptr;  	while (length < unescaped.Length) {  		var numBytes = Encoding.UTF8.GetBytes (currentCharPtr' 1' bufPtr' 6);  		if (IsLegalChar (buffer [0])) {  			sb.Append (*currentCharPtr);  		} else {  			sb.AppendFormat ("@{0}"' Misc.ConvertToHex (buffer' numBytes));  		}  		currentCharPtr++;  		length++;  	}  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,EscapeString,The following statement contains a magic number: while (length < unescaped.Length) {  	var numBytes = Encoding.UTF8.GetBytes (currentCharPtr' 1' bufPtr' 6);  	if (IsLegalChar (buffer [0])) {  		sb.Append (*currentCharPtr);  	} else {  		sb.AppendFormat ("@{0}"' Misc.ConvertToHex (buffer' numBytes));  	}  	currentCharPtr++;  	length++;  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UnescapeString,The following statement contains a magic number: foreach (var c in escaped) {  	if (c == '@') {  		charCounter = 1;  		continue;  	} else if (charCounter > 0) {  		buffer [charCounter - 1] = c;  		if (charCounter == 2) {  			sb.Append ((char)Convert.ToByte (new string (buffer)' 16));  			charCounter = 0;  		} else {  			charCounter++;  		}  	} else {  		sb.Append (c);  	}  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UnescapeString,The following statement contains a magic number: foreach (var c in escaped) {  	if (c == '@') {  		charCounter = 1;  		continue;  	} else if (charCounter > 0) {  		buffer [charCounter - 1] = c;  		if (charCounter == 2) {  			sb.Append ((char)Convert.ToByte (new string (buffer)' 16));  			charCounter = 0;  		} else {  			charCounter++;  		}  	} else {  		sb.Append (c);  	}  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UnescapeString,The following statement contains a magic number: if (c == '@') {  	charCounter = 1;  	continue;  } else if (charCounter > 0) {  	buffer [charCounter - 1] = c;  	if (charCounter == 2) {  		sb.Append ((char)Convert.ToByte (new string (buffer)' 16));  		charCounter = 0;  	} else {  		charCounter++;  	}  } else {  	sb.Append (c);  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UnescapeString,The following statement contains a magic number: if (c == '@') {  	charCounter = 1;  	continue;  } else if (charCounter > 0) {  	buffer [charCounter - 1] = c;  	if (charCounter == 2) {  		sb.Append ((char)Convert.ToByte (new string (buffer)' 16));  		charCounter = 0;  	} else {  		charCounter++;  	}  } else {  	sb.Append (c);  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UnescapeString,The following statement contains a magic number: if (charCounter > 0) {  	buffer [charCounter - 1] = c;  	if (charCounter == 2) {  		sb.Append ((char)Convert.ToByte (new string (buffer)' 16));  		charCounter = 0;  	} else {  		charCounter++;  	}  } else {  	sb.Append (c);  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UnescapeString,The following statement contains a magic number: if (charCounter > 0) {  	buffer [charCounter - 1] = c;  	if (charCounter == 2) {  		sb.Append ((char)Convert.ToByte (new string (buffer)' 16));  		charCounter = 0;  	} else {  		charCounter++;  	}  } else {  	sb.Append (c);  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UnescapeString,The following statement contains a magic number: if (charCounter == 2) {  	sb.Append ((char)Convert.ToByte (new string (buffer)' 16));  	charCounter = 0;  } else {  	charCounter++;  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UnescapeString,The following statement contains a magic number: if (charCounter == 2) {  	sb.Append ((char)Convert.ToByte (new string (buffer)' 16));  	charCounter = 0;  } else {  	charCounter++;  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,UnescapeString,The following statement contains a magic number: sb.Append ((char)Convert.ToByte (new string (buffer)' 16));  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,RegularQuery,The following statement contains a magic number: foreach (var next in enumerator) {  	var key = CouchbaseBridge.DeserializeKey<object> (next.Key);  	var value = (next.Value as IEnumerable<byte>).ToArray ();  	var docRevision = default(RevisionInternal);  	if (value.Length == 1 && value [0] == 42) {  		docRevision = _dbStorage.GetDocument (next.DocID' null' true);  	} else {  		docRevision = _dbStorage.GetDocument (next.DocID' null' optionsCopy.IncludeDocs);  	}  	var row = new QueryRow (next.DocID' next.DocSequence' key' value' docRevision' this);  	if (filter != null) {  		if (!filter (row)) {  			continue;  		}  		if (skip > 0) {  			skip--;  			continue;  		}  		if (limit-- == 0) {  			yield break;  		}  	}  	Log.To.Query.V (Tag' "Query {0} found row with key={1}' value={2}' id={3}"' Name' new SecureLogJsonString (key' LogMessageSensitivity.PotentiallyInsecure)' new SecureLogString (value' LogMessageSensitivity.PotentiallyInsecure)' new SecureLogString (next.DocID' LogMessageSensitivity.PotentiallyInsecure));  	yield return row;  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,RegularQuery,The following statement contains a magic number: if (value.Length == 1 && value [0] == 42) {  	docRevision = _dbStorage.GetDocument (next.DocID' null' true);  } else {  	docRevision = _dbStorage.GetDocument (next.DocID' null' optionsCopy.IncludeDocs);  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,ReducedQuery,The following statement contains a magic number: if (reduce != null) {  	keysToReduce = new List<object> (100);  	valsToReduce = new List<object> (100);  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,ReducedQuery,The following statement contains a magic number: if (reduce != null) {  	keysToReduce = new List<object> (100);  	valsToReduce = new List<object> (100);  }  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,ReducedQuery,The following statement contains a magic number: keysToReduce = new List<object> (100);  
Magic Number,Couchbase.Lite.Storage.ForestDB,ForestDBViewStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBViewStore.cs,ReducedQuery,The following statement contains a magic number: valsToReduce = new List<object> (100);  
Missing Default,Couchbase.Lite.Storage.ForestDB,ForestDBCouchStore,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\ForestDBCouchStore.cs,ForestDBCouchStore,The following switch statement is missing a default case: switch (level) {  case C4LogLevel.Debug:  	Log.To.Database.D ("ForestDB"' msg);  	break;  case C4LogLevel.Info:  	Log.To.Database.V ("ForestDB"' msg);  	break;  case C4LogLevel.Warning:  	Log.To.Database.W ("ForestDB"' msg);  	break;  case C4LogLevel.Error:  	Log.To.Database.E ("ForestDB"' msg);  	break;  }  
Missing Default,Couchbase.Lite,JsonC4KeyReader,F:\newReposMay17\couchbase_couchbase-lite-net\src\StorageEngines\ForestDB\storage.forestdb.shared\src\JsonC4KeyReader.cs,Read,The following switch statement is missing a default case: switch (Native.c4key_peek (r)) {  case C4KeyToken.Array:  	Native.c4key_skipToken (r);  	SetToken (Newtonsoft.Json.JsonToken.StartArray);  	_sequenceStack.Push (Newtonsoft.Json.JsonToken.StartArray);  	break;  case C4KeyToken.Bool:  	SetToken (Newtonsoft.Json.JsonToken.Boolean' Native.c4key_readBool (r));  	break;  case C4KeyToken.EndSequence: {  	Native.c4key_skipToken (r);  	var lastSequence = _sequenceStack.Pop ();  	if (lastSequence == Newtonsoft.Json.JsonToken.StartArray) {  		SetToken (Newtonsoft.Json.JsonToken.EndArray);  	} else {  		SetToken (Newtonsoft.Json.JsonToken.EndObject);  	}  	break;  }  case C4KeyToken.Map:  	Native.c4key_skipToken (r);  	SetToken (Newtonsoft.Json.JsonToken.StartObject);  	_sequenceStack.Push (Newtonsoft.Json.JsonToken.StartObject);  	break;  case C4KeyToken.Null:  	Native.c4key_skipToken (r);  	SetToken (Newtonsoft.Json.JsonToken.Null' null);  	break;  case C4KeyToken.Number:  	SetToken (Newtonsoft.Json.JsonToken.Float' Native.c4key_readNumber (r));  	break;  case C4KeyToken.String: {  	var lastSequence = _sequenceStack.Count > 0 ? _sequenceStack.Peek () : Newtonsoft.Json.JsonToken.None;  	if (lastSequence == Newtonsoft.Json.JsonToken.StartObject) {  		SetToken (Newtonsoft.Json.JsonToken.PropertyName' Native.c4key_readString (r));  		_sequenceStack.Push (Newtonsoft.Json.JsonToken.PropertyName);  	} else {  		SetToken (Newtonsoft.Json.JsonToken.String' Native.c4key_readString (r));  		if (lastSequence == Newtonsoft.Json.JsonToken.PropertyName) {  			_sequenceStack.Pop ();  		}  	}  	break;  }  case C4KeyToken.Error:  	return false;  }  
