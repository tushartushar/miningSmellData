Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,SODA,SodaRequest,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaRequest.cs,SodaRequest,The method has 8 parameters. Parameters: uri' method' appToken' username' password' dataFormat' payload' timeout
Long Statement,SODA,SodaRequest,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaRequest.cs,ParseResponse,The length of the statement  "                throw new InvalidOperationException(String.Format("Couldn't deserialize the ({0}) response into an instance of type {1}."' dataFormat' typeof(TResult))' inner); " is 160.
Long Statement,SODA,SodaClient,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,GetMetadata,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA,SodaClient,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,GetResource,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA,SodaClient,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,Query,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA,SodaClient,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,Upsert,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA,SodaClient,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,Upsert,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA,SodaClient,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,BatchUpsert,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA,SodaClient,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,BatchUpsert,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA,SodaClient,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,Replace,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA,SodaClient,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,Replace,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA,SodaClient,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,DeleteRow,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA,SodaClient,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,write,The length of the statement  "            var request = new SodaRequest(uri' method' AppToken' Username' password' SodaDataFormat.JSON' payload.ToJsonString()' RequestTimeout); " is 134.
Long Statement,SODA.Utilities,SodaUri,C:\repos\CityofSantaMonica_SODA.NET\SODA\Utilities\SodaUri.cs,ForMetadata,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA.Utilities,SodaUri,C:\repos\CityofSantaMonica_SODA.NET\SODA\Utilities\SodaUri.cs,ForResourceAPI,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA.Utilities,SodaUri,C:\repos\CityofSantaMonica_SODA.NET\SODA\Utilities\SodaUri.cs,ForResourcePage,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA.Utilities,SodaUri,C:\repos\CityofSantaMonica_SODA.NET\SODA\Utilities\SodaUri.cs,ForResourceAboutPage,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA.Utilities,SodaUri,C:\repos\CityofSantaMonica_SODA.NET\SODA\Utilities\SodaUri.cs,ForResourceAPIPage,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA.Utilities,SodaUri,C:\repos\CityofSantaMonica_SODA.NET\SODA\Utilities\SodaUri.cs,ForQuery,The length of the statement  "                throw new ArgumentOutOfRangeException("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 129.
Long Statement,SODA.Utilities,SodaUri,C:\repos\CityofSantaMonica_SODA.NET\SODA\Utilities\SodaUri.cs,ForCategoryPage,The length of the statement  "            string url = String.Format("{0}/{1}"' metadataUrl(socrataHost).Replace("views"' "categories")' Uri.EscapeDataString(category)); " is 127.
Complex Conditional,SODA.Models,HumanAddress,C:\repos\CityofSantaMonica_SODA.NET\SODA\Models\HumanAddress.cs,HumanAddress,The conditional expression  "other != null && other.Address == null && other.City == null && other.State == null && other.Zip == null"  is complex.
Missing Default,SODA,SodaRequest,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaRequest.cs,SodaRequest,The following switch statement is missing a default case: switch (dataFormat)              {                  case SodaDataFormat.JSON:                      request.Accept = "application/json";                      if (!request.Method.Equals("GET"))                          request.ContentType = "application/json";                      break;                  case SodaDataFormat.CSV:                      switch (request.Method)                      {                          case "GET":                              request.Accept = "text/csv";                              break;                          case "POST":                          case "PUT":                              request.ContentType = "text/csv";                              break;                      }                      break;                  case SodaDataFormat.XML:                      request.Accept = "application/rdf+xml";                      break;              }
Missing Default,SODA,SodaRequest,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaRequest.cs,SodaRequest,The following switch statement is missing a default case: switch (request.Method)                      {                          case "GET":                              request.Accept = "text/csv";                              break;                          case "POST":                          case "PUT":                              request.ContentType = "text/csv";                              break;                      }
Missing Default,SODA,SodaRequest,C:\repos\CityofSantaMonica_SODA.NET\SODA\SodaRequest.cs,ParseResponse,The following switch statement is missing a default case: switch (dataFormat)                  {                      case SodaDataFormat.JSON:                          try                          {                              result = Newtonsoft.Json.JsonConvert.DeserializeObject<TResult>(response);                          }                          catch (Newtonsoft.Json.JsonException jex)                          {                              inner = jex;                              exception = true;                          }                          break;                      case SodaDataFormat.CSV:                          //TODO: should we consider this an error (i.e. InvalidOperationException) if this cast returns null?                          result = response as TResult;                          break;                      case SodaDataFormat.XML:                          //see if the caller just wanted the XML string                          var ttype = typeof(TResult);                          if (ttype == typeof(string))                          {                              result = response as TResult;                          }                          else                          {                              //try to deserialize the XML response                              try                              {                                  var reader = XmlReader.Create(new StringReader(response));                                  var serializer = new XmlSerializer(ttype);                                  result = serializer.Deserialize(reader) as TResult;                              }                              catch (Exception ex)                              {                                  inner = ex;                                  exception = true;                              }                          }                          break;                  }
