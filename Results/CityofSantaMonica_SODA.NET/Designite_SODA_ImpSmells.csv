Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SODA,SodaRequest,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaRequest.cs,SodaRequest,Cyclomatic complexity of the method is 16
Complex Method,SODA,SodaRequest,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaRequest.cs,ParseResponse,Cyclomatic complexity of the method is 16
Complex Method,SODA,SoqlQuery,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SoqlQuery.cs,ToString,Cyclomatic complexity of the method is 11
Complex Method,SODA,SodaClient,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,Upsert,Cyclomatic complexity of the method is 8
Complex Method,SODA,SodaClient,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,BatchUpsert,Cyclomatic complexity of the method is 8
Complex Method,SODA,SodaClient,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,Replace,Cyclomatic complexity of the method is 8
Long Parameter List,SODA,SodaRequest,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaRequest.cs,SodaRequest,The method has 8 parameters.
Long Statement,SODA.Models,HumanAddress,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\Models\HumanAddress.cs,Equals,The length of the statement  "	return this.Address.Equals (other.Address) && this.City.Equals (other.City) && this.State.Equals (other.State) && this.Zip.Equals (other.Zip); " is 142.
Long Statement,SODA,SodaRequest,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaRequest.cs,ParseResponse,The length of the statement  "		throw new InvalidOperationException (String.Format ("Couldn't deserialize the ({0}) response into an instance of type {1}."' dataFormat' typeof(TResult))' inner); " is 162.
Long Statement,SODA,SodaClient,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,GetMetadata,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA,SodaClient,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,GetResource,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA,SodaClient,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,Query,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA,SodaClient,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,Upsert,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA,SodaClient,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,Upsert,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA,SodaClient,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,BatchUpsert,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA,SodaClient,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,BatchUpsert,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA,SodaClient,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,Replace,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA,SodaClient,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,Replace,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA,SodaClient,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,DeleteRow,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA,SodaClient,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaClient.cs,write,The length of the statement  "	var request = new SodaRequest (uri' method' AppToken' Username' password' SodaDataFormat.JSON' payload.ToJsonString ()' RequestTimeout); " is 136.
Long Statement,SODA.Utilities,SodaUri,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\Utilities\SodaUri.cs,ForMetadata,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA.Utilities,SodaUri,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\Utilities\SodaUri.cs,ForResourceAPI,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA.Utilities,SodaUri,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\Utilities\SodaUri.cs,ForResourcePage,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA.Utilities,SodaUri,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\Utilities\SodaUri.cs,ForResourceAboutPage,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA.Utilities,SodaUri,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\Utilities\SodaUri.cs,ForResourceAPIPage,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA.Utilities,SodaUri,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\Utilities\SodaUri.cs,ForQuery,The length of the statement  "		throw new ArgumentOutOfRangeException ("resourceId"' "The provided resourceId is not a valid Socrata (4x4) resource identifier."); " is 130.
Long Statement,SODA.Utilities,SodaUri,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\Utilities\SodaUri.cs,ForCategoryPage,The length of the statement  "	string url = String.Format ("{0}/{1}"' metadataUrl (socrataHost).Replace ("views"' "categories")' Uri.EscapeDataString (category)); " is 131.
Complex Conditional,SODA.Models,HumanAddress,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\Models\HumanAddress.cs,HumanAddress,The conditional expression  "other != null && other.Address == null && other.City == null && other.State == null && other.Zip == null"  is complex.
Missing Default,SODA,SodaRequest,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaRequest.cs,SodaRequest,The following switch statement is missing a default case: switch (dataFormat) {  case SodaDataFormat.JSON:  	request.Accept = "application/json";  	if (!request.Method.Equals ("GET"))  		request.ContentType = "application/json";  	break;  case SodaDataFormat.CSV:  	switch (request.Method) {  	case "GET":  		request.Accept = "text/csv";  		break;  	case "POST":  	case "PUT":  		request.ContentType = "text/csv";  		break;  	}  	break;  case SodaDataFormat.XML:  	request.Accept = "application/rdf+xml";  	break;  }  
Missing Default,SODA,SodaRequest,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaRequest.cs,SodaRequest,The following switch statement is missing a default case: switch (request.Method) {  case "GET":  	request.Accept = "text/csv";  	break;  case "POST":  case "PUT":  	request.ContentType = "text/csv";  	break;  }  
Missing Default,SODA,SodaRequest,F:\newReposMay17\CityofSantaMonica_SODA.NET\SODA\SodaRequest.cs,ParseResponse,The following switch statement is missing a default case: switch (dataFormat) {  case SodaDataFormat.JSON:  	try {  		result = Newtonsoft.Json.JsonConvert.DeserializeObject<TResult> (response);  	} catch (Newtonsoft.Json.JsonException jex) {  		inner = jex;  		exception = true;  	}  	break;  case SodaDataFormat.CSV:  	//TODO: should we consider this an error (i.e. InvalidOperationException) if this cast returns null?  	result = response as TResult;  	break;  case SodaDataFormat.XML:  	//see if the caller just wanted the XML string  	var ttype = typeof(TResult);  	if (ttype == typeof(string)) {  		result = response as TResult;  	} else {  		//try to deserialize the XML response  		try {  			var reader = XmlReader.Create (new StringReader (response));  			var serializer = new XmlSerializer (ttype);  			result = serializer.Deserialize (reader) as TResult;  		} catch (Exception ex) {  			inner = ex;  			exception = true;  		}  	}  	break;  }  
