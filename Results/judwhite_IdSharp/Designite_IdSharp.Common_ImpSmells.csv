Implementation smell,Namespace,Class,File,Method,Description
Complex Method,IdSharp.Common.Utils,Http,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\Http.cs,AddField,Cyclomatic complexity of the method is 8
Long Parameter List,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,decodeLastBlock,The method has 5 parameters. Parameters: outStream' c1' c2' c3' c4
Long Statement,IdSharp.Common.Utils,Http,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\Http.cs,Get,The length of the statement  "                webRequest.Headers.Add(string.Format("Authorization: Basic {0}"' Convert.ToBase64String(Encoding.ASCII.GetBytes(string.Format("{0}:{1}"' credentials.UserName' credentials.Password))))); " is 185.
Long Statement,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,Read,The length of the statement  "                string msg = string.Format("Attempted to read past the end of the stream when requesting {0} bytes at position {1}"' count' stream.Position); " is 141.
Long Statement,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Decode,The length of the statement  "			outLen += decodeLastBlock(outStream' (char)data[end - 4]' (char)data[end - 3]' (char)data[end - 2]' (char)data[end - 1]); " is 121.
Magic Number,IdSharp.Common.Utils,ByteUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\ByteUtils.cs,ConvertToInt64,The following statement contains a magic number: value <<= 8;
Magic Number,IdSharp.Common.Utils,ByteUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\ByteUtils.cs,IsBitSet,The following statement contains a magic number: bitToCheck > 7
Magic Number,IdSharp.Common.Utils,ByteUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\ByteUtils.cs,Get8Bytes,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 56) & 0xFF)'                                         (byte)((value >> 48) & 0xFF)'                                         (byte)((value >> 40) & 0xFF)'                                         (byte)((value >> 32) & 0xFF)'                                         (byte)((value >> 24) & 0xFF)'                                         (byte)((value >> 16) & 0xFF)'                                         (byte)((value >> 8) & 0xFF)'                                         (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,ByteUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\ByteUtils.cs,Get8Bytes,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 56) & 0xFF)'                                         (byte)((value >> 48) & 0xFF)'                                         (byte)((value >> 40) & 0xFF)'                                         (byte)((value >> 32) & 0xFF)'                                         (byte)((value >> 24) & 0xFF)'                                         (byte)((value >> 16) & 0xFF)'                                         (byte)((value >> 8) & 0xFF)'                                         (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,ByteUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\ByteUtils.cs,Get8Bytes,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 56) & 0xFF)'                                         (byte)((value >> 48) & 0xFF)'                                         (byte)((value >> 40) & 0xFF)'                                         (byte)((value >> 32) & 0xFF)'                                         (byte)((value >> 24) & 0xFF)'                                         (byte)((value >> 16) & 0xFF)'                                         (byte)((value >> 8) & 0xFF)'                                         (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,ByteUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\ByteUtils.cs,Get8Bytes,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 56) & 0xFF)'                                         (byte)((value >> 48) & 0xFF)'                                         (byte)((value >> 40) & 0xFF)'                                         (byte)((value >> 32) & 0xFF)'                                         (byte)((value >> 24) & 0xFF)'                                         (byte)((value >> 16) & 0xFF)'                                         (byte)((value >> 8) & 0xFF)'                                         (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,ByteUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\ByteUtils.cs,Get8Bytes,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 56) & 0xFF)'                                         (byte)((value >> 48) & 0xFF)'                                         (byte)((value >> 40) & 0xFF)'                                         (byte)((value >> 32) & 0xFF)'                                         (byte)((value >> 24) & 0xFF)'                                         (byte)((value >> 16) & 0xFF)'                                         (byte)((value >> 8) & 0xFF)'                                         (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,ByteUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\ByteUtils.cs,Get8Bytes,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 56) & 0xFF)'                                         (byte)((value >> 48) & 0xFF)'                                         (byte)((value >> 40) & 0xFF)'                                         (byte)((value >> 32) & 0xFF)'                                         (byte)((value >> 24) & 0xFF)'                                         (byte)((value >> 16) & 0xFF)'                                         (byte)((value >> 8) & 0xFF)'                                         (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,ByteUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\ByteUtils.cs,Get8Bytes,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 56) & 0xFF)'                                         (byte)((value >> 48) & 0xFF)'                                         (byte)((value >> 40) & 0xFF)'                                         (byte)((value >> 32) & 0xFF)'                                         (byte)((value >> 24) & 0xFF)'                                         (byte)((value >> 16) & 0xFF)'                                         (byte)((value >> 8) & 0xFF)'                                         (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,ByteUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\ByteUtils.cs,Get4Bytes,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 24) & 0xFF)'                                         (byte)((value >> 16) & 0xFF)'                                         (byte)((value >> 8) & 0xFF)'                                         (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,ByteUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\ByteUtils.cs,Get4Bytes,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 24) & 0xFF)'                                         (byte)((value >> 16) & 0xFF)'                                         (byte)((value >> 8) & 0xFF)'                                         (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,ByteUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\ByteUtils.cs,Get4Bytes,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 24) & 0xFF)'                                         (byte)((value >> 16) & 0xFF)'                                         (byte)((value >> 8) & 0xFF)'                                         (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,ByteUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\ByteUtils.cs,Get2Bytes,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 8) & 0xFF)'                                         (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,ByteUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\ByteUtils.cs,ReplaceBytes,The following statement contains a magic number: const int BUF_SIZE = 32767;
Magic Number,IdSharp.Common.Utils,CRC32,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\CRC32.cs,CRC32,The following statement contains a magic number: i < 256
Magic Number,IdSharp.Common.Utils,CRC32,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\CRC32.cs,CalculateInt32,The following statement contains a magic number: crc32Result = ((crc32Result) >> 8) ^ crc32Table[(buffer[i]) ^                                                                          ((crc32Result) & 0x000000FF)];
Magic Number,IdSharp.Common.Utils,Http,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\Http.cs,Get,The following statement contains a magic number: byte[] data = new byte[256];
Magic Number,IdSharp.Common.Utils,Http,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\Http.cs,Get,The following statement contains a magic number: read = responseStream.Read(data' 0' 256);
Magic Number,IdSharp.Common.Utils,Http,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\Http.cs,Post,The following statement contains a magic number: data = new byte[256];
Magic Number,IdSharp.Common.Utils,Http,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\Http.cs,Post,The following statement contains a magic number: read = responseStream.Read(data' 0' 256);
Magic Number,IdSharp.Common.Utils,Http,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\Http.cs,PostCookies,The following statement contains a magic number: data = new byte[256];
Magic Number,IdSharp.Common.Utils,Http,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\Http.cs,PostCookies,The following statement contains a magic number: read = responseStream.Read(data' 0' 256);
Magic Number,IdSharp.Common.Utils,Http,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\Http.cs,AddField,The following statement contains a magic number: c < 128 && c != '&' && c != ' '
Magic Number,IdSharp.Common.Utils,Http,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\Http.cs,AddField,The following statement contains a magic number: c <= 255
Magic Number,IdSharp.Common.Utils,PathUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\PathUtils.cs,GetTemporaryFileNameBasedOnFileName,The following statement contains a magic number: byte[] randomBytes = new byte[8];
Magic Number,IdSharp.Common.Utils,PathUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\PathUtils.cs,GetTemporaryFileNameBasedOnFileName,The following statement contains a magic number: randomBytes[i] = (byte)rnd.Next(65' 91);
Magic Number,IdSharp.Common.Utils,PathUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\PathUtils.cs,GetTemporaryFileNameBasedOnFileName,The following statement contains a magic number: randomBytes[i] = (byte)rnd.Next(65' 91);
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt32,The following statement contains a magic number: byte[] byteArray = Read(stream' 4);
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt32,The following statement contains a magic number: int returnValue = (byteArray[0] << 24) +                                (byteArray[1] << 16) +                                (byteArray[2] << 8) +                                 byteArray[3];
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt32,The following statement contains a magic number: int returnValue = (byteArray[0] << 24) +                                (byteArray[1] << 16) +                                (byteArray[2] << 8) +                                 byteArray[3];
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt32,The following statement contains a magic number: int returnValue = (byteArray[0] << 24) +                                (byteArray[1] << 16) +                                (byteArray[2] << 8) +                                 byteArray[3];
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt32,The following statement contains a magic number: int returnValue = (byteArray[0] << 24) +                                (byteArray[1] << 16) +                                (byteArray[2] << 8) +                                 byteArray[3];
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt32,The following statement contains a magic number: int returnValue = (byteArray[0] << 24) +                                (byteArray[1] << 16) +                                (byteArray[2] << 8) +                                 byteArray[3];
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt24,The following statement contains a magic number: byte[] byteArray = Read(stream' 3);
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt24,The following statement contains a magic number: int returnValue = (byteArray[0] << 16) +                                (byteArray[1] << 8) +                                 byteArray[2];
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt24,The following statement contains a magic number: int returnValue = (byteArray[0] << 16) +                                (byteArray[1] << 8) +                                 byteArray[2];
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt24,The following statement contains a magic number: int returnValue = (byteArray[0] << 16) +                                (byteArray[1] << 8) +                                 byteArray[2];
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt32LittleEndian,The following statement contains a magic number: byte[] byteArray = Read(stream' 4);
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt32LittleEndian,The following statement contains a magic number: int returnValue = byteArray[0] +                                (byteArray[1] << 8) +                                (byteArray[2] << 16) +                                (byteArray[3] << 24);
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt32LittleEndian,The following statement contains a magic number: int returnValue = byteArray[0] +                                (byteArray[1] << 8) +                                (byteArray[2] << 16) +                                (byteArray[3] << 24);
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt32LittleEndian,The following statement contains a magic number: int returnValue = byteArray[0] +                                (byteArray[1] << 8) +                                (byteArray[2] << 16) +                                (byteArray[3] << 24);
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt32LittleEndian,The following statement contains a magic number: int returnValue = byteArray[0] +                                (byteArray[1] << 8) +                                (byteArray[2] << 16) +                                (byteArray[3] << 24);
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt32LittleEndian,The following statement contains a magic number: int returnValue = byteArray[0] +                                (byteArray[1] << 8) +                                (byteArray[2] << 16) +                                (byteArray[3] << 24);
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,WriteInt32,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 24) & 0xFF)'                                          (byte)((value >> 16) & 0xFF)'                                          (byte)((value >> 8) & 0xFF)'                                          (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,WriteInt32,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 24) & 0xFF)'                                          (byte)((value >> 16) & 0xFF)'                                          (byte)((value >> 8) & 0xFF)'                                          (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,WriteInt32,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 24) & 0xFF)'                                          (byte)((value >> 16) & 0xFF)'                                          (byte)((value >> 8) & 0xFF)'                                          (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,WriteInt24,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 16) & 0xFF)'                                          (byte)((value >> 8) & 0xFF)'                                          (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,WriteInt24,The following statement contains a magic number: byte[] byteArray = new[] { (byte)((value >> 16) & 0xFF)'                                          (byte)((value >> 8) & 0xFF)'                                          (byte)(value & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,WriteInt32LittleEndian,The following statement contains a magic number: byte[] byteArray = new[] { (byte)(value & 0xFF)'                                          (byte)((value >> 8) & 0xFF)'                                          (byte)((value >> 16) & 0xFF)'                                          (byte)((value >> 24) & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,WriteInt32LittleEndian,The following statement contains a magic number: byte[] byteArray = new[] { (byte)(value & 0xFF)'                                          (byte)((value >> 8) & 0xFF)'                                          (byte)((value >> 16) & 0xFF)'                                          (byte)((value >> 24) & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,WriteInt32LittleEndian,The following statement contains a magic number: byte[] byteArray = new[] { (byte)(value & 0xFF)'                                          (byte)((value >> 8) & 0xFF)'                                          (byte)((value >> 16) & 0xFF)'                                          (byte)((value >> 24) & 0xFF)                                       };
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt16,The following statement contains a magic number: bytesLeft < 2
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt16,The following statement contains a magic number: byte[] byteArray = Read(stream' 2);
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt16,The following statement contains a magic number: bytesLeft -= 2;
Magic Number,IdSharp.Common.Utils,StreamUtils,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\StreamUtils.cs,ReadInt16,The following statement contains a magic number: short returnValue = (short)((byteArray[0] << 8) + byteArray[1]);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: int modulus = length % 3;
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: a3 = data[i + 2] & 0xff;
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: outStream.WriteByte(encodingTable[(int) ((uint) a1 >> 2) & 0x3f]);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: outStream.WriteByte(encodingTable[((a1 << 4) | (int) ((uint) a2 >> 4)) & 0x3f]);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: outStream.WriteByte(encodingTable[((a1 << 4) | (int) ((uint) a2 >> 4)) & 0x3f]);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: outStream.WriteByte(encodingTable[((a2 << 2) | (int) ((uint) a3 >> 6)) & 0x3f]);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: outStream.WriteByte(encodingTable[((a2 << 2) | (int) ((uint) a3 >> 6)) & 0x3f]);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: switch (modulus)  			{  				case 0:        /* nothing left to do */  					break;  				case 1:  					d1 = data[off + dataLength] & 0xff;  					b1 = (d1 >> 2) & 0x3f;  					b2 = (d1 << 4) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(padding);  					outStream.WriteByte(padding);  					break;  				case 2:  					d1 = data[off + dataLength] & 0xff;  					d2 = data[off + dataLength + 1] & 0xff;    					b1 = (d1 >> 2) & 0x3f;  					b2 = ((d1 << 4) | (d2 >> 4)) & 0x3f;  					b3 = (d2 << 2) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(encodingTable[b3]);  					outStream.WriteByte(padding);  					break;  			}
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: switch (modulus)  			{  				case 0:        /* nothing left to do */  					break;  				case 1:  					d1 = data[off + dataLength] & 0xff;  					b1 = (d1 >> 2) & 0x3f;  					b2 = (d1 << 4) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(padding);  					outStream.WriteByte(padding);  					break;  				case 2:  					d1 = data[off + dataLength] & 0xff;  					d2 = data[off + dataLength + 1] & 0xff;    					b1 = (d1 >> 2) & 0x3f;  					b2 = ((d1 << 4) | (d2 >> 4)) & 0x3f;  					b3 = (d2 << 2) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(encodingTable[b3]);  					outStream.WriteByte(padding);  					break;  			}
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: switch (modulus)  			{  				case 0:        /* nothing left to do */  					break;  				case 1:  					d1 = data[off + dataLength] & 0xff;  					b1 = (d1 >> 2) & 0x3f;  					b2 = (d1 << 4) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(padding);  					outStream.WriteByte(padding);  					break;  				case 2:  					d1 = data[off + dataLength] & 0xff;  					d2 = data[off + dataLength + 1] & 0xff;    					b1 = (d1 >> 2) & 0x3f;  					b2 = ((d1 << 4) | (d2 >> 4)) & 0x3f;  					b3 = (d2 << 2) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(encodingTable[b3]);  					outStream.WriteByte(padding);  					break;  			}
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: switch (modulus)  			{  				case 0:        /* nothing left to do */  					break;  				case 1:  					d1 = data[off + dataLength] & 0xff;  					b1 = (d1 >> 2) & 0x3f;  					b2 = (d1 << 4) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(padding);  					outStream.WriteByte(padding);  					break;  				case 2:  					d1 = data[off + dataLength] & 0xff;  					d2 = data[off + dataLength + 1] & 0xff;    					b1 = (d1 >> 2) & 0x3f;  					b2 = ((d1 << 4) | (d2 >> 4)) & 0x3f;  					b3 = (d2 << 2) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(encodingTable[b3]);  					outStream.WriteByte(padding);  					break;  			}
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: switch (modulus)  			{  				case 0:        /* nothing left to do */  					break;  				case 1:  					d1 = data[off + dataLength] & 0xff;  					b1 = (d1 >> 2) & 0x3f;  					b2 = (d1 << 4) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(padding);  					outStream.WriteByte(padding);  					break;  				case 2:  					d1 = data[off + dataLength] & 0xff;  					d2 = data[off + dataLength + 1] & 0xff;    					b1 = (d1 >> 2) & 0x3f;  					b2 = ((d1 << 4) | (d2 >> 4)) & 0x3f;  					b3 = (d2 << 2) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(encodingTable[b3]);  					outStream.WriteByte(padding);  					break;  			}
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: switch (modulus)  			{  				case 0:        /* nothing left to do */  					break;  				case 1:  					d1 = data[off + dataLength] & 0xff;  					b1 = (d1 >> 2) & 0x3f;  					b2 = (d1 << 4) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(padding);  					outStream.WriteByte(padding);  					break;  				case 2:  					d1 = data[off + dataLength] & 0xff;  					d2 = data[off + dataLength + 1] & 0xff;    					b1 = (d1 >> 2) & 0x3f;  					b2 = ((d1 << 4) | (d2 >> 4)) & 0x3f;  					b3 = (d2 << 2) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(encodingTable[b3]);  					outStream.WriteByte(padding);  					break;  			}
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: switch (modulus)  			{  				case 0:        /* nothing left to do */  					break;  				case 1:  					d1 = data[off + dataLength] & 0xff;  					b1 = (d1 >> 2) & 0x3f;  					b2 = (d1 << 4) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(padding);  					outStream.WriteByte(padding);  					break;  				case 2:  					d1 = data[off + dataLength] & 0xff;  					d2 = data[off + dataLength + 1] & 0xff;    					b1 = (d1 >> 2) & 0x3f;  					b2 = ((d1 << 4) | (d2 >> 4)) & 0x3f;  					b3 = (d2 << 2) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(encodingTable[b3]);  					outStream.WriteByte(padding);  					break;  			}
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: return (dataLength / 3) * 4 + ((modulus == 0) ? 0 : 4);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: return (dataLength / 3) * 4 + ((modulus == 0) ? 0 : 4);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following statement contains a magic number: return (dataLength / 3) * 4 + ((modulus == 0) ? 0 : 4);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Decode,The following statement contains a magic number: int  finish = end - 4;
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Decode,The following statement contains a magic number: outStream.WriteByte((byte)((b1 << 2) | (b2 >> 4)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Decode,The following statement contains a magic number: outStream.WriteByte((byte)((b1 << 2) | (b2 >> 4)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Decode,The following statement contains a magic number: outStream.WriteByte((byte)((b2 << 4) | (b3 >> 2)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Decode,The following statement contains a magic number: outStream.WriteByte((byte)((b2 << 4) | (b3 >> 2)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Decode,The following statement contains a magic number: outStream.WriteByte((byte)((b3 << 6) | b4));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Decode,The following statement contains a magic number: outLen += 3;
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Decode,The following statement contains a magic number: outLen += decodeLastBlock(outStream' (char)data[end - 4]' (char)data[end - 3]' (char)data[end - 2]' (char)data[end - 1]);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Decode,The following statement contains a magic number: outLen += decodeLastBlock(outStream' (char)data[end - 4]' (char)data[end - 3]' (char)data[end - 2]' (char)data[end - 1]);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Decode,The following statement contains a magic number: outLen += decodeLastBlock(outStream' (char)data[end - 4]' (char)data[end - 3]' (char)data[end - 2]' (char)data[end - 1]);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,DecodeString,The following statement contains a magic number: int  finish = end - 4;
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,DecodeString,The following statement contains a magic number: outStream.WriteByte((byte)((b1 << 2) | (b2 >> 4)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,DecodeString,The following statement contains a magic number: outStream.WriteByte((byte)((b1 << 2) | (b2 >> 4)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,DecodeString,The following statement contains a magic number: outStream.WriteByte((byte)((b2 << 4) | (b3 >> 2)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,DecodeString,The following statement contains a magic number: outStream.WriteByte((byte)((b2 << 4) | (b3 >> 2)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,DecodeString,The following statement contains a magic number: outStream.WriteByte((byte)((b3 << 6) | b4));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,DecodeString,The following statement contains a magic number: length += 3;
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,DecodeString,The following statement contains a magic number: length += decodeLastBlock(outStream' data[end - 4]' data[end - 3]' data[end - 2]' data[end - 1]);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,DecodeString,The following statement contains a magic number: length += decodeLastBlock(outStream' data[end - 4]' data[end - 3]' data[end - 2]' data[end - 1]);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,DecodeString,The following statement contains a magic number: length += decodeLastBlock(outStream' data[end - 4]' data[end - 3]' data[end - 2]' data[end - 1]);
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,decodeLastBlock,The following statement contains a magic number: outStream.WriteByte((byte)((b1 << 2) | (b2 >> 4)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,decodeLastBlock,The following statement contains a magic number: outStream.WriteByte((byte)((b1 << 2) | (b2 >> 4)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,decodeLastBlock,The following statement contains a magic number: outStream.WriteByte((byte)((b1 << 2) | (b2 >> 4)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,decodeLastBlock,The following statement contains a magic number: outStream.WriteByte((byte)((b1 << 2) | (b2 >> 4)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,decodeLastBlock,The following statement contains a magic number: outStream.WriteByte((byte)((b2 << 4) | (b3 >> 2)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,decodeLastBlock,The following statement contains a magic number: outStream.WriteByte((byte)((b2 << 4) | (b3 >> 2)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,decodeLastBlock,The following statement contains a magic number: return 2;
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,decodeLastBlock,The following statement contains a magic number: outStream.WriteByte((byte)((b1 << 2) | (b2 >> 4)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,decodeLastBlock,The following statement contains a magic number: outStream.WriteByte((byte)((b1 << 2) | (b2 >> 4)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,decodeLastBlock,The following statement contains a magic number: outStream.WriteByte((byte)((b2 << 4) | (b3 >> 2)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,decodeLastBlock,The following statement contains a magic number: outStream.WriteByte((byte)((b2 << 4) | (b3 >> 2)));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,decodeLastBlock,The following statement contains a magic number: outStream.WriteByte((byte)((b3 << 6) | b4));
Magic Number,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,decodeLastBlock,The following statement contains a magic number: return 3;
Missing Default,Org.BouncyCastle.Utilities.Encoders,Base64Encoder,D:\research\architectureSmells\repos\judwhite_IdSharp\IdSharp.Common\Utils\BouncyCastle\Base64Encoder.cs,Encode,The following switch statement is missing a default case: switch (modulus)  			{  				case 0:        /* nothing left to do */  					break;  				case 1:  					d1 = data[off + dataLength] & 0xff;  					b1 = (d1 >> 2) & 0x3f;  					b2 = (d1 << 4) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(padding);  					outStream.WriteByte(padding);  					break;  				case 2:  					d1 = data[off + dataLength] & 0xff;  					d2 = data[off + dataLength + 1] & 0xff;    					b1 = (d1 >> 2) & 0x3f;  					b2 = ((d1 << 4) | (d2 >> 4)) & 0x3f;  					b3 = (d2 << 2) & 0x3f;    					outStream.WriteByte(encodingTable[b1]);  					outStream.WriteByte(encodingTable[b2]);  					outStream.WriteByte(encodingTable[b3]);  					outStream.WriteByte(padding);  					break;  			}
