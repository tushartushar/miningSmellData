Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ProjectExtensions.Azure.ServiceBus.Tests.Unit.Handlers,TestMessageForTestingHandler,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\Tests\ProjectExtensions.Azure.ServiceBus.Tests.Unit\Handlers\TestMessageForTestingHandler.cs,Handle,The length of the statement  "           Debug.WriteLine("Received:" + message.BrokeredMessage.MessageId + " Value:" + message.Message.Id + " counter:" + message.Message.Counter);" is 138.
Long Statement,ProjectExtensions.Azure.ServiceBus.Tests.Unit.Handlers,TestMessageForTestingHandler,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\Tests\ProjectExtensions.Azure.ServiceBus.Tests.Unit\Handlers\TestMessageForTestingHandler.cs,Handle,The length of the statement  "           Console.WriteLine("Received:" + message.BrokeredMessage.MessageId + " Value:" + message.Message.Id + " counter:" + message.Message.Counter);" is 140.
Long Statement,ProjectExtensions.Azure.ServiceBus.Tests.Unit.Mocks,MockServiceBus,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\Tests\ProjectExtensions.Azure.ServiceBus.Tests.Unit\Mocks\MockServiceBus.cs,CreateSubscriptionClient,The length of the statement  "            var retVal = _subscriptions.FirstOrDefault(item => item.Description.TopicPath.Equals(topicPath) && item.Description.Name.Equals(name));" is 135.
Long Statement,ProjectExtensions.Azure.ServiceBus.Tests.Unit.Mocks,MockServiceBus,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\Tests\ProjectExtensions.Azure.ServiceBus.Tests.Unit\Mocks\MockServiceBus.cs,GetSubscription,The length of the statement  "            var retVal = _subscriptions.FirstOrDefault(item => item.Description.TopicPath.Equals(topicPath) && item.Description.Name.Equals(name));" is 135.
Long Statement,ProjectExtensions.Azure.ServiceBus.Tests.Unit.Mocks,MockServiceBus,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\Tests\ProjectExtensions.Azure.ServiceBus.Tests.Unit\Mocks\MockServiceBus.cs,RegisterAssembly,The length of the statement  "                                .Where(i => i.IsGenericType && (i.GetGenericTypeDefinition() == typeof(IHandleMessages<>) || i.GetGenericTypeDefinition() == typeof(IHandleCompetingMessages<>)))" is 161.
Long Statement,ProjectExtensions.Azure.ServiceBus.Tests.Unit.Mocks,MockServiceBus,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\Tests\ProjectExtensions.Azure.ServiceBus.Tests.Unit\Mocks\MockServiceBus.cs,Subscribe,The length of the statement  "                var filter = new SqlFilter(string.Format(AzureSenderReceiverBase.TYPE_HEADER_NAME + " = '{0}'"' info.MessageType.FullName.Replace('.'' '_')));" is 142.
Magic Number,ProjectExtensions.Azure.ServiceBus.Tests.Unit,Config,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\Tests\ProjectExtensions.Azure.ServiceBus.Tests.Unit\Config.cs,SetUp,The following statement contains a magic number: i < 10
Magic Number,ProjectExtensions.Azure.ServiceBus.Tests.Unit.Mocks,MockServiceBus,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\Tests\ProjectExtensions.Azure.ServiceBus.Tests.Unit\Mocks\MockServiceBus.cs,EndReceive,The following statement contains a magic number: var t = new Task(() => {                 while (true) {                     //TODO this could get caught in a loop' we need to check for delivered.                     if (message.Messages.Count > 0) {                         retVal = message.Messages.First();                         break;                     }                     Thread.Sleep(1000);                 }                  (result.AsyncWaitHandle as ManualResetEvent).Set();             });
