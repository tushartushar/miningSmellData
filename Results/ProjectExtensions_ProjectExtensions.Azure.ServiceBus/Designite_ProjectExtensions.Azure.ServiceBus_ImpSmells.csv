Implementation smell,Namespace,Class,File,Method,Description
Long Method,ProjectExtensions.Azure.ServiceBus.Sender,AzureBusSender,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Sender\AzureBusSender.cs,SendAsync,The method has 123 lines of code.
Complex Method,ProjectExtensions.Azure.ServiceBus,BusConfiguration,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\BusConfiguration.cs,Configure,Cyclomatic complexity of the method is 10
Complex Method,ProjectExtensions.Azure.ServiceBus,BusConfigurationBuilder,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\BusConfigurationBuilder.cs,ReadFromConfigurationSettings,Cyclomatic complexity of the method is 10
Complex Method,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,Configure,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.AzureStorage,StorageTransientErrorDetectionStrategy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\AzureStorage\StorageTransientErrorDetectionStrategy.cs,CheckIsTransient,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.ServiceBus,ServiceBusTransientErrorDetectionStrategy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\ServiceBus\ServiceBusTransientErrorDetectionStrategy.cs,CheckIsTransient,Cyclomatic complexity of the method is 19
Long Parameter List,ProjectExtensions.Azure.ServiceBus.Interfaces,IAzureBusSender,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Interfaces\IAzureBusSender.cs,SendAsync,The method has 5 parameters. Parameters: obj' state' resultCallBack' serializer' metadata
Long Parameter List,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,AzureReceiverHelper,The method has 7 parameters. Parameters: topic' configurationFactory' config' serializer' verifyRetryPolicy' retryPolicy' endpoint
Long Parameter List,ProjectExtensions.Azure.ServiceBus.Sender,AzureBusSender,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Sender\AzureBusSender.cs,SendAsync,The method has 5 parameters. Parameters: methodObj' methodState' methodResultCallBack' methodSerializer' methodMetadata
Long Parameter List,Microsoft.Practices.TransientFaultHandling,ExponentialBackoff,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\ExponentialBackoff.cs,ExponentialBackoff,The method has 5 parameters. Parameters: name' retryCount' minBackoff' maxBackoff' deltaBackoff
Long Parameter List,Microsoft.Practices.TransientFaultHandling,ExponentialBackoff,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\ExponentialBackoff.cs,ExponentialBackoff,The method has 6 parameters. Parameters: name' retryCount' minBackoff' maxBackoff' deltaBackoff' firstFastRetry
Long Parameter List,Microsoft.Practices.TransientFaultHandling,Incremental,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\Incremental.cs,Incremental,The method has 5 parameters. Parameters: name' retryCount' initialInterval' increment' firstFastRetry
Long Parameter List,Microsoft.Practices.TransientFaultHandling,RetryPolicy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\RetryPolicy.cs,RetryPolicy,The method has 5 parameters. Parameters: errorDetectionStrategy' retryCount' minBackoff' maxBackoff' deltaBackoff
Long Parameter List,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManager,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManager.cs,RetryManager,The method has 6 parameters. Parameters: defaultRetryStrategyName' defaultSqlConnectionStrategyName' defaultSqlCommandStrategyName' defaultAzureServiceBusStrategyName' defaultAzureCachingStrategyName' defaultAzureStorageStrategyName
Long Parameter List,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManagerImpl,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManagerImpl.cs,RetryManagerImpl,The method has 7 parameters. Parameters: retryStrategies' defaultRetryStrategyName' defaultSqlConnectionStrategyName' defaultSqlCommandStrategyName' defaultAzureServiceBusStrategyName' defaultAzureCachingStrategyName' defaultAzureStorageStrategyName
Long Parameter List,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManagerImpl,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManagerImpl.cs,RetryManagerImpl,The method has 7 parameters. Parameters: retryStrategies' defaultRetryStrategyName' defaultSqlConnectionStrategyName' defaultSqlCommandStrategyName' defaultAzureServiceBusStrategyName' defaultAzureCachingStrategyName' defaultAzureStorageStrategyName
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.Configuration,ViewModelTypeNames,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\Configuration\TransientFaultHandlingDesignTime.cs,,The length of the parameter RetryPolicyConfigurationSettingsViewModel is 41.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.Configuration,ViewModelTypeNames,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\Configuration\TransientFaultHandlingDesignTime.cs,,The length of the parameter DefaultElementConfigurationProperty is 35.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.Configuration,ViewModelTypeNames,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\Configuration\TransientFaultHandlingDesignTime.cs,,The length of the parameter TimeSpanElementConfigurationProperty is 36.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.Configuration,CommandTypeNames,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\Configuration\TransientFaultHandlingDesignTime.cs,,The length of the parameter WellKnownRetryStrategyElementCollectionCommand is 46.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManager,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManager.cs,RetryManager,The length of the parameter defaultSqlConnectionStrategyName is 32.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManager,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManager.cs,RetryManager,The length of the parameter defaultAzureServiceBusStrategyName is 34.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManager,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManager.cs,RetryManager,The length of the parameter defaultAzureCachingStrategyName is 31.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManager,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManager.cs,RetryManager,The length of the parameter defaultAzureStorageStrategyName is 31.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManagerImpl,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManagerImpl.cs,RetryManagerImpl,The length of the parameter defaultSqlConnectionStrategyName is 32.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManagerImpl,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManagerImpl.cs,RetryManagerImpl,The length of the parameter defaultAzureServiceBusStrategyName is 34.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManagerImpl,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManagerImpl.cs,RetryManagerImpl,The length of the parameter defaultAzureCachingStrategyName is 31.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManagerImpl,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManagerImpl.cs,RetryManagerImpl,The length of the parameter defaultAzureStorageStrategyName is 31.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManagerImpl,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManagerImpl.cs,RetryManagerImpl,The length of the parameter defaultSqlConnectionStrategyName is 32.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManagerImpl,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManagerImpl.cs,RetryManagerImpl,The length of the parameter defaultAzureServiceBusStrategyName is 34.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManagerImpl,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManagerImpl.cs,RetryManagerImpl,The length of the parameter defaultAzureCachingStrategyName is 31.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManagerImpl,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManagerImpl.cs,RetryManagerImpl,The length of the parameter defaultAzureStorageStrategyName is 31.
Long Statement,ProjectExtensions.Azure.ServiceBus,AzureBus,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\AzureBus.cs,RegisterAssembly,The length of the statement  "                                .Where(i => i.IsGenericType && (i.GetGenericTypeDefinition() == typeof(IHandleMessages<>) || i.GetGenericTypeDefinition() == typeof(IHandleCompetingMessages<>)))" is 161.
Long Statement,ProjectExtensions.Azure.ServiceBus.Helpers,BusHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Helpers\BusHelper.cs,SubscribeOrUnsubscribeType,The length of the statement  "                            .Where(i => i.IsGenericType && (i.GetGenericTypeDefinition() == typeof(IHandleMessages<>) || i.GetGenericTypeDefinition() == typeof(IHandleCompetingMessages<>)))" is 161.
Long Statement,ProjectExtensions.Azure.ServiceBus.Helpers,BusHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Helpers\BusHelper.cs,SubscribeOrUnsubscribeType,The length of the statement  "                throw new ApplicationException(string.Format("Type {0} does not implement IHandleMessages or IHandleCompetingMessages"' type.FullName));" is 136.
Long Statement,ProjectExtensions.Azure.ServiceBus.Helpers,BusHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Helpers\BusHelper.cs,SubscribeOrUnsubscribeType,The length of the statement  "                    AttributeData = type.GetCustomAttributes(typeof(MessageHandlerConfigurationAttribute)' false).FirstOrDefault() as MessageHandlerConfigurationAttribute'" is 151.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureBusReceiver,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureBusReceiver.cs,CreateSubscription,The length of the statement  "                var helper = new AzureReceiverHelper(defaultTopic' configurationFactory' configuration' serializer' verifyRetryPolicy' retryPolicy' value);" is 139.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureBusReceiver,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureBusReceiver.cs,CancelSubscription,The length of the statement  "            logger.Info("CancelSubscription {0} Declared {1} MessageTytpe {2}' IsReusable {3}"' value.SubscriptionName' value.DeclaredType.ToString()' value.MessageType.ToString()' value.IsReusable);" is 187.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureBusReceiver,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureBusReceiver.cs,CancelSubscription,The length of the statement  "            var subscription = mappings.FirstOrDefault(item => item.Data.EndPointData.SubscriptionName.Equals(value.SubscriptionName' StringComparison.OrdinalIgnoreCase));" is 159.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureBusReceiver,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureBusReceiver.cs,CancelSubscription,The length of the statement  "                    retryPolicy.ExecuteAction(() => configurationFactory.NamespaceManager.DeleteSubscription(defaultTopic.Path' value.SubscriptionName));" is 133.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureBusReceiver,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureBusReceiver.cs,MessageCountForType,The length of the statement  "                    var desc = configurationFactory.NamespaceManager.GetSubscription(defaultTopic.Path' found.Data.EndPointData.SubscriptionName);" is 126.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,OnMessageHandler,The length of the statement  "                    logger.Debug("ProcessMessagesForSubscription Start received new message: {0}"' data.EndPointData.SubscriptionNameDebug);" is 120.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,ProcessMessagesForSubscriptionAzure,The length of the statement  "            logger.Info("ProcessMessagesForSubscription Message Start {0} Declared {1} MessageTytpe {2}' IsReusable {3}"' data.EndPointData.SubscriptionName'" is 145.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,options_ExceptionReceived,The length of the statement  "                    logger.Error(string.Format("ProcessMessagesForSubscription Message Error={0} Declared={1} MessageTytpe={2} IsReusable={3} Error={4}"'" is 133.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,options_ExceptionReceived,The length of the statement  "            logger.Error("Message Pump Error: Start {0} Declared {1} MessageTytpe {2}' Error {3}"' data.EndPointData.SubscriptionName'" is 122.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,Configure,The length of the statement  "                    var filter = new SqlFilter(string.Format(AzureSenderReceiverBase.TYPE_HEADER_NAME + " = '{0}'"' value.MessageType.FullName.Replace('.'' '_')));" is 143.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,Configure,The length of the statement  "                subscriptionClient = configurationFactory.MessageFactory.CreateSubscriptionClient(topic.Path' value.SubscriptionName' rm);" is 122.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,ProcessMessageCallBack,The length of the statement  "                    logger.Debug("ProcessMessage invoke callback message start Type={0} message={1} Thread={2} MessageId={3}"' objectTypeName' state.Data.EndPointData.SubscriptionNameDebug' Thread.CurrentThread.ManagedThreadId' state.Message.MessageId);" is 233.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,ProcessMessageCallBack,The length of the statement  "                    logger.Debug("ProcessMessage reflection callback message start MethodInfo Type={0} Declared={1} handler={2} MethodInfo={3} Thread={4} MessageId={5}"' objectTypeName' state.Data.EndPointData.DeclaredType' handler.GetType().FullName' state.MethodInfo.Name' Thread.CurrentThread.ManagedThreadId' state.Message.MessageId);" is 318.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,ProcessMessageCallBack,The length of the statement  "                    logger.Debug("ProcessMessage invoke callback message end Type={0} message={1} Thread={2} MessageId={3}"' objectTypeName' state.Data.EndPointData.SubscriptionNameDebug' Thread.CurrentThread.ManagedThreadId' state.Message.MessageId);" is 231.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,ProcessMessageCallBack,The length of the statement  "                logger.Error("ProcessMessage invoke callback message failed Type={0} message={1} Thread={2} MessageId={3} Exception={4}"' objectTypeName' state.Data.EndPointData.SubscriptionNameDebug' Thread.CurrentThread.ManagedThreadId' state.Message.MessageId' ex.ToString());" is 263.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeDeadLetter,The length of the statement  "                // It's too late to compensate the loss of a message lock. We should just ignore it so that it does not break the receive loop." is 127.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeDeadLetter,The length of the statement  "                // There is nothing we can do as the connection may have been lost' or the underlying topic/subscription may have been removed." is 127.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeDeadLetter,The length of the statement  "                // If Complete() fails with this exception' the only recourse is to prepare to receive another message (possibly the same one)." is 127.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeComplete,The length of the statement  "                // It's too late to compensate the loss of a message lock. We should just ignore it so that it does not break the receive loop." is 127.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeComplete,The length of the statement  "                // There is nothing we can do as the connection may have been lost' or the underlying topic/subscription may have been removed." is 127.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeComplete,The length of the statement  "                // If Complete() fails with this exception' the only recourse is to prepare to receive another message (possibly the same one)." is 127.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeAbandon,The length of the statement  "                // Abandons a brokered message. This will cause the Service Bus to unlock the message and make it available to be received again' " is 129.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeAbandon,The length of the statement  "                // It's too late to compensate the loss of a message lock. We should just ignore it so that it does not break the receive loop." is 127.
Long Statement,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeAbandon,The length of the statement  "                // There is nothing we can do as the connection may have been lost' or the underlying topic/subscription may have been removed." is 127.
Long Statement,ProjectExtensions.Azure.ServiceBus.Sender,AzureBusSender,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Sender\AzureBusSender.cs,SendAsync,The length of the statement  "                            // A new BrokeredMessage instance must be created each time we send it. Reusing the original BrokeredMessage instance may not " is 125.
Long Statement,ProjectExtensions.Azure.ServiceBus.Sender,AzureBusSender,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Sender\AzureBusSender.cs,SendAsync,The length of the statement  "                            logger.Debug("sendAction BeginSend Type={0} Serializer={1} MessageId={2}"' obj.GetType().FullName' serializer.GetType().FullName' message.MessageId);" is 149.
Long Statement,ProjectExtensions.Azure.ServiceBus.Sender,AzureBusSender,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Sender\AzureBusSender.cs,SendAsync,The length of the statement  "                            // Complete the asynchronous operation. This may throw an exception that will be handled internally by the retry policy." is 120.
Long Statement,ProjectExtensions.Azure.ServiceBus.Sender,AzureBusSender,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Sender\AzureBusSender.cs,SendAsync,The length of the statement  "                            logger.Debug("sendAction EndSend Begin Type={0} Serializer={1} MessageId={2}"' obj.GetType().FullName' serializer.GetType().FullName' message.MessageId);" is 153.
Long Statement,ProjectExtensions.Azure.ServiceBus.Sender,AzureBusSender,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Sender\AzureBusSender.cs,SendAsync,The length of the statement  "                            logger.Debug("sendAction EndSend End Type={0} Serializer={1} MessageId={2}"' obj.GetType().FullName' serializer.GetType().FullName' message.MessageId);" is 151.
Long Statement,ProjectExtensions.Azure.ServiceBus.Sender,AzureBusSender,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Sender\AzureBusSender.cs,SendAsync,The length of the statement  "                        //see if the reason is the topic was deleted and if it was' create the topic and set a new error since there will be no receivers." is 130.
Long Statement,Microsoft.Practices.TransientFaultHandling,ExponentialBackoff,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\ExponentialBackoff.cs,GetShouldRetry,The length of the statement  "                    var delta = (int)((Math.Pow(2.0' currentRetryCount) - 1.0) * random.Next((int)(this.deltaBackoff.TotalMilliseconds * 0.8)' (int)(this.deltaBackoff.TotalMilliseconds * 1.2)));" is 174.
Long Statement,Microsoft.Practices.TransientFaultHandling,Incremental,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\Incremental.cs,GetShouldRetry,The length of the statement  "                    retryInterval = TimeSpan.FromMilliseconds(this.initialInterval.TotalMilliseconds + (this.increment.TotalMilliseconds * currentRetryCount));" is 139.
Long Statement,Microsoft.Practices.TransientFaultHandling,Guard,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\Guard.cs,ArgumentNotNullOrEmptyString,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' ExceptionMessages.StringCannotBeEmpty' argumentName));" is 124.
Long Statement,Microsoft.Practices.TransientFaultHandling,Guard,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\Guard.cs,ArgumentNotDefaultValue,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' ExceptionMessages.ArgumentCannotBeDefault' argumentName));" is 128.
Long Statement,Microsoft.Practices.TransientFaultHandling,Guard,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\Guard.cs,ArgumentNotZeroOrNegativeValue,The length of the statement  "                throw new ArgumentOutOfRangeException(argumentName' argumentValue' string.Format(CultureInfo.CurrentCulture' ExceptionMessages.ArgumentCannotBeZeroOrNegative' argumentName));" is 174.
Long Statement,Microsoft.Practices.TransientFaultHandling,Guard,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\Guard.cs,ArgumentNotNegativeValue,The length of the statement  "                throw new ArgumentOutOfRangeException(argumentName' argumentValue' string.Format(CultureInfo.CurrentCulture' ExceptionMessages.ArgumentCannotBeNegative' argumentName));" is 168.
Long Statement,Microsoft.Practices.TransientFaultHandling,Guard,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\Guard.cs,ArgumentNotNegativeValue,The length of the statement  "                throw new ArgumentOutOfRangeException(argumentName' argumentValue' string.Format(CultureInfo.CurrentCulture' ExceptionMessages.ArgumentCannotBeNegative' argumentName));" is 168.
Long Statement,Microsoft.Practices.TransientFaultHandling,Guard,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\Guard.cs,ArgumentNotGreaterThan,The length of the statement  "                throw new ArgumentOutOfRangeException(argumentName' argumentValue' string.Format(CultureInfo.CurrentCulture' ExceptionMessages.ArgumentCannotBeGreaterThanBaseline' argumentName' ceilingValue));" is 193.
Long Statement,Microsoft.Practices.TransientFaultHandling,Guard,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\Guard.cs,EnumValueIsDefined,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' ExceptionMessages.InvalidEnumValue' argumentName' enumType));" is 131.
Long Statement,Microsoft.Practices.TransientFaultHandling,Guard,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\Guard.cs,TypeIsAssignableFromType,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' ExceptionMessages.TypeNotCompatible' assignee' providedType)' argumentName);" is 146.
Long Statement,Microsoft.Practices.TransientFaultHandling,RetryPolicy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\RetryPolicy.cs,ExecuteAction,The length of the statement  "                // Perform an extra check in the delay interval. Should prevent from accidentally ending up with the value of -1 that will block a thread indefinitely. " is 151.
Long Statement,Microsoft.Practices.TransientFaultHandling,RetryPolicy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\RetryPolicy.cs,ExecuteAction,The length of the statement  "                // In addition' any other negative numbers will cause an ArgumentOutOfRangeException fault that will be thrown by Thread.Sleep." is 127.
Long Statement,Microsoft.Practices.TransientFaultHandling,RetryPolicy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\RetryPolicy.cs,ExecuteAction,The length of the statement  "            // Configure a custom callback delegate that invokes the end operation and the success handler if the operation succeedes" is 121.
Long Statement,Microsoft.Practices.TransientFaultHandling,RetryPolicy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\RetryPolicy.cs,ExecuteAction,The length of the statement  "            // If the action throws' it analizes it for retries. If a retry is required' it restarts the async operation; otherwise' it invokes the fault handler." is 150.
Long Statement,Microsoft.Practices.TransientFaultHandling,RetryPolicy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\RetryPolicy.cs,ExecuteAction,The length of the statement  "                        // Handling of RetryLimitExceededException needs to be done separately. This exception type indicates the application's intent to exit from the retry loop." is 155.
Long Statement,Microsoft.Practices.TransientFaultHandling,RetryPolicy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\RetryPolicy.cs,ExecuteAction,The length of the statement  "                            // Check if we should continue retrying on this exception. If not' invoke the fault handler so that user code can take control." is 127.
Long Statement,Microsoft.Practices.TransientFaultHandling,RetryPolicy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\RetryPolicy.cs,ExecuteAction,The length of the statement  "                                // Perform an extra check in the delay interval. Should prevent from accidentally ending up with the value of -1 that will block a thread indefinitely. " is 151.
Long Statement,Microsoft.Practices.TransientFaultHandling,RetryPolicy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\RetryPolicy.cs,ExecuteAction,The length of the statement  "                                // In addition' any other negative numbers will cause an ArgumentOutOfRangeException fault that will be thrown by Thread.Sleep." is 127.
Long Statement,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.AzureStorage,StorageTransientErrorDetectionStrategy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\AzureStorage\StorageTransientErrorDetectionStrategy.cs,CheckIsTransient,The length of the statement  "            if (webException != null && (webException.Status == WebExceptionStatus.ProtocolError || webException.Status == WebExceptionStatus.ConnectionClosed))" is 148.
Long Statement,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.AzureStorage,StorageTransientErrorDetectionStrategy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\AzureStorage\StorageTransientErrorDetectionStrategy.cs,CheckIsTransient,The length of the statement  "                if (IsErrorStringMatch(GetErrorCode(dataServiceException)' StorageErrorCodeStrings.InternalError' StorageErrorCodeStrings.ServerBusy' StorageErrorCodeStrings.OperationTimedOut' TableErrorCodeStrings.TableServerOutOfMemory))" is 223.
Long Statement,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.AzureStorage,StorageTransientErrorDetectionStrategy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\AzureStorage\StorageTransientErrorDetectionStrategy.cs,CheckIsTransient,The length of the statement  "                if (IsErrorStringMatch(serverException' StorageErrorCodeStrings.InternalError' StorageErrorCodeStrings.ServerBusy' StorageErrorCodeStrings.OperationTimedOut))" is 158.
Long Statement,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.AzureStorage,StorageTransientErrorDetectionStrategy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\AzureStorage\StorageTransientErrorDetectionStrategy.cs,CheckIsTransient,The length of the statement  "                if (IsErrorStringMatch(storageException' StorageErrorCodeStrings.InternalError' StorageErrorCodeStrings.ServerBusy' TableErrorCodeStrings.TableServerOutOfMemory))" is 162.
Long Statement,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.AzureStorage,StorageTransientErrorDetectionStrategy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\AzureStorage\StorageTransientErrorDetectionStrategy.cs,IsErrorStringMatch,The length of the statement  "            return ex != null && ex.ExtendedErrorInformation != null && errorStrings.Contains(ex.ExtendedErrorInformation.ErrorCode);" is 121.
Long Statement,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling,RetryManagerImpl,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\RetryManagerImpl.cs,GetRetryStrategy,The length of the statement  "                throw new ArgumentOutOfRangeException(string.Format(CultureInfo.CurrentCulture' Resources.RetryStrategyNotFound' retryStrategyName));" is 133.
Long Statement,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.ServiceBus,ServiceBusTransientErrorDetectionStrategy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\ServiceBus\ServiceBusTransientErrorDetectionStrategy.cs,IsTransient,The length of the statement  "            return ex != null && (CheckIsTransientInternal(ex) || (ex.InnerException != null && CheckIsTransientInternal(ex.InnerException)));" is 130.
Long Statement,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.ServiceBus,ServiceBusTransientErrorDetectionStrategy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\ServiceBus\ServiceBusTransientErrorDetectionStrategy.cs,CheckIsTransient,The length of the statement  "                // System.UnauthorizedAccessException: The token provider was unable to provide a security token while accessing 'https://mysbns-sb.accesscontrol.windows.net/WRAPv0.9/'.  " is 169.
Long Statement,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.ServiceBus,ServiceBusTransientErrorDetectionStrategy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\ServiceBus\ServiceBusTransientErrorDetectionStrategy.cs,CheckIsTransient,The length of the statement  "                // Token provider returned message: 'Error:Code:500:SubCode:T9002:Detail:An internal network error occured. Please try again.'.  " is 127.
Long Statement,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.ServiceBus,ServiceBusTransientErrorDetectionStrategy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\ServiceBus\ServiceBusTransientErrorDetectionStrategy.cs,CheckIsTransient,The length of the statement  "                // System.IdentityModel.Tokens.SecurityTokenException: The token provider was unable to provide a security token while accessing 'https://mysbns-sb.accesscontrol.windows.net/WRAPv0.9/'.  " is 185.
Long Statement,Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.ServiceBus,ServiceBusTransientErrorDetectionStrategy,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling\ServiceBus\ServiceBusTransientErrorDetectionStrategy.cs,CheckIsTransient,The length of the statement  "                // Token provider returned message: 'Error:Code:500:SubCode:T9002:Detail:An internal network error occured. Please try again.'.  " is 127.
Complex Conditional,ProjectExtensions.Azure.ServiceBus,AzureSenderReceiverBase,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\AzureSenderReceiverBase.cs,EnsureTopic,The conditional expression  "!createNew && defaultTopic != null && !defaultTopic.EnablePartitioning && enablePartitioning"  is complex.
Virtual Method Call from Constructor,ProjectExtensions.Azure.ServiceBus.Sender,AzureBusSender,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Sender\AzureBusSender.cs,AzureBusSender,The constructor "AzureBusSender" calls a virtual method "ExecuteAction".
Empty Catch Block,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,OnReceiveProcess,The method has an empty catch block.
Empty Catch Block,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,OnMessageHandler,The method has an empty catch block.
Empty Catch Block,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeDeadLetter,The method has an empty catch block.
Empty Catch Block,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeDeadLetter,The method has an empty catch block.
Empty Catch Block,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeComplete,The method has an empty catch block.
Empty Catch Block,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeComplete,The method has an empty catch block.
Empty Catch Block,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeAbandon,The method has an empty catch block.
Empty Catch Block,ProjectExtensions.Azure.ServiceBus.Receiver,AzureReceiverHelper,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureReceiverHelper.cs,SafeAbandon,The method has an empty catch block.
Magic Number,ProjectExtensions.Azure.ServiceBus,BusConfigurationBuilder,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\BusConfigurationBuilder.cs,ServiceBusApplicationId,The following statement contains a magic number: value.Length > 10
Magic Number,ProjectExtensions.Azure.ServiceBus.Receiver,AzureBusReceiver,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureBusReceiver.cs,CancelSubscription,The following statement contains a magic number: Task t = Task.Factory.StartNew(() => {                 //HACK find better way to wait for a cancel request so we are not blocking.                 logger.Info("CancelSubscription Deleting {0}"' value.SubscriptionNameDebug);                 for (int i = 0; i < 100; i++) {                     if (!subscription.Data.Cancelled) {                         Thread.Sleep(1000);                     }                     else {                         break;                     }                 }                  if (configurationFactory.NamespaceManager.SubscriptionExists(defaultTopic.Path' value.SubscriptionName)) {                     var filter = new SqlFilter(string.Format(TYPE_HEADER_NAME + " = '{0}'"' value.MessageType.FullName.Replace('.'' '_')));                     retryPolicy.ExecuteAction(() => configurationFactory.NamespaceManager.DeleteSubscription(defaultTopic.Path' value.SubscriptionName));                     logger.Info("CancelSubscription Deleted {0}"' value.SubscriptionNameDebug);                 }             });
Magic Number,ProjectExtensions.Azure.ServiceBus.Receiver,AzureBusReceiver,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Receiver\AzureBusReceiver.cs,CancelSubscription,The following statement contains a magic number: Task t = Task.Factory.StartNew(() => {                 //HACK find better way to wait for a cancel request so we are not blocking.                 logger.Info("CancelSubscription Deleting {0}"' value.SubscriptionNameDebug);                 for (int i = 0; i < 100; i++) {                     if (!subscription.Data.Cancelled) {                         Thread.Sleep(1000);                     }                     else {                         break;                     }                 }                  if (configurationFactory.NamespaceManager.SubscriptionExists(defaultTopic.Path' value.SubscriptionName)) {                     var filter = new SqlFilter(string.Format(TYPE_HEADER_NAME + " = '{0}'"' value.MessageType.FullName.Replace('.'' '_')));                     retryPolicy.ExecuteAction(() => configurationFactory.NamespaceManager.DeleteSubscription(defaultTopic.Path' value.SubscriptionName));                     logger.Info("CancelSubscription Deleted {0}"' value.SubscriptionNameDebug);                 }             });
Magic Number,ProjectExtensions.Azure.ServiceBus.Sender,AzureBusSender,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\Sender\AzureBusSender.cs,Send,The following statement contains a magic number: var sentTimeout = TimeSpan.FromSeconds(30);
Magic Number,Microsoft.Practices.TransientFaultHandling,ExponentialBackoff,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\ExponentialBackoff.cs,GetShouldRetry,The following statement contains a magic number: return delegate(int currentRetryCount' Exception lastException' out TimeSpan retryInterval)             {                 if (currentRetryCount < this.retryCount)                 {                     var random = new Random();                      var delta = (int)((Math.Pow(2.0' currentRetryCount) - 1.0) * random.Next((int)(this.deltaBackoff.TotalMilliseconds * 0.8)' (int)(this.deltaBackoff.TotalMilliseconds * 1.2)));                     var interval = (int)Math.Min(checked(this.minBackoff.TotalMilliseconds + delta)' this.maxBackoff.TotalMilliseconds);                      retryInterval = TimeSpan.FromMilliseconds(interval);                      return true;                 }                  retryInterval = TimeSpan.Zero;                 return false;             };
Magic Number,Microsoft.Practices.TransientFaultHandling,ExponentialBackoff,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\ExponentialBackoff.cs,GetShouldRetry,The following statement contains a magic number: return delegate(int currentRetryCount' Exception lastException' out TimeSpan retryInterval)             {                 if (currentRetryCount < this.retryCount)                 {                     var random = new Random();                      var delta = (int)((Math.Pow(2.0' currentRetryCount) - 1.0) * random.Next((int)(this.deltaBackoff.TotalMilliseconds * 0.8)' (int)(this.deltaBackoff.TotalMilliseconds * 1.2)));                     var interval = (int)Math.Min(checked(this.minBackoff.TotalMilliseconds + delta)' this.maxBackoff.TotalMilliseconds);                      retryInterval = TimeSpan.FromMilliseconds(interval);                      return true;                 }                  retryInterval = TimeSpan.Zero;                 return false;             };
Magic Number,Microsoft.Practices.TransientFaultHandling,ExponentialBackoff,C:\research\architectureSmells\repos\ProjectExtensions_ProjectExtensions.Azure.ServiceBus\src\ProjectExtensions.Azure.ServiceBus\TransientFaultHandling.Core\ExponentialBackoff.cs,GetShouldRetry,The following statement contains a magic number: return delegate(int currentRetryCount' Exception lastException' out TimeSpan retryInterval)             {                 if (currentRetryCount < this.retryCount)                 {                     var random = new Random();                      var delta = (int)((Math.Pow(2.0' currentRetryCount) - 1.0) * random.Next((int)(this.deltaBackoff.TotalMilliseconds * 0.8)' (int)(this.deltaBackoff.TotalMilliseconds * 1.2)));                     var interval = (int)Math.Min(checked(this.minBackoff.TotalMilliseconds + delta)' this.maxBackoff.TotalMilliseconds);                      retryInterval = TimeSpan.FromMilliseconds(interval);                      return true;                 }                  retryInterval = TimeSpan.Zero;                 return false;             };
