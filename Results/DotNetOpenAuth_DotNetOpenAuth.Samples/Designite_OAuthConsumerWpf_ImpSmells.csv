Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\OAuth\OAuthConsumerWpf\MainWindow.xaml.cs,beginAuthorizationButton_Click,The length of the statement  "				MessageBox.Show(this' "You must modify the App.config or OAuthConsumerWpf.exe.config file for this application to include your Google OAuth consumer key first."' "Configuration required"' MessageBoxButton.OK' MessageBoxImage.Stop); " is 231.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\OAuth\OAuthConsumerWpf\MainWindow.xaml.cs,beginAuthorizationButton_Click,The length of the statement  "							   select new { Name = entry.Element(XName.Get("title"' "http://www.w3.org/2005/Atom")).Value' Email = entry.Element(XName.Get("email"' "http://schemas.google.com/g/2005")).Attribute("address").Value }; " is 199.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\OAuth\OAuthConsumerWpf\MainWindow.xaml.cs,postButton_Click,The length of the statement  "			GoogleConsumer.PostBlogEntry(this.google' this.googleAccessToken' this.blogUrlBox.Text' this.postTitleBox.Text' postBodyXml); " is 125.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\OAuth\OAuthConsumerWpf\MainWindow.xaml.cs,beginWcfAuthorizationButton_Click,The length of the statement  "			auth.Authorization.Scope.AddRange(OAuthUtilities.SplitScopes("http://tempuri.org/IDataApi/GetName http://tempuri.org/IDataApi/GetAge http://tempuri.org/IDataApi/GetFavoriteSites")); " is 181.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\OAuth\OAuthConsumerWpf\MainWindow.xaml.cs,beginButton_Click,The length of the statement  "					RequestTokenEndpoint = new MessageReceivingEndpoint(this.requestTokenUrlBox.Text' this.requestTokenHttpMethod.SelectedIndex == 0 ? HttpDeliveryMethods.GetRequest : HttpDeliveryMethods.PostRequest)' " is 197.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\OAuth\OAuthConsumerWpf\MainWindow.xaml.cs,beginButton_Click,The length of the statement  "					AccessTokenEndpoint = new MessageReceivingEndpoint(this.accessTokenUrlBox.Text' this.accessTokenHttpMethod.SelectedIndex == 0 ? HttpDeliveryMethods.GetRequest : HttpDeliveryMethods.PostRequest)' " is 194.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\OAuth\OAuthConsumerWpf\MainWindow.xaml.cs,beginButton_Click,The length of the statement  "				HttpDeliveryMethods resourceHttpMethod = this.resourceHttpMethodList.SelectedIndex < 2 ? HttpDeliveryMethods.GetRequest : HttpDeliveryMethods.PostRequest; " is 154.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\OAuth\OAuthConsumerWpf\MainWindow.xaml.cs,beginButton_Click,The length of the statement  "				using (IncomingWebResponse resourceResponse = consumer.PrepareAuthorizedRequestAndSend(resourceEndpoint' accessToken)) { " is 120.
Long Statement,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\OAuth\OAuthConsumerWpf\MainWindow.xaml.cs,oauth2BeginButton_Click,The length of the statement  "				var client = new OAuth2.UserAgentClient(authServer' this.oauth2ClientIdentifierBox.Text' this.oauth2ClientSecretBox.Text); " is 122.
Magic Number,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\OAuth\OAuthConsumerWpf\MainWindow.xaml.cs,beginAuthorizationButton_Click,The following statement contains a magic number: if (result.HasValue && result.Value) {  				this.googleAccessToken = auth.AccessToken;  				this.postButton.IsEnabled = true;    				XDocument contactsDocument = GoogleConsumer.GetContacts(this.google' this.googleAccessToken' 25' 1);  				var contacts = from entry in contactsDocument.Root.Elements(XName.Get("entry"' "http://www.w3.org/2005/Atom"))  							   select new { Name = entry.Element(XName.Get("title"' "http://www.w3.org/2005/Atom")).Value' Email = entry.Element(XName.Get("email"' "http://schemas.google.com/g/2005")).Attribute("address").Value };  				this.contactsGrid.Children.Clear();  				foreach (var contact in contacts) {  					this.contactsGrid.RowDefinitions.Add(new RowDefinition());  					TextBlock name = new TextBlock { Text = contact.Name };  					TextBlock email = new TextBlock { Text = contact.Email };  					Grid.SetRow(name' this.contactsGrid.RowDefinitions.Count - 1);  					Grid.SetRow(email' this.contactsGrid.RowDefinitions.Count - 1);  					Grid.SetColumn(email' 1);  					this.contactsGrid.Children.Add(name);  					this.contactsGrid.Children.Add(email);  				}  			}
Magic Number,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\OAuth\OAuthConsumerWpf\MainWindow.xaml.cs,beginButton_Click,The following statement contains a magic number: try {  				var service = new ServiceProviderDescription {  					RequestTokenEndpoint = new MessageReceivingEndpoint(this.requestTokenUrlBox.Text' this.requestTokenHttpMethod.SelectedIndex == 0 ? HttpDeliveryMethods.GetRequest : HttpDeliveryMethods.PostRequest)'  					UserAuthorizationEndpoint = new MessageReceivingEndpoint(this.authorizeUrlBox.Text' HttpDeliveryMethods.GetRequest)'  					AccessTokenEndpoint = new MessageReceivingEndpoint(this.accessTokenUrlBox.Text' this.accessTokenHttpMethod.SelectedIndex == 0 ? HttpDeliveryMethods.GetRequest : HttpDeliveryMethods.PostRequest)'  					TamperProtectionElements = new ITamperProtectionChannelBindingElement[] { new HmacSha1SigningBindingElement() }'  					ProtocolVersion = this.oauthVersion.SelectedIndex == 0 ? ProtocolVersion.V10 : ProtocolVersion.V10a'  				};  				var tokenManager = new InMemoryTokenManager();  				tokenManager.ConsumerKey = this.consumerKeyBox.Text;  				tokenManager.ConsumerSecret = this.consumerSecretBox.Text;    				var consumer = new DesktopConsumer(service' tokenManager);  				string accessToken;  				if (service.ProtocolVersion == ProtocolVersion.V10) {  					string requestToken;  					Uri authorizeUrl = consumer.RequestUserAuthorization(null' null' out requestToken);  					Process.Start(authorizeUrl.AbsoluteUri);  					MessageBox.Show(this' "Click OK when you've authorized the app.");  					var authorizationResponse = consumer.ProcessUserAuthorization(requestToken' null);  					accessToken = authorizationResponse.AccessToken;  				} else {  					var authorizePopup = new Authorize(  						consumer'  						(DesktopConsumer c' out string requestToken) => c.RequestUserAuthorization(null' null' out requestToken));  					authorizePopup.Owner = this;  					bool? result = authorizePopup.ShowDialog();  					if (result.HasValue && result.Value) {  						accessToken = authorizePopup.AccessToken;  					} else {  						return;  					}  				}  				HttpDeliveryMethods resourceHttpMethod = this.resourceHttpMethodList.SelectedIndex < 2 ? HttpDeliveryMethods.GetRequest : HttpDeliveryMethods.PostRequest;  				if (this.resourceHttpMethodList.SelectedIndex == 1) {  					resourceHttpMethod |= HttpDeliveryMethods.AuthorizationHeaderRequest;  				}  				var resourceEndpoint = new MessageReceivingEndpoint(this.resourceUrlBox.Text' resourceHttpMethod);  				using (IncomingWebResponse resourceResponse = consumer.PrepareAuthorizedRequestAndSend(resourceEndpoint' accessToken)) {  					this.resultsBox.Text = resourceResponse.GetResponseReader().ReadToEnd();  				}  			} catch (DotNetOpenAuth.Messaging.ProtocolException ex) {  				MessageBox.Show(this' ex.Message);  			}
Magic Number,DotNetOpenAuth.Samples.OAuthConsumerWpf,MainWindow,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\OAuth\OAuthConsumerWpf\MainWindow.xaml.cs,oauth2BeginButton_Click,The following statement contains a magic number: try {  				var client = new OAuth2.UserAgentClient(authServer' this.oauth2ClientIdentifierBox.Text' this.oauth2ClientSecretBox.Text);    				var authorizePopup = new Authorize2(client);  				authorizePopup.Authorization.Scope.AddRange(OAuthUtilities.SplitScopes(this.oauth2ScopeBox.Text));  				authorizePopup.Owner = this;  				bool? result = authorizePopup.ShowDialog();  				if (result.HasValue && result.Value) {  					var requestUri = new UriBuilder(this.oauth2ResourceUrlBox.Text);  					if (this.oauth2ResourceHttpMethodList.SelectedIndex > 0) {  						requestUri.AppendQueryArgument("access_token"' authorizePopup.Authorization.AccessToken);  					}    					var request = (HttpWebRequest)WebRequest.Create(requestUri.Uri);  					request.Method = this.oauth2ResourceHttpMethodList.SelectedIndex < 2 ? "GET" : "POST";  					if (this.oauth2ResourceHttpMethodList.SelectedIndex == 0) {  						client.AuthorizeRequest(request' authorizePopup.Authorization);  					}    					using (var resourceResponse = request.GetResponse()) {  						using (var responseStream = new StreamReader(resourceResponse.GetResponseStream())) {  							this.oauth2ResultsBox.Text = responseStream.ReadToEnd();  						}  					}  				} else {  					return;  				}  			} catch (Messaging.ProtocolException ex) {  				MessageBox.Show(this' ex.Message);  			} catch (WebException ex) {  				string responseText = string.Empty;  				if (ex.Response != null) {  					using (var responseReader = new StreamReader(ex.Response.GetResponseStream())) {  						responseText = responseReader.ReadToEnd();  					}  				}  				MessageBox.Show(this' ex.Message + "  " + responseText);  			}
