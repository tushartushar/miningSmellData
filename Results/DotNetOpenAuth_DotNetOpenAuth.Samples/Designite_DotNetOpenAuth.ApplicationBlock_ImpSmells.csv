Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,DotNetOpenAuth.ApplicationBlock,GoogleConsumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\GoogleConsumer.cs,PostBlogEntry,The method has 5 parameters. Parameters: consumer' accessToken' blogUrl' title' body
Long Identifier,DotNetOpenAuth.ApplicationBlock,TwitterConsumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\TwitterConsumer.cs,,The length of the parameter SignInWithTwitterServiceDescription is 35.
Long Identifier,DotNetOpenAuth.ApplicationBlock,TwitterConsumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\TwitterConsumer.cs,,The length of the parameter GetFriendTimelineStatusEndpoint is 31.
Long Identifier,DotNetOpenAuth.ApplicationBlock,TwitterConsumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\TwitterConsumer.cs,,The length of the parameter UpdateProfileBackgroundImageEndpoint is 36.
Long Identifier,DotNetOpenAuth.ApplicationBlock,YubikeyRelyingParty,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\YubikeyRelyingParty.cs,,The length of the parameter DefaultYubicoAuthorizationServer is 32.
Long Statement,DotNetOpenAuth.ApplicationBlock,GoogleConsumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\GoogleConsumer.cs,CreateRsaSha1ServiceDescription,The length of the statement  "				RequestTokenEndpoint = new MessageReceivingEndpoint("https://www.google.com/accounts/OAuthGetRequestToken"' HttpDeliveryMethods.AuthorizationHeaderRequest | HttpDeliveryMethods.GetRequest)' " is 189.
Long Statement,DotNetOpenAuth.ApplicationBlock,GoogleConsumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\GoogleConsumer.cs,CreateRsaSha1ServiceDescription,The length of the statement  "				UserAuthorizationEndpoint = new MessageReceivingEndpoint("https://www.google.com/accounts/OAuthAuthorizeToken"' HttpDeliveryMethods.AuthorizationHeaderRequest | HttpDeliveryMethods.GetRequest)' " is 193.
Long Statement,DotNetOpenAuth.ApplicationBlock,GoogleConsumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\GoogleConsumer.cs,CreateRsaSha1ServiceDescription,The length of the statement  "				AccessTokenEndpoint = new MessageReceivingEndpoint("https://www.google.com/accounts/OAuthGetAccessToken"' HttpDeliveryMethods.AuthorizationHeaderRequest | HttpDeliveryMethods.GetRequest)' " is 187.
Long Statement,DotNetOpenAuth.ApplicationBlock,GoogleConsumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\GoogleConsumer.cs,CreateRsaSha1ServiceDescription,The length of the statement  "				TamperProtectionElements = new ITamperProtectionChannelBindingElement[] { new RsaSha1ConsumerSigningBindingElement(signingCertificate) }' " is 137.
Long Statement,DotNetOpenAuth.ApplicationBlock,GoogleConsumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\GoogleConsumer.cs,GetContacts,The length of the statement  "			request.UserAgent = "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML' like Gecko) Chrome/10.0.648.151 Safari/534.16"; " is 143.
Long Statement,DotNetOpenAuth.ApplicationBlock,GoogleConsumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\GoogleConsumer.cs,PostBlogEntry,The length of the statement  "				new XElement(XName.Get("category"' Atom)' new XAttribute("scheme"' "http://www.blogger.com/atom/ns#")' new XAttribute("term"' "oauthdemo"))); " is 141.
Long Statement,DotNetOpenAuth.ApplicationBlock,GoogleConsumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\GoogleConsumer.cs,PostBlogEntry,The length of the statement  "			WebRequest request = consumer.PrepareAuthorizedRequest(new MessageReceivingEndpoint(feedUrl' HttpDeliveryMethods.PostRequest | HttpDeliveryMethods.AuthorizationHeaderRequest)' accessToken); " is 189.
Long Statement,DotNetOpenAuth.ApplicationBlock,TwitterConsumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\TwitterConsumer.cs,UpdateProfileBackgroundImage,The length of the statement  "				MultipartPostPart.CreateFormFilePart("image"' image' "image/" + Path.GetExtension(image).Substring(1).ToLowerInvariant())' " is 122.
Long Statement,DotNetOpenAuth.ApplicationBlock,TwitterConsumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\TwitterConsumer.cs,TryFinishSignInWithTwitter,The length of the statement  "			OpenId.Identifier fake_claimed_id = string.Format(CultureInfo.InvariantCulture' "http://twitter.com/{0}#{1}"' screenName' userId); " is 130.
Long Statement,DotNetOpenAuth.ApplicationBlock,Util,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\Util.cs,UseDefaultNetworkCredentialsOnOutgoingHttpRequests,The length of the statement  "			Debug.Assert(!(channel.WebRequestHandler is WrappingWebRequestHandler)' "Wrapping an already wrapped web request handler.  This is legal' but highly suspect of a bug as you don't want to wrap the same channel repeatedly to apply the same effect."); " is 248.
Long Statement,DotNetOpenAuth.ApplicationBlock,YammerConsumer,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\YammerConsumer.cs,CompleteAuthorization,The length of the statement  "				AccessTokenEndpoint = new MessageReceivingEndpoint(ServiceDescription.AccessTokenEndpoint.Location.AbsoluteUri + "?oauth_verifier=" + Uri.EscapeDataString(userCode)' HttpDeliveryMethods.AuthorizationHeaderRequest | HttpDeliveryMethods.PostRequest)' " is 248.
Magic Number,DotNetOpenAuth.ApplicationBlock,Util,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\Util.cs,GetIndividualFlags,The following statement contains a magic number: for (int i = 0; i < sizeof(long) * 8; i++) { // long is the type behind the largest enum  				// Select an individual application from the scopes.  				long individualFlagPosition = (long)Math.Pow(2' i);  				long individualFlag = flagsLong & individualFlagPosition;  				if (individualFlag == individualFlagPosition) {  					yield return individualFlag;  				}  			}
Magic Number,DotNetOpenAuth.ApplicationBlock,Util,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\Util.cs,GetIndividualFlags,The following statement contains a magic number: for (int i = 0; i < sizeof(long) * 8; i++) { // long is the type behind the largest enum  				// Select an individual application from the scopes.  				long individualFlagPosition = (long)Math.Pow(2' i);  				long individualFlag = flagsLong & individualFlagPosition;  				if (individualFlag == individualFlagPosition) {  					yield return individualFlag;  				}  			}
Magic Number,DotNetOpenAuth.ApplicationBlock,Util,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\Util.cs,CopyTo,The following statement contains a magic number: byte[] buffer = new byte[1024];
Magic Number,DotNetOpenAuth.ApplicationBlock,Util,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\Util.cs,CopyTo,The following statement contains a magic number: while ((readBytes = copyFrom.Read(buffer' 0' Math.Min(1024' maximumBytesToCopy))) > 0) {  				int writeBytes = Math.Min(maximumBytesToCopy' readBytes);  				copyTo.Write(buffer' 0' writeBytes);  				totalCopiedBytes += writeBytes;  				maximumBytesToCopy -= writeBytes;  			}
Magic Number,DotNetOpenAuth.ApplicationBlock,YubikeyRelyingParty,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\YubikeyRelyingParty.cs,ExtractUsername,The following statement contains a magic number: return yubikeyToken.Substring(0' 12);
Magic Number,DotNetOpenAuth.ApplicationBlock,YubikeyRelyingParty,C:\repos\DotNetOpenAuth_DotNetOpenAuth.Samples\src\DotNetOpenAuth.ApplicationBlock\YubikeyRelyingParty.cs,EnsureWellFormedToken,The following statement contains a magic number: if (yubikeyToken.Length <= 12) {  				throw new ArgumentException("Yubikey token has unexpected length.");  			}
