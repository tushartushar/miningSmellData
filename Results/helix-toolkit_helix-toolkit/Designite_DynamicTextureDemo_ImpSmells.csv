Implementation smell,Namespace,Class,File,Method,Description
Long Method,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The method has 100 lines of code.
Long Method,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,The method has 123 lines of code.
Complex Method,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,Cyclomatic complexity of the method is 15
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new HelixToolkit.Wpf.SharpDX.PerspectiveCamera              {                  Position = new Point3D(10' 10' 10)'                  LookDirection = new Vector3D(-10' -10' -10)'                  UpDirection = new Vector3D(0' 1' 0)              };
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new HelixToolkit.Wpf.SharpDX.PerspectiveCamera              {                  Position = new Point3D(10' 10' 10)'                  LookDirection = new Vector3D(-10' -10' -10)'                  UpDirection = new Vector3D(0' 1' 0)              };
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new HelixToolkit.Wpf.SharpDX.PerspectiveCamera              {                  Position = new Point3D(10' 10' 10)'                  LookDirection = new Vector3D(-10' -10' -10)'                  UpDirection = new Vector3D(0' 1' 0)              };
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new HelixToolkit.Wpf.SharpDX.PerspectiveCamera              {                  Position = new Point3D(10' 10' 10)'                  LookDirection = new Vector3D(-10' -10' -10)'                  UpDirection = new Vector3D(0' 1' 0)              };
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new HelixToolkit.Wpf.SharpDX.PerspectiveCamera              {                  Position = new Point3D(10' 10' 10)'                  LookDirection = new Vector3D(-10' -10' -10)'                  UpDirection = new Vector3D(0' 1' 0)              };
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new HelixToolkit.Wpf.SharpDX.PerspectiveCamera              {                  Position = new Point3D(10' 10' 10)'                  LookDirection = new Vector3D(-10' -10' -10)'                  UpDirection = new Vector3D(0' 1' 0)              };
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Light1Direction = new Vector3D(-10' -10' -10);
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Light1Direction = new Vector3D(-10' -10' -10);
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Light1Direction = new Vector3D(-10' -10' -10);
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: b2.AddSphere(new Vector3(0f' 0f' 0f)' 4' 64' 64);
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: b2.AddSphere(new Vector3(0f' 0f' 0f)' 4' 64' 64);
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: b2.AddSphere(new Vector3(0f' 0f' 0f)' 4' 64' 64);
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.ModelMaterial = new PhongMaterial              {                  AmbientColor = Colors.Gray.ToColor4()'                  DiffuseColor = Colors.White.ToColor4()'                  SpecularColor = Colors.White.ToColor4()'                  SpecularShininess = 100f'                  DiffuseAlphaMap = image'                  DiffuseMap = LoadFileToMemory(new System.Uri(@"TextureCheckerboard2.dds"' System.UriKind.RelativeOrAbsolute).ToString())'                  NormalMap = LoadFileToMemory(new System.Uri(@"TextureCheckerboard2_dot3.dds"' System.UriKind.RelativeOrAbsolute).ToString())'              };
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.InnerModelMaterial = new PhongMaterial              {                  AmbientColor = Colors.Gray.ToColor4()'                  DiffuseColor = new Color4(0.75f' 0.75f' 0.75f' 1.0f)'                  SpecularColor = Colors.White.ToColor4()'                  SpecularShininess = 100f'                  DiffuseAlphaMap = image'                  DiffuseMap = LoadFileToMemory(new System.Uri(@"TextureNoise1.jpg"' System.UriKind.RelativeOrAbsolute).ToString())'                  NormalMap = ModelMaterial.NormalMap              };
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.InnerModelMaterial = new PhongMaterial              {                  AmbientColor = Colors.Gray.ToColor4()'                  DiffuseColor = new Color4(0.75f' 0.75f' 0.75f' 1.0f)'                  SpecularColor = Colors.White.ToColor4()'                  SpecularShininess = 100f'                  DiffuseAlphaMap = image'                  DiffuseMap = LoadFileToMemory(new System.Uri(@"TextureNoise1.jpg"' System.UriKind.RelativeOrAbsolute).ToString())'                  NormalMap = ModelMaterial.NormalMap              };
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.InnerModelMaterial = new PhongMaterial              {                  AmbientColor = Colors.Gray.ToColor4()'                  DiffuseColor = new Color4(0.75f' 0.75f' 0.75f' 1.0f)'                  SpecularColor = Colors.White.ToColor4()'                  SpecularShininess = 100f'                  DiffuseAlphaMap = image'                  DiffuseMap = LoadFileToMemory(new System.Uri(@"TextureNoise1.jpg"' System.UriKind.RelativeOrAbsolute).ToString())'                  NormalMap = ModelMaterial.NormalMap              };
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.InnerModelMaterial = new PhongMaterial              {                  AmbientColor = Colors.Gray.ToColor4()'                  DiffuseColor = new Color4(0.75f' 0.75f' 0.75f' 1.0f)'                  SpecularColor = Colors.White.ToColor4()'                  SpecularShininess = 100f'                  DiffuseAlphaMap = image'                  DiffuseMap = LoadFileToMemory(new System.Uri(@"TextureNoise1.jpg"' System.UriKind.RelativeOrAbsolute).ToString())'                  NormalMap = ModelMaterial.NormalMap              };
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: i < count / 2
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: i < count / 2
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: var indices = new IntCollection(count * 2);
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: LineMaterial = new LineArrowHeadMaterial() { Color = Colors.White' Thickness = 0.5' ArrowSize = 0.02};
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: LineMaterial = new LineArrowHeadMaterial() { Color = Colors.White' Thickness = 0.5' ArrowSize = 0.02};
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Task.Run(() =>              {                  while (!token.IsCancellationRequested)                  {                      Timer_Tick();                      Task.Delay(16).Wait();                  }              }' token);
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,The following statement contains a magic number: counter %= 128;
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,The following statement contains a magic number: context.Send((o) =>                  {                      if (!AnimateUVOffset)                      {                          Model.TextureCoordinates = texture;                          if (ReverseInnerRotation)                          {                              var texture1 = new Vector2Collection(texture);                              texture1.Reverse();                                                 InnerModel.TextureCoordinates = texture1;                          }                          else                          {                              InnerModel.TextureCoordinates = texture;                          }                      }                      else                      {                          ModelMaterial.UVTransform = new UVTransform(0' Vector2.One'                              ModelMaterial.UVTransform.Translation + new Vector2(0.005f' -0.01f));                          InnerModelMaterial.UVTransform = new UVTransform(0' Vector2.One'                              InnerModelMaterial.UVTransform.Translation + new Vector2(-0.01f' 0.005f));                      }                  }' null);
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,The following statement contains a magic number: context.Send((o) =>                  {                      if (!AnimateUVOffset)                      {                          Model.TextureCoordinates = texture;                          if (ReverseInnerRotation)                          {                              var texture1 = new Vector2Collection(texture);                              texture1.Reverse();                                                 InnerModel.TextureCoordinates = texture1;                          }                          else                          {                              InnerModel.TextureCoordinates = texture;                          }                      }                      else                      {                          ModelMaterial.UVTransform = new UVTransform(0' Vector2.One'                              ModelMaterial.UVTransform.Translation + new Vector2(0.005f' -0.01f));                          InnerModelMaterial.UVTransform = new UVTransform(0' Vector2.One'                              InnerModelMaterial.UVTransform.Translation + new Vector2(-0.01f' 0.005f));                      }                  }' null);
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,The following statement contains a magic number: context.Send((o) =>                  {                      if (!AnimateUVOffset)                      {                          Model.TextureCoordinates = texture;                          if (ReverseInnerRotation)                          {                              var texture1 = new Vector2Collection(texture);                              texture1.Reverse();                                                 InnerModel.TextureCoordinates = texture1;                          }                          else                          {                              InnerModel.TextureCoordinates = texture;                          }                      }                      else                      {                          ModelMaterial.UVTransform = new UVTransform(0' Vector2.One'                              ModelMaterial.UVTransform.Translation + new Vector2(0.005f' -0.01f));                          InnerModelMaterial.UVTransform = new UVTransform(0' Vector2.One'                              InnerModelMaterial.UVTransform.Translation + new Vector2(-0.01f' 0.005f));                      }                  }' null);
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,The following statement contains a magic number: context.Send((o) =>                  {                      if (!AnimateUVOffset)                      {                          Model.TextureCoordinates = texture;                          if (ReverseInnerRotation)                          {                              var texture1 = new Vector2Collection(texture);                              texture1.Reverse();                                                 InnerModel.TextureCoordinates = texture1;                          }                          else                          {                              InnerModel.TextureCoordinates = texture;                          }                      }                      else                      {                          ModelMaterial.UVTransform = new UVTransform(0' Vector2.One'                              ModelMaterial.UVTransform.Translation + new Vector2(0.005f' -0.01f));                          InnerModelMaterial.UVTransform = new UVTransform(0' Vector2.One'                              InnerModelMaterial.UVTransform.Translation + new Vector2(-0.01f' 0.005f));                      }                  }' null);
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,The following statement contains a magic number: var off = (float)Math.Sin(Math.PI*(float)(counter + i)/64);
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,The following statement contains a magic number: p *= 0.8f + off * 0.2f;
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,The following statement contains a magic number: p *= 0.8f + off * 0.2f;
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,The following statement contains a magic number: removedIndex += 3 * 8;
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,The following statement contains a magic number: removedIndex += 3 * 8;
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,The following statement contains a magic number: k < 10
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,The following statement contains a magic number: var c = lineColors[colors.Count - 2];
Magic Number,DynamicTextureDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\DynamicTextureDemo\MainViewModel.cs,Timer_Tick,The following statement contains a magic number: k < 10
