Implementation smell,Namespace,Class,File,Method,Description
Long Statement,CustomShaderDemo,SelectableLineGeometryModel3D,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\SelectableLineGeometryModel3D.cs,OnAttach,The length of the statement  "	if (renderHost.RenderTechnique == renderHost.RenderTechniquesManager.RenderTechniques.Get (DeferredRenderTechniqueNames.Deferred) || renderHost.RenderTechnique == renderHost.RenderTechniquesManager.RenderTechniques.Get (DeferredRenderTechniqueNames.GBuffer)) " is 258.
Long Statement,CustomShaderDemo,SelectablePointGeometryModel3D,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\SelectablePointGeometryModel3D.cs,OnAttach,The length of the statement  "	if (renderHost.RenderTechnique == renderHost.RenderTechniquesManager.RenderTechniques.Get (DeferredRenderTechniqueNames.Deferred) || renderHost.RenderTechnique == renderHost.RenderTechniquesManager.RenderTechniques.Get (DeferredRenderTechniqueNames.GBuffer)) " is 258.
Long Statement,CustomShaderDemo,CustomEffectsManager,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomEffectsManager.cs,InitEffects,The length of the statement  "	var customInputLayout = new InputLayout (device' GetEffect (custom).GetTechniqueByName ("RenderCustom").GetPassByIndex (0).Description.Signature' new[] { " is 153.
Long Statement,CustomShaderDemo,CustomEffectsManager,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomEffectsManager.cs,InitEffects,The length of the statement  "		new InputElement ("TEXCOORD"' 1' Format.R32G32B32A32_Float' InputElement.AppendAligned' 1' InputClassification.PerInstanceData' 1)' " is 131.
Long Statement,CustomShaderDemo,CustomEffectsManager,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomEffectsManager.cs,InitEffects,The length of the statement  "		new InputElement ("TEXCOORD"' 2' Format.R32G32B32A32_Float' InputElement.AppendAligned' 1' InputClassification.PerInstanceData' 1)' " is 131.
Long Statement,CustomShaderDemo,CustomEffectsManager,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomEffectsManager.cs,InitEffects,The length of the statement  "		new InputElement ("TEXCOORD"' 3' Format.R32G32B32A32_Float' InputElement.AppendAligned' 1' InputClassification.PerInstanceData' 1)' " is 131.
Long Statement,CustomShaderDemo,CustomEffectsManager,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomEffectsManager.cs,InitEffects,The length of the statement  "		new InputElement ("TEXCOORD"' 4' Format.R32G32B32A32_Float' InputElement.AppendAligned' 1' InputClassification.PerInstanceData' 1)' " is 131.
Long Statement,CustomShaderDemo,CustomEffectsManager,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomEffectsManager.cs,InitEffects,The length of the statement  "	var linesInputLayout = new InputLayout (device' GetEffect (lines).GetTechniqueByName (DefaultRenderTechniqueNames.Lines).GetPassByIndex (0).Description.Signature' new[] { " is 170.
Long Statement,CustomShaderDemo,CustomEffectsManager,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomEffectsManager.cs,InitEffects,The length of the statement  "		new InputElement ("TEXCOORD"' 1' Format.R32G32B32A32_Float' InputElement.AppendAligned' 1' InputClassification.PerInstanceData' 1)' " is 131.
Long Statement,CustomShaderDemo,CustomEffectsManager,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomEffectsManager.cs,InitEffects,The length of the statement  "		new InputElement ("TEXCOORD"' 2' Format.R32G32B32A32_Float' InputElement.AppendAligned' 1' InputClassification.PerInstanceData' 1)' " is 131.
Long Statement,CustomShaderDemo,CustomEffectsManager,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomEffectsManager.cs,InitEffects,The length of the statement  "		new InputElement ("TEXCOORD"' 3' Format.R32G32B32A32_Float' InputElement.AppendAligned' 1' InputClassification.PerInstanceData' 1)' " is 131.
Long Statement,CustomShaderDemo,CustomEffectsManager,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomEffectsManager.cs,InitEffects,The length of the statement  "		new InputElement ("TEXCOORD"' 4' Format.R32G32B32A32_Float' InputElement.AppendAligned' 1' InputClassification.PerInstanceData' 1)' " is 131.
Long Statement,CustomShaderDemo,CustomEffectsManager,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomEffectsManager.cs,InitEffects,The length of the statement  "	var pointsInputLayout = new InputLayout (device' GetEffect (points).GetTechniqueByName (DefaultRenderTechniqueNames.Points).GetPassByIndex (0).Description.Signature' new[] { " is 173.
Long Statement,CustomShaderDemo,CustomEffectsManager,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomEffectsManager.cs,InitEffects,The length of the statement  "	var textInputLayout = new InputLayout (device' GetEffect (text).GetTechniqueByName (DefaultRenderTechniqueNames.BillboardText).GetPassByIndex (0).Description.Signature' new[] { " is 176.
Long Statement,CustomShaderDemo,CustomGeometryModel3D,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomGeometryModel3D.cs,OnRender,The length of the statement  "		Device.ImmediateContext.InputAssembler.SetVertexBuffers (0' new VertexBufferBinding (VertexBuffer.Buffer' VertexBuffer.StructureSize' 0)); " is 138.
Long Statement,CustomShaderDemo,CustomGeometryModel3D,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomGeometryModel3D.cs,CreateCustomVertexArray,The length of the statement  "			CustomParams = new Vector4 ((bool)GetValue (AttachedProperties.ShowSelectedProperty) ? 1 : 0' RequiresPerVertexColoration ? 1 : 0' 0' 0) " is 136.
Long Statement,CustomShaderDemo,MainWindow,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainWindow.xaml.cs,Button_Click,The length of the statement  "			geom.SetValue (AttachedProperties.ShowSelectedProperty' !(bool)geom.GetValue (AttachedProperties.ShowSelectedProperty)); " is 120.
Empty Catch Block,CustomShaderDemo,CustomGeometryModel3D,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\CustomGeometryModel3D.cs,OnRasterStateChanged,The method has an empty catch block.
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Camera = new PerspectiveCamera {  	Position = new Point3D (3' 3' 5)'  	LookDirection = new Vector3D (-3' -3' -5)'  	UpDirection = new Vector3D (0' 1' 0)'  	FarPlaneDistance = 5000000  };  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Camera = new PerspectiveCamera {  	Position = new Point3D (3' 3' 5)'  	LookDirection = new Vector3D (-3' -3' -5)'  	UpDirection = new Vector3D (0' 1' 0)'  	FarPlaneDistance = 5000000  };  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Camera = new PerspectiveCamera {  	Position = new Point3D (3' 3' 5)'  	LookDirection = new Vector3D (-3' -3' -5)'  	UpDirection = new Vector3D (0' 1' 0)'  	FarPlaneDistance = 5000000  };  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Camera = new PerspectiveCamera {  	Position = new Point3D (3' 3' 5)'  	LookDirection = new Vector3D (-3' -3' -5)'  	UpDirection = new Vector3D (0' 1' 0)'  	FarPlaneDistance = 5000000  };  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Camera = new PerspectiveCamera {  	Position = new Point3D (3' 3' 5)'  	LookDirection = new Vector3D (-3' -3' -5)'  	UpDirection = new Vector3D (0' 1' 0)'  	FarPlaneDistance = 5000000  };  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Camera = new PerspectiveCamera {  	Position = new Point3D (3' 3' 5)'  	LookDirection = new Vector3D (-3' -3' -5)'  	UpDirection = new Vector3D (0' 1' 0)'  	FarPlaneDistance = 5000000  };  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Camera = new PerspectiveCamera {  	Position = new Point3D (3' 3' 5)'  	LookDirection = new Vector3D (-3' -3' -5)'  	UpDirection = new Vector3D (0' 1' 0)'  	FarPlaneDistance = 5000000  };  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: DirectionalLightDirection = new Vector3 (-2' -5' -2);  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: DirectionalLightDirection = new Vector3 (-2' -5' -2);  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: DirectionalLightDirection = new Vector3 (-2' -5' -2);  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: GridTransform = new Media3D.TranslateTransform3D (-5' -1' -5);  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: GridTransform = new Media3D.TranslateTransform3D (-5' -1' -5);  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: b1.AddSphere (new Vector3 (0' 0' 0)' 0.5);  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: b1.AddBox (new Vector3 (0' 0' 0)' 1' 0.5' 2' BoxFaces.All);  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: b1.AddBox (new Vector3 (0' 0' 0)' 1' 0.5' 2' BoxFaces.All);  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: e1.AddBox (new Vector3 (0' 0' 0)' 1' 0.5' 2);  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: e1.AddBox (new Vector3 (0' 0' 0)' 1' 0.5' 2);  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Model2Transform = new Media3D.TranslateTransform3D (-2' 0' 0);  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Model3Transform = new Media3D.TranslateTransform3D (+2' 0' 0);  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int x = -5; x <= 5; x++) {  	for (int y = -5; y <= 5; y++) {  		ptIdx.Add (ptPos.Count);  		ptPos.Add (new Vector3 (x' -1' y));  		Text.TextInfo.Add (new TextInfo (string.Format ("{0}:{1}"' x' y)' new Vector3 (x' -1' y)));  	}  }  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int x = -5; x <= 5; x++) {  	for (int y = -5; y <= 5; y++) {  		ptIdx.Add (ptPos.Count);  		ptPos.Add (new Vector3 (x' -1' y));  		Text.TextInfo.Add (new TextInfo (string.Format ("{0}:{1}"' x' y)' new Vector3 (x' -1' y)));  	}  }  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int x = -5; x <= 5; x++) {  	for (int y = -5; y <= 5; y++) {  		ptIdx.Add (ptPos.Count);  		ptPos.Add (new Vector3 (x' -1' y));  		Text.TextInfo.Add (new TextInfo (string.Format ("{0}:{1}"' x' y)' new Vector3 (x' -1' y)));  	}  }  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int x = -5; x <= 5; x++) {  	for (int y = -5; y <= 5; y++) {  		ptIdx.Add (ptPos.Count);  		ptPos.Add (new Vector3 (x' -1' y));  		Text.TextInfo.Add (new TextInfo (string.Format ("{0}:{1}"' x' y)' new Vector3 (x' -1' y)));  	}  }  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int y = -5; y <= 5; y++) {  	ptIdx.Add (ptPos.Count);  	ptPos.Add (new Vector3 (x' -1' y));  	Text.TextInfo.Add (new TextInfo (string.Format ("{0}:{1}"' x' y)' new Vector3 (x' -1' y)));  }  
Magic Number,CustomShaderDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\CustomShaderDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int y = -5; y <= 5; y++) {  	ptIdx.Add (ptPos.Count);  	ptPos.Add (new Vector3 (x' -1' y));  	Text.TextInfo.Add (new TextInfo (string.Format ("{0}:{1}"' x' y)' new Vector3 (x' -1' y)));  }  
