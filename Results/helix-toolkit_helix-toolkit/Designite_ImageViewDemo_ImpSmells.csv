Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,SetImages,The length of the statement  "                        transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -180))); " is 131.
Long Statement,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,SetImages,The length of the statement  "                        transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -90))); " is 130.
Long Statement,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,SetImages,The length of the statement  "                        transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -270))); " is 131.
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.defaultPerspectiveCamera = new PerspectiveCamera { Position = new Point3D(0' 0' 5)' LookDirection = new Vector3D(0' 0' -5)' UpDirection = new Vector3D(0' 1' 0)' NearPlaneDistance = 0.5' FarPlaneDistance = 150 };
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.defaultPerspectiveCamera = new PerspectiveCamera { Position = new Point3D(0' 0' 5)' LookDirection = new Vector3D(0' 0' -5)' UpDirection = new Vector3D(0' 1' 0)' NearPlaneDistance = 0.5' FarPlaneDistance = 150 };
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.defaultPerspectiveCamera = new PerspectiveCamera { Position = new Point3D(0' 0' 5)' LookDirection = new Vector3D(0' 0' -5)' UpDirection = new Vector3D(0' 1' 0)' NearPlaneDistance = 0.5' FarPlaneDistance = 150 };
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.defaultPerspectiveCamera = new PerspectiveCamera { Position = new Point3D(0' 0' 5)' LookDirection = new Vector3D(0' 0' -5)' UpDirection = new Vector3D(0' 1' 0)' NearPlaneDistance = 0.5' FarPlaneDistance = 150 };
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.defaultOrthographicCamera = new OrthographicCamera { Position = new Point3D(0' 0' 5)' LookDirection = new Vector3D(0' 0' -5)' UpDirection = new Vector3D(0' 1' 0)' NearPlaneDistance = 0' FarPlaneDistance = 100 };
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.defaultOrthographicCamera = new OrthographicCamera { Position = new Point3D(0' 0' 5)' LookDirection = new Vector3D(0' 0' -5)' UpDirection = new Vector3D(0' 1' 0)' NearPlaneDistance = 0' FarPlaneDistance = 100 };
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.defaultOrthographicCamera = new OrthographicCamera { Position = new Point3D(0' 0' 5)' LookDirection = new Vector3D(0' 0' -5)' UpDirection = new Vector3D(0' 1' 0)' NearPlaneDistance = 0' FarPlaneDistance = 100 };
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.DirectionalLightDirection = new Vector3(-0' -0' -10);
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Grid = LineBuilder.GenerateGrid(Vector3.UnitZ' -5' 5' -5' 5);
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Grid = LineBuilder.GenerateGrid(Vector3.UnitZ' -5' 5' -5' 5);
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Grid = LineBuilder.GenerateGrid(Vector3.UnitZ' -5' 5' -5' 5);
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Grid = LineBuilder.GenerateGrid(Vector3.UnitZ' -5' 5' -5' 5);
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: b2.AddBox(new Vector3(0' 0' 0)' 10' 10' 0' BoxFaces.PositiveZ);
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: b2.AddBox(new Vector3(0' 0' 0)' 10' 10' 0' BoxFaces.PositiveZ);
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,SetImages,The following statement contains a magic number: if (this.ExifReader != null && this.ExifReader.GetTagValue(ExifTags.Orientation' out orientation))              {                  switch (orientation)                  {                      default:                      case 1: //                           transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          break;                      case 2: //"-flip horizontal";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 3: //"-rotate 180";;                                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -180)));                          break;                      case 4: //"-flip vertical";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 5: //"-transpose";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 6: //"-rotate 90";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -90)));                          break;                      case 7: //"-transverse";;                          // transform = Media3D.Transform3D.Identity;                          break;                      case 8: //"-rotate 270";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -270)));                          break;                  }                    this.PlaneTransform = transform;                  this.GridTransform = transform;              }              else              {                  if (ratio > 1)                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }                  else                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }              }
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,SetImages,The following statement contains a magic number: if (this.ExifReader != null && this.ExifReader.GetTagValue(ExifTags.Orientation' out orientation))              {                  switch (orientation)                  {                      default:                      case 1: //                           transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          break;                      case 2: //"-flip horizontal";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 3: //"-rotate 180";;                                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -180)));                          break;                      case 4: //"-flip vertical";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 5: //"-transpose";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 6: //"-rotate 90";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -90)));                          break;                      case 7: //"-transverse";;                          // transform = Media3D.Transform3D.Identity;                          break;                      case 8: //"-rotate 270";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -270)));                          break;                  }                    this.PlaneTransform = transform;                  this.GridTransform = transform;              }              else              {                  if (ratio > 1)                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }                  else                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }              }
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,SetImages,The following statement contains a magic number: if (this.ExifReader != null && this.ExifReader.GetTagValue(ExifTags.Orientation' out orientation))              {                  switch (orientation)                  {                      default:                      case 1: //                           transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          break;                      case 2: //"-flip horizontal";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 3: //"-rotate 180";;                                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -180)));                          break;                      case 4: //"-flip vertical";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 5: //"-transpose";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 6: //"-rotate 90";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -90)));                          break;                      case 7: //"-transverse";;                          // transform = Media3D.Transform3D.Identity;                          break;                      case 8: //"-rotate 270";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -270)));                          break;                  }                    this.PlaneTransform = transform;                  this.GridTransform = transform;              }              else              {                  if (ratio > 1)                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }                  else                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }              }
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,SetImages,The following statement contains a magic number: if (this.ExifReader != null && this.ExifReader.GetTagValue(ExifTags.Orientation' out orientation))              {                  switch (orientation)                  {                      default:                      case 1: //                           transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          break;                      case 2: //"-flip horizontal";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 3: //"-rotate 180";;                                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -180)));                          break;                      case 4: //"-flip vertical";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 5: //"-transpose";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 6: //"-rotate 90";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -90)));                          break;                      case 7: //"-transverse";;                          // transform = Media3D.Transform3D.Identity;                          break;                      case 8: //"-rotate 270";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -270)));                          break;                  }                    this.PlaneTransform = transform;                  this.GridTransform = transform;              }              else              {                  if (ratio > 1)                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }                  else                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }              }
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,SetImages,The following statement contains a magic number: if (this.ExifReader != null && this.ExifReader.GetTagValue(ExifTags.Orientation' out orientation))              {                  switch (orientation)                  {                      default:                      case 1: //                           transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          break;                      case 2: //"-flip horizontal";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 3: //"-rotate 180";;                                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -180)));                          break;                      case 4: //"-flip vertical";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 5: //"-transpose";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 6: //"-rotate 90";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -90)));                          break;                      case 7: //"-transverse";;                          // transform = Media3D.Transform3D.Identity;                          break;                      case 8: //"-rotate 270";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -270)));                          break;                  }                    this.PlaneTransform = transform;                  this.GridTransform = transform;              }              else              {                  if (ratio > 1)                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }                  else                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }              }
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,SetImages,The following statement contains a magic number: if (this.ExifReader != null && this.ExifReader.GetTagValue(ExifTags.Orientation' out orientation))              {                  switch (orientation)                  {                      default:                      case 1: //                           transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          break;                      case 2: //"-flip horizontal";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 3: //"-rotate 180";;                                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -180)));                          break;                      case 4: //"-flip vertical";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 5: //"-transpose";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 6: //"-rotate 90";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -90)));                          break;                      case 7: //"-transverse";;                          // transform = Media3D.Transform3D.Identity;                          break;                      case 8: //"-rotate 270";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -270)));                          break;                  }                    this.PlaneTransform = transform;                  this.GridTransform = transform;              }              else              {                  if (ratio > 1)                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }                  else                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }              }
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,SetImages,The following statement contains a magic number: if (this.ExifReader != null && this.ExifReader.GetTagValue(ExifTags.Orientation' out orientation))              {                  switch (orientation)                  {                      default:                      case 1: //                           transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          break;                      case 2: //"-flip horizontal";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 3: //"-rotate 180";;                                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -180)));                          break;                      case 4: //"-flip vertical";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 5: //"-transpose";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 6: //"-rotate 90";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -90)));                          break;                      case 7: //"-transverse";;                          // transform = Media3D.Transform3D.Identity;                          break;                      case 8: //"-rotate 270";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -270)));                          break;                  }                    this.PlaneTransform = transform;                  this.GridTransform = transform;              }              else              {                  if (ratio > 1)                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }                  else                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }              }
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,SetImages,The following statement contains a magic number: if (this.ExifReader != null && this.ExifReader.GetTagValue(ExifTags.Orientation' out orientation))              {                  switch (orientation)                  {                      default:                      case 1: //                           transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          break;                      case 2: //"-flip horizontal";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 3: //"-rotate 180";;                                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -180)));                          break;                      case 4: //"-flip vertical";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 5: //"-transpose";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 6: //"-rotate 90";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -90)));                          break;                      case 7: //"-transverse";;                          // transform = Media3D.Transform3D.Identity;                          break;                      case 8: //"-rotate 270";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -270)));                          break;                  }                    this.PlaneTransform = transform;                  this.GridTransform = transform;              }              else              {                  if (ratio > 1)                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }                  else                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }              }
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,SetImages,The following statement contains a magic number: if (this.ExifReader != null && this.ExifReader.GetTagValue(ExifTags.Orientation' out orientation))              {                  switch (orientation)                  {                      default:                      case 1: //                           transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          break;                      case 2: //"-flip horizontal";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 3: //"-rotate 180";;                                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -180)));                          break;                      case 4: //"-flip vertical";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 5: //"-transpose";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 6: //"-rotate 90";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -90)));                          break;                      case 7: //"-transverse";;                          // transform = Media3D.Transform3D.Identity;                          break;                      case 8: //"-rotate 270";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -270)));                          break;                  }                    this.PlaneTransform = transform;                  this.GridTransform = transform;              }              else              {                  if (ratio > 1)                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }                  else                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }              }
Magic Number,ImageViewDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ImageViewDemo\MainViewModel.cs,SetImages,The following statement contains a magic number: if (this.ExifReader != null && this.ExifReader.GetTagValue(ExifTags.Orientation' out orientation))              {                  switch (orientation)                  {                      default:                      case 1: //                           transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          break;                      case 2: //"-flip horizontal";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 3: //"-rotate 180";;                                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -180)));                          break;                      case 4: //"-flip vertical";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 5: //"-transpose";;                          //transform = Media3D.Transform3D.Identity;                          break;                      case 6: //"-rotate 90";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -90)));                          break;                      case 7: //"-transverse";;                          // transform = Media3D.Transform3D.Identity;                          break;                      case 8: //"-rotate 270";;                          transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                          transform = transform.AppendTransform(new Media3D.RotateTransform3D(new Media3D.AxisAngleRotation3D(new Vector3D(0' 0' 1)' -270)));                          break;                  }                    this.PlaneTransform = transform;                  this.GridTransform = transform;              }              else              {                  if (ratio > 1)                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(ratio' 1.0' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }                  else                  {                      transform = transform.AppendTransform(new Media3D.ScaleTransform3D(1.0' 1.0 / ratio' 1.0));                      this.PlaneTransform = transform;                      this.GridTransform = this.PlaneTransform;                  }              }
