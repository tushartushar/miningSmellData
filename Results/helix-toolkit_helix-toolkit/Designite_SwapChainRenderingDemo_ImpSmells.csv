Implementation smell,Namespace,Class,File,Method,Description
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(100'100'100)' LookDirection = new Vector3D(-100'-100'-100)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(100'100'100)' LookDirection = new Vector3D(-100'-100'-100)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(100'100'100)' LookDirection = new Vector3D(-100'-100'-100)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(100'100'100)' LookDirection = new Vector3D(-100'-100'-100)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(100'100'100)' LookDirection = new Vector3D(-100'-100'-100)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(100'100'100)' LookDirection = new Vector3D(-100'-100'-100)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Light1Direction = new Vector3(0' -10' -10);
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Light1Direction = new Vector3(0' -10' -10);
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Light1DirectionTransform = CreateAnimatedTransform2(-Light1Direction.ToVector3D()' new Vector3D(0' 1' -1)' 36);
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Light2Transform = CreateAnimatedTransform1(new Vector3D(-100' 50' 0)' new Vector3D(0' 0' 1)' 3);
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Light2Transform = CreateAnimatedTransform1(new Vector3D(-100' 50' 0)' new Vector3D(0' 0' 1)' 3);
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Light2Transform = CreateAnimatedTransform1(new Vector3D(-100' 50' 0)' new Vector3D(0' 0' 1)' 3);
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Light3Transform = CreateAnimatedTransform1(new Vector3D(0' 50' 100)' new Vector3D(0' 1' 0)' 5);
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Light3Transform = CreateAnimatedTransform1(new Vector3D(0' 50' 100)' new Vector3D(0' 1' 0)' 5);
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Light3Transform = CreateAnimatedTransform1(new Vector3D(0' 50' 100)' new Vector3D(0' 1' 0)' 5);
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Light4Direction = new Vector3(0' -100' 0);
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Light4DirectionTransform = CreateAnimatedTransform2(-Light4Direction.ToVector3D()' new Vector3D(1' 0' 0)' 48);
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: sphere.AddSphere(new Vector3(0' 0' 0)' 4);
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: transGroup.Children.Add(new Media3D.ScaleTransform3D(0.04' 0.04' 0.04));
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: transGroup.Children.Add(new Media3D.ScaleTransform3D(0.04' 0.04' 0.04));
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: transGroup.Children.Add(new Media3D.ScaleTransform3D(0.04' 0.04' 0.04));
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: var rotateAnimation = new Rotation3DAnimation              {                  RepeatBehavior = RepeatBehavior.Forever'                  By = new Media3D.AxisAngleRotation3D(new Vector3D(0' 1' 0)' 90)'                  Duration = TimeSpan.FromSeconds(4)'                  IsCumulative = true'              };
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: var rotateAnimation = new Rotation3DAnimation              {                  RepeatBehavior = RepeatBehavior.Forever'                  By = new Media3D.AxisAngleRotation3D(new Vector3D(0' 1' 0)' 90)'                  Duration = TimeSpan.FromSeconds(4)'                  IsCumulative = true'              };
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: transGroup.Children.Add(new Media3D.TranslateTransform3D(0' 60' 0));
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: NumberOfTriangles = Floor.Indices.Count / 3 + Model.Indices.Count/3;
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: NumberOfTriangles = Floor.Indices.Count / 3 + Model.Indices.Count/3;
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,CreateAnimatedTransform1,The following statement contains a magic number: var rotateAnimation = new Rotation3DAnimation              {                  RepeatBehavior = RepeatBehavior.Forever'                  By = new Media3D.AxisAngleRotation3D(axis' 90)'                  Duration = TimeSpan.FromSeconds(speed / 4)'                  IsCumulative = true'              };
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,CreateAnimatedTransform1,The following statement contains a magic number: var rotateAnimation = new Rotation3DAnimation              {                  RepeatBehavior = RepeatBehavior.Forever'                  By = new Media3D.AxisAngleRotation3D(axis' 90)'                  Duration = TimeSpan.FromSeconds(speed / 4)'                  IsCumulative = true'              };
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,CreateAnimatedTransform2,The following statement contains a magic number: var rotateAnimation = new Rotation3DAnimation              {                  RepeatBehavior = RepeatBehavior.Forever'                  //By = new Media3D.AxisAngleRotation3D(axis' 180)'                  From = new Media3D.AxisAngleRotation3D(axis' 135)'                  To = new Media3D.AxisAngleRotation3D(axis' 225)'                  AutoReverse = true'                  Duration = TimeSpan.FromSeconds(speed / 4)'                  //IsCumulative = true'                                };
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,CreateAnimatedTransform2,The following statement contains a magic number: var rotateAnimation = new Rotation3DAnimation              {                  RepeatBehavior = RepeatBehavior.Forever'                  //By = new Media3D.AxisAngleRotation3D(axis' 180)'                  From = new Media3D.AxisAngleRotation3D(axis' 135)'                  To = new Media3D.AxisAngleRotation3D(axis' 225)'                  AutoReverse = true'                  Duration = TimeSpan.FromSeconds(speed / 4)'                  //IsCumulative = true'                                };
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,CreateAnimatedTransform2,The following statement contains a magic number: var rotateAnimation = new Rotation3DAnimation              {                  RepeatBehavior = RepeatBehavior.Forever'                  //By = new Media3D.AxisAngleRotation3D(axis' 180)'                  From = new Media3D.AxisAngleRotation3D(axis' 135)'                  To = new Media3D.AxisAngleRotation3D(axis' 225)'                  AutoReverse = true'                  Duration = TimeSpan.FromSeconds(speed / 4)'                  //IsCumulative = true'                                };
Magic Number,SwapChainRenderingDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\SwapChainRenderingDemo\MainViewModel.cs,OnMouseLeftButtonDownHandler,The following statement contains a magic number: if (hitTests.Count > 0)              {                  var lineBuilder = new LineBuilder();                  foreach(var hit in hitTests)                  {                      lineBuilder.AddLine(hit.PointHit.ToVector3()' (hit.PointHit + hit.NormalAtHit * 10).ToVector3());                  }                  LineGeo = lineBuilder.ToLineGeometry3D();              }
