Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MemoryLeakTester,SystemStateParams,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\MainWindow.xaml.cs,Update,The length of the statement  "                var run = new Run($"{Count}  Total: {privateMemory / 1000000} MB; Physical: {workingSet / 1000000} MB; Managed: {managedMemory / 1000000} MB; Handle: {handleCount}; Threads: {threadCount};\n"); " is 193.
Magic Number,MemoryLeakTester,TestWindowViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\TestWindowViewModel.cs,TestWindowViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Media3D.Point3D(8' 9' 7)' LookDirection = new Media3D.Vector3D(-5' -12' -5)' UpDirection = new Media3D.Vector3D(0' 1' 0) };
Magic Number,MemoryLeakTester,TestWindowViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\TestWindowViewModel.cs,TestWindowViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Media3D.Point3D(8' 9' 7)' LookDirection = new Media3D.Vector3D(-5' -12' -5)' UpDirection = new Media3D.Vector3D(0' 1' 0) };
Magic Number,MemoryLeakTester,TestWindowViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\TestWindowViewModel.cs,TestWindowViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Media3D.Point3D(8' 9' 7)' LookDirection = new Media3D.Vector3D(-5' -12' -5)' UpDirection = new Media3D.Vector3D(0' 1' 0) };
Magic Number,MemoryLeakTester,TestWindowViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\TestWindowViewModel.cs,TestWindowViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Media3D.Point3D(8' 9' 7)' LookDirection = new Media3D.Vector3D(-5' -12' -5)' UpDirection = new Media3D.Vector3D(0' 1' 0) };
Magic Number,MemoryLeakTester,TestWindowViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\TestWindowViewModel.cs,TestWindowViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Media3D.Point3D(8' 9' 7)' LookDirection = new Media3D.Vector3D(-5' -12' -5)' UpDirection = new Media3D.Vector3D(0' 1' 0) };
Magic Number,MemoryLeakTester,TestWindowViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\TestWindowViewModel.cs,TestWindowViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Media3D.Point3D(8' 9' 7)' LookDirection = new Media3D.Vector3D(-5' -12' -5)' UpDirection = new Media3D.Vector3D(0' 1' 0) };
Magic Number,MemoryLeakTester,TestWindowViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\TestWindowViewModel.cs,TestWindowViewModel,The following statement contains a magic number: builder.AddBox(new SDX.Vector3()' 2' 2' 2);
Magic Number,MemoryLeakTester,TestWindowViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\TestWindowViewModel.cs,TestWindowViewModel,The following statement contains a magic number: builder.AddBox(new SDX.Vector3()' 2' 2' 2);
Magic Number,MemoryLeakTester,TestWindowViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\TestWindowViewModel.cs,TestWindowViewModel,The following statement contains a magic number: builder.AddBox(new SDX.Vector3()' 2' 2' 2);
Magic Number,MemoryLeakTester,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\MainWindow.xaml.cs,StartButton_Click,The following statement contains a magic number: timer.Interval = TimeSpan.FromSeconds(0.5);
Magic Number,MemoryLeakTester,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.startButton = ((System.Windows.Controls.Button)(target));                            #line 15 "..\..\MainWindow.xaml"              this.startButton.Click += new System.Windows.RoutedEventHandler(this.StartButton_Click);                            #line default              #line hidden              return;              case 2:              this.stopButton = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\MainWindow.xaml"              this.stopButton.Click += new System.Windows.RoutedEventHandler(this.StopButton_Click);                            #line default              #line hidden              return;              case 3:              this.projectCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:              this.logTextbox = ((System.Windows.Controls.RichTextBox)(target));              return;              case 5:              this.flowDocument = ((System.Windows.Documents.FlowDocument)(target));              return;              case 6:              this.paragraph = ((System.Windows.Documents.Paragraph)(target));              return;              }
Magic Number,MemoryLeakTester,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.startButton = ((System.Windows.Controls.Button)(target));                            #line 15 "..\..\MainWindow.xaml"              this.startButton.Click += new System.Windows.RoutedEventHandler(this.StartButton_Click);                            #line default              #line hidden              return;              case 2:              this.stopButton = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\MainWindow.xaml"              this.stopButton.Click += new System.Windows.RoutedEventHandler(this.StopButton_Click);                            #line default              #line hidden              return;              case 3:              this.projectCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:              this.logTextbox = ((System.Windows.Controls.RichTextBox)(target));              return;              case 5:              this.flowDocument = ((System.Windows.Documents.FlowDocument)(target));              return;              case 6:              this.paragraph = ((System.Windows.Documents.Paragraph)(target));              return;              }
Magic Number,MemoryLeakTester,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.startButton = ((System.Windows.Controls.Button)(target));                            #line 15 "..\..\MainWindow.xaml"              this.startButton.Click += new System.Windows.RoutedEventHandler(this.StartButton_Click);                            #line default              #line hidden              return;              case 2:              this.stopButton = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\MainWindow.xaml"              this.stopButton.Click += new System.Windows.RoutedEventHandler(this.StopButton_Click);                            #line default              #line hidden              return;              case 3:              this.projectCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:              this.logTextbox = ((System.Windows.Controls.RichTextBox)(target));              return;              case 5:              this.flowDocument = ((System.Windows.Documents.FlowDocument)(target));              return;              case 6:              this.paragraph = ((System.Windows.Documents.Paragraph)(target));              return;              }
Magic Number,MemoryLeakTester,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.startButton = ((System.Windows.Controls.Button)(target));                            #line 15 "..\..\MainWindow.xaml"              this.startButton.Click += new System.Windows.RoutedEventHandler(this.StartButton_Click);                            #line default              #line hidden              return;              case 2:              this.stopButton = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\MainWindow.xaml"              this.stopButton.Click += new System.Windows.RoutedEventHandler(this.StopButton_Click);                            #line default              #line hidden              return;              case 3:              this.projectCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:              this.logTextbox = ((System.Windows.Controls.RichTextBox)(target));              return;              case 5:              this.flowDocument = ((System.Windows.Documents.FlowDocument)(target));              return;              case 6:              this.paragraph = ((System.Windows.Documents.Paragraph)(target));              return;              }
Magic Number,MemoryLeakTester,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.startButton = ((System.Windows.Controls.Button)(target));                            #line 15 "..\..\MainWindow.xaml"              this.startButton.Click += new System.Windows.RoutedEventHandler(this.StartButton_Click);                            #line default              #line hidden              return;              case 2:              this.stopButton = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\MainWindow.xaml"              this.stopButton.Click += new System.Windows.RoutedEventHandler(this.StopButton_Click);                            #line default              #line hidden              return;              case 3:              this.projectCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:              this.logTextbox = ((System.Windows.Controls.RichTextBox)(target));              return;              case 5:              this.flowDocument = ((System.Windows.Documents.FlowDocument)(target));              return;              case 6:              this.paragraph = ((System.Windows.Documents.Paragraph)(target));              return;              }
Magic Number,MemoryLeakTester,SystemStateParams,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\MainWindow.xaml.cs,Update,The following statement contains a magic number: var run = new Run($"{Count}  Total: {privateMemory / 1000000} MB; Physical: {workingSet / 1000000} MB; Managed: {managedMemory / 1000000} MB; Handle: {handleCount}; Threads: {threadCount};\n");
Magic Number,MemoryLeakTester,SystemStateParams,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\MainWindow.xaml.cs,Update,The following statement contains a magic number: var run = new Run($"{Count}  Total: {privateMemory / 1000000} MB; Physical: {workingSet / 1000000} MB; Managed: {managedMemory / 1000000} MB; Handle: {handleCount}; Threads: {threadCount};\n");
Magic Number,MemoryLeakTester,SystemStateParams,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\MainWindow.xaml.cs,Update,The following statement contains a magic number: var run = new Run($"{Count}  Total: {privateMemory / 1000000} MB; Physical: {workingSet / 1000000} MB; Managed: {managedMemory / 1000000} MB; Handle: {handleCount}; Threads: {threadCount};\n");
Missing Default,MemoryLeakTester,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MemoryLeakTester\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.startButton = ((System.Windows.Controls.Button)(target));                            #line 15 "..\..\MainWindow.xaml"              this.startButton.Click += new System.Windows.RoutedEventHandler(this.StartButton_Click);                            #line default              #line hidden              return;              case 2:              this.stopButton = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\MainWindow.xaml"              this.stopButton.Click += new System.Windows.RoutedEventHandler(this.StopButton_Click);                            #line default              #line hidden              return;              case 3:              this.projectCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:              this.logTextbox = ((System.Windows.Controls.RichTextBox)(target));              return;              case 5:              this.flowDocument = ((System.Windows.Documents.FlowDocument)(target));              return;              case 6:              this.paragraph = ((System.Windows.Documents.Paragraph)(target));              return;              }
