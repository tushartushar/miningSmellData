Implementation smell,Namespace,Class,File,Method,Description
Virtual Method Call from Constructor,MouseDragDemo,ResizeManipulator3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\ResizeManipulator3D.cs,ResizeManipulator3D,The constructor "ResizeManipulator3D" calls a virtual method "OnChildrenChanged".
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: b1.AddSphere(new Vector3(0.0f' 0.0f' 0)' 0.135);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: b2.AddCylinder(new Vector3(0' 0' 0)' new Vector3(1' 0' 0)' 0.05' 32' true' true);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: b2.AddCylinder(new Vector3(0' 0' 0)' new Vector3(1' 0' 0)' 0.05' 32' true' true);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: b3.AddCylinder(new Vector3(0' 0' 0)' new Vector3(0' 1' 0)' 0.05' 32' true' true);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: b3.AddCylinder(new Vector3(0' 0' 0)' new Vector3(0' 1' 0)' 0.05' 32' true' true);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: b4.AddBox(new Vector3(0' 0' 0)' 0.175' 0.175' 0.175);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: b4.AddBox(new Vector3(0' 0' 0)' 0.175' 0.175' 0.175);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: b4.AddBox(new Vector3(0' 0' 0)' 0.175' 0.175' 0.175);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  var translate = Matrix3DExtensions.Translate3D(positions[i].ToVector3D());                  this.cornerHandles[i] = new DraggableGeometryModel3D()                  {                                          DragZ = false'                      Visibility = Visibility.Visible'                      Material = this.Material'                      Geometry = NodeGeometry'                      Transform = new MatrixTransform3D(translate)'                  };                                                 this.cornerHandles[i].MouseMove3D += OnNodeMouse3DMove;                  this.cornerHandles[i].MouseUp3D += OnNodeMouse3DUp;                  this.cornerHandles[i].MouseDown3D += OnNodeMouse3DDown;                    this.edgeHandles[i] = new MeshGeometryModel3D()                  {                      Geometry = (i % 2 == 0) ? EdgeHGeometry : EdgeVGeometry'                      Material = this.Material'                      Visibility = Visibility.Visible'                      Transform = new MatrixTransform3D(translate)'                  };                                                                this.edgeHandles[i].MouseMove3D += OnEdgeMouse3DMove;                  this.edgeHandles[i].MouseUp3D += OnEdgeMouse3DUp;                  this.edgeHandles[i].MouseDown3D += OnEdgeMouse3DDown;                      translate = Matrix3DExtensions.Translate3D(0.5 * (positions[i] + positions[(i + 1) % 4]).ToVector3D());                  this.midpointHandles[i] = new DraggableGeometryModel3D()                  {                      DragZ = false'                      DragX = (i % 2 == 1)'                      DragY = (i % 2 == 0)'                      Material = this.Material'                      Geometry = BoxGeometry'                      Transform = new MatrixTransform3D(translate)'                  };                  this.midpointHandles[i].MouseMove3D += OnNodeMouse3DMove;                  this.midpointHandles[i].MouseUp3D += OnNodeMouse3DUp;                  this.midpointHandles[i].MouseDown3D += OnNodeMouse3DDown;                           this.Children.Add(cornerHandles[i]);                  this.Children.Add(edgeHandles[i]);                  this.Children.Add(midpointHandles[i]);              }
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  var translate = Matrix3DExtensions.Translate3D(positions[i].ToVector3D());                  this.cornerHandles[i] = new DraggableGeometryModel3D()                  {                                          DragZ = false'                      Visibility = Visibility.Visible'                      Material = this.Material'                      Geometry = NodeGeometry'                      Transform = new MatrixTransform3D(translate)'                  };                                                 this.cornerHandles[i].MouseMove3D += OnNodeMouse3DMove;                  this.cornerHandles[i].MouseUp3D += OnNodeMouse3DUp;                  this.cornerHandles[i].MouseDown3D += OnNodeMouse3DDown;                    this.edgeHandles[i] = new MeshGeometryModel3D()                  {                      Geometry = (i % 2 == 0) ? EdgeHGeometry : EdgeVGeometry'                      Material = this.Material'                      Visibility = Visibility.Visible'                      Transform = new MatrixTransform3D(translate)'                  };                                                                this.edgeHandles[i].MouseMove3D += OnEdgeMouse3DMove;                  this.edgeHandles[i].MouseUp3D += OnEdgeMouse3DUp;                  this.edgeHandles[i].MouseDown3D += OnEdgeMouse3DDown;                      translate = Matrix3DExtensions.Translate3D(0.5 * (positions[i] + positions[(i + 1) % 4]).ToVector3D());                  this.midpointHandles[i] = new DraggableGeometryModel3D()                  {                      DragZ = false'                      DragX = (i % 2 == 1)'                      DragY = (i % 2 == 0)'                      Material = this.Material'                      Geometry = BoxGeometry'                      Transform = new MatrixTransform3D(translate)'                  };                  this.midpointHandles[i].MouseMove3D += OnNodeMouse3DMove;                  this.midpointHandles[i].MouseUp3D += OnNodeMouse3DUp;                  this.midpointHandles[i].MouseDown3D += OnNodeMouse3DDown;                           this.Children.Add(cornerHandles[i]);                  this.Children.Add(edgeHandles[i]);                  this.Children.Add(midpointHandles[i]);              }
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  var translate = Matrix3DExtensions.Translate3D(positions[i].ToVector3D());                  this.cornerHandles[i] = new DraggableGeometryModel3D()                  {                                          DragZ = false'                      Visibility = Visibility.Visible'                      Material = this.Material'                      Geometry = NodeGeometry'                      Transform = new MatrixTransform3D(translate)'                  };                                                 this.cornerHandles[i].MouseMove3D += OnNodeMouse3DMove;                  this.cornerHandles[i].MouseUp3D += OnNodeMouse3DUp;                  this.cornerHandles[i].MouseDown3D += OnNodeMouse3DDown;                    this.edgeHandles[i] = new MeshGeometryModel3D()                  {                      Geometry = (i % 2 == 0) ? EdgeHGeometry : EdgeVGeometry'                      Material = this.Material'                      Visibility = Visibility.Visible'                      Transform = new MatrixTransform3D(translate)'                  };                                                                this.edgeHandles[i].MouseMove3D += OnEdgeMouse3DMove;                  this.edgeHandles[i].MouseUp3D += OnEdgeMouse3DUp;                  this.edgeHandles[i].MouseDown3D += OnEdgeMouse3DDown;                      translate = Matrix3DExtensions.Translate3D(0.5 * (positions[i] + positions[(i + 1) % 4]).ToVector3D());                  this.midpointHandles[i] = new DraggableGeometryModel3D()                  {                      DragZ = false'                      DragX = (i % 2 == 1)'                      DragY = (i % 2 == 0)'                      Material = this.Material'                      Geometry = BoxGeometry'                      Transform = new MatrixTransform3D(translate)'                  };                  this.midpointHandles[i].MouseMove3D += OnNodeMouse3DMove;                  this.midpointHandles[i].MouseUp3D += OnNodeMouse3DUp;                  this.midpointHandles[i].MouseDown3D += OnNodeMouse3DDown;                           this.Children.Add(cornerHandles[i]);                  this.Children.Add(edgeHandles[i]);                  this.Children.Add(midpointHandles[i]);              }
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  var translate = Matrix3DExtensions.Translate3D(positions[i].ToVector3D());                  this.cornerHandles[i] = new DraggableGeometryModel3D()                  {                                          DragZ = false'                      Visibility = Visibility.Visible'                      Material = this.Material'                      Geometry = NodeGeometry'                      Transform = new MatrixTransform3D(translate)'                  };                                                 this.cornerHandles[i].MouseMove3D += OnNodeMouse3DMove;                  this.cornerHandles[i].MouseUp3D += OnNodeMouse3DUp;                  this.cornerHandles[i].MouseDown3D += OnNodeMouse3DDown;                    this.edgeHandles[i] = new MeshGeometryModel3D()                  {                      Geometry = (i % 2 == 0) ? EdgeHGeometry : EdgeVGeometry'                      Material = this.Material'                      Visibility = Visibility.Visible'                      Transform = new MatrixTransform3D(translate)'                  };                                                                this.edgeHandles[i].MouseMove3D += OnEdgeMouse3DMove;                  this.edgeHandles[i].MouseUp3D += OnEdgeMouse3DUp;                  this.edgeHandles[i].MouseDown3D += OnEdgeMouse3DDown;                      translate = Matrix3DExtensions.Translate3D(0.5 * (positions[i] + positions[(i + 1) % 4]).ToVector3D());                  this.midpointHandles[i] = new DraggableGeometryModel3D()                  {                      DragZ = false'                      DragX = (i % 2 == 1)'                      DragY = (i % 2 == 0)'                      Material = this.Material'                      Geometry = BoxGeometry'                      Transform = new MatrixTransform3D(translate)'                  };                  this.midpointHandles[i].MouseMove3D += OnNodeMouse3DMove;                  this.midpointHandles[i].MouseUp3D += OnNodeMouse3DUp;                  this.midpointHandles[i].MouseDown3D += OnNodeMouse3DDown;                           this.Children.Add(cornerHandles[i]);                  this.Children.Add(edgeHandles[i]);                  this.Children.Add(midpointHandles[i]);              }
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  var translate = Matrix3DExtensions.Translate3D(positions[i].ToVector3D());                  this.cornerHandles[i] = new DraggableGeometryModel3D()                  {                                          DragZ = false'                      Visibility = Visibility.Visible'                      Material = this.Material'                      Geometry = NodeGeometry'                      Transform = new MatrixTransform3D(translate)'                  };                                                 this.cornerHandles[i].MouseMove3D += OnNodeMouse3DMove;                  this.cornerHandles[i].MouseUp3D += OnNodeMouse3DUp;                  this.cornerHandles[i].MouseDown3D += OnNodeMouse3DDown;                    this.edgeHandles[i] = new MeshGeometryModel3D()                  {                      Geometry = (i % 2 == 0) ? EdgeHGeometry : EdgeVGeometry'                      Material = this.Material'                      Visibility = Visibility.Visible'                      Transform = new MatrixTransform3D(translate)'                  };                                                                this.edgeHandles[i].MouseMove3D += OnEdgeMouse3DMove;                  this.edgeHandles[i].MouseUp3D += OnEdgeMouse3DUp;                  this.edgeHandles[i].MouseDown3D += OnEdgeMouse3DDown;                      translate = Matrix3DExtensions.Translate3D(0.5 * (positions[i] + positions[(i + 1) % 4]).ToVector3D());                  this.midpointHandles[i] = new DraggableGeometryModel3D()                  {                      DragZ = false'                      DragX = (i % 2 == 1)'                      DragY = (i % 2 == 0)'                      Material = this.Material'                      Geometry = BoxGeometry'                      Transform = new MatrixTransform3D(translate)'                  };                  this.midpointHandles[i].MouseMove3D += OnNodeMouse3DMove;                  this.midpointHandles[i].MouseUp3D += OnNodeMouse3DUp;                  this.midpointHandles[i].MouseDown3D += OnNodeMouse3DDown;                           this.Children.Add(cornerHandles[i]);                  this.Children.Add(edgeHandles[i]);                  this.Children.Add(midpointHandles[i]);              }
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  var translate = Matrix3DExtensions.Translate3D(positions[i].ToVector3D());                  this.cornerHandles[i] = new DraggableGeometryModel3D()                  {                                          DragZ = false'                      Visibility = Visibility.Visible'                      Material = this.Material'                      Geometry = NodeGeometry'                      Transform = new MatrixTransform3D(translate)'                  };                                                 this.cornerHandles[i].MouseMove3D += OnNodeMouse3DMove;                  this.cornerHandles[i].MouseUp3D += OnNodeMouse3DUp;                  this.cornerHandles[i].MouseDown3D += OnNodeMouse3DDown;                    this.edgeHandles[i] = new MeshGeometryModel3D()                  {                      Geometry = (i % 2 == 0) ? EdgeHGeometry : EdgeVGeometry'                      Material = this.Material'                      Visibility = Visibility.Visible'                      Transform = new MatrixTransform3D(translate)'                  };                                                                this.edgeHandles[i].MouseMove3D += OnEdgeMouse3DMove;                  this.edgeHandles[i].MouseUp3D += OnEdgeMouse3DUp;                  this.edgeHandles[i].MouseDown3D += OnEdgeMouse3DDown;                      translate = Matrix3DExtensions.Translate3D(0.5 * (positions[i] + positions[(i + 1) % 4]).ToVector3D());                  this.midpointHandles[i] = new DraggableGeometryModel3D()                  {                      DragZ = false'                      DragX = (i % 2 == 1)'                      DragY = (i % 2 == 0)'                      Material = this.Material'                      Geometry = BoxGeometry'                      Transform = new MatrixTransform3D(translate)'                  };                  this.midpointHandles[i].MouseMove3D += OnNodeMouse3DMove;                  this.midpointHandles[i].MouseUp3D += OnNodeMouse3DUp;                  this.midpointHandles[i].MouseDown3D += OnNodeMouse3DDown;                           this.Children.Add(cornerHandles[i]);                  this.Children.Add(edgeHandles[i]);                  this.Children.Add(midpointHandles[i]);              }
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: var m0 = Matrix.Scaling(+2' 1' 1) * Matrix.Translation(positions[0]);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: var m2 = Matrix.Scaling(+2' 1' 1) * Matrix.Translation(positions[3]);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: var m2 = Matrix.Scaling(+2' 1' 1) * Matrix.Translation(positions[3]);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: this.edgeHandles[2].Transform = new MatrixTransform3D(m2.ToMatrix3D());
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: var m1 = Matrix.Scaling(1'+2' 1) * Matrix.Translation(positions[1]);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: var m3 = Matrix.Scaling(1'+2' 1) * Matrix.Translation(positions[0]);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,InteractionHandle3D,The following statement contains a magic number: this.edgeHandles[3].Transform = new MatrixTransform3D(m3.ToMatrix3D());
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: if (sender == cornerHandles[0] || sender == cornerHandles[2])              {                  Application.Current.MainWindow.Cursor = Cursors.SizeNESW;                  bb = BoundingBox.FromPoints(new[] { positions[0]' positions[2] });              }              else if (sender == cornerHandles[1] || sender == cornerHandles[3])              {                  Application.Current.MainWindow.Cursor = Cursors.SizeNWSE;                  bb = BoundingBox.FromPoints(new[] { positions[1]' positions[3] });              }              else              {                  if (sender == midpointHandles[0] || sender == midpointHandles[2])                  {                      Application.Current.MainWindow.Cursor = Cursors.SizeNS;                  }                  else                  {                      Application.Current.MainWindow.Cursor = Cursors.SizeWE;                  }                  positions = this.midpointHandles.Select(x => x.Transform.Value.ToMatrix().TranslationVector).ToArray();                  bb = BoundingBox.FromPoints(positions);              }
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: if (sender == cornerHandles[0] || sender == cornerHandles[2])              {                  Application.Current.MainWindow.Cursor = Cursors.SizeNESW;                  bb = BoundingBox.FromPoints(new[] { positions[0]' positions[2] });              }              else if (sender == cornerHandles[1] || sender == cornerHandles[3])              {                  Application.Current.MainWindow.Cursor = Cursors.SizeNWSE;                  bb = BoundingBox.FromPoints(new[] { positions[1]' positions[3] });              }              else              {                  if (sender == midpointHandles[0] || sender == midpointHandles[2])                  {                      Application.Current.MainWindow.Cursor = Cursors.SizeNS;                  }                  else                  {                      Application.Current.MainWindow.Cursor = Cursors.SizeWE;                  }                  positions = this.midpointHandles.Select(x => x.Transform.Value.ToMatrix().TranslationVector).ToArray();                  bb = BoundingBox.FromPoints(positions);              }
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: if (sender == cornerHandles[0] || sender == cornerHandles[2])              {                  Application.Current.MainWindow.Cursor = Cursors.SizeNESW;                  bb = BoundingBox.FromPoints(new[] { positions[0]' positions[2] });              }              else if (sender == cornerHandles[1] || sender == cornerHandles[3])              {                  Application.Current.MainWindow.Cursor = Cursors.SizeNWSE;                  bb = BoundingBox.FromPoints(new[] { positions[1]' positions[3] });              }              else              {                  if (sender == midpointHandles[0] || sender == midpointHandles[2])                  {                      Application.Current.MainWindow.Cursor = Cursors.SizeNS;                  }                  else                  {                      Application.Current.MainWindow.Cursor = Cursors.SizeWE;                  }                  positions = this.midpointHandles.Select(x => x.Transform.Value.ToMatrix().TranslationVector).ToArray();                  bb = BoundingBox.FromPoints(positions);              }
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: if (sender == cornerHandles[0] || sender == cornerHandles[2])              {                  Application.Current.MainWindow.Cursor = Cursors.SizeNESW;                  bb = BoundingBox.FromPoints(new[] { positions[0]' positions[2] });              }              else if (sender == cornerHandles[1] || sender == cornerHandles[3])              {                  Application.Current.MainWindow.Cursor = Cursors.SizeNWSE;                  bb = BoundingBox.FromPoints(new[] { positions[1]' positions[3] });              }              else              {                  if (sender == midpointHandles[0] || sender == midpointHandles[2])                  {                      Application.Current.MainWindow.Cursor = Cursors.SizeNS;                  }                  else                  {                      Application.Current.MainWindow.Cursor = Cursors.SizeWE;                  }                  positions = this.midpointHandles.Select(x => x.Transform.Value.ToMatrix().TranslationVector).ToArray();                  bb = BoundingBox.FromPoints(positions);              }
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: if (sender == cornerHandles[0] || sender == cornerHandles[2])              {                  Application.Current.MainWindow.Cursor = Cursors.SizeNESW;                  bb = BoundingBox.FromPoints(new[] { positions[0]' positions[2] });              }              else if (sender == cornerHandles[1] || sender == cornerHandles[3])              {                  Application.Current.MainWindow.Cursor = Cursors.SizeNWSE;                  bb = BoundingBox.FromPoints(new[] { positions[1]' positions[3] });              }              else              {                  if (sender == midpointHandles[0] || sender == midpointHandles[2])                  {                      Application.Current.MainWindow.Cursor = Cursors.SizeNS;                  }                  else                  {                      Application.Current.MainWindow.Cursor = Cursors.SizeWE;                  }                  positions = this.midpointHandles.Select(x => x.Transform.Value.ToMatrix().TranslationVector).ToArray();                  bb = BoundingBox.FromPoints(positions);              }
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: positions[2].X = bb.Maximum.X;
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: positions[3].X = bb.Minimum.X;
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: positions[2].Y = bb.Maximum.Y;
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: positions[3].Y = bb.Maximum.Y;
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  if (sender != cornerHandles[i])                  {                      cornerTrafos[i].Matrix = Matrix3DExtensions.Translate3D(positions[i].ToVector3D());                  }                    var m = Matrix3DExtensions.Translate3D(0.5 * (positions[i] + positions[(i + 1) % 4]).ToVector3D());                  ((MatrixTransform3D)this.midpointHandles[i].Transform).Matrix = m;              }
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  if (sender != cornerHandles[i])                  {                      cornerTrafos[i].Matrix = Matrix3DExtensions.Translate3D(positions[i].ToVector3D());                  }                    var m = Matrix3DExtensions.Translate3D(0.5 * (positions[i] + positions[(i + 1) % 4]).ToVector3D());                  ((MatrixTransform3D)this.midpointHandles[i].Transform).Matrix = m;              }
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  if (sender != cornerHandles[i])                  {                      cornerTrafos[i].Matrix = Matrix3DExtensions.Translate3D(positions[i].ToVector3D());                  }                    var m = Matrix3DExtensions.Translate3D(0.5 * (positions[i] + positions[(i + 1) % 4]).ToVector3D());                  ((MatrixTransform3D)this.midpointHandles[i].Transform).Matrix = m;              }
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: var m2 = Matrix.Scaling(positions[1].X - positions[0].X' 1' 1) * Matrix.Translation(positions[3]);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: ((MatrixTransform3D)this.edgeHandles[2].Transform).Matrix = (m2.ToMatrix3D());
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: var m1 = Matrix.Scaling(1' positions[2].Y - positions[1].Y' 1) * Matrix.Translation(positions[1]);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: var m3 = Matrix.Scaling(1' positions[2].Y - positions[1].Y' 1) * Matrix.Translation(positions[0]);
Magic Number,MouseDragDemo,InteractionHandle3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\InteractionHandle3D.cs,UpdateTransforms,The following statement contains a magic number: ((MatrixTransform3D)this.edgeHandles[3].Transform).Matrix = (m3.ToMatrix3D());
Magic Number,MouseDragDemo,ResizeManipulator3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\ResizeManipulator3D.cs,OnChildrenChanged,The following statement contains a magic number: this.translateXL.Length = 0.5;
Magic Number,MouseDragDemo,ResizeManipulator3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\ResizeManipulator3D.cs,OnChildrenChanged,The following statement contains a magic number: this.translateYL.Length = 0.5;
Magic Number,MouseDragDemo,ResizeManipulator3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\ResizeManipulator3D.cs,OnChildrenChanged,The following statement contains a magic number: this.translateZL.Length = 0.5;
Magic Number,MouseDragDemo,ResizeManipulator3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\ResizeManipulator3D.cs,OnChildrenChanged,The following statement contains a magic number: this.translateXR.Length = 0.5;
Magic Number,MouseDragDemo,ResizeManipulator3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\ResizeManipulator3D.cs,OnChildrenChanged,The following statement contains a magic number: this.translateYR.Length = 0.5;
Magic Number,MouseDragDemo,ResizeManipulator3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\ResizeManipulator3D.cs,OnChildrenChanged,The following statement contains a magic number: this.translateZR.Length = 0.5;
Magic Number,MouseDragDemo,ResizeManipulator3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\ResizeManipulator3D.cs,OnChildrenChanged,The following statement contains a magic number: {                  var g = new LineBuilder();                  g.AddLine(new Vector3(0' 0' 0)' new Vector3(1' 0' 0));                  g.AddLine(new Vector3(1' 0' 0)' new Vector3(1' 1' 0));                  g.AddLine(new Vector3(1' 1' 0)' new Vector3(0' 1' 0));                  g.AddLine(new Vector3(0' 1' 0)' new Vector3(0' 0' 0));                  this.selectionBounds = new LineGeometryModel3D()                  {                      Thickness = 3'                      Smoothness = 2'                      Color = Color.Red'                      IsThrowingShadow = false'                      Geometry = g.ToLineGeometry3D()'                  };                  this.Children.Add(this.selectionBounds);              }
Magic Number,MouseDragDemo,ResizeManipulator3D,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\ResizeManipulator3D.cs,OnChildrenChanged,The following statement contains a magic number: {                  var g = new LineBuilder();                  g.AddLine(new Vector3(0' 0' 0)' new Vector3(1' 0' 0));                  g.AddLine(new Vector3(1' 0' 0)' new Vector3(1' 1' 0));                  g.AddLine(new Vector3(1' 1' 0)' new Vector3(0' 1' 0));                  g.AddLine(new Vector3(0' 1' 0)' new Vector3(0' 0' 0));                  this.selectionBounds = new LineGeometryModel3D()                  {                      Thickness = 3'                      Smoothness = 2'                      Color = Color.Red'                      IsThrowingShadow = false'                      Geometry = g.ToLineGeometry3D()'                  };                  this.Children.Add(this.selectionBounds);              }
Magic Number,MouseDragDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(0' 0' 9)' LookDirection = new Vector3D(-0' -0' -9)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,MouseDragDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(0' 0' 9)' LookDirection = new Vector3D(-0' -0' -9)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,MouseDragDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.DirectionalLightDirection = new Vector3(-2' -5' -2);
Magic Number,MouseDragDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.DirectionalLightDirection = new Vector3(-2' -5' -2);
Magic Number,MouseDragDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.DirectionalLightDirection = new Vector3(-2' -5' -2);
Magic Number,MouseDragDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Grid = LineBuilder.GenerateGrid(Vector3.UnitZ' -5' 5);
Magic Number,MouseDragDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Grid = LineBuilder.GenerateGrid(Vector3.UnitZ' -5' 5);
Magic Number,MouseDragDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: b1.AddSphere(new Vector3(0' 0' 0)' 0.65);
Magic Number,MouseDragDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int i = 0; i < 5; i++)              {                  this.Model1Instances.Add(Matrix.Translation(0' i' 0));              }
Magic Number,MouseDragDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: e1.AddBox(new Vector3(0' 0' 0)' 1' 0.5' 2);
Magic Number,MouseDragDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: e1.AddBox(new Vector3(0' 0' 0)' 1' 0.5' 2);
Magic Number,MouseDragDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Model2Transform = new Media3D.TranslateTransform3D(-2' 0' 0);
Magic Number,MouseDragDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MouseDragDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Model3Transform = new Media3D.TranslateTransform3D(+2' 0' 0);
