Implementation smell,Namespace,Class,File,Method,Description
Long Statement,PolygonTriangulationDemo,MainWindow,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainWindow.xaml.cs,Camera_Changed,The length of the statement  "	var pos = String.Format ("X: {0:0.###}' "' cam.Position.X) + String.Format ("Y: {0:0.###}' "' cam.Position.Y) + String.Format ("Z: {0:0.###}"' cam.Position.Z); " is 159.
Long Statement,PolygonTriangulationDemo,MainWindow,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainWindow.xaml.cs,Camera_Changed,The length of the statement  "	var dir = String.Format ("X: {0:0.###}' "' cam.LookDirection.X) + String.Format ("Y: {0:0.###}' "' cam.LookDirection.Y) + String.Format ("Z: {0:0.###}"' cam.LookDirection.Z); " is 174.
Long Statement,PolygonTriangulationDemo,MainWindow,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainWindow.xaml.cs,generatePolygonButton_Click,The length of the statement  "		hole1.Add (offset1 + new Vector2 (innerRadii [i] * (Single)Math.Cos (-angle)' innerRadii [i] * (Single)Math.Sin (-angle))); " is 123.
Long Statement,PolygonTriangulationDemo,MainWindow,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainWindow.xaml.cs,generatePolygonButton_Click,The length of the statement  "		hole2.Add (offset2 + new Vector2 (innerRadii [i] * (Single)Math.Cos (-angle)' innerRadii [i] * (Single)Math.Sin (-angle))); " is 123.
Long Statement,PolygonTriangulationDemo,MainWindow,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainWindow.xaml.cs,generatePolygonButton_Click,The length of the statement  "	infoLabel.Content = String.Format ("Last triangulation of {0} Points took {1:0.##} Milliseconds!"' triangulatedPolygon.Geometry.Positions.Count' timeNeeded); " is 157.
Magic Number,PolygonTriangulationDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera {  	Position = new Point3D (0' 5' 9)'  	LookDirection = new Vector3D (0' -5' -4)'  	UpDirection = new Vector3D (0' 1' 0)  };  
Magic Number,PolygonTriangulationDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera {  	Position = new Point3D (0' 5' 9)'  	LookDirection = new Vector3D (0' -5' -4)'  	UpDirection = new Vector3D (0' 1' 0)  };  
Magic Number,PolygonTriangulationDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera {  	Position = new Point3D (0' 5' 9)'  	LookDirection = new Vector3D (0' -5' -4)'  	UpDirection = new Vector3D (0' 1' 0)  };  
Magic Number,PolygonTriangulationDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera {  	Position = new Point3D (0' 5' 9)'  	LookDirection = new Vector3D (0' -5' -4)'  	UpDirection = new Vector3D (0' 1' 0)  };  
Magic Number,PolygonTriangulationDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.TriangulationThickness = .5;  
Magic Number,PolygonTriangulationDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.PointCount = 1000;  
Magic Number,PolygonTriangulationDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.ModelLineTransform = new TranslateTransform3D (0' 0.001' 0);  
Magic Number,PolygonTriangulationDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Grid = LineBuilder.GenerateGrid (Vector3.UnitY' -5' 5' 0' 10);  
Magic Number,PolygonTriangulationDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Grid = LineBuilder.GenerateGrid (Vector3.UnitY' -5' 5' 0' 10);  
Magic Number,PolygonTriangulationDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Grid = LineBuilder.GenerateGrid (Vector3.UnitY' -5' 5' 0' 10);  
Magic Number,PolygonTriangulationDemo,MainViewModel,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.GridTransform = new TranslateTransform3D (0' -0.01' 0);  
Magic Number,PolygonTriangulationDemo,MainWindow,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainWindow.xaml.cs,generatePolygonButton_Click,The following statement contains a magic number: foreach (var point in mPolygonPoints.Union (holes.SelectMany (h => h))) {  	geometry.Positions.Add (new Vector3 (point.X' 0' point.Y + 5));  	geometry.Normals.Add (new Vector3 (0' 1' 0));  }  
Magic Number,PolygonTriangulationDemo,MainWindow,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainWindow.xaml.cs,generatePolygonButton_Click,The following statement contains a magic number: geometry.Positions.Add (new Vector3 (point.X' 0' point.Y + 5));  
Magic Number,PolygonTriangulationDemo,MainWindow,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainWindow.xaml.cs,generatePolygonButton_Click,The following statement contains a magic number: for (int i = 0; i < sLTI.Count; i += 3) {  	lb.AddLine (geometry.Positions [sLTI [i]]' geometry.Positions [sLTI [i + 1]]);  	lb.AddLine (geometry.Positions [sLTI [i + 1]]' geometry.Positions [sLTI [i + 2]]);  	lb.AddLine (geometry.Positions [sLTI [i + 2]]' geometry.Positions [sLTI [i]]);  }  
Magic Number,PolygonTriangulationDemo,MainWindow,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainWindow.xaml.cs,generatePolygonButton_Click,The following statement contains a magic number: for (int i = 0; i < sLTI.Count; i += 3) {  	lb.AddLine (geometry.Positions [sLTI [i]]' geometry.Positions [sLTI [i + 1]]);  	lb.AddLine (geometry.Positions [sLTI [i + 1]]' geometry.Positions [sLTI [i + 2]]);  	lb.AddLine (geometry.Positions [sLTI [i + 2]]' geometry.Positions [sLTI [i]]);  }  
Magic Number,PolygonTriangulationDemo,MainWindow,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainWindow.xaml.cs,generatePolygonButton_Click,The following statement contains a magic number: for (int i = 0; i < sLTI.Count; i += 3) {  	lb.AddLine (geometry.Positions [sLTI [i]]' geometry.Positions [sLTI [i + 1]]);  	lb.AddLine (geometry.Positions [sLTI [i + 1]]' geometry.Positions [sLTI [i + 2]]);  	lb.AddLine (geometry.Positions [sLTI [i + 2]]' geometry.Positions [sLTI [i]]);  }  
Magic Number,PolygonTriangulationDemo,MainWindow,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainWindow.xaml.cs,generatePolygonButton_Click,The following statement contains a magic number: i += 3
Magic Number,PolygonTriangulationDemo,MainWindow,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainWindow.xaml.cs,generatePolygonButton_Click,The following statement contains a magic number: lb.AddLine (geometry.Positions [sLTI [i + 1]]' geometry.Positions [sLTI [i + 2]]);  
Magic Number,PolygonTriangulationDemo,MainWindow,F:\newReposMay17\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\PolygonTriangulationDemo\MainWindow.xaml.cs,generatePolygonButton_Click,The following statement contains a magic number: lb.AddLine (geometry.Positions [sLTI [i + 2]]' geometry.Positions [sLTI [i]]);  
