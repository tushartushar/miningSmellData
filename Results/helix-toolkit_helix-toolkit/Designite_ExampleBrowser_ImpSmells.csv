Implementation smell,Namespace,Class,File,Method,Description
Long Method,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The method has 103 lines of code.
Long Method,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,CreateModel,The method has 118 lines of code.
Complex Method,DataTemplateDemo,DataTemplate3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\DataTemplate3D.cs,UpdateBindingSource,Cyclomatic complexity of the method is 12
Complex Method,PointsAndLinesBinding,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PointsAndLinesBinding\MainWindow.xaml.cs,UpdatePoints,Cyclomatic complexity of the method is 8
Complex Method,ExportDemo,OctaneLauncher,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\OctaneLauncher.cs,Start,Cyclomatic complexity of the method is 8
Complex Method,FlightsDemo,CsvDocument<T>,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\CsvDocument.cs,Load,Cyclomatic complexity of the method is 9
Complex Method,FractalDemo,MengerSponge,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MengerSponge.cs,SubDivide,Cyclomatic complexity of the method is 9
Complex Method,HelixToolkit.Wpf,HalfEdgeMesh,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\HalfEdgeMesh.cs,AddFace,Cyclomatic complexity of the method is 9
Complex Method,HelixToolkit.Wpf,HalfEdgeMeshVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\HalfEdgeMeshVisual3D.cs,UpdateVisuals,Cyclomatic complexity of the method is 9
Complex Method,HelixToolkit.Wpf,HalfEdgeMeshVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\HalfEdgeMeshVisual3D.cs,HighlightEdge,Cyclomatic complexity of the method is 10
Complex Method,HelixToolkit.Wpf,HalfEdgeMeshVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\HalfEdgeMeshVisual3D.cs,HighlightFace,Cyclomatic complexity of the method is 8
Complex Method,HelixToolkit.Wpf,HalfEdgeMeshVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\HalfEdgeMeshVisual3D.cs,HighlightVertex,Cyclomatic complexity of the method is 9
Complex Method,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,Cyclomatic complexity of the method is 11
Complex Method,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,Cyclomatic complexity of the method is 13
Complex Method,MazeDemo,MazeSolver1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeSolver1.cs,Solve,Cyclomatic complexity of the method is 9
Complex Method,PointsAndLinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PointsAndLines\MainWindow.xaml.cs,OnCompositionTargetRendering,Cyclomatic complexity of the method is 14
Complex Method,PyramidDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Pyramid\MainWindow.xaml.cs,MainWindowLoaded,Cyclomatic complexity of the method is 9
Complex Method,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,Rotate,Cyclomatic complexity of the method is 14
Complex Method,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,CreateModel,Cyclomatic complexity of the method is 13
Complex Method,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,Cyclomatic complexity of the method is 18
Long Parameter List,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,BuildRailing,The method has 5 parameters. Parameters: railingBuilder' bases' height' diameter' railings
Long Parameter List,ExampleBrowser,ScreenCapture,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\ScreenCapture.cs,BitBlt,The method has 9 parameters. Parameters: hdcDest' xDest' yDest' wDest' hDest' hdcSource' xSrc' ySrc' rop
Long Parameter List,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,ExtrudeText,The method has 9 parameters. Parameters: builder' text' font' fontStyle' fontWeight' fontSize' textDirection' p0' p1
Long Parameter List,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,Project,The method has 6 parameters. Parameters: v' p0' x' y' z' h
Long Parameter List,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,GetTextOutlines,The method has 5 parameters. Parameters: text' fontName' fontStyle' fontWeight' fontSize
Long Parameter List,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,FlattenBezier,The method has 5 parameters. Parameters: p1' p2' p3' p4' n
Long Parameter List,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,Group,The method has 5 parameters. Parameters: name' origin' xAngle' yAngle' zAngle
Long Parameter List,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFace,The method has 6 parameters. Parameters: face' center' width' length' height' brush
Long Parameter List,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,CreatePath,The method has 6 parameters. Parameters: min' max' n' fx' fy' fz
Long Parameter List,WiiDemo,MouseHelper,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MouseHelper.cs,mouse_event,The method has 5 parameters. Parameters: dwFlags' dx' dy' dwData' dwExtraInf
Long Identifier,DataTemplateDemo,ItemsVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\ItemsVisual3D.cs,,The length of the parameter RefreshChildrenOnChangeProperty is 31.
Long Statement,BuildingDemo,ChimneyVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\ChimneyVisual3D.cs,AppearanceChanged,The length of the statement  "                builder.AddCone(this.Position + new Vector3D(0' 0' y0)' new Vector3D(0' 0' 1)' d0 / 2' d1 / 2' y1 - y0' i == 0' i == this.Bands - 1' 20); " is 137.
Long Statement,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The length of the statement  "                    wallBuilder.AddBox(new Point3D(0' 0' y0 + this.FloorThickness / 2)' this.Length + 0.2' this.Width + 0.2' this.FloorThickness); " is 126.
Long Statement,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The length of the statement  "            roofBuilder.AddExtrudedSegments(roofSection' new Vector3D(0' -1' 0)' new Point3D(-this.Length / 2' 0' 0)' new Point3D(this.Length / 2' 0' 0)); " is 142.
Long Statement,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The length of the statement  "            wallBuilder.AddPolygon(new[] { p0' p6' p7 }' new Vector3D(0' -1' 0)' new Vector3D(0' 0' 1)' new Point3D(-this.Length / 2' 0' 0)); " is 129.
Long Statement,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The length of the statement  "            wallBuilder.AddPolygon(new[] { p0' p6' p7 }' new Vector3D(0' 1' 0)' new Vector3D(0' 0' 1)' new Point3D(this.Length / 2' 0' 0)); " is 127.
Long Statement,BuildingDemo,FenceVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\FenceVisual3D.cs,PoleTextureChanged,The length of the statement  "            this.postsModel.Material = this.postsModel.BackMaterial = this.PoleTexture != null ? MaterialHelper.CreateMaterial(this.PoleTexture) : null; " is 140.
Long Statement,ExampleBrowser,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\MainWindow.xaml.cs,ListBoxMouseDoubleClick,The length of the statement  "                        MessageBox.Show(window' "Demo image updated. Now add `" + example.ThumbnailFileName + "` as a resource in the Images folder in the ExampleBrowser project."); " is 157.
Long Statement,ExampleBrowser,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.ListBox)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.ListBoxMouseDoubleClick); " is 143.
Long Statement,DataTemplateDemo,DataTemplate3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\DataTemplate3D.cs,CreateItem,The length of the statement  "            // clear references from previous runs because they belong to another object (reflection results do not need to be cleared) " is 123.
Long Statement,DataTemplateDemo,DataTemplate3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\DataTemplate3D.cs,ObjectToXaml,The length of the statement  "                var contentNode = xmlDoc.DocumentElement.ChildNodes.Cast<XmlNode>().Where(n => n.LocalName.EndsWith(".Content")).FirstOrDefault(); " is 130.
Long Statement,DataTemplateDemo,DataTemplate3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\DataTemplate3D.cs,ObjectToXaml,The length of the statement  "                if (contentNode != null && (contentNode.ChildNodes.Count != 1 || !new[] { "Binding"' "MultiBinding" }.Contains(contentNode.ChildNodes[0].LocalName))) " is 149.
Long Statement,DataTemplateDemo,DataTemplate3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\DataTemplate3D.cs,UpdateKnownReferencesInTree,The length of the statement  "                    if (curPathSeg.Name == othPathSeg.Name && curPathSeg.IsProperty == othPathSeg.IsProperty && curPathSeg.Position == othPathSeg.Position) " is 135.
Long Statement,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,IsPointInPolygon,The length of the statement  "                if ((polygon[i].Y < testPoint.Y && polygon[j].Y >= testPoint.Y) || (polygon[j].Y < testPoint.Y && polygon[i].Y >= testPoint.Y)) " is 127.
Long Statement,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,IsPointInPolygon,The length of the statement  "                    if (polygon[i].X + ((testPoint.Y - polygon[i].Y) / (polygon[j].Y - polygon[i].Y) * (polygon[j].X - polygon[i].X)) < testPoint.X) " is 128.
Long Statement,MemoryLeakTest,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\MemoryLeakTest\MainWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/ExampleBrowser;component/examples/memoryleaktest/mainwindow.xaml"' System.UriKind.Relative); " is 138.
Long Statement,MvvmCameraDemo,ShellView,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\MvvmCameraDemo\ShellView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/ExampleBrowser;component/examples/mvvmcamerademo/shellview.xaml"' System.UriKind.Relative); " is 137.
Long Statement,ChamferDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Chamfer\MainWindow.xaml.cs,CreateDice,The length of the statement  "            return new ModelVisual3D { Content = new GeometryModel3D { Geometry = diceMesh.ToMesh()' Material = Materials.White } }; " is 120.
Long Statement,FlightsDemo,App,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\App.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/ExampleBrowser;component/examples/flights/app.xaml"' System.UriKind.Relative); " is 124.
Long Statement,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,LatLonToPoint,The length of the statement  "            return new Point3D(EarthRadius * Math.Cos(latitude) * Math.Cos(longitude)' EarthRadius * Math.Cos(latitude) * Math.Sin(longitude)' EarthRadius * Math.Sin(latitude)); " is 165.
Long Statement,MazeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainWindow.xaml.cs,WindowKeyDown,The length of the statement  "                var d = new SaveFileDialog { Title = "Export maze"' Filter = Exporters.Filter' DefaultExt = Exporters.DefaultExtension }; " is 121.
Long Statement,PenroseTriangleDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PenroseTriangle\MainWindow.xaml.cs,WindowKeyDown,The length of the statement  "                var d = new SaveFileDialog { Title = "Export model"' Filter = Exporters.Filter' DefaultExt = Exporters.DefaultExtension }; " is 122.
Long Statement,PolyhedronDemo,PanelModelBuilder,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\PanelModelBuilder.cs,AddPanel,The length of the statement  "            for (int i = 0; i < coords.Length / 3; i++) points[i] = new Point3D(coords[i * 3]' coords[i * 3 + 1]' coords[i * 3 + 2]); " is 121.
Long Statement,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateCubelets,The length of the statement  "                            cubelet.Children.Add(CreateFace(face' center' size * (1 - spacing)' size * (1 - spacing)' size * (1 - spacing)' color)); " is 120.
Long Statement,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,CreateDrawingBrush,The length of the statement  "            dg.Children.Add(new GeometryDrawing { Geometry = new RectangleGeometry(new Rect(0.25' 0.25' 0.5' 0.5))' Brush = Brushes.Black }); " is 129.
Long Statement,SubdivisionDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Subdivision\MainWindow.xaml.cs,FileOpen_Click,The length of the statement  "            var d = new OpenFileDialog() { Filter = "OFF files (*.off)|*.off"' InitialDirectory = Path.Combine(Directory.GetCurrentDirectory()' @"Examples\Subdivision\Models\") }; " is 167.
Long Statement,SubdivisionDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Subdivision\MainWindow.xaml.cs,UpdateModel,The length of the statement  "            subdivisionStatus.Text = string.Format("Subdivision time: {0} ms' mesh generation time: {1} ms'  triangles: {2} (original mesh: {3})"' subDivisionTime' meshGenerationTime' (mesh3.Faces.Count)' (triangularMesh.TriangleIndices.Count / 3)); " is 237.
Long Statement,TextDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Text\MainWindow.xaml.cs,CreateItems,The length of the statement  "                this.TextItems.Add(new SpatialTextItem { Text = word' Position = new Point3D(x' y' 0)' TextDirection = new Vector3D(1' 0' 0)' UpDirection = new Vector3D(0' 1' 0) }); " is 165.
Long Statement,TextDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Text\MainWindow.xaml.cs,CreateItems,The length of the statement  "            this.TextItems3.Add(new BillboardTextItem { Text = "This is a billboard with a 'pin'."' Position = new Point3D(0.5' 0' 0.5)' DepthOffset = 0' WorldDepthOffset = 0.2 }); " is 168.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,IsPointInPolygon,The conditional expression  "(polygon[i].Y < testPoint.Y && polygon[j].Y >= testPoint.Y) || (polygon[j].Y < testPoint.Y && polygon[i].Y >= testPoint.Y)"  is complex.
Complex Conditional,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CoercePosition,The conditional expression  "i >= 0 && i < m && j >= 0 && j < n && position.Z >= 0 && position.Z < 2"  is complex.
Complex Conditional,PyramidDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Pyramid\MainWindow.xaml.cs,MainWindowLoaded,The conditional expression  "j > 0 && j < mx - 1 && i > 0 && i < nvert - 1 && k > 0 && k < mx - 1"  is complex.
Complex Conditional,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateCubelets,The conditional expression  "face == 0 && i == 0 && j == 1 && k == 1"  is complex.
Empty Catch Block,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,OnClosing,The method has an empty catch block.
Magic Number,BuildingDemo,ChimneyVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\ChimneyVisual3D.cs,ChimneyVisual3D,The following statement contains a magic number: this.redbands.Material = MaterialHelper.CreateMaterial(Brushes.Red' ambient: 10);
Magic Number,BuildingDemo,ChimneyVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\ChimneyVisual3D.cs,ChimneyVisual3D,The following statement contains a magic number: this.whitebands.Material = MaterialHelper.CreateMaterial(Brushes.White' ambient: 10);
Magic Number,BuildingDemo,ChimneyVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\ChimneyVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var builder = (this.Bands - i) % 2 == 1 ? redbuilder : whitebuilder;
Magic Number,BuildingDemo,ChimneyVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\ChimneyVisual3D.cs,AppearanceChanged,The following statement contains a magic number: builder.AddCone(this.Position + new Vector3D(0' 0' y0)' new Vector3D(0' 0' 1)' d0 / 2' d1 / 2' y1 - y0' i == 0' i == this.Bands - 1' 20);
Magic Number,BuildingDemo,ChimneyVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\ChimneyVisual3D.cs,AppearanceChanged,The following statement contains a magic number: builder.AddCone(this.Position + new Vector3D(0' 0' y0)' new Vector3D(0' 0' 1)' d0 / 2' d1 / 2' y1 - y0' i == 0' i == this.Bands - 1' 20);
Magic Number,BuildingDemo,ChimneyVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\ChimneyVisual3D.cs,AppearanceChanged,The following statement contains a magic number: builder.AddCone(this.Position + new Vector3D(0' 0' y0)' new Vector3D(0' 0' 1)' d0 / 2' d1 / 2' y1 - y0' i == 0' i == this.Bands - 1' 20);
Magic Number,BuildingDemo,KerbVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\KerbVisual3D.cs,AppearanceChanged,The following statement contains a magic number: int m = 41;
Magic Number,BuildingDemo,KerbVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\KerbVisual3D.cs,AppearanceChanged,The following statement contains a magic number: double n = 4;
Magic Number,BuildingDemo,KerbVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\KerbVisual3D.cs,AppearanceChanged,The following statement contains a magic number: double a = this.Width / 2;
Magic Number,BuildingDemo,KerbVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\KerbVisual3D.cs,AppearanceChanged,The following statement contains a magic number: section.Add(new Point(                      a * Math.Sign(Math.Cos(t)) * Math.Pow(Math.Abs(Math.Cos(t))' 2 / n)'                      -b * Math.Sign(Math.Sin(t)) * Math.Pow(Math.Abs(Math.Sin(t))' 2 / n)));
Magic Number,BuildingDemo,KerbVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\KerbVisual3D.cs,AppearanceChanged,The following statement contains a magic number: section.Add(new Point(                      a * Math.Sign(Math.Cos(t)) * Math.Pow(Math.Abs(Math.Cos(t))' 2 / n)'                      -b * Math.Sign(Math.Sin(t)) * Math.Pow(Math.Abs(Math.Sin(t))' 2 / n)));
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,HouseVisual3D,The following statement contains a magic number: this.roof.Material = MaterialHelper.CreateMaterial(Brushes.Brown' ambient: 10);
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,HouseVisual3D,The following statement contains a magic number: this.walls.Material = MaterialHelper.CreateMaterial(Brushes.White' ambient: 10);
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,ExplodedRoofChanged,The following statement contains a magic number: roof.Transform = new TranslateTransform3D(0' 0' 30);
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: wallBuilder.AddBox(new Point3D(0' 0' y0 + this.FloorThickness / 2)' this.Length + 0.2' this.Width + 0.2' this.FloorThickness);
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: wallBuilder.AddBox(new Point3D(0' 0' y0 + this.FloorThickness / 2)' this.Length + 0.2' this.Width + 0.2' this.FloorThickness);
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: wallBuilder.AddBox(new Point3D(0' 0' y0 + this.FloorThickness / 2)' this.Length + 0.2' this.Width + 0.2' this.FloorThickness);
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: wallBuilder.AddBox(new Point3D(0' 0' y0 + this.StoryHeight / 2)' this.Length' this.Width' this.StoryHeight);
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var theta = Math.PI / 180 * this.RoofAngle;
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var y1 = y0 + Math.Tan(theta) * this.Width / 2;
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var p1 = new Point(this.Width / 2 + 0.2 * Math.Cos(theta)' y0 - 0.2 * Math.Sin(theta));
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var p1 = new Point(this.Width / 2 + 0.2 * Math.Cos(theta)' y0 - 0.2 * Math.Sin(theta));
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var p1 = new Point(this.Width / 2 + 0.2 * Math.Cos(theta)' y0 - 0.2 * Math.Sin(theta));
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: roofBuilder.AddExtrudedSegments(roofSection' new Vector3D(0' -1' 0)' new Point3D(-this.Length / 2' 0' 0)' new Point3D(this.Length / 2' 0' 0));
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: roofBuilder.AddExtrudedSegments(roofSection' new Vector3D(0' -1' 0)' new Point3D(-this.Length / 2' 0' 0)' new Point3D(this.Length / 2' 0' 0));
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: roofBuilder.AddPolygon(cap' new Vector3D(0' -1' 0)' new Vector3D(0' 0' 1)' new Point3D(-this.Length / 2' 0' 0));
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: roofBuilder.AddPolygon(cap' new Vector3D(0' 1' 0)' new Vector3D(0' 0' 1)' new Point3D(this.Length / 2' 0' 0));
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var p6 = new Point(this.Width / 2' y0);
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var p7 = new Point(-this.Width / 2' y0);
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: wallBuilder.AddPolygon(new[] { p0' p6' p7 }' new Vector3D(0' -1' 0)' new Vector3D(0' 0' 1)' new Point3D(-this.Length / 2' 0' 0));
Magic Number,BuildingDemo,HouseVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\HouseVisual3D.cs,AppearanceChanged,The following statement contains a magic number: wallBuilder.AddPolygon(new[] { p0' p6' p7 }' new Vector3D(0' 1' 0)' new Vector3D(0' 0' 1)' new Point3D(this.Length / 2' 0' 0));
Magic Number,BuildingDemo,FenceVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\FenceVisual3D.cs,AppearanceChanged,The following statement contains a magic number: builder.AddCylinder(p1' p2' this.Diameter' 36);
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,SiloVisual3D,The following statement contains a magic number: this.walls.Material = MaterialHelper.CreateMaterial(Brushes.White' ambient: 10);
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,SiloVisual3D,The following statement contains a magic number: this.railing.Material = MaterialHelper.CreateMaterial(Brushes.Silver' ambient: 10);
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,SiloVisual3D,The following statement contains a magic number: this.stairs.Material = MaterialHelper.CreateMaterial(Brushes.Brown' ambient: 10);
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var p1 = new Point(this.Diameter / 2' 0);
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var p2 = new Point(this.Diameter / 2' this.Height);
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var p3 = new Point(this.DomeDiameter / 2' this.Height);
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var sectionIndices = new List<int> { 0' 1' 2' 3' 4' 5 };
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var sectionIndices = new List<int> { 0' 1' 2' 3' 4' 5 };
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var sectionIndices = new List<int> { 0' 1' 2' 3' 4' 5 };
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var sectionIndices = new List<int> { 0' 1' 2' 3' 4' 5 };
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: int n = 40;
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: section.Add(new Point(x * this.DomeDiameter / 2' this.Height + (this.DomeHeight * (1 - y))));
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: builder.AddSurfaceOfRevolution(new Point3D(0' 0' 0)' new Vector3D(0' 0' 1)' section' sectionIndices' 80);
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var treadDepth = 0.3;
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var riseHeight = 0.15;
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var thickness = 0.05;
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var r = (this.Diameter * 0.5) + (width * 0.5);
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var r = (this.Diameter * 0.5) + (width * 0.5);
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var rp = (this.Diameter * 0.5) + (width * 0.95);
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var rp = (this.Diameter * 0.5) + (width * 0.95);
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var p = new Point3D(Math.Cos(theta) * r' Math.Sin(theta) * r' (riseHeight * i) + (thickness / 2));
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var railingHeight = 0.8;
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var railingDiameter = 0.05;
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var railings = 3;
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var railingPostDistance = 0.5;
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var tr = (this.Diameter / 2) - railingDiameter;
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,AppearanceChanged,The following statement contains a magic number: var theta = lastTheta + (2 * Math.PI * i / topRailingPosts);
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,BuildRailing,The following statement contains a magic number: railingBuilder.AddCylinder(point' point + new Vector3D(0' 0' height)' diameter' 10);
Magic Number,BuildingDemo,SiloVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\SiloVisual3D.cs,BuildRailing,The following statement contains a magic number: railingBuilder.AddTube(path' diameter' 10' false);
Magic Number,BuildingDemo,Superellipse,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\Superellipse.cs,ProvideValue,The following statement contains a magic number: int m = 400;
Magic Number,BuildingDemo,Superellipse,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\Superellipse.cs,ProvideValue,The following statement contains a magic number: double t = 2 * Math.PI * i / (m - 2);
Magic Number,BuildingDemo,Superellipse,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\Superellipse.cs,ProvideValue,The following statement contains a magic number: double t = 2 * Math.PI * i / (m - 2);
Magic Number,BuildingDemo,Superellipse,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\Superellipse.cs,ProvideValue,The following statement contains a magic number: c.Add(new Point3D(                      this.a * Math.Sign(Math.Cos(t)) * Math.Pow(Math.Abs(Math.Cos(t))' 2 / this.n)'                      this.b * Math.Sign(Math.Sin(t)) * Math.Pow(Math.Abs(Math.Sin(t))' 2 / this.n)'                      0));
Magic Number,BuildingDemo,Superellipse,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BuildingDemo\Superellipse.cs,ProvideValue,The following statement contains a magic number: c.Add(new Point3D(                      this.a * Math.Sign(Math.Cos(t)) * Math.Pow(Math.Abs(Math.Cos(t))' 2 / this.n)'                      this.b * Math.Sign(Math.Sin(t)) * Math.Pow(Math.Abs(Math.Sin(t))' 2 / this.n)'                      0));
Magic Number,ExampleBrowser,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\MainWindow.xaml.cs,ListBoxMouseDoubleClick,The following statement contains a magic number: window.KeyDown += (s' args) =>                  {                      if (args.Key == Key.F12)                      {                          CreateThumbnail(window' 120' Path.Combine(@"..\..\..\Images\"' example.ThumbnailFileName));                          MessageBox.Show(window' "Demo image updated. Now add `" + example.ThumbnailFileName + "` as a resource in the Images folder in the ExampleBrowser project.");                          e.Handled = true;                      }                  };
Magic Number,DataTemplateDemo,GenericUIElement3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\GenericUIElement3D.cs,SetGeometry,The following statement contains a magic number: meshBuilder.AddBox(new Point3D(0' 0' 0)' 0.5' 0.5' 0.5);
Magic Number,DataTemplateDemo,GenericUIElement3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\GenericUIElement3D.cs,SetGeometry,The following statement contains a magic number: meshBuilder.AddBox(new Point3D(0' 0' 0)' 0.5' 0.5' 0.5);
Magic Number,DataTemplateDemo,GenericUIElement3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\GenericUIElement3D.cs,SetGeometry,The following statement contains a magic number: meshBuilder.AddBox(new Point3D(0' 0' 0)' 0.5' 0.5' 0.5);
Magic Number,DataTemplateDemo,DataTemplate3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\DataTemplate3D.cs,UpdateBindingSource,The following statement contains a magic number: var secondLastSegment = path.ElementAt(path.Count - 2);
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.FixedElements = new List<Element>                               {                                   new Element                                       {                                           Position = new Point3D(0' 0' 0)'                                           Material = Materials.Red'                                           Radius = 1                                       }'                                   new Element                                       {                                           Position = new Point3D(-0.757' 0.586' 0)'                                           Material = Materials.White'                                           Radius = 0.6                                       }'                                   new Element                                       {                                           Position = new Point3D(0.757' 0.586' 0)'                                           Material = Materials.White'                                           Radius = 0.6                                       }                               };
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.FixedElements = new List<Element>                               {                                   new Element                                       {                                           Position = new Point3D(0' 0' 0)'                                           Material = Materials.Red'                                           Radius = 1                                       }'                                   new Element                                       {                                           Position = new Point3D(-0.757' 0.586' 0)'                                           Material = Materials.White'                                           Radius = 0.6                                       }'                                   new Element                                       {                                           Position = new Point3D(0.757' 0.586' 0)'                                           Material = Materials.White'                                           Radius = 0.6                                       }                               };
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.FixedElements = new List<Element>                               {                                   new Element                                       {                                           Position = new Point3D(0' 0' 0)'                                           Material = Materials.Red'                                           Radius = 1                                       }'                                   new Element                                       {                                           Position = new Point3D(-0.757' 0.586' 0)'                                           Material = Materials.White'                                           Radius = 0.6                                       }'                                   new Element                                       {                                           Position = new Point3D(0.757' 0.586' 0)'                                           Material = Materials.White'                                           Radius = 0.6                                       }                               };
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.FixedElements = new List<Element>                               {                                   new Element                                       {                                           Position = new Point3D(0' 0' 0)'                                           Material = Materials.Red'                                           Radius = 1                                       }'                                   new Element                                       {                                           Position = new Point3D(-0.757' 0.586' 0)'                                           Material = Materials.White'                                           Radius = 0.6                                       }'                                   new Element                                       {                                           Position = new Point3D(0.757' 0.586' 0)'                                           Material = Materials.White'                                           Radius = 0.6                                       }                               };
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.FixedElements = new List<Element>                               {                                   new Element                                       {                                           Position = new Point3D(0' 0' 0)'                                           Material = Materials.Red'                                           Radius = 1                                       }'                                   new Element                                       {                                           Position = new Point3D(-0.757' 0.586' 0)'                                           Material = Materials.White'                                           Radius = 0.6                                       }'                                   new Element                                       {                                           Position = new Point3D(0.757' 0.586' 0)'                                           Material = Materials.White'                                           Radius = 0.6                                       }                               };
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.FixedElements = new List<Element>                               {                                   new Element                                       {                                           Position = new Point3D(0' 0' 0)'                                           Material = Materials.Red'                                           Radius = 1                                       }'                                   new Element                                       {                                           Position = new Point3D(-0.757' 0.586' 0)'                                           Material = Materials.White'                                           Radius = 0.6                                       }'                                   new Element                                       {                                           Position = new Point3D(0.757' 0.586' 0)'                                           Material = Materials.White'                                           Radius = 0.6                                       }                               };
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddElementCommand = new DelegateCommand(() =>              {                  if (this.ObservableElements.Count % 3 == 1)                  {                      var modelBuilder = new MeshBuilder();                      modelBuilder.AddCylinder(new Point3D(0' 0' 0)' new Point3D(0' 1' 0)' 0.75' 15);                        ModelElement model = new ModelElement1();                      if (this.ObservableElements.Count % 2 == 0)                          model = new ModelElement2();                        model.IsVisible = true;                      model.Model = new GeometryModel3D                      {                          Material = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          BackMaterial = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          Geometry = modelBuilder.ToMesh()                      };                      model.Position = new Point3D(0' -3' this.ObservableElements.Count);                        this.ObservableElements.Add(model);                  }                  else if (this.ObservableElements.Count % 2 == 0)                  {                      this.ObservableElements.Add(new SphereElement                      {                          Position = new Point3D(-2' -3' this.ObservableElements.Count)'                          Material = Materials.Green'                          Radius = 0.4                      });                  }                  else                  {                      this.ObservableElements.Add(new CubeElement                      {                          Position = new Point3D(2' -3' this.ObservableElements.Count)                      });                  }              });
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddElementCommand = new DelegateCommand(() =>              {                  if (this.ObservableElements.Count % 3 == 1)                  {                      var modelBuilder = new MeshBuilder();                      modelBuilder.AddCylinder(new Point3D(0' 0' 0)' new Point3D(0' 1' 0)' 0.75' 15);                        ModelElement model = new ModelElement1();                      if (this.ObservableElements.Count % 2 == 0)                          model = new ModelElement2();                        model.IsVisible = true;                      model.Model = new GeometryModel3D                      {                          Material = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          BackMaterial = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          Geometry = modelBuilder.ToMesh()                      };                      model.Position = new Point3D(0' -3' this.ObservableElements.Count);                        this.ObservableElements.Add(model);                  }                  else if (this.ObservableElements.Count % 2 == 0)                  {                      this.ObservableElements.Add(new SphereElement                      {                          Position = new Point3D(-2' -3' this.ObservableElements.Count)'                          Material = Materials.Green'                          Radius = 0.4                      });                  }                  else                  {                      this.ObservableElements.Add(new CubeElement                      {                          Position = new Point3D(2' -3' this.ObservableElements.Count)                      });                  }              });
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddElementCommand = new DelegateCommand(() =>              {                  if (this.ObservableElements.Count % 3 == 1)                  {                      var modelBuilder = new MeshBuilder();                      modelBuilder.AddCylinder(new Point3D(0' 0' 0)' new Point3D(0' 1' 0)' 0.75' 15);                        ModelElement model = new ModelElement1();                      if (this.ObservableElements.Count % 2 == 0)                          model = new ModelElement2();                        model.IsVisible = true;                      model.Model = new GeometryModel3D                      {                          Material = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          BackMaterial = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          Geometry = modelBuilder.ToMesh()                      };                      model.Position = new Point3D(0' -3' this.ObservableElements.Count);                        this.ObservableElements.Add(model);                  }                  else if (this.ObservableElements.Count % 2 == 0)                  {                      this.ObservableElements.Add(new SphereElement                      {                          Position = new Point3D(-2' -3' this.ObservableElements.Count)'                          Material = Materials.Green'                          Radius = 0.4                      });                  }                  else                  {                      this.ObservableElements.Add(new CubeElement                      {                          Position = new Point3D(2' -3' this.ObservableElements.Count)                      });                  }              });
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddElementCommand = new DelegateCommand(() =>              {                  if (this.ObservableElements.Count % 3 == 1)                  {                      var modelBuilder = new MeshBuilder();                      modelBuilder.AddCylinder(new Point3D(0' 0' 0)' new Point3D(0' 1' 0)' 0.75' 15);                        ModelElement model = new ModelElement1();                      if (this.ObservableElements.Count % 2 == 0)                          model = new ModelElement2();                        model.IsVisible = true;                      model.Model = new GeometryModel3D                      {                          Material = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          BackMaterial = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          Geometry = modelBuilder.ToMesh()                      };                      model.Position = new Point3D(0' -3' this.ObservableElements.Count);                        this.ObservableElements.Add(model);                  }                  else if (this.ObservableElements.Count % 2 == 0)                  {                      this.ObservableElements.Add(new SphereElement                      {                          Position = new Point3D(-2' -3' this.ObservableElements.Count)'                          Material = Materials.Green'                          Radius = 0.4                      });                  }                  else                  {                      this.ObservableElements.Add(new CubeElement                      {                          Position = new Point3D(2' -3' this.ObservableElements.Count)                      });                  }              });
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddElementCommand = new DelegateCommand(() =>              {                  if (this.ObservableElements.Count % 3 == 1)                  {                      var modelBuilder = new MeshBuilder();                      modelBuilder.AddCylinder(new Point3D(0' 0' 0)' new Point3D(0' 1' 0)' 0.75' 15);                        ModelElement model = new ModelElement1();                      if (this.ObservableElements.Count % 2 == 0)                          model = new ModelElement2();                        model.IsVisible = true;                      model.Model = new GeometryModel3D                      {                          Material = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          BackMaterial = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          Geometry = modelBuilder.ToMesh()                      };                      model.Position = new Point3D(0' -3' this.ObservableElements.Count);                        this.ObservableElements.Add(model);                  }                  else if (this.ObservableElements.Count % 2 == 0)                  {                      this.ObservableElements.Add(new SphereElement                      {                          Position = new Point3D(-2' -3' this.ObservableElements.Count)'                          Material = Materials.Green'                          Radius = 0.4                      });                  }                  else                  {                      this.ObservableElements.Add(new CubeElement                      {                          Position = new Point3D(2' -3' this.ObservableElements.Count)                      });                  }              });
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddElementCommand = new DelegateCommand(() =>              {                  if (this.ObservableElements.Count % 3 == 1)                  {                      var modelBuilder = new MeshBuilder();                      modelBuilder.AddCylinder(new Point3D(0' 0' 0)' new Point3D(0' 1' 0)' 0.75' 15);                        ModelElement model = new ModelElement1();                      if (this.ObservableElements.Count % 2 == 0)                          model = new ModelElement2();                        model.IsVisible = true;                      model.Model = new GeometryModel3D                      {                          Material = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          BackMaterial = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          Geometry = modelBuilder.ToMesh()                      };                      model.Position = new Point3D(0' -3' this.ObservableElements.Count);                        this.ObservableElements.Add(model);                  }                  else if (this.ObservableElements.Count % 2 == 0)                  {                      this.ObservableElements.Add(new SphereElement                      {                          Position = new Point3D(-2' -3' this.ObservableElements.Count)'                          Material = Materials.Green'                          Radius = 0.4                      });                  }                  else                  {                      this.ObservableElements.Add(new CubeElement                      {                          Position = new Point3D(2' -3' this.ObservableElements.Count)                      });                  }              });
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddElementCommand = new DelegateCommand(() =>              {                  if (this.ObservableElements.Count % 3 == 1)                  {                      var modelBuilder = new MeshBuilder();                      modelBuilder.AddCylinder(new Point3D(0' 0' 0)' new Point3D(0' 1' 0)' 0.75' 15);                        ModelElement model = new ModelElement1();                      if (this.ObservableElements.Count % 2 == 0)                          model = new ModelElement2();                        model.IsVisible = true;                      model.Model = new GeometryModel3D                      {                          Material = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          BackMaterial = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          Geometry = modelBuilder.ToMesh()                      };                      model.Position = new Point3D(0' -3' this.ObservableElements.Count);                        this.ObservableElements.Add(model);                  }                  else if (this.ObservableElements.Count % 2 == 0)                  {                      this.ObservableElements.Add(new SphereElement                      {                          Position = new Point3D(-2' -3' this.ObservableElements.Count)'                          Material = Materials.Green'                          Radius = 0.4                      });                  }                  else                  {                      this.ObservableElements.Add(new CubeElement                      {                          Position = new Point3D(2' -3' this.ObservableElements.Count)                      });                  }              });
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddElementCommand = new DelegateCommand(() =>              {                  if (this.ObservableElements.Count % 3 == 1)                  {                      var modelBuilder = new MeshBuilder();                      modelBuilder.AddCylinder(new Point3D(0' 0' 0)' new Point3D(0' 1' 0)' 0.75' 15);                        ModelElement model = new ModelElement1();                      if (this.ObservableElements.Count % 2 == 0)                          model = new ModelElement2();                        model.IsVisible = true;                      model.Model = new GeometryModel3D                      {                          Material = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          BackMaterial = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          Geometry = modelBuilder.ToMesh()                      };                      model.Position = new Point3D(0' -3' this.ObservableElements.Count);                        this.ObservableElements.Add(model);                  }                  else if (this.ObservableElements.Count % 2 == 0)                  {                      this.ObservableElements.Add(new SphereElement                      {                          Position = new Point3D(-2' -3' this.ObservableElements.Count)'                          Material = Materials.Green'                          Radius = 0.4                      });                  }                  else                  {                      this.ObservableElements.Add(new CubeElement                      {                          Position = new Point3D(2' -3' this.ObservableElements.Count)                      });                  }              });
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddElementCommand = new DelegateCommand(() =>              {                  if (this.ObservableElements.Count % 3 == 1)                  {                      var modelBuilder = new MeshBuilder();                      modelBuilder.AddCylinder(new Point3D(0' 0' 0)' new Point3D(0' 1' 0)' 0.75' 15);                        ModelElement model = new ModelElement1();                      if (this.ObservableElements.Count % 2 == 0)                          model = new ModelElement2();                        model.IsVisible = true;                      model.Model = new GeometryModel3D                      {                          Material = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          BackMaterial = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          Geometry = modelBuilder.ToMesh()                      };                      model.Position = new Point3D(0' -3' this.ObservableElements.Count);                        this.ObservableElements.Add(model);                  }                  else if (this.ObservableElements.Count % 2 == 0)                  {                      this.ObservableElements.Add(new SphereElement                      {                          Position = new Point3D(-2' -3' this.ObservableElements.Count)'                          Material = Materials.Green'                          Radius = 0.4                      });                  }                  else                  {                      this.ObservableElements.Add(new CubeElement                      {                          Position = new Point3D(2' -3' this.ObservableElements.Count)                      });                  }              });
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddElementCommand = new DelegateCommand(() =>              {                  if (this.ObservableElements.Count % 3 == 1)                  {                      var modelBuilder = new MeshBuilder();                      modelBuilder.AddCylinder(new Point3D(0' 0' 0)' new Point3D(0' 1' 0)' 0.75' 15);                        ModelElement model = new ModelElement1();                      if (this.ObservableElements.Count % 2 == 0)                          model = new ModelElement2();                        model.IsVisible = true;                      model.Model = new GeometryModel3D                      {                          Material = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          BackMaterial = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          Geometry = modelBuilder.ToMesh()                      };                      model.Position = new Point3D(0' -3' this.ObservableElements.Count);                        this.ObservableElements.Add(model);                  }                  else if (this.ObservableElements.Count % 2 == 0)                  {                      this.ObservableElements.Add(new SphereElement                      {                          Position = new Point3D(-2' -3' this.ObservableElements.Count)'                          Material = Materials.Green'                          Radius = 0.4                      });                  }                  else                  {                      this.ObservableElements.Add(new CubeElement                      {                          Position = new Point3D(2' -3' this.ObservableElements.Count)                      });                  }              });
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddElementCommand = new DelegateCommand(() =>              {                  if (this.ObservableElements.Count % 3 == 1)                  {                      var modelBuilder = new MeshBuilder();                      modelBuilder.AddCylinder(new Point3D(0' 0' 0)' new Point3D(0' 1' 0)' 0.75' 15);                        ModelElement model = new ModelElement1();                      if (this.ObservableElements.Count % 2 == 0)                          model = new ModelElement2();                        model.IsVisible = true;                      model.Model = new GeometryModel3D                      {                          Material = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          BackMaterial = new DiffuseMaterial(System.Windows.Media.Brushes.Orange)'                          Geometry = modelBuilder.ToMesh()                      };                      model.Position = new Point3D(0' -3' this.ObservableElements.Count);                        this.ObservableElements.Add(model);                  }                  else if (this.ObservableElements.Count % 2 == 0)                  {                      this.ObservableElements.Add(new SphereElement                      {                          Position = new Point3D(-2' -3' this.ObservableElements.Count)'                          Material = Materials.Green'                          Radius = 0.4                      });                  }                  else                  {                      this.ObservableElements.Add(new CubeElement                      {                          Position = new Point3D(2' -3' this.ObservableElements.Count)                      });                  }              });
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddElementsCommand = new DelegateCommand(() =>              {                  for (int a = 0; a < 250; a++)                      AddElementCommand.Execute(null);              });
Magic Number,DataTemplateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\DataTemplate\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddUIElementCommand = new DelegateCommand(() =>              {                  ModelElement model = new ModelElement3                  {                      IsVisible = true'                      Color = Colors.Pink                  };                  model.Position = new Point3D(0' -3' this.ObservableElements.Count);                    this.ObservableElements.Add(model);              });
Magic Number,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,ExtrudeText,The following statement contains a magic number: var v2 = t.GetVertex(2);
Magic Number,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,AreaOfSegment,The following statement contains a magic number: return Math.Abs(segment.Take(segment.Length - 1)                  .Select((p' i) => (segment[i + 1].X - p.X) * (segment[i + 1].Y + p.Y))                  .Sum() / 2);
Magic Number,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,ToPolyLine,The following statement contains a magic number: outline.AddRange(FlattenBezier(p1' polybezier.Points[i + 1]' polybezier.Points[i + 2]' polybezier.Points[i + 3]' 10));
Magic Number,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,ToPolyLine,The following statement contains a magic number: outline.AddRange(FlattenBezier(p1' polybezier.Points[i + 1]' polybezier.Points[i + 2]' polybezier.Points[i + 3]' 10));
Magic Number,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,ToPolyLine,The following statement contains a magic number: outline.AddRange(FlattenBezier(p1' polybezier.Points[i + 1]' polybezier.Points[i + 2]' polybezier.Points[i + 3]' 10));
Magic Number,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,ToPolyLine,The following statement contains a magic number: i + 3 < polybezier.Points.Count
Magic Number,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,ToPolyLine,The following statement contains a magic number: outline.AddRange(FlattenBezier(previousPoint' bezierSegment.Point1' bezierSegment.Point2' bezierSegment.Point3' 10));
Magic Number,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,FlattenBezier,The following statement contains a magic number: yield return new Point(                      (u * u * u * p1.X) + (3 * t * u * u * p2.X) + (3 * t * t * u * p3.X) + (t * t * t * p4.X)'                      (u * u * u * p1.Y) + (3 * t * u * u * p2.Y) + (3 * t * t * u * p3.Y) + (t * t * t * p4.Y));
Magic Number,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,FlattenBezier,The following statement contains a magic number: yield return new Point(                      (u * u * u * p1.X) + (3 * t * u * u * p2.X) + (3 * t * t * u * p3.X) + (t * t * t * p4.X)'                      (u * u * u * p1.Y) + (3 * t * u * u * p2.Y) + (3 * t * t * u * p3.Y) + (t * t * t * p4.Y));
Magic Number,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,FlattenBezier,The following statement contains a magic number: yield return new Point(                      (u * u * u * p1.X) + (3 * t * u * u * p2.X) + (3 * t * t * u * p3.X) + (t * t * t * p4.X)'                      (u * u * u * p1.Y) + (3 * t * u * u * p2.Y) + (3 * t * t * u * p3.Y) + (t * t * t * p4.Y));
Magic Number,ExtrudedTextDemo,Extensions,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\Extensions.cs,FlattenBezier,The following statement contains a magic number: yield return new Point(                      (u * u * u * p1.X) + (3 * t * u * u * p2.X) + (3 * t * t * u * p3.X) + (t * t * t * p4.X)'                      (u * u * u * p1.Y) + (3 * t * u * u * p2.Y) + (3 * t * t * u * p3.Y) + (t * t * t * p4.Y));
Magic Number,ExtrudedTextDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ExtrudedText\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: builder.ExtrudeText(                  "Helix Toolkit"'                  "Arial"'                  FontStyles.Normal'                  FontWeights.Bold'                  20'                  new Vector3D(1' 0' 0)'                  new Point3D(0' 0' 0)'                  new Point3D(0' 0' 1));
Magic Number,HippoDemo,GridLines,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HippoDemo\GridLines.cs,CreateGrid,The following statement contains a magic number: double minX = -this.Width / 2;
Magic Number,HippoDemo,GridLines,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HippoDemo\GridLines.cs,CreateGrid,The following statement contains a magic number: double minY = -this.Length / 2;
Magic Number,HippoDemo,GridLines,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HippoDemo\GridLines.cs,CreateGrid,The following statement contains a magic number: double maxX = this.Width / 2;
Magic Number,HippoDemo,GridLines,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HippoDemo\GridLines.cs,CreateGrid,The following statement contains a magic number: double maxY = this.Length / 2;
Magic Number,HippoDemo,GridLines,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HippoDemo\GridLines.cs,CreateGrid,The following statement contains a magic number: double z = this.MajorDistance * 1e-4;
Magic Number,HippoDemo,GridLines,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HippoDemo\GridLines.cs,CreateGrid,The following statement contains a magic number: double eps = this.MinorDistance / 10;
Magic Number,HippoDemo,GridLines,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HippoDemo\GridLines.cs,CreateGrid,The following statement contains a magic number: this.AddLine(ylinePoints' this.GetPoint(x' 0' 2 * z)' this.GetPoint(x' maxY' 2 * z));
Magic Number,HippoDemo,GridLines,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HippoDemo\GridLines.cs,CreateGrid,The following statement contains a magic number: this.AddLine(ylinePoints' this.GetPoint(x' 0' 2 * z)' this.GetPoint(x' maxY' 2 * z));
Magic Number,HippoDemo,GridLines,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HippoDemo\GridLines.cs,CreateGrid,The following statement contains a magic number: this.AddLine(xlinePoints' this.GetPoint(0' y' 2 * z)' this.GetPoint(maxX' y' 2 * z));
Magic Number,HippoDemo,GridLines,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HippoDemo\GridLines.cs,CreateGrid,The following statement contains a magic number: this.AddLine(xlinePoints' this.GetPoint(0' y' 2 * z)' this.GetPoint(maxX' y' 2 * z));
Magic Number,HippoDemo,GridLines,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HippoDemo\GridLines.cs,IsMultipleOf,The following statement contains a magic number: return Math.Abs(value - y2) < 1e-3;
Magic Number,HippoDemo,ImageExtension,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HippoDemo\ImageExtension.cs,ProvideValue,The following statement contains a magic number: return new Image() { Source = source' Height=24 };
Magic Number,MemoryLeakTest,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\MemoryLeakTest\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 6 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Open1Click);                            #line default              #line hidden              return;              case 2:                            #line 7 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Open2Click);                            #line default              #line hidden              return;              case 3:                            #line 8 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Open3Click);                            #line default              #line hidden              return;              case 4:                            #line 9 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CollectClick);                            #line default              #line hidden              return;              }
Magic Number,MemoryLeakTest,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\MemoryLeakTest\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 6 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Open1Click);                            #line default              #line hidden              return;              case 2:                            #line 7 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Open2Click);                            #line default              #line hidden              return;              case 3:                            #line 8 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Open3Click);                            #line default              #line hidden              return;              case 4:                            #line 9 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CollectClick);                            #line default              #line hidden              return;              }
Magic Number,MemoryLeakTest,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\MemoryLeakTest\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 6 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Open1Click);                            #line default              #line hidden              return;              case 2:                            #line 7 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Open2Click);                            #line default              #line hidden              return;              case 3:                            #line 8 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Open3Click);                            #line default              #line hidden              return;              case 4:                            #line 9 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CollectClick);                            #line default              #line hidden              return;              }
Magic Number,ModelViewer,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ModelViewer\MainViewModel.cs,ViewZoomExtents,The following statement contains a magic number: this.viewport.ZoomExtents(500);
Magic Number,MvvmCameraDemo,ShellViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\MvvmCameraDemo\ShellViewModel.cs,ShellViewModel,The following statement contains a magic number: var camera = new PerspectiveCamera()              {                  Position = new Point3D(0' -10' 0)'                  LookDirection = new Vector3D(0' 10' 0)'                  UpDirection = new Vector3D(0' 0' 1)'                  FieldOfView = 60'              };
Magic Number,MvvmCameraDemo,ShellViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\MvvmCameraDemo\ShellViewModel.cs,ShellViewModel,The following statement contains a magic number: var camera = new PerspectiveCamera()              {                  Position = new Point3D(0' -10' 0)'                  LookDirection = new Vector3D(0' 10' 0)'                  UpDirection = new Vector3D(0' 0' 1)'                  FieldOfView = 60'              };
Magic Number,MvvmCameraDemo,ShellViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\MvvmCameraDemo\ShellViewModel.cs,ShellViewModel,The following statement contains a magic number: var camera = new PerspectiveCamera()              {                  Position = new Point3D(0' -10' 0)'                  LookDirection = new Vector3D(0' 10' 0)'                  UpDirection = new Vector3D(0' 0' 1)'                  FieldOfView = 60'              };
Magic Number,MvvmDemo,ShellViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\MvvmDemo\ShellViewModel.cs,CanAdd,The following statement contains a magic number: return this.Objects.Count < 10;
Magic Number,MvvmDemo,ShellViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\MvvmDemo\ShellViewModel.cs,GetRandomPoint,The following statement contains a magic number: int d = 10;
Magic Number,MvvmDemo,ShellViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\MvvmDemo\ShellViewModel.cs,GetRandomPoint,The following statement contains a magic number: return new Point3D(this.r.Next(d) - d / 2' this.r.Next(d) - d / 2' this.r.Next(d) - d / 2);
Magic Number,MvvmDemo,ShellViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\MvvmDemo\ShellViewModel.cs,GetRandomPoint,The following statement contains a magic number: return new Point3D(this.r.Next(d) - d / 2' this.r.Next(d) - d / 2' this.r.Next(d) - d / 2);
Magic Number,MvvmDemo,ShellViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\MvvmDemo\ShellViewModel.cs,GetRandomPoint,The following statement contains a magic number: return new Point3D(this.r.Next(d) - d / 2' this.r.Next(d) - d / 2' this.r.Next(d) - d / 2);
Magic Number,PanoramaDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PanoramaDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: camera.FieldOfView = 120;
Magic Number,ParticleSystemDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ParticleSystemDemo\Window1.xaml.cs,MainViewModel,The following statement contains a magic number: this.lifeTime = 5;
Magic Number,ParticleSystemDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ParticleSystemDemo\Window1.xaml.cs,MainViewModel,The following statement contains a magic number: this.emitRate = 100;
Magic Number,ParticleSystemDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ParticleSystemDemo\Window1.xaml.cs,MainViewModel,The following statement contains a magic number: this.startSpreading = 10;
Magic Number,ParticleSystemDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ParticleSystemDemo\Window1.xaml.cs,MainViewModel,The following statement contains a magic number: this.startVelocity = 4;
Magic Number,ParticleSystemDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ParticleSystemDemo\Window1.xaml.cs,MainViewModel,The following statement contains a magic number: this.startVelocityRandomness = 2;
Magic Number,ParticleSystemDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ParticleSystemDemo\Window1.xaml.cs,MainViewModel,The following statement contains a magic number: this.startSize = 0.5;
Magic Number,ParticleSystemDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ParticleSystemDemo\Window1.xaml.cs,MainViewModel,The following statement contains a magic number: this.velocityDamping = 0.999;
Magic Number,ParticleSystemDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ParticleSystemDemo\Window1.xaml.cs,MainViewModel,The following statement contains a magic number: this.angularVelocity = 10;
Magic Number,ParticleSystemDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ParticleSystemDemo\Window1.xaml.cs,MainViewModel,The following statement contains a magic number: this.accelerationDirection = new Vector3D(3' 0' -1);
Magic Number,ParticleSystemDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ParticleSystemDemo\Window1.xaml.cs,MainViewModel,The following statement contains a magic number: this.acceleration = 4;
Magic Number,ParticleSystemDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ParticleSystemDemo\Window1.xaml.cs,MainViewModel,The following statement contains a magic number: this.accelerationSpreading = 10;
Magic Number,PointsAndLinesBinding,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PointsAndLinesBinding\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.NumberOfPoints = 100;
Magic Number,PointsAndLinesBinding,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PointsAndLinesBinding\MainWindow.xaml.cs,SetPoints,The following statement contains a magic number: var newPoints =                      PointsAndLinesDemo.MainWindow.GeneratePoints(this.NumberOfPoints' this.watch.ElapsedMilliseconds * 0.001)                          .ToArray();
Magic Number,PointsAndLinesBinding,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PointsAndLinesBinding\MainWindow.xaml.cs,UpdatePoints,The following statement contains a magic number: var newPoints =                      PointsAndLinesDemo.MainWindow.GeneratePoints(this.NumberOfPoints' this.watch.ElapsedMilliseconds * 0.001)                          .ToArray();
Magic Number,ScatterPlotDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\MainViewModel.cs,UpdateModel,The following statement contains a magic number: Data = Enumerable.Range(0' 7 * 7 * 7).Select(i => new Point3D(i % 7' (i % 49) / 7' i / 49)).ToArray();
Magic Number,ScatterPlotDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\MainViewModel.cs,UpdateModel,The following statement contains a magic number: Data = Enumerable.Range(0' 7 * 7 * 7).Select(i => new Point3D(i % 7' (i % 49) / 7' i / 49)).ToArray();
Magic Number,ScatterPlotDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\MainViewModel.cs,UpdateModel,The following statement contains a magic number: Data = Enumerable.Range(0' 7 * 7 * 7).Select(i => new Point3D(i % 7' (i % 49) / 7' i / 49)).ToArray();
Magic Number,ScatterPlotDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\MainViewModel.cs,UpdateModel,The following statement contains a magic number: Data = Enumerable.Range(0' 7 * 7 * 7).Select(i => new Point3D(i % 7' (i % 49) / 7' i / 49)).ToArray();
Magic Number,ScatterPlotDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\MainViewModel.cs,UpdateModel,The following statement contains a magic number: Data = Enumerable.Range(0' 7 * 7 * 7).Select(i => new Point3D(i % 7' (i % 49) / 7' i / 49)).ToArray();
Magic Number,ScatterPlotDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\MainViewModel.cs,UpdateModel,The following statement contains a magic number: Data = Enumerable.Range(0' 7 * 7 * 7).Select(i => new Point3D(i % 7' (i % 49) / 7' i / 49)).ToArray();
Magic Number,ScatterPlotDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\MainViewModel.cs,UpdateModel,The following statement contains a magic number: Data = Enumerable.Range(0' 7 * 7 * 7).Select(i => new Point3D(i % 7' (i % 49) / 7' i / 49)).ToArray();
Magic Number,ScatterPlotDemo,ScatterPlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\ScatterPlotVisual3D.cs,ScatterPlotVisual3D,The following statement contains a magic number: FontSize = 0.06;
Magic Number,ScatterPlotDemo,ScatterPlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\ScatterPlotVisual3D.cs,ScatterPlotVisual3D,The following statement contains a magic number: SphereSize = 0.09;
Magic Number,ScatterPlotDemo,ScatterPlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\ScatterPlotVisual3D.cs,ScatterPlotVisual3D,The following statement contains a magic number: LineThickness = 0.01;
Magic Number,ScatterPlotDemo,ScatterPlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\ScatterPlotVisual3D.cs,CreateModel,The following statement contains a magic number: scatterMeshBuilder.AddSphere(Points[i]' SphereSize' 4' 4);
Magic Number,ScatterPlotDemo,ScatterPlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\ScatterPlotVisual3D.cs,CreateModel,The following statement contains a magic number: scatterMeshBuilder.AddSphere(Points[i]' SphereSize' 4' 4);
Magic Number,ScatterPlotDemo,ScatterPlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\ScatterPlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D(x.ToString()' Brushes.Black' true' FontSize'                                                                             new Point3D(x' minY - FontSize*2.5' minZ)'                                                                             new Vector3D(1' 0' 0)' new Vector3D(0' 1' 0));
Magic Number,ScatterPlotDemo,ScatterPlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\ScatterPlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D("X-axis"' Brushes.Black' true' FontSize'                                                                             new Point3D((minX + maxX)*0.5'                                                                                         minY - FontSize*6' minZ)'                                                                             new Vector3D(1' 0' 0)' new Vector3D(0' 1' 0));
Magic Number,ScatterPlotDemo,ScatterPlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\ScatterPlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D("X-axis"' Brushes.Black' true' FontSize'                                                                             new Point3D((minX + maxX)*0.5'                                                                                         minY - FontSize*6' minZ)'                                                                             new Vector3D(1' 0' 0)' new Vector3D(0' 1' 0));
Magic Number,ScatterPlotDemo,ScatterPlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\ScatterPlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D(y.ToString()' Brushes.Black' true' FontSize'                                                                             new Point3D(minX - FontSize*3' y' minZ)'                                                                             new Vector3D(1' 0' 0)' new Vector3D(0' 1' 0));
Magic Number,ScatterPlotDemo,ScatterPlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\ScatterPlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D("Y-axis"' Brushes.Black' true' FontSize'                                                                             new Point3D(minX - FontSize*10'                                                                                         (minY + maxY)*0.5' minZ)'                                                                             new Vector3D(0' 1' 0)' new Vector3D(-1' 0' 0));
Magic Number,ScatterPlotDemo,ScatterPlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\ScatterPlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D("Y-axis"' Brushes.Black' true' FontSize'                                                                             new Point3D(minX - FontSize*10'                                                                                         (minY + maxY)*0.5' minZ)'                                                                             new Vector3D(0' 1' 0)' new Vector3D(-1' 0' 0));
Magic Number,ScatterPlotDemo,ScatterPlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\ScatterPlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D(z.ToString()' Brushes.Black' true' FontSize'                                                                             new Point3D(minX - FontSize*3' maxY' z)'                                                                             new Vector3D(1' 0' 0)' new Vector3D(0' 0' 1));
Magic Number,ScatterPlotDemo,ScatterPlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\ScatterPlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D("Z-axis"' Brushes.Black' true' FontSize'                                                                             new Point3D(minX - FontSize*10' maxY'                                                                                         (minZ + maxZ)*0.5)'                                                                             new Vector3D(0' 0' 1)' new Vector3D(1' 0' 0));
Magic Number,ScatterPlotDemo,ScatterPlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ScatterPlot\ScatterPlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D("Z-axis"' Brushes.Black' true' FontSize'                                                                             new Point3D(minX - FontSize*10' maxY'                                                                                         (minZ + maxZ)*0.5)'                                                                             new Vector3D(0' 0' 1)' new Vector3D(1' 0' 0));
Magic Number,TorusDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Torus\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: viewPort.Camera.Position = new Point3D(0' 0' 10);
Magic Number,SolarsystemDemo,Planet3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Planet3D.cs,Planet3D,The following statement contains a magic number: orbit = new TubeVisual3D() {Diameter=0.8' ThetaDiv = 16 };
Magic Number,SolarsystemDemo,Planet3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Planet3D.cs,Planet3D,The following statement contains a magic number: orbit = new TubeVisual3D() {Diameter=0.8' ThetaDiv = 16 };
Magic Number,SolarsystemDemo,Planet3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Planet3D.cs,Planet3D,The following statement contains a magic number: orbit.Material = MaterialHelper.CreateMaterial(null'Brushes.Blue'Brushes.Gray'0.5' 20);
Magic Number,SolarsystemDemo,Planet3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Planet3D.cs,Planet3D,The following statement contains a magic number: orbit.Material = MaterialHelper.CreateMaterial(null'Brushes.Blue'Brushes.Gray'0.5' 20);
Magic Number,SolarsystemDemo,Planet3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Planet3D.cs,UpdateOrbit,The following statement contains a magic number: int n = 90;
Magic Number,SolarsystemDemo,Planet3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Planet3D.cs,UpdateOrbit,The following statement contains a magic number: path.Add(CalculatePosition((double)i / (n - 1) * Math.PI * 2' SolarSystem.DistanceScale));
Magic Number,SolarsystemDemo,Planet3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Planet3D.cs,UpdatePosition,The following statement contains a magic number: ang = SolarSystem.Days / OrbitalPeriod * Math.PI * 2;
Magic Number,SolarsystemDemo,Planet3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Planet3D.cs,UpdatePosition,The following statement contains a magic number: var rotang = SolarSystem.Days / RotationPeriod * 360;
Magic Number,SolarsystemDemo,Satellite3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Satellite3D.cs,Satellite3D,The following statement contains a magic number: orbit = new TubeVisual3D() { Diameter = 0.3' ThetaDiv = 12 };
Magic Number,SolarsystemDemo,Satellite3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Satellite3D.cs,Satellite3D,The following statement contains a magic number: orbit = new TubeVisual3D() { Diameter = 0.3' ThetaDiv = 12 };
Magic Number,SolarsystemDemo,Satellite3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Satellite3D.cs,Satellite3D,The following statement contains a magic number: orbit.Material = MaterialHelper.CreateMaterial(null' Brushes.Gray' Brushes.White' 0.5' 40);
Magic Number,SolarsystemDemo,Satellite3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Satellite3D.cs,Satellite3D,The following statement contains a magic number: orbit.Material = MaterialHelper.CreateMaterial(null' Brushes.Gray' Brushes.White' 0.5' 40);
Magic Number,SolarsystemDemo,Satellite3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Satellite3D.cs,UpdateOrbit,The following statement contains a magic number: int n = 90;
Magic Number,SolarsystemDemo,Satellite3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Satellite3D.cs,UpdateOrbit,The following statement contains a magic number: path.Add(CalculatePosition((double)i / (n - 1) * Math.PI * 2' Planet.DistanceScale));
Magic Number,SolarsystemDemo,Satellite3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Satellite3D.cs,UpdatePosition,The following statement contains a magic number: ang = SolarSystem.Days / OrbitalPeriod * Math.PI * 2;
Magic Number,SolarsystemDemo,Satellite3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Satellite3D.cs,UpdatePosition,The following statement contains a magic number: rotang = SolarSystem.Days / RotationPeriod * 360;
Magic Number,SolarsystemDemo,TexturedObject3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\TexturedObject3D.cs,TexturedObject3D,The following statement contains a magic number: Sphere = new SphereVisual3D() { ThetaDiv = 60' PhiDiv = 30 };
Magic Number,SolarsystemDemo,TexturedObject3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\TexturedObject3D.cs,TexturedObject3D,The following statement contains a magic number: Sphere = new SphereVisual3D() { ThetaDiv = 60' PhiDiv = 30 };
Magic Number,SolarsystemDemo,TexturedObject3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\TexturedObject3D.cs,UpdateTexture,The following statement contains a magic number: Sphere.Material = MaterialHelper.CreateMaterial(Brushes.Black' Texture' Brushes.Gray' 1.0' 20);
Magic Number,SolarsystemDemo,Window1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Window1.xaml.cs,Window1,The following statement contains a magic number: view1.Camera.Position = new Point3D(0' 400' 500);
Magic Number,SolarsystemDemo,Window1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Window1.xaml.cs,Window1,The following statement contains a magic number: view1.Camera.Position = new Point3D(0' 400' 500);
Magic Number,SolarsystemDemo,Window1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Window1.xaml.cs,Window1,The following statement contains a magic number: view1.Camera.LookDirection = new Vector3D(0' -400' -500);
Magic Number,SolarsystemDemo,Window1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Window1.xaml.cs,Window1,The following statement contains a magic number: view1.Camera.LookDirection = new Vector3D(0' -400' -500);
Magic Number,SolarsystemDemo,Window1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SolarSystemDemo\Window1.xaml.cs,Window1,The following statement contains a magic number: SolarSystem = view1.Children[2] as SolarSystem3D;
Magic Number,ExampleBrowser.Examples.TriangularizationDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\TriangularizationDemo\MainViewModel.cs,CreateSimpleTriangulatedMesh,The following statement contains a magic number: meshBuilder.TriangleIndices.Add(index + 3);
Magic Number,Workitem10046,FaceTheCameraBillboard,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Workitems\Workitem10046\FaceTheCameraBillboard.cs,Tessellate,The following statement contains a magic number: Vector3D halfWidthVector = widthVector * Width * 0.5;
Magic Number,Workitem10046,FaceTheCameraBillboard,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Workitems\Workitem10046\FaceTheCameraBillboard.cs,Tessellate,The following statement contains a magic number: Vector3D halfHeightVector = heightVector * Height * 0.5;
Magic Number,AnaglyphDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Anaglyph\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: AddCubes(cubes.Children' Brushes.Green' -4);
Magic Number,AnaglyphDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Anaglyph\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: AddCubes(cubes.Children' Brushes.Green' 4);
Magic Number,AnaglyphDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Anaglyph\MainWindow.xaml.cs,AddCubes,The following statement contains a magic number: y <= 5
Magic Number,AudioDemo,SpectrumAnalyser,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\SpectrumAnalyser.cs,Update,The following statement contains a magic number: int resultLength = fftResults.Length / 8;
Magic Number,AudioDemo,SpectrumAnalyser,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\SpectrumAnalyser.cs,Update,The following statement contains a magic number: yScale *= ShowIntensity ? 100 : 0.05;
Magic Number,AudioDemo,SpectrumAnalyser,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\SpectrumAnalyser.cs,Update,The following statement contains a magic number: yScale *= ShowIntensity ? 100 : 0.05;
Magic Number,AudioDemo,SpectrumAnalyser,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\SpectrumAnalyser.cs,Update,The following statement contains a magic number: double decibels = 10 * Math.Log10(fftResults[i].X * fftResults[i].X + fftResults[i].Y * fftResults[i].Y);
Magic Number,AudioDemo,SpectrumAnalyser,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\SpectrumAnalyser.cs,Update,The following statement contains a magic number: y[j] += ShowIntensity ? intensity : 100 + decibels;
Magic Number,AudioDemo,SpectrumAnalyser,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\SpectrumAnalyser.cs,Update,The following statement contains a magic number: updateCount % 20 == 0
Magic Number,AudioDemo,SpectrumAnalyser,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\SpectrumAnalyser.cs,GetDefaultGeometry,The following statement contains a magic number: mb.AddBox(new Point3D(0' 0' 0.5)' 0.8' 0.8' 1);
Magic Number,AudioDemo,SpectrumAnalyser,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\SpectrumAnalyser.cs,GetDefaultGeometry,The following statement contains a magic number: mb.AddBox(new Point3D(0' 0' 0.5)' 0.8' 0.8' 1);
Magic Number,AudioDemo,SpectrumAnalyser,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\SpectrumAnalyser.cs,GetDefaultGeometry,The following statement contains a magic number: mb.AddBox(new Point3D(0' 0' 0.5)' 0.8' 0.8' 1);
Magic Number,AudioDemo,SpectrumAnalyser,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\SpectrumAnalyser.cs,LoadModel,The following statement contains a magic number: transform.Children.Add(new RotateTransform3D(new AxisAngleRotation3D(new Vector3D(1' 0' 0)' 90)));
Magic Number,AudioDemo,SpectrumAnalyser,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\SpectrumAnalyser.cs,UpdateModels,The following statement contains a magic number: Material material = MaterialHelper.CreateMaterial(ColorHelper.HsvToColor(0.6 * i / (FrequencyColumns - 1)' 1' 1));
Magic Number,AudioDemo,SpectrumAnalyser,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\SpectrumAnalyser.cs,UpdateModels,The following statement contains a magic number: var translation = new TranslateTransform3D((i - (FrequencyColumns - 1) * 0.5) * Distance' -j * Distance' 0);
Magic Number,NAudioWpfDemo,AudioCapture,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\AudioCapture.cs,AudioCapture,The following statement contains a magic number: CaptureSeconds = 30;
Magic Number,NAudioWpfDemo,AudioCapture,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\AudioCapture.cs,CreateCaptureStream,The following statement contains a magic number: int maxSeconds = CaptureSeconds == 0 ? 30 : CaptureSeconds;
Magic Number,NAudioWpfDemo,AudioCapture,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\AudioCapture.cs,CreateCaptureStream,The following statement contains a magic number: recordedStream = new MemoryStream(captureBytes + 50);
Magic Number,NAudioWpfDemo,AudioCapture,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\AudioCapture.cs,OnDataAvailable,The following statement contains a magic number: short sample = (short)((buffer[index + 1] << 8) | buffer[index + 0]);
Magic Number,NAudioWpfDemo,AudioCapture,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\AudioCapture.cs,OnDataAvailable,The following statement contains a magic number: float sample32 = sample / 32768f;
Magic Number,NAudioWpfDemo,AudioGraph,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\AudioGraph.cs,AudioGraph,The following statement contains a magic number: aggregator = new SampleAggregator(8);
Magic Number,NAudioWpfDemo,AudioGraph,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\AudioGraph.cs,AudioGraph,The following statement contains a magic number: aggregator.NotificationCount = 100;
Magic Number,NAudioWpfDemo,AudioGraph,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\AudioGraph.cs,PlayFile,The following statement contains a magic number: aggregator.NotificationCount = 882;
Magic Number,NAudioWpfDemo,AudioGraph,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\AudioGraph.cs,StartCapture,The following statement contains a magic number: aggregator.NotificationCount = 200;
Magic Number,NAudioWpfDemo,AudioGraph,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\AudioGraph.cs,StartCapture,The following statement contains a magic number: capture.Capture(new WaveFormat(8000' 1));
Magic Number,NAudioWpfDemo,AudioPlayback,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\AudioPlayback.cs,OpenWavStream,The following statement contains a magic number: var format = new WaveFormat(readerStream.WaveFormat.SampleRate'                      16' readerStream.WaveFormat.Channels);
Magic Number,NAudioWpfDemo,AudioPlayback,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\AudioPlayback.cs,OpenWavStream,The following statement contains a magic number: readerStream.WaveFormat.BitsPerSample != 16
Magic Number,NAudioWpfDemo,ControlPanelViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\ControlPanelViewModel.cs,ControlPanelViewModel,The following statement contains a magic number: captureSeconds = 10;
Magic Number,NAudioWpfDemo,ControlPanelViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\ControlPanelViewModel.cs,ControlPanelViewModel,The following statement contains a magic number: NotificationsPerSecond = 100;
Magic Number,NAudioWpfDemo,SampleAggregator,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Audio\NAudioWpfDemo\SampleAggregator.cs,SampleAggregator,The following statement contains a magic number: int n = (int) Math.Pow(2' m);
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Worker1,The following statement contains a magic number: !this.AddPoints || this.runningWorkers < 4
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Worker2,The following statement contains a magic number: !this.AddFrozenGeometry || this.runningWorkers < 4
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Worker2,The following statement contains a magic number: b.AddBox(new Point3D(i' j' k)' 0.8' 0.8' 0.8);
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Worker2,The following statement contains a magic number: b.AddBox(new Point3D(i' j' k)' 0.8' 0.8' 0.8);
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Worker2,The following statement contains a magic number: b.AddBox(new Point3D(i' j' k)' 0.8' 0.8' 0.8);
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Worker3,The following statement contains a magic number: !this.AddFrozenModel || this.runningWorkers < 4
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Worker3,The following statement contains a magic number: b.AddBox(new Point3D(i' j' -k)' 0.8' 0.8' 0.8);
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Worker3,The following statement contains a magic number: b.AddBox(new Point3D(i' j' -k)' 0.8' 0.8' 0.8);
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Worker3,The following statement contains a magic number: b.AddBox(new Point3D(i' j' -k)' 0.8' 0.8' 0.8);
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Worker4,The following statement contains a magic number: !this.AddToModelGroup || this.runningWorkers < 4
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Worker4,The following statement contains a magic number: b.AddBox(new Point3D(-i' j' -k)' 0.8' 0.8' 0.8);
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Worker4,The following statement contains a magic number: b.AddBox(new Point3D(-i' j' -k)' 0.8' 0.8' 0.8);
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Worker4,The following statement contains a magic number: b.AddBox(new Point3D(-i' j' -k)' 0.8' 0.8' 0.8);
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Add,The following statement contains a magic number: var box = new BoxVisual3D { Center = p' Width = 0.8' Height = 0.8' Length = 0.8 };
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Add,The following statement contains a magic number: var box = new BoxVisual3D { Center = p' Width = 0.8' Height = 0.8' Length = 0.8 };
Magic Number,BackgroundUpdateDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\BackgroundUpdate\MainWindow.xaml.cs,Add,The following statement contains a magic number: var box = new BoxVisual3D { Center = p' Width = 0.8' Height = 0.8' Length = 0.8 };
Magic Number,ChamferDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Chamfer\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: dt.Interval = TimeSpan.FromSeconds(0.3);
Magic Number,ChamferDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Chamfer\MainWindow.xaml.cs,CreateDice,The following statement contains a magic number: diceMesh.ChamferCorner(new Point3D(i - 0.5' j - 0.5' k - 0.5)' 0.1' 1e-6' points);
Magic Number,ChamferDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Chamfer\MainWindow.xaml.cs,CreateDice,The following statement contains a magic number: diceMesh.ChamferCorner(new Point3D(i - 0.5' j - 0.5' k - 0.5)' 0.1' 1e-6' points);
Magic Number,ChamferDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Chamfer\MainWindow.xaml.cs,CreateDice,The following statement contains a magic number: diceMesh.ChamferCorner(new Point3D(i - 0.5' j - 0.5' k - 0.5)' 0.1' 1e-6' points);
Magic Number,ChamferDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Chamfer\MainWindow.xaml.cs,CreateDice,The following statement contains a magic number: diceMesh.ChamferCorner(new Point3D(i - 0.5' j - 0.5' k - 0.5)' 0.1' 1e-6' points);
Magic Number,ChamferDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Chamfer\MainWindow.xaml.cs,CreateDice,The following statement contains a magic number: diceMesh.ChamferCorner(new Point3D(i - 0.5' j - 0.5' k - 0.5)' 0.1' 1e-6' points);
Magic Number,ChamferDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Chamfer\MainWindow.xaml.cs,CreateDice,The following statement contains a magic number: k < 2
Magic Number,ChamferDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Chamfer\MainWindow.xaml.cs,CreateDice,The following statement contains a magic number: i < 2
Magic Number,ClothDemo,Flag,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Cloth\Flag.cs,Flag,The following statement contains a magic number: Damping = 0.98;
Magic Number,ClothDemo,Flag,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Cloth\Flag.cs,Flag,The following statement contains a magic number: integrator = new VerletIntegrator() { Iterations = 4' Damping = this.Damping };
Magic Number,ClothDemo,Flag,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Cloth\Flag.cs,Flag,The following statement contains a magic number: WindSpeed = 6;
Magic Number,ClothDemo,Flag,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Cloth\Flag.cs,Flag,The following statement contains a magic number: WindDirection = 180;
Magic Number,ClothDemo,Flag,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Cloth\Flag.cs,Flag,The following statement contains a magic number: PoleHeight = 12;
Magic Number,ClothDemo,Flag,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Cloth\Flag.cs,Flag,The following statement contains a magic number: Height = 3;
Magic Number,ClothDemo,Flag,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Cloth\Flag.cs,Flag,The following statement contains a magic number: Length = 4;
Magic Number,ClothDemo,Flag,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Cloth\Flag.cs,Flag,The following statement contains a magic number: Mass = 0.8;
Magic Number,ContourDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Contour\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: AddContours(model1' 8' 8' 8);
Magic Number,ContourDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Contour\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: AddContours(model1' 8' 8' 8);
Magic Number,ContourDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Contour\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: AddContours(model1' 8' 8' 8);
Magic Number,ContourDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Contour\MainWindow.xaml.cs,AddContours,The following statement contains a magic number: view2.Children.Add(new TubeVisual3D { Diameter = 0.03' Path = new Point3DCollection(contour)' Fill = Brushes.Green });
Magic Number,ContourDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Contour\MainWindow.xaml.cs,AddContours,The following statement contains a magic number: MeshGeometryHelper.CombineSegments(segments' 1e-6).ToList()
Magic Number,EarthCuttingPlanesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\EarthCuttingPlanes\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Clouds = MaterialHelper.CreateImageMaterial("pack://application:'''/Examples/Earth/clouds.jpg"' 0.5);
Magic Number,ViewMatrixDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ViewMatrix\MainViewModel.cs,MainViewModel,The following statement contains a magic number: gm.AddBox(new Point3D(0' 0' 0.5)' 1' 1' 1);
Magic Number,ViewMatrixDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ViewMatrix\MainViewModel.cs,MainViewModel,The following statement contains a magic number: gm.AddCylinder(new Point3D(5' 0' 0)' new Point3D(5' 0' 5)' 1' 36);
Magic Number,ViewMatrixDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ViewMatrix\MainViewModel.cs,MainViewModel,The following statement contains a magic number: gm.AddCylinder(new Point3D(5' 0' 0)' new Point3D(5' 0' 5)' 1' 36);
Magic Number,ViewMatrixDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ViewMatrix\MainViewModel.cs,MainViewModel,The following statement contains a magic number: gm.AddCylinder(new Point3D(5' 0' 0)' new Point3D(5' 0' 5)' 1' 36);
Magic Number,ViewMatrixDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ViewMatrix\MainViewModel.cs,MainViewModel,The following statement contains a magic number: gm.AddCylinder(new Point3D(5' 0' 0)' new Point3D(5' 0' 5)' 1' 36);
Magic Number,DnaDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Dna\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddBases(this.model' 24' 3' 30);
Magic Number,DnaDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Dna\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddBases(this.model' 24' 3' 30);
Magic Number,DnaDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Dna\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.AddBases(this.model' 24' 3' 30);
Magic Number,DnaDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Dna\MainWindow.xaml.cs,AddBases,The following statement contains a magic number: var b = turns * 2 * Math.PI;
Magic Number,DnaDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Dna\MainWindow.xaml.cs,AddBases,The following statement contains a magic number: var p2 = 3.14;
Magic Number,DnaDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Dna\MainWindow.xaml.cs,AddBases,The following statement contains a magic number: var j = r.Next(4);
Magic Number,DnaDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Dna\MainWindow.xaml.cs,AddBases,The following statement contains a magic number: var ts = new PipeVisual3D                               {                                   Point1 = pt1'                                   Point2 = pt3'                                   Diameter = 0.4'                                   Material = MaterialHelper.CreateMaterial(brush1)                               };
Magic Number,DnaDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Dna\MainWindow.xaml.cs,AddBases,The following statement contains a magic number: var ts2 = new PipeVisual3D                                {                                    Point1 = pt3'                                    Point2 = pt2'                                    Diameter = 0.4'                                    Material = MaterialHelper.CreateMaterial(brush2)                                };
Magic Number,EarthDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Earth\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Clouds = MaterialHelper.CreateImageMaterial("pack://application:'''/Examples/Earth/clouds.jpg"' 0.5);
Magic Number,EarthDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Earth\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var juneSolstice = new DateTime(now.Year' 6' 22);
Magic Number,EarthDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Earth\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var juneSolstice = new DateTime(now.Year' 6' 22);
Magic Number,EarthDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Earth\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var declination = 23.45 * Math.Cos((now.DayOfYear - juneSolstice.DayOfYear) / 365.25 * 2 * Math.PI);
Magic Number,EarthDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Earth\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var declination = 23.45 * Math.Cos((now.DayOfYear - juneSolstice.DayOfYear) / 365.25 * 2 * Math.PI);
Magic Number,EarthDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Earth\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var declination = 23.45 * Math.Cos((now.DayOfYear - juneSolstice.DayOfYear) / 365.25 * 2 * Math.PI);
Magic Number,EarthDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Earth\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var phi = -now.Hour / 24.0 * Math.PI * 2;
Magic Number,EarthDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Earth\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var phi = -now.Hour / 24.0 * Math.PI * 2;
Magic Number,EarthDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Earth\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var theta = declination / 180 * Math.PI;
Magic Number,EarthDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Earth\MainWindow.xaml.cs,LoadImage,The following statement contains a magic number: client.DownloadDataCompleted += (sender' e) =>                  {                      if (e.Error != null)                      {                          return;                      }                        var image = new BitmapImage();                      image.BeginInit();                      image.StreamSource = new MemoryStream(e.Result);                      image.EndInit();                        setter(MaterialHelper.CreateImageMaterial(image' 0.5));                  };
Magic Number,ExportDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\MainWindow.xaml.cs,ZoomExtents_Click,The following statement contains a magic number: view1.ZoomExtents(500);
Magic Number,ExportDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\MainWindow.xaml.cs,view1_MouseDown,The following statement contains a magic number: view1.Children.Add(new SphereVisual3D() { Center = pt.Value' Radius = 0.03 });
Magic Number,ExportDemo,OctaneLauncher,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\OctaneLauncher.cs,OctaneLauncher,The following statement contains a magic number: this.MaxSamples = 16000;
Magic Number,ExportDemo,OctaneLauncher,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\OctaneLauncher.cs,OctaneLauncher,The following statement contains a magic number: this.FilmWidth = 1000;
Magic Number,ExportDemo,OctaneLauncher,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\OctaneLauncher.cs,OctaneLauncher,The following statement contains a magic number: this.FilmHeight = 600;
Magic Number,ExportDemo,OctaneLauncher,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\OctaneLauncher.cs,OctaneLauncher,The following statement contains a magic number: this.FieldOfView = 45;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double h = 1.85;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double ShoulderWidth = 0.5;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double PelvisWidth = 0.4;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double BodyAngle = 15;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double NeckAngle = -40;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double NeckSideAngle = 9;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double LeftArmOutAngle = -45;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double LeftForeArmAngle = 20;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double LeftHandAngle = -50;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double RightArmOutAngle = -45;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double RightForeArmAngle = 20;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double RightHandAngle = -50;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double LeftThighAngle = 45;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double LeftThighOutAngle = 5;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double LeftLegAngle = 45;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double LeftFootAngle = -10;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double RightThighAngle = -45;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double RightThighOutAngle = 5;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double RightLegAngle = 45;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: double RightFootAngle = 20;
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: body.Children.Add(Box(PelvisWidth' 0.2' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: body.Children.Add(Box(PelvisWidth' 0.2' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup upperBody = Group("upperBody"' new Vector3D(0' 0' h*0.25)' 0' 0' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: upperBody.Children.Add(Box(ShoulderWidth' 0.2' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: upperBody.Children.Add(Box(ShoulderWidth' 0.2' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup neck = Group("neck"' new Vector3D(0' 0' h*0.5)' NeckAngle' NeckSideAngle' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: neck.Children.Add(Box(0.1' 0.1' h*0.05));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: neck.Children.Add(Box(0.1' 0.1' h*0.05));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: neck.Children.Add(Box(0.1' 0.1' h*0.05));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup head = Group("head"' new Vector3D(0' 0' h*0.05)' 0' 0' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: head.Children.Add(Box(0.2' 0.25' 0.35));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: head.Children.Add(Box(0.2' 0.25' 0.35));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: head.Children.Add(Box(0.2' 0.25' 0.35));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup nose = Group("nose"' new Vector3D(0' 0.1' 0.175)' 0' 0' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup nose = Group("nose"' new Vector3D(0' 0.1' 0.175)' 0' 0' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: nose.Children.Add(Box(0.05' 0.05' 0.05));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: nose.Children.Add(Box(0.05' 0.05' 0.05));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: nose.Children.Add(Box(0.05' 0.05' 0.05));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup leftArm = Group("leftArm"' new Vector3D(-ShoulderWidth/2' 0' h*0.5)' LeftArmAngle'                                           LeftArmOutAngle' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup leftArm = Group("leftArm"' new Vector3D(-ShoulderWidth/2' 0' h*0.5)' LeftArmAngle'                                           LeftArmOutAngle' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftArm.Children.Add(Box(0.1' 0.1' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftArm.Children.Add(Box(0.1' 0.1' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftArm.Children.Add(Box(0.1' 0.1' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup leftForeArm = Group("leftForeArm"' new Vector3D(0' 0' h*0.25)' 0' LeftForeArmAngle' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftForeArm.Children.Add(Box(0.08' 0.08' h*0.2));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftForeArm.Children.Add(Box(0.08' 0.08' h*0.2));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftForeArm.Children.Add(Box(0.08' 0.08' h*0.2));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup leftHand = Group("leftHand"' new Vector3D(0' 0' h*0.2)' LeftHandAngle' 0' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftHand.Children.Add(Box(0.03' 0.08' h*0.05));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftHand.Children.Add(Box(0.03' 0.08' h*0.05));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftHand.Children.Add(Box(0.03' 0.08' h*0.05));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup rightArm = Group("rightArm"' new Vector3D(ShoulderWidth/2' 0' h*0.5)' RightArmAngle'                                            -RightArmOutAngle' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup rightArm = Group("rightArm"' new Vector3D(ShoulderWidth/2' 0' h*0.5)' RightArmAngle'                                            -RightArmOutAngle' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightArm.Children.Add(Box(0.1' 0.1' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightArm.Children.Add(Box(0.1' 0.1' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightArm.Children.Add(Box(0.1' 0.1' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup rightForeArm = Group("rightForeArm"' new Vector3D(0' 0' h*0.25)' 0' -RightForeArmAngle' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightForeArm.Children.Add(Box(0.08' 0.08' h*0.2));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightForeArm.Children.Add(Box(0.08' 0.08' h*0.2));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightForeArm.Children.Add(Box(0.08' 0.08' h*0.2));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup rightHand = Group("rightHand"' new Vector3D(0' 0' h*0.2)' RightHandAngle' 0' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightHand.Children.Add(Box(0.03' 0.08' h*0.05));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightHand.Children.Add(Box(0.03' 0.08' h*0.05));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightHand.Children.Add(Box(0.03' 0.08' h*0.05));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup leftThigh = Group("leftThigh"' new Vector3D(-PelvisWidth/2' 0' 0)' 180 - LeftThighAngle'                                             -LeftThighOutAngle' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup leftThigh = Group("leftThigh"' new Vector3D(-PelvisWidth/2' 0' 0)' 180 - LeftThighAngle'                                             -LeftThighOutAngle' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftThigh.Children.Add(Box(0.18' 0.18' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftThigh.Children.Add(Box(0.18' 0.18' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftThigh.Children.Add(Box(0.18' 0.18' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup leftLeg = Group("leftLeg"' new Vector3D(0' 0' h*0.25)' LeftLegAngle' 0' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftLeg.Children.Add(Box(0.12' 0.12' h*0.2));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftLeg.Children.Add(Box(0.12' 0.12' h*0.2));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftLeg.Children.Add(Box(0.12' 0.12' h*0.2));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup leftFoot = Group("leftFoot"' new Vector3D(0' 0' h*0.2)' -90 + LeftFootAngle' 0' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup leftFoot = Group("leftFoot"' new Vector3D(0' 0' h*0.2)' -90 + LeftFootAngle' 0' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftFoot.Children.Add(Box(0.1' 0.1' 0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftFoot.Children.Add(Box(0.1' 0.1' 0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: leftFoot.Children.Add(Box(0.1' 0.1' 0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup rightThigh = Group("rightThigh"' new Vector3D(PelvisWidth/2' 0' 0)' 180 - RightThighAngle'                                              RightThighOutAngle' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup rightThigh = Group("rightThigh"' new Vector3D(PelvisWidth/2' 0' 0)' 180 - RightThighAngle'                                              RightThighOutAngle' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightThigh.Children.Add(Box(0.18' 0.18' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightThigh.Children.Add(Box(0.18' 0.18' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightThigh.Children.Add(Box(0.18' 0.18' h*0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup rightLeg = Group("rightLeg"' new Vector3D(0' 0' h*0.25)' RightLegAngle' 0' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightLeg.Children.Add(Box(0.12' 0.12' h*0.2));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightLeg.Children.Add(Box(0.12' 0.12' h*0.2));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightLeg.Children.Add(Box(0.12' 0.12' h*0.2));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup rightFoot = Group("rightFoot"' new Vector3D(0' 0' h*0.2)' -90 + RightFootAngle' 0' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: Model3DGroup rightFoot = Group("rightFoot"' new Vector3D(0' 0' h*0.2)' -90 + RightFootAngle' 0' 0);
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightFoot.Children.Add(Box(0.1' 0.1' 0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightFoot.Children.Add(Box(0.1' 0.1' 0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,StickFigure,The following statement contains a magic number: rightFoot.Children.Add(Box(0.1' 0.1' 0.25));
Magic Number,ExportDemo,StickFigure,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Export\StickFigure.cs,Box,The following statement contains a magic number: mb.AddBox(new Point3D(0' 0' height*0.5)' width' length' height);
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,FlightVisual3D,The following statement contains a magic number: tube.Fill = new SolidColorBrush(Color.FromArgb(80' 255' 255' 255));
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,FlightVisual3D,The following statement contains a magic number: tube.Fill = new SolidColorBrush(Color.FromArgb(80' 255' 255' 255));
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,FlightVisual3D,The following statement contains a magic number: tube.Fill = new SolidColorBrush(Color.FromArgb(80' 255' 255' 255));
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,FlightVisual3D,The following statement contains a magic number: tube.Fill = new SolidColorBrush(Color.FromArgb(80' 255' 255' 255));
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,FlightVisual3D,The following statement contains a magic number: Children.Add(new SphereVisual3D() { Center = p1' Radius = 100' Material = Materials.Green });
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,FlightVisual3D,The following statement contains a magic number: Children.Add(new SphereVisual3D() { Center = p2' Radius = 100' Material = Materials.Red });
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,FlightVisual3D,The following statement contains a magic number: const double tubeDiameter = 60;
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,FlightVisual3D,The following statement contains a magic number: const int n = 100;
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,FlightVisual3D,The following statement contains a magic number: tube.ThetaDiv = 16;
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,PointToLatLon,The following statement contains a magic number: lon = Math.Atan2(pt.Y' pt.X) * 180 / Math.PI;
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,PointToLatLon,The following statement contains a magic number: lon += 180;
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,PointToLatLon,The following statement contains a magic number: lon -= 360;
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,PointToLatLon,The following statement contains a magic number: lon > 180
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,PointToLatLon,The following statement contains a magic number: lon += 360;
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,PointToLatLon,The following statement contains a magic number: lon < -180
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,PointToLatLon,The following statement contains a magic number: lat = Math.Atan2(pt.Z' a) * 180 / Math.PI;
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,LatLonToPoint,The following statement contains a magic number: longitude -= 180;
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,LatLonToPoint,The following statement contains a magic number: latitude = latitude / 180 * Math.PI;
Magic Number,FlightsDemo,FlightVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\FlightVisual3D.cs,LatLonToPoint,The following statement contains a magic number: longitude = longitude / 180 * Math.PI;
Magic Number,FlightsDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Flights\MainWindow.xaml.cs,FromToChanged,The following statement contains a magic number: box.ItemsSource = result.Length < 1000 ? result : null;
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromRgb(0' 7' 100)' 0));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromRgb(0' 7' 100)' 0));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromRgb(32' 107' 203)' 0.15));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromRgb(32' 107' 203)' 0.15));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromRgb(32' 107' 203)' 0.15));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromRgb(32' 107' 203)' 0.15));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromRgb(237' 255' 255)' 0.42));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromRgb(237' 255' 255)' 0.42));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromRgb(237' 255' 255)' 0.42));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromRgb(237' 255' 255)' 0.42));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromRgb(255' 170' 0)' 0.64));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromRgb(255' 170' 0)' 0.64));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromRgb(255' 170' 0)' 0.64));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: brush.GradientStops.Add(new GradientStop(Color.FromRgb(0' 0' 0)' 0.854));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: gradientMaterial = MaterialHelper.CreateMaterial(brush'null'Brushes.Gray'1.0'200);
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: MaxIterations = 32;
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,MandelbrotMountain,The following statement contains a magic number: HeightFactor = 0.3;
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,Generate,The following statement contains a magic number: solver.Width = 75 * Level;
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,Generate,The following statement contains a magic number: solver.Height = 70 * Level;
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,CreateMesh,The following statement contains a magic number: double u = z * 0.854;
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,CreateModel,The following statement contains a magic number: TriangleCount = geometry.TriangleIndices.Count / 3;
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,SubDivide,The following statement contains a magic number: newCenters.Add(new Point3D(center.X + (i - 0.5) * L' center.Y + (j - 0.5) * L' center.Z));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,SubDivide,The following statement contains a magic number: newCenters.Add(new Point3D(center.X + (i - 0.5) * L' center.Y + (j - 0.5) * L' center.Z));
Magic Number,FractalDemo,MandelbrotMountain,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotMountain.cs,SubDivide,The following statement contains a magic number: i < 2
Magic Number,FractalDemo,MandelbrotSolver,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotSolver.cs,MandelbrotSolver,The following statement contains a magic number: X0 = -2;
Magic Number,FractalDemo,MandelbrotSolver,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotSolver.cs,MandelbrotSolver,The following statement contains a magic number: Y0 = -1.5;
Magic Number,FractalDemo,MandelbrotSolver,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotSolver.cs,MandelbrotSolver,The following statement contains a magic number: Y1 = 1.5;
Magic Number,FractalDemo,MandelbrotSolver,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotSolver.cs,MandelbrotSolver,The following statement contains a magic number: MaxIterations = 40;
Magic Number,FractalDemo,MandelbrotSolver,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotSolver.cs,Solve,The following statement contains a magic number: y = 2 * x * y + y0;
Magic Number,FractalDemo,MandelbrotSolver,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotSolver.cs,Solve,The following statement contains a magic number: x * x + y * y <= 4 && iteration < maxIterations
Magic Number,FractalDemo,MandelbrotSolver,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MandelbrotSolver.cs,Update,The following statement contains a magic number: return w.ElapsedMilliseconds*0.001;
Magic Number,FractalDemo,MengerSponge,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MengerSponge.cs,Generate,The following statement contains a magic number: L /= 3;
Magic Number,FractalDemo,MengerSponge,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MengerSponge.cs,AddGeometry,The following statement contains a magic number: TriangleCount = geometry.TriangleIndices.Count / 3;
Magic Number,FractalDemo,MengerSponge,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MengerSponge.cs,SubDivide,The following statement contains a magic number: c < 2
Magic Number,FractalDemo,MengerSponge,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MengerSponge.cs,SubDivide,The following statement contains a magic number: k < 2
Magic Number,FractalDemo,MengerSponge,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\MengerSponge.cs,SubDivide,The following statement contains a magic number: i < 2
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Generate,The following statement contains a magic number: TriangleCount = mesh.TriangleIndices.Count / 3;
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Plant,The following statement contains a magic number: var r1 = new RotateTransform3D(new AxisAngleRotation3D(x' 80));
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Plant,The following statement contains a magic number: var r2 = new RotateTransform3D(new AxisAngleRotation3D(x' -70));
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Plant,The following statement contains a magic number: var r3 = new RotateTransform3D(new AxisAngleRotation3D(x' -10));
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Plant,The following statement contains a magic number: var t1 = new TranslateTransform3D(0' 0' 0.5);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Plant,The following statement contains a magic number: var t2 = new TranslateTransform3D(0' 0' 0.7);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Plant,The following statement contains a magic number: var s1 = new ScaleTransform3D(0.5' 0.5' 0.5);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Plant,The following statement contains a magic number: var s1 = new ScaleTransform3D(0.5' 0.5' 0.5);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Plant,The following statement contains a magic number: var s1 = new ScaleTransform3D(0.5' 0.5' 0.5);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Plant,The following statement contains a magic number: var s2 = new ScaleTransform3D(0.3' 0.3' 0.3);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Plant,The following statement contains a magic number: var s2 = new ScaleTransform3D(0.3' 0.3' 0.3);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Plant,The following statement contains a magic number: var s2 = new ScaleTransform3D(0.3' 0.3' 0.3);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Plant,The following statement contains a magic number: var s3 = new ScaleTransform3D(0.8' 0.8' 0.8);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Plant,The following statement contains a magic number: var s3 = new ScaleTransform3D(0.8' 0.8' 0.8);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,Plant,The following statement contains a magic number: var s3 = new ScaleTransform3D(0.8' 0.8' 0.8);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,AddBranch,The following statement contains a magic number: bool isStem = angle < 10;
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,AddBranch,The following statement contains a magic number: double h = isStem ? 2.5 : 2;
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,AddBranch,The following statement contains a magic number: double h = isStem ? 2.5 : 2;
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,AddBranch,The following statement contains a magic number: double r = (Level+1-p)*0.1;
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,AddBranch,The following statement contains a magic number: mesh.AddCone(p0' direction' r' r * 0.8' h' false' false' 12);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,AddBranch,The following statement contains a magic number: mesh.AddCone(p0' direction' r' r * 0.8' h' false' false' 12);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,AddBranch,The following statement contains a magic number: var t0 = new RotateTransform3D(new AxisAngleRotation3D(rightVector' GetRandom(3)));
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,AddBranch,The following statement contains a magic number: var t1 = new RotateTransform3D(new AxisAngleRotation3D(rightVector' 95 + GetRandom(5)));
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,AddBranch,The following statement contains a magic number: var t1 = new RotateTransform3D(new AxisAngleRotation3D(rightVector' 95 + GetRandom(5)));
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,AddBranch,The following statement contains a magic number: int nBranches = 5+GetRandom(2);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,AddBranch,The following statement contains a magic number: int nBranches = 5+GetRandom(2);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,AddBranch,The following statement contains a magic number: double a = 360.0 * i / nBranches + GetRandom(25);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,AddBranch,The following statement contains a magic number: double a = 360.0 * i / nBranches + GetRandom(25);
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,GetRandom,The following statement contains a magic number: return (r.NextDouble()*2 - 1)*plusMinus;
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,GetRandom,The following statement contains a magic number: return r.Next(plusMinus*2+1) - plusMinus;
Magic Number,FractalDemo,Plant,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\Plant.cs,GetAngleBetween,The following statement contains a magic number: return Math.Acos(dp)*180/Math.PI;
Magic Number,FractalDemo,SierpinskiPyramid,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\SierpinskiPyramid.cs,Generate,The following statement contains a magic number: centers.Add(new Point3D(0' 0' -0.5));
Magic Number,FractalDemo,SierpinskiPyramid,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\SierpinskiPyramid.cs,Generate,The following statement contains a magic number: l /= 2;
Magic Number,FractalDemo,SierpinskiPyramid,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\SierpinskiPyramid.cs,AddGeometry,The following statement contains a magic number: TriangleCount = builder.TriangleIndices.Count / 3;
Magic Number,FractalDemo,SierpinskiPyramid,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\SierpinskiPyramid.cs,SubDivide,The following statement contains a magic number: newCenters.Add(new Point3D(center.X + (i - 0.5) * l' center.Y + (j - 0.5) * l' center.Z));
Magic Number,FractalDemo,SierpinskiPyramid,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\SierpinskiPyramid.cs,SubDivide,The following statement contains a magic number: newCenters.Add(new Point3D(center.X + (i - 0.5) * l' center.Y + (j - 0.5) * l' center.Z));
Magic Number,FractalDemo,SierpinskiPyramid,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\Fractals\SierpinskiPyramid.cs,SubDivide,The following statement contains a magic number: i < 2
Magic Number,FractalDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Level = 2;
Magic Number,FractalDemo,MultiValueToBoolConverter,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\MainViewModel.cs,ConvertBack,The following statement contains a magic number: return new object[] { 2 };
Magic Number,FractalDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Fractal\MainWindow.xaml.cs,ZoomExtents_Click,The following statement contains a magic number: view1.ZoomExtents(400);
Magic Number,HelixToolkit.Wpf,HalfEdgeMesh,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\HalfEdgeMesh.cs,HalfEdgeMesh,The following statement contains a magic number: this.AddFace(triangleIndices[i]' triangleIndices[i + 1]' triangleIndices[i + 2]);
Magic Number,HelixToolkit.Wpf,HalfEdgeMeshVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\HalfEdgeMeshVisual3D.cs,UpdateVisuals,The following statement contains a magic number: gm.AddSubdivisionSphere(vertex.Position' this.VertexRadius' 4);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: double width = Columns*grid - margin*2;
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: double length = Rows*grid - margin*2;
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: var o = new Point3D((i + 0.5)*grid' (j + 0.5)*grid' height);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: var o = new Point3D((i + 0.5)*grid' (j + 0.5)*grid' height);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddCone(o' new Vector3D(0' 0' 1)' knobDiameter/2' knobDiameter/2' knobHeight' false' true'                                      Divisions);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddCone(o' new Vector3D(0' 0' 1)' knobDiameter/2' knobDiameter/2' knobHeight' false' true'                                      Divisions);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(new Point3D(Columns * 0.5 * grid' Rows * 0.5 * grid' height - wallThickness / 2)' width' length'                            wallThickness'                            BoxFaces.All);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(new Point3D(Columns * 0.5 * grid' Rows * 0.5 * grid' height - wallThickness / 2)' width' length'                            wallThickness'                            BoxFaces.All);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(new Point3D(Columns * 0.5 * grid' Rows * 0.5 * grid' height - wallThickness / 2)' width' length'                            wallThickness'                            BoxFaces.All);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(new Point3D(margin + wallThickness / 2' Rows * 0.5 * grid' height / 2 - wallThickness / 2)'                             wallThickness' length' height - wallThickness'                             BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(new Point3D(margin + wallThickness / 2' Rows * 0.5 * grid' height / 2 - wallThickness / 2)'                             wallThickness' length' height - wallThickness'                             BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(new Point3D(margin + wallThickness / 2' Rows * 0.5 * grid' height / 2 - wallThickness / 2)'                             wallThickness' length' height - wallThickness'                             BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(new Point3D(margin + wallThickness / 2' Rows * 0.5 * grid' height / 2 - wallThickness / 2)'                             wallThickness' length' height - wallThickness'                             BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(                  new Point3D(Columns * grid - margin - wallThickness / 2' Rows * 0.5 * grid' height / 2 - wallThickness / 2)'                  wallThickness' length' height - wallThickness'                  BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(                  new Point3D(Columns * grid - margin - wallThickness / 2' Rows * 0.5 * grid' height / 2 - wallThickness / 2)'                  wallThickness' length' height - wallThickness'                  BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(                  new Point3D(Columns * grid - margin - wallThickness / 2' Rows * 0.5 * grid' height / 2 - wallThickness / 2)'                  wallThickness' length' height - wallThickness'                  BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(                  new Point3D(Columns * grid - margin - wallThickness / 2' Rows * 0.5 * grid' height / 2 - wallThickness / 2)'                  wallThickness' length' height - wallThickness'                  BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(new Point3D(Columns * 0.5 * grid' margin + wallThickness / 2' height / 2 - wallThickness / 2)'                             width' wallThickness' height - wallThickness'                             BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(new Point3D(Columns * 0.5 * grid' margin + wallThickness / 2' height / 2 - wallThickness / 2)'                             width' wallThickness' height - wallThickness'                             BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(new Point3D(Columns * 0.5 * grid' margin + wallThickness / 2' height / 2 - wallThickness / 2)'                             width' wallThickness' height - wallThickness'                             BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(new Point3D(Columns * 0.5 * grid' margin + wallThickness / 2' height / 2 - wallThickness / 2)'                             width' wallThickness' height - wallThickness'                             BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(                  new Point3D(Columns * 0.5 * grid' Rows * grid - margin - wallThickness / 2' height / 2 - wallThickness / 2)'                  width' wallThickness' height - wallThickness'                  BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(                  new Point3D(Columns * 0.5 * grid' Rows * grid - margin - wallThickness / 2' height / 2 - wallThickness / 2)'                  width' wallThickness' height - wallThickness'                  BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(                  new Point3D(Columns * 0.5 * grid' Rows * grid - margin - wallThickness / 2' height / 2 - wallThickness / 2)'                  width' wallThickness' height - wallThickness'                  BoxFaces.All ^ BoxFaces.Top);
Magic Number,HelixToolkit.Wpf,LegoVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\LegoVisual3D.cs,Tessellate,The following statement contains a magic number: builder.AddBox(                  new Point3D(Columns * 0.5 * grid' Rows * grid - margin - wallThickness / 2' height / 2 - wallThickness / 2)'                  width' wallThickness' height - wallThickness'                  BoxFaces.All ^ BoxFaces.Top);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(3' 2' 1' 0);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(3' 2' 1' 0);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(4' 5' 6' 7);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(4' 5' 6' 7);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(4' 5' 6' 7);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(4' 5' 6' 7);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(0' 1' 5' 4);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(0' 1' 5' 4);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(1' 2' 6' 5);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(1' 2' 6' 5);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(1' 2' 6' 5);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(2' 3' 7' 6);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(2' 3' 7' 6);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(2' 3' 7' 6);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(2' 3' 7' 6);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(3' 0' 4' 7);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(3' 0' 4' 7);
Magic Number,HalfEdgeMeshDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\HalfEdgeMesh\MainWindow.xaml.cs,CreateUnitCubeMesh,The following statement contains a magic number: mesh.AddFace(3' 0' 4' 7);
Magic Number,LegoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Lego\MainWindow.xaml.cs,MainWindow_Loaded,The following statement contains a magic number: view1.Camera.FarPlaneDistance = 10;
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,MainViewModel,The following statement contains a magic number: rho = 28;
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,MainViewModel,The following statement contains a magic number: sigma = 10;
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,MainViewModel,The following statement contains a magic number: beta = 8.0 / 3;
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,MainViewModel,The following statement contains a magic number: beta = 8.0 / 3;
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,UpdateModel,The following statement contains a magic number: Func<double[]' double[]> lorenzAttractor = x =>                                                             {                                                                 var dx = new double[3];                                                                 dx[0] = sigma * (x[1] - x[0]);                                                                 dx[1] = x[0] * (rho - x[2]) - x[1];                                                                 dx[2] = x[0] * x[1] - beta * x[2];                                                                 return dx;                                                             };
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,UpdateModel,The following statement contains a magic number: Func<double[]' double[]> lorenzAttractor = x =>                                                             {                                                                 var dx = new double[3];                                                                 dx[0] = sigma * (x[1] - x[0]);                                                                 dx[1] = x[0] * (rho - x[2]) - x[1];                                                                 dx[2] = x[0] * x[1] - beta * x[2];                                                                 return dx;                                                             };
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,UpdateModel,The following statement contains a magic number: Func<double[]' double[]> lorenzAttractor = x =>                                                             {                                                                 var dx = new double[3];                                                                 dx[0] = sigma * (x[1] - x[0]);                                                                 dx[1] = x[0] * (rho - x[2]) - x[1];                                                                 dx[2] = x[0] * x[1] - beta * x[2];                                                                 return dx;                                                             };
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,UpdateModel,The following statement contains a magic number: Func<double[]' double[]> lorenzAttractor = x =>                                                             {                                                                 var dx = new double[3];                                                                 dx[0] = sigma * (x[1] - x[0]);                                                                 dx[1] = x[0] * (rho - x[2]) - x[1];                                                                 dx[2] = x[0] * x[1] - beta * x[2];                                                                 return dx;                                                             };
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,UpdateModel,The following statement contains a magic number: var x0 = new[] { 0' 1' 1.05 };
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,UpdateModel,The following statement contains a magic number: IEnumerable<double[]> solution = EulerSolver(lorenzAttractor' x0' 25);
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,UpdateModel,The following statement contains a magic number: List<Point3D> path = solution.Select(x => new Point3D(x[0]' x[1]' x[2])).ToList();
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,UpdateModel,The following statement contains a magic number: gm.AddTube(path' 0.8' 10' false);
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,UpdateModel,The following statement contains a magic number: gm.AddTube(path' 0.8' 10' false);
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,UpdateModel,The following statement contains a magic number: gm.AddArrow(path[i]' path[i + 1]' 0.8);
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,UpdateModel,The following statement contains a magic number: Point3D p0 = path[path.Count - 2];
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,UpdateModel,The following statement contains a magic number: Point3D p2 = p1 + d * 2;
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,UpdateModel,The following statement contains a magic number: gm.AddArrow(p1' p2' 0.8);
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,EulerSolver,The following statement contains a magic number: const double h = 0.008;
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,EulerSolver,The following statement contains a magic number: var x = new double[3];
Magic Number,LorenzAttractorDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\LorenzAttractor\MainViewModel.cs,EulerSolver,The following statement contains a magic number: i < 3
Magic Number,MazeDemo,Cell,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\Cell.cs,GetHashCode,The following statement contains a magic number: return (this.i * 397) ^ this.j;
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: width % 2 == 0
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: height % 2 == 0
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: maze[i' j] = i % 2 == 0 || j % 2 == 0;
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: maze[i' j] = i % 2 == 0 || j % 2 == 0;
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: neighbours.Add(new Cell(i - 2' j));
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: i > 1 && isVisited(i - 2' j)
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: neighbours.Add(new Cell(i' j - 2));
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: j > 1 && isVisited(i' j - 2)
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: neighbours.Add(new Cell(i + 2' j));
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: i + 2 < height && isVisited(i + 2' j)
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: i + 2 < height && isVisited(i + 2' j)
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: neighbours.Add(new Cell(i' j + 2));
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: j + 2 < width && isVisited(i' j + 2)
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: j + 2 < width && isVisited(i' j + 2)
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: int ii = (next.I + current.I) / 2;
Magic Number,MazeDemo,MazeGenerator2,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator2.cs,Generate,The following statement contains a magic number: int jj = (next.J + current.J) / 2;
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CoercePosition,The following statement contains a magic number: var i = (int)(position.X + m * 0.5 + 0.5);
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CoercePosition,The following statement contains a magic number: var i = (int)(position.X + m * 0.5 + 0.5);
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CoercePosition,The following statement contains a magic number: var j = (int)(position.Y + n * 0.5 + 0.5);
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CoercePosition,The following statement contains a magic number: var j = (int)(position.Y + n * 0.5 + 0.5);
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CoercePosition,The following statement contains a magic number: i >= 0 && i < m && j >= 0 && j < n && position.Z >= 0 && position.Z < 2
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CoercePosition,The following statement contains a magic number: return this.previousPoint - delta * 2;
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CreateMaze,The following statement contains a magic number: var mazeGenerator = new MazeGenerator2 { Width = 21' Height = 31 };
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CreateMaze,The following statement contains a magic number: var mazeGenerator = new MazeGenerator2 { Width = 21' Height = 31 };
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CreateMaze,The following statement contains a magic number: var end = new Cell(this.maze.GetLength(0) - 2' this.maze.GetLength(1) - 2);
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CreateMaze,The following statement contains a magic number: var end = new Cell(this.maze.GetLength(0) - 2' this.maze.GetLength(1) - 2);
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CreateMaze,The following statement contains a magic number: this.offsetX = -m * 0.5;
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CreateMaze,The following statement contains a magic number: this.offsetY = -n * 0.5;
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CreateMaze,The following statement contains a magic number: this.GroundGeometry = this.CreateGroundGeometry(this.maze' 1' -0.005);
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CreateMazeGeometry,The following statement contains a magic number: builder.AddBox(this.GetPosition(i' j' height * 0.5)' size' size' height);
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CreateSolutionGeometry,The following statement contains a magic number: var spline = CanonicalSplineHelper.CreateSpline(path' 0.7' null' false' 0.05);
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CreateSolutionGeometry,The following statement contains a magic number: var spline = CanonicalSplineHelper.CreateSpline(path' 0.7' null' false' 0.05);
Magic Number,MazeDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainViewModel.cs,CreateSolutionGeometry,The following statement contains a magic number: builder.AddTube(spline' diameter' 13' false);
Magic Number,MazeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: view.Camera.NearPlaneDistance = 0.001;
Magic Number,MazeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: view.Camera.FarPlaneDistance = 1000;
Magic Number,MazeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: pc.FieldOfView = 90;
Magic Number,MazeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainWindow.xaml.cs,MainWindow_Loaded,The following statement contains a magic number: overview.SetView(new Point3D(0' 0' 60)' new Vector3D(0' 0' -60)' new Vector3D(0' 1' 0)' 0);
Magic Number,MazeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MainWindow.xaml.cs,MainWindow_Loaded,The following statement contains a magic number: overview.SetView(new Point3D(0' 0' 60)' new Vector3D(0' 0' -60)' new Vector3D(0' 1' 0)' 0);
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,MazeGenerator1,The following statement contains a magic number: this.Width = 31;
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,MazeGenerator1,The following statement contains a magic number: this.Height = 21;
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,MazeGenerator1,The following statement contains a magic number: this.Density = 0.75;
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,MazeGenerator1,The following statement contains a magic number: this.Complexity = 0.75;
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: width % 2 == 0
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: height % 2 == 0
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: int complexityLevel = (int)(complexity * (5 * (height + width)));
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: int densityLevel = (int)(density * ((height / 2) * (width / 2)));
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: int densityLevel = (int)(density * ((height / 2) * (width / 2)));
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: int x = random.Next(width / 2 + 1) * 2;
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: int x = random.Next(width / 2 + 1) * 2;
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: int y = random.Next(height / 2 + 1) * 2;
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: int y = random.Next(height / 2 + 1) * 2;
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: neighbours.Add(new[] { y' x - 2 });
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: neighbours.Add(new[] { y' x + 2 });
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: x < width - 2
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: neighbours.Add(new[] { y - 2' x });
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: neighbours.Add(new[] { y + 2' x });
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: y < height - 2
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: maze[y2 + (y - y2) / 2' x2 + (x - x2) / 2] = true;
Magic Number,MazeDemo,MazeGenerator1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeGenerator1.cs,Generate,The following statement contains a magic number: maze[y2 + (y - y2) / 2' x2 + (x - x2) / 2] = true;
Magic Number,MazeDemo,MazeSolver1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeSolver1.cs,Solve,The following statement contains a magic number: stack.Push(new Cell(temp.I' temp.J - 2));
Magic Number,MazeDemo,MazeSolver1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeSolver1.cs,Solve,The following statement contains a magic number: previousCell[temp.I' temp.J - 2] = temp;
Magic Number,MazeDemo,MazeSolver1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeSolver1.cs,Solve,The following statement contains a magic number: !hasLeftWall(temp) && !visited[temp.I' temp.J - 2]
Magic Number,MazeDemo,MazeSolver1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeSolver1.cs,Solve,The following statement contains a magic number: stack.Push(new Cell(temp.I' temp.J + 2));
Magic Number,MazeDemo,MazeSolver1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeSolver1.cs,Solve,The following statement contains a magic number: previousCell[temp.I' temp.J + 2] = temp;
Magic Number,MazeDemo,MazeSolver1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeSolver1.cs,Solve,The following statement contains a magic number: !hasRightWall(temp) && !visited[temp.I' temp.J + 2]
Magic Number,MazeDemo,MazeSolver1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeSolver1.cs,Solve,The following statement contains a magic number: stack.Push(new Cell(temp.I - 2' temp.J));
Magic Number,MazeDemo,MazeSolver1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeSolver1.cs,Solve,The following statement contains a magic number: previousCell[temp.I - 2' temp.J] = temp;
Magic Number,MazeDemo,MazeSolver1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeSolver1.cs,Solve,The following statement contains a magic number: !hasTopWall(temp) && !visited[temp.I - 2' temp.J]
Magic Number,MazeDemo,MazeSolver1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeSolver1.cs,Solve,The following statement contains a magic number: stack.Push(new Cell(temp.I + 2' temp.J));
Magic Number,MazeDemo,MazeSolver1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeSolver1.cs,Solve,The following statement contains a magic number: previousCell[temp.I + 2' temp.J] = temp;
Magic Number,MazeDemo,MazeSolver1,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Maze\MazeSolver1.cs,Solve,The following statement contains a magic number: !hasBottomWall(temp) && !visited[temp.I + 2' temp.J]
Magic Number,OverlayDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Overlay\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: const int N = 9;
Magic Number,OverlayDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Overlay\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var circle = new Ellipse { Width = 4' Height = 4' Fill = Brushes.Tomato };
Magic Number,OverlayDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Overlay\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var circle = new Ellipse { Width = 4' Height = 4' Fill = Brushes.Tomato };
Magic Number,OverlayDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Overlay\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var text1 = new TextBlock                  {                      Text = "Hello world!"'                      FontWeight = FontWeights.Bold'                      FontSize = 16'                      Foreground = Brushes.YellowGreen'                      Background = Brushes.Gray'                      Padding = new Thickness(4)                  };
Magic Number,OverlayDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Overlay\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var text1 = new TextBlock                  {                      Text = "Hello world!"'                      FontWeight = FontWeights.Bold'                      FontSize = 16'                      Foreground = Brushes.YellowGreen'                      Background = Brushes.Gray'                      Padding = new Thickness(4)                  };
Magic Number,OverlayDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Overlay\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Overlay.SetPosition3D(text1' new Point3D(0' 0' 10));
Magic Number,OverlayDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Overlay\MainWindow.xaml.cs,CompositionTargetRendering,The following statement contains a magic number: Canvas.SetLeft(element' position2D.X - element.ActualWidth / 2);
Magic Number,OverlayDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Overlay\MainWindow.xaml.cs,CompositionTargetRendering,The following statement contains a magic number: Canvas.SetTop(element' position2D.Y - element.ActualHeight / 2);
Magic Number,PointsAndLinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PointsAndLines\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.NumberOfPoints = 100;
Magic Number,PointsAndLinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PointsAndLines\MainWindow.xaml.cs,GeneratePoints,The following statement contains a magic number: const double R = 2;
Magic Number,PointsAndLinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PointsAndLines\MainWindow.xaml.cs,GeneratePoints,The following statement contains a magic number: const double Q = 0.5;
Magic Number,PointsAndLinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PointsAndLines\MainWindow.xaml.cs,GeneratePoints,The following statement contains a magic number: double t = Math.PI * 2 * i / (n - 1);
Magic Number,PointsAndLinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PointsAndLines\MainWindow.xaml.cs,GeneratePoints,The following statement contains a magic number: double u = (t * 24) + (time * 5);
Magic Number,PointsAndLinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PointsAndLines\MainWindow.xaml.cs,GeneratePoints,The following statement contains a magic number: double u = (t * 24) + (time * 5);
Magic Number,PointsAndLinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PointsAndLines\MainWindow.xaml.cs,OnCompositionTargetRendering,The following statement contains a magic number: this.pointsVisual = new PointsVisual3D { Color = Colors.Red' Size = 6 };
Magic Number,PointsAndLinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\PointsAndLines\MainWindow.xaml.cs,OnCompositionTargetRendering,The following statement contains a magic number: this.Points = new Point3DCollection(GeneratePoints(this.NumberOfPoints' this.watch.ElapsedMilliseconds * 0.001));
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following statement contains a magic number: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Magic Number,PolyhedronDemo,PanelModelBuilder,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\PanelModelBuilder.cs,AddPanel,The following statement contains a magic number: Point3D[] points = new Point3D[coords.Length / 3];
Magic Number,PolyhedronDemo,PanelModelBuilder,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\PanelModelBuilder.cs,AddPanel,The following statement contains a magic number: points[i] = new Point3D(coords[i * 3]' coords[i * 3 + 1]' coords[i * 3 + 2]);
Magic Number,PolyhedronDemo,PanelModelBuilder,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\PanelModelBuilder.cs,AddPanel,The following statement contains a magic number: points[i] = new Point3D(coords[i * 3]' coords[i * 3 + 1]' coords[i * 3 + 2]);
Magic Number,PolyhedronDemo,PanelModelBuilder,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\PanelModelBuilder.cs,AddPanel,The following statement contains a magic number: points[i] = new Point3D(coords[i * 3]' coords[i * 3 + 1]' coords[i * 3 + 2]);
Magic Number,PolyhedronDemo,PanelModelBuilder,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\PanelModelBuilder.cs,AddPanel,The following statement contains a magic number: points[i] = new Point3D(coords[i * 3]' coords[i * 3 + 1]' coords[i * 3 + 2]);
Magic Number,PolyhedronDemo,PanelModelBuilder,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\PanelModelBuilder.cs,AddPanel,The following statement contains a magic number: i < coords.Length / 3
Magic Number,PolyhedronDemo,PanelModelBuilder,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\PanelModelBuilder.cs,ToModel3D,The following statement contains a magic number: i < p.Points.Length - 2
Magic Number,PolyhedronDemo,PanelModelBuilder,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\PanelModelBuilder.cs,ToModel3D,The following statement contains a magic number: gm.AddSphere(p' 0.05);
Magic Number,PolyhedronDemo,PanelModelBuilder,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\PanelModelBuilder.cs,ToModel3D,The following statement contains a magic number: em.AddCylinder(p.Points[i]' p.Points[(i + 1) % p.Points.Length]' 0.05' 10);
Magic Number,PolyhedronDemo,PanelModelBuilder,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\PanelModelBuilder.cs,ToModel3D,The following statement contains a magic number: em.AddCylinder(p.Points[i]' p.Points[(i + 1) % p.Points.Length]' 0.05' 10);
Magic Number,PyramidDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Pyramid\MainWindow.xaml.cs,MainWindowLoaded,The following statement contains a magic number: var center = new Point3D(a * (j - (double)mx / 2)' a * (k - (double)mx / 2)' (i + 0.5) * a);
Magic Number,PyramidDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Pyramid\MainWindow.xaml.cs,MainWindowLoaded,The following statement contains a magic number: var center = new Point3D(a * (j - (double)mx / 2)' a * (k - (double)mx / 2)' (i + 0.5) * a);
Magic Number,PyramidDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Pyramid\MainWindow.xaml.cs,MainWindowLoaded,The following statement contains a magic number: var center = new Point3D(a * (j - (double)mx / 2)' a * (k - (double)mx / 2)' (i + 0.5) * a);
Magic Number,PyramidDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Pyramid\MainWindow.xaml.cs,MainWindowLoaded,The following statement contains a magic number: int ntri = mg.TriangleIndices.Count / 3;
Magic Number,PyramidDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Pyramid\MainWindow.xaml.cs,MainWindowLoaded,The following statement contains a magic number: ntriTotal = builder.TriangleIndices.Count / 3;
Magic Number,PyramidDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Pyramid\MainWindow.xaml.cs,MainWindowLoaded,The following statement contains a magic number: view1.LookAt(new Point3D(0' 0' a * nvert / 2)' new Vector3D(-70' -60' -100)' 0);
Magic Number,PyramidDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Pyramid\MainWindow.xaml.cs,MainWindowLoaded,The following statement contains a magic number: view1.LookAt(new Point3D(0' 0' a * nvert / 2)' new Vector3D(-70' -60' -100)' 0);
Magic Number,PyramidDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Pyramid\MainWindow.xaml.cs,MainWindowLoaded,The following statement contains a magic number: view1.LookAt(new Point3D(0' 0' a * nvert / 2)' new Vector3D(-70' -60' -100)' 0);
Magic Number,PyramidDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Pyramid\MainWindow.xaml.cs,MainWindowLoaded,The following statement contains a magic number: view1.LookAt(new Point3D(0' 0' a * nvert / 2)' new Vector3D(-70' -60' -100)' 0);
Magic Number,RubikDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\MainWindow.xaml.cs,HandleKeyDown,The following statement contains a magic number: e.Key == Key.Subtract && cube1.Size > 2
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFaceBrush,The following statement contains a magic number: dg.Children.Add(new GeometryDrawing                                  {                                      Geometry = new RectangleGeometry(new Rect(0.05' 0.05' 0.9' 0.9)) { RadiusX = 0.05' RadiusY = 0.05 }'                                      Brush = new SolidColorBrush(c)                                  });
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFaceBrush,The following statement contains a magic number: dg.Children.Add(new GeometryDrawing                                  {                                      Geometry = new RectangleGeometry(new Rect(0.05' 0.05' 0.9' 0.9)) { RadiusX = 0.05' RadiusY = 0.05 }'                                      Brush = new SolidColorBrush(c)                                  });
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFaceBrush,The following statement contains a magic number: dg.Children.Add(new GeometryDrawing                                  {                                      Geometry = new RectangleGeometry(new Rect(0.05' 0.05' 0.9' 0.9)) { RadiusX = 0.05' RadiusY = 0.05 }'                                      Brush = new SolidColorBrush(c)                                  });
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFaceBrush,The following statement contains a magic number: dg.Children.Add(new GeometryDrawing                                  {                                      Geometry = new RectangleGeometry(new Rect(0.05' 0.05' 0.9' 0.9)) { RadiusX = 0.05' RadiusY = 0.05 }'                                      Brush = new SolidColorBrush(c)                                  });
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFaceBrush,The following statement contains a magic number: dg.Children.Add(new GeometryDrawing                                  {                                      Geometry = new RectangleGeometry(new Rect(0.05' 0.05' 0.9' 0.9)) { RadiusX = 0.05' RadiusY = 0.05 }'                                      Brush = new SolidColorBrush(c)                                  });
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFaceBrush,The following statement contains a magic number: dg.Children.Add(new GeometryDrawing                                  {                                      Geometry = new RectangleGeometry(new Rect(0.05' 0.05' 0.9' 0.9)) { RadiusX = 0.05' RadiusY = 0.05 }'                                      Brush = new SolidColorBrush(c)                                  });
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFaceBrush,The following statement contains a magic number: var ft = new FormattedText(text' CultureInfo.CurrentCulture' FlowDirection.LeftToRight'                                             new Typeface("Segoe UI")' 0.3' Brushes.Black);
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFaceBrush,The following statement contains a magic number: var geometry = ft.BuildGeometry(new Point(0' -0.2));
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFaceBrush,The following statement contains a magic number: tg.Children.Add(new RotateTransform(45));
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFaceBrush,The following statement contains a magic number: tg.Children.Add(new TranslateTransform(0.5' 0.5));
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFaceBrush,The following statement contains a magic number: tg.Children.Add(new TranslateTransform(0.5' 0.5));
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateCubelets,The following statement contains a magic number: double o = -(Size - 1) * 0.5 * size;
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateCubelets,The following statement contains a magic number: face < 6
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,IsOutsideFace,The following statement contains a magic number: switch (face)              {                  case 0:                      return i == 0;                  case 1:                      return i == Size - 1;                  case 2:                      return j == 0;                  case 3:                      return j == Size - 1;                  case 4:                      return k == 0;                  case 5:                      return k == Size - 1;              }
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,IsOutsideFace,The following statement contains a magic number: switch (face)              {                  case 0:                      return i == 0;                  case 1:                      return i == Size - 1;                  case 2:                      return j == 0;                  case 3:                      return j == Size - 1;                  case 4:                      return k == 0;                  case 5:                      return k == Size - 1;              }
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,IsOutsideFace,The following statement contains a magic number: switch (face)              {                  case 0:                      return i == 0;                  case 1:                      return i == Size - 1;                  case 2:                      return j == 0;                  case 3:                      return j == Size - 1;                  case 4:                      return k == 0;                  case 5:                      return k == Size - 1;              }
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,IsOutsideFace,The following statement contains a magic number: switch (face)              {                  case 0:                      return i == 0;                  case 1:                      return i == Size - 1;                  case 2:                      return j == 0;                  case 3:                      return j == Size - 1;                  case 4:                      return k == 0;                  case 5:                      return k == Size - 1;              }
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFace,The following statement contains a magic number: switch (face)              {                  case 0:                      b.AddCubeFace(center' new Vector3D(-1' 0' 0)' new Vector3D(0' 0' 1)' length' width' height);                      break;                  case 1:                      b.AddCubeFace(center' new Vector3D(1' 0' 0)' new Vector3D(0' 0' -1)' length' width' height);                      break;                  case 2:                      b.AddCubeFace(center' new Vector3D(0' -1' 0)' new Vector3D(0' 0' 1)' width' length' height);                      break;                  case 3:                      b.AddCubeFace(center' new Vector3D(0' 1' 0)' new Vector3D(0' 0' -1)' width' length' height);                      break;                  case 4:                      b.AddCubeFace(center' new Vector3D(0' 0' -1)' new Vector3D(0' 1' 0)' height' length' width);                      break;                  case 5:                      b.AddCubeFace(center' new Vector3D(0' 0' 1)' new Vector3D(0' -1' 0)' height' length' width);                      break;              }
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFace,The following statement contains a magic number: switch (face)              {                  case 0:                      b.AddCubeFace(center' new Vector3D(-1' 0' 0)' new Vector3D(0' 0' 1)' length' width' height);                      break;                  case 1:                      b.AddCubeFace(center' new Vector3D(1' 0' 0)' new Vector3D(0' 0' -1)' length' width' height);                      break;                  case 2:                      b.AddCubeFace(center' new Vector3D(0' -1' 0)' new Vector3D(0' 0' 1)' width' length' height);                      break;                  case 3:                      b.AddCubeFace(center' new Vector3D(0' 1' 0)' new Vector3D(0' 0' -1)' width' length' height);                      break;                  case 4:                      b.AddCubeFace(center' new Vector3D(0' 0' -1)' new Vector3D(0' 1' 0)' height' length' width);                      break;                  case 5:                      b.AddCubeFace(center' new Vector3D(0' 0' 1)' new Vector3D(0' -1' 0)' height' length' width);                      break;              }
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFace,The following statement contains a magic number: switch (face)              {                  case 0:                      b.AddCubeFace(center' new Vector3D(-1' 0' 0)' new Vector3D(0' 0' 1)' length' width' height);                      break;                  case 1:                      b.AddCubeFace(center' new Vector3D(1' 0' 0)' new Vector3D(0' 0' -1)' length' width' height);                      break;                  case 2:                      b.AddCubeFace(center' new Vector3D(0' -1' 0)' new Vector3D(0' 0' 1)' width' length' height);                      break;                  case 3:                      b.AddCubeFace(center' new Vector3D(0' 1' 0)' new Vector3D(0' 0' -1)' width' length' height);                      break;                  case 4:                      b.AddCubeFace(center' new Vector3D(0' 0' -1)' new Vector3D(0' 1' 0)' height' length' width);                      break;                  case 5:                      b.AddCubeFace(center' new Vector3D(0' 0' 1)' new Vector3D(0' -1' 0)' height' length' width);                      break;              }
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFace,The following statement contains a magic number: switch (face)              {                  case 0:                      b.AddCubeFace(center' new Vector3D(-1' 0' 0)' new Vector3D(0' 0' 1)' length' width' height);                      break;                  case 1:                      b.AddCubeFace(center' new Vector3D(1' 0' 0)' new Vector3D(0' 0' -1)' length' width' height);                      break;                  case 2:                      b.AddCubeFace(center' new Vector3D(0' -1' 0)' new Vector3D(0' 0' 1)' width' length' height);                      break;                  case 3:                      b.AddCubeFace(center' new Vector3D(0' 1' 0)' new Vector3D(0' 0' -1)' width' length' height);                      break;                  case 4:                      b.AddCubeFace(center' new Vector3D(0' 0' -1)' new Vector3D(0' 1' 0)' height' length' width);                      break;                  case 5:                      b.AddCubeFace(center' new Vector3D(0' 0' 1)' new Vector3D(0' -1' 0)' height' length' width);                      break;              }
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,Scramble,The following statement contains a magic number: int face = random.Next(6);
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,Scramble,The following statement contains a magic number: int rotation = 90;
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,Scramble,The following statement contains a magic number: rotation = -90;
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,Scramble,The following statement contains a magic number: random.Next(2) == 0
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,Rotate,The following statement contains a magic number: double angle = 90;
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,Rotate,The following statement contains a magic number: angle = -90;
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,Rotate,The following statement contains a magic number: angle *= 2;
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,Rotate,The following statement contains a magic number: switch (face)                      {                          case 0:                              group = rotatedCubelets[0' at' bt] = cubelets[0' a' b];                              break;                          case 1:                              group = rotatedCubelets[n' bt' at] = cubelets[n' b' a];                              break;                          case 2:                              group = rotatedCubelets[bt' 0' at] = cubelets[b' 0' a];                              break;                          case 3:                              group = rotatedCubelets[at' n' bt] = cubelets[a' n' b];                              break;                          case 4:                              group = rotatedCubelets[at' bt' 0] = cubelets[a' b' 0];                              break;                          case 5:                              group = rotatedCubelets[bt' at' n] = cubelets[b' a' n];                              break;                          default:                              continue;                      }
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,Rotate,The following statement contains a magic number: switch (face)                      {                          case 0:                              group = rotatedCubelets[0' at' bt] = cubelets[0' a' b];                              break;                          case 1:                              group = rotatedCubelets[n' bt' at] = cubelets[n' b' a];                              break;                          case 2:                              group = rotatedCubelets[bt' 0' at] = cubelets[b' 0' a];                              break;                          case 3:                              group = rotatedCubelets[at' n' bt] = cubelets[a' n' b];                              break;                          case 4:                              group = rotatedCubelets[at' bt' 0] = cubelets[a' b' 0];                              break;                          case 5:                              group = rotatedCubelets[bt' at' n] = cubelets[b' a' n];                              break;                          default:                              continue;                      }
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,Rotate,The following statement contains a magic number: switch (face)                      {                          case 0:                              group = rotatedCubelets[0' at' bt] = cubelets[0' a' b];                              break;                          case 1:                              group = rotatedCubelets[n' bt' at] = cubelets[n' b' a];                              break;                          case 2:                              group = rotatedCubelets[bt' 0' at] = cubelets[b' 0' a];                              break;                          case 3:                              group = rotatedCubelets[at' n' bt] = cubelets[a' n' b];                              break;                          case 4:                              group = rotatedCubelets[at' bt' 0] = cubelets[a' b' 0];                              break;                          case 5:                              group = rotatedCubelets[bt' at' n] = cubelets[b' a' n];                              break;                          default:                              continue;                      }
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,Rotate,The following statement contains a magic number: switch (face)                      {                          case 0:                              group = rotatedCubelets[0' at' bt] = cubelets[0' a' b];                              break;                          case 1:                              group = rotatedCubelets[n' bt' at] = cubelets[n' b' a];                              break;                          case 2:                              group = rotatedCubelets[bt' 0' at] = cubelets[b' 0' a];                              break;                          case 3:                              group = rotatedCubelets[at' n' bt] = cubelets[a' n' b];                              break;                          case 4:                              group = rotatedCubelets[at' bt' 0] = cubelets[a' b' 0];                              break;                          case 5:                              group = rotatedCubelets[bt' at' n] = cubelets[b' a' n];                              break;                          default:                              continue;                      }
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,Rotate,The following statement contains a magic number: var anim = new DoubleAnimation(angle' new Duration(TimeSpan.FromMilliseconds(animationTime)))                                     {                                         AccelerationRatio = 0.3'                                         DecelerationRatio = 0.5                                     };
Magic Number,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,Rotate,The following statement contains a magic number: var anim = new DoubleAnimation(angle' new Duration(TimeSpan.FromMilliseconds(animationTime)))                                     {                                         AccelerationRatio = 0.3'                                         DecelerationRatio = 0.5                                     };
Magic Number,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,AddCube,The following statement contains a magic number: coll.Add(new CubeVisual3D { Fill = brush' Center = new Point3D(0' i * 4' 0) });
Magic Number,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,AddCube,The following statement contains a magic number: i < 2
Magic Number,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,CreateDrawingBrush,The following statement contains a magic number: var db = new DrawingBrush              {                  TileMode = TileMode.Tile'                  ViewportUnits = BrushMappingMode.Absolute'                  Viewport = new Rect(0' 0' 0.1' 0.1)'                  Viewbox = new Rect(0' 0' 1' 1)'                  ViewboxUnits = BrushMappingMode.Absolute              };
Magic Number,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,CreateDrawingBrush,The following statement contains a magic number: var db = new DrawingBrush              {                  TileMode = TileMode.Tile'                  ViewportUnits = BrushMappingMode.Absolute'                  Viewport = new Rect(0' 0' 0.1' 0.1)'                  Viewbox = new Rect(0' 0' 1' 1)'                  ViewboxUnits = BrushMappingMode.Absolute              };
Magic Number,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,CreateDrawingBrush,The following statement contains a magic number: dg.Children.Add(new GeometryDrawing { Geometry = new RectangleGeometry(new Rect(0.25' 0.25' 0.5' 0.5))' Brush = Brushes.Black });
Magic Number,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,CreateDrawingBrush,The following statement contains a magic number: dg.Children.Add(new GeometryDrawing { Geometry = new RectangleGeometry(new Rect(0.25' 0.25' 0.5' 0.5))' Brush = Brushes.Black });
Magic Number,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,CreateDrawingBrush,The following statement contains a magic number: dg.Children.Add(new GeometryDrawing { Geometry = new RectangleGeometry(new Rect(0.25' 0.25' 0.5' 0.5))' Brush = Brushes.Black });
Magic Number,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,CreateDrawingBrush,The following statement contains a magic number: dg.Children.Add(new GeometryDrawing { Geometry = new RectangleGeometry(new Rect(0.25' 0.25' 0.5' 0.5))' Brush = Brushes.Black });
Magic Number,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,CreateVisualBrush,The following statement contains a magic number: var vb = new VisualBrush              {                  TileMode = TileMode.Tile'                  ViewportUnits = BrushMappingMode.Absolute'                  Viewport = new Rect(0' 0' 0.1' 0.1)'                  Viewbox = new Rect(0' 0' 1' 1)'                  ViewboxUnits = BrushMappingMode.Absolute              };
Magic Number,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,CreateVisualBrush,The following statement contains a magic number: var vb = new VisualBrush              {                  TileMode = TileMode.Tile'                  ViewportUnits = BrushMappingMode.Absolute'                  Viewport = new Rect(0' 0' 0.1' 0.1)'                  Viewbox = new Rect(0' 0' 1' 1)'                  ViewboxUnits = BrushMappingMode.Absolute              };
Magic Number,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,CreateVisualBrush,The following statement contains a magic number: var r = new Rectangle { Fill = Brushes.Black' Width = 0.5' Height = 0.5 };
Magic Number,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,CreateVisualBrush,The following statement contains a magic number: var r = new Rectangle { Fill = Brushes.Black' Width = 0.5' Height = 0.5 };
Magic Number,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,CreateVisualBrush,The following statement contains a magic number: Canvas.SetLeft(r' 0.25);
Magic Number,StereoDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Stereo\MainWindow.xaml.cs,CreateVisualBrush,The following statement contains a magic number: Canvas.SetTop(r' 0.25);
Magic Number,StreamlinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Streamlines\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.U = 0.5;
Magic Number,StreamlinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Streamlines\MainWindow.xaml.cs,CreateModel,The following statement contains a magic number: const double dt = 0.1;
Magic Number,StreamlinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Streamlines\MainWindow.xaml.cs,CreateModel,The following statement contains a magic number: const int nSteps = 100;
Magic Number,StreamlinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Streamlines\MainWindow.xaml.cs,CreateModel,The following statement contains a magic number: var p0 = new Point(-3' y0);
Magic Number,StreamlinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Streamlines\MainWindow.xaml.cs,CreateModel,The following statement contains a magic number: diam[j] = 0.075;
Magic Number,StreamlinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Streamlines\MainWindow.xaml.cs,CreateModel,The following statement contains a magic number: mb.AddTube(pts3d' vel' diam' 12' false);
Magic Number,StreamlinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Streamlines\MainWindow.xaml.cs,CreateModel,The following statement contains a magic number: y0 <= 5
Magic Number,StreamlinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Streamlines\MainWindow.xaml.cs,Velocity,The following statement contains a magic number: double x2y22 = x2y2*2;
Magic Number,StreamlinesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Streamlines\MainWindow.xaml.cs,Velocity,The following statement contains a magic number: double v = -R*R*2*x*y/x2y22;
Magic Number,SubdivisionDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Subdivision\MainWindow.xaml.cs,UpdateModel,The following statement contains a magic number: double edge = 0.004;
Magic Number,SubdivisionDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Subdivision\MainWindow.xaml.cs,UpdateModel,The following statement contains a magic number: double vertex = 0.006;
Magic Number,SubdivisionDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Subdivision\MainWindow.xaml.cs,UpdateModel,The following statement contains a magic number: model2.Transform = new TranslateTransform3D(bounds.SizeX * 1.2' 0' 0);
Magic Number,SubdivisionDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Subdivision\MainWindow.xaml.cs,UpdateModel,The following statement contains a magic number: model3.Transform = new TranslateTransform3D(bounds.SizeX * 2.4' 0' 0);
Magic Number,SubdivisionDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Subdivision\MainWindow.xaml.cs,UpdateModel,The following statement contains a magic number: subdivisionStatus.Text = string.Format("Subdivision time: {0} ms' mesh generation time: {1} ms'  triangles: {2} (original mesh: {3})"' subDivisionTime' meshGenerationTime' (mesh3.Faces.Count)' (triangularMesh.TriangleIndices.Count / 3));
Magic Number,SurfacePlotDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\MainViewModel.cs,MainViewModel,The following statement contains a magic number: MaxX = 3;
Magic Number,SurfacePlotDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\MainViewModel.cs,MainViewModel,The following statement contains a magic number: MaxY = 3;
Magic Number,SurfacePlotDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Rows = 91;
Magic Number,SurfacePlotDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Columns = 91;
Magic Number,SurfacePlotDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Function = (x' y) => Math.Sin(x * y) * 0.5;
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,SurfacePlotVisual3D,The following statement contains a magic number: IntervalZ = 0.25;
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,SurfacePlotVisual3D,The following statement contains a magic number: FontSize = 0.06;
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,SurfacePlotVisual3D,The following statement contains a magic number: LineThickness = 0.01;
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,CreateModel,The following statement contains a magic number: axesMeshBuilder.AddTube(path' LineThickness' 9' false);
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D(x.ToString()' Brushes.Black' true' FontSize'                                                                             new Point3D(x' minY - FontSize*2.5' minZ)'                                                                             new Vector3D(1' 0' 0)' new Vector3D(0' 1' 0));
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D("X-axis"' Brushes.Black' true' FontSize'                                                                             new Point3D((minX + maxX)*0.5'                                                                                         minY - FontSize*6' minZ)'                                                                             new Vector3D(1' 0' 0)' new Vector3D(0' 1' 0));
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D("X-axis"' Brushes.Black' true' FontSize'                                                                             new Point3D((minX + maxX)*0.5'                                                                                         minY - FontSize*6' minZ)'                                                                             new Vector3D(1' 0' 0)' new Vector3D(0' 1' 0));
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,CreateModel,The following statement contains a magic number: axesMeshBuilder.AddTube(path' LineThickness' 9' false);
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D(y.ToString()' Brushes.Black' true' FontSize'                                                                             new Point3D(minX - FontSize*3' y' minZ)'                                                                             new Vector3D(1' 0' 0)' new Vector3D(0' 1' 0));
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D("Y-axis"' Brushes.Black' true' FontSize'                                                                             new Point3D(minX - FontSize*10'                                                                                         (minY + maxY)*0.5' minZ)'                                                                             new Vector3D(0' 1' 0)' new Vector3D(-1' 0' 0));
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D("Y-axis"' Brushes.Black' true' FontSize'                                                                             new Point3D(minX - FontSize*10'                                                                                         (minY + maxY)*0.5' minZ)'                                                                             new Vector3D(0' 1' 0)' new Vector3D(-1' 0' 0));
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D(z.ToString()' Brushes.Black' true' FontSize'                                                                             new Point3D(minX - FontSize*3' maxY' z)'                                                                             new Vector3D(1' 0' 0)' new Vector3D(0' 0' 1));
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D("Z-axis"' Brushes.Black' true' FontSize'                                                                             new Point3D(minX - FontSize*10' maxY'                                                                                         (minZ + maxZ)*0.5)'                                                                             new Vector3D(0' 0' 1)' new Vector3D(1' 0' 0));
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,CreateModel,The following statement contains a magic number: GeometryModel3D label = TextCreator.CreateTextLabelModel3D("Z-axis"' Brushes.Black' true' FontSize'                                                                             new Point3D(minX - FontSize*10' maxY'                                                                                         (minZ + maxZ)*0.5)'                                                                             new Vector3D(0' 0' 1)' new Vector3D(1' 0' 0));
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,BilinearInterpolation,The following statement contains a magic number: i0 = n - 2;
Magic Number,SurfacePlotDemo,SurfacePlotVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\SurfacePlotVisual3D.cs,BilinearInterpolation,The following statement contains a magic number: j0 = m - 2;
Magic Number,TextDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Text\MainWindow.xaml.cs,CreateItems,The following statement contains a magic number: double x = 10;
Magic Number,TextDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Text\MainWindow.xaml.cs,CreateItems,The following statement contains a magic number: this.TextItems2.Add(new BillboardTextItem { Text = word' Position = new Point3D(x' y' 1)' DepthOffset = 1e-6 });
Magic Number,TextDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Text\MainWindow.xaml.cs,CreateItems,The following statement contains a magic number: this.TextItems3.Add(new BillboardTextItem { Text = "This is a billboard with a 'pin'."' Position = new Point3D(0.5' 0' 0.5)' DepthOffset = 0' WorldDepthOffset = 0.2 });
Magic Number,TextDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Text\MainWindow.xaml.cs,CreateItems,The following statement contains a magic number: this.TextItems3.Add(new BillboardTextItem { Text = "This is a billboard with a 'pin'."' Position = new Point3D(0.5' 0' 0.5)' DepthOffset = 0' WorldDepthOffset = 0.2 });
Magic Number,TextDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Text\MainWindow.xaml.cs,CreateItems,The following statement contains a magic number: this.TextItems3.Add(new BillboardTextItem { Text = "This is a billboard with a 'pin'."' Position = new Point3D(0.5' 0' 0.5)' DepthOffset = 0' WorldDepthOffset = 0.2 });
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: int n = 180;
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: double r = Math.Sqrt(3) / 3;
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: double r = Math.Sqrt(3) / 3;
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Ring1 = this.CreatePath(0' Math.PI * 2' n' u => Math.Cos(u)' u => Math.Sin(u) + r' u => Math.Cos(3 * u) / 3);
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Ring1 = this.CreatePath(0' Math.PI * 2' n' u => Math.Cos(u)' u => Math.Sin(u) + r' u => Math.Cos(3 * u) / 3);
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Ring1 = this.CreatePath(0' Math.PI * 2' n' u => Math.Cos(u)' u => Math.Sin(u) + r' u => Math.Cos(3 * u) / 3);
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Ring2 = this.CreatePath(0' Math.PI * 2' n' u => Math.Cos(u) + 0.5' u => Math.Sin(u) - r / 2' u => Math.Cos(3 * u) / 3);
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Ring2 = this.CreatePath(0' Math.PI * 2' n' u => Math.Cos(u) + 0.5' u => Math.Sin(u) - r / 2' u => Math.Cos(3 * u) / 3);
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Ring2 = this.CreatePath(0' Math.PI * 2' n' u => Math.Cos(u) + 0.5' u => Math.Sin(u) - r / 2' u => Math.Cos(3 * u) / 3);
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Ring2 = this.CreatePath(0' Math.PI * 2' n' u => Math.Cos(u) + 0.5' u => Math.Sin(u) - r / 2' u => Math.Cos(3 * u) / 3);
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Ring2 = this.CreatePath(0' Math.PI * 2' n' u => Math.Cos(u) + 0.5' u => Math.Sin(u) - r / 2' u => Math.Cos(3 * u) / 3);
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Ring3 = this.CreatePath(0' Math.PI * 2' n' u => Math.Cos(u) - 0.5' u => Math.Sin(u) - r / 2' u => Math.Cos(3 * u) / 3);
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Ring3 = this.CreatePath(0' Math.PI * 2' n' u => Math.Cos(u) - 0.5' u => Math.Sin(u) - r / 2' u => Math.Cos(3 * u) / 3);
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Ring3 = this.CreatePath(0' Math.PI * 2' n' u => Math.Cos(u) - 0.5' u => Math.Sin(u) - r / 2' u => Math.Cos(3 * u) / 3);
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Ring3 = this.CreatePath(0' Math.PI * 2' n' u => Math.Cos(u) - 0.5' u => Math.Sin(u) - r / 2' u => Math.Cos(3 * u) / 3);
Magic Number,TubeDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Tube\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Ring3 = this.CreatePath(0' Math.PI * 2' n' u => Math.Cos(u) - 0.5' u => Math.Sin(u) - r / 2' u => Math.Cos(3 * u) / 3);
Magic Number,UIElementDemo,DemoElement3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\UIElement\DemoElement3D.cs,DemoElement3D,The following statement contains a magic number: mb.AddSphere(new Point3D(0' 0' 0)' 2' 100' 50);
Magic Number,UIElementDemo,DemoElement3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\UIElement\DemoElement3D.cs,DemoElement3D,The following statement contains a magic number: mb.AddSphere(new Point3D(0' 0' 0)' 2' 100' 50);
Magic Number,UIElementDemo,DemoElement3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\UIElement\DemoElement3D.cs,DemoElement3D,The following statement contains a magic number: mb.AddSphere(new Point3D(0' 0' 0)' 2' 100' 50);
Magic Number,UIElementDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\UIElement\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: meshBuilder.AddSphere(new Point3D(0' 0' 0)' 2' 100' 50);
Magic Number,UIElementDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\UIElement\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: meshBuilder.AddSphere(new Point3D(0' 0' 0)' 2' 100' 50);
Magic Number,UIElementDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\UIElement\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: meshBuilder.AddSphere(new Point3D(0' 0' 0)' 2' 100' 50);
Magic Number,UIElementDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\UIElement\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: element.Transform = new TranslateTransform3D(5' 0' 0);
Magic Number,UIElementDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\UIElement\MainWindow.xaml.cs,ZoomExtents_Click,The following statement contains a magic number: view1.ZoomExtents(500);
Magic Number,ViewportFeaturesDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\ViewportFeatures\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.ResetCommand = new DelegateCommand(() => this.view8.FitView(new Vector3D(1' -1' -1)' new Vector3D(0' 0' 1)' 500));
Magic Number,VoxelDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Voxels\MainViewModel.cs,CreateVoxelModel3D,The following statement contains a magic number: const double size = 0.98;
Magic Number,VoxelDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Voxels\MainWindow.xaml.cs,MainWindowLoaded,The following statement contains a magic number: view1.ZoomExtents(500);
Magic Number,VoxelDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Voxels\MainWindow.xaml.cs,OnKeyDown,The following statement contains a magic number: switch (e.Key)              {                  case Key.Space:                      vm.PaletteIndex++;                      vm.CurrentColor = vm.GetPaletteColor();                      break;                  case Key.A:                      view1.ZoomExtents(500);                      break;                  case Key.C:                      vm.Clear();                      break;              }
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Length = 200;
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: dispatcher.BeginInvoke(new Action(() => view.CameraController.Zoom(-0.01)));
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: dispatcher.BeginInvoke(new Action(() => view.CameraController.Zoom(0.01)));
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: double deltaTime = timer.ElapsedMilliseconds*0.001;
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: double newHeel = -90 + 180.0*(e.WiimoteState.AccelState.RawValues.X - 94)/(143 - 94);
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: double newHeel = -90 + 180.0*(e.WiimoteState.AccelState.RawValues.X - 94)/(143 - 94);
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: double newHeel = -90 + 180.0*(e.WiimoteState.AccelState.RawValues.X - 94)/(143 - 94);
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: double newHeel = -90 + 180.0*(e.WiimoteState.AccelState.RawValues.X - 94)/(143 - 94);
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: double newHeel = -90 + 180.0*(e.WiimoteState.AccelState.RawValues.X - 94)/(143 - 94);
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: double newTrim = -90 + 180.0*(e.WiimoteState.AccelState.RawValues.Y - 94)/(143 - 94);
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: double newTrim = -90 + 180.0*(e.WiimoteState.AccelState.RawValues.Y - 94)/(143 - 94);
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: double newTrim = -90 + 180.0*(e.WiimoteState.AccelState.RawValues.Y - 94)/(143 - 94);
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: double newTrim = -90 + 180.0*(e.WiimoteState.AccelState.RawValues.Y - 94)/(143 - 94);
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: double newTrim = -90 + 180.0*(e.WiimoteState.AccelState.RawValues.Y - 94)/(143 - 94);
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: double verticalAcceleration = 100.0*(e.WiimoteState.AccelState.RawValues.Z - 143);
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: double verticalAcceleration = 100.0*(e.WiimoteState.AccelState.RawValues.Z - 143);
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,WiimoteChanged,The following statement contains a magic number: Heave = (Heave + vspeed*deltaTime)*0.95;
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,ValidateTrimHeel,The following statement contains a magic number: Rumble = Math.Abs(Heel) > 60 || Math.Abs(Trim) > 60;
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,ValidateTrimHeel,The following statement contains a magic number: Rumble = Math.Abs(Heel) > 60 || Math.Abs(Trim) > 60;
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,ValidateTrimHeel,The following statement contains a magic number: Led1 = Math.Abs(Heel) > 30;
Magic Number,WiiDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainViewModel.cs,ValidateTrimHeel,The following statement contains a magic number: Led2 = Math.Abs(Trim) > 30;
Magic Number,WiiDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainWindow.xaml.cs,view1_MouseLeftButtonDown,The following statement contains a magic number: e.ClickCount==2
Magic Number,WiiDemo,ExplodingMesh,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainWindow.xaml.cs,ExplodingMesh,The following statement contains a magic number: integrator.Positions[i] = mesh.Positions[i] + delta * (1 + r.NextDouble() * 2);
Magic Number,WiiDemo,ExplodingMesh,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainWindow.xaml.cs,ExplodingMesh,The following statement contains a magic number: integrator.Accelerations[i] = new Vector3D(0' 0' -1000);
Magic Number,WiiDemo,ExplodingMesh,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainWindow.xaml.cs,ExplodingMesh,The following statement contains a magic number: integrator.InverseMass[i] = 0.01;
Magic Number,WiiDemo,ExplodingMesh,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainWindow.xaml.cs,ExplodingMesh,The following statement contains a magic number: integrator.CreateConstraintsByMesh(mesh' 0.7);
Magic Number,WiiDemo,ExplodingMesh,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainWindow.xaml.cs,ExplodingMesh,The following statement contains a magic number: integrator.AddFloor(0.3);
Magic Number,WiiDemo,ExplodingMesh,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainWindow.xaml.cs,Integrate,The following statement contains a magic number: var dt = watch.ElapsedMilliseconds*0.001;
Magic Number,WiiDemo,ExplodingMesh,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainWindow.xaml.cs,Integrate,The following statement contains a magic number: dt = 0.01;
Magic Number,WiiDemo,ExplodingMesh,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MainWindow.xaml.cs,IsMoving,The following statement contains a magic number: return totalTime < 3;
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: const int rows = 5;
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: const int columns = 4;
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: const double distance = 120;
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: double x = (j + (i % 2) * 0.5) * distance;
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: double x = (j + (i % 2) * 0.5) * distance;
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var visual = new WindTurbineVisual3D                                       {                                           RotationAngle = r.Next(360)'                                           RotationSpeed = 20'                                           WindTurbine = turbine'                                           Transform = new TranslateTransform3D(x' y' 0)                                       };
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var visual = new WindTurbineVisual3D                                       {                                           RotationAngle = r.Next(360)'                                           RotationSpeed = 20'                                           WindTurbine = turbine'                                           Transform = new TranslateTransform3D(x' y' 0)                                       };
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: j + (i % 2) * 0.5 <= columns - 1
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: j + (i % 2) * 0.5 <= columns - 1
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var seasurface = new RectangleVisual3D                                   {                                       DivWidth = 100'                                       DivLength = 100'                                       Origin = new Point3D((rows - 2) * distance * 0.5' (columns) * distance * 0.5' 0)'                                       Width = rows * distance * 2'                                       Length = columns * distance * 2                                   };
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var seasurface = new RectangleVisual3D                                   {                                       DivWidth = 100'                                       DivLength = 100'                                       Origin = new Point3D((rows - 2) * distance * 0.5' (columns) * distance * 0.5' 0)'                                       Width = rows * distance * 2'                                       Length = columns * distance * 2                                   };
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var seasurface = new RectangleVisual3D                                   {                                       DivWidth = 100'                                       DivLength = 100'                                       Origin = new Point3D((rows - 2) * distance * 0.5' (columns) * distance * 0.5' 0)'                                       Width = rows * distance * 2'                                       Length = columns * distance * 2                                   };
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var seasurface = new RectangleVisual3D                                   {                                       DivWidth = 100'                                       DivLength = 100'                                       Origin = new Point3D((rows - 2) * distance * 0.5' (columns) * distance * 0.5' 0)'                                       Width = rows * distance * 2'                                       Length = columns * distance * 2                                   };
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var seasurface = new RectangleVisual3D                                   {                                       DivWidth = 100'                                       DivLength = 100'                                       Origin = new Point3D((rows - 2) * distance * 0.5' (columns) * distance * 0.5' 0)'                                       Width = rows * distance * 2'                                       Length = columns * distance * 2                                   };
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var seasurface = new RectangleVisual3D                                   {                                       DivWidth = 100'                                       DivLength = 100'                                       Origin = new Point3D((rows - 2) * distance * 0.5' (columns) * distance * 0.5' 0)'                                       Width = rows * distance * 2'                                       Length = columns * distance * 2                                   };
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: var seasurface = new RectangleVisual3D                                   {                                       DivWidth = 100'                                       DivLength = 100'                                       Origin = new Point3D((rows - 2) * distance * 0.5' (columns) * distance * 0.5' 0)'                                       Width = rows * distance * 2'                                       Length = columns * distance * 2                                   };
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: seasurface.Material = seasurface.BackMaterial = MaterialHelper.CreateMaterial(Colors.SeaGreen' 0.8);
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,HeadTracking,The following statement contains a magic number: mx = (p0.X + p1.X) * 0.5;
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,HeadTracking,The following statement contains a magic number: my = (p0.Y + p1.Y) * 0.5;
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,HeadTracking,The following statement contains a magic number: scale = d / 200.0;
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,HeadTracking,The following statement contains a magic number: double theta = 20.0 * (mx - 512) / 512;
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,HeadTracking,The following statement contains a magic number: double theta = 20.0 * (mx - 512) / 512;
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,HeadTracking,The following statement contains a magic number: double theta = 20.0 * (mx - 512) / 512;
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,HeadTracking,The following statement contains a magic number: double phi = 20.0 * (my - 384) / 384;
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,HeadTracking,The following statement contains a magic number: double phi = 20.0 * (my - 384) / 384;
Magic Number,WindDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\MainWindow.xaml.cs,HeadTracking,The following statement contains a magic number: double phi = 20.0 * (my - 384) / 384;
Magic Number,WindDemo,WindTurbine,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbine.cs,WindTurbine,The following statement contains a magic number: BladeLength = 40;
Magic Number,WindDemo,WindTurbine,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbine.cs,WindTurbine,The following statement contains a magic number: Height = 70;
Magic Number,WindDemo,WindTurbine,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbine.cs,WindTurbine,The following statement contains a magic number: BaseHeight = 20;
Magic Number,WindDemo,WindTurbine,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbine.cs,WindTurbine,The following statement contains a magic number: HubDiameter = 3;
Magic Number,WindDemo,WindTurbine,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbine.cs,WindTurbine,The following statement contains a magic number: Diameter = 4;
Magic Number,WindDemo,WindTurbine,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbine.cs,WindTurbine,The following statement contains a magic number: Overhang = 5;
Magic Number,WindDemo,WindTurbine,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbine.cs,WindTurbine,The following statement contains a magic number: NacelleLength = 8;
Magic Number,WindDemo,WindTurbine,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbine.cs,WindTurbine,The following statement contains a magic number: NacelleDiameter = 2;
Magic Number,WindDemo,WindTurbine,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbine.cs,WindTurbine,The following statement contains a magic number: BladeTipChord = 0.2;
Magic Number,WindDemo,WindTurbine,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbine.cs,WindTurbine,The following statement contains a magic number: Blades = 3;
Magic Number,WindDemo,WindTurbine,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbine.cs,WindTurbine,The following statement contains a magic number: ShaftAngle = 0.5;
Magic Number,WindDemo,WindTurbine,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbine.cs,WindTurbine,The following statement contains a magic number: Pre = -2.5;
Magic Number,WindDemo,WindTurbineVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbineVisual3D.cs,OnCompositionTargetRendering,The following statement contains a magic number: double delta = watch.ElapsedMilliseconds * 0.001;
Magic Number,WindDemo,WindTurbineVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbineVisual3D.cs,OnCompositionTargetRendering,The following statement contains a magic number: RotationAngle += 360 * RotationSpeed / 60 * delta;
Magic Number,WindDemo,WindTurbineVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbineVisual3D.cs,OnCompositionTargetRendering,The following statement contains a magic number: RotationAngle += 360 * RotationSpeed / 60 * delta;
Magic Number,WindDemo,WindTurbineVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbineVisual3D.cs,UpdateVisuals,The following statement contains a magic number: baseTower.Height = -baseTower.Origin.Z + 2;
Magic Number,WindDemo,WindTurbineVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbineVisual3D.cs,UpdateVisuals,The following statement contains a magic number: var tower = new TruncatedConeVisual3D                              {                                  Fill = Brushes.White'                                  Origin = new Point3D(0' 0' 2)'                                  Height = WindTurbine.Height'                                  BaseRadius = WindTurbine.Diameter                              };
Magic Number,WindDemo,WindTurbineVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbineVisual3D.cs,UpdateVisuals,The following statement contains a magic number: tower.TopRadius = tower.BaseRadius * (1 - WindTurbine.Height * Math.Sin(WindTurbine.ShaftAngle / 180.0 * Math.PI));
Magic Number,WindDemo,WindTurbineVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbineVisual3D.cs,UpdateVisuals,The following statement contains a magic number: nacelle.BaseRadius = nacelle.TopRadius * 0.7;
Magic Number,WindDemo,WindTurbineVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbineVisual3D.cs,UpdateVisuals,The following statement contains a magic number: double angle = (double)i / WindTurbine.Blades * Math.PI * 2;
Magic Number,WindDemo,WindTurbineVisual3D,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wind\WindTurbineVisual3D.cs,UpdateVisuals,The following statement contains a magic number: var hub = new SphereVisual3D                            {                                Fill = Brushes.White'                                Center = nacelle.Origin'                                Radius = WindTurbine.HubDiameter / 2                            };
Missing Default,ExampleBrowser,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.ListBox)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.ListBoxMouseDoubleClick);                            #line default              #line hidden              return;              }
Missing Default,MemoryLeakTest,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\MemoryLeakTest\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 6 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Open1Click);                            #line default              #line hidden              return;              case 2:                            #line 7 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Open2Click);                            #line default              #line hidden              return;              case 3:                            #line 8 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Open3Click);                            #line default              #line hidden              return;              case 4:                            #line 9 "..\..\..\..\..\Examples\MemoryLeakTest\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CollectClick);                            #line default              #line hidden              return;              }
Missing Default,PolyhedronDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Polyhedron\MainViewModel.cs,CreateModel,The following switch statement is missing a default case: switch (CurrentModelType)              {                  case ModelTypes.Tetrahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          break;                      }                    case ModelTypes.Octahedron:                      {                          double a = 1.0 / (2 * Math.Sqrt(2));                          double b = 0.5;                          pmb.AddPanel(-a' 0' a' -a' 0' -a' 0' b' 0);                          pmb.AddPanel(-a' 0' -a' a' 0' -a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' a' -a' 0' a' 0' b' 0);                          pmb.AddPanel(a' 0' -a' -a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' -a' -a' 0' a' 0' -b' 0);                          pmb.AddPanel(a' 0' a' a' 0' -a' 0' -b' 0);                          pmb.AddPanel(-a' 0' a' a' 0' a' 0' -b' 0);                          break;                      }                  case ModelTypes.Hexahedron:                      {                          double a = 0.5;                          pmb.AddPanel(-a' -a' a' a' -a' a' a' -a' -a' -a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' a' a' -a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' a' a' a' a' -a' a' -a' -a' a);                          pmb.AddPanel(a' a' -a' a' a' a' -a' a' a' -a' a' -a);                          pmb.AddPanel(a' -a' a' a' a' a' a' a' -a' a' -a' -a);                          pmb.AddPanel(a' -a' -a' a' a' -a' -a' a' -a' -a' -a' -a);                          break;                      }                  case ModelTypes.Icosahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 1.0 / (2 * phi);                          pmb.AddPanel(0' b' -a' b' a' 0' -b' a' 0);                          pmb.AddPanel(0' b' a' -b' a' 0' b' a' 0);                          pmb.AddPanel(0' b' a' 0' -b' a' -a' 0' b);                          pmb.AddPanel(0' b' a' a' 0' b' 0' -b' a);                          pmb.AddPanel(0' b' -a' 0' -b' -a' a' 0' -b);                          pmb.AddPanel(0' b' -a' -a' 0' -b' 0' -b' -a);                          pmb.AddPanel(0' -b' a' b' -a' 0' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' -b' -a' 0' b' -a' 0);                          pmb.AddPanel(-b' a' 0' -a' 0' b' -a' 0' -b);                          pmb.AddPanel(-b' -a' 0' -a' 0' -b' -a' 0' b);                          pmb.AddPanel(b' a' 0' a' 0' -b' a' 0' b);                          pmb.AddPanel(b' -a' 0' a' 0' b' a' 0' -b);                          pmb.AddPanel(0' b' a' -a' 0' b' -b' a' 0);                          pmb.AddPanel(0' b' a' b' a' 0' a' 0' b);                          pmb.AddPanel(0' b' -a' -b' a' 0' -a' 0' -b);                          pmb.AddPanel(0' b' -a' a' 0' -b' b' a' 0);                          pmb.AddPanel(0' -b' -a' -a' 0' -b' -b' -a' 0);                          pmb.AddPanel(0' -b' -a' b' -a' 0' a' 0' -b);                          pmb.AddPanel(0' -b' a' -b' -a' 0' -a' 0' b);                          pmb.AddPanel(0' -b' a' a' 0' b' b' -a' 0);                          break;                      }                  case ModelTypes.Dodecahedron:                      {                          double phi = (1 + Math.Sqrt(5)) / 2;                          double a = 0.5;                          double b = 0.5 / phi;                          double c = 0.5 * (2 - phi);                          pmb.AddPanel(c' 0' a' -c' 0' a' -b' b' b' 0' a' c' b' b' b);                          pmb.AddPanel(-c' 0' a' c' 0' a' b' -b' b' 0' -a' c' -b' -b' b);                          pmb.AddPanel(c' 0' -a' -c' 0' -a' -b' -b' -b' 0' -a' -c' b' -b' -b);                          pmb.AddPanel(-c' 0' -a' c' 0' -a' b' b' -b' 0' a' -c' -b' b' -b);                          pmb.AddPanel(b' b' -b' a' c' 0' b' b' b' 0' a' c' 0' a' -c);                            pmb.AddPanel(-b' b' b' -a' c' 0' -b' b' -b' 0' a' -c' 0' a' c);                          pmb.AddPanel(-b' -b' -b' -a' -c' 0' -b' -b' b' 0' -a' c' 0' -a' -c);                            pmb.AddPanel(b' -b' b' a' -c' 0' b' -b' -b' 0' -a' -c' 0' -a' c);                          pmb.AddPanel(a' c' 0' a' -c' 0' b' -b' b' c' 0' a' b' b' b);                          pmb.AddPanel(a' -c' 0' a' c' 0' b' b' -b' c' 0' -a' b' -b' -b);                          pmb.AddPanel(-a' c' 0' -a' -c' 0' -b' -b' -b' -c' 0' -a' -b' b' -b);                          pmb.AddPanel(-a' -c' 0' -a' c' 0' -b' b' b' -c' 0' a' -b' -b' b);                          break;                      }                  case ModelTypes.StellatedOctahedron:                      {                          double a = 0.5;                          pmb.AddPanel(a' a' a' -a' a' -a' a' -a' -a);                          pmb.AddPanel(-a' a' -a' -a' -a' a' a' -a' -a);                          pmb.AddPanel(a' a' a' a' -a' -a' -a' -a' a);                          pmb.AddPanel(a' a' a' -a' -a' a' -a' a' -a);                          pmb.AddPanel(-a' a' a' a' a' -a' -a' -a' -a);                          pmb.AddPanel(a' a' -a' a' -a' a' -a' -a' -a);                          pmb.AddPanel(-a' a' a' -a' -a' -a' a' -a' a);                          pmb.AddPanel(-a' a' a' a' -a' a' a' a' -a);                          break;                      }                }
Missing Default,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,IsOutsideFace,The following switch statement is missing a default case: switch (face)              {                  case 0:                      return i == 0;                  case 1:                      return i == Size - 1;                  case 2:                      return j == 0;                  case 3:                      return j == Size - 1;                  case 4:                      return k == 0;                  case 5:                      return k == Size - 1;              }
Missing Default,RubikDemo,RubikCube,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Rubik\RubikCube.cs,CreateFace,The following switch statement is missing a default case: switch (face)              {                  case 0:                      b.AddCubeFace(center' new Vector3D(-1' 0' 0)' new Vector3D(0' 0' 1)' length' width' height);                      break;                  case 1:                      b.AddCubeFace(center' new Vector3D(1' 0' 0)' new Vector3D(0' 0' -1)' length' width' height);                      break;                  case 2:                      b.AddCubeFace(center' new Vector3D(0' -1' 0)' new Vector3D(0' 0' 1)' width' length' height);                      break;                  case 3:                      b.AddCubeFace(center' new Vector3D(0' 1' 0)' new Vector3D(0' 0' -1)' width' length' height);                      break;                  case 4:                      b.AddCubeFace(center' new Vector3D(0' 0' -1)' new Vector3D(0' 1' 0)' height' length' width);                      break;                  case 5:                      b.AddCubeFace(center' new Vector3D(0' 0' 1)' new Vector3D(0' -1' 0)' height' length' width);                      break;              }
Missing Default,SurfacePlotDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\SurfacePlot\MainViewModel.cs,UpdateModel,The following switch statement is missing a default case: switch (ColorCoding)              {                  case ColorCoding.ByGradientY:                      ColorValues = FindGradientY(Data);                      break;                  case ColorCoding.ByLights:                      ColorValues = null;                      break;              }
Missing Default,VoxelDemo,MainWindow,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Voxels\MainWindow.xaml.cs,OnKeyDown,The following switch statement is missing a default case: switch (e.Key)              {                  case Key.Space:                      vm.PaletteIndex++;                      vm.CurrentColor = vm.GetPaletteColor();                      break;                  case Key.A:                      view1.ZoomExtents(500);                      break;                  case Key.C:                      vm.Clear();                      break;              }
Missing Default,WiiDemo,MouseHelper,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF\ExampleBrowser\Examples\Wii\MouseHelper.cs,SimulateMouseEvent,The following switch statement is missing a default case: switch (button)              {                  case MouseButton.Left:                      if (state == MouseButtonState.Pressed)                          mouse_event(MOUSEEVENTF_LEFTDOWN' x' y' 0' 0);                      else                          mouse_event(MOUSEEVENTF_LEFTUP' x' y' 0' 0);                      break;                  case MouseButton.Middle:                      if (state == MouseButtonState.Pressed)                          mouse_event(MOUSEEVENTF_MIDDLEDOWN' x' y' 0' 0);                      else                          mouse_event(MOUSEEVENTF_MIDDLEUP' x' y' 0' 0);                      break;                  case MouseButton.Right:                      if (state == MouseButtonState.Pressed)                          mouse_event(MOUSEEVENTF_RIGHTDOWN' x' y' 0' 0);                      else                          mouse_event(MOUSEEVENTF_RIGHTUP' x' y' 0' 0);                      break;              }
