Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,OnAnimatedChanged,The length of the statement  "                this.LightDirectionTransform = CreateAnimatedTransform(-DirectionalLightDirection.ToVector3D()' new Vector3D(0' 1' -1)' 24); " is 124.
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.LightDirectionTransform = CreateAnimatedTransform(-DirectionalLightDirection.ToVector3D()' new Vector3D(0' 1' -1)' 24);
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.ShadowMapResolution = new Vector2(2048' 2048);
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.ShadowMapResolution = new Vector2(2048' 2048);
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: b1.AddSphere(new Vector3(0' 0' 0)' 0.5);
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: b1.AddBox(new Vector3(0' 0' 0)' 1' 0.25' 2' BoxFaces.All);
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: b1.AddBox(new Vector3(0' 0' 0)' 1' 0.25' 2' BoxFaces.All);
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: b2.AddBox(new Vector3(0' 0' 0)' 10' 0' 10' BoxFaces.PositiveY);
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: b2.AddBox(new Vector3(0' 0' 0)' 10' 0' 10' BoxFaces.PositiveY);
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: PlaneTransform = new Media3D.TranslateTransform3D(-0' -2' -0);
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Model2Transform = new Media3D.TranslateTransform3D(-2' 0' 0);
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: Model3Transform = new Media3D.TranslateTransform3D(+2' 0' 0);
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,SetXValue,The following statement contains a magic number: this.LightDirectionTransform = new Media3D.TranslateTransform3D(x' -10' 10);
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,SetXValue,The following statement contains a magic number: this.LightDirectionTransform = new Media3D.TranslateTransform3D(x' -10' 10);
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,CreateAnimatedTransform,The following statement contains a magic number: var rotateAnimation = new Rotation3DAnimation              {                  RepeatBehavior = RepeatBehavior.Forever'                  //By = new Media3D.AxisAngleRotation3D(axis' 180)'                  From = new Media3D.AxisAngleRotation3D(axis' 135)'                  To = new Media3D.AxisAngleRotation3D(axis' 225)'                  AutoReverse = true'                  Duration = TimeSpan.FromSeconds(speed / 4)'                  //IsCumulative = true'                                };
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,CreateAnimatedTransform,The following statement contains a magic number: var rotateAnimation = new Rotation3DAnimation              {                  RepeatBehavior = RepeatBehavior.Forever'                  //By = new Media3D.AxisAngleRotation3D(axis' 180)'                  From = new Media3D.AxisAngleRotation3D(axis' 135)'                  To = new Media3D.AxisAngleRotation3D(axis' 225)'                  AutoReverse = true'                  Duration = TimeSpan.FromSeconds(speed / 4)'                  //IsCumulative = true'                                };
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,CreateAnimatedTransform,The following statement contains a magic number: var rotateAnimation = new Rotation3DAnimation              {                  RepeatBehavior = RepeatBehavior.Forever'                  //By = new Media3D.AxisAngleRotation3D(axis' 180)'                  From = new Media3D.AxisAngleRotation3D(axis' 135)'                  To = new Media3D.AxisAngleRotation3D(axis' 225)'                  AutoReverse = true'                  Duration = TimeSpan.FromSeconds(speed / 4)'                  //IsCumulative = true'                                };
Magic Number,ShadowMapDemo,MainViewModel,C:\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\ShadowMapDemo\MainViewModel.cs,OnAnimatedChanged,The following statement contains a magic number: if (value)              {                  this.LightDirectionTransform = CreateAnimatedTransform(-DirectionalLightDirection.ToVector3D()' new Vector3D(0' 1' -1)' 24);              }              else              {                  this.LightDirectionTransform = Media3D.Transform3D.Identity;              }
