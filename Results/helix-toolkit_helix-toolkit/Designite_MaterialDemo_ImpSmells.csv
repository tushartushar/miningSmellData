Implementation smell,Namespace,Class,File,Method,Description
Long Method,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,AttachModelList,The method has 106 lines of code.
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(-30' 30' -30)' LookDirection = new Vector3D(30' -30' 30)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(-30' 30' -30)' LookDirection = new Vector3D(30' -30' 30)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(-30' 30' -30)' LookDirection = new Vector3D(30' -30' 30)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(-30' 30' -30)' LookDirection = new Vector3D(30' -30' 30)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(-30' 30' -30)' LookDirection = new Vector3D(30' -30' 30)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(-30' 30' -30)' LookDirection = new Vector3D(30' -30' 30)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: builder.AddBox(new Vector3(0' -6' 0)' 200' 2' 100);
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: builder.AddBox(new Vector3(0' -6' 0)' 200' 2' 100);
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: builder.AddBox(new Vector3(0' -6' 0)' 200' 2' 100);
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: builder.AddBox(new Vector3(0' -6' 0)' 200' 2' 100);
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: builder.AddSphere(Vector3.Zero' 2);
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: ColorStripeMaterial.ColorStripeX = GetGradients(new Color4(1' 0' 0' 1)' new Color4(0' 1' 0' 1)' new Color4(0' 0' 1' 1)' 48).ToList();
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: ColorStripeMaterial.ColorStripeY = GetGradients(new Color4(1' 1' 0' 1)' new Color4(0' 1' 1' 1)' new Color4(1' 0' 1' 1)' 48).ToList();
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: MeshTitles.TextInfo.Add(new TextInfo("Blinn"' Transform1.ToVector3()) { Scale = 0.08f' Background = new Color4(1'1'1'1) });
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: MeshTitles.TextInfo.Add(new TextInfo("Normal"' Transform2.ToVector3()) { Scale = 0.08f' Background = new Color4(1' 1' 1' 1) });
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: MeshTitles.TextInfo.Add(new TextInfo("Diffuse"' Transform3.ToVector3()) { Scale = 0.08f' Background = new Color4(1' 1' 1' 1) });
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: MeshTitles.TextInfo.Add(new TextInfo("Position"' Transform4.ToVector3()) { Scale = 0.08f' Background = new Color4(1' 1' 1' 1) });
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: MeshTitles.TextInfo.Add(new TextInfo("VertexColor"' Transform5.ToVector3()) { Scale = 0.08f' Background = new Color4(1' 1' 1' 1) });
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: MeshTitles.TextInfo.Add(new TextInfo("ColorStripe"' Transform6.ToVector3()) { Scale = 0.08f' Background = new Color4(1' 1' 1' 1) });
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: MeshTitles.TextInfo.Add(new TextInfo("PBR"' Transform7.ToVector3()) { Scale = 0.08f' Background = new Color4(1' 1' 1' 1) });
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,AttachModelList,The following statement contains a magic number: context.Post((o) =>                  {                      var scaleTransform = new Media3D.ScaleTransform3D(15' 15' 15);                      var s = new MeshGeometryModel3D                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Transform = scaleTransform                      };                        var diffuseMaterial = new DiffuseMaterial();                      PBRMaterial pbrMaterial = null;                      if (ob.Material is PhongMaterialCore p)                      {                          var phong = p.ConvertToPhongMaterial();                          phong.RenderEnvironmentMap = true;                          phong.RenderShadowMap = true;                          phong.RenderSpecularColorMap = false;                          s.Material = phong;                          diffuseMaterial.DiffuseColor = p.DiffuseColor;                          diffuseMaterial.DiffuseMap = p.DiffuseMap;                          pbrMaterial = new PBRMaterial()                          {                              AlbedoColor = p.DiffuseColor'                              AlbedoMap = p.DiffuseMap'                              NormalMap = p.NormalMap'                              RoughnessMetallicMap = p.SpecularColorMap'                              AmbientOcculsionMap = p.SpecularColorMap'                              RenderShadowMap = true'                              RenderEnvironmentMap=true'                              MetallicFactor = 1' // Set to 1 if using RMA Map                              RoughnessFactor = 1 // Set to 1 if using RMA Map                          };                                            }                      //if (ob.Transform != null && ob.Transform.Count > 0)                      //{                      //    s.Instances = ob.Transform;                      //}                      this.Model1.Add(s);                        Model2.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = NormalMaterial'                          Transform = scaleTransform                      });                        ModelNormalVector.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = NormalVectorMaterial'                          Transform = scaleTransform                      });                      Model3.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = diffuseMaterial'                          Transform = scaleTransform                      });                        Model4.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = PositionMaterial'                          Transform = scaleTransform                      });                        Model5.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = VertMaterial'                          Transform = scaleTransform                      });                        Model6.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = ColorStripeMaterial'                          Transform = scaleTransform                      });                        Model7.Add(new MeshGeometryModel3D                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Transform = scaleTransform'                          Material = pbrMaterial                      });                  }' null);
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,AttachModelList,The following statement contains a magic number: context.Post((o) =>                  {                      var scaleTransform = new Media3D.ScaleTransform3D(15' 15' 15);                      var s = new MeshGeometryModel3D                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Transform = scaleTransform                      };                        var diffuseMaterial = new DiffuseMaterial();                      PBRMaterial pbrMaterial = null;                      if (ob.Material is PhongMaterialCore p)                      {                          var phong = p.ConvertToPhongMaterial();                          phong.RenderEnvironmentMap = true;                          phong.RenderShadowMap = true;                          phong.RenderSpecularColorMap = false;                          s.Material = phong;                          diffuseMaterial.DiffuseColor = p.DiffuseColor;                          diffuseMaterial.DiffuseMap = p.DiffuseMap;                          pbrMaterial = new PBRMaterial()                          {                              AlbedoColor = p.DiffuseColor'                              AlbedoMap = p.DiffuseMap'                              NormalMap = p.NormalMap'                              RoughnessMetallicMap = p.SpecularColorMap'                              AmbientOcculsionMap = p.SpecularColorMap'                              RenderShadowMap = true'                              RenderEnvironmentMap=true'                              MetallicFactor = 1' // Set to 1 if using RMA Map                              RoughnessFactor = 1 // Set to 1 if using RMA Map                          };                                            }                      //if (ob.Transform != null && ob.Transform.Count > 0)                      //{                      //    s.Instances = ob.Transform;                      //}                      this.Model1.Add(s);                        Model2.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = NormalMaterial'                          Transform = scaleTransform                      });                        ModelNormalVector.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = NormalVectorMaterial'                          Transform = scaleTransform                      });                      Model3.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = diffuseMaterial'                          Transform = scaleTransform                      });                        Model4.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = PositionMaterial'                          Transform = scaleTransform                      });                        Model5.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = VertMaterial'                          Transform = scaleTransform                      });                        Model6.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = ColorStripeMaterial'                          Transform = scaleTransform                      });                        Model7.Add(new MeshGeometryModel3D                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Transform = scaleTransform'                          Material = pbrMaterial                      });                  }' null);
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,AttachModelList,The following statement contains a magic number: context.Post((o) =>                  {                      var scaleTransform = new Media3D.ScaleTransform3D(15' 15' 15);                      var s = new MeshGeometryModel3D                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Transform = scaleTransform                      };                        var diffuseMaterial = new DiffuseMaterial();                      PBRMaterial pbrMaterial = null;                      if (ob.Material is PhongMaterialCore p)                      {                          var phong = p.ConvertToPhongMaterial();                          phong.RenderEnvironmentMap = true;                          phong.RenderShadowMap = true;                          phong.RenderSpecularColorMap = false;                          s.Material = phong;                          diffuseMaterial.DiffuseColor = p.DiffuseColor;                          diffuseMaterial.DiffuseMap = p.DiffuseMap;                          pbrMaterial = new PBRMaterial()                          {                              AlbedoColor = p.DiffuseColor'                              AlbedoMap = p.DiffuseMap'                              NormalMap = p.NormalMap'                              RoughnessMetallicMap = p.SpecularColorMap'                              AmbientOcculsionMap = p.SpecularColorMap'                              RenderShadowMap = true'                              RenderEnvironmentMap=true'                              MetallicFactor = 1' // Set to 1 if using RMA Map                              RoughnessFactor = 1 // Set to 1 if using RMA Map                          };                                            }                      //if (ob.Transform != null && ob.Transform.Count > 0)                      //{                      //    s.Instances = ob.Transform;                      //}                      this.Model1.Add(s);                        Model2.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = NormalMaterial'                          Transform = scaleTransform                      });                        ModelNormalVector.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = NormalVectorMaterial'                          Transform = scaleTransform                      });                      Model3.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = diffuseMaterial'                          Transform = scaleTransform                      });                        Model4.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = PositionMaterial'                          Transform = scaleTransform                      });                        Model5.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = VertMaterial'                          Transform = scaleTransform                      });                        Model6.Add(new MeshGeometryModel3D()                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Material = ColorStripeMaterial'                          Transform = scaleTransform                      });                        Model7.Add(new MeshGeometryModel3D                      {                          Geometry = ob.Geometry'                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          IsThrowingShadow = true'                          Transform = scaleTransform'                          Material = pbrMaterial                      });                  }' null);
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,GetGradients,The following statement contains a magic number: return GetGradients(start' mid' steps / 2).Concat(GetGradients(mid' end' steps / 2));
Magic Number,MaterialDemo,MainViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\MainViewModel.cs,GetGradients,The following statement contains a magic number: return GetGradients(start' mid' steps / 2).Concat(GetGradients(mid' end' steps / 2));
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(0' 60' 60)' LookDirection = new Vector3D(0' -60' -60)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(0' 60' 60)' LookDirection = new Vector3D(0' -60' -60)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(0' 60' 60)' LookDirection = new Vector3D(0' -60' -60)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: this.Camera = new PerspectiveCamera { Position = new Point3D(0' 60' 60)' LookDirection = new Vector3D(0' -60' -60)' UpDirection = new Vector3D(0' 1' 0) };
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: builder.AddSphere(Vector3.Zero' 2);
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: var m = new PBRMaterial()                      {                          AlbedoColor = albedoColor.ToColor4()'                          RoughnessFactor = 1.0 / (2 * Row) * Math.Abs(i + Row)'                          MetallicFactor = 1.0 / (2 * Col) * Math.Abs(j + Col)'                          RenderEnvironmentMap = true'                          EnableAutoTangent = true'                          NormalMap = normalMap'                          RenderShadowMap = true                      };
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: var m = new PBRMaterial()                      {                          AlbedoColor = albedoColor.ToColor4()'                          RoughnessFactor = 1.0 / (2 * Row) * Math.Abs(i + Row)'                          MetallicFactor = 1.0 / (2 * Col) * Math.Abs(j + Col)'                          RenderEnvironmentMap = true'                          EnableAutoTangent = true'                          NormalMap = normalMap'                          RenderShadowMap = true                      };
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: Models.Add(new MeshGeometryModel3D()                      {                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          Geometry = SphereModel'                          Material = m'                          IsThrowingShadow = true'                          Transform = new Media3D.TranslateTransform3D(new Vector3D(i * 6' 0' j * 6))                      });
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: Models.Add(new MeshGeometryModel3D()                      {                          CullMode = SharpDX.Direct3D11.CullMode.Back'                          Geometry = SphereModel'                          Material = m'                          IsThrowingShadow = true'                          Transform = new Media3D.TranslateTransform3D(new Vector3D(i * 6' 0' j * 6))                      });
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: builder.AddSphere(Vector3.Zero' 8' 12' 12);
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: builder.AddSphere(Vector3.Zero' 8' 12' 12);
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: builder.AddSphere(Vector3.Zero' 8' 12' 12);
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: Material = new PBRMaterial()              {                  AlbedoColor = albedoColor.ToColor4()'                  RenderEnvironmentMap = true'                  AlbedoMap = LoadFileToMemory("Engraved_Metal_COLOR.jpg")'                  NormalMap = LoadFileToMemory("Engraved_Metal_NORM.jpg")'                  DisplacementMap = LoadFileToMemory("Engraved_Metal_DISP.png")'                  RoughnessMetallicMap = LoadFileToMemory("Engraved_Metal_RMC.png")'                  DisplacementMapScaleMask = new Vector4(0.1f' 0.1f' 0.1f' 0)'                  EnableAutoTangent =true' EnableTessellation = true' MaxDistanceTessellationFactor = 2' MinDistanceTessellationFactor = 4              };
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: Material = new PBRMaterial()              {                  AlbedoColor = albedoColor.ToColor4()'                  RenderEnvironmentMap = true'                  AlbedoMap = LoadFileToMemory("Engraved_Metal_COLOR.jpg")'                  NormalMap = LoadFileToMemory("Engraved_Metal_NORM.jpg")'                  DisplacementMap = LoadFileToMemory("Engraved_Metal_DISP.png")'                  RoughnessMetallicMap = LoadFileToMemory("Engraved_Metal_RMC.png")'                  DisplacementMapScaleMask = new Vector4(0.1f' 0.1f' 0.1f' 0)'                  EnableAutoTangent =true' EnableTessellation = true' MaxDistanceTessellationFactor = 2' MinDistanceTessellationFactor = 4              };
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: Material = new PBRMaterial()              {                  AlbedoColor = albedoColor.ToColor4()'                  RenderEnvironmentMap = true'                  AlbedoMap = LoadFileToMemory("Engraved_Metal_COLOR.jpg")'                  NormalMap = LoadFileToMemory("Engraved_Metal_NORM.jpg")'                  DisplacementMap = LoadFileToMemory("Engraved_Metal_DISP.png")'                  RoughnessMetallicMap = LoadFileToMemory("Engraved_Metal_RMC.png")'                  DisplacementMapScaleMask = new Vector4(0.1f' 0.1f' 0.1f' 0)'                  EnableAutoTangent =true' EnableTessellation = true' MaxDistanceTessellationFactor = 2' MinDistanceTessellationFactor = 4              };
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: Material = new PBRMaterial()              {                  AlbedoColor = albedoColor.ToColor4()'                  RenderEnvironmentMap = true'                  AlbedoMap = LoadFileToMemory("Engraved_Metal_COLOR.jpg")'                  NormalMap = LoadFileToMemory("Engraved_Metal_NORM.jpg")'                  DisplacementMap = LoadFileToMemory("Engraved_Metal_DISP.png")'                  RoughnessMetallicMap = LoadFileToMemory("Engraved_Metal_RMC.png")'                  DisplacementMapScaleMask = new Vector4(0.1f' 0.1f' 0.1f' 0)'                  EnableAutoTangent =true' EnableTessellation = true' MaxDistanceTessellationFactor = 2' MinDistanceTessellationFactor = 4              };
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: Material = new PBRMaterial()              {                  AlbedoColor = albedoColor.ToColor4()'                  RenderEnvironmentMap = true'                  AlbedoMap = LoadFileToMemory("Engraved_Metal_COLOR.jpg")'                  NormalMap = LoadFileToMemory("Engraved_Metal_NORM.jpg")'                  DisplacementMap = LoadFileToMemory("Engraved_Metal_DISP.png")'                  RoughnessMetallicMap = LoadFileToMemory("Engraved_Metal_RMC.png")'                  DisplacementMapScaleMask = new Vector4(0.1f' 0.1f' 0.1f' 0)'                  EnableAutoTangent =true' EnableTessellation = true' MaxDistanceTessellationFactor = 2' MinDistanceTessellationFactor = 4              };
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: ModelTransform = new Media3D.MatrixTransform3D(Matrix.Translation(0' 30' 0).ToMatrix3D());
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: builder.AddBox(Vector3.Zero' 100' 0.5' 100);
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: builder.AddBox(Vector3.Zero' 100' 0.5' 100);
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: builder.AddBox(Vector3.Zero' 100' 0.5' 100);
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: floorGeo.TextureCoordinates[i] *= 5;
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: FloorMaterial = new PBRMaterial()              {                  AlbedoMap = LoadFileToMemory("Wood_Planks_COLOR.jpg")'                  NormalMap = LoadFileToMemory("Wood_Planks_NORM.jpg")'                  DisplacementMap = LoadFileToMemory("Wood_Planks_DISP.png")'                  RoughnessMetallicMap = LoadFileToMemory("Wood_Planks_RMA.png")'                  AmbientOcculsionMap = LoadFileToMemory("Wood_Planks_RMA.png")'                  DisplacementMapScaleMask = new Vector4(1f' 1f' 1f' 0)'                  RoughnessFactor = 0.8'                  MetallicFactor = 0.2'                                  RenderShadowMap = true'                  EnableAutoTangent = true'              };
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: FloorMaterial = new PBRMaterial()              {                  AlbedoMap = LoadFileToMemory("Wood_Planks_COLOR.jpg")'                  NormalMap = LoadFileToMemory("Wood_Planks_NORM.jpg")'                  DisplacementMap = LoadFileToMemory("Wood_Planks_DISP.png")'                  RoughnessMetallicMap = LoadFileToMemory("Wood_Planks_RMA.png")'                  AmbientOcculsionMap = LoadFileToMemory("Wood_Planks_RMA.png")'                  DisplacementMapScaleMask = new Vector4(1f' 1f' 1f' 0)'                  RoughnessFactor = 0.8'                  MetallicFactor = 0.2'                                  RenderShadowMap = true'                  EnableAutoTangent = true'              };
Magic Number,MaterialDemo,PBRViewModel,D:\research\architectureSmells\repos\helix-toolkit_helix-toolkit\Source\Examples\WPF.SharpDX\MaterialDemo\PBRViewModel.cs,PBRViewModel,The following statement contains a magic number: FloorModelTransform = new Media3D.MatrixTransform3D(Matrix.Translation(0' -5' 0).ToMatrix3D());
