Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,UpdateOptions,Cyclomatic complexity of the method is 11
Complex Method,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,ReadTankInputs,Cyclomatic complexity of the method is 11
Long Parameter List,NetworkPrediction,Tank,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\Tank.cs,ReadNetworkPacket,The method has 5 parameters. Parameters: packetReader' gameTime' latency' enablePrediction' enableSmoothing
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,ReadIncomingPackets,The following statement contains a magic number: TimeSpan latency = networkSession.SimulatedLatency +                                     TimeSpan.FromTicks(sender.RoundtripTime.Ticks / 2);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,UpdateOptions,The following statement contains a magic number: framesBetweenPackets = 3;
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,UpdateOptions,The following statement contains a magic number: framesBetweenPackets == 6
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,UpdateOptions,The following statement contains a magic number: networkSession.SessionProperties[2] = enablePrediction ? 1 : 0;
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,UpdateOptions,The following statement contains a magic number: networkSession.SessionProperties[3] = enableSmoothing ? 1 : 0;
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,UpdateOptions,The following statement contains a magic number: switch (networkQuality)              {                  case NetworkQuality.Typical:                      networkSession.SimulatedLatency = TimeSpan.FromMilliseconds(100);                      networkSession.SimulatedPacketLoss = 0.1f;                      break;                    case NetworkQuality.Poor:                      networkSession.SimulatedLatency = TimeSpan.FromMilliseconds(200);                      networkSession.SimulatedPacketLoss = 0.2f;                      break;                    case NetworkQuality.Perfect:                      networkSession.SimulatedLatency = TimeSpan.Zero;                      networkSession.SimulatedPacketLoss = 0;                      break;              }
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,UpdateOptions,The following statement contains a magic number: switch (networkQuality)              {                  case NetworkQuality.Typical:                      networkSession.SimulatedLatency = TimeSpan.FromMilliseconds(100);                      networkSession.SimulatedPacketLoss = 0.1f;                      break;                    case NetworkQuality.Poor:                      networkSession.SimulatedLatency = TimeSpan.FromMilliseconds(200);                      networkSession.SimulatedPacketLoss = 0.2f;                      break;                    case NetworkQuality.Perfect:                      networkSession.SimulatedLatency = TimeSpan.Zero;                      networkSession.SimulatedPacketLoss = 0;                      break;              }
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,UpdateOptions,The following statement contains a magic number: switch (networkQuality)              {                  case NetworkQuality.Typical:                      networkSession.SimulatedLatency = TimeSpan.FromMilliseconds(100);                      networkSession.SimulatedPacketLoss = 0.1f;                      break;                    case NetworkQuality.Poor:                      networkSession.SimulatedLatency = TimeSpan.FromMilliseconds(200);                      networkSession.SimulatedPacketLoss = 0.2f;                      break;                    case NetworkQuality.Perfect:                      networkSession.SimulatedLatency = TimeSpan.Zero;                      networkSession.SimulatedPacketLoss = 0;                      break;              }
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,UpdateOptions,The following statement contains a magic number: switch (networkQuality)              {                  case NetworkQuality.Typical:                      networkSession.SimulatedLatency = TimeSpan.FromMilliseconds(100);                      networkSession.SimulatedPacketLoss = 0.1f;                      break;                    case NetworkQuality.Poor:                      networkSession.SimulatedLatency = TimeSpan.FromMilliseconds(200);                      networkSession.SimulatedPacketLoss = 0.2f;                      break;                    case NetworkQuality.Perfect:                      networkSession.SimulatedLatency = TimeSpan.Zero;                      networkSession.SimulatedPacketLoss = 0;                      break;              }
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawMenuScreen,The following statement contains a magic number: spriteBatch.DrawString(font' message' new Vector2(161' 161)' Color.Black);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawMenuScreen,The following statement contains a magic number: spriteBatch.DrawString(font' message' new Vector2(161' 161)' Color.Black);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawMenuScreen,The following statement contains a magic number: spriteBatch.DrawString(font' message' new Vector2(160' 160)' Color.White);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawMenuScreen,The following statement contains a magic number: spriteBatch.DrawString(font' message' new Vector2(160' 160)' Color.White);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawNetworkSession,The following statement contains a magic number: spriteBatch.DrawString(font' gamer.Gamertag' tank.Position'                                         Color.Black' 0' new Vector2(100' 150)'                                         0.6f' SpriteEffects.None' 0);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawNetworkSession,The following statement contains a magic number: spriteBatch.DrawString(font' gamer.Gamertag' tank.Position'                                         Color.Black' 0' new Vector2(100' 150)'                                         0.6f' SpriteEffects.None' 0);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawNetworkSession,The following statement contains a magic number: spriteBatch.DrawString(font' gamer.Gamertag' tank.Position'                                         Color.Black' 0' new Vector2(100' 150)'                                         0.6f' SpriteEffects.None' 0);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawOptions,The following statement contains a magic number: string quality =                  string.Format("Network simulation = {0} ms' {1}% packet loss"'                                networkSession.SimulatedLatency.TotalMilliseconds'                                networkSession.SimulatedPacketLoss * 100);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawOptions,The following statement contains a magic number: string sendRate = string.Format("Packets per second = {0}"'                                              60 / framesBetweenPackets);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawOptions,The following statement contains a magic number: spriteBatch.DrawString(font' message' new Vector2(161' 321)' Color.Black);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawOptions,The following statement contains a magic number: spriteBatch.DrawString(font' message' new Vector2(161' 321)' Color.Black);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawOptions,The following statement contains a magic number: spriteBatch.DrawString(font' message' new Vector2(160' 320)' Color.White);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawOptions,The following statement contains a magic number: spriteBatch.DrawString(font' message' new Vector2(160' 320)' Color.White);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawMessage,The following statement contains a magic number: spriteBatch.DrawString(font' message' new Vector2(161' 161)' Color.Black);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawMessage,The following statement contains a magic number: spriteBatch.DrawString(font' message' new Vector2(161' 161)' Color.Black);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawMessage,The following statement contains a magic number: spriteBatch.DrawString(font' message' new Vector2(160' 160)' Color.White);
Magic Number,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,DrawMessage,The following statement contains a magic number: spriteBatch.DrawString(font' message' new Vector2(160' 160)' Color.White);
Magic Number,NetworkPrediction,Tank,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\Tank.cs,Tank,The following statement contains a magic number: float x = screenWidth / 4 + (gamerIndex % 5) * screenWidth / 8;
Magic Number,NetworkPrediction,Tank,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\Tank.cs,Tank,The following statement contains a magic number: float x = screenWidth / 4 + (gamerIndex % 5) * screenWidth / 8;
Magic Number,NetworkPrediction,Tank,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\Tank.cs,Tank,The following statement contains a magic number: float x = screenWidth / 4 + (gamerIndex % 5) * screenWidth / 8;
Magic Number,NetworkPrediction,Tank,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\Tank.cs,Tank,The following statement contains a magic number: float y = screenHeight / 4 + (gamerIndex / 5) * screenHeight / 5;
Magic Number,NetworkPrediction,Tank,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\Tank.cs,Tank,The following statement contains a magic number: float y = screenHeight / 4 + (gamerIndex / 5) * screenHeight / 5;
Magic Number,NetworkPrediction,Tank,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\Tank.cs,Tank,The following statement contains a magic number: float y = screenHeight / 4 + (gamerIndex / 5) * screenHeight / 5;
Magic Number,NetworkPrediction,Tank,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\Tank.cs,ApplyPrediction,The following statement contains a magic number: TimeSpan oneFrame = TimeSpan.FromSeconds(1.0 / 60.0);
Magic Number,NetworkPrediction,Tank,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\Tank.cs,Draw,The following statement contains a magic number: Vector2 origin = new Vector2(tankTexture.Width / 2' tankTexture.Height / 2);
Magic Number,NetworkPrediction,Tank,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\Tank.cs,Draw,The following statement contains a magic number: Vector2 origin = new Vector2(tankTexture.Width / 2' tankTexture.Height / 2);
Missing Default,NetworkPrediction,NetworkPredictionGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetworkPrediction\NetworkPredictionGame.cs,UpdateOptions,The following switch statement is missing a default case: switch (networkQuality)              {                  case NetworkQuality.Typical:                      networkSession.SimulatedLatency = TimeSpan.FromMilliseconds(100);                      networkSession.SimulatedPacketLoss = 0.1f;                      break;                    case NetworkQuality.Poor:                      networkSession.SimulatedLatency = TimeSpan.FromMilliseconds(200);                      networkSession.SimulatedPacketLoss = 0.2f;                      break;                    case NetworkQuality.Perfect:                      networkSession.SimulatedLatency = TimeSpan.Zero;                      networkSession.SimulatedPacketLoss = 0;                      break;              }
