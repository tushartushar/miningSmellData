Implementation smell,Namespace,Class,File,Method,Description
Magic Number,OrientationSample,OrientationSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\OrientationSample.cs,OrientationSample,The following statement contains a magic number: TargetElapsedTime = TimeSpan.FromTicks(333333);
Magic Number,OrientationSample,OrientationSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\OrientationSample.cs,Draw,The following statement contains a magic number: Vector2 position = new Vector2(                 GraphicsDevice.Viewport.Width / 2 - directions.Width / 2'                 GraphicsDevice.Viewport.Height / 2 - directions.Height / 2);
Magic Number,OrientationSample,OrientationSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\OrientationSample.cs,Draw,The following statement contains a magic number: Vector2 position = new Vector2(                 GraphicsDevice.Viewport.Width / 2 - directions.Width / 2'                 GraphicsDevice.Viewport.Height / 2 - directions.Height / 2);
Magic Number,OrientationSample,OrientationSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\OrientationSample.cs,Draw,The following statement contains a magic number: Vector2 position = new Vector2(                 GraphicsDevice.Viewport.Width / 2 - directions.Width / 2'                 GraphicsDevice.Viewport.Height / 2 - directions.Height / 2);
Magic Number,OrientationSample,OrientationSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\OrientationSample.cs,Draw,The following statement contains a magic number: Vector2 position = new Vector2(                 GraphicsDevice.Viewport.Width / 2 - directions.Width / 2'                 GraphicsDevice.Viewport.Height / 2 - directions.Height / 2);
Magic Number,OrientationSample,OrientationSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\OrientationSample.cs,Draw,The following statement contains a magic number: if (enableOrientationLocking)              {                  // Create a string of our current state                  string currentState = orientationLocked                       ? "Orientation: Locked"                       : "Orientation: Unlocked";                    // Create a string for the instructions                  string instructions = orientationLocked                       ? "Tap to unlock orientation."                       : "Tap to lock orientation.";                    // Draw the text to the screen                  spriteBatch.DrawString(font' currentState' new Vector2(10' 10)' Color.White);                  spriteBatch.DrawString(font' instructions' new Vector2(10' 25)' Color.White);              }
Magic Number,OrientationSample,OrientationSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\OrientationSample.cs,Draw,The following statement contains a magic number: if (enableOrientationLocking)              {                  // Create a string of our current state                  string currentState = orientationLocked                       ? "Orientation: Locked"                       : "Orientation: Unlocked";                    // Create a string for the instructions                  string instructions = orientationLocked                       ? "Tap to unlock orientation."                       : "Tap to lock orientation.";                    // Draw the text to the screen                  spriteBatch.DrawString(font' currentState' new Vector2(10' 10)' Color.White);                  spriteBatch.DrawString(font' instructions' new Vector2(10' 25)' Color.White);              }
Magic Number,OrientationSample,OrientationSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\OrientationSample.cs,Draw,The following statement contains a magic number: if (enableOrientationLocking)              {                  // Create a string of our current state                  string currentState = orientationLocked                       ? "Orientation: Locked"                       : "Orientation: Unlocked";                    // Create a string for the instructions                  string instructions = orientationLocked                       ? "Tap to unlock orientation."                       : "Tap to lock orientation.";                    // Draw the text to the screen                  spriteBatch.DrawString(font' currentState' new Vector2(10' 10)' Color.White);                  spriteBatch.DrawString(font' instructions' new Vector2(10' 25)' Color.White);              }
Magic Number,OrientationSample,OrientationSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\OrientationSample.cs,Draw,The following statement contains a magic number: if (enableOrientationLocking)              {                  // Create a string of our current state                  string currentState = orientationLocked                       ? "Orientation: Locked"                       : "Orientation: Unlocked";                    // Create a string for the instructions                  string instructions = orientationLocked                       ? "Tap to unlock orientation."                       : "Tap to lock orientation.";                    // Draw the text to the screen                  spriteBatch.DrawString(font' currentState' new Vector2(10' 10)' Color.White);                  spriteBatch.DrawString(font' instructions' new Vector2(10' 25)' Color.White);              }
Magic Number,LayoutSample,LayoutSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\LayoutSample.cs,LayoutSample,The following statement contains a magic number: TargetElapsedTime = TimeSpan.FromTicks(333333);
Magic Number,LayoutSample,LayoutSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\LayoutSample.cs,Draw,The following statement contains a magic number: Vector2 position = new Vector2(                 GraphicsDevice.Viewport.Width / 2 - directions.Width / 2'                 GraphicsDevice.Viewport.Height / 2 - directions.Height / 2);
Magic Number,LayoutSample,LayoutSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\LayoutSample.cs,Draw,The following statement contains a magic number: Vector2 position = new Vector2(                 GraphicsDevice.Viewport.Width / 2 - directions.Width / 2'                 GraphicsDevice.Viewport.Height / 2 - directions.Height / 2);
Magic Number,LayoutSample,LayoutSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\LayoutSample.cs,Draw,The following statement contains a magic number: Vector2 position = new Vector2(                 GraphicsDevice.Viewport.Width / 2 - directions.Width / 2'                 GraphicsDevice.Viewport.Height / 2 - directions.Height / 2);
Magic Number,LayoutSample,LayoutSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\LayoutSample.cs,Draw,The following statement contains a magic number: Vector2 position = new Vector2(                 GraphicsDevice.Viewport.Width / 2 - directions.Width / 2'                 GraphicsDevice.Viewport.Height / 2 - directions.Height / 2);
Magic Number,LayoutSample,LayoutSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\LayoutSample.cs,Draw,The following statement contains a magic number: if (enableOrientationLocking)              {                  // Create a string of our current state                  string currentState = orientationLocked                       ? "Orientation: Locked"                       : "Orientation: Unlocked";                    // Create a string for the instructions                  string instructions = orientationLocked                       ? "Tap to unlock orientation."                       : "Tap to lock orientation.";                    // Draw the text to the screen                  spriteBatch.DrawString(font' currentState' new Vector2(10' 10)' Color.White);                  spriteBatch.DrawString(font' instructions' new Vector2(10' 25)' Color.White);              }
Magic Number,LayoutSample,LayoutSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\LayoutSample.cs,Draw,The following statement contains a magic number: if (enableOrientationLocking)              {                  // Create a string of our current state                  string currentState = orientationLocked                       ? "Orientation: Locked"                       : "Orientation: Unlocked";                    // Create a string for the instructions                  string instructions = orientationLocked                       ? "Tap to unlock orientation."                       : "Tap to lock orientation.";                    // Draw the text to the screen                  spriteBatch.DrawString(font' currentState' new Vector2(10' 10)' Color.White);                  spriteBatch.DrawString(font' instructions' new Vector2(10' 25)' Color.White);              }
Magic Number,LayoutSample,LayoutSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\LayoutSample.cs,Draw,The following statement contains a magic number: if (enableOrientationLocking)              {                  // Create a string of our current state                  string currentState = orientationLocked                       ? "Orientation: Locked"                       : "Orientation: Unlocked";                    // Create a string for the instructions                  string instructions = orientationLocked                       ? "Tap to unlock orientation."                       : "Tap to lock orientation.";                    // Draw the text to the screen                  spriteBatch.DrawString(font' currentState' new Vector2(10' 10)' Color.White);                  spriteBatch.DrawString(font' instructions' new Vector2(10' 25)' Color.White);              }
Magic Number,LayoutSample,LayoutSample,C:\repos\CartBlanche_MonoGame-Samples\Orientation\LayoutSample.cs,Draw,The following statement contains a magic number: if (enableOrientationLocking)              {                  // Create a string of our current state                  string currentState = orientationLocked                       ? "Orientation: Locked"                       : "Orientation: Unlocked";                    // Create a string for the instructions                  string instructions = orientationLocked                       ? "Tap to unlock orientation."                       : "Tap to lock orientation.";                    // Draw the text to the screen                  spriteBatch.DrawString(font' currentState' new Vector2(10' 10)' Color.White);                  spriteBatch.DrawString(font' instructions' new Vector2(10' 25)' Color.White);              }
