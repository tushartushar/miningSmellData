Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ParticleSample,Particle,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\Particle.cs,Initialize,The method has 6 parameters. Parameters: position' velocity' acceleration' lifetime' scale' rotationSpeed
Magic Number,ParticleSample,ExplosionParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ExplosionParticleSystem.cs,InitializeConstants,The following statement contains a magic number: minInitialSpeed = 40;
Magic Number,ParticleSample,ExplosionParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ExplosionParticleSystem.cs,InitializeConstants,The following statement contains a magic number: maxInitialSpeed = 500;
Magic Number,ParticleSample,ExplosionParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ExplosionParticleSystem.cs,InitializeConstants,The following statement contains a magic number: minNumParticles = 20;
Magic Number,ParticleSample,ExplosionParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ExplosionParticleSystem.cs,InitializeConstants,The following statement contains a magic number: maxNumParticles = 25;
Magic Number,ParticleSample,ExplosionSmokeParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ExplosionSmokeParticleSystem.cs,InitializeConstants,The following statement contains a magic number: minInitialSpeed = 20;
Magic Number,ParticleSample,ExplosionSmokeParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ExplosionSmokeParticleSystem.cs,InitializeConstants,The following statement contains a magic number: maxInitialSpeed = 200;
Magic Number,ParticleSample,ExplosionSmokeParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ExplosionSmokeParticleSystem.cs,InitializeConstants,The following statement contains a magic number: minAcceleration = -10;
Magic Number,ParticleSample,ExplosionSmokeParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ExplosionSmokeParticleSystem.cs,InitializeConstants,The following statement contains a magic number: maxAcceleration = -50;
Magic Number,ParticleSample,ExplosionSmokeParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ExplosionSmokeParticleSystem.cs,InitializeConstants,The following statement contains a magic number: minNumParticles = 10;
Magic Number,ParticleSample,ExplosionSmokeParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ExplosionSmokeParticleSystem.cs,InitializeConstants,The following statement contains a magic number: maxNumParticles = 20;
Magic Number,ParticleSample,ParticleSampleGame,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ParticleSampleGame.cs,ParticleSampleGame,The following statement contains a magic number: smoke = new ExplosionSmokeParticleSystem(this' 2);
Magic Number,ParticleSample,ParticleSampleGame,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ParticleSampleGame.cs,ParticleSampleGame,The following statement contains a magic number: smokePlume = new SmokePlumeParticleSystem(this' 9);
Magic Number,ParticleSample,ParticleSampleGame,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ParticleSampleGame.cs,UpdateSmokePlume,The following statement contains a magic number: if (timeTillPuff < 0)              {                  Vector2 where = Vector2.Zero;                  // add more particles at the bottom of the screen' halfway across.                  where.X = graphics.GraphicsDevice.Viewport.Width / 2;                  where.Y = graphics.GraphicsDevice.Viewport.Height;                  smokePlume.AddParticles(where);                    // and then reset the timer.                  timeTillPuff = TimeBetweenSmokePlumePuffs;              }
Magic Number,ParticleSample,ParticleSampleGame,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ParticleSampleGame.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString(font' message' new Vector2(50' 50)' Color.White);
Magic Number,ParticleSample,ParticleSampleGame,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ParticleSampleGame.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString(font' message' new Vector2(50' 50)' Color.White);
Magic Number,ParticleSample,ParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ParticleSystem.cs,LoadContent,The following statement contains a magic number: origin.X = texture.Width / 2;
Magic Number,ParticleSample,ParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ParticleSystem.cs,LoadContent,The following statement contains a magic number: origin.Y = texture.Height / 2;
Magic Number,ParticleSample,ParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ParticleSystem.cs,Draw,The following statement contains a magic number: foreach (Particle p in particles)              {                  // skip inactive particles                  if (!p.Active)                      continue;                    // normalized lifetime is a value from 0 to 1 and represents how far                  // a particle is through its life. 0 means it just started' .5 is half                  // way through' and 1.0 means it's just about to be finished.                  // this value will be used to calculate alpha and scale' to avoid                   // having particles suddenly appear or disappear.                  float normalizedLifetime = p.TimeSinceStart / p.Lifetime;                    // we want particles to fade in and fade out' so we'll calculate alpha                  // to be (normalizedLifetime) * (1-normalizedLifetime). this way' when                  // normalizedLifetime is 0 or 1' alpha is 0. the maximum value is at                  // normalizedLifetime = .5' and is                  // (normalizedLifetime) * (1-normalizedLifetime)                  // (.5)                 * (1-.5)                  // .25                  // since we want the maximum alpha to be 1' not .25' we'll scale the                   // entire equation by 4.                  float alpha = 4 * normalizedLifetime * (1 - normalizedLifetime);  				Color color = Color.White * alpha;                    // make particles grow as they age. they'll start at 75% of their size'                  // and increase to 100% once they're finished.                  float scale = p.Scale * (.75f + .25f * normalizedLifetime);                    game.SpriteBatch.Draw(texture' p.Position' null' color'                      p.Rotation' origin' scale' SpriteEffects.None' 0.0f);              }
Magic Number,ParticleSample,SmokePlumeParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\SmokePlumeParticleSystem.cs,InitializeConstants,The following statement contains a magic number: minInitialSpeed = 20;
Magic Number,ParticleSample,SmokePlumeParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\SmokePlumeParticleSystem.cs,InitializeConstants,The following statement contains a magic number: maxInitialSpeed = 100;
Magic Number,ParticleSample,SmokePlumeParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\SmokePlumeParticleSystem.cs,InitializeConstants,The following statement contains a magic number: minNumParticles = 7;
Magic Number,ParticleSample,SmokePlumeParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\SmokePlumeParticleSystem.cs,InitializeConstants,The following statement contains a magic number: maxNumParticles = 15;
Magic Number,ParticleSample,SmokePlumeParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\SmokePlumeParticleSystem.cs,PickRandomDirection,The following statement contains a magic number: float radians = ParticleSampleGame.RandomBetween(                  MathHelper.ToRadians(80)' MathHelper.ToRadians(100));
Magic Number,ParticleSample,SmokePlumeParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\SmokePlumeParticleSystem.cs,PickRandomDirection,The following statement contains a magic number: float radians = ParticleSampleGame.RandomBetween(                  MathHelper.ToRadians(80)' MathHelper.ToRadians(100));
Magic Number,ParticleSample,SmokePlumeParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\SmokePlumeParticleSystem.cs,InitializeParticle,The following statement contains a magic number: p.Acceleration.X += ParticleSampleGame.RandomBetween(10' 50);
Magic Number,ParticleSample,SmokePlumeParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\SmokePlumeParticleSystem.cs,InitializeParticle,The following statement contains a magic number: p.Acceleration.X += ParticleSampleGame.RandomBetween(10' 50);
Missing Default,ParticleSample,ParticleSampleGame,C:\repos\CartBlanche_MonoGame-Samples\ParticleSample\ParticleSampleGame.cs,Update,The following switch statement is missing a default case: switch (currentState)              {                  // if we should be demoing the explosions effect' check to see if it's                  // time for a new explosion.                  case State.Explosions:                      UpdateExplosions(dt);                      break;                  // if we're showing off the smoke plume' check to see if it's time for a                  // new puff of smoke.                  case State.SmokePlume:                      UpdateSmokePlume(dt);                      break;              }
