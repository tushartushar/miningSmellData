Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,RockRainIphone,ActionScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\ActionScene.cs,ActionScene,The method has 5 parameters. Parameters: game' theTexture' backgroundTexture' font' explosions
Long Parameter List,RockRainIphone,StartScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\StartScene.cs,StartScene,The method has 5 parameters. Parameters: game' smallFont' largeFont' background' elements
Long Parameter List,RockRainIphone.Core,Particle,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Core\Particle.cs,Initialize,The method has 6 parameters. Parameters: position' velocity' acceleration' lifetime' scale' rotationSpeed
Magic Number,RockRainIphone,Score,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Score.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString(font' TextToDraw'                   new Vector2(position.X + 151' position.Y + 1)'                   Color.Black);
Magic Number,RockRainIphone,Score,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Score.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString(font' TextToDraw'                   new Vector2(position.X+150' position.Y)'                   fontColor);
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.X = 15;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.Y = 10;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.Width = 23;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.Height = 24;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.Y = 37;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.Y = 63;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.Height = 24;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.Y = 89;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.Height = 27;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.Y = 119;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.Height = 24;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.Y = 145;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.Y = 171;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.Y = 199;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,Meteor,The following statement contains a magic number: frame.Height = 26;
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,PutinStartPosition,The following statement contains a magic number: YSpeed = 1 + random.Next(3);
Magic Number,RockRainIphone,Meteor,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Meteor.cs,PutinStartPosition,The following statement contains a magic number: XSpeed = random.Next(3) - 1;
Magic Number,RockRainIphone,Player,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Player.cs,Player,The following statement contains a magic number: spriteRectangle = new Rectangle(86'11'24'22);
Magic Number,RockRainIphone,Player,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Player.cs,Player,The following statement contains a magic number: spriteRectangle = new Rectangle(86'11'24'22);
Magic Number,RockRainIphone,Player,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Player.cs,Player,The following statement contains a magic number: spriteRectangle = new Rectangle(86'11'24'22);
Magic Number,RockRainIphone,Player,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Player.cs,Player,The following statement contains a magic number: spriteRectangle = new Rectangle(86'11'24'22);
Magic Number,RockRainIphone,Player,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Player.cs,Reset,The following statement contains a magic number: position.X = screenBounds.Width/3;
Magic Number,RockRainIphone,Player,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Player.cs,HandleInput,The following statement contains a magic number: position.Y += (int)(gamepadstatus.ThumbSticks.Left.Y * -4);
Magic Number,RockRainIphone,Player,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Player.cs,HandleInput,The following statement contains a magic number: position.X += (int)(gamepadstatus.ThumbSticks.Left.X * 4);
Magic Number,RockRainIphone,Player,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Player.cs,HandleInput,The following statement contains a magic number: position.Y += (int)(Accelerometer.GetState().Acceleration.Y * -4);
Magic Number,RockRainIphone,Player,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Player.cs,HandleInput,The following statement contains a magic number: position.X += (int)(Accelerometer.GetState().Acceleration.X * 4);
Magic Number,RockRainIphone,PowerSource,C:\repos\CartBlanche_MonoGame-Samples\RockRain\PowerSource.cs,PowerSource,The following statement contains a magic number: frame.X = 55;
Magic Number,RockRainIphone,PowerSource,C:\repos\CartBlanche_MonoGame-Samples\RockRain\PowerSource.cs,PowerSource,The following statement contains a magic number: frame.Y = 15;
Magic Number,RockRainIphone,PowerSource,C:\repos\CartBlanche_MonoGame-Samples\RockRain\PowerSource.cs,PowerSource,The following statement contains a magic number: frame.Width = 14;
Magic Number,RockRainIphone,PowerSource,C:\repos\CartBlanche_MonoGame-Samples\RockRain\PowerSource.cs,PowerSource,The following statement contains a magic number: frame.Height = 12;
Magic Number,RockRainIphone,PowerSource,C:\repos\CartBlanche_MonoGame-Samples\RockRain\PowerSource.cs,PowerSource,The following statement contains a magic number: frame.Y = 29;
Magic Number,RockRainIphone,PowerSource,C:\repos\CartBlanche_MonoGame-Samples\RockRain\PowerSource.cs,PowerSource,The following statement contains a magic number: frame.Y = 42;
Magic Number,RockRainIphone,PowerSource,C:\repos\CartBlanche_MonoGame-Samples\RockRain\PowerSource.cs,PowerSource,The following statement contains a magic number: frame.Y = 56;
Magic Number,RockRainIphone,PowerSource,C:\repos\CartBlanche_MonoGame-Samples\RockRain\PowerSource.cs,PowerSource,The following statement contains a magic number: frame.Y = 69;
Magic Number,RockRainIphone,PowerSource,C:\repos\CartBlanche_MonoGame-Samples\RockRain\PowerSource.cs,PowerSource,The following statement contains a magic number: frame.Y = 81;
Magic Number,RockRainIphone,PowerSource,C:\repos\CartBlanche_MonoGame-Samples\RockRain\PowerSource.cs,PowerSource,The following statement contains a magic number: frameDelay = 200;
Magic Number,RockRainIphone,PowerSource,C:\repos\CartBlanche_MonoGame-Samples\RockRain\PowerSource.cs,PutinStartPosition,The following statement contains a magic number: position.Y = -10;
Magic Number,RockRainIphone,ActionScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\ActionScene.cs,Show,The following statement contains a magic number: pausePosition.X = (Game.Window.ClientBounds.Width -                   pauseRect.Width)/2;
Magic Number,RockRainIphone,ActionScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\ActionScene.cs,Show,The following statement contains a magic number: pausePosition.Y = (Game.Window.ClientBounds.Height -                   pauseRect.Height)/2;
Magic Number,RockRainIphone,ActionScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\ActionScene.cs,Show,The following statement contains a magic number: gameoverPosition.X = (Game.Window.ClientBounds.Width -                   gameoverRect.Width)/2;
Magic Number,RockRainIphone,ActionScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\ActionScene.cs,Show,The following statement contains a magic number: gameoverPosition.Y = (Game.Window.ClientBounds.Height -                   gameoverRect.Height)/2;
Magic Number,RockRainIphone,ActionScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\ActionScene.cs,HandleDamages,The following statement contains a magic number: if (meteors.CheckForCollisions(player.GetBounds()))              {                  // Player penalty                  player.Power -= 10;  				  				_explosions.AddExplosion(player.Position);              }
Magic Number,RockRainIphone,ActionScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\ActionScene.cs,HandlePowerSourceSprite,The following statement contains a magic number: if (powerSource.CheckCollision(player.GetBounds()))              {                  audio.PowerGet.Play();                  elapsedTime = TimeSpan.Zero;                  powerSource.PutinStartPosition();                  player.Power += 50;              }
Magic Number,RockRainIphone,ActionScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\ActionScene.cs,HandlePowerSourceSprite,The following statement contains a magic number: if (elapsedTime > TimeSpan.FromSeconds(15))              {                  elapsedTime -= TimeSpan.FromSeconds(15);                  powerSource.Enabled = true;                  audio.PowerShow.Play();              }
Magic Number,RockRainIphone,ActionScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\ActionScene.cs,HandlePowerSourceSprite,The following statement contains a magic number: if (elapsedTime > TimeSpan.FromSeconds(15))              {                  elapsedTime -= TimeSpan.FromSeconds(15);                  powerSource.Enabled = true;                  audio.PowerShow.Play();              }
Magic Number,RockRainIphone,StartScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\StartScene.cs,Show,The following statement contains a magic number: rockPosition.Y = 20;
Magic Number,RockRainIphone,StartScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\StartScene.cs,Show,The following statement contains a magic number: rainPosition.Y = 70;
Magic Number,RockRainIphone,StartScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\StartScene.cs,Show,The following statement contains a magic number: menu.Position = new Vector2((Game.Window.ClientBounds.Width -                                             menu.Width)/2' 200);
Magic Number,RockRainIphone,StartScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\StartScene.cs,Show,The following statement contains a magic number: menu.Position = new Vector2((Game.Window.ClientBounds.Width -                                             menu.Width)/2' 200);
Magic Number,RockRainIphone,StartScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\StartScene.cs,Update,The following statement contains a magic number: if (!menu.Visible)              {                  if (rainPosition.X >= (Game.Window.ClientBounds.Width - rainRect.Width)/2)                  {                      rainPosition.X -= 5;                  }                    if (rockPosition.X <= (Game.Window.ClientBounds.Width - rockRect.Width)/2)                  {                      rockPosition.X += 5;                  }                  else                  {                      menu.Visible = true;                      menu.Enabled = true;                        MediaPlayer.Play(audio.StartMusic);                        enhancedPosition =                          new Vector2((rainPosition.X + rainRect.Width -                           enhancedRect.Width/2) - 40' rainPosition.Y+20);                      showEnhanced = true;                  }              }              else              {                  elapsedTime += gameTime.ElapsedGameTime;                    if (elapsedTime > TimeSpan.FromSeconds(1))                  {                      elapsedTime -= TimeSpan.FromSeconds(1);                      showEnhanced = !showEnhanced;                  }              }
Magic Number,RockRainIphone,StartScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\StartScene.cs,Update,The following statement contains a magic number: if (!menu.Visible)              {                  if (rainPosition.X >= (Game.Window.ClientBounds.Width - rainRect.Width)/2)                  {                      rainPosition.X -= 5;                  }                    if (rockPosition.X <= (Game.Window.ClientBounds.Width - rockRect.Width)/2)                  {                      rockPosition.X += 5;                  }                  else                  {                      menu.Visible = true;                      menu.Enabled = true;                        MediaPlayer.Play(audio.StartMusic);                        enhancedPosition =                          new Vector2((rainPosition.X + rainRect.Width -                           enhancedRect.Width/2) - 40' rainPosition.Y+20);                      showEnhanced = true;                  }              }              else              {                  elapsedTime += gameTime.ElapsedGameTime;                    if (elapsedTime > TimeSpan.FromSeconds(1))                  {                      elapsedTime -= TimeSpan.FromSeconds(1);                      showEnhanced = !showEnhanced;                  }              }
Magic Number,RockRainIphone,StartScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\StartScene.cs,Update,The following statement contains a magic number: if (!menu.Visible)              {                  if (rainPosition.X >= (Game.Window.ClientBounds.Width - rainRect.Width)/2)                  {                      rainPosition.X -= 5;                  }                    if (rockPosition.X <= (Game.Window.ClientBounds.Width - rockRect.Width)/2)                  {                      rockPosition.X += 5;                  }                  else                  {                      menu.Visible = true;                      menu.Enabled = true;                        MediaPlayer.Play(audio.StartMusic);                        enhancedPosition =                          new Vector2((rainPosition.X + rainRect.Width -                           enhancedRect.Width/2) - 40' rainPosition.Y+20);                      showEnhanced = true;                  }              }              else              {                  elapsedTime += gameTime.ElapsedGameTime;                    if (elapsedTime > TimeSpan.FromSeconds(1))                  {                      elapsedTime -= TimeSpan.FromSeconds(1);                      showEnhanced = !showEnhanced;                  }              }
Magic Number,RockRainIphone,StartScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\StartScene.cs,Update,The following statement contains a magic number: if (!menu.Visible)              {                  if (rainPosition.X >= (Game.Window.ClientBounds.Width - rainRect.Width)/2)                  {                      rainPosition.X -= 5;                  }                    if (rockPosition.X <= (Game.Window.ClientBounds.Width - rockRect.Width)/2)                  {                      rockPosition.X += 5;                  }                  else                  {                      menu.Visible = true;                      menu.Enabled = true;                        MediaPlayer.Play(audio.StartMusic);                        enhancedPosition =                          new Vector2((rainPosition.X + rainRect.Width -                           enhancedRect.Width/2) - 40' rainPosition.Y+20);                      showEnhanced = true;                  }              }              else              {                  elapsedTime += gameTime.ElapsedGameTime;                    if (elapsedTime > TimeSpan.FromSeconds(1))                  {                      elapsedTime -= TimeSpan.FromSeconds(1);                      showEnhanced = !showEnhanced;                  }              }
Magic Number,RockRainIphone,StartScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\StartScene.cs,Update,The following statement contains a magic number: if (!menu.Visible)              {                  if (rainPosition.X >= (Game.Window.ClientBounds.Width - rainRect.Width)/2)                  {                      rainPosition.X -= 5;                  }                    if (rockPosition.X <= (Game.Window.ClientBounds.Width - rockRect.Width)/2)                  {                      rockPosition.X += 5;                  }                  else                  {                      menu.Visible = true;                      menu.Enabled = true;                        MediaPlayer.Play(audio.StartMusic);                        enhancedPosition =                          new Vector2((rainPosition.X + rainRect.Width -                           enhancedRect.Width/2) - 40' rainPosition.Y+20);                      showEnhanced = true;                  }              }              else              {                  elapsedTime += gameTime.ElapsedGameTime;                    if (elapsedTime > TimeSpan.FromSeconds(1))                  {                      elapsedTime -= TimeSpan.FromSeconds(1);                      showEnhanced = !showEnhanced;                  }              }
Magic Number,RockRainIphone,StartScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\StartScene.cs,Update,The following statement contains a magic number: if (!menu.Visible)              {                  if (rainPosition.X >= (Game.Window.ClientBounds.Width - rainRect.Width)/2)                  {                      rainPosition.X -= 5;                  }                    if (rockPosition.X <= (Game.Window.ClientBounds.Width - rockRect.Width)/2)                  {                      rockPosition.X += 5;                  }                  else                  {                      menu.Visible = true;                      menu.Enabled = true;                        MediaPlayer.Play(audio.StartMusic);                        enhancedPosition =                          new Vector2((rainPosition.X + rainRect.Width -                           enhancedRect.Width/2) - 40' rainPosition.Y+20);                      showEnhanced = true;                  }              }              else              {                  elapsedTime += gameTime.ElapsedGameTime;                    if (elapsedTime > TimeSpan.FromSeconds(1))                  {                      elapsedTime -= TimeSpan.FromSeconds(1);                      showEnhanced = !showEnhanced;                  }              }
Magic Number,RockRainIphone,StartScene,C:\repos\CartBlanche_MonoGame-Samples\RockRain\StartScene.cs,Update,The following statement contains a magic number: if (!menu.Visible)              {                  if (rainPosition.X >= (Game.Window.ClientBounds.Width - rainRect.Width)/2)                  {                      rainPosition.X -= 5;                  }                    if (rockPosition.X <= (Game.Window.ClientBounds.Width - rockRect.Width)/2)                  {                      rockPosition.X += 5;                  }                  else                  {                      menu.Visible = true;                      menu.Enabled = true;                        MediaPlayer.Play(audio.StartMusic);                        enhancedPosition =                          new Vector2((rainPosition.X + rainRect.Width -                           enhancedRect.Width/2) - 40' rainPosition.Y+20);                      showEnhanced = true;                  }              }              else              {                  elapsedTime += gameTime.ElapsedGameTime;                    if (elapsedTime > TimeSpan.FromSeconds(1))                  {                      elapsedTime -= TimeSpan.FromSeconds(1);                      showEnhanced = !showEnhanced;                  }              }
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: BButton.Position = new Vector2(100'420);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: BButton.Position = new Vector2(100'420);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: BButton.TextureRect = new Rectangle(72'77'36'36);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: BButton.TextureRect = new Rectangle(72'77'36'36);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: BButton.TextureRect = new Rectangle(72'77'36'36);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: BButton.TextureRect = new Rectangle(72'77'36'36);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: AButton.Position = new Vector2(150'420);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: AButton.Position = new Vector2(150'420);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: AButton.TextureRect = new Rectangle(73'114'36'36);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: AButton.TextureRect = new Rectangle(73'114'36'36);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: AButton.TextureRect = new Rectangle(73'114'36'36);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: AButton.TextureRect = new Rectangle(73'114'36'36);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: thumbStick.Position = new Vector2(220'400);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: thumbStick.Position = new Vector2(220'400);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: thumbStick.TextureRect = new Rectangle(2'2'68'68);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: thumbStick.TextureRect = new Rectangle(2'2'68'68);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: thumbStick.TextureRect = new Rectangle(2'2'68'68);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,LoadContent,The following statement contains a magic number: thumbStick.TextureRect = new Rectangle(2'2'68'68);
Magic Number,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,HandleStartSceneInput,The following statement contains a magic number: if (startScene.MenuSelected)              {  				//Mouse.SetPosition(0'0);                  audio.MenuSelect.Play();                  switch (startScene.SelectedMenuIndex)                  {                      case 0:  						if (actionScene == null)  							CreateActionScene();                          ShowScene(actionScene);                          break;                      case 1:  						if (helpScene == null)  							CreateHelpScene();                          ShowScene(helpScene);                          break;                      case 2:                          Exit();                          break;                  }              }
Magic Number,RockRainIphone.Core,ImageComponent,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Core\ImageComponent.cs,ImageComponent,The following statement contains a magic number: switch (drawMode)              {                  case DrawMode.Center:                      imageRect = new Rectangle((Game.Window.ClientBounds.Width -                           texture.Width)/2'(Game.Window.ClientBounds.Height -                           texture.Height)/2'texture.Width' texture.Height);                      break;                  case DrawMode.Stretch:                      imageRect = new Rectangle(0' 0' Game.Window.ClientBounds.Width'                           Game.Window.ClientBounds.Height);                      break;              }
Magic Number,RockRainIphone.Core,ImageComponent,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Core\ImageComponent.cs,ImageComponent,The following statement contains a magic number: switch (drawMode)              {                  case DrawMode.Center:                      imageRect = new Rectangle((Game.Window.ClientBounds.Width -                           texture.Width)/2'(Game.Window.ClientBounds.Height -                           texture.Height)/2'texture.Width' texture.Height);                      break;                  case DrawMode.Stretch:                      imageRect = new Rectangle(0' 0' Game.Window.ClientBounds.Width'                           Game.Window.ClientBounds.Height);                      break;              }
Magic Number,RockRainIphone.Core,ExplosionParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Core\ExplosionParticleSystem.cs,InitializeConstants,The following statement contains a magic number: minInitialSpeed = 40;
Magic Number,RockRainIphone.Core,ExplosionParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Core\ExplosionParticleSystem.cs,InitializeConstants,The following statement contains a magic number: maxInitialSpeed = 500;
Magic Number,RockRainIphone.Core,ExplosionParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Core\ExplosionParticleSystem.cs,InitializeConstants,The following statement contains a magic number: minNumParticles = 20;
Magic Number,RockRainIphone.Core,ExplosionParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Core\ExplosionParticleSystem.cs,InitializeConstants,The following statement contains a magic number: maxNumParticles = 25;
Magic Number,RockRainIphone.Core,ParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Core\ParticleSystem.cs,LoadContent,The following statement contains a magic number: origin.X = texture.Width / 2;
Magic Number,RockRainIphone.Core,ParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Core\ParticleSystem.cs,LoadContent,The following statement contains a magic number: origin.Y = texture.Height / 2;
Magic Number,RockRainIphone.Core,ParticleSystem,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Core\ParticleSystem.cs,Draw,The following statement contains a magic number: foreach (Particle p in particles)              {                  // skip inactive particles                  if (!p.Active)                      continue;                    // normalized lifetime is a value from 0 to 1 and represents how far                  // a particle is through its life. 0 means it just started' .5 is half                  // way through' and 1.0 means it's just about to be finished.                  // this value will be used to calculate alpha and scale' to avoid                   // having particles suddenly appear or disappear.                  float normalizedLifetime = p.TimeSinceStart / p.Lifetime;                    // we want particles to fade in and fade out' so we'll calculate alpha                  // to be (normalizedLifetime) * (1-normalizedLifetime). this way' when                  // normalizedLifetime is 0 or 1' alpha is 0. the maximum value is at                  // normalizedLifetime = .5' and is                  // (normalizedLifetime) * (1-normalizedLifetime)                  // (.5)                 * (1-.5)                  // .25                  // since we want the maximum alpha to be 1' not .25' we'll scale the                   // entire equation by 4.                  float alpha = 4 * normalizedLifetime * (1 - normalizedLifetime);                  Color color = new Color(new Vector4(1' 1' 1' alpha));                    // make particles grow as they age. they'll start at 75% of their size'                  // and increase to 100% once they're finished.                  float scale = p.Scale * (.75f + .25f * normalizedLifetime);                    spriteBatch.Draw(texture' p.Position' null' color'                      p.Rotation' origin' scale' SpriteEffects.None' 0.0f);              }
Missing Default,RockRainIphone,Game1,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Game1.cs,HandleStartSceneInput,The following switch statement is missing a default case: switch (startScene.SelectedMenuIndex)                  {                      case 0:  						if (actionScene == null)  							CreateActionScene();                          ShowScene(actionScene);                          break;                      case 1:  						if (helpScene == null)  							CreateHelpScene();                          ShowScene(helpScene);                          break;                      case 2:                          Exit();                          break;                  }
Missing Default,RockRainIphone.Core,ImageComponent,C:\repos\CartBlanche_MonoGame-Samples\RockRain\Core\ImageComponent.cs,ImageComponent,The following switch statement is missing a default case: switch (drawMode)              {                  case DrawMode.Center:                      imageRect = new Rectangle((Game.Window.ClientBounds.Width -                           texture.Width)/2'(Game.Window.ClientBounds.Height -                           texture.Height)/2'texture.Width' texture.Height);                      break;                  case DrawMode.Stretch:                      imageRect = new Rectangle(0' 0' Game.Window.ClientBounds.Width'                           Game.Window.ClientBounds.Height);                      break;              }
