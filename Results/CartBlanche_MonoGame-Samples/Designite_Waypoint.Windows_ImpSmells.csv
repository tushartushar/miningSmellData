Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,Cyclomatic complexity of the method is 20
Long Statement,Waypoint,SteeringBehavior,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\Behaviors\SteeringBehavior.cs,Update,The length of the statement  "	tank.MoveSpeed = MathHelper.Clamp (desiredMoveSpeed' previousMoveSpeed - Tank.MaxMoveSpeedDelta * elapsedTime' previousMoveSpeed + Tank.MaxMoveSpeedDelta * elapsedTime); " is 169.
Long Statement,Waypoint,SteeringBehavior,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\Behaviors\SteeringBehavior.cs,Update,The length of the statement  "	facingDirection = TurnToFace (tank.Location' tank.Waypoints.Peek ()' facingDirection' Tank.MaxAngularVelocity * elapsedTime); " is 125.
Long Statement,Waypoint,SteeringBehavior,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\Behaviors\SteeringBehavior.cs,FindMaxMoveSpeed,The length of the statement  "	float closestDistance = Math.Min (Vector2.Distance (waypoint' tank.Location + (orth * turningRadius))' Vector2.Distance (waypoint' tank.Location - (orth * turningRadius))); " is 172.
Long Statement,Waypoint,Tank,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\Tank.cs,Draw,The length of the statement  "	spriteBatch.Draw (tankTexture' location' null' Color.White' facingDirection' tankTextureCenter' 1f' SpriteEffects.None' 0f); " is 124.
Long Statement,Waypoint,WaypointList,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointList.cs,Draw,The length of the statement  "			spriteBatch.Draw (waypointTexture' location' null' new Color (Vector4.Lerp (Color.Red.ToVector4 ()' Color.Blue.ToVector4 ()' i / numberPoints))' 0f' waypointCenter' 1f' SpriteEffects.None' 0f); " is 193.
Long Statement,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The length of the statement  "	if ((previousGamePadState.Buttons.B == ButtonState.Released && currentGamePadState.Buttons.B == ButtonState.Pressed) || (previousKeyboardState.IsKeyUp (Keys.B) && currentKeyboardState.IsKeyDown (Keys.B)) || (touchCount == 2)) { " is 227.
Long Statement,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The length of the statement  "	if ((previousGamePadState.Buttons.A == ButtonState.Released && currentGamePadState.Buttons.A == ButtonState.Pressed) || (previousKeyboardState.IsKeyUp (Keys.A) && currentKeyboardState.IsKeyDown (Keys.A)) || (touchCount == 1)) { " is 227.
Long Statement,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The length of the statement  "	if ((previousGamePadState.Buttons.X == ButtonState.Released && currentGamePadState.Buttons.X == ButtonState.Pressed) || (previousKeyboardState.IsKeyUp (Keys.X) && currentKeyboardState.IsKeyDown (Keys.X)) || (touchCount == 3)) { " is 227.
Complex Conditional,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The conditional expression  "(previousGamePadState.Buttons.B == ButtonState.Released && currentGamePadState.Buttons.B == ButtonState.Pressed) || (previousKeyboardState.IsKeyUp (Keys.B) && currentKeyboardState.IsKeyDown (Keys.B)) || (touchCount == 2)"  is complex.
Complex Conditional,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The conditional expression  "(previousGamePadState.Buttons.A == ButtonState.Released && currentGamePadState.Buttons.A == ButtonState.Pressed) || (previousKeyboardState.IsKeyUp (Keys.A) && currentKeyboardState.IsKeyDown (Keys.A)) || (touchCount == 1)"  is complex.
Complex Conditional,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The conditional expression  "(previousGamePadState.Buttons.X == ButtonState.Released && currentGamePadState.Buttons.X == ButtonState.Pressed) || (previousKeyboardState.IsKeyUp (Keys.X) && currentKeyboardState.IsKeyDown (Keys.X)) || (touchCount == 3)"  is complex.
Magic Number,Waypoint,SteeringBehavior,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\Behaviors\SteeringBehavior.cs,FindMaxMoveSpeed,The following statement contains a magic number: if (closestDistance < turningRadius) {  	// This finds the radius of a circle where the Tank's location and   	// the waypoint are 2 points on opposite sides of the circle.  	float radius = Vector2.Distance (tank.Location' waypoint) / 2;  	// Now we use the radius from above to and Tank.MaxAngularVelocity   	// to find out how fast we can move towards the waypoint by taking   	// r = v/w and turning it into v = r*w  	finalSpeed = Tank.MaxAngularVelocity * radius;  }  
Magic Number,Waypoint,Tank,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\Tank.cs,LoadContent,The following statement contains a magic number: tankTextureCenter = new Vector2 (tankTexture.Width / 2' tankTexture.Height / 2);  
Magic Number,Waypoint,Tank,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\Tank.cs,LoadContent,The following statement contains a magic number: tankTextureCenter = new Vector2 (tankTexture.Width / 2' tankTexture.Height / 2);  
Magic Number,Waypoint,WaypointList,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointList.cs,LoadContent,The following statement contains a magic number: waypointCenter = new Vector2 (waypointTexture.Width / 2' waypointTexture.Height / 2);  
Magic Number,Waypoint,WaypointList,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointList.cs,LoadContent,The following statement contains a magic number: waypointCenter = new Vector2 (waypointTexture.Width / 2' waypointTexture.Height / 2);  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,Initialize,The following statement contains a magic number: cursorLocation = new Vector2 ((float)screenWidth / 2' (float)screenHeight / 2);  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,Initialize,The following statement contains a magic number: cursorLocation = new Vector2 ((float)screenWidth / 2' (float)screenHeight / 2);  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,Initialize,The following statement contains a magic number: tank.Reset (new Vector2 ((float)screenWidth / 4' (float)screenHeight / 4));  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,Initialize,The following statement contains a magic number: tank.Reset (new Vector2 ((float)screenWidth / 4' (float)screenHeight / 4));  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,LoadContent,The following statement contains a magic number: cursorCenter = new Vector2 (cursorTexture.Width / 2' cursorTexture.Height / 2);  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,LoadContent,The following statement contains a magic number: cursorCenter = new Vector2 (cursorTexture.Width / 2' cursorTexture.Height / 2);  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The following statement contains a magic number: if (currentMouseState.MiddleButton == ButtonState.Released && previousMouseState.MiddleButton == ButtonState.Pressed) {  	touchCount = 2;  }  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The following statement contains a magic number: touchCount = 2;  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The following statement contains a magic number: if (currentMouseState.RightButton == ButtonState.Released && previousMouseState.RightButton == ButtonState.Pressed) {  	touchCount = 3;  }  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The following statement contains a magic number: touchCount = 3;  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The following statement contains a magic number: if ((previousGamePadState.Buttons.B == ButtonState.Released && currentGamePadState.Buttons.B == ButtonState.Pressed) || (previousKeyboardState.IsKeyUp (Keys.B) && currentKeyboardState.IsKeyDown (Keys.B)) || (touchCount == 2)) {  	tank.CycleBehaviorType ();  }  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The following statement contains a magic number: if ((previousGamePadState.Buttons.X == ButtonState.Released && currentGamePadState.Buttons.X == ButtonState.Pressed) || (previousKeyboardState.IsKeyUp (Keys.X) && currentKeyboardState.IsKeyDown (Keys.X)) || (touchCount == 3)) {  	tank.Reset (new Vector2 ((float)screenWidth / 4' (float)screenHeight / 4));  }  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The following statement contains a magic number: if ((previousGamePadState.Buttons.X == ButtonState.Released && currentGamePadState.Buttons.X == ButtonState.Pressed) || (previousKeyboardState.IsKeyUp (Keys.X) && currentKeyboardState.IsKeyDown (Keys.X)) || (touchCount == 3)) {  	tank.Reset (new Vector2 ((float)screenWidth / 4' (float)screenHeight / 4));  }  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The following statement contains a magic number: if ((previousGamePadState.Buttons.X == ButtonState.Released && currentGamePadState.Buttons.X == ButtonState.Pressed) || (previousKeyboardState.IsKeyUp (Keys.X) && currentKeyboardState.IsKeyDown (Keys.X)) || (touchCount == 3)) {  	tank.Reset (new Vector2 ((float)screenWidth / 4' (float)screenHeight / 4));  }  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The following statement contains a magic number: tank.Reset (new Vector2 ((float)screenWidth / 4' (float)screenHeight / 4));  
Magic Number,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The following statement contains a magic number: tank.Reset (new Vector2 ((float)screenWidth / 4' (float)screenHeight / 4));  
Missing Default,Waypoint,WaypointSample,F:\newReposMay17\CartBlanche_MonoGame-Samples\Waypoint\WaypointSample.cs,HandleInput,The following switch statement is missing a default case: switch (location.State) {  case TouchLocationState.Pressed:  	//touched = true;	  	touchCount++;  	cursorLocation = location.Position;  	break;  case TouchLocationState.Moved:  	break;  case TouchLocationState.Released:  	break;  }  
