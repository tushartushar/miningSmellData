Implementation smell,Namespace,Class,File,Method,Description
Long Method,CatapultGame,Catapult,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Catapult.cs,Update,The method has 150 lines of code.
Complex Method,GameStateManagement,InputState,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\InputState.cs,UpdateMouseStates,Cyclomatic complexity of the method is 9
Complex Method,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,HandleInput,Cyclomatic complexity of the method is 17
Long Parameter List,CatapultGame,Catapult,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Catapult.cs,Catapult,The method has 6 parameters. Parameters: game' screenSpriteBatch' IdleTexture' CatapultPosition' SpriteEffect' IsAI
Long Parameter List,CatapultGame,Projectile,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Projectile.cs,Projectile,The method has 7 parameters. Parameters: game' screenSpriteBatch' TextureName' startPosition' groundHitOffset' isAi' Gravity
Long Parameter List,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawString,The method has 5 parameters. Parameters: font' text' position' color' fontScale
Complex Conditional,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,Update,The conditional expression  "(player.Catapult.CurrentState == CatapultState.Reset ||                  computer.Catapult.CurrentState == CatapultState.Reset) &&                  !(player.Catapult.AnimationRunning ||                  computer.Catapult.AnimationRunning)"  is complex.
Complex Conditional,CatapultGame,InstructionsScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\InstructionsScreen.cs,HandleInput,The conditional expression  "input.IsNewKeyPress (Microsoft.Xna.Framework.Input.Keys.Space' ControllingPlayer' out player) ||  			    input.IsNewKeyPress (Microsoft.Xna.Framework.Input.Keys.Enter' ControllingPlayer' out player) ||  			    input.MouseGesture.HasFlag(MouseGestureType.LeftClick)||  			    input.IsNewButtonPress (Microsoft.Xna.Framework.Input.Buttons.Start' ControllingPlayer' out player)"  is complex.
Complex Conditional,GameStateManagement,GameScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\GameScreen.cs,UpdateTransition,The conditional expression  "((direction < 0) && (transitionPosition <= 0)) ||                  ((direction > 0) && (transitionPosition >= 1))"  is complex.
Magic Number,CatapultGame,CatapultGame,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\CatapultGame.cs,CatapultGame,The following statement contains a magic number: TargetElapsedTime = TimeSpan.FromTicks(333333);
Magic Number,CatapultGame,Catapult,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Catapult.cs,Initialize,The following statement contains a magic number: if (isAI)                  projectileStartPosition = new Vector2(630' 340);              else                  projectileStartPosition = new Vector2(175' 340);
Magic Number,CatapultGame,Catapult,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Catapult.cs,Initialize,The following statement contains a magic number: if (isAI)                  projectileStartPosition = new Vector2(630' 340);              else                  projectileStartPosition = new Vector2(175' 340);
Magic Number,CatapultGame,Catapult,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Catapult.cs,Initialize,The following statement contains a magic number: if (isAI)                  projectileStartPosition = new Vector2(630' 340);              else                  projectileStartPosition = new Vector2(175' 340);
Magic Number,CatapultGame,Catapult,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Catapult.cs,Initialize,The following statement contains a magic number: if (isAI)                  projectileStartPosition = new Vector2(630' 340);              else                  projectileStartPosition = new Vector2(175' 340);
Magic Number,CatapultGame,Catapult,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Catapult.cs,Update,The following statement contains a magic number: switch (currentState)              {                  case CatapultState.Idle:                      // Nothing to do                      break;                  case CatapultState.Aiming:                      if (lastUpdateState != CatapultState.Aiming)                      {                          AudioManager.PlaySound("ropeStretch"' true);                            AnimationRunning = true;                          if (isAI == true)                          {                              animations["Aim"].PlayFromFrameIndex(0);                              stallUpdateCycles = 20;                              startStall = false;                          }                      }                        // Progress Aiming "animation"                      if (isAI == false)                      {                          UpdateAimAccordingToShotStrength();                      }                      else                      {                          animations["Aim"].Update();                          startStall = AimReachedShotStrength();                          currentState = (startStall) ?                               CatapultState.Stalling : CatapultState.Aiming;                      }                      break;                  case CatapultState.Stalling:                      if (stallUpdateCycles-- <= 0)                      {                          // We've finished stalling' fire the projectile                          Fire(ShotVelocity);                          postUpdateStateChange = CatapultState.Firing;                      }                      break;                  case CatapultState.Firing:                      // Progress Fire animation                      if (lastUpdateState != CatapultState.Firing)                      {                          AudioManager.StopSound("ropeStretch");                          AudioManager.PlaySound("catapultFire");                          StartFiringFromLastAimPosition();                      }                        animations["Fire"].Update();                        // If in the "split" point of the animation start                       // projectile fire sequence                      if (animations["Fire"].FrameIndex == splitFrames["Fire"])                      {                          postUpdateStateChange =                               currentState | CatapultState.ProjectileFlying;                          projectile.ProjectilePosition =                               projectile.ProjectileStartPosition;                      }                      break;                  case CatapultState.Firing | CatapultState.ProjectileFlying:                      // Progress Fire animation                                          animations["Fire"].Update();                        // Update projectile velocity & position in flight                      projectile.UpdateProjectileFlightData(gameTime' wind'                           gravity' out isGroundHit);                        if (isGroundHit)                      {                          // Start hit sequence                          postUpdateStateChange = CatapultState.ProjectileHit;                          animations["fireMiss"].PlayFromFrameIndex(0);                      }                      break;                  case CatapultState.ProjectileFlying:                      // Update projectile velocity & position in flight                      projectile.UpdateProjectileFlightData(gameTime' wind'                           gravity' out isGroundHit);                      if (isGroundHit)                      {                          // Start hit sequence                          postUpdateStateChange = CatapultState.ProjectileHit;                          animations["fireMiss"].PlayFromFrameIndex(0);                      }                        break;                  case CatapultState.ProjectileHit:                      // Check hit on ground impact                      if (!CheckHit())                      {                          if (lastUpdateState != CatapultState.ProjectileHit)                          {  //                            VibrateController.Default.Start(  //                                TimeSpan.FromMilliseconds(100));                              // Play hit sound only on a missed hit'                              // a direct hit will trigger the explosion sound                              AudioManager.PlaySound("boulderHit");                          }                            // Hit animation finished playing                          if (animations["fireMiss"].IsActive == false)                          {                              postUpdateStateChange = CatapultState.Reset;                          }                            animations["fireMiss"].Update();                      }                      else                      {                          // Catapult hit - start longer vibration on any catapult hit                           // Remember that the call to "CheckHit" updates the catapult's                          // state to "Hit"  //                        VibrateController.Default.Start(  //                            TimeSpan.FromMilliseconds(500));                      }                        break;                  case CatapultState.Hit:                      // Progress hit animation                      if ((animations["Destroyed"].IsActive == false) &&                          (animations["hitSmoke"].IsActive == false))                      {                          if (enemy.Score >= winScore)                          {                              GameOver = true;                              break;                          }                            postUpdateStateChange = CatapultState.Reset;                      }                        animations["Destroyed"].Update();                      animations["hitSmoke"].Update();                        break;                  case CatapultState.Reset:                      AnimationRunning = false;                      break;                  default:                      break;              }
Magic Number,CatapultGame,Catapult,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Catapult.cs,CheckHit,The following statement contains a magic number: BoundingSphere sphere = new BoundingSphere(center'                  Math.Max(projectile.ProjectileTexture.Width / 2'                  projectile.ProjectileTexture.Height / 2));
Magic Number,CatapultGame,Catapult,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Catapult.cs,CheckHit,The following statement contains a magic number: BoundingSphere sphere = new BoundingSphere(center'                  Math.Max(projectile.ProjectileTexture.Width / 2'                  projectile.ProjectileTexture.Height / 2));
Magic Number,CatapultGame,Projectile,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Projectile.cs,Draw,The following statement contains a magic number: spriteBatch.Draw(projectileTexture' projectilePosition' null'                   Color.White' projectileRotation'                  new Vector2(projectileTexture.Width / 2'                              projectileTexture.Height / 2)'                  1.0f' SpriteEffects.None' 0);
Magic Number,CatapultGame,Projectile,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Projectile.cs,Draw,The following statement contains a magic number: spriteBatch.Draw(projectileTexture' projectilePosition' null'                   Color.White' projectileRotation'                  new Vector2(projectileTexture.Width / 2'                              projectileTexture.Height / 2)'                  1.0f' SpriteEffects.None' 0);
Magic Number,CatapultGame,Projectile,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Projectile.cs,UpdateProjectileFlightData,The following statement contains a magic number: projectilePosition.X = projectileStartPosition.X +                   (direction * projectileVelocity.X * flightTime) +                   0.5f * (8 * wind * (float)Math.Pow(flightTime' 2));
Magic Number,CatapultGame,Projectile,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Projectile.cs,UpdateProjectileFlightData,The following statement contains a magic number: projectilePosition.X = projectileStartPosition.X +                   (direction * projectileVelocity.X * flightTime) +                   0.5f * (8 * wind * (float)Math.Pow(flightTime' 2));
Magic Number,CatapultGame,Projectile,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Projectile.cs,UpdateProjectileFlightData,The following statement contains a magic number: projectilePosition.Y = projectileStartPosition.Y -                  (projectileVelocity.Y * flightTime) +                  0.5f * (gravity * (float)Math.Pow(flightTime' 2));
Magic Number,CatapultGame,Projectile,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Projectile.cs,UpdateProjectileFlightData,The following statement contains a magic number: if (projectilePosition.Y >= 332 + hitOffset)              {                  projectilePosition.X = previousXPosition;                  projectilePosition.Y = previousYPosition;                    ProjectileHitPosition = new Vector2(previousXPosition' 332);                    groundHit = true;              }              else              {                  groundHit = false;              }
Magic Number,CatapultGame,Projectile,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Catapult\Projectile.cs,UpdateProjectileFlightData,The following statement contains a magic number: if (projectilePosition.Y >= 332 + hitOffset)              {                  projectilePosition.X = previousXPosition;                  projectilePosition.Y = previousYPosition;                    ProjectileHitPosition = new Vector2(previousXPosition' 332);                    groundHit = true;              }              else              {                  groundHit = false;              }
Magic Number,CatapultGame,AI,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Players\AI.cs,AI,The following statement contains a magic number: Catapult = new Catapult(game' screenSpriteBatch'                              "Textures/Catapults/Red/redIdle/redIdle"'                              new Vector2(600' 332)' SpriteEffects.FlipHorizontally' true);
Magic Number,CatapultGame,AI,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Players\AI.cs,AI,The following statement contains a magic number: Catapult = new Catapult(game' screenSpriteBatch'                              "Textures/Catapults/Red/redIdle/redIdle"'                              new Vector2(600' 332)' SpriteEffects.FlipHorizontally' true);
Magic Number,CatapultGame,Human,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Players\Human.cs,DrawDragArrow,The following statement contains a magic number: spriteBatch.Draw (arrow' catapultPosition + new Vector2 (0' -40)'                null' Color.Blue' 0'                Vector2.Zero' new Vector2 (arrowScale' 0.1f)' SpriteEffects.None' 0);
Magic Number,CatapultGame,BackgroundScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\BackgroundScreen.cs,BackgroundScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds(0.5);
Magic Number,CatapultGame,BackgroundScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\BackgroundScreen.cs,Draw,The following statement contains a magic number: spriteBatch.Draw(background' new Vector2(0' 0)'                   new Color(255' 255' 255' TransitionAlpha));
Magic Number,CatapultGame,BackgroundScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\BackgroundScreen.cs,Draw,The following statement contains a magic number: spriteBatch.Draw(background' new Vector2(0' 0)'                   new Color(255' 255' 255' TransitionAlpha));
Magic Number,CatapultGame,BackgroundScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\BackgroundScreen.cs,Draw,The following statement contains a magic number: spriteBatch.Draw(background' new Vector2(0' 0)'                   new Color(255' 255' 255' TransitionAlpha));
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: cloud1Position = new Vector2(224 - cloud1Texture.Width' 32);
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: cloud1Position = new Vector2(224 - cloud1Texture.Width' 32);
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: cloud2Position = new Vector2(64' 90);
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: cloud2Position = new Vector2(64' 90);
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: playerHUDPosition = new Vector2(7' 7);
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: playerHUDPosition = new Vector2(7' 7);
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: computerHUDPosition = new Vector2(613' 7);
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: computerHUDPosition = new Vector2(613' 7);
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: windArrowPosition = new Vector2(345' 46);
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: windArrowPosition = new Vector2(345' 46);
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,Update,The following statement contains a magic number: if (changeTurn)              {                  // Update wind                  wind = new Vector2(random.Next(-1' 2)'                      random.Next(minWind' maxWind + 1));                    // Set new wind value to the players and                   player.Catapult.Wind = computer.Catapult.Wind =                      wind.X > 0 ? wind.Y : -wind.Y;                  changeTurn = false;              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver)              {                  Texture2D texture;                  if (player.Score > computer.Score)                  {                      texture = victoryTexture;                  }                  else                  {                      texture = defeatTexture;                  }                    ScreenManager.SpriteBatch.Draw(                      texture'                      new Vector2(ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2'                                  ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)'                      Color.White);              }              else              {                  // Draw Player Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      playerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      playerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' player.Score.ToString()'                      playerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' player.Name'                      playerHUDPosition + new Vector2(40' 1)' Color.Blue);                    // Draw Computer Hud                  ScreenManager.SpriteBatch.Draw(hudBackgroundTexture'                      computerHUDPosition' Color.White);                  ScreenManager.SpriteBatch.Draw(ammoTypeTexture'                      computerHUDPosition + new Vector2(33' 35)' Color.White);                  DrawString(hudFont' computer.Score.ToString()'                      computerHUDPosition + new Vector2(123' 35)' Color.White);                  DrawString(hudFont' computer.Name'                      computerHUDPosition + new Vector2(40' 1)' Color.Red);                    // Draw Wind direction                  string text = "WIND";                  Vector2 size = hudFont.MeasureString(text);                  Vector2 windarrowScale = new Vector2(wind.Y / 10' 1);                  ScreenManager.SpriteBatch.Draw(windArrowTexture'                      windArrowPosition' null' Color.White' 0' Vector2.Zero'                      windarrowScale' wind.X > 0                      ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);                    DrawString(hudFont' text'                      windArrowPosition - new Vector2(0' size.Y)' Color.Black);                  if (wind.Y == 0)                  {                      text = "NONE";                      DrawString(hudFont' text' windArrowPosition' Color.Black);                  }                    if (isHumanTurn)                  {                      // Prepare human prompt message                      text = !isDragging ?                          "Drag Anywhere to Fire" : "Release to Fire!";                      size = hudFont.MeasureString(text);                  }                  else                  {                      // Prepare AI message                      text = "I'll get you yet!";                      size = hudFont.MeasureString(text);                  }                    DrawString(hudFont' text'                      new Vector2(                          ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2'                          ScreenManager.GraphicsDevice.Viewport.Height - size.Y)'                          Color.Green);              }
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawString,The following statement contains a magic number: ScreenManager.SpriteBatch.DrawString(font' text' new Vector2(position.X + 1'                  position.Y + 1)' Color.Black' 0' new Vector2(0' font.LineSpacing / 2)'                  fontScale' SpriteEffects.None' 0);
Magic Number,CatapultGame,GameplayScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\GameplayScreen.cs,DrawString,The following statement contains a magic number: ScreenManager.SpriteBatch.DrawString(font' text' position' color' 0'                  new Vector2(0' font.LineSpacing / 2)' fontScale' SpriteEffects.None' 0);
Magic Number,CatapultGame,InstructionsScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\InstructionsScreen.cs,InstructionsScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds (0.5);
Magic Number,CatapultGame,InstructionsScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (background' new Vector2 (0' 0)' new Color (255' 255' 255' TransitionAlpha));
Magic Number,CatapultGame,InstructionsScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (background' new Vector2 (0' 0)' new Color (255' 255' 255' TransitionAlpha));
Magic Number,CatapultGame,InstructionsScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (background' new Vector2 (0' 0)' new Color (255' 255' 255' TransitionAlpha));
Magic Number,CatapultGame,InstructionsScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: if (isLoading) {  				string text = "Loading...";  				Vector2 size = font.MeasureString (text);  				Vector2 position = new Vector2 ((ScreenManager.GraphicsDevice.Viewport.Width - size.X) / 2'  				                                (ScreenManager.GraphicsDevice.Viewport.Height - size.Y) / 2);  				spriteBatch.DrawString (font' text' position' Color.Black);  				spriteBatch.DrawString (font' text' position - new Vector2 (-4' 4)' new Color (255f' 150f' 0f));  			}
Magic Number,CatapultGame,InstructionsScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: if (isLoading) {  				string text = "Loading...";  				Vector2 size = font.MeasureString (text);  				Vector2 position = new Vector2 ((ScreenManager.GraphicsDevice.Viewport.Width - size.X) / 2'  				                                (ScreenManager.GraphicsDevice.Viewport.Height - size.Y) / 2);  				spriteBatch.DrawString (font' text' position' Color.Black);  				spriteBatch.DrawString (font' text' position - new Vector2 (-4' 4)' new Color (255f' 150f' 0f));  			}
Magic Number,CatapultGame,InstructionsScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: if (isLoading) {  				string text = "Loading...";  				Vector2 size = font.MeasureString (text);  				Vector2 position = new Vector2 ((ScreenManager.GraphicsDevice.Viewport.Width - size.X) / 2'  				                                (ScreenManager.GraphicsDevice.Viewport.Height - size.Y) / 2);  				spriteBatch.DrawString (font' text' position' Color.Black);  				spriteBatch.DrawString (font' text' position - new Vector2 (-4' 4)' new Color (255f' 150f' 0f));  			}
Magic Number,CatapultGame,InstructionsScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: if (isLoading) {  				string text = "Loading...";  				Vector2 size = font.MeasureString (text);  				Vector2 position = new Vector2 ((ScreenManager.GraphicsDevice.Viewport.Width - size.X) / 2'  				                                (ScreenManager.GraphicsDevice.Viewport.Height - size.Y) / 2);  				spriteBatch.DrawString (font' text' position' Color.Black);  				spriteBatch.DrawString (font' text' position - new Vector2 (-4' 4)' new Color (255f' 150f' 0f));  			}
Magic Number,CatapultGame,MainMenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\MainMenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: foreach (var entry in MenuEntries)              {                  Vector2 position = entry.Position;                    position.Y += 60;                    entry.Position = position;              }
Magic Number,CatapultGame,PauseScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\Screens\PauseScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: foreach (var entry in MenuEntries)              {                  Vector2 position = entry.Position;                    position.Y += 60;                    entry.Position = position;              }
Magic Number,GameStateManagement,MenuEntry,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuEntry.cs,Update,The following statement contains a magic number: float fadeSpeed = (float)gameTime.ElapsedGameTime.TotalSeconds * 4;
Magic Number,GameStateManagement,MenuEntry,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuEntry.cs,Draw,The following statement contains a magic number: float pulsate = (float)Math.Sin(time * 6) + 1;
Magic Number,GameStateManagement,MenuEntry,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuEntry.cs,Draw,The following statement contains a magic number: Vector2 origin = new Vector2(0' font.LineSpacing / 2);
Magic Number,GameStateManagement,MenuEntry,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuEntry.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString(font' text' position + new Vector2(4' 4)' Color.Black' 0'                  origin' scale' SpriteEffects.None' 0);
Magic Number,GameStateManagement,MenuEntry,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuEntry.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString(font' text' position + new Vector2(4' 4)' Color.Black' 0'                  origin' scale' SpriteEffects.None' 0);
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,MenuScreen,The following statement contains a magic number: TransitionOnTime = TimeSpan.FromSeconds(0.5);
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,MenuScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds(0.5);
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,GetMenuEntryHitBounds,The following statement contains a magic number: return new Rectangle(                  0'                  (int)entry.Position.Y - menuEntryPadding'                  ScreenManager.GraphicsDevice.Viewport.Width'                  entry.GetHeight(this) + (menuEntryPadding * 2));
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: float transitionOffset = (float)Math.Pow(TransitionPosition' 2);
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: for (int i = 0; i < menuEntries.Count; i++)              {                  MenuEntry menuEntry = menuEntries[i];                                    // each entry is to be centered horizontally                  position.X = ScreenManager.GraphicsDevice.Viewport.Width / 2 - menuEntry.GetWidth(this) / 2;                    if (ScreenState == ScreenState.TransitionOn)                      position.X -= transitionOffset * 256;                  else                      position.X += transitionOffset * 512;                    // set the entry's position                  menuEntry.Position = position;                    // move down for the next entry the size of this entry plus our padding                  position.Y += menuEntry.GetHeight(this) + (menuEntryPadding * 2);              }
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: for (int i = 0; i < menuEntries.Count; i++)              {                  MenuEntry menuEntry = menuEntries[i];                                    // each entry is to be centered horizontally                  position.X = ScreenManager.GraphicsDevice.Viewport.Width / 2 - menuEntry.GetWidth(this) / 2;                    if (ScreenState == ScreenState.TransitionOn)                      position.X -= transitionOffset * 256;                  else                      position.X += transitionOffset * 512;                    // set the entry's position                  menuEntry.Position = position;                    // move down for the next entry the size of this entry plus our padding                  position.Y += menuEntry.GetHeight(this) + (menuEntryPadding * 2);              }
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: for (int i = 0; i < menuEntries.Count; i++)              {                  MenuEntry menuEntry = menuEntries[i];                                    // each entry is to be centered horizontally                  position.X = ScreenManager.GraphicsDevice.Viewport.Width / 2 - menuEntry.GetWidth(this) / 2;                    if (ScreenState == ScreenState.TransitionOn)                      position.X -= transitionOffset * 256;                  else                      position.X += transitionOffset * 512;                    // set the entry's position                  menuEntry.Position = position;                    // move down for the next entry the size of this entry plus our padding                  position.Y += menuEntry.GetHeight(this) + (menuEntryPadding * 2);              }
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: for (int i = 0; i < menuEntries.Count; i++)              {                  MenuEntry menuEntry = menuEntries[i];                                    // each entry is to be centered horizontally                  position.X = ScreenManager.GraphicsDevice.Viewport.Width / 2 - menuEntry.GetWidth(this) / 2;                    if (ScreenState == ScreenState.TransitionOn)                      position.X -= transitionOffset * 256;                  else                      position.X += transitionOffset * 512;                    // set the entry's position                  menuEntry.Position = position;                    // move down for the next entry the size of this entry plus our padding                  position.Y += menuEntry.GetHeight(this) + (menuEntryPadding * 2);              }
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: for (int i = 0; i < menuEntries.Count; i++)              {                  MenuEntry menuEntry = menuEntries[i];                                    // each entry is to be centered horizontally                  position.X = ScreenManager.GraphicsDevice.Viewport.Width / 2 - menuEntry.GetWidth(this) / 2;                    if (ScreenState == ScreenState.TransitionOn)                      position.X -= transitionOffset * 256;                  else                      position.X += transitionOffset * 512;                    // set the entry's position                  menuEntry.Position = position;                    // move down for the next entry the size of this entry plus our padding                  position.Y += menuEntry.GetHeight(this) + (menuEntryPadding * 2);              }
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: float transitionOffset = (float)Math.Pow(TransitionPosition' 2);
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: Vector2 titlePosition = new Vector2(graphics.Viewport.Width / 2' 80);
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: Vector2 titlePosition = new Vector2(graphics.Viewport.Width / 2' 80);
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: Vector2 titleOrigin = font.MeasureString(menuTitle) / 2;
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: Color titleColor = new Color(192' 192' 192) * TransitionAlpha;
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: Color titleColor = new Color(192' 192' 192) * TransitionAlpha;
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: Color titleColor = new Color(192' 192' 192) * TransitionAlpha;
Magic Number,GameStateManagement,MenuScreen,C:\repos\CartBlanche_MonoGame-Samples\CatapaultWars\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: titlePosition.Y -= transitionOffset * 100;
