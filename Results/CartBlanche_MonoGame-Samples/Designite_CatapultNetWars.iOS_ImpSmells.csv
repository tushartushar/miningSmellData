Implementation smell,Namespace,Class,File,Method,Description
Long Method,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Update,The method has 123 lines of code.
Complex Method,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Update,Cyclomatic complexity of the method is 52
Complex Method,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Draw,Cyclomatic complexity of the method is 29
Complex Method,CatapultGame,NetworkSessionComponent,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\NetworkSessionComponent.cs,NetworkSessionEnded,Cyclomatic complexity of the method is 13
Complex Method,CatapultGame,NetworkSessionComponent,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\NetworkSessionComponent.cs,ChooseGamers,Cyclomatic complexity of the method is 9
Complex Method,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,Update,Cyclomatic complexity of the method is 11
Complex Method,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,HandleInput,Cyclomatic complexity of the method is 17
Complex Method,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,UpdateNetworkSession,Cyclomatic complexity of the method is 8
Complex Method,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,ReadIncomingPackets,Cyclomatic complexity of the method is 22
Complex Method,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,Cyclomatic complexity of the method is 13
Complex Method,GameStateManagement,InputState,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\InputState.cs,UpdateMouseStates,Cyclomatic complexity of the method is 9
Complex Method,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,HandleInput,Cyclomatic complexity of the method is 17
Complex Method,GameStateManagement,ScreenManager,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\ScreenManager.cs,Update,Cyclomatic complexity of the method is 8
Complex Method,GameStateManagement,ScreenManager,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\ScreenManager.cs,SerializeState,Cyclomatic complexity of the method is 14
Complex Method,GameStateManagement,ScreenManager,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\ScreenManager.cs,DeserializeState,Cyclomatic complexity of the method is 15
Complex Method,GameStateManagement,MessageBoxScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\MessageBoxScreen.cs,HandleInput,Cyclomatic complexity of the method is 9
Long Parameter List,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Catapult,The method has 6 parameters.
Long Parameter List,CatapultGame,Projectile,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Projectile.cs,Projectile,The method has 7 parameters.
Long Parameter List,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawString,The method has 5 parameters.
Long Statement,CatapultGame,MessageDisplayComponent,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\MessageDisplayComponent.cs,Draw,The length of the statement  "			spriteBatch.DrawString (font' message.Text' position + Vector2.One' Color.Black * alpha' 0' origin' scale' SpriteEffects.None' 0); " is 130.
Long Statement,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Initialize,The length of the statement  "				animation.Offset = new Vector2 (int.Parse (animationDefinition.Attribute ("OffsetX").Value)' int.Parse (animationDefinition.Attribute ("OffsetY").Value)); " is 154.
Long Statement,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Initialize,The length of the statement  "	projectile = new Projectile (curGame' spriteBatch' "Textures/Ammo/rock_ammo"' projectileStartPosition' animations ["Fire"].FrameSize.Y' isAI' gravity); " is 151.
Long Statement,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,CheckHit,The length of the statement  "	BoundingSphere sphere = new BoundingSphere (center' Math.Max (projectile.ProjectileTexture.Width / 2' projectile.ProjectileTexture.Height / 2)); " is 144.
Long Statement,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,CheckHit,The length of the statement  "	Vector3 max = new Vector3 (catapultPosition + new Vector2 (animations ["Fire"].FrameSize.X' animations ["Fire"].FrameSize.Y)' 0); " is 129.
Long Statement,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,CheckHit,The length of the statement  "	max = new Vector3 (enemy.Catapult.Position + new Vector2 (animations ["Fire"].FrameSize.X' animations ["Fire"].FrameSize.Y)' 0); " is 128.
Long Statement,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,CheckHit,The length of the statement  "	else if (sphere.Intersects (enemyBox) && enemy.Catapult.CurrentState != CatapultState.Hit && enemy.Catapult.CurrentState != CatapultState.Reset) { " is 146.
Long Statement,CatapultGame,Projectile,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Projectile.cs,Draw,The length of the statement  "	spriteBatch.Draw (projectileTexture' projectilePosition' null' Color.White' projectileRotation' new Vector2 (projectileTexture.Width / 2' projectileTexture.Height / 2)' 1.0f' SpriteEffects.None' 0); " is 198.
Long Statement,CatapultGame,Projectile,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Projectile.cs,UpdateProjectileFlightData,The length of the statement  "	projectilePosition.X = projectileStartPosition.X + (direction * projectileVelocity.X * flightTime) + 0.5f * (8 * wind * (float)Math.Pow (flightTime' 2)); " is 153.
Long Statement,CatapultGame,Projectile,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Projectile.cs,UpdateProjectileFlightData,The length of the statement  "	projectilePosition.Y = projectileStartPosition.Y - (projectileVelocity.Y * flightTime) + 0.5f * (gravity * (float)Math.Pow (flightTime' 2)); " is 140.
Long Statement,CatapultGame,CreateOrFindSessionScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\CreateOrFindSessionScreen.cs,CreateSessionMenuEntrySelected,The length of the statement  "		IAsyncResult asyncResult = NetworkSession.BeginCreate (sessionType' localGamers' NetworkSessionComponent.MaxGamers' 0' null' null' null); " is 137.
Long Statement,CatapultGame,NetworkBusyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\NetworkBusyScreen.cs,Draw,The length of the statement  "	Rectangle backgroundRectangle = new Rectangle ((int)textPosition.X - hPad' (int)textPosition.Y - vPad' (int)textSize.X + hPad * 2' (int)textSize.Y + vPad * 2); " is 159.
Long Statement,CatapultGame,ProfileSignInScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\ProfileSignInScreen.cs,Update,The length of the statement  "		if ((Guide.IsTrialMode) && (NetworkSessionComponent.IsOnlineSessionType (sessionType)) && (Gamer.SignedInGamers [ControllingPlayer.Value] != null) && (!haveShownMarketplace)) { " is 176.
Long Statement,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,DrawDragArrow,The length of the statement  "		spriteBatch.Draw (arrow' catapultPosition + new Vector2 (0' -40)' null' Color.Blue' 0' Vector2.Zero' new Vector2 (arrowScale' 0.1f)' spriteEffect' 0); " is 150.
Long Statement,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,DrawDragArrow,The length of the statement  "		spriteBatch.Draw (arrow' catapultPosition + new Vector2 (-arrow.Width * arrowScale + 40' -40)' null' Color.Red' 0' Vector2.Zero' new Vector2 (arrowScale' 0.1f)' spriteEffect' 0); " is 178.
Long Statement,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,Update,The length of the statement  "	if ((playerOne.Catapult.CurrentState == CatapultState.Reset || playerTwo.Catapult.CurrentState == CatapultState.Reset) && !(playerOne.Catapult.AnimationRunning || playerTwo.Catapult.AnimationRunning)) { " is 202.
Long Statement,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,HandleInput,The length of the statement  "	} else if (isFirstPlayerTurn && (playerOne.Catapult.CurrentState == CatapultState.Idle || playerOne.Catapult.CurrentState == CatapultState.Aiming)) { " is 149.
Long Statement,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,HandleInput,The length of the statement  "	} else if (!isFirstPlayerTurn && (playerTwo.Catapult.CurrentState == CatapultState.Idle || playerTwo.Catapult.CurrentState == CatapultState.Aiming)) { " is 150.
Long Statement,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The length of the statement  "		ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White); " is 218.
Long Statement,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The length of the statement  "		ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0); " is 190.
Long Statement,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The length of the statement  "		DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green); " is 171.
Long Statement,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawString,The length of the statement  "	ScreenManager.SpriteBatch.DrawString (font' text' new Vector2 (position.X + 1' position.Y + 1)' Color.Black' 0' new Vector2 (0' font.LineSpacing / 2)' fontScale' SpriteEffects.None' 0); " is 185.
Long Statement,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawString,The length of the statement  "	ScreenManager.SpriteBatch.DrawString (font' text' position' color' 0' new Vector2 (0' font.LineSpacing / 2)' fontScale' SpriteEffects.None' 0); " is 143.
Long Statement,CatapultGame,InstructionsScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\InstructionsScreen.cs,HandleInput,The length of the statement  "	if (input.IsNewKeyPress (Microsoft.Xna.Framework.Input.Keys.Space' ControllingPlayer' out player) || input.IsNewKeyPress (Microsoft.Xna.Framework.Input.Keys.Enter' ControllingPlayer' out player) || input.MouseGesture.HasFlag (MouseGestureType.LeftClick) || input.IsNewButtonPress (Microsoft.Xna.Framework.Input.Buttons.Start' ControllingPlayer' out player)) { " is 359.
Long Statement,CatapultGame,InstructionsScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\InstructionsScreen.cs,Draw,The length of the statement  "		Vector2 position = new Vector2 ((ScreenManager.GraphicsDevice.Viewport.Width - size.X) / 2' (ScreenManager.GraphicsDevice.Viewport.Height - size.Y) / 2); " is 153.
Long Statement,CatapultGame,Animation,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Utility\Animation.cs,Draw,The length of the statement  "	spriteBatch.Draw (animatedCharacter' position + Offset' new Rectangle (FrameSize.X * currentFrame.X' FrameSize.Y * currentFrame.Y' FrameSize.X' FrameSize.Y)' Color.White' 0f' Vector2.Zero' scale' spriteEffect' 0); " is 213.
Long Statement,GameStateManagement,InputState,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\InputState.cs,UpdateMouseStates,The length of the statement  "	if (!leftMouseDown && CurrentMouseState.LeftButton == ButtonState.Pressed && !CurrentMouseState.Equals (LastMouseState)) { " is 122.
Long Statement,GameStateManagement,InputState,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\InputState.cs,UpdateMouseStates,The length of the statement  "	if (leftMouseDown && CurrentMouseState.LeftButton == ButtonState.Released && !CurrentMouseState.Equals (LastMouseState)) { " is 122.
Long Statement,GameStateManagement,InputState,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\InputState.cs,IsNewKeyPress,The length of the statement  "		return (IsNewKeyPress (key' PlayerIndex.One' out playerIndex) || IsNewKeyPress (key' PlayerIndex.Two' out playerIndex) || IsNewKeyPress (key' PlayerIndex.Three' out playerIndex) || IsNewKeyPress (key' PlayerIndex.Four' out playerIndex)); " is 237.
Long Statement,GameStateManagement,InputState,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\InputState.cs,IsNewButtonPress,The length of the statement  "		return (IsNewButtonPress (button' PlayerIndex.One' out playerIndex) || IsNewButtonPress (button' PlayerIndex.Two' out playerIndex) || IsNewButtonPress (button' PlayerIndex.Three' out playerIndex) || IsNewButtonPress (button' PlayerIndex.Four' out playerIndex)); " is 261.
Long Statement,GameStateManagement,InputState,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\InputState.cs,IsMenuSelect,The length of the statement  "	return IsNewKeyPress (Keys.Space' controllingPlayer' out playerIndex) || IsNewKeyPress (Keys.Enter' controllingPlayer' out playerIndex) || IsNewButtonPress (Buttons.A' controllingPlayer' out playerIndex) || IsNewButtonPress (Buttons.Start' controllingPlayer' out playerIndex); " is 276.
Long Statement,GameStateManagement,InputState,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\InputState.cs,IsMenuCancel,The length of the statement  "	return IsNewKeyPress (Keys.Escape' controllingPlayer' out playerIndex) || IsNewButtonPress (Buttons.B' controllingPlayer' out playerIndex) || IsNewButtonPress (Buttons.Back' controllingPlayer' out playerIndex); " is 210.
Long Statement,GameStateManagement,InputState,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\InputState.cs,IsMenuUp,The length of the statement  "	return IsNewKeyPress (Keys.Up' controllingPlayer' out playerIndex) || IsNewButtonPress (Buttons.DPadUp' controllingPlayer' out playerIndex) || IsNewButtonPress (Buttons.LeftThumbstickUp' controllingPlayer' out playerIndex); " is 223.
Long Statement,GameStateManagement,InputState,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\InputState.cs,IsMenuDown,The length of the statement  "	return IsNewKeyPress (Keys.Down' controllingPlayer' out playerIndex) || IsNewButtonPress (Buttons.DPadDown' controllingPlayer' out playerIndex) || IsNewButtonPress (Buttons.LeftThumbstickDown' controllingPlayer' out playerIndex); " is 229.
Long Statement,GameStateManagement,InputState,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\InputState.cs,IsPauseGame,The length of the statement  "	return IsNewKeyPress (Keys.Escape' controllingPlayer' out playerIndex) || IsNewButtonPress (Buttons.Back' controllingPlayer' out playerIndex) || IsNewButtonPress (Buttons.Start' controllingPlayer' out playerIndex); " is 214.
Long Statement,GameStateManagement,MenuEntry,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuEntry.cs,Draw,The length of the statement  "	spriteBatch.DrawString (font' text' position + new Vector2 (4' 4)' Color.Black' 0' origin' scale' SpriteEffects.None' 0); " is 121.
Long Statement,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,GetMenuEntryHitBounds,The length of the statement  "	return new Rectangle (0' (int)entry.Position.Y - menuEntryPadding' ScreenManager.GraphicsDevice.Viewport.Width' entry.GetHeight (this) + (menuEntryPadding * 2)); " is 161.
Long Statement,GameStateManagement,ScreenManager,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\ScreenManager.cs,DeserializeState,The length of the statement  "					using (IsolatedStorageFileStream stream = storage.OpenFile ("ScreenManager\\ScreenList.dat"' FileMode.Open' FileAccess.Read)) { " is 127.
Long Statement,GameStateManagement,MessageBoxScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\MessageBoxScreen.cs,Draw,The length of the statement  "	Rectangle backgroundRectangle = new Rectangle ((int)textPosition.X - hPad' (int)textPosition.Y - vPad' (int)textSize.X + hPad * 2' (int)textSize.Y + vPad * 2); " is 159.
Complex Conditional,CatapultGame,ProfileSignInScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\ProfileSignInScreen.cs,Update,The conditional expression  "(Guide.IsTrialMode) && (NetworkSessionComponent.IsOnlineSessionType (sessionType)) && (Gamer.SignedInGamers [ControllingPlayer.Value] != null) && (!haveShownMarketplace)"  is complex.
Complex Conditional,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,Update,The conditional expression  "(playerOne.Catapult.CurrentState == CatapultState.Reset || playerTwo.Catapult.CurrentState == CatapultState.Reset) && !(playerOne.Catapult.AnimationRunning || playerTwo.Catapult.AnimationRunning)"  is complex.
Complex Conditional,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,HandleInput,The conditional expression  "(isFirstPlayerTurn && !NetworkSession.IsHost) || (!isFirstPlayerTurn && NetworkSession.IsHost)"  is complex.
Complex Conditional,CatapultGame,InstructionsScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\InstructionsScreen.cs,HandleInput,The conditional expression  "input.IsNewKeyPress (Microsoft.Xna.Framework.Input.Keys.Space' ControllingPlayer' out player) || input.IsNewKeyPress (Microsoft.Xna.Framework.Input.Keys.Enter' ControllingPlayer' out player) || input.MouseGesture.HasFlag (MouseGestureType.LeftClick) || input.IsNewButtonPress (Microsoft.Xna.Framework.Input.Buttons.Start' ControllingPlayer' out player)"  is complex.
Complex Conditional,GameStateManagement,GameScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\GameScreen.cs,UpdateTransition,The conditional expression  "((direction < 0) && (transitionPosition <= 0)) || ((direction > 0) && (transitionPosition >= 1))"  is complex.
Magic Number,CatapultGame,CatapultGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\CatapultGame.cs,CatapultGame,The following statement contains a magic number: TargetElapsedTime = TimeSpan.FromTicks (333333);  
Magic Number,CatapultGame,MessageDisplayComponent,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\MessageDisplayComponent.cs,Update,The following statement contains a magic number: lock (syncObject) {  	int index = 0;  	float targetPosition = 0;  	// Update each message in turn.  	while (index < messages.Count) {  		NotificationMessage message = messages [index];  		// Gradually slide the message toward its desired position.  		float positionDelta = targetPosition - message.Position;  		float velocity = (float)gameTime.ElapsedGameTime.TotalSeconds * 2;  		message.Position += positionDelta * Math.Min (velocity' 1);  		// Update the age of the message.  		message.Age += gameTime.ElapsedGameTime;  		if (message.Age < showTime + fadeOutTime) {  			// This message is still alive.  			index++;  			// Any subsequent messages should be positioned below  			// this one' unless it has started to fade out.  			if (message.Age < showTime)  				targetPosition++;  		} else {  			// This message is old' and should be removed.  			messages.RemoveAt (index);  		}  	}  }  
Magic Number,CatapultGame,MessageDisplayComponent,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\MessageDisplayComponent.cs,Update,The following statement contains a magic number: while (index < messages.Count) {  	NotificationMessage message = messages [index];  	// Gradually slide the message toward its desired position.  	float positionDelta = targetPosition - message.Position;  	float velocity = (float)gameTime.ElapsedGameTime.TotalSeconds * 2;  	message.Position += positionDelta * Math.Min (velocity' 1);  	// Update the age of the message.  	message.Age += gameTime.ElapsedGameTime;  	if (message.Age < showTime + fadeOutTime) {  		// This message is still alive.  		index++;  		// Any subsequent messages should be positioned below  		// this one' unless it has started to fade out.  		if (message.Age < showTime)  			targetPosition++;  	} else {  		// This message is old' and should be removed.  		messages.RemoveAt (index);  	}  }  
Magic Number,CatapultGame,MessageDisplayComponent,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\MessageDisplayComponent.cs,Draw,The following statement contains a magic number: lock (syncObject) {  	// Early out if there are no messages to display.  	if (messages.Count == 0)  		return;  	Vector2 position = new Vector2 (GraphicsDevice.Viewport.Width - 100' 0);  	spriteBatch.Begin ();  	// Draw each message in turn.  	foreach (NotificationMessage message in messages) {  		const float scale = 0.75f;  		// Compute the alpha of this message.  		float alpha = 1;  		if (message.Age < fadeInTime) {  			// Fading in.  			alpha = (float)(message.Age.TotalSeconds / fadeInTime.TotalSeconds);  		} else if (message.Age > showTime) {  			// Fading out.  			TimeSpan fadeOut = showTime + fadeOutTime - message.Age;  			alpha = (float)(fadeOut.TotalSeconds / fadeOutTime.TotalSeconds);  		}  		// Compute the message position.  		position.Y = 80 + message.Position * font.LineSpacing * scale;  		// Compute an origin value to right align each message.  		Vector2 origin = font.MeasureString (message.Text);  		origin.Y = 0;  		// Draw the message text' with a drop shadow.  		spriteBatch.DrawString (font' message.Text' position + Vector2.One' Color.Black * alpha' 0' origin' scale' SpriteEffects.None' 0);  		spriteBatch.DrawString (font' message.Text' position' Color.White * alpha' 0' origin' scale' SpriteEffects.None' 0);  	}  	spriteBatch.End ();  }  
Magic Number,CatapultGame,MessageDisplayComponent,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\MessageDisplayComponent.cs,Draw,The following statement contains a magic number: lock (syncObject) {  	// Early out if there are no messages to display.  	if (messages.Count == 0)  		return;  	Vector2 position = new Vector2 (GraphicsDevice.Viewport.Width - 100' 0);  	spriteBatch.Begin ();  	// Draw each message in turn.  	foreach (NotificationMessage message in messages) {  		const float scale = 0.75f;  		// Compute the alpha of this message.  		float alpha = 1;  		if (message.Age < fadeInTime) {  			// Fading in.  			alpha = (float)(message.Age.TotalSeconds / fadeInTime.TotalSeconds);  		} else if (message.Age > showTime) {  			// Fading out.  			TimeSpan fadeOut = showTime + fadeOutTime - message.Age;  			alpha = (float)(fadeOut.TotalSeconds / fadeOutTime.TotalSeconds);  		}  		// Compute the message position.  		position.Y = 80 + message.Position * font.LineSpacing * scale;  		// Compute an origin value to right align each message.  		Vector2 origin = font.MeasureString (message.Text);  		origin.Y = 0;  		// Draw the message text' with a drop shadow.  		spriteBatch.DrawString (font' message.Text' position + Vector2.One' Color.Black * alpha' 0' origin' scale' SpriteEffects.None' 0);  		spriteBatch.DrawString (font' message.Text' position' Color.White * alpha' 0' origin' scale' SpriteEffects.None' 0);  	}  	spriteBatch.End ();  }  
Magic Number,CatapultGame,MessageDisplayComponent,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\MessageDisplayComponent.cs,Draw,The following statement contains a magic number: foreach (NotificationMessage message in messages) {  	const float scale = 0.75f;  	// Compute the alpha of this message.  	float alpha = 1;  	if (message.Age < fadeInTime) {  		// Fading in.  		alpha = (float)(message.Age.TotalSeconds / fadeInTime.TotalSeconds);  	} else if (message.Age > showTime) {  		// Fading out.  		TimeSpan fadeOut = showTime + fadeOutTime - message.Age;  		alpha = (float)(fadeOut.TotalSeconds / fadeOutTime.TotalSeconds);  	}  	// Compute the message position.  	position.Y = 80 + message.Position * font.LineSpacing * scale;  	// Compute an origin value to right align each message.  	Vector2 origin = font.MeasureString (message.Text);  	origin.Y = 0;  	// Draw the message text' with a drop shadow.  	spriteBatch.DrawString (font' message.Text' position + Vector2.One' Color.Black * alpha' 0' origin' scale' SpriteEffects.None' 0);  	spriteBatch.DrawString (font' message.Text' position' Color.White * alpha' 0' origin' scale' SpriteEffects.None' 0);  }  
Magic Number,CatapultGame,MessageDisplayComponent,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\MessageDisplayComponent.cs,Draw,The following statement contains a magic number: position.Y = 80 + message.Position * font.LineSpacing * scale;  
Magic Number,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Initialize,The following statement contains a magic number: if (isAI)  	projectileStartPosition = new Vector2 (630' 340);  else  	projectileStartPosition = new Vector2 (175' 340);  
Magic Number,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Initialize,The following statement contains a magic number: if (isAI)  	projectileStartPosition = new Vector2 (630' 340);  else  	projectileStartPosition = new Vector2 (175' 340);  
Magic Number,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Initialize,The following statement contains a magic number: if (isAI)  	projectileStartPosition = new Vector2 (630' 340);  else  	projectileStartPosition = new Vector2 (175' 340);  
Magic Number,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Initialize,The following statement contains a magic number: if (isAI)  	projectileStartPosition = new Vector2 (630' 340);  else  	projectileStartPosition = new Vector2 (175' 340);  
Magic Number,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Initialize,The following statement contains a magic number: projectileStartPosition = new Vector2 (630' 340);  
Magic Number,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Initialize,The following statement contains a magic number: projectileStartPosition = new Vector2 (630' 340);  
Magic Number,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Initialize,The following statement contains a magic number: projectileStartPosition = new Vector2 (175' 340);  
Magic Number,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Initialize,The following statement contains a magic number: projectileStartPosition = new Vector2 (175' 340);  
Magic Number,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Update,The following statement contains a magic number: switch (currentState) {  case CatapultState.Idle:  	// Nothing to do  	break;  case CatapultState.Aiming:  	if (lastUpdateState != CatapultState.Aiming) {  		AudioManager.PlaySound ("ropeStretch"' true);  		AnimationRunning = true;  		if (isAI == true) {  			animations ["Aim"].PlayFromFrameIndex (0);  			stallUpdateCycles = 20;  			startStall = false;  		}  	}  	// Progress Aiming "animation"  	if (isAI == false) {  		UpdateAimAccordingToShotStrength ();  	} else {  		animations ["Aim"].Update ();  		startStall = AimReachedShotStrength ();  		currentState = (startStall) ? CatapultState.Stalling : CatapultState.Aiming;  	}  	break;  case CatapultState.Stalling:  	if (stallUpdateCycles-- <= 0) {  		// We've finished stalling' fire the projectile  		Fire (ShotVelocity);  		postUpdateStateChange = CatapultState.Firing;  	}  	break;  case CatapultState.Firing:  	// Progress Fire animation  	if (lastUpdateState != CatapultState.Firing) {  		AudioManager.StopSound ("ropeStretch");  		AudioManager.PlaySound ("catapultFire");  		StartFiringFromLastAimPosition ();  	}  	animations ["Fire"].Update ();  	// If in the "split" point of the animation start   	// projectile fire sequence  	if (animations ["Fire"].FrameIndex == splitFrames ["Fire"]) {  		postUpdateStateChange = currentState | CatapultState.ProjectileFlying;  		projectile.ProjectilePosition = projectile.ProjectileStartPosition;  	}  	break;  case CatapultState.Firing | CatapultState.ProjectileFlying:  	// Progress Fire animation                      	animations ["Fire"].Update ();  	// Update projectile velocity & position in flight  	projectile.UpdateProjectileFlightData (gameTime' wind' gravity' out isGroundHit);  	if (isGroundHit) {  		// Start hit sequence  		postUpdateStateChange = CatapultState.ProjectileHit;  		animations ["fireMiss"].PlayFromFrameIndex (0);  	}  	break;  case CatapultState.ProjectileFlying:  	// Update projectile velocity & position in flight  	projectile.UpdateProjectileFlightData (gameTime' wind' gravity' out isGroundHit);  	if (isGroundHit) {  		// Start hit sequence  		postUpdateStateChange = CatapultState.ProjectileHit;  		animations ["fireMiss"].PlayFromFrameIndex (0);  	}  	break;  case CatapultState.ProjectileHit:  	// Check hit on ground impact  	if (!CheckHit ()) {  		if (lastUpdateState != CatapultState.ProjectileHit) {  			//                            VibrateController.Default.Start(  			//                                TimeSpan.FromMilliseconds(100));  			// Play hit sound only on a missed hit'  			// a direct hit will trigger the explosion sound  			AudioManager.PlaySound ("boulderHit");  		}  		// Hit animation finished playing  		if (animations ["fireMiss"].IsActive == false) {  			postUpdateStateChange = CatapultState.Reset;  		}  		animations ["fireMiss"].Update ();  	} else {  		// Catapult hit - start longer vibration on any catapult hit   		// Remember that the call to "CheckHit" updates the catapult's  		// state to "Hit"  		//                        VibrateController.Default.Start(  		//                            TimeSpan.FromMilliseconds(500));  	}  	break;  case CatapultState.Hit:  	// Progress hit animation  	if ((animations ["Destroyed"].IsActive == false) && (animations ["hitSmoke"].IsActive == false)) {  		if (enemy.Score >= winScore) {  			GameOver = true;  			break;  		}  		postUpdateStateChange = CatapultState.Reset;  	}  	animations ["Destroyed"].Update ();  	animations ["hitSmoke"].Update ();  	break;  case CatapultState.Reset:  	AnimationRunning = false;  	break;  default:  	break;  }  
Magic Number,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Update,The following statement contains a magic number: if (lastUpdateState != CatapultState.Aiming) {  	AudioManager.PlaySound ("ropeStretch"' true);  	AnimationRunning = true;  	if (isAI == true) {  		animations ["Aim"].PlayFromFrameIndex (0);  		stallUpdateCycles = 20;  		startStall = false;  	}  }  
Magic Number,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Update,The following statement contains a magic number: if (isAI == true) {  	animations ["Aim"].PlayFromFrameIndex (0);  	stallUpdateCycles = 20;  	startStall = false;  }  
Magic Number,CatapultGame,Catapult,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Catapult.cs,Update,The following statement contains a magic number: stallUpdateCycles = 20;  
Magic Number,CatapultGame,Projectile,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Projectile.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (projectileTexture' projectilePosition' null' Color.White' projectileRotation' new Vector2 (projectileTexture.Width / 2' projectileTexture.Height / 2)' 1.0f' SpriteEffects.None' 0);  
Magic Number,CatapultGame,Projectile,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Projectile.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (projectileTexture' projectilePosition' null' Color.White' projectileRotation' new Vector2 (projectileTexture.Width / 2' projectileTexture.Height / 2)' 1.0f' SpriteEffects.None' 0);  
Magic Number,CatapultGame,Projectile,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Projectile.cs,UpdateProjectileFlightData,The following statement contains a magic number: projectilePosition.X = projectileStartPosition.X + (direction * projectileVelocity.X * flightTime) + 0.5f * (8 * wind * (float)Math.Pow (flightTime' 2));  
Magic Number,CatapultGame,Projectile,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Projectile.cs,UpdateProjectileFlightData,The following statement contains a magic number: projectilePosition.X = projectileStartPosition.X + (direction * projectileVelocity.X * flightTime) + 0.5f * (8 * wind * (float)Math.Pow (flightTime' 2));  
Magic Number,CatapultGame,Projectile,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Projectile.cs,UpdateProjectileFlightData,The following statement contains a magic number: projectilePosition.Y = projectileStartPosition.Y - (projectileVelocity.Y * flightTime) + 0.5f * (gravity * (float)Math.Pow (flightTime' 2));  
Magic Number,CatapultGame,Projectile,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Projectile.cs,UpdateProjectileFlightData,The following statement contains a magic number: if (projectilePosition.Y >= 332 + hitOffset) {  	projectilePosition.X = previousXPosition;  	projectilePosition.Y = previousYPosition;  	ProjectileHitPosition = new Vector2 (previousXPosition' 332);  	groundHit = true;  } else {  	groundHit = false;  }  
Magic Number,CatapultGame,Projectile,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Projectile.cs,UpdateProjectileFlightData,The following statement contains a magic number: if (projectilePosition.Y >= 332 + hitOffset) {  	projectilePosition.X = previousXPosition;  	projectilePosition.Y = previousYPosition;  	ProjectileHitPosition = new Vector2 (previousXPosition' 332);  	groundHit = true;  } else {  	groundHit = false;  }  
Magic Number,CatapultGame,Projectile,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Catapult\Projectile.cs,UpdateProjectileFlightData,The following statement contains a magic number: ProjectileHitPosition = new Vector2 (previousXPosition' 332);  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,LobbyScreen,The following statement contains a magic number: TransitionOnTime = TimeSpan.FromSeconds (0.5);  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,LobbyScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds (0.5);  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,Draw,The following statement contains a magic number: if (ScreenState == ScreenState.TransitionOn)  	position.X -= transitionOffset * 256;  else  	position.X += transitionOffset * 512;  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,Draw,The following statement contains a magic number: if (ScreenState == ScreenState.TransitionOn)  	position.X -= transitionOffset * 256;  else  	position.X += transitionOffset * 512;  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,Draw,The following statement contains a magic number: position.X -= transitionOffset * 256;  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,Draw,The following statement contains a magic number: position.X += transitionOffset * 512;  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,Draw,The following statement contains a magic number: foreach (NetworkGamer gamer in networkSession.AllGamers) {  	DrawGamer (gamer' position);  	// Advance to the next screen position' wrapping into two  	// columns if there are more than 8 gamers in the session.  	if (++gamerCount == 8) {  		position.X += 433;  		position.Y = 150;  	} else  		position.Y += ScreenManager.Font.LineSpacing;  }  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,Draw,The following statement contains a magic number: foreach (NetworkGamer gamer in networkSession.AllGamers) {  	DrawGamer (gamer' position);  	// Advance to the next screen position' wrapping into two  	// columns if there are more than 8 gamers in the session.  	if (++gamerCount == 8) {  		position.X += 433;  		position.Y = 150;  	} else  		position.Y += ScreenManager.Font.LineSpacing;  }  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,Draw,The following statement contains a magic number: foreach (NetworkGamer gamer in networkSession.AllGamers) {  	DrawGamer (gamer' position);  	// Advance to the next screen position' wrapping into two  	// columns if there are more than 8 gamers in the session.  	if (++gamerCount == 8) {  		position.X += 433;  		position.Y = 150;  	} else  		position.Y += ScreenManager.Font.LineSpacing;  }  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,Draw,The following statement contains a magic number: if (++gamerCount == 8) {  	position.X += 433;  	position.Y = 150;  } else  	position.Y += ScreenManager.Font.LineSpacing;  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,Draw,The following statement contains a magic number: if (++gamerCount == 8) {  	position.X += 433;  	position.Y = 150;  } else  	position.Y += ScreenManager.Font.LineSpacing;  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,Draw,The following statement contains a magic number: if (++gamerCount == 8) {  	position.X += 433;  	position.Y = 150;  } else  	position.Y += ScreenManager.Font.LineSpacing;  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,Draw,The following statement contains a magic number: position.X += 433;  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,Draw,The following statement contains a magic number: position.Y = 150;  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,Draw,The following statement contains a magic number: titlePosition.Y -= transitionOffset * 100;  
Magic Number,CatapultGame,LobbyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\LobbyScreen.cs,DrawGamer,The following statement contains a magic number: spriteBatch.DrawString (font' text' position + iconWidth * 2' color * TransitionAlpha);  
Magic Number,CatapultGame,NetworkBusyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\NetworkBusyScreen.cs,NetworkBusyScreen,The following statement contains a magic number: TransitionOnTime = TimeSpan.FromSeconds (0.1);  
Magic Number,CatapultGame,NetworkBusyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\NetworkBusyScreen.cs,NetworkBusyScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds (0.2);  
Magic Number,CatapultGame,NetworkBusyScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (catTexture' catPosition' null' color' catRotation' catSize / 2' 1' SpriteEffects.None' 0);  
Magic Number,CatapultGame,AI,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\AI.cs,AI,The following statement contains a magic number: Catapult = new Catapult (game' screenSpriteBatch' "Textures/Catapults/Red/redIdle/redIdle"' new Vector2 (600' 332)' SpriteEffects.FlipHorizontally' true);  
Magic Number,CatapultGame,AI,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\AI.cs,AI,The following statement contains a magic number: Catapult = new Catapult (game' screenSpriteBatch' "Textures/Catapults/Red/redIdle/redIdle"' new Vector2 (600' 332)' SpriteEffects.FlipHorizontally' true);  
Magic Number,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,Human,The following statement contains a magic number: if (playerSide == PlayerSide.Left) {  	catapultPosition = new Vector2 (140' 332);  	idleTextureName = "Textures/Catapults/Blue/blueIdle/blueIdle";  } else {  	catapultPosition = new Vector2 (600' 332);  	spriteEffect = SpriteEffects.FlipHorizontally;  	idleTextureName = "Textures/Catapults/Red/redIdle/redIdle";  }  
Magic Number,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,Human,The following statement contains a magic number: if (playerSide == PlayerSide.Left) {  	catapultPosition = new Vector2 (140' 332);  	idleTextureName = "Textures/Catapults/Blue/blueIdle/blueIdle";  } else {  	catapultPosition = new Vector2 (600' 332);  	spriteEffect = SpriteEffects.FlipHorizontally;  	idleTextureName = "Textures/Catapults/Red/redIdle/redIdle";  }  
Magic Number,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,Human,The following statement contains a magic number: if (playerSide == PlayerSide.Left) {  	catapultPosition = new Vector2 (140' 332);  	idleTextureName = "Textures/Catapults/Blue/blueIdle/blueIdle";  } else {  	catapultPosition = new Vector2 (600' 332);  	spriteEffect = SpriteEffects.FlipHorizontally;  	idleTextureName = "Textures/Catapults/Red/redIdle/redIdle";  }  
Magic Number,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,Human,The following statement contains a magic number: if (playerSide == PlayerSide.Left) {  	catapultPosition = new Vector2 (140' 332);  	idleTextureName = "Textures/Catapults/Blue/blueIdle/blueIdle";  } else {  	catapultPosition = new Vector2 (600' 332);  	spriteEffect = SpriteEffects.FlipHorizontally;  	idleTextureName = "Textures/Catapults/Red/redIdle/redIdle";  }  
Magic Number,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,Human,The following statement contains a magic number: catapultPosition = new Vector2 (140' 332);  
Magic Number,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,Human,The following statement contains a magic number: catapultPosition = new Vector2 (140' 332);  
Magic Number,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,Human,The following statement contains a magic number: catapultPosition = new Vector2 (600' 332);  
Magic Number,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,Human,The following statement contains a magic number: catapultPosition = new Vector2 (600' 332);  
Magic Number,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,DrawDragArrow,The following statement contains a magic number: if (playerSide == PlayerSide.Left) {  	spriteBatch.Draw (arrow' catapultPosition + new Vector2 (0' -40)' null' Color.Blue' 0' Vector2.Zero' new Vector2 (arrowScale' 0.1f)' spriteEffect' 0);  } else {  	spriteBatch.Draw (arrow' catapultPosition + new Vector2 (-arrow.Width * arrowScale + 40' -40)' null' Color.Red' 0' Vector2.Zero' new Vector2 (arrowScale' 0.1f)' spriteEffect' 0);  }  
Magic Number,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,DrawDragArrow,The following statement contains a magic number: if (playerSide == PlayerSide.Left) {  	spriteBatch.Draw (arrow' catapultPosition + new Vector2 (0' -40)' null' Color.Blue' 0' Vector2.Zero' new Vector2 (arrowScale' 0.1f)' spriteEffect' 0);  } else {  	spriteBatch.Draw (arrow' catapultPosition + new Vector2 (-arrow.Width * arrowScale + 40' -40)' null' Color.Red' 0' Vector2.Zero' new Vector2 (arrowScale' 0.1f)' spriteEffect' 0);  }  
Magic Number,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,DrawDragArrow,The following statement contains a magic number: if (playerSide == PlayerSide.Left) {  	spriteBatch.Draw (arrow' catapultPosition + new Vector2 (0' -40)' null' Color.Blue' 0' Vector2.Zero' new Vector2 (arrowScale' 0.1f)' spriteEffect' 0);  } else {  	spriteBatch.Draw (arrow' catapultPosition + new Vector2 (-arrow.Width * arrowScale + 40' -40)' null' Color.Red' 0' Vector2.Zero' new Vector2 (arrowScale' 0.1f)' spriteEffect' 0);  }  
Magic Number,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,DrawDragArrow,The following statement contains a magic number: spriteBatch.Draw (arrow' catapultPosition + new Vector2 (0' -40)' null' Color.Blue' 0' Vector2.Zero' new Vector2 (arrowScale' 0.1f)' spriteEffect' 0);  
Magic Number,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,DrawDragArrow,The following statement contains a magic number: spriteBatch.Draw (arrow' catapultPosition + new Vector2 (-arrow.Width * arrowScale + 40' -40)' null' Color.Red' 0' Vector2.Zero' new Vector2 (arrowScale' 0.1f)' spriteEffect' 0);  
Magic Number,CatapultGame,Human,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Players\Human.cs,DrawDragArrow,The following statement contains a magic number: spriteBatch.Draw (arrow' catapultPosition + new Vector2 (-arrow.Width * arrowScale + 40' -40)' null' Color.Red' 0' Vector2.Zero' new Vector2 (arrowScale' 0.1f)' spriteEffect' 0);  
Magic Number,CatapultGame,BackgroundScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\BackgroundScreen.cs,BackgroundScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds (0.5);  
Magic Number,CatapultGame,BackgroundScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\BackgroundScreen.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (background' new Vector2 (0' 0)' new Color (255' 255' 255' TransitionAlpha));  
Magic Number,CatapultGame,BackgroundScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\BackgroundScreen.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (background' new Vector2 (0' 0)' new Color (255' 255' 255' TransitionAlpha));  
Magic Number,CatapultGame,BackgroundScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\BackgroundScreen.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (background' new Vector2 (0' 0)' new Color (255' 255' 255' TransitionAlpha));  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: cloud1Position = new Vector2 (224 - cloud1Texture.Width' 32);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: cloud1Position = new Vector2 (224 - cloud1Texture.Width' 32);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: cloud2Position = new Vector2 (64' 90);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: cloud2Position = new Vector2 (64' 90);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: playerOneHUDPosition = new Vector2 (7' 7);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: playerOneHUDPosition = new Vector2 (7' 7);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: computerHUDPosition = new Vector2 (613' 7);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: computerHUDPosition = new Vector2 (613' 7);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: windArrowPosition = new Vector2 (345' 46);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,LoadAssets,The following statement contains a magic number: windArrowPosition = new Vector2 (345' 46);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,Update,The following statement contains a magic number: if (changeTurn) {  	// Update wind  	wind = new Vector2 (random.Next (-1' 2)' random.Next (minWind' maxWind + 1));  	// Set new wind value to the players and  	playerOne.Catapult.Wind = playerTwo.Catapult.Wind = wind.X > 0 ? wind.Y : -wind.Y;  	changeTurn = false;  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,Update,The following statement contains a magic number: wind = new Vector2 (random.Next (-1' 2)' random.Next (minWind' maxWind + 1));  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: if (gameOver) {  	Texture2D texture;  	if (IsNetworking) {  		if (NetworkSession.IsHost) {  			if (playerOne.Score > playerTwo.Score) {  				texture = victoryTexture;  			} else {  				texture = defeatTexture;  			}  		} else {  			if (playerOne.Score > playerTwo.Score) {  				texture = defeatTexture;  			} else {  				texture = victoryTexture;  			}  		}  	} else {  		if (playerOne.Score > playerTwo.Score) {  			texture = victoryTexture;  		} else {  			texture = defeatTexture;  		}  	}  	ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  } else {  	// Draw Player Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' playerOneHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  	// Draw Computer Hud  	ScreenManager.SpriteBatch.Draw (hudBackgroundTexture' computerHUDPosition' Color.White);  	ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  	DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  	DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  	// Draw Wind direction  	string text = "WIND";  	Vector2 size = hudFont.MeasureString (text);  	Vector2 windarrowScale = new Vector2 (wind.Y / 10' 1);  	ScreenManager.SpriteBatch.Draw (windArrowTexture' windArrowPosition' null' Color.White' 0' Vector2.Zero' windarrowScale' wind.X > 0 ? SpriteEffects.None : SpriteEffects.FlipHorizontally' 0);  	DrawString (hudFont' text' windArrowPosition - new Vector2 (0' size.Y)' Color.Black);  	if (wind.Y == 0) {  		text = "NONE";  		DrawString (hudFont' text' windArrowPosition' Color.Black);  	}  	if (IsNetworking) {  		if (isFirstPlayerTurn) {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			} else {  				text = "Waiting for " + playerOne.Name;  			}  		} else {  			if (NetworkSession.IsHost) {  				// Prepare player one prompt message  				text = "Waiting for " + playerTwo.Name;  			} else {  				text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  			}  		}  	} else {  		if (isFirstPlayerTurn) {  			// Prepare player one prompt message  			text = !isDragging ? "Drag Anywhere to Fire" : "Release to Fire!";  		} else {  			// Prepare other player message  			text = "I'll get you yet!";  		}  	}  	size = hudFont.MeasureString (text);  	DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  }  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: ScreenManager.SpriteBatch.Draw (texture' new Vector2 (ScreenManager.Game.GraphicsDevice.Viewport.Width / 2 - texture.Width / 2' ScreenManager.Game.GraphicsDevice.Viewport.Height / 2 - texture.Height / 2)' Color.White);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: ScreenManager.SpriteBatch.Draw (ammoTypeTexture' playerOneHUDPosition + new Vector2 (33' 35)' Color.White);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: DrawString (hudFont' playerOne.Score.ToString ()' playerOneHUDPosition + new Vector2 (123' 35)' Color.White);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: DrawString (hudFont' playerOne.Name' playerOneHUDPosition + new Vector2 (40' 1)' Color.Blue);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: ScreenManager.SpriteBatch.Draw (ammoTypeTexture' computerHUDPosition + new Vector2 (33' 35)' Color.White);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: DrawString (hudFont' playerTwo.Score.ToString ()' computerHUDPosition + new Vector2 (123' 35)' Color.White);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: DrawString (hudFont' playerTwo.Name' computerHUDPosition + new Vector2 (40' 1)' Color.Red);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: DrawString (hudFont' text' new Vector2 (ScreenManager.GraphicsDevice.Viewport.Width / 2 - size.X / 2' ScreenManager.GraphicsDevice.Viewport.Height - size.Y)' Color.Green);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawString,The following statement contains a magic number: ScreenManager.SpriteBatch.DrawString (font' text' new Vector2 (position.X + 1' position.Y + 1)' Color.Black' 0' new Vector2 (0' font.LineSpacing / 2)' fontScale' SpriteEffects.None' 0);  
Magic Number,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,DrawString,The following statement contains a magic number: ScreenManager.SpriteBatch.DrawString (font' text' position' color' 0' new Vector2 (0' font.LineSpacing / 2)' fontScale' SpriteEffects.None' 0);  
Magic Number,CatapultGame,InstructionsScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\InstructionsScreen.cs,InstructionsScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds (0.5);  
Magic Number,CatapultGame,InstructionsScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (background' new Vector2 (0' 0)' new Color (255' 255' 255' TransitionAlpha));  
Magic Number,CatapultGame,InstructionsScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (background' new Vector2 (0' 0)' new Color (255' 255' 255' TransitionAlpha));  
Magic Number,CatapultGame,InstructionsScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (background' new Vector2 (0' 0)' new Color (255' 255' 255' TransitionAlpha));  
Magic Number,CatapultGame,InstructionsScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: if (isLoading) {  	string text = "Loading...";  	Vector2 size = font.MeasureString (text);  	Vector2 position = new Vector2 ((ScreenManager.GraphicsDevice.Viewport.Width - size.X) / 2' (ScreenManager.GraphicsDevice.Viewport.Height - size.Y) / 2);  	spriteBatch.DrawString (font' text' position' Color.Black);  	spriteBatch.DrawString (font' text' position - new Vector2 (-4' 4)' new Color (255f' 150f' 0f));  }  
Magic Number,CatapultGame,InstructionsScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: if (isLoading) {  	string text = "Loading...";  	Vector2 size = font.MeasureString (text);  	Vector2 position = new Vector2 ((ScreenManager.GraphicsDevice.Viewport.Width - size.X) / 2' (ScreenManager.GraphicsDevice.Viewport.Height - size.Y) / 2);  	spriteBatch.DrawString (font' text' position' Color.Black);  	spriteBatch.DrawString (font' text' position - new Vector2 (-4' 4)' new Color (255f' 150f' 0f));  }  
Magic Number,CatapultGame,InstructionsScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: if (isLoading) {  	string text = "Loading...";  	Vector2 size = font.MeasureString (text);  	Vector2 position = new Vector2 ((ScreenManager.GraphicsDevice.Viewport.Width - size.X) / 2' (ScreenManager.GraphicsDevice.Viewport.Height - size.Y) / 2);  	spriteBatch.DrawString (font' text' position' Color.Black);  	spriteBatch.DrawString (font' text' position - new Vector2 (-4' 4)' new Color (255f' 150f' 0f));  }  
Magic Number,CatapultGame,InstructionsScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: if (isLoading) {  	string text = "Loading...";  	Vector2 size = font.MeasureString (text);  	Vector2 position = new Vector2 ((ScreenManager.GraphicsDevice.Viewport.Width - size.X) / 2' (ScreenManager.GraphicsDevice.Viewport.Height - size.Y) / 2);  	spriteBatch.DrawString (font' text' position' Color.Black);  	spriteBatch.DrawString (font' text' position - new Vector2 (-4' 4)' new Color (255f' 150f' 0f));  }  
Magic Number,CatapultGame,InstructionsScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' text' position - new Vector2 (-4' 4)' new Color (255f' 150f' 0f));  
Magic Number,CatapultGame,InstructionsScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\InstructionsScreen.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' text' position - new Vector2 (-4' 4)' new Color (255f' 150f' 0f));  
Magic Number,CatapultGame,LoadingScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\LoadingScreen.cs,LoadingScreen,The following statement contains a magic number: TransitionOnTime = TimeSpan.FromSeconds (0.5);  
Magic Number,CatapultGame,LoadingScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\LoadingScreen.cs,Draw,The following statement contains a magic number: if (loadingIsSlow) {  	SpriteBatch spriteBatch = ScreenManager.SpriteBatch;  	SpriteFont font = ScreenManager.Font;  	string message = Resources.Loading;  	// Center the text in the viewport.  	Viewport viewport = ScreenManager.GraphicsDevice.Viewport;  	Vector2 viewportSize = new Vector2 (viewport.Width' viewport.Height);  	Vector2 textSize = font.MeasureString (message);  	Vector2 textPosition = (viewportSize - textSize) / 2;  	Color color = Color.White * TransitionAlpha;  	// Animate the number of dots after our "Loading..." message.  	loadAnimationTimer += gameTime.ElapsedGameTime;  	int dotCount = (int)(loadAnimationTimer.TotalSeconds * 5) % 10;  	message += new string ('.'' dotCount);  	// Draw the text.  	spriteBatch.Begin ();  	spriteBatch.DrawString (font' message' textPosition' color);  	spriteBatch.End ();  }  
Magic Number,CatapultGame,LoadingScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\LoadingScreen.cs,Draw,The following statement contains a magic number: if (loadingIsSlow) {  	SpriteBatch spriteBatch = ScreenManager.SpriteBatch;  	SpriteFont font = ScreenManager.Font;  	string message = Resources.Loading;  	// Center the text in the viewport.  	Viewport viewport = ScreenManager.GraphicsDevice.Viewport;  	Vector2 viewportSize = new Vector2 (viewport.Width' viewport.Height);  	Vector2 textSize = font.MeasureString (message);  	Vector2 textPosition = (viewportSize - textSize) / 2;  	Color color = Color.White * TransitionAlpha;  	// Animate the number of dots after our "Loading..." message.  	loadAnimationTimer += gameTime.ElapsedGameTime;  	int dotCount = (int)(loadAnimationTimer.TotalSeconds * 5) % 10;  	message += new string ('.'' dotCount);  	// Draw the text.  	spriteBatch.Begin ();  	spriteBatch.DrawString (font' message' textPosition' color);  	spriteBatch.End ();  }  
Magic Number,CatapultGame,LoadingScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\LoadingScreen.cs,Draw,The following statement contains a magic number: if (loadingIsSlow) {  	SpriteBatch spriteBatch = ScreenManager.SpriteBatch;  	SpriteFont font = ScreenManager.Font;  	string message = Resources.Loading;  	// Center the text in the viewport.  	Viewport viewport = ScreenManager.GraphicsDevice.Viewport;  	Vector2 viewportSize = new Vector2 (viewport.Width' viewport.Height);  	Vector2 textSize = font.MeasureString (message);  	Vector2 textPosition = (viewportSize - textSize) / 2;  	Color color = Color.White * TransitionAlpha;  	// Animate the number of dots after our "Loading..." message.  	loadAnimationTimer += gameTime.ElapsedGameTime;  	int dotCount = (int)(loadAnimationTimer.TotalSeconds * 5) % 10;  	message += new string ('.'' dotCount);  	// Draw the text.  	spriteBatch.Begin ();  	spriteBatch.DrawString (font' message' textPosition' color);  	spriteBatch.End ();  }  
Magic Number,CatapultGame,LoadingScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\LoadingScreen.cs,BackgroundWorkerThread,The following statement contains a magic number: while (!backgroundThreadExit.WaitOne (1000 / 30)) {  	//GameTime gameTime = GetGameTime (ref lastTime);  	//DrawLoadAnimation (gameTime);  	UpdateNetworkSession ();  }  
Magic Number,CatapultGame,LoadingScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\LoadingScreen.cs,BackgroundWorkerThread,The following statement contains a magic number: while (!backgroundThreadExit.WaitOne (1000 / 30)) {  	//GameTime gameTime = GetGameTime (ref lastTime);  	//DrawLoadAnimation (gameTime);  	UpdateNetworkSession ();  }  
Magic Number,CatapultGame,MainMenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\MainMenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: foreach (var entry in MenuEntries) {  	Vector2 position = entry.Position;  	position.Y += 60;  	entry.Position = position;  }  
Magic Number,CatapultGame,MainMenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\MainMenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: position.Y += 60;  
Magic Number,CatapultGame,PauseScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\PauseScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: foreach (var entry in MenuEntries) {  	Vector2 position = entry.Position;  	position.Y += 60;  	entry.Position = position;  }  
Magic Number,CatapultGame,PauseScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\PauseScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: position.Y += 60;  
Magic Number,GameStateManagement,MenuEntry,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuEntry.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' text' position + new Vector2 (4' 4)' Color.Black' 0' origin' scale' SpriteEffects.None' 0);  
Magic Number,GameStateManagement,MenuEntry,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuEntry.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' text' position + new Vector2 (4' 4)' Color.Black' 0' origin' scale' SpriteEffects.None' 0);  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,MenuScreen,The following statement contains a magic number: TransitionOnTime = TimeSpan.FromSeconds (0.5);  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,MenuScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds (0.5);  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,GetMenuEntryHitBounds,The following statement contains a magic number: return new Rectangle (0' (int)entry.Position.Y - menuEntryPadding' ScreenManager.GraphicsDevice.Viewport.Width' entry.GetHeight (this) + (menuEntryPadding * 2));  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: for (int i = 0; i < menuEntries.Count; i++) {  	MenuEntry menuEntry = menuEntries [i];  	// each entry is to be centered horizontally  	position.X = ScreenManager.GraphicsDevice.Viewport.Width / 2 - menuEntry.GetWidth (this) / 2;  	if (ScreenState == ScreenState.TransitionOn)  		position.X -= transitionOffset * 256;  	else  		position.X += transitionOffset * 512;  	// set the entry's position  	menuEntry.Position = position;  	// move down for the next entry the size of this entry plus our padding  	position.Y += menuEntry.GetHeight (this) + (menuEntryPadding * 2);  }  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: for (int i = 0; i < menuEntries.Count; i++) {  	MenuEntry menuEntry = menuEntries [i];  	// each entry is to be centered horizontally  	position.X = ScreenManager.GraphicsDevice.Viewport.Width / 2 - menuEntry.GetWidth (this) / 2;  	if (ScreenState == ScreenState.TransitionOn)  		position.X -= transitionOffset * 256;  	else  		position.X += transitionOffset * 512;  	// set the entry's position  	menuEntry.Position = position;  	// move down for the next entry the size of this entry plus our padding  	position.Y += menuEntry.GetHeight (this) + (menuEntryPadding * 2);  }  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: for (int i = 0; i < menuEntries.Count; i++) {  	MenuEntry menuEntry = menuEntries [i];  	// each entry is to be centered horizontally  	position.X = ScreenManager.GraphicsDevice.Viewport.Width / 2 - menuEntry.GetWidth (this) / 2;  	if (ScreenState == ScreenState.TransitionOn)  		position.X -= transitionOffset * 256;  	else  		position.X += transitionOffset * 512;  	// set the entry's position  	menuEntry.Position = position;  	// move down for the next entry the size of this entry plus our padding  	position.Y += menuEntry.GetHeight (this) + (menuEntryPadding * 2);  }  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: for (int i = 0; i < menuEntries.Count; i++) {  	MenuEntry menuEntry = menuEntries [i];  	// each entry is to be centered horizontally  	position.X = ScreenManager.GraphicsDevice.Viewport.Width / 2 - menuEntry.GetWidth (this) / 2;  	if (ScreenState == ScreenState.TransitionOn)  		position.X -= transitionOffset * 256;  	else  		position.X += transitionOffset * 512;  	// set the entry's position  	menuEntry.Position = position;  	// move down for the next entry the size of this entry plus our padding  	position.Y += menuEntry.GetHeight (this) + (menuEntryPadding * 2);  }  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: for (int i = 0; i < menuEntries.Count; i++) {  	MenuEntry menuEntry = menuEntries [i];  	// each entry is to be centered horizontally  	position.X = ScreenManager.GraphicsDevice.Viewport.Width / 2 - menuEntry.GetWidth (this) / 2;  	if (ScreenState == ScreenState.TransitionOn)  		position.X -= transitionOffset * 256;  	else  		position.X += transitionOffset * 512;  	// set the entry's position  	menuEntry.Position = position;  	// move down for the next entry the size of this entry plus our padding  	position.Y += menuEntry.GetHeight (this) + (menuEntryPadding * 2);  }  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: position.X = ScreenManager.GraphicsDevice.Viewport.Width / 2 - menuEntry.GetWidth (this) / 2;  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: position.X = ScreenManager.GraphicsDevice.Viewport.Width / 2 - menuEntry.GetWidth (this) / 2;  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: if (ScreenState == ScreenState.TransitionOn)  	position.X -= transitionOffset * 256;  else  	position.X += transitionOffset * 512;  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: if (ScreenState == ScreenState.TransitionOn)  	position.X -= transitionOffset * 256;  else  	position.X += transitionOffset * 512;  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: position.X -= transitionOffset * 256;  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: position.X += transitionOffset * 512;  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: position.Y += menuEntry.GetHeight (this) + (menuEntryPadding * 2);  
Magic Number,GameStateManagement,MenuScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: titlePosition.Y -= transitionOffset * 100;  
Magic Number,GameStateManagement,MessageBoxScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\MessageBoxScreen.cs,MessageBoxScreen,The following statement contains a magic number: TransitionOnTime = TimeSpan.FromSeconds (0.2);  
Magic Number,GameStateManagement,MessageBoxScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\MessageBoxScreen.cs,MessageBoxScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds (0.2);  
Magic Number,GameStateManagement,MessageBoxScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\MessageBoxScreen.cs,Draw,The following statement contains a magic number: ScreenManager.FadeBackBufferToBlack (TransitionAlpha * 2 / 3);  
Magic Number,GameStateManagement,MessageBoxScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\MessageBoxScreen.cs,Draw,The following statement contains a magic number: ScreenManager.FadeBackBufferToBlack (TransitionAlpha * 2 / 3);  
Missing Default,CatapultGame,NetworkErrorScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Networking\NetworkErrorScreen.cs,GetErrorMessage,The following switch statement is missing a default case: switch (joinException.JoinError) {  case NetworkSessionJoinError.SessionFull:  	return Resources.ErrorSessionFull;  case NetworkSessionJoinError.SessionNotFound:  	return Resources.ErrorSessionNotFound;  case NetworkSessionJoinError.SessionNotJoinable:  	return Resources.ErrorSessionNotJoinable;  }  
Missing Default,CatapultGame,GameplayScreen,F:\newReposMay17\CartBlanche_MonoGame-Samples\CatapultNetWars\Screens\GameplayScreen.cs,ReadIncomingPackets,The following switch statement is missing a default case: switch (msgType) {  case MessageType.NewGame:  	//ReceiveNewNetworkedGame();  	break;  case MessageType.CatapultAiming:  	if (isFirstPlayerTurn && !NetworkSession.IsHost) {  		playerOne.Catapult.CurrentState = CatapultState.Aiming;  		playerOne.isDragging = true;  		catapultInfoVector = packetReader.ReadVector3 ();  		playerOne.Catapult.ShotStrength = catapultInfoVector.X;  		playerOne.Catapult.ShotVelocity = catapultInfoVector.Y;  		playerOne.ArrowScale = catapultInfoVector.Z;  	}  	if (!isFirstPlayerTurn && NetworkSession.IsHost) {  		playerTwo.Catapult.CurrentState = CatapultState.Aiming;  		playerTwo.isDragging = true;  		catapultInfoVector = packetReader.ReadVector3 ();  		playerTwo.Catapult.ShotStrength = catapultInfoVector.X;  		playerTwo.Catapult.ShotVelocity = catapultInfoVector.Y;  		playerTwo.ArrowScale = catapultInfoVector.Z;  	}  	break;  case MessageType.CatapultFiring:  	if (isFirstPlayerTurn && !NetworkSession.IsHost) {  		catapultInfoVector = packetReader.ReadVector3 ();  		playerOne.Catapult.Fire (catapultInfoVector.Y);  		playerOne.Catapult.CurrentState = CatapultState.Firing;  		playerOne.ResetDragState ();  	}  	if (!isFirstPlayerTurn && NetworkSession.IsHost) {  		catapultInfoVector = packetReader.ReadVector3 ();  		playerTwo.Catapult.Fire (catapultInfoVector.Y);  		playerTwo.Catapult.CurrentState = CatapultState.Firing;  		playerTwo.ResetDragState ();  	}  	break;  case MessageType.UpdateEnvironment:  	wind = packetReader.ReadVector2 ();  	cloud1Position = packetReader.ReadVector2 ();  	cloud2Position = packetReader.ReadVector2 ();  	// Set new wind value to the players and  	playerOne.Catapult.Wind = playerTwo.Catapult.Wind = wind.X > 0 ? wind.Y : -wind.Y;  	break;  }  
