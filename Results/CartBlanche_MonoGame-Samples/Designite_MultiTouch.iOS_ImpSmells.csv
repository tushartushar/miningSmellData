Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Microsoft.Xna.Samples.MultiTouch,Game1,C:\repos\CartBlanche_MonoGame-Samples\MultiTouch\MultiTouch.cs,Draw,The length of the statement  "					                 LineColors[t.Id]' (float)Math.Atan2((double)(t.Position.Y - PrevLocation.Position.Y)' (double)(t.Position.X - PrevLocation.Position.X))' Vector2.Zero'  " is 150.
Magic Number,Microsoft.Xna.Samples.MultiTouch,Game1,C:\repos\CartBlanche_MonoGame-Samples\MultiTouch\MultiTouch.cs,Update,The following statement contains a magic number: if (ShakeTime >= 500)              {                  Vector3 acceleration = acellerometer.CurrentValue.Acceleration;                  if (Math.Abs(acceleration.X - LastAccelX) > 0.4)                  {                      Cls = true;                  }                  LastAccelX = acceleration.X;                  ShakeTime = 0;              }
Magic Number,Microsoft.Xna.Samples.MultiTouch,Game1,C:\repos\CartBlanche_MonoGame-Samples\MultiTouch\MultiTouch.cs,Update,The following statement contains a magic number: if (ShakeTime >= 500)              {                  Vector3 acceleration = acellerometer.CurrentValue.Acceleration;                  if (Math.Abs(acceleration.X - LastAccelX) > 0.4)                  {                      Cls = true;                  }                  LastAccelX = acceleration.X;                  ShakeTime = 0;              }
Magic Number,Microsoft.Xna.Samples.MultiTouch,Game1,C:\repos\CartBlanche_MonoGame-Samples\MultiTouch\MultiTouch.cs,Draw,The following statement contains a magic number: foreach (TouchLocation t in touchStateCollection)              {  				TouchLocation PrevLocation = new TouchLocation();                  if (t.TryGetPreviousLocation(out PrevLocation))                  {                      if (!LineColors.ContainsKey(t.Id))                      {                          if (touchStateCollection.Count > 1)                          {                              Random randomizer = new Random();                              LineColors[t.Id] = drawColors[randomizer.Next(0' 4)];                          }                          else                          {                              LineColors[t.Id] = Color.White;                          }                      }                        spriteBatch.Draw(Brush' PrevLocation.Position' null'   					                 LineColors[t.Id]' (float)Math.Atan2((double)(t.Position.Y - PrevLocation.Position.Y)' (double)(t.Position.X - PrevLocation.Position.X))' Vector2.Zero'   					                 new Vector2(Vector2.Distance(PrevLocation.Position' t.Position)' 1f)' SpriteEffects.None' 0f);                  }              }
