Implementation smell,Namespace,Class,File,Method,Description
Complex Method,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawTransitionEffect,Cyclomatic complexity of the method is 17
Complex Method,SimpleAnimation,Tank,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\Tank.cs,Draw,Cyclomatic complexity of the method is 19
Long Parameter List,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,DrawImposterSprites,The method has 6 parameters.
Long Parameter List,SimpleAnimation,Tank,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\Tank.cs,Draw,The method has 5 parameters.
Long Statement,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,Draw,The length of the statement  "	Matrix projection = Matrix.CreatePerspectiveFieldOfView (MathHelper.PiOver4' GraphicsDevice.Viewport.AspectRatio' 10' 10000); " is 125.
Long Statement,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,DrawTankIntoRenderTarget,The length of the statement  "	tank.Draw (tankRotation * sceneRotation * Matrix.CreateScale (0.9f)' view' projection' LightingMode.OneVertexLight' true); " is 122.
Long Statement,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,DrawImposterSprites,The length of the statement  "			Matrix billboard = Matrix.CreateConstrainedBillboard (world.Translation' cameraPosition' Vector3.Up' cameraTarget - cameraPosition' null); " is 138.
Long Statement,XnaGraphicsDemo,BasicDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\BasicDemo.cs,Draw,The length of the statement  "	Matrix projection = Matrix.CreatePerspectiveFieldOfView (MathHelper.PiOver4' GraphicsDevice.Viewport.AspectRatio' 10' 20000); " is 125.
Long Statement,XnaGraphicsDemo,BasicDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\BasicDemo.cs,Draw,The length of the statement  "	Matrix view = Matrix.CreateLookAt (new Vector3 (1500' 550' 0) * zoom + new Vector3 (0' 150' 0)' new Vector3 (0' 150' 0)' Vector3.Up); " is 133.
Long Statement,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,LoadContent,The length of the statement  "	transitionRenderTarget = new RenderTarget2D (GraphicsDevice' 480' 800' false' SurfaceFormat.Color' DepthFormat.Depth24' 0' 0); " is 126.
Long Statement,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,Draw,The length of the statement  "	ScaleMatrix = Matrix.CreateScale (Graphics.PreferredBackBufferWidth / 480f' Graphics.PreferredBackBufferHeight / 800f' 1); " is 122.
Long Statement,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawOpenCurtainsTransition,The length of the statement  "	SpriteBatch.Draw (transitionRenderTarget' new Rectangle (0' 0' w' 800)' new Rectangle (0' 0' 240' 800)' Color.White * alpha); " is 125.
Long Statement,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawOpenCurtainsTransition,The length of the statement  "	SpriteBatch.Draw (transitionRenderTarget' new Rectangle (480 - w' 0' w' 800)' new Rectangle (240' 0' 240' 800)' Color.White * alpha); " is 133.
Long Statement,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawZoomyText,The length of the statement  "		SpriteBatch.DrawString (font' zoomyText.Text' pos' Color.Lerp (new Color (64' 64' 255)' Color.White' sqrtAge) * alpha' 0' origin' scale' 0' 0); " is 143.
Long Statement,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,Draw,The length of the statement  "	Matrix rotation = Matrix.CreateRotationY (MathHelper.ToRadians (cameraRotation)) * Matrix.CreateRotationZ (MathHelper.ToRadians (cameraArc)); " is 141.
Long Statement,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,Draw,The length of the statement  "	Matrix projection = Matrix.CreatePerspectiveFieldOfView (MathHelper.PiOver4' GraphicsDevice.Viewport.AspectRatio' 2' 100); " is 122.
Long Statement,XnaGraphicsDemo,EnvmapDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\EnvmapDemo.cs,Draw,The length of the statement  "	Matrix projection = Matrix.CreatePerspectiveFieldOfView (MathHelper.PiOver4' GraphicsDevice.Viewport.AspectRatio' 10' 10000); " is 125.
Long Statement,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,Update,The length of the statement  "			if ((particles [i].Position.X < -borderPadding) || (particles [i].Position.X > 480 + borderPadding) || (particles [i].Position.Y < -borderPadding) || (particles [i].Position.Y > 800 + borderPadding)) { " is 201.
Long Statement,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,SpawnParticle,The length of the statement  "	particles [i].Position = position ?? new Vector2 ((float)random.NextDouble () * 480' (float)random.NextDouble () * 800); " is 120.
Long Statement,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,Draw,The length of the statement  "		SpriteBatch.Draw (cat' particles [i].Position' null' particles [i].Color' particles [i].Rotation' origin' particles [i].Size' 0' 0); " is 132.
Long Statement,XnaGraphicsDemo,SkinnedDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\SkinnedDemo.cs,Draw,The length of the statement  "	Matrix view = Matrix.CreateTranslation (0' -40' 0) * Matrix.CreateRotationY (MathHelper.ToRadians (cameraRotation)) * Matrix.CreateRotationX (MathHelper.ToRadians (cameraArc)) * Matrix.CreateLookAt (new Vector3 (0' 0' -cameraDistance)' new Vector3 (0' 0' 0)' Vector3.Up); " is 271.
Long Statement,XnaGraphicsDemo,SkinnedDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\SkinnedDemo.cs,Draw,The length of the statement  "	Matrix projection = Matrix.CreatePerspectiveFieldOfView (MathHelper.PiOver4' GraphicsDevice.Viewport.AspectRatio' 1' 10000); " is 124.
Long Statement,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Draw,The length of the statement  "		SpriteBatch.DrawString (BigFont' "xna"' blob.Position' Color.Blue * alpha' MathHelper.PiOver2' Vector2.Zero' blob.Size' 0' 0); " is 126.
Complex Conditional,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,Update,The conditional expression  "(particles [i].Position.X < -borderPadding) || (particles [i].Position.X > 480 + borderPadding) || (particles [i].Position.Y < -borderPadding) || (particles [i].Position.Y > 800 + borderPadding)"  is complex.
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,LoadContent,The following statement contains a magic number: renderTarget = new RenderTarget2D (GraphicsDevice' 400' 400' false' SurfaceFormat.Color' DepthFormat.Depth24);  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,LoadContent,The following statement contains a magic number: renderTarget = new RenderTarget2D (GraphicsDevice' 400' 400' false' SurfaceFormat.Color' DepthFormat.Depth24);  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,LoadContent,The following statement contains a magic number: alphaTestEffect.ReferenceAlpha = 128;  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("alpha test effect"' new Color (192' 192' 192)' new Color (156' 156' 156));  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("alpha test effect"' new Color (192' 192' 192)' new Color (156' 156' 156));  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("alpha test effect"' new Color (192' 192' 192)' new Color (156' 156' 156));  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("alpha test effect"' new Color (192' 192' 192)' new Color (156' 156' 156));  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("alpha test effect"' new Color (192' 192' 192)' new Color (156' 156' 156));  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("alpha test effect"' new Color (192' 192' 192)' new Color (156' 156' 156));  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,Draw,The following statement contains a magic number: grid.Draw (Matrix.CreateTranslation (0' -8' 0) * sceneRotation' view' projection);  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,DrawImposterSprites,The following statement contains a magic number: while (i < indices.Length) {  	indices [i++] = currentVertex;  	indices [i++] = (short)(currentVertex + 1);  	indices [i++] = (short)(currentVertex + 2);  	indices [i++] = currentVertex;  	indices [i++] = (short)(currentVertex + 2);  	indices [i++] = (short)(currentVertex + 3);  	currentVertex += 4;  }  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,DrawImposterSprites,The following statement contains a magic number: while (i < indices.Length) {  	indices [i++] = currentVertex;  	indices [i++] = (short)(currentVertex + 1);  	indices [i++] = (short)(currentVertex + 2);  	indices [i++] = currentVertex;  	indices [i++] = (short)(currentVertex + 2);  	indices [i++] = (short)(currentVertex + 3);  	currentVertex += 4;  }  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,DrawImposterSprites,The following statement contains a magic number: while (i < indices.Length) {  	indices [i++] = currentVertex;  	indices [i++] = (short)(currentVertex + 1);  	indices [i++] = (short)(currentVertex + 2);  	indices [i++] = currentVertex;  	indices [i++] = (short)(currentVertex + 2);  	indices [i++] = (short)(currentVertex + 3);  	currentVertex += 4;  }  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,DrawImposterSprites,The following statement contains a magic number: while (i < indices.Length) {  	indices [i++] = currentVertex;  	indices [i++] = (short)(currentVertex + 1);  	indices [i++] = (short)(currentVertex + 2);  	indices [i++] = currentVertex;  	indices [i++] = (short)(currentVertex + 2);  	indices [i++] = (short)(currentVertex + 3);  	currentVertex += 4;  }  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,DrawImposterSprites,The following statement contains a magic number: indices [i++] = (short)(currentVertex + 2);  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,DrawImposterSprites,The following statement contains a magic number: indices [i++] = (short)(currentVertex + 2);  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,DrawImposterSprites,The following statement contains a magic number: indices [i++] = (short)(currentVertex + 3);  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,DrawImposterSprites,The following statement contains a magic number: currentVertex += 4;  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,DrawImposterSprites,The following statement contains a magic number: GraphicsDevice.DrawUserIndexedPrimitives (PrimitiveType.TriangleList' vertices' 0' count * 4' indices' 0' count * 2);  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,DrawImposterSprites,The following statement contains a magic number: GraphicsDevice.DrawUserIndexedPrimitives (PrimitiveType.TriangleList' vertices' 0' count * 4' indices' 0' count * 2);  
Magic Number,XnaGraphicsDemo,AlphaDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\AlphaDemo.cs,OnDrag,The following statement contains a magic number: cameraRotation += delta.X / 400;  
Magic Number,XnaGraphicsDemo,BasicDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\BasicDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("basic effect"' new Color (192' 192' 192)' new Color (156' 156' 156));  
Magic Number,XnaGraphicsDemo,BasicDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\BasicDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("basic effect"' new Color (192' 192' 192)' new Color (156' 156' 156));  
Magic Number,XnaGraphicsDemo,BasicDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\BasicDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("basic effect"' new Color (192' 192' 192)' new Color (156' 156' 156));  
Magic Number,XnaGraphicsDemo,BasicDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\BasicDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("basic effect"' new Color (192' 192' 192)' new Color (156' 156' 156));  
Magic Number,XnaGraphicsDemo,BasicDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\BasicDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("basic effect"' new Color (192' 192' 192)' new Color (156' 156' 156));  
Magic Number,XnaGraphicsDemo,BasicDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\BasicDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("basic effect"' new Color (192' 192' 192)' new Color (156' 156' 156));  
Magic Number,XnaGraphicsDemo,BasicDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\BasicDemo.cs,OnDrag,The following statement contains a magic number: zoom = MathHelper.Clamp (zoom * (float)Math.Exp (delta.Y / 400)' 0.4f' 6);  
Magic Number,XnaGraphicsDemo,BasicDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\BasicDemo.cs,OnDrag,The following statement contains a magic number: zoom = MathHelper.Clamp (zoom * (float)Math.Exp (delta.Y / 400)' 0.4f' 6);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DemoGame,The following statement contains a magic number: Graphics.PreferredBackBufferWidth = 480;  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DemoGame,The following statement contains a magic number: Graphics.PreferredBackBufferHeight = 800;  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DemoGame,The following statement contains a magic number: TargetElapsedTime = TimeSpan.FromSeconds (1 / 30.0);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,LoadContent,The following statement contains a magic number: transitionRenderTarget = new RenderTarget2D (GraphicsDevice' 480' 800' false' SurfaceFormat.Color' DepthFormat.Depth24' 0' 0);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,LoadContent,The following statement contains a magic number: transitionRenderTarget = new RenderTarget2D (GraphicsDevice' 480' 800' false' SurfaceFormat.Color' DepthFormat.Depth24' 0' 0);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,BeginTransition,The following statement contains a magic number: SpriteBatch.Draw (BlankTexture' new Rectangle (0' 0' 480' 800)' new Color (0' 0' 0' 255));  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,BeginTransition,The following statement contains a magic number: SpriteBatch.Draw (BlankTexture' new Rectangle (0' 0' 480' 800)' new Color (0' 0' 0' 255));  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,BeginTransition,The following statement contains a magic number: SpriteBatch.Draw (BlankTexture' new Rectangle (0' 0' 480' 800)' new Color (0' 0' 0' 255));  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawTransitionEffect,The following statement contains a magic number: switch (transitionMode) {  case 1:  	// BasicEffect  	DrawOpenCurtainsTransition (alpha);  	break;  case 2:  case 5:  	// DualTexture  	// EnvironmentMap  	DrawSpinningSquaresTransition (mu' alpha);  	break;  case 3:  case 4:  	// AlphaTest and Skinning  	DrawChequeredAppearTransition (mu);  	break;  case 6:  	// Particles  	DrawFallingLinesTransition (mu);  	break;  default:  	// Returning to menu.  	DrawShrinkAndSpinTransition (mu' alpha);  	break;  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawTransitionEffect,The following statement contains a magic number: switch (transitionMode) {  case 1:  	// BasicEffect  	DrawOpenCurtainsTransition (alpha);  	break;  case 2:  case 5:  	// DualTexture  	// EnvironmentMap  	DrawSpinningSquaresTransition (mu' alpha);  	break;  case 3:  case 4:  	// AlphaTest and Skinning  	DrawChequeredAppearTransition (mu);  	break;  case 6:  	// Particles  	DrawFallingLinesTransition (mu);  	break;  default:  	// Returning to menu.  	DrawShrinkAndSpinTransition (mu' alpha);  	break;  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawTransitionEffect,The following statement contains a magic number: switch (transitionMode) {  case 1:  	// BasicEffect  	DrawOpenCurtainsTransition (alpha);  	break;  case 2:  case 5:  	// DualTexture  	// EnvironmentMap  	DrawSpinningSquaresTransition (mu' alpha);  	break;  case 3:  case 4:  	// AlphaTest and Skinning  	DrawChequeredAppearTransition (mu);  	break;  case 6:  	// Particles  	DrawFallingLinesTransition (mu);  	break;  default:  	// Returning to menu.  	DrawShrinkAndSpinTransition (mu' alpha);  	break;  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawTransitionEffect,The following statement contains a magic number: switch (transitionMode) {  case 1:  	// BasicEffect  	DrawOpenCurtainsTransition (alpha);  	break;  case 2:  case 5:  	// DualTexture  	// EnvironmentMap  	DrawSpinningSquaresTransition (mu' alpha);  	break;  case 3:  case 4:  	// AlphaTest and Skinning  	DrawChequeredAppearTransition (mu);  	break;  case 6:  	// Particles  	DrawFallingLinesTransition (mu);  	break;  default:  	// Returning to menu.  	DrawShrinkAndSpinTransition (mu' alpha);  	break;  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawTransitionEffect,The following statement contains a magic number: switch (transitionMode) {  case 1:  	// BasicEffect  	DrawOpenCurtainsTransition (alpha);  	break;  case 2:  case 5:  	// DualTexture  	// EnvironmentMap  	DrawSpinningSquaresTransition (mu' alpha);  	break;  case 3:  case 4:  	// AlphaTest and Skinning  	DrawChequeredAppearTransition (mu);  	break;  case 6:  	// Particles  	DrawFallingLinesTransition (mu);  	break;  default:  	// Returning to menu.  	DrawShrinkAndSpinTransition (mu' alpha);  	break;  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawOpenCurtainsTransition,The following statement contains a magic number: SpriteBatch.Draw (transitionRenderTarget' new Rectangle (0' 0' w' 800)' new Rectangle (0' 0' 240' 800)' Color.White * alpha);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawOpenCurtainsTransition,The following statement contains a magic number: SpriteBatch.Draw (transitionRenderTarget' new Rectangle (0' 0' w' 800)' new Rectangle (0' 0' 240' 800)' Color.White * alpha);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawOpenCurtainsTransition,The following statement contains a magic number: SpriteBatch.Draw (transitionRenderTarget' new Rectangle (0' 0' w' 800)' new Rectangle (0' 0' 240' 800)' Color.White * alpha);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawOpenCurtainsTransition,The following statement contains a magic number: SpriteBatch.Draw (transitionRenderTarget' new Rectangle (480 - w' 0' w' 800)' new Rectangle (240' 0' 240' 800)' Color.White * alpha);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawOpenCurtainsTransition,The following statement contains a magic number: SpriteBatch.Draw (transitionRenderTarget' new Rectangle (480 - w' 0' w' 800)' new Rectangle (240' 0' 240' 800)' Color.White * alpha);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawOpenCurtainsTransition,The following statement contains a magic number: SpriteBatch.Draw (transitionRenderTarget' new Rectangle (480 - w' 0' w' 800)' new Rectangle (240' 0' 240' 800)' Color.White * alpha);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawOpenCurtainsTransition,The following statement contains a magic number: SpriteBatch.Draw (transitionRenderTarget' new Rectangle (480 - w' 0' w' 800)' new Rectangle (240' 0' 240' 800)' Color.White * alpha);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawOpenCurtainsTransition,The following statement contains a magic number: SpriteBatch.Draw (transitionRenderTarget' new Rectangle (480 - w' 0' w' 800)' new Rectangle (240' 0' 240' 800)' Color.White * alpha);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int x = 0; x < 4; x++) {  	for (int y = 0; y < 8; y++) {  		Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  		Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  		float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  		float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  		Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  		pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  		SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	Rectangle rect = new Rectangle (480 * x / 4' 800 * y / 8' 480 / 4' 800 / 8);  	Vector2 origin = new Vector2 (rect.Width' rect.Height) / 2;  	float rotation = (float)(random.NextDouble () - 0.5) * mu * mu * 2;  	float scale = 1 + (float)(random.NextDouble () - 0.5f) * mu * mu;  	Vector2 pos = new Vector2 (rect.Center.X' rect.Center.Y);  	pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White * alpha' rotation' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: pos.X += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawSpinningSquaresTransition,The following statement contains a magic number: pos.Y += (float)(random.NextDouble () - 0.5) * mu * mu * 400;  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	for (int y = 0; y < 16; y++) {  		Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  		if (random.NextDouble () > mu * mu)  			SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	for (int y = 0; y < 16; y++) {  		Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  		if (random.NextDouble () > mu * mu)  			SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	for (int y = 0; y < 16; y++) {  		Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  		if (random.NextDouble () > mu * mu)  			SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	for (int y = 0; y < 16; y++) {  		Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  		if (random.NextDouble () > mu * mu)  			SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	for (int y = 0; y < 16; y++) {  		Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  		if (random.NextDouble () > mu * mu)  			SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	for (int y = 0; y < 16; y++) {  		Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  		if (random.NextDouble () > mu * mu)  			SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	for (int y = 0; y < 16; y++) {  		Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  		if (random.NextDouble () > mu * mu)  			SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	for (int y = 0; y < 16; y++) {  		Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  		if (random.NextDouble () > mu * mu)  			SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	for (int y = 0; y < 16; y++) {  		Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  		if (random.NextDouble () > mu * mu)  			SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	for (int y = 0; y < 16; y++) {  		Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  		if (random.NextDouble () > mu * mu)  			SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int y = 0; y < 16; y++) {  	Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  	if (random.NextDouble () > mu * mu)  		SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int y = 0; y < 16; y++) {  	Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  	if (random.NextDouble () > mu * mu)  		SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int y = 0; y < 16; y++) {  	Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  	if (random.NextDouble () > mu * mu)  		SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int y = 0; y < 16; y++) {  	Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  	if (random.NextDouble () > mu * mu)  		SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int y = 0; y < 16; y++) {  	Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  	if (random.NextDouble () > mu * mu)  		SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int y = 0; y < 16; y++) {  	Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  	if (random.NextDouble () > mu * mu)  		SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int y = 0; y < 16; y++) {  	Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  	if (random.NextDouble () > mu * mu)  		SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int y = 0; y < 16; y++) {  	Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  	if (random.NextDouble () > mu * mu)  		SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawChequeredAppearTransition,The following statement contains a magic number: for (int y = 0; y < 16; y++) {  	Rectangle rect = new Rectangle (480 * x / 8' 800 * y / 16' 480 / 8' 800 / 16);  	if (random.NextDouble () > mu * mu)  		SpriteBatch.Draw (transitionRenderTarget' rect' rect' Color.White);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawFallingLinesTransition,The following statement contains a magic number: for (int x = 0; x < segments; x++) {  	Rectangle rect = new Rectangle (480 * x / segments' 0' 480 / segments' 800);  	Vector2 pos = new Vector2 (rect.X' 0);  	pos.Y += 800 * (float)Math.Pow (mu' random.NextDouble () * 10);  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawFallingLinesTransition,The following statement contains a magic number: for (int x = 0; x < segments; x++) {  	Rectangle rect = new Rectangle (480 * x / segments' 0' 480 / segments' 800);  	Vector2 pos = new Vector2 (rect.X' 0);  	pos.Y += 800 * (float)Math.Pow (mu' random.NextDouble () * 10);  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawFallingLinesTransition,The following statement contains a magic number: for (int x = 0; x < segments; x++) {  	Rectangle rect = new Rectangle (480 * x / segments' 0' 480 / segments' 800);  	Vector2 pos = new Vector2 (rect.X' 0);  	pos.Y += 800 * (float)Math.Pow (mu' random.NextDouble () * 10);  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawFallingLinesTransition,The following statement contains a magic number: for (int x = 0; x < segments; x++) {  	Rectangle rect = new Rectangle (480 * x / segments' 0' 480 / segments' 800);  	Vector2 pos = new Vector2 (rect.X' 0);  	pos.Y += 800 * (float)Math.Pow (mu' random.NextDouble () * 10);  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawFallingLinesTransition,The following statement contains a magic number: for (int x = 0; x < segments; x++) {  	Rectangle rect = new Rectangle (480 * x / segments' 0' 480 / segments' 800);  	Vector2 pos = new Vector2 (rect.X' 0);  	pos.Y += 800 * (float)Math.Pow (mu' random.NextDouble () * 10);  	SpriteBatch.Draw (transitionRenderTarget' pos' rect' Color.White);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawFallingLinesTransition,The following statement contains a magic number: pos.Y += 800 * (float)Math.Pow (mu' random.NextDouble () * 10);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawFallingLinesTransition,The following statement contains a magic number: pos.Y += 800 * (float)Math.Pow (mu' random.NextDouble () * 10);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawZoomyText,The following statement contains a magic number: foreach (ZoomyText zoomyText in zoomyTexts) {  	Vector2 pos = zoomyText.Position + Font.MeasureString (zoomyText.Text) / 2;  	float age = zoomyText.Age / ZoomyTextLifespan;  	float sqrtAge = (float)Math.Sqrt (age);  	float scale = 0.333f + sqrtAge * 2f;  	float alpha = 1 - age;  	SpriteFont font = BigFont;  	// Our BigFont only contains characters a-z' so if the text  	// contains any numbers' we have to use the other font instead.  	foreach (char ch in zoomyText.Text) {  		if (char.IsDigit (ch)) {  			font = Font;  			scale *= 2;  			break;  		}  	}  	Vector2 origin = font.MeasureString (zoomyText.Text) / 2;  	SpriteBatch.DrawString (font' zoomyText.Text' pos' Color.Lerp (new Color (64' 64' 255)' Color.White' sqrtAge) * alpha' 0' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawZoomyText,The following statement contains a magic number: foreach (ZoomyText zoomyText in zoomyTexts) {  	Vector2 pos = zoomyText.Position + Font.MeasureString (zoomyText.Text) / 2;  	float age = zoomyText.Age / ZoomyTextLifespan;  	float sqrtAge = (float)Math.Sqrt (age);  	float scale = 0.333f + sqrtAge * 2f;  	float alpha = 1 - age;  	SpriteFont font = BigFont;  	// Our BigFont only contains characters a-z' so if the text  	// contains any numbers' we have to use the other font instead.  	foreach (char ch in zoomyText.Text) {  		if (char.IsDigit (ch)) {  			font = Font;  			scale *= 2;  			break;  		}  	}  	Vector2 origin = font.MeasureString (zoomyText.Text) / 2;  	SpriteBatch.DrawString (font' zoomyText.Text' pos' Color.Lerp (new Color (64' 64' 255)' Color.White' sqrtAge) * alpha' 0' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawZoomyText,The following statement contains a magic number: foreach (ZoomyText zoomyText in zoomyTexts) {  	Vector2 pos = zoomyText.Position + Font.MeasureString (zoomyText.Text) / 2;  	float age = zoomyText.Age / ZoomyTextLifespan;  	float sqrtAge = (float)Math.Sqrt (age);  	float scale = 0.333f + sqrtAge * 2f;  	float alpha = 1 - age;  	SpriteFont font = BigFont;  	// Our BigFont only contains characters a-z' so if the text  	// contains any numbers' we have to use the other font instead.  	foreach (char ch in zoomyText.Text) {  		if (char.IsDigit (ch)) {  			font = Font;  			scale *= 2;  			break;  		}  	}  	Vector2 origin = font.MeasureString (zoomyText.Text) / 2;  	SpriteBatch.DrawString (font' zoomyText.Text' pos' Color.Lerp (new Color (64' 64' 255)' Color.White' sqrtAge) * alpha' 0' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawZoomyText,The following statement contains a magic number: foreach (ZoomyText zoomyText in zoomyTexts) {  	Vector2 pos = zoomyText.Position + Font.MeasureString (zoomyText.Text) / 2;  	float age = zoomyText.Age / ZoomyTextLifespan;  	float sqrtAge = (float)Math.Sqrt (age);  	float scale = 0.333f + sqrtAge * 2f;  	float alpha = 1 - age;  	SpriteFont font = BigFont;  	// Our BigFont only contains characters a-z' so if the text  	// contains any numbers' we have to use the other font instead.  	foreach (char ch in zoomyText.Text) {  		if (char.IsDigit (ch)) {  			font = Font;  			scale *= 2;  			break;  		}  	}  	Vector2 origin = font.MeasureString (zoomyText.Text) / 2;  	SpriteBatch.DrawString (font' zoomyText.Text' pos' Color.Lerp (new Color (64' 64' 255)' Color.White' sqrtAge) * alpha' 0' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawZoomyText,The following statement contains a magic number: foreach (ZoomyText zoomyText in zoomyTexts) {  	Vector2 pos = zoomyText.Position + Font.MeasureString (zoomyText.Text) / 2;  	float age = zoomyText.Age / ZoomyTextLifespan;  	float sqrtAge = (float)Math.Sqrt (age);  	float scale = 0.333f + sqrtAge * 2f;  	float alpha = 1 - age;  	SpriteFont font = BigFont;  	// Our BigFont only contains characters a-z' so if the text  	// contains any numbers' we have to use the other font instead.  	foreach (char ch in zoomyText.Text) {  		if (char.IsDigit (ch)) {  			font = Font;  			scale *= 2;  			break;  		}  	}  	Vector2 origin = font.MeasureString (zoomyText.Text) / 2;  	SpriteBatch.DrawString (font' zoomyText.Text' pos' Color.Lerp (new Color (64' 64' 255)' Color.White' sqrtAge) * alpha' 0' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawZoomyText,The following statement contains a magic number: foreach (ZoomyText zoomyText in zoomyTexts) {  	Vector2 pos = zoomyText.Position + Font.MeasureString (zoomyText.Text) / 2;  	float age = zoomyText.Age / ZoomyTextLifespan;  	float sqrtAge = (float)Math.Sqrt (age);  	float scale = 0.333f + sqrtAge * 2f;  	float alpha = 1 - age;  	SpriteFont font = BigFont;  	// Our BigFont only contains characters a-z' so if the text  	// contains any numbers' we have to use the other font instead.  	foreach (char ch in zoomyText.Text) {  		if (char.IsDigit (ch)) {  			font = Font;  			scale *= 2;  			break;  		}  	}  	Vector2 origin = font.MeasureString (zoomyText.Text) / 2;  	SpriteBatch.DrawString (font' zoomyText.Text' pos' Color.Lerp (new Color (64' 64' 255)' Color.White' sqrtAge) * alpha' 0' origin' scale' 0' 0);  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawZoomyText,The following statement contains a magic number: foreach (char ch in zoomyText.Text) {  	if (char.IsDigit (ch)) {  		font = Font;  		scale *= 2;  		break;  	}  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawZoomyText,The following statement contains a magic number: if (char.IsDigit (ch)) {  	font = Font;  	scale *= 2;  	break;  }  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawZoomyText,The following statement contains a magic number: scale *= 2;  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawZoomyText,The following statement contains a magic number: SpriteBatch.DrawString (font' zoomyText.Text' pos' Color.Lerp (new Color (64' 64' 255)' Color.White' sqrtAge) * alpha' 0' origin' scale' 0' 0);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawZoomyText,The following statement contains a magic number: SpriteBatch.DrawString (font' zoomyText.Text' pos' Color.Lerp (new Color (64' 64' 255)' Color.White' sqrtAge) * alpha' 0' origin' scale' 0' 0);  
Magic Number,XnaGraphicsDemo,DemoGame,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DemoGame.cs,DrawZoomyText,The following statement contains a magic number: SpriteBatch.DrawString (font' zoomyText.Text' pos' Color.Lerp (new Color (64' 64' 255)' Color.White' sqrtAge) * alpha' 0' origin' scale' 0' 0);  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,Reset,The following statement contains a magic number: cameraRotation = 124;  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,Reset,The following statement contains a magic number: cameraArc = -12;  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,LoadContent,The following statement contains a magic number: grey.SetData (new Color[] {  	new Color (128' 128' 128' 255)  });  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,LoadContent,The following statement contains a magic number: grey.SetData (new Color[] {  	new Color (128' 128' 128' 255)  });  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,LoadContent,The following statement contains a magic number: grey.SetData (new Color[] {  	new Color (128' 128' 128' 255)  });  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,LoadContent,The following statement contains a magic number: grey.SetData (new Color[] {  	new Color (128' 128' 128' 255)  });  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("dual texture effect"' new Color (128' 160' 128)' new Color (96' 128' 96));  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("dual texture effect"' new Color (128' 160' 128)' new Color (96' 128' 96));  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("dual texture effect"' new Color (128' 160' 128)' new Color (96' 128' 96));  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("dual texture effect"' new Color (128' 160' 128)' new Color (96' 128' 96));  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("dual texture effect"' new Color (128' 160' 128)' new Color (96' 128' 96));  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("dual texture effect"' new Color (128' 160' 128)' new Color (96' 128' 96));  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,OnDrag,The following statement contains a magic number: cameraRotation = MathHelper.Clamp (cameraRotation + delta.X / 8' 0' 180);  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,OnDrag,The following statement contains a magic number: cameraRotation = MathHelper.Clamp (cameraRotation + delta.X / 8' 0' 180);  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,OnDrag,The following statement contains a magic number: cameraArc = MathHelper.Clamp (cameraArc - delta.Y / 8' -50' 15);  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,OnDrag,The following statement contains a magic number: cameraArc = MathHelper.Clamp (cameraArc - delta.Y / 8' -50' 15);  
Magic Number,XnaGraphicsDemo,DualDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\DualDemo.cs,OnDrag,The following statement contains a magic number: cameraArc = MathHelper.Clamp (cameraArc - delta.Y / 8' -50' 15);  
Magic Number,XnaGraphicsDemo,EnvmapDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\EnvmapDemo.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw (background' new Rectangle (0' 0' 480' 800)' Color.White);  
Magic Number,XnaGraphicsDemo,EnvmapDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\EnvmapDemo.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw (background' new Rectangle (0' 0' 480' 800)' Color.White);  
Magic Number,XnaGraphicsDemo,EnvmapDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\EnvmapDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("environment map effect"' null' new Color (93' 142' 196));  
Magic Number,XnaGraphicsDemo,EnvmapDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\EnvmapDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("environment map effect"' null' new Color (93' 142' 196));  
Magic Number,XnaGraphicsDemo,EnvmapDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\EnvmapDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("environment map effect"' null' new Color (93' 142' 196));  
Magic Number,XnaGraphicsDemo,EnvmapDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\EnvmapDemo.cs,Draw,The following statement contains a magic number: foreach (ModelMesh mesh in model.Meshes) {  	foreach (EnvironmentMapEffect effect in mesh.Effects) {  		Matrix world = transforms [mesh.ParentBone.Index] * rotation;  		effect.World = world;  		effect.View = view;  		effect.Projection = projection;  		effect.EnableDefaultLighting ();  		effect.EnvironmentMapAmount = amount.Value;  		effect.FresnelFactor = fresnel.Value * 2;  		effect.EnvironmentMapSpecular = new Vector3 (1' 1' 0.5f) * specular.Value;  	}  	mesh.Draw ();  }  
Magic Number,XnaGraphicsDemo,EnvmapDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\EnvmapDemo.cs,Draw,The following statement contains a magic number: foreach (EnvironmentMapEffect effect in mesh.Effects) {  	Matrix world = transforms [mesh.ParentBone.Index] * rotation;  	effect.World = world;  	effect.View = view;  	effect.Projection = projection;  	effect.EnableDefaultLighting ();  	effect.EnvironmentMapAmount = amount.Value;  	effect.FresnelFactor = fresnel.Value * 2;  	effect.EnvironmentMapSpecular = new Vector3 (1' 1' 0.5f) * specular.Value;  }  
Magic Number,XnaGraphicsDemo,EnvmapDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\EnvmapDemo.cs,Draw,The following statement contains a magic number: effect.FresnelFactor = fresnel.Value * 2;  
Magic Number,XnaGraphicsDemo,MenuComponent,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\MenuComponent.cs,HandleAttractMode,The following statement contains a magic number: if (input != lastInputState || touchDown) {  	// If input has changed' reset the timer.  	attractTimer = TimeSpan.FromSeconds (-15);  	lastInputState = input;  } else {  	// If no input occurs' increment the timer.  	attractTimer += gameTime.ElapsedGameTime;  	if (attractTimer > AttractDelay) {  		// Timeout! Run the attract action.  		attractTimer = TimeSpan.Zero;  		OnAttract ();  	}  }  
Magic Number,XnaGraphicsDemo,MenuComponent,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\MenuComponent.cs,HandleAttractMode,The following statement contains a magic number: attractTimer = TimeSpan.FromSeconds (-15);  
Magic Number,XnaGraphicsDemo,MenuComponent,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\MenuComponent.cs,DrawTitle,The following statement contains a magic number: SpriteBatch.DrawString (BigFont' title' new Vector2 (480' 24)' titleColor' MathHelper.PiOver2' Vector2.Zero' 1' 0' 0);  
Magic Number,XnaGraphicsDemo,MenuComponent,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\MenuComponent.cs,DrawTitle,The following statement contains a magic number: SpriteBatch.DrawString (BigFont' title' new Vector2 (480' 24)' titleColor' MathHelper.PiOver2' Vector2.Zero' 1' 0' 0);  
Magic Number,XnaGraphicsDemo,MenuEntry,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\MenuEntry.cs,Draw,The following statement contains a magic number: positionOffset = new Vector2 (0' (Height - font.LineSpacing) / 2);  
Magic Number,XnaGraphicsDemo,FloatMenuEntry,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\MenuEntry.cs,Draw,The following statement contains a magic number: size.Y /= 2;  
Magic Number,XnaGraphicsDemo,FloatMenuEntry,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\MenuEntry.cs,Draw,The following statement contains a magic number: pos.X += 8;  
Magic Number,XnaGraphicsDemo,FloatMenuEntry,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\MenuEntry.cs,Draw,The following statement contains a magic number: pos.Y += (Height - font.LineSpacing) / 2;  
Magic Number,XnaGraphicsDemo,FloatMenuEntry,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\MenuEntry.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (blankTexture' new Rectangle ((int)pos.X' (int)pos.Y - 3' (int)(w * Value)' 6)' Color);  
Magic Number,XnaGraphicsDemo,FloatMenuEntry,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\MenuEntry.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (blankTexture' new Rectangle ((int)pos.X' (int)pos.Y - 3' (int)(w * Value)' 6)' Color);  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,ParticleDemo,The following statement contains a magic number: Entries.Add (new MenuEntry {  	Text = "back"'  	Clicked = delegate {  		// Before we quit back out of this menu' reset back to the default resolution.  		if (game.Graphics.PreferredBackBufferWidth != 480) {  			game.Graphics.PreferredBackBufferWidth = 480;  			game.Graphics.PreferredBackBufferHeight = 800;  			game.Graphics.ApplyChanges ();  		}  		Game.SetActiveMenu (0);  	}  });  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,ParticleDemo,The following statement contains a magic number: Entries.Add (new MenuEntry {  	Text = "back"'  	Clicked = delegate {  		// Before we quit back out of this menu' reset back to the default resolution.  		if (game.Graphics.PreferredBackBufferWidth != 480) {  			game.Graphics.PreferredBackBufferWidth = 480;  			game.Graphics.PreferredBackBufferHeight = 800;  			game.Graphics.ApplyChanges ();  		}  		Game.SetActiveMenu (0);  	}  });  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,ParticleDemo,The following statement contains a magic number: Entries.Add (new MenuEntry {  	Text = "back"'  	Clicked = delegate {  		// Before we quit back out of this menu' reset back to the default resolution.  		if (game.Graphics.PreferredBackBufferWidth != 480) {  			game.Graphics.PreferredBackBufferWidth = 480;  			game.Graphics.PreferredBackBufferHeight = 800;  			game.Graphics.ApplyChanges ();  		}  		Game.SetActiveMenu (0);  	}  });  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,ParticleDemo,The following statement contains a magic number: if (game.Graphics.PreferredBackBufferWidth != 480) {  	game.Graphics.PreferredBackBufferWidth = 480;  	game.Graphics.PreferredBackBufferHeight = 800;  	game.Graphics.ApplyChanges ();  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,ParticleDemo,The following statement contains a magic number: if (game.Graphics.PreferredBackBufferWidth != 480) {  	game.Graphics.PreferredBackBufferWidth = 480;  	game.Graphics.PreferredBackBufferHeight = 800;  	game.Graphics.ApplyChanges ();  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,ParticleDemo,The following statement contains a magic number: if (game.Graphics.PreferredBackBufferWidth != 480) {  	game.Graphics.PreferredBackBufferWidth = 480;  	game.Graphics.PreferredBackBufferHeight = 800;  	game.Graphics.ApplyChanges ();  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,ParticleDemo,The following statement contains a magic number: game.Graphics.PreferredBackBufferWidth = 480;  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,ParticleDemo,The following statement contains a magic number: game.Graphics.PreferredBackBufferHeight = 800;  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,Update,The following statement contains a magic number: for (int j = particleCount; j > 0; j--) {  	// Move a particle.  	particles [i].Position += particles [i].Velocity;  	particles [i].Rotation += particles [i].Spin;  	particles [i].Velocity.Y += 0.1f;  	// Retire old particles?  	const float borderPadding = 96;  	if (i == firstParticle) {  		if ((particles [i].Position.X < -borderPadding) || (particles [i].Position.X > 480 + borderPadding) || (particles [i].Position.Y < -borderPadding) || (particles [i].Position.Y > 800 + borderPadding)) {  			if (++firstParticle >= MaxParticles)  				firstParticle = 0;  			particleCount--;  		}  	}  	if (++i >= MaxParticles)  		i = 0;  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,Update,The following statement contains a magic number: for (int j = particleCount; j > 0; j--) {  	// Move a particle.  	particles [i].Position += particles [i].Velocity;  	particles [i].Rotation += particles [i].Spin;  	particles [i].Velocity.Y += 0.1f;  	// Retire old particles?  	const float borderPadding = 96;  	if (i == firstParticle) {  		if ((particles [i].Position.X < -borderPadding) || (particles [i].Position.X > 480 + borderPadding) || (particles [i].Position.Y < -borderPadding) || (particles [i].Position.Y > 800 + borderPadding)) {  			if (++firstParticle >= MaxParticles)  				firstParticle = 0;  			particleCount--;  		}  	}  	if (++i >= MaxParticles)  		i = 0;  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,Update,The following statement contains a magic number: for (int j = particleCount; j > 0; j--) {  	// Move a particle.  	particles [i].Position += particles [i].Velocity;  	particles [i].Rotation += particles [i].Spin;  	particles [i].Velocity.Y += 0.1f;  	// Retire old particles?  	const float borderPadding = 96;  	if (i == firstParticle) {  		if ((particles [i].Position.X < -borderPadding) || (particles [i].Position.X > 480 + borderPadding) || (particles [i].Position.Y < -borderPadding) || (particles [i].Position.Y > 800 + borderPadding)) {  			if (++firstParticle >= MaxParticles)  				firstParticle = 0;  			particleCount--;  		}  	}  	if (++i >= MaxParticles)  		i = 0;  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,Update,The following statement contains a magic number: if (i == firstParticle) {  	if ((particles [i].Position.X < -borderPadding) || (particles [i].Position.X > 480 + borderPadding) || (particles [i].Position.Y < -borderPadding) || (particles [i].Position.Y > 800 + borderPadding)) {  		if (++firstParticle >= MaxParticles)  			firstParticle = 0;  		particleCount--;  	}  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,Update,The following statement contains a magic number: if (i == firstParticle) {  	if ((particles [i].Position.X < -borderPadding) || (particles [i].Position.X > 480 + borderPadding) || (particles [i].Position.Y < -borderPadding) || (particles [i].Position.Y > 800 + borderPadding)) {  		if (++firstParticle >= MaxParticles)  			firstParticle = 0;  		particleCount--;  	}  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,Update,The following statement contains a magic number: if ((particles [i].Position.X < -borderPadding) || (particles [i].Position.X > 480 + borderPadding) || (particles [i].Position.Y < -borderPadding) || (particles [i].Position.Y > 800 + borderPadding)) {  	if (++firstParticle >= MaxParticles)  		firstParticle = 0;  	particleCount--;  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,Update,The following statement contains a magic number: if ((particles [i].Position.X < -borderPadding) || (particles [i].Position.X > 480 + borderPadding) || (particles [i].Position.Y < -borderPadding) || (particles [i].Position.Y > 800 + borderPadding)) {  	if (++firstParticle >= MaxParticles)  		firstParticle = 0;  	particleCount--;  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,Update,The following statement contains a magic number: spawnCounter += spawnRate.Value * 10;  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,SpawnParticle,The following statement contains a magic number: particles [i].Position = position ?? new Vector2 ((float)random.NextDouble () * 480' (float)random.NextDouble () * 800);  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,SpawnParticle,The following statement contains a magic number: particles [i].Position = position ?? new Vector2 ((float)random.NextDouble () * 480' (float)random.NextDouble () * 800);  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,SpawnParticle,The following statement contains a magic number: if (position.HasValue) {  	// Explicitly positioned particles have no tint.  	particles [i].Color = Color.White;  } else {  	// Randomly positioned particles have random tint colors.  	byte r = (byte)(128 + random.NextDouble () * 127);  	byte g = (byte)(128 + random.NextDouble () * 127);  	byte b = (byte)(128 + random.NextDouble () * 127);  	particles [i].Color = new Color (r' g' b);  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,SpawnParticle,The following statement contains a magic number: if (position.HasValue) {  	// Explicitly positioned particles have no tint.  	particles [i].Color = Color.White;  } else {  	// Randomly positioned particles have random tint colors.  	byte r = (byte)(128 + random.NextDouble () * 127);  	byte g = (byte)(128 + random.NextDouble () * 127);  	byte b = (byte)(128 + random.NextDouble () * 127);  	particles [i].Color = new Color (r' g' b);  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,SpawnParticle,The following statement contains a magic number: if (position.HasValue) {  	// Explicitly positioned particles have no tint.  	particles [i].Color = Color.White;  } else {  	// Randomly positioned particles have random tint colors.  	byte r = (byte)(128 + random.NextDouble () * 127);  	byte g = (byte)(128 + random.NextDouble () * 127);  	byte b = (byte)(128 + random.NextDouble () * 127);  	particles [i].Color = new Color (r' g' b);  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,SpawnParticle,The following statement contains a magic number: if (position.HasValue) {  	// Explicitly positioned particles have no tint.  	particles [i].Color = Color.White;  } else {  	// Randomly positioned particles have random tint colors.  	byte r = (byte)(128 + random.NextDouble () * 127);  	byte g = (byte)(128 + random.NextDouble () * 127);  	byte b = (byte)(128 + random.NextDouble () * 127);  	particles [i].Color = new Color (r' g' b);  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,SpawnParticle,The following statement contains a magic number: if (position.HasValue) {  	// Explicitly positioned particles have no tint.  	particles [i].Color = Color.White;  } else {  	// Randomly positioned particles have random tint colors.  	byte r = (byte)(128 + random.NextDouble () * 127);  	byte g = (byte)(128 + random.NextDouble () * 127);  	byte b = (byte)(128 + random.NextDouble () * 127);  	particles [i].Color = new Color (r' g' b);  }  
Magic Number,XnaGraphicsDemo,ParticleDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\ParticleDemo.cs,SpawnParticle,The following statement contains a magic number: if (position.HasValue) {  	// Explicitly positioned particles have no tint.  	particles [i].Color = Color.White;  } else {  	// Randomly positioned particles have random tint colors.  	byte r = (byte)(128 + random.NextDouble () * 127);  	byte g = (byte)(128 + random.NextDouble () * 127);  	byte b = (byte)(128 + random.NextDouble () * 127);  	particles [i].Color = new Color (r' g' b);  }  
Magic Number,XnaGraphicsDemo,SkinnedDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\SkinnedDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("skinned effect"' null' new Color (127' 112' 104));  
Magic Number,XnaGraphicsDemo,SkinnedDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\SkinnedDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("skinned effect"' null' new Color (127' 112' 104));  
Magic Number,XnaGraphicsDemo,SkinnedDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\SkinnedDemo.cs,Draw,The following statement contains a magic number: DrawTitle ("skinned effect"' null' new Color (127' 112' 104));  
Magic Number,XnaGraphicsDemo,SkinnedDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\SkinnedDemo.cs,OnDrag,The following statement contains a magic number: cameraRotation += delta.X / 4;  
Magic Number,XnaGraphicsDemo,SkinnedDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\SkinnedDemo.cs,OnDrag,The following statement contains a magic number: cameraArc = MathHelper.Clamp (cameraArc - delta.Y / 4' -70' 70);  
Magic Number,XnaGraphicsDemo,SkinnedDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\SkinnedDemo.cs,OnDrag,The following statement contains a magic number: cameraArc = MathHelper.Clamp (cameraArc - delta.Y / 4' -70' 70);  
Magic Number,XnaGraphicsDemo,SkinnedDemo,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\SkinnedDemo.cs,OnDrag,The following statement contains a magic number: cameraArc = MathHelper.Clamp (cameraArc - delta.Y / 4' -70' 70);  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,TitleMenu,The following statement contains a magic number: Entries.Add (new MenuEntry {  	Text = "dual texture effect"'  	Clicked = delegate {  		Game.SetActiveMenu (2);  	}  });  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,TitleMenu,The following statement contains a magic number: Game.SetActiveMenu (2);  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,TitleMenu,The following statement contains a magic number: Entries.Add (new MenuEntry {  	Text = "alpha test effect"'  	Clicked = delegate {  		Game.SetActiveMenu (3);  	}  });  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,TitleMenu,The following statement contains a magic number: Game.SetActiveMenu (3);  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,TitleMenu,The following statement contains a magic number: Entries.Add (new MenuEntry {  	Text = "skinned effect"'  	Clicked = delegate {  		Game.SetActiveMenu (4);  	}  });  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,TitleMenu,The following statement contains a magic number: Game.SetActiveMenu (4);  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,TitleMenu,The following statement contains a magic number: Entries.Add (new MenuEntry {  	Text = "environment map effect"'  	Clicked = delegate {  		Game.SetActiveMenu (5);  	}  });  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,TitleMenu,The following statement contains a magic number: Game.SetActiveMenu (5);  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,TitleMenu,The following statement contains a magic number: Entries.Add (new MenuEntry {  	Text = "particles"'  	Clicked = delegate {  		Game.SetActiveMenu (6);  	}  });  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,TitleMenu,The following statement contains a magic number: Game.SetActiveMenu (6);  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Update,The following statement contains a magic number: if (time > XnaSpawnRate) {  	FloatingXna xna = new FloatingXna ();  	xna.Size = (float)random.NextDouble () * 2 + 0.5f;  	xna.Position.X = (float)random.NextDouble () * 320 + 80;  	xna.Position.Y = (float)random.NextDouble () * 700 + 50;  	floatingXnas.Add (xna);  	time -= XnaSpawnRate;  }  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Update,The following statement contains a magic number: if (time > XnaSpawnRate) {  	FloatingXna xna = new FloatingXna ();  	xna.Size = (float)random.NextDouble () * 2 + 0.5f;  	xna.Position.X = (float)random.NextDouble () * 320 + 80;  	xna.Position.Y = (float)random.NextDouble () * 700 + 50;  	floatingXnas.Add (xna);  	time -= XnaSpawnRate;  }  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Update,The following statement contains a magic number: if (time > XnaSpawnRate) {  	FloatingXna xna = new FloatingXna ();  	xna.Size = (float)random.NextDouble () * 2 + 0.5f;  	xna.Position.X = (float)random.NextDouble () * 320 + 80;  	xna.Position.Y = (float)random.NextDouble () * 700 + 50;  	floatingXnas.Add (xna);  	time -= XnaSpawnRate;  }  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Update,The following statement contains a magic number: if (time > XnaSpawnRate) {  	FloatingXna xna = new FloatingXna ();  	xna.Size = (float)random.NextDouble () * 2 + 0.5f;  	xna.Position.X = (float)random.NextDouble () * 320 + 80;  	xna.Position.Y = (float)random.NextDouble () * 700 + 50;  	floatingXnas.Add (xna);  	time -= XnaSpawnRate;  }  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Update,The following statement contains a magic number: if (time > XnaSpawnRate) {  	FloatingXna xna = new FloatingXna ();  	xna.Size = (float)random.NextDouble () * 2 + 0.5f;  	xna.Position.X = (float)random.NextDouble () * 320 + 80;  	xna.Position.Y = (float)random.NextDouble () * 700 + 50;  	floatingXnas.Add (xna);  	time -= XnaSpawnRate;  }  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Update,The following statement contains a magic number: xna.Size = (float)random.NextDouble () * 2 + 0.5f;  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Update,The following statement contains a magic number: xna.Position.X = (float)random.NextDouble () * 320 + 80;  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Update,The following statement contains a magic number: xna.Position.X = (float)random.NextDouble () * 320 + 80;  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Update,The following statement contains a magic number: xna.Position.Y = (float)random.NextDouble () * 700 + 50;  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Update,The following statement contains a magic number: xna.Position.Y = (float)random.NextDouble () * 700 + 50;  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Update,The following statement contains a magic number: while (i < floatingXnas.Count) {  	FloatingXna xna = floatingXnas [i];  	xna.Age += (float)gameTime.ElapsedGameTime.TotalSeconds;  	// Different size labels move at different speeds.  	float speed = 1.5f - xna.Size;  	if (Math.Abs (speed) > 0.01f)  		xna.Position.Y -= xna.Age * xna.Age / speed / 10;  	// Remove old labels.  	if (xna.Age >= XnaLifespan)  		floatingXnas.RemoveAt (i);  	else  		i++;  }  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Update,The following statement contains a magic number: if (Math.Abs (speed) > 0.01f)  	xna.Position.Y -= xna.Age * xna.Age / speed / 10;  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Update,The following statement contains a magic number: xna.Position.Y -= xna.Age * xna.Age / speed / 10;  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Draw,The following statement contains a magic number: foreach (FloatingXna blob in floatingXnas) {  	float alpha = Math.Min (blob.Age' 1) * Math.Min ((XnaLifespan - blob.Age) / (XnaLifespan - 2)' 1);  	alpha *= alpha;  	alpha /= 8;  	SpriteBatch.DrawString (BigFont' "xna"' blob.Position' Color.Blue * alpha' MathHelper.PiOver2' Vector2.Zero' blob.Size' 0' 0);  }  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Draw,The following statement contains a magic number: foreach (FloatingXna blob in floatingXnas) {  	float alpha = Math.Min (blob.Age' 1) * Math.Min ((XnaLifespan - blob.Age) / (XnaLifespan - 2)' 1);  	alpha *= alpha;  	alpha /= 8;  	SpriteBatch.DrawString (BigFont' "xna"' blob.Position' Color.Blue * alpha' MathHelper.PiOver2' Vector2.Zero' blob.Size' 0' 0);  }  
Magic Number,XnaGraphicsDemo,TitleMenu,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\TitleMenu.cs,Draw,The following statement contains a magic number: alpha /= 8;  
Magic Number,SimpleAnimation,Tank,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\Tank.cs,Animate,The following statement contains a magic number: HatchRotation = MathHelper.Clamp ((float)Math.Sin (time * 2) * 2' -1' 0);  
Magic Number,SimpleAnimation,Tank,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\Tank.cs,Animate,The following statement contains a magic number: HatchRotation = MathHelper.Clamp ((float)Math.Sin (time * 2) * 2' -1' 0);  
Magic Number,SimpleAnimation,Tank,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\Tank.cs,Draw,The following statement contains a magic number: foreach (ModelMesh mesh in tankModel.Meshes) {  	foreach (BasicEffect effect in mesh.Effects) {  		effect.World = boneTransforms [mesh.ParentBone.Index];  		effect.View = view;  		effect.Projection = projection;  		switch (lightMode) {  		case LightingMode.NoLighting:  			effect.LightingEnabled = false;  			break;  		case LightingMode.OneVertexLight:  			effect.EnableDefaultLighting ();  			effect.PreferPerPixelLighting = false;  			effect.DirectionalLight1.Enabled = false;  			effect.DirectionalLight2.Enabled = false;  			break;  		case LightingMode.ThreeVertexLights:  			effect.EnableDefaultLighting ();  			effect.PreferPerPixelLighting = false;  			break;  		case LightingMode.ThreePixelLights:  			effect.EnableDefaultLighting ();  			effect.PreferPerPixelLighting = true;  			break;  		}  		effect.SpecularColor = new Vector3 (0.8f' 0.8f' 0.6f);  		effect.SpecularPower = 16;  		effect.TextureEnabled = textureEnable;  	}  	mesh.Draw ();  }  
Magic Number,SimpleAnimation,Tank,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\Tank.cs,Draw,The following statement contains a magic number: foreach (BasicEffect effect in mesh.Effects) {  	effect.World = boneTransforms [mesh.ParentBone.Index];  	effect.View = view;  	effect.Projection = projection;  	switch (lightMode) {  	case LightingMode.NoLighting:  		effect.LightingEnabled = false;  		break;  	case LightingMode.OneVertexLight:  		effect.EnableDefaultLighting ();  		effect.PreferPerPixelLighting = false;  		effect.DirectionalLight1.Enabled = false;  		effect.DirectionalLight2.Enabled = false;  		break;  	case LightingMode.ThreeVertexLights:  		effect.EnableDefaultLighting ();  		effect.PreferPerPixelLighting = false;  		break;  	case LightingMode.ThreePixelLights:  		effect.EnableDefaultLighting ();  		effect.PreferPerPixelLighting = true;  		break;  	}  	effect.SpecularColor = new Vector3 (0.8f' 0.8f' 0.6f);  	effect.SpecularPower = 16;  	effect.TextureEnabled = textureEnable;  }  
Magic Number,SimpleAnimation,Tank,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\Tank.cs,Draw,The following statement contains a magic number: effect.SpecularPower = 16;  
Missing Default,SimpleAnimation,Tank,F:\newReposMay17\CartBlanche_MonoGame-Samples\ReachGraphicsDemo\Tank.cs,Draw,The following switch statement is missing a default case: switch (lightMode) {  case LightingMode.NoLighting:  	effect.LightingEnabled = false;  	break;  case LightingMode.OneVertexLight:  	effect.EnableDefaultLighting ();  	effect.PreferPerPixelLighting = false;  	effect.DirectionalLight1.Enabled = false;  	effect.DirectionalLight2.Enabled = false;  	break;  case LightingMode.ThreeVertexLights:  	effect.EnableDefaultLighting ();  	effect.PreferPerPixelLighting = false;  	break;  case LightingMode.ThreePixelLights:  	effect.EnableDefaultLighting ();  	effect.PreferPerPixelLighting = true;  	break;  }  
