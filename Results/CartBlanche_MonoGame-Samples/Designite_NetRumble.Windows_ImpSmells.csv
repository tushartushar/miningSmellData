Implementation smell,Namespace,Class,File,Method,Description
Long Method,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,World,The method has 123 lines of code.
Long Method,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,Update,The method has 184 lines of code.
Long Method,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The method has 124 lines of code.
Long Method,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Update,The method has 106 lines of code.
Complex Method,NetRumble,CollisionManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\CollisionManager.cs,Update,Cyclomatic complexity of the method is 9
Complex Method,NetRumble,CollisionManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\CollisionManager.cs,MoveAndCollide,Cyclomatic complexity of the method is 8
Complex Method,NetRumble,CollisionManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\CollisionManager.cs,Collide,Cyclomatic complexity of the method is 11
Complex Method,NetRumble,CollisionManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\CollisionManager.cs,FindSpawnPoint,Cyclomatic complexity of the method is 12
Complex Method,NetRumble,CollisionManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\CollisionManager.cs,Explode,Cyclomatic complexity of the method is 10
Complex Method,NetRumble,Ship,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Ship.cs,Update,Cyclomatic complexity of the method is 15
Complex Method,NetRumble,Ship,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Ship.cs,Die,Cyclomatic complexity of the method is 9
Complex Method,NetRumble,ShipInput,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\ShipInput.cs,ShipInput,Cyclomatic complexity of the method is 15
Complex Method,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,World,Cyclomatic complexity of the method is 8
Complex Method,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,GenerateWorld,Cyclomatic complexity of the method is 8
Complex Method,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,Update,Cyclomatic complexity of the method is 28
Complex Method,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,ProcessPackets,Cyclomatic complexity of the method is 17
Complex Method,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,Draw,Cyclomatic complexity of the method is 9
Complex Method,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,Cyclomatic complexity of the method is 14
Complex Method,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,Update,Cyclomatic complexity of the method is 8
Complex Method,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,Draw,Cyclomatic complexity of the method is 8
Complex Method,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Update,Cyclomatic complexity of the method is 17
Complex Method,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,HandleInput,Cyclomatic complexity of the method is 11
Complex Method,NetRumble,MainMenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\MainMenuScreen.cs,OnSelectEntry,Cyclomatic complexity of the method is 15
Long Parameter List,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,DrawFullscreenQuad,The method has 5 parameters. Parameters: texture' width' height' effect' currentBuffer
Long Parameter List,NetRumble,BloomSettings,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomSettings.cs,BloomSettings,The method has 7 parameters. Parameters: name' bloomThreshold' blurAmount' bloomIntensity' baseIntensity' bloomSaturation' baseSaturation
Long Parameter List,NetRumble,CollisionMath,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\CollisionMath.cs,LineLineIntersect,The method has 5 parameters. Parameters: a' b' c' d' point
Long Parameter List,NetRumble,CollisionMath,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\CollisionMath.cs,CircleLineCollide,The method has 5 parameters. Parameters: center' radius' lineStart' lineEnd' result
Long Parameter List,NetRumble,CollisionManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\CollisionManager.cs,Explode,The method has 6 parameters. Parameters: source' target' damageAmount' position' damageRadius' damageOwner
Long Parameter List,NetRumble,GameplayObject,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\GameplayObject.cs,Draw,The method has 5 parameters. Parameters: elapsedTime' spriteBatch' sprite' sourceRectangle' color
Long Parameter List,NetRumble,PowerUp,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\PowerUps\PowerUp.cs,Draw,The method has 5 parameters. Parameters: elapsedTime' spriteBatch' sprite' sourceRectangle' color
Long Parameter List,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The method has 5 parameters. Parameters: totalTime' networkGamer' position' spriteBatch' lobby
Long Identifier,NetRumble,Asteroid,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Asteroid.cs,,The length of the parameter velocityMassRatioToRotationScalar is 33.
Complex Conditional,NetRumble,CollisionMath,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\CollisionMath.cs,LineLineIntersect,The conditional expression  "r < 0 || r > 1 || s < 0 || s > 1"  is complex.
Complex Conditional,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,Update,The conditional expression  "(playerData != null) && (playerData.Ship != null) &&                                  !playerData.Ship.Active &&                                  (playerData.Ship.RespawnTimer <= 0f)"  is complex.
Complex Conditional,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,HandleInput,The conditional expression  "input.MenuCancel || (input.MenuSelect && pauseMenu &&                   (input.CurrentGamePadState.Buttons.A == ButtonState.Released))"  is complex.
Complex Conditional,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,Update,The conditional expression  "world.GameWon && String.IsNullOrEmpty(winnerString) &&                          (world.WinnerIndex >= 0) &&                          (world.WinnerIndex < networkSession.AllGamers.Count)"  is complex.
Complex Conditional,NetRumble,SearchResultsScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\SearchResultsScreen.cs,Update,The conditional expression  "!signedIntoLive &&                      ((sessionType == NetworkSessionType.PlayerMatch) ||                       (sessionType == NetworkSessionType.Ranked)) && !IsExiting"  is complex.
Empty Catch Block,NetRumble,AudioManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\AudioManager.cs,AudioManager,The method has an empty catch block.
Empty Catch Block,NetRumble,AudioManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\AudioManager.cs,PlaySoundEffect,The method has an empty catch block.
Empty Catch Block,NetRumble,MainMenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\MainMenuScreen.cs,JoinInvitedGame,The method has an empty catch block.
Magic Number,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,LoadContent,The following statement contains a magic number: width /= 2;
Magic Number,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,LoadContent,The following statement contains a magic number: height /= 2;
Magic Number,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,SetBlurEffectParameters,The following statement contains a magic number: sampleWeights[i * 2 + 1] = weight;
Magic Number,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,SetBlurEffectParameters,The following statement contains a magic number: sampleWeights[i * 2 + 2] = weight;
Magic Number,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,SetBlurEffectParameters,The following statement contains a magic number: sampleWeights[i * 2 + 2] = weight;
Magic Number,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,SetBlurEffectParameters,The following statement contains a magic number: totalWeights += weight * 2;
Magic Number,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,SetBlurEffectParameters,The following statement contains a magic number: float sampleOffset = i * 2 + 1.5f;
Magic Number,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,SetBlurEffectParameters,The following statement contains a magic number: float sampleOffset = i * 2 + 1.5f;
Magic Number,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,SetBlurEffectParameters,The following statement contains a magic number: sampleOffsets[i * 2 + 1] = delta;
Magic Number,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,SetBlurEffectParameters,The following statement contains a magic number: sampleOffsets[i * 2 + 2] = -delta;
Magic Number,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,SetBlurEffectParameters,The following statement contains a magic number: sampleOffsets[i * 2 + 2] = -delta;
Magic Number,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,SetBlurEffectParameters,The following statement contains a magic number: i < sampleCount / 2
Magic Number,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,ComputeGaussian,The following statement contains a magic number: return (float)((1.0 / Math.Sqrt(2 * Math.PI * theta)) *                             Math.Exp(-(n * n) / (2 * theta * theta)));
Magic Number,NetRumble,BloomComponent,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\BloomPostprocess\BloomComponent.cs,ComputeGaussian,The following statement contains a magic number: return (float)((1.0 / Math.Sqrt(2 * Math.PI * theta)) *                             Math.Exp(-(n * n) / (2 * theta * theta)));
Magic Number,NetRumble,CollisionManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\CollisionManager.cs,AdjustVelocities,The following statement contains a magic number: float velocityNormal1New = ((velocityNormal1 * (actor1.Mass - actor2.Mass))                  + (2f * actor2.Mass * velocityNormal2)) / (actor1.Mass + actor2.Mass);
Magic Number,NetRumble,CollisionManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\CollisionManager.cs,AdjustVelocities,The following statement contains a magic number: float velocityNormal2New = ((velocityNormal2 * (actor2.Mass - actor1.Mass))                  + (2f * actor1.Mass * velocityNormal1)) / (actor1.Mass + actor2.Mass);
Magic Number,NetRumble,CollisionManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\CollisionManager.cs,FindSpawnPoint,The following statement contains a magic number: (radius < 0f) || (radius > Dimensions.Width / 2)
Magic Number,NetRumble,GameplayObject,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\GameplayObject.cs,Draw,The following statement contains a magic number: spriteBatch.Draw(sprite' position' sourceRectangle' color' rotation'                       new Vector2(sprite.Width / 2f' sprite.Height / 2f)'                       2f * radius / MathHelper.Min(sprite.Width' sprite.Height)'                       SpriteEffects.None' 0f);
Magic Number,NetRumble,GameplayObject,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\GameplayObject.cs,Draw,The following statement contains a magic number: spriteBatch.Draw(sprite' position' sourceRectangle' color' rotation'                       new Vector2(sprite.Width / 2f' sprite.Height / 2f)'                       2f * radius / MathHelper.Min(sprite.Width' sprite.Height)'                       SpriteEffects.None' 0f);
Magic Number,NetRumble,GameplayObject,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\GameplayObject.cs,Draw,The following statement contains a magic number: spriteBatch.Draw(sprite' position' sourceRectangle' color' rotation'                       new Vector2(sprite.Width / 2f' sprite.Height / 2f)'                       2f * radius / MathHelper.Min(sprite.Width' sprite.Height)'                       SpriteEffects.None' 0f);
Magic Number,NetRumble,LaserProjectile,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Projectiles\LaserProjectile.cs,LaserProjectile,The following statement contains a magic number: this.radius = 4f;
Magic Number,NetRumble,LaserProjectile,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Projectiles\LaserProjectile.cs,LaserProjectile,The following statement contains a magic number: this.mass = 0.5f;
Magic Number,NetRumble,LaserProjectile,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Projectiles\LaserProjectile.cs,LaserProjectile,The following statement contains a magic number: this.duration = 5f;
Magic Number,NetRumble,LaserProjectile,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Projectiles\LaserProjectile.cs,LaserProjectile,The following statement contains a magic number: this.damageAmount = 20f;
Magic Number,NetRumble,MineProjectile,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Projectiles\MineProjectile.cs,MineProjectile,The following statement contains a magic number: this.radius = 10f;
Magic Number,NetRumble,MineProjectile,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Projectiles\MineProjectile.cs,MineProjectile,The following statement contains a magic number: this.mass = 5f;
Magic Number,NetRumble,MineProjectile,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Projectiles\MineProjectile.cs,MineProjectile,The following statement contains a magic number: this.duration = 15f;
Magic Number,NetRumble,MineProjectile,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Projectiles\MineProjectile.cs,MineProjectile,The following statement contains a magic number: this.damageAmount = 200f;
Magic Number,NetRumble,MineProjectile,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Projectiles\MineProjectile.cs,MineProjectile,The following statement contains a magic number: this.damageRadius = 80f;
Magic Number,NetRumble,RocketProjectile,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Projectiles\RocketProjectile.cs,RocketProjectile,The following statement contains a magic number: this.radius = 14f;
Magic Number,NetRumble,RocketProjectile,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Projectiles\RocketProjectile.cs,RocketProjectile,The following statement contains a magic number: this.mass = 10f;
Magic Number,NetRumble,RocketProjectile,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Projectiles\RocketProjectile.cs,RocketProjectile,The following statement contains a magic number: this.duration = 4f;
Magic Number,NetRumble,RocketProjectile,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Projectiles\RocketProjectile.cs,RocketProjectile,The following statement contains a magic number: this.damageAmount = 150f;
Magic Number,NetRumble,RocketProjectile,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Projectiles\RocketProjectile.cs,RocketProjectile,The following statement contains a magic number: this.damageRadius = 128f;
Magic Number,NetRumble,Ship,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Ship.cs,Ship,The following statement contains a magic number: this.radius = 24f;
Magic Number,NetRumble,Ship,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Ship.cs,Ship,The following statement contains a magic number: this.mass = 32f;
Magic Number,NetRumble,Ship,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Ship.cs,Update,The following statement contains a magic number: angleDiff > 0.001f
Magic Number,NetRumble,Ship,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Ship.cs,Update,The following statement contains a magic number: radius = (shield > 0f) ? 24f : 20f;
Magic Number,NetRumble,Ship,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Ship.cs,Update,The following statement contains a magic number: radius = (shield > 0f) ? 24f : 20f;
Magic Number,NetRumble,Ship,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Ship.cs,Damage,The following statement contains a magic number: shieldRechargeTimer = 2.5f;
Magic Number,NetRumble,ShipInput,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\ShipInput.cs,ShipInput,The following statement contains a magic number: MineFired = gamePadState.Triggers.Right >= 0.9f;
Magic Number,NetRumble,LaserWeapon,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Weapons\LaserWeapon.cs,LaserWeapon,The following statement contains a magic number: fireDelay = 0.15f;
Magic Number,NetRumble,LaserWeapon,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Weapons\LaserWeapon.cs,LaserWeapon,The following statement contains a magic number: switch (RandomMath.Random.Next(3))              {                  case 0:                      fireSoundEffect = "fire_laser1";                      break;                  case 1:                      fireSoundEffect = "fire_laser2";                      break;                  case 2:                      fireSoundEffect = "fire_laser3";                      break;              }
Magic Number,NetRumble,LaserWeapon,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Weapons\LaserWeapon.cs,LaserWeapon,The following statement contains a magic number: switch (RandomMath.Random.Next(3))              {                  case 0:                      fireSoundEffect = "fire_laser1";                      break;                  case 1:                      fireSoundEffect = "fire_laser2";                      break;                  case 2:                      fireSoundEffect = "fire_laser3";                      break;              }
Magic Number,NetRumble,MineWeapon,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Weapons\MineWeapon.cs,MineWeapon,The following statement contains a magic number: fireDelay = 2f;
Magic Number,NetRumble,RocketWeapon,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Weapons\RocketWeapon.cs,RocketWeapon,The following statement contains a magic number: fireDelay = 0.5f;
Magic Number,NetRumble,RocketWeapon,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Weapons\RocketWeapon.cs,RocketWeapon,The following statement contains a magic number: RandomMath.Random.Next(2) == 0
Magic Number,NetRumble,TripleLaserWeapon,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Weapons\TripleLaserWeapon.cs,TripleLaserWeapon,The following statement contains a magic number: fireDelay = 0.3f;
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,World,The following statement contains a magic number: particleEffectManager.RegisterParticleEffect(                  ParticleEffectType.LaserExplosion'                  "Particles/laserExplosion.xml"' 40);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,World,The following statement contains a magic number: particleEffectManager.RegisterParticleEffect(                  ParticleEffectType.MineExplosion'                   "Particles/mineExplosion.xml"' 8);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,World,The following statement contains a magic number: particleEffectManager.RegisterParticleEffect(                  ParticleEffectType.RocketExplosion'                   "Particles/rocketExplosion.xml"' 24);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,World,The following statement contains a magic number: particleEffectManager.RegisterParticleEffect(                  ParticleEffectType.RocketTrail'                   "Particles/rocketTrail.xml"' 16);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,World,The following statement contains a magic number: particleEffectManager.RegisterParticleEffect(                  ParticleEffectType.ShipExplosion'                   "Particles/shipExplosion.xml"' 4);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,World,The following statement contains a magic number: particleEffectManager.RegisterParticleEffect(                  ParticleEffectType.ShipSpawn'                   "Particles/shipSpawn.xml"' 4);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,GenerateWorld,The following statement contains a magic number: position = playerData.Ship.Position =                                  CollisionManager.FindSpawnPoint(playerData.Ship'                                  playerData.Ship.Radius * 5f);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,GenerateWorld,The following statement contains a magic number: float radius = 32f;
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,GenerateWorld,The following statement contains a magic number: switch (RandomMath.Random.Next(3))                      {                          case 0:                              radius = 32f;                              break;                          case 1:                              radius = 60f;                              break;                          case 2:                              radius = 96f;                              break;                      }
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,GenerateWorld,The following statement contains a magic number: switch (RandomMath.Random.Next(3))                      {                          case 0:                              radius = 32f;                              break;                          case 1:                              radius = 60f;                              break;                          case 2:                              radius = 96f;                              break;                      }
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,GenerateWorld,The following statement contains a magic number: switch (RandomMath.Random.Next(3))                      {                          case 0:                              radius = 32f;                              break;                          case 1:                              radius = 60f;                              break;                          case 2:                              radius = 96f;                              break;                      }
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,GenerateWorld,The following statement contains a magic number: switch (RandomMath.Random.Next(3))                      {                          case 0:                              radius = 32f;                              break;                          case 1:                              radius = 60f;                              break;                          case 2:                              radius = 96f;                              break;                      }
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,GenerateWorld,The following statement contains a magic number: switch (RandomMath.Random.Next(3))                      {                          case 0:                              radius = 32f;                              break;                          case 1:                              radius = 60f;                              break;                          case 2:                              radius = 96f;                              break;                      }
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,SpawnPowerup,The following statement contains a magic number: switch (whichPowerUp)                  {                      case 0:                          powerUp = new DoubleLaserPowerUp();                          break;                      case 1:                          powerUp = new TripleLaserPowerUp();                          break;                      case 2:                          powerUp = new RocketPowerUp();                          break;                  }
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: playerStringScale = 1f + 0.08f * (1f + (float)Math.Sin(totalTime * 4f));
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: playerStringScale = 1f + 0.08f * (1f + (float)Math.Sin(totalTime * 4f));
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: spriteBatch.DrawString(playerFont' playerString' playerStringPosition'                  playerColor' 0f'                   new Vector2(playerStringSize.X / 2f' playerStringSize.Y / 2f)'                   playerStringScale' SpriteEffects.None' 0f);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: spriteBatch.DrawString(playerFont' playerString' playerStringPosition'                  playerColor' 0f'                   new Vector2(playerStringSize.X / 2f' playerStringSize.Y / 2f)'                   playerStringScale' SpriteEffects.None' 0f);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: float chatTextureScale = 0.9f * playerStringSize.Y /                       (float)chatTexture.Height;
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: Vector2 chatTexturePosition = new Vector2(playerStringPosition.X -                       1.2f * playerStringSize.X / 2f -                      1.1f * chatTextureScale * (float)chatTexture.Width / 2f'                      playerStringPosition.Y);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: Vector2 chatTexturePosition = new Vector2(playerStringPosition.X -                       1.2f * playerStringSize.X / 2f -                      1.1f * chatTextureScale * (float)chatTexture.Width / 2f'                      playerStringPosition.Y);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: Vector2 chatTexturePosition = new Vector2(playerStringPosition.X -                       1.2f * playerStringSize.X / 2f -                      1.1f * chatTextureScale * (float)chatTexture.Width / 2f'                      playerStringPosition.Y);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: Vector2 chatTexturePosition = new Vector2(playerStringPosition.X -                       1.2f * playerStringSize.X / 2f -                      1.1f * chatTextureScale * (float)chatTexture.Width / 2f'                      playerStringPosition.Y);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: spriteBatch.Draw(chatTexture' chatTexturePosition' null'                      Color.White' 0f' new Vector2((float)chatTexture.Width / 2f'                       (float)chatTexture.Height / 2f)' chatTextureScale'                       SpriteEffects.None' 0f);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: spriteBatch.Draw(chatTexture' chatTexturePosition' null'                      Color.White' 0f' new Vector2((float)chatTexture.Width / 2f'                       (float)chatTexture.Height / 2f)' chatTextureScale'                       SpriteEffects.None' 0f);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: playerData.Ship.Radius = 0.6f * (float)playerStringSize.Y;
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: playerData.Ship.Position = new Vector2(playerStringPosition.X +                          1.2f * playerStringSize.X / 2f + 1.1f * playerData.Ship.Radius'                          playerStringPosition.Y);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: playerData.Ship.Position = new Vector2(playerStringPosition.X +                          1.2f * playerStringSize.X / 2f + 1.1f * playerData.Ship.Radius'                          playerStringPosition.Y);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: playerData.Ship.Position = new Vector2(playerStringPosition.X +                          1.2f * playerStringSize.X / 2f + 1.1f * playerData.Ship.Radius'                          playerStringPosition.Y);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: float readyTextureScale = 0.9f * playerStringSize.Y /                           (float)readyTexture.Height;
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: Vector2 readyTexturePosition = new Vector2(playerStringPosition.X +                          1.2f * playerStringSize.X / 2f +                           2.2f * playerData.Ship.Radius +                           1.1f * readyTextureScale * (float)readyTexture.Width / 2f'                          playerStringPosition.Y);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: Vector2 readyTexturePosition = new Vector2(playerStringPosition.X +                          1.2f * playerStringSize.X / 2f +                           2.2f * playerData.Ship.Radius +                           1.1f * readyTextureScale * (float)readyTexture.Width / 2f'                          playerStringPosition.Y);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: Vector2 readyTexturePosition = new Vector2(playerStringPosition.X +                          1.2f * playerStringSize.X / 2f +                           2.2f * playerData.Ship.Radius +                           1.1f * readyTextureScale * (float)readyTexture.Width / 2f'                          playerStringPosition.Y);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: Vector2 readyTexturePosition = new Vector2(playerStringPosition.X +                          1.2f * playerStringSize.X / 2f +                           2.2f * playerData.Ship.Radius +                           1.1f * readyTextureScale * (float)readyTexture.Width / 2f'                          playerStringPosition.Y);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: Vector2 readyTexturePosition = new Vector2(playerStringPosition.X +                          1.2f * playerStringSize.X / 2f +                           2.2f * playerData.Ship.Radius +                           1.1f * readyTextureScale * (float)readyTexture.Width / 2f'                          playerStringPosition.Y);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: spriteBatch.Draw(readyTexture' readyTexturePosition' null'                          Color.White' 0f' new Vector2((float)readyTexture.Width / 2f'                           (float)readyTexture.Height / 2f)' readyTextureScale'                          SpriteEffects.None' 0f);
Magic Number,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,DrawPlayerData,The following statement contains a magic number: spriteBatch.Draw(readyTexture' readyTexturePosition' null'                          Color.White' 0f' new Vector2((float)readyTexture.Width / 2f'                           (float)readyTexture.Height / 2f)' readyTextureScale'                          SpriteEffects.None' 0f);
Magic Number,NetRumble,NetRumbleGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\NetRumbleGame.cs,NetRumbleGame,The following statement contains a magic number: graphics.PreferredBackBufferWidth = 1280;
Magic Number,NetRumble,NetRumbleGame,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\NetRumbleGame.cs,NetRumbleGame,The following statement contains a magic number: graphics.PreferredBackBufferHeight = 720;
Magic Number,NetRumble,ParticleSystem,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Rendering\Particles\ParticleSystem.cs,Initialize,The following statement contains a magic number: textureOrigin = new Vector2(texture.Width / 2f' texture.Height / 2f);
Magic Number,NetRumble,ParticleSystem,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Rendering\Particles\ParticleSystem.cs,Initialize,The following statement contains a magic number: textureOrigin = new Vector2(texture.Width / 2f' texture.Height / 2f);
Magic Number,NetRumble,LoadingScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\LoadingScreen.cs,LoadingScreen,The following statement contains a magic number: TransitionOnTime = TimeSpan.FromSeconds(0.5);
Magic Number,NetRumble,LoadingScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\LoadingScreen.cs,Draw,The following statement contains a magic number: Vector2 textPosition = (viewportSize - textSize) / 2;
Magic Number,NetRumble,LoadingScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\LoadingScreen.cs,Draw,The following statement contains a magic number: Color color = new Color(255' 255' 255' TransitionAlpha);
Magic Number,NetRumble,LoadingScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\LoadingScreen.cs,Draw,The following statement contains a magic number: Color color = new Color(255' 255' 255' TransitionAlpha);
Magic Number,NetRumble,LoadingScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\LoadingScreen.cs,Draw,The following statement contains a magic number: Color color = new Color(255' 255' 255' TransitionAlpha);
Magic Number,NetRumble,MenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: Vector2 position = new Vector2(0f' viewportSize.Y * 0.65f);
Magic Number,NetRumble,MenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: float transitionOffset = (float)Math.Pow(TransitionPosition' 2);
Magic Number,NetRumble,MenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: position.Y += transitionOffset * 256;
Magic Number,NetRumble,MenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: float pulsate = (float)Math.Sin(time * 6f) + 1f;
Magic Number,NetRumble,MenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: scale += pulsate * 0.05f;
Magic Number,NetRumble,MenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: Vector2 origin = new Vector2(0' ScreenManager.Font.LineSpacing / 2);
Magic Number,NetRumble,MenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: position.X = viewportSize.X / 2f - size.X / 2f * scale;
Magic Number,NetRumble,MenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MenuScreen.cs,Draw,The following statement contains a magic number: position.X = viewportSize.X / 2f - size.X / 2f * scale;
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,MessageBoxScreen,The following statement contains a magic number: TransitionOnTime = TimeSpan.FromSeconds(0.25);
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,MessageBoxScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds(0.25);
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: ScreenManager.FadeBackBufferToBlack(TransitionAlpha * 2 / 3);
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: ScreenManager.FadeBackBufferToBlack(TransitionAlpha * 2 / 3);
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: Vector2 textPosition = (viewportSize - textSize) / 2;
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: Vector2 usageTextPosition = (viewportSize - usageTextSize) / 2;
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: usageTextPosition.Y = textPosition.Y +                   ScreenManager.Font.LineSpacing * 1.1f;
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: Color color = new Color(255' 255' 255' TransitionAlpha);
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: Color color = new Color(255' 255' 255' TransitionAlpha);
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: Color color = new Color(255' 255' 255' TransitionAlpha);
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: Rectangle rect = new Rectangle(                  (int)(Math.Min(usageTextPosition.X' textPosition.X))'                  (int)(textPosition.Y)'                  (int)(Math.Max(usageTextSize.X' textSize.X))'                  (int)(ScreenManager.Font.LineSpacing * 1.1f+ usageTextSize.Y)                  );
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: rect.X -= (int)(0.1f * rect.Width);
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: rect.Y -= (int)(0.1f * rect.Height);
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: rect.Width += (int)(0.2f * rect.Width);
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: rect.Height += (int)(0.2f * rect.Height);
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: Rectangle rect2 = new Rectangle(rect.X - 1' rect.Y - 1'                   rect.Width + 2' rect.Height + 2);
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: Rectangle rect2 = new Rectangle(rect.X - 1' rect.Y - 1'                   rect.Width + 2' rect.Height + 2);
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: ScreenManager.DrawRectangle(rect2' new Color(128' 128' 128'                   (byte)(192.0f * (float)TransitionAlpha / 255.0f)));
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: ScreenManager.DrawRectangle(rect2' new Color(128' 128' 128'                   (byte)(192.0f * (float)TransitionAlpha / 255.0f)));
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: ScreenManager.DrawRectangle(rect2' new Color(128' 128' 128'                   (byte)(192.0f * (float)TransitionAlpha / 255.0f)));
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: ScreenManager.DrawRectangle(rect2' new Color(128' 128' 128'                   (byte)(192.0f * (float)TransitionAlpha / 255.0f)));
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: ScreenManager.DrawRectangle(rect2' new Color(128' 128' 128'                   (byte)(192.0f * (float)TransitionAlpha / 255.0f)));
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: ScreenManager.DrawRectangle(rect' new Color(0' 0' 0'                   (byte)(232.0f * (float)TransitionAlpha / 255.0f)));
Magic Number,NetRumble,MessageBoxScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\MessageBoxScreen.cs,Draw,The following statement contains a magic number: ScreenManager.DrawRectangle(rect' new Color(0' 0' 0'                   (byte)(232.0f * (float)TransitionAlpha / 255.0f)));
Magic Number,NetRumble,ScreenManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\ScreenManager.cs,LoadContent,The following statement contains a magic number: titleSafeArea = new Rectangle(                  (int)Math.Floor(GraphicsDevice.Viewport.X +                      GraphicsDevice.Viewport.Width * 0.05f)'                  (int)Math.Floor(GraphicsDevice.Viewport.Y +                      GraphicsDevice.Viewport.Height * 0.05f)'                   (int)Math.Floor(GraphicsDevice.Viewport.Width * 0.9f)'                   (int)Math.Floor(GraphicsDevice.Viewport.Height * 0.9f));
Magic Number,NetRumble,ScreenManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\ScreenManager.cs,LoadContent,The following statement contains a magic number: titleSafeArea = new Rectangle(                  (int)Math.Floor(GraphicsDevice.Viewport.X +                      GraphicsDevice.Viewport.Width * 0.05f)'                  (int)Math.Floor(GraphicsDevice.Viewport.Y +                      GraphicsDevice.Viewport.Height * 0.05f)'                   (int)Math.Floor(GraphicsDevice.Viewport.Width * 0.9f)'                   (int)Math.Floor(GraphicsDevice.Viewport.Height * 0.9f));
Magic Number,NetRumble,ScreenManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\ScreenManager.cs,LoadContent,The following statement contains a magic number: titleSafeArea = new Rectangle(                  (int)Math.Floor(GraphicsDevice.Viewport.X +                      GraphicsDevice.Viewport.Width * 0.05f)'                  (int)Math.Floor(GraphicsDevice.Viewport.Y +                      GraphicsDevice.Viewport.Height * 0.05f)'                   (int)Math.Floor(GraphicsDevice.Viewport.Width * 0.9f)'                   (int)Math.Floor(GraphicsDevice.Viewport.Height * 0.9f));
Magic Number,NetRumble,ScreenManager,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\ScreenManager\ScreenManager.cs,LoadContent,The following statement contains a magic number: titleSafeArea = new Rectangle(                  (int)Math.Floor(GraphicsDevice.Viewport.X +                      GraphicsDevice.Viewport.Width * 0.05f)'                  (int)Math.Floor(GraphicsDevice.Viewport.Y +                      GraphicsDevice.Viewport.Height * 0.05f)'                   (int)Math.Floor(GraphicsDevice.Viewport.Width * 0.9f)'                   (int)Math.Floor(GraphicsDevice.Viewport.Height * 0.9f));
Magic Number,NetRumble,BackgroundScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\BackgroundScreen.cs,Draw,The following statement contains a magic number: Vector2 titlePosition = new Vector2(                      ScreenManager.TitleSafeArea.X +                         (ScreenManager.TitleSafeArea.Width - titleTexture.Width) / 2f'                      ScreenManager.TitleSafeArea.Y +                         ScreenManager.TitleSafeArea.Height * 0.05f);
Magic Number,NetRumble,BackgroundScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\BackgroundScreen.cs,Draw,The following statement contains a magic number: Vector2 titlePosition = new Vector2(                      ScreenManager.TitleSafeArea.X +                         (ScreenManager.TitleSafeArea.Width - titleTexture.Width) / 2f'                      ScreenManager.TitleSafeArea.Y +                         ScreenManager.TitleSafeArea.Height * 0.05f);
Magic Number,NetRumble,BackgroundScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\BackgroundScreen.cs,Draw,The following statement contains a magic number: titlePosition.Y -= (float)Math.Pow(TransitionPosition' 2) *                       titlePosition.Y;
Magic Number,NetRumble,BackgroundScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\BackgroundScreen.cs,Draw,The following statement contains a magic number: ScreenManager.SpriteBatch.Draw(titleTexture' titlePosition'                      new Color(255' 255' 255' TransitionAlpha));
Magic Number,NetRumble,BackgroundScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\BackgroundScreen.cs,Draw,The following statement contains a magic number: ScreenManager.SpriteBatch.Draw(titleTexture' titlePosition'                      new Color(255' 255' 255' TransitionAlpha));
Magic Number,NetRumble,BackgroundScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\BackgroundScreen.cs,Draw,The following statement contains a magic number: ScreenManager.SpriteBatch.Draw(titleTexture' titlePosition'                      new Color(255' 255' 255' TransitionAlpha));
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,Draw,The following statement contains a magic number: Vector2 center = new Vector2(                          localShip.Position.X + ScreenManager.GraphicsDevice.Viewport.X -                             ScreenManager.GraphicsDevice.Viewport.Width / 2'                          localShip.Position.Y + ScreenManager.GraphicsDevice.Viewport.Y -                             ScreenManager.GraphicsDevice.Viewport.Height / 2);
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,Draw,The following statement contains a magic number: Vector2 center = new Vector2(                          localShip.Position.X + ScreenManager.GraphicsDevice.Viewport.X -                             ScreenManager.GraphicsDevice.Viewport.Width / 2'                          localShip.Position.Y + ScreenManager.GraphicsDevice.Viewport.Y -                             ScreenManager.GraphicsDevice.Viewport.Height / 2);
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,Draw,The following statement contains a magic number: ScreenManager.FadeBackBufferToBlack(255 - TransitionAlpha);
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: Vector2 position = new Vector2(                      ScreenManager.GraphicsDevice.Viewport.Width * 0.2f'                       ScreenManager.GraphicsDevice.Viewport.Height * 0.1f);
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: Vector2 position = new Vector2(                      ScreenManager.GraphicsDevice.Viewport.Width * 0.2f'                       ScreenManager.GraphicsDevice.Viewport.Height * 0.1f);
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: position.X += ScreenManager.GraphicsDevice.Viewport.Width * 0.2f;
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: i < Math.Min(4' networkSession.AllGamers.Count)
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: position = new Vector2(                      ScreenManager.GraphicsDevice.Viewport.Width * 0.2f'                      ScreenManager.GraphicsDevice.Viewport.Height * 0.9f);
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: position = new Vector2(                      ScreenManager.GraphicsDevice.Viewport.Width * 0.2f'                      ScreenManager.GraphicsDevice.Viewport.Height * 0.9f);
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: position.X += ScreenManager.GraphicsDevice.Viewport.Width * 0.2f;
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: i < Math.Min(8' networkSession.AllGamers.Count)
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: position = new Vector2(                      ScreenManager.GraphicsDevice.Viewport.Width * 0.13f'                       ScreenManager.GraphicsDevice.Viewport.Height * 0.2f);
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: position = new Vector2(                      ScreenManager.GraphicsDevice.Viewport.Width * 0.13f'                       ScreenManager.GraphicsDevice.Viewport.Height * 0.2f);
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: position.Y += ScreenManager.GraphicsDevice.Viewport.Height * 0.2f;
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: i < Math.Min(12' networkSession.AllGamers.Count)
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: position = new Vector2(                      ScreenManager.GraphicsDevice.Viewport.Width * 0.9f'                       ScreenManager.GraphicsDevice.Viewport.Height * 0.2f);
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: position = new Vector2(                      ScreenManager.GraphicsDevice.Viewport.Width * 0.9f'                       ScreenManager.GraphicsDevice.Viewport.Height * 0.2f);
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: position.Y += ScreenManager.GraphicsDevice.Viewport.Height * 0.2f;
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: i < Math.Min(16' networkSession.AllGamers.Count)
Magic Number,NetRumble,GameplayScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\GameplayScreen.cs,DrawHud,The following statement contains a magic number: ScreenManager.SpriteBatch.DrawString(world.PlayerFont' winnerString'                          winnerStringPosition' Color.White' 0f' Vector2.Zero' 1.3f'                           SpriteEffects.None' 0f);
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,HandleInput,The following statement contains a magic number: playerData.ShipVariation =                               (byte)((playerData.ShipVariation + 1) % 4);
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Draw,The following statement contains a magic number: Vector2[] columnPositions = new Vector2[4];
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Draw,The following statement contains a magic number: columnPositions[0] = new Vector2(                  ScreenManager.GraphicsDevice.Viewport.Width * 0.2f'                   ScreenManager.GraphicsDevice.Viewport.Height * 0.70f);
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Draw,The following statement contains a magic number: columnPositions[0] = new Vector2(                  ScreenManager.GraphicsDevice.Viewport.Width * 0.2f'                   ScreenManager.GraphicsDevice.Viewport.Height * 0.70f);
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Draw,The following statement contains a magic number: columnPositions[1] = new Vector2(                  ScreenManager.GraphicsDevice.Viewport.Width * 0.4f'                   ScreenManager.GraphicsDevice.Viewport.Height * 0.70f);
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Draw,The following statement contains a magic number: columnPositions[1] = new Vector2(                  ScreenManager.GraphicsDevice.Viewport.Width * 0.4f'                   ScreenManager.GraphicsDevice.Viewport.Height * 0.70f);
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Draw,The following statement contains a magic number: columnPositions[2] = new Vector2(                  ScreenManager.GraphicsDevice.Viewport.Width * 0.6f'                  ScreenManager.GraphicsDevice.Viewport.Height * 0.70f);
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Draw,The following statement contains a magic number: columnPositions[2] = new Vector2(                  ScreenManager.GraphicsDevice.Viewport.Width * 0.6f'                  ScreenManager.GraphicsDevice.Viewport.Height * 0.70f);
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Draw,The following statement contains a magic number: columnPositions[2] = new Vector2(                  ScreenManager.GraphicsDevice.Viewport.Width * 0.6f'                  ScreenManager.GraphicsDevice.Viewport.Height * 0.70f);
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Draw,The following statement contains a magic number: columnPositions[3] = new Vector2(                  ScreenManager.GraphicsDevice.Viewport.Width * 0.8f'                   ScreenManager.GraphicsDevice.Viewport.Height * 0.70f);
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Draw,The following statement contains a magic number: columnPositions[3] = new Vector2(                  ScreenManager.GraphicsDevice.Viewport.Width * 0.8f'                   ScreenManager.GraphicsDevice.Viewport.Height * 0.70f);
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Draw,The following statement contains a magic number: columnPositions[3] = new Vector2(                  ScreenManager.GraphicsDevice.Viewport.Width * 0.8f'                   ScreenManager.GraphicsDevice.Viewport.Height * 0.70f);
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Draw,The following statement contains a magic number: world.DrawPlayerData((float)gameTime.TotalGameTime.TotalSeconds'                           networkSession.AllGamers[i]' columnPositions[i % 4]'                           ScreenManager.SpriteBatch' true);
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Draw,The following statement contains a magic number: columnPositions[i % 4].Y +=                           ScreenManager.GraphicsDevice.Viewport.Height * 0.03f;
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,Draw,The following statement contains a magic number: columnPositions[i % 4].Y +=                           ScreenManager.GraphicsDevice.Viewport.Height * 0.03f;
Magic Number,NetRumble,LobbyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\LobbyScreen.cs,networkSession_GamerJoined,The following statement contains a magic number: playerData.ShipVariation = (byte)(i % 4);
Magic Number,NetRumble,MainMenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\MainMenuScreen.cs,OnSelectEntry,The following statement contains a magic number: switch (state)              {                  case MainMenuState.SignedInLive:                      {                          switch (entryIndex)                          {                              case 0: // Quick Match                                  QuickMatchSession();                                  break;                                case 1: // Create Xbox LIVE Session                                  CreateSession(NetworkSessionType.PlayerMatch);                                  break;                                case 2: // Join Xbox LIVE Session                                  FindSession(NetworkSessionType.PlayerMatch);                                  break;                                case 3: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 4: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 5: // Exit or Unlock Full Game (depending on trialMode flag)                                  if (trialMode)                                      ShowOffer();                                  else if (ScreenManager.invited != null)                                      JoinInvitedGame();                                  else                                      OnCancel();                                  break;                                case 6: // Exit                                  OnCancel();                                  break;                          }                          break;                      }                  case MainMenuState.SignedInLocal:                      {                          switch (entryIndex)                          {                              case 0: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 1: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 2: // Exit                                  OnCancel();                                  break;                          }                          break;                      }                  case MainMenuState.SignedOut:                      {                          switch (entryIndex)                          {                              case 0: // Sign In                                  if (!Guide.IsVisible)                                  {                                      Guide.ShowSignIn(1' false);                                  }                                  break;                                case 1: // Exit                                  OnCancel();                                  break;                          }                          break;                      }              }
Magic Number,NetRumble,MainMenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\MainMenuScreen.cs,OnSelectEntry,The following statement contains a magic number: switch (state)              {                  case MainMenuState.SignedInLive:                      {                          switch (entryIndex)                          {                              case 0: // Quick Match                                  QuickMatchSession();                                  break;                                case 1: // Create Xbox LIVE Session                                  CreateSession(NetworkSessionType.PlayerMatch);                                  break;                                case 2: // Join Xbox LIVE Session                                  FindSession(NetworkSessionType.PlayerMatch);                                  break;                                case 3: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 4: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 5: // Exit or Unlock Full Game (depending on trialMode flag)                                  if (trialMode)                                      ShowOffer();                                  else if (ScreenManager.invited != null)                                      JoinInvitedGame();                                  else                                      OnCancel();                                  break;                                case 6: // Exit                                  OnCancel();                                  break;                          }                          break;                      }                  case MainMenuState.SignedInLocal:                      {                          switch (entryIndex)                          {                              case 0: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 1: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 2: // Exit                                  OnCancel();                                  break;                          }                          break;                      }                  case MainMenuState.SignedOut:                      {                          switch (entryIndex)                          {                              case 0: // Sign In                                  if (!Guide.IsVisible)                                  {                                      Guide.ShowSignIn(1' false);                                  }                                  break;                                case 1: // Exit                                  OnCancel();                                  break;                          }                          break;                      }              }
Magic Number,NetRumble,MainMenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\MainMenuScreen.cs,OnSelectEntry,The following statement contains a magic number: switch (state)              {                  case MainMenuState.SignedInLive:                      {                          switch (entryIndex)                          {                              case 0: // Quick Match                                  QuickMatchSession();                                  break;                                case 1: // Create Xbox LIVE Session                                  CreateSession(NetworkSessionType.PlayerMatch);                                  break;                                case 2: // Join Xbox LIVE Session                                  FindSession(NetworkSessionType.PlayerMatch);                                  break;                                case 3: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 4: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 5: // Exit or Unlock Full Game (depending on trialMode flag)                                  if (trialMode)                                      ShowOffer();                                  else if (ScreenManager.invited != null)                                      JoinInvitedGame();                                  else                                      OnCancel();                                  break;                                case 6: // Exit                                  OnCancel();                                  break;                          }                          break;                      }                  case MainMenuState.SignedInLocal:                      {                          switch (entryIndex)                          {                              case 0: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 1: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 2: // Exit                                  OnCancel();                                  break;                          }                          break;                      }                  case MainMenuState.SignedOut:                      {                          switch (entryIndex)                          {                              case 0: // Sign In                                  if (!Guide.IsVisible)                                  {                                      Guide.ShowSignIn(1' false);                                  }                                  break;                                case 1: // Exit                                  OnCancel();                                  break;                          }                          break;                      }              }
Magic Number,NetRumble,MainMenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\MainMenuScreen.cs,OnSelectEntry,The following statement contains a magic number: switch (state)              {                  case MainMenuState.SignedInLive:                      {                          switch (entryIndex)                          {                              case 0: // Quick Match                                  QuickMatchSession();                                  break;                                case 1: // Create Xbox LIVE Session                                  CreateSession(NetworkSessionType.PlayerMatch);                                  break;                                case 2: // Join Xbox LIVE Session                                  FindSession(NetworkSessionType.PlayerMatch);                                  break;                                case 3: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 4: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 5: // Exit or Unlock Full Game (depending on trialMode flag)                                  if (trialMode)                                      ShowOffer();                                  else if (ScreenManager.invited != null)                                      JoinInvitedGame();                                  else                                      OnCancel();                                  break;                                case 6: // Exit                                  OnCancel();                                  break;                          }                          break;                      }                  case MainMenuState.SignedInLocal:                      {                          switch (entryIndex)                          {                              case 0: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 1: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 2: // Exit                                  OnCancel();                                  break;                          }                          break;                      }                  case MainMenuState.SignedOut:                      {                          switch (entryIndex)                          {                              case 0: // Sign In                                  if (!Guide.IsVisible)                                  {                                      Guide.ShowSignIn(1' false);                                  }                                  break;                                case 1: // Exit                                  OnCancel();                                  break;                          }                          break;                      }              }
Magic Number,NetRumble,MainMenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\MainMenuScreen.cs,OnSelectEntry,The following statement contains a magic number: switch (state)              {                  case MainMenuState.SignedInLive:                      {                          switch (entryIndex)                          {                              case 0: // Quick Match                                  QuickMatchSession();                                  break;                                case 1: // Create Xbox LIVE Session                                  CreateSession(NetworkSessionType.PlayerMatch);                                  break;                                case 2: // Join Xbox LIVE Session                                  FindSession(NetworkSessionType.PlayerMatch);                                  break;                                case 3: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 4: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 5: // Exit or Unlock Full Game (depending on trialMode flag)                                  if (trialMode)                                      ShowOffer();                                  else if (ScreenManager.invited != null)                                      JoinInvitedGame();                                  else                                      OnCancel();                                  break;                                case 6: // Exit                                  OnCancel();                                  break;                          }                          break;                      }                  case MainMenuState.SignedInLocal:                      {                          switch (entryIndex)                          {                              case 0: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 1: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 2: // Exit                                  OnCancel();                                  break;                          }                          break;                      }                  case MainMenuState.SignedOut:                      {                          switch (entryIndex)                          {                              case 0: // Sign In                                  if (!Guide.IsVisible)                                  {                                      Guide.ShowSignIn(1' false);                                  }                                  break;                                case 1: // Exit                                  OnCancel();                                  break;                          }                          break;                      }              }
Magic Number,NetRumble,MainMenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\MainMenuScreen.cs,OnSelectEntry,The following statement contains a magic number: switch (state)              {                  case MainMenuState.SignedInLive:                      {                          switch (entryIndex)                          {                              case 0: // Quick Match                                  QuickMatchSession();                                  break;                                case 1: // Create Xbox LIVE Session                                  CreateSession(NetworkSessionType.PlayerMatch);                                  break;                                case 2: // Join Xbox LIVE Session                                  FindSession(NetworkSessionType.PlayerMatch);                                  break;                                case 3: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 4: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 5: // Exit or Unlock Full Game (depending on trialMode flag)                                  if (trialMode)                                      ShowOffer();                                  else if (ScreenManager.invited != null)                                      JoinInvitedGame();                                  else                                      OnCancel();                                  break;                                case 6: // Exit                                  OnCancel();                                  break;                          }                          break;                      }                  case MainMenuState.SignedInLocal:                      {                          switch (entryIndex)                          {                              case 0: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 1: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 2: // Exit                                  OnCancel();                                  break;                          }                          break;                      }                  case MainMenuState.SignedOut:                      {                          switch (entryIndex)                          {                              case 0: // Sign In                                  if (!Guide.IsVisible)                                  {                                      Guide.ShowSignIn(1' false);                                  }                                  break;                                case 1: // Exit                                  OnCancel();                                  break;                          }                          break;                      }              }
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,NetworkBusyScreen,The following statement contains a magic number: TransitionOnTime = TimeSpan.FromSeconds(0.1);
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,NetworkBusyScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds(0.2);
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: const int hPad = 32;
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: const int vPad = 16;
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: Vector2 busyTextureOrigin = new Vector2(busyTexture.Width / 2'                   busyTexture.Height / 2);
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: Vector2 busyTextureOrigin = new Vector2(busyTexture.Width / 2'                   busyTexture.Height / 2);
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: Vector2 textPosition = (viewportSize - textSize) / 2;
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: Rectangle backgroundRectangle = new Rectangle((int)textPosition.X - hPad'                                                            (int)textPosition.Y - vPad'                                                            (int)textSize.X + hPad * 2'                                                            (int)textSize.Y + vPad * 2);
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: Rectangle backgroundRectangle = new Rectangle((int)textPosition.X - hPad'                                                            (int)textPosition.Y - vPad'                                                            (int)textSize.X + hPad * 2'                                                            (int)textSize.Y + vPad * 2);
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: Color color = new Color(255' 255' 255' TransitionAlpha);
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: Color color = new Color(255' 255' 255' TransitionAlpha);
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: Color color = new Color(255' 255' 255' TransitionAlpha);
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: Rectangle backgroundRectangle2 = new Rectangle(backgroundRectangle.X - 1'                   backgroundRectangle.Y - 1' backgroundRectangle.Width + 2'                   backgroundRectangle.Height + 2);
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: Rectangle backgroundRectangle2 = new Rectangle(backgroundRectangle.X - 1'                   backgroundRectangle.Y - 1' backgroundRectangle.Width + 2'                   backgroundRectangle.Height + 2);
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: ScreenManager.DrawRectangle(backgroundRectangle2' new Color(128' 128' 128'                  (byte)(192.0f * (float)TransitionAlpha / 255.0f)));
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: ScreenManager.DrawRectangle(backgroundRectangle2' new Color(128' 128' 128'                  (byte)(192.0f * (float)TransitionAlpha / 255.0f)));
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: ScreenManager.DrawRectangle(backgroundRectangle2' new Color(128' 128' 128'                  (byte)(192.0f * (float)TransitionAlpha / 255.0f)));
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: ScreenManager.DrawRectangle(backgroundRectangle2' new Color(128' 128' 128'                  (byte)(192.0f * (float)TransitionAlpha / 255.0f)));
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: ScreenManager.DrawRectangle(backgroundRectangle2' new Color(128' 128' 128'                  (byte)(192.0f * (float)TransitionAlpha / 255.0f)));
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: ScreenManager.DrawRectangle(backgroundRectangle' new Color(0' 0' 0'                  (byte)(232.0f * (float)TransitionAlpha / 255.0f)));
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: ScreenManager.DrawRectangle(backgroundRectangle' new Color(0' 0' 0'                  (byte)(232.0f * (float)TransitionAlpha / 255.0f)));
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: float busyTextureRotation = (float)gameTime.TotalGameTime.TotalSeconds * 3;
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: Vector2 busyTexturePosition = new Vector2(textPosition.X + textSize.X / 2'                  textPosition.Y + textSize.Y - busyTextureSize.Y / 2);
Magic Number,NetRumble,NetworkBusyScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\NetworkBusyScreen.cs,Draw,The following statement contains a magic number: Vector2 busyTexturePosition = new Vector2(textPosition.X + textSize.X / 2'                  textPosition.Y + textSize.Y - busyTextureSize.Y / 2);
Missing Default,NetRumble,LaserWeapon,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\Weapons\LaserWeapon.cs,LaserWeapon,The following switch statement is missing a default case: switch (RandomMath.Random.Next(3))              {                  case 0:                      fireSoundEffect = "fire_laser1";                      break;                  case 1:                      fireSoundEffect = "fire_laser2";                      break;                  case 2:                      fireSoundEffect = "fire_laser3";                      break;              }
Missing Default,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,GenerateWorld,The following switch statement is missing a default case: switch (RandomMath.Random.Next(3))                      {                          case 0:                              radius = 32f;                              break;                          case 1:                              radius = 60f;                              break;                          case 2:                              radius = 96f;                              break;                      }
Missing Default,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,ProcessPackets,The following switch statement is missing a default case: switch (packetType)                      {                          case PacketTypes.PlayerData:                              UpdatePlayerData(sender);                              break;                            case PacketTypes.WorldSetup:                              // apply the world setup data' but only once                              if (!Initialized)                              {                                  Initialize();                              }                              break;                                                        case PacketTypes.ShipData:                              if ((sender != null) && !sender.IsLocal)                              {                                  UpdateShipData(sender);                              }                              break;                            case PacketTypes.WorldData:                              if (!networkSession.IsHost && Initialized)                              {                                  UpdateWorldData();                              }                              break;                            case PacketTypes.ShipInput:                              if (sender != null)                              {                                  PlayerData playerData = sender.Tag as PlayerData;                                  if ((playerData != null) && (playerData.Ship != null))                                  {                                      playerData.Ship.ShipInput =                                           new ShipInput(packetReader);                                  }                              }                              break;                            case PacketTypes.ShipSpawn:                              SpawnShip();                              break;                            case PacketTypes.PowerUpSpawn:                              SpawnPowerup();                              break;                            case PacketTypes.ShipDeath:                              KillShip(sender);                              break;                            case PacketTypes.GameWon:                              gameWon = true;                              winnerIndex = packetReader.ReadInt32();                              if (networkSession.IsHost && (networkSession.SessionState ==                                  NetworkSessionState.Playing))                              {                                  networkSession.EndGame();                              }                              break;                      }
Missing Default,NetRumble,World,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Gameplay\World.cs,SpawnPowerup,The following switch statement is missing a default case: switch (whichPowerUp)                  {                      case 0:                          powerUp = new DoubleLaserPowerUp();                          break;                      case 1:                          powerUp = new TripleLaserPowerUp();                          break;                      case 2:                          powerUp = new RocketPowerUp();                          break;                  }
Missing Default,NetRumble,MainMenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\MainMenuScreen.cs,OnSelectEntry,The following switch statement is missing a default case: switch (state)              {                  case MainMenuState.SignedInLive:                      {                          switch (entryIndex)                          {                              case 0: // Quick Match                                  QuickMatchSession();                                  break;                                case 1: // Create Xbox LIVE Session                                  CreateSession(NetworkSessionType.PlayerMatch);                                  break;                                case 2: // Join Xbox LIVE Session                                  FindSession(NetworkSessionType.PlayerMatch);                                  break;                                case 3: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 4: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 5: // Exit or Unlock Full Game (depending on trialMode flag)                                  if (trialMode)                                      ShowOffer();                                  else if (ScreenManager.invited != null)                                      JoinInvitedGame();                                  else                                      OnCancel();                                  break;                                case 6: // Exit                                  OnCancel();                                  break;                          }                          break;                      }                  case MainMenuState.SignedInLocal:                      {                          switch (entryIndex)                          {                              case 0: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 1: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 2: // Exit                                  OnCancel();                                  break;                          }                          break;                      }                  case MainMenuState.SignedOut:                      {                          switch (entryIndex)                          {                              case 0: // Sign In                                  if (!Guide.IsVisible)                                  {                                      Guide.ShowSignIn(1' false);                                  }                                  break;                                case 1: // Exit                                  OnCancel();                                  break;                          }                          break;                      }              }
Missing Default,NetRumble,MainMenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\MainMenuScreen.cs,OnSelectEntry,The following switch statement is missing a default case: switch (entryIndex)                          {                              case 0: // Quick Match                                  QuickMatchSession();                                  break;                                case 1: // Create Xbox LIVE Session                                  CreateSession(NetworkSessionType.PlayerMatch);                                  break;                                case 2: // Join Xbox LIVE Session                                  FindSession(NetworkSessionType.PlayerMatch);                                  break;                                case 3: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 4: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 5: // Exit or Unlock Full Game (depending on trialMode flag)                                  if (trialMode)                                      ShowOffer();                                  else if (ScreenManager.invited != null)                                      JoinInvitedGame();                                  else                                      OnCancel();                                  break;                                case 6: // Exit                                  OnCancel();                                  break;                          }
Missing Default,NetRumble,MainMenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\MainMenuScreen.cs,OnSelectEntry,The following switch statement is missing a default case: switch (entryIndex)                          {                              case 0: // Create System Link Session                                  CreateSession(NetworkSessionType.SystemLink);                                  break;                                case 1: // Join System Link Session                                  FindSession(NetworkSessionType.SystemLink);                                  break;                                case 2: // Exit                                  OnCancel();                                  break;                          }
Missing Default,NetRumble,MainMenuScreen,D:\research\architectureSmells\repos\CartBlanche_MonoGame-Samples\NetRumble\Screens\MainMenuScreen.cs,OnSelectEntry,The following switch statement is missing a default case: switch (entryIndex)                          {                              case 0: // Sign In                                  if (!Guide.IsVisible)                                  {                                      Guide.ShowSignIn(1' false);                                  }                                  break;                                case 1: // Exit                                  OnCancel();                                  break;                          }
