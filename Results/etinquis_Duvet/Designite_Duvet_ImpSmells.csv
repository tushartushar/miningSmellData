Implementation smell,Namespace,Class,File,Method,Description
Long Method,Duvet,Program,C:\repos\etinquis_Duvet\Duvet\Program.cs,Main,The method has 116 lines of code.
Complex Method,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildContent,Cyclomatic complexity of the method is 13
Complex Method,Duvet.Output.HTML,TeamCityHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCityHtmlReport.cs,WriteTo,Cyclomatic complexity of the method is 18
Complex Method,Duvet.Output.HTML,TeamCitySourceFileHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCitySourceFileHtmlReport.cs,WriteTo,Cyclomatic complexity of the method is 13
Long Parameter List,Duvet.Generic,SourceFile,C:\repos\etinquis_Duvet\Duvet\Generic\SourceFile.cs,SourceFile,The method has 5 parameters.
Long Parameter List,Duvet.VSDotCoverage,SourceFile,C:\repos\etinquis_Duvet\Duvet\VSDotCoverage\SourceFile.cs,SourceFile,The method has 7 parameters.
Long Statement,Duvet,CoverageStatCoverter,C:\repos\etinquis_Duvet\Duvet\CoverageStatCoverter.cs,ParseStats,The length of the statement  "	else if (coverageStats.MethodsCovered == coverageStats.TotalMethods && coverageStats.ClassesCovered == coverageStats.TotalClasses && coverageStats.LinesCovered == coverageStats.TotalCoverableLines) { " is 199.
Long Statement,Duvet,Program,C:\repos\etinquis_Duvet\Duvet\Program.cs,Main,The length of the statement  "	//    foreach (CoverageDSPriv.LinesRow lineRow in summary.Lines.Where(line=>line.SourceFileID == row.SourceFileID).OrderBy(line=>line.LnStart)) " is 143.
Long Statement,Duvet,Program,C:\repos\etinquis_Duvet\Duvet\Program.cs,Main,The length of the statement  "	//            builder.AppendFormat("<i class=\"no-highlight\">{0}</i>&nbsp;{1}" + Environment.NewLine' currentLineNumber++' fileReader.ReadLine()); " is 147.
Long Statement,Duvet,Program,C:\repos\etinquis_Duvet\Duvet\Program.cs,Main,The length of the statement  "	//        builder.AppendFormat("<i class=\"no-highlight\">{0}</i>&nbsp;{1}" + Environment.NewLine' currentLineNumber++' fileReader.ReadLine()); " is 143.
Long Statement,Duvet,Program,C:\repos\etinquis_Duvet\Duvet\Program.cs,Main,The length of the statement  "	//    builder.AppendFormat("<script type=\"text/javascript\">{0}</script>"' "(function() {var codeBlock = document.getElementById('sourceCode');if (codeBlock) {hljs.highlightBlock(codeBlock);}})();"); " is 200.
Long Statement,Duvet,Program,C:\repos\etinquis_Duvet\Duvet\Program.cs,Main,The length of the statement  "	//    StreamWriter writer = new StreamWriter(Path.Combine(htmlRoot.FullName' new FileInfo(fileRow.SourceFileName).Name + ".html")); " is 131.
Long Statement,Duvet,Program,C:\repos\etinquis_Duvet\Duvet\Program.cs,Main,The length of the statement  "		float coverage = (methodRow.LinesCovered + methodRow.LinesPartiallyCovered) / (methodRow.LinesCovered + methodRow.LinesPartiallyCovered + (float)methodRow.LinesNotCovered); " is 172.
Long Statement,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	builder.Append ("<tr><th class=\"name\">Assembly</th><th class=\"coverageStat\">Class' %</th><th class=\"coverageStat\">Method' %</th><th class=\"coverageStat\">Lines' %</th></tr>"); " is 182.
Long Statement,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	//                                  : (100 * _namespace.CoverageStats.ClassesCovered / (float)_namespace.CoverageStats.TotalClasses).ToString( " is 142.
Long Statement,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	//                                   : (100 * _namespace.CoverageStats.MethodsCovered / (float)_namespace.CoverageStats.TotalMethods).ToString( " is 143.
Long Statement,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	//                                       CultureInfo.InvariantCulture)' _namespace.CoverageStats.MethodsCovered' _namespace.CoverageStats.TotalMethods); " is 152.
Long Statement,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	//                                 : (100 * _namespace.CoverageStats.LinesCovered / (float)_namespace.CoverageStats.TotalCoverableLines).ToString( " is 146.
Long Statement,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	//builder.AppendFormat("<tr><td class=\"name\">{0}</td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' _namespace.Name' classCoverage' methodCoverage' lineCoverage); " is 230.
Long Statement,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "	builder.Append ("<tr><th class=\"name\">Type</th><th class=\"coverageStat\">Class' %</th><th class=\"coverageStat\">Method' %</th><th class=\"coverageStat\">Lines' %</th></tr>"); " is 178.
Long Statement,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "		classCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.ClassesCovered / (float)sourceAssembly.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.ClassesCovered' sourceAssembly.CoverageStats.TotalClasses); " is 333.
Long Statement,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "		methodCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.MethodsCovered / (float)sourceAssembly.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.MethodsCovered' sourceAssembly.CoverageStats.TotalMethods); " is 334.
Long Statement,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "		lineCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.LinesCovered / (float)sourceAssembly.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.LinesCovered' sourceAssembly.CoverageStats.TotalCoverableLines); " is 349.
Long Statement,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "		builder.AppendFormat ("<tr><td class=\"name\"><a href=\"{4}\">{0}</a></td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceAssembly.Name' classCoverage' methodCoverage' lineCoverage' _pathResolver.RelativePathFromAssemblyToRoot + _pathResolver.GetRelativePathFromRootForAssembly (sourceAssembly)); " is 367.
Long Statement,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildBreadCrumbs,The length of the statement  "	builder.AppendFormat ("<a href=\"{0}\">{1}</a>"' _pathResolver.RelativePathFromAssemblyToRoot + _pathResolver.GetRelativePathFromRootForIndex ()' "all assemblies"); " is 164.
Long Statement,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	builder.Append ("<tr><th class=\"name\">Namespace</th><th class=\"coverageStat\">Class' %</th><th class=\"coverageStat\">Method' %</th><th class=\"coverageStat\">Lines' %</th></tr>"); " is 183.
Long Statement,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	classCoverage = string.Format (coverageFmt' _assembly.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * _assembly.CoverageStats.ClassesCovered / (float)_assembly.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' _assembly.CoverageStats.ClassesCovered' _assembly.CoverageStats.TotalClasses); " is 308.
Long Statement,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	methodCoverage = string.Format (coverageFmt' _assembly.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * _assembly.CoverageStats.MethodsCovered / (float)_assembly.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' _assembly.CoverageStats.MethodsCovered' _assembly.CoverageStats.TotalMethods); " is 309.
Long Statement,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	lineCoverage = string.Format (coverageFmt' _assembly.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * _assembly.CoverageStats.LinesCovered / (float)_assembly.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' _assembly.CoverageStats.LinesCovered' _assembly.CoverageStats.TotalCoverableLines); " is 324.
Long Statement,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	builder.AppendFormat ("<tr><td class=\"name\">{0}</td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' "all types"' classCoverage' methodCoverage' lineCoverage); " is 225.
Long Statement,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "	builder.Append ("<tr><th class=\"name\">Type</th><th class=\"coverageStat\">Class' %</th><th class=\"coverageStat\">Method' %</th><th class=\"coverageStat\">Lines' %</th></tr>"); " is 178.
Long Statement,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "		classCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.ClassesCovered / (float)sourceNamespace.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.ClassesCovered' sourceNamespace.CoverageStats.TotalClasses); " is 338.
Long Statement,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "		methodCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.MethodsCovered / (float)sourceNamespace.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.MethodsCovered' sourceNamespace.CoverageStats.TotalMethods); " is 339.
Long Statement,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "		lineCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.LinesCovered / (float)sourceNamespace.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.LinesCovered' sourceNamespace.CoverageStats.TotalCoverableLines); " is 354.
Long Statement,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "		builder.AppendFormat ("<tr><td class=\"name\"><a href=\"{4}\">{0}</a></td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceNamespace.Name' classCoverage' methodCoverage' lineCoverage' _pathResolver.RelativePathFromAssemblyToRoot + _pathResolver.GetRelativePathFromRootForNamespace (sourceNamespace)); " is 370.
Long Statement,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildBreadCrumbs,The length of the statement  "	builder.AppendFormat ("<a href=\"{0}\">{1}</a>"' _pathResolver.RelativePathFromNamespaceToRoot + _pathResolver.GetRelativePathFromRootForIndex ()' "all assemblies"); " is 165.
Long Statement,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildBreadCrumbs,The length of the statement  "	builder.AppendFormat ("<a href=\"{0}\">{1}</a>"' _pathResolver.RelativePathFromNamespaceToRoot + _pathResolver.GetRelativePathFromRootForAssembly (_assembly)' _assembly.Name); " is 175.
Long Statement,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	builder.Append ("<tr><th class=\"name\">Namespace</th><th class=\"coverageStat\">Class' %</th><th class=\"coverageStat\">Method' %</th><th class=\"coverageStat\">Lines' %</th></tr>"); " is 183.
Long Statement,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	classCoverage = string.Format (coverageFmt' _namespace.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * _namespace.CoverageStats.ClassesCovered / (float)_namespace.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' _namespace.CoverageStats.ClassesCovered' _namespace.CoverageStats.TotalClasses); " is 313.
Long Statement,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	methodCoverage = string.Format (coverageFmt' _namespace.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * _namespace.CoverageStats.MethodsCovered / (float)_namespace.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' _namespace.CoverageStats.MethodsCovered' _namespace.CoverageStats.TotalMethods); " is 314.
Long Statement,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	lineCoverage = string.Format (coverageFmt' _namespace.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * _namespace.CoverageStats.LinesCovered / (float)_namespace.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' _namespace.CoverageStats.LinesCovered' _namespace.CoverageStats.TotalCoverableLines); " is 329.
Long Statement,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	builder.AppendFormat ("<tr><td class=\"name\">{0}</td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' _namespace.Name' classCoverage' methodCoverage' lineCoverage); " is 229.
Long Statement,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "	builder.Append ("<tr><th class=\"name\">Type</th><th class=\"coverageStat\">Class' %</th><th class=\"coverageStat\">Method' %</th><th class=\"coverageStat\">Lines' %</th></tr>"); " is 178.
Long Statement,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "		classCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceClass.CoverageStats.ClassesCovered / (float)sourceClass.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.ClassesCovered' sourceClass.CoverageStats.TotalClasses); " is 318.
Long Statement,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "		methodCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceClass.CoverageStats.MethodsCovered / (float)sourceClass.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.MethodsCovered' sourceClass.CoverageStats.TotalMethods); " is 319.
Long Statement,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "		lineCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceClass.CoverageStats.LinesCovered / (float)sourceClass.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.LinesCovered' sourceClass.CoverageStats.TotalCoverableLines); " is 334.
Long Statement,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildContent,The length of the statement  "		builder.AppendFormat ("<tr><td class=\"name\"><a href=\"{4}\">{0}</a></td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceClass.Name' classCoverage' methodCoverage' lineCoverage' _pathResolver.RelativePathFromAssemblyToRoot + _pathResolver.GetRelativePathFromRootForFile (sourceClass)); " is 357.
Long Statement,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildBreadCrumbs,The length of the statement  "	builder.AppendFormat ("<a href=\"{0}\">{1}</a>"' _pathResolver.RelativePathFromFileToRoot + _pathResolver.GetRelativePathFromRootForIndex ()' "all assemblies"); " is 160.
Long Statement,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildBreadCrumbs,The length of the statement  "	builder.AppendFormat ("<a href=\"{0}\">{1}</a>"' _pathResolver.RelativePathFromFileToRoot + _pathResolver.GetRelativePathFromRootForAssembly (_assembly)' _assembly.Name); " is 170.
Long Statement,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildBreadCrumbs,The length of the statement  "	builder.AppendFormat ("<a href=\"{0}\">{1}</a>"' _pathResolver.RelativePathFromFileToRoot + _pathResolver.GetRelativePathFromRootForNamespace (_namespace)' _namespace.Name); " is 173.
Long Statement,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	builder.Append ("<tr><th class=\"name\">Type</th><th class=\"coverageStat\">Class' %</th><th class=\"coverageStat\">Method' %</th><th class=\"coverageStat\">Lines' %</th></tr>"); " is 178.
Long Statement,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "		classCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceClass.CoverageStats.ClassesCovered / (float)sourceClass.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.ClassesCovered' sourceClass.CoverageStats.TotalClasses); " is 318.
Long Statement,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "		methodCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceClass.CoverageStats.MethodsCovered / (float)sourceClass.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.MethodsCovered' sourceClass.CoverageStats.TotalMethods); " is 319.
Long Statement,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "		lineCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceClass.CoverageStats.LinesCovered / (float)sourceClass.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.LinesCovered' sourceClass.CoverageStats.TotalCoverableLines); " is 334.
Long Statement,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "		builder.AppendFormat ("<tr><td class=\"name\">{0}</td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceClass.Name' classCoverage' methodCoverage' lineCoverage); " is 230.
Long Statement,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	classCoverage = string.Format (coverageFmt' _file.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * _file.CoverageStats.ClassesCovered / (float)_file.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' _file.CoverageStats.ClassesCovered' _file.CoverageStats.TotalClasses); " is 288.
Long Statement,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	methodCoverage = string.Format (coverageFmt' _file.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * _file.CoverageStats.MethodsCovered / (float)_file.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' _file.CoverageStats.MethodsCovered' _file.CoverageStats.TotalMethods); " is 289.
Long Statement,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	lineCoverage = string.Format (coverageFmt' _file.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * _file.CoverageStats.LinesCovered / (float)_file.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' _file.CoverageStats.LinesCovered' _file.CoverageStats.TotalCoverableLines); " is 304.
Long Statement,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The length of the statement  "	builder.AppendFormat ("<tr><td class=\"name\">{0}</td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' _file.Name' classCoverage' methodCoverage' lineCoverage); " is 224.
Long Statement,Duvet.Output.HTML,TeamCityHtmlReportPage,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCityHtmlReportPage.cs,WriteTo,The length of the statement  "	builder.AppendFormat ("<style type=\"text/css\">{0}</style>"' "@import \".css/coverage.css\"; @import \".css/idea.css\";"); " is 123.
Long Statement,Duvet.Output.HTML,TeamCityHtmlReportPage,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCityHtmlReportPage.cs,WriteTo,The length of the statement  "	builder.AppendFormat ("<script type=\"text/javascript\">{0}</script>"' "(function() {var codeBlock = document.getElementById('sourceCode');if (codeBlock) {hljs.highlightBlock(codeBlock);}})();"); " is 195.
Long Statement,Duvet.Output.HTML,TeamCityHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCityHtmlReport.cs,WriteTo,The length of the statement  "	using (var writer = new StreamWriter (Path.Combine (directory.FullName' resolver.GetRelativePathFromRootForIndex ()))) { " is 120.
Long Statement,Duvet.Output.HTML,TeamCityHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCityHtmlReport.cs,WriteTo,The length of the statement  "		SourceAssemblyTeamCityHtmlReportPageContent assemblyContent = new SourceAssemblyTeamCityHtmlReportPageContent (resolver' sourceAssembly); " is 137.
Long Statement,Duvet.Output.HTML,TeamCityHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCityHtmlReport.cs,WriteTo,The length of the statement  "		using (var writer = new StreamWriter (Path.Combine (directory.FullName' resolver.GetRelativePathFromRootForAssembly (sourceAssembly)))) { " is 137.
Long Statement,Duvet.Output.HTML,TeamCityHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCityHtmlReport.cs,WriteTo,The length of the statement  "			SourceNamespaceTeamCityHtmlReportPageContent namespaceContent = new SourceNamespaceTeamCityHtmlReportPageContent (resolver' sourceAssembly' sourceNamespace); " is 157.
Long Statement,Duvet.Output.HTML,TeamCityHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCityHtmlReport.cs,WriteTo,The length of the statement  "			using (var writer = new StreamWriter (Path.Combine (directory.FullName' resolver.GetRelativePathFromRootForNamespace (sourceNamespace)))) { " is 139.
Long Statement,Duvet.Output.HTML,TeamCityHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCityHtmlReport.cs,WriteTo,The length of the statement  "				SourceFileTeamCityHtmlReportPageContent fileContent = new SourceFileTeamCityHtmlReportPageContent (resolver' sourceAssembly' sourceNamespace' sourceFile); " is 154.
Long Statement,Duvet.Output.HTML,TeamCityHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCityHtmlReport.cs,WriteTo,The length of the statement  "				using (var writer = new StreamWriter (Path.Combine (directory.FullName' resolver.GetRelativePathFromRootForFile (sourceFile)))) { " is 129.
Long Statement,Duvet.Output.HTML,TeamCitySourceFileHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCitySourceFileHtmlReport.cs,WriteTo,The length of the statement  "	builder.AppendFormat ("<style type=\"text/css\">{0}</style>"' "@import \"../../../.css/coverage.css\"; @import \"../../../.css/idea.css\";"); " is 141.
Long Statement,Duvet.Output.HTML,TeamCitySourceFileHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCitySourceFileHtmlReport.cs,WriteTo,The length of the statement  "	builder.AppendFormat ("<script type=\"text/javascript\">{0}</script>"' "(function() {var codeBlock = document.getElementById('sourceCode');if (codeBlock) {hljs.highlightBlock(codeBlock);}})();"); " is 195.
Long Statement,Duvet.Output.HTML,TeamCitySourceFileHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCitySourceFileHtmlReport.cs,BuildCoverageStatsTable,The length of the statement  "	builder.AppendFormat ("<tr><th class=\"name\">Type</th><th class=\"coverageStat\">Class' %</th><th class=\"coverageStat\">Methods' %</th><th class=\"coverageStat\">Lines' %</th></tr>"); " is 185.
Long Statement,Duvet.Output.HTML,TeamCitySourceFileHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCitySourceFileHtmlReport.cs,BuildCoverageStatsTable,The length of the statement  "		classCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalClasses == 0 ? "N/A" : (sourceClass.CoverageStats.ClassesCovered / (float)sourceClass.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.ClassesCovered' sourceClass.CoverageStats.TotalClasses); " is 312.
Long Statement,Duvet.Output.HTML,TeamCitySourceFileHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCitySourceFileHtmlReport.cs,BuildCoverageStatsTable,The length of the statement  "		methodCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalMethods == 0 ? "N/A" : (sourceClass.CoverageStats.MethodsCovered / (float)sourceClass.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.MethodsCovered' sourceClass.CoverageStats.TotalMethods); " is 313.
Long Statement,Duvet.Output.HTML,TeamCitySourceFileHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCitySourceFileHtmlReport.cs,BuildCoverageStatsTable,The length of the statement  "		lineCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (sourceClass.CoverageStats.LinesCovered / (float)sourceClass.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.LinesCovered' sourceClass.CoverageStats.TotalCoverableLines); " is 328.
Long Statement,Duvet.Output.HTML,TeamCitySourceFileHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCitySourceFileHtmlReport.cs,BuildCoverageStatsTable,The length of the statement  "		builder.AppendFormat ("<tr><td class=\"name\">{0}</td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceClass.Name' classCoverage' methodCoverage' lineCoverage); " is 230.
Long Statement,Duvet.Output.HTML,TeamCitySourceFileHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCitySourceFileHtmlReport.cs,BuildCoverageStatsTable,The length of the statement  "	classCoverage = string.Format (coverageFmt' stats.TotalClasses == 0 ? "N/A" : (stats.ClassesCovered / (float)stats.TotalClasses).ToString (CultureInfo.InvariantCulture)' stats.ClassesCovered' stats.TotalClasses); " is 212.
Long Statement,Duvet.Output.HTML,TeamCitySourceFileHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCitySourceFileHtmlReport.cs,BuildCoverageStatsTable,The length of the statement  "	methodCoverage = string.Format (coverageFmt' stats.TotalMethods == 0 ? "N/A" : (stats.MethodsCovered / (float)stats.TotalMethods).ToString (CultureInfo.InvariantCulture)' stats.MethodsCovered' stats.TotalMethods); " is 213.
Long Statement,Duvet.Output.HTML,TeamCitySourceFileHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCitySourceFileHtmlReport.cs,BuildCoverageStatsTable,The length of the statement  "	lineCoverage = string.Format (coverageFmt' stats.TotalCoverableLines == 0 ? "N/A" : (stats.LinesCovered / (float)stats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' stats.LinesCovered' stats.TotalCoverableLines); " is 228.
Long Statement,Duvet.Output.HTML,TeamCitySourceFileHtmlReport,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\TeamCitySourceFileHtmlReport.cs,BuildCoverageStatsTable,The length of the statement  "	builder.AppendFormat ("<tr><td class=\"name\">{0}</td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' fileName' classCoverage' methodCoverage' lineCoverage); " is 222.
Magic Number,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: foreach (var sourceAssembly in _assemblies) {  	classCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.ClassesCovered / (float)sourceAssembly.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.ClassesCovered' sourceAssembly.CoverageStats.TotalClasses);  	methodCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.MethodsCovered / (float)sourceAssembly.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.MethodsCovered' sourceAssembly.CoverageStats.TotalMethods);  	lineCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.LinesCovered / (float)sourceAssembly.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.LinesCovered' sourceAssembly.CoverageStats.TotalCoverableLines);  	builder.AppendFormat ("<tr><td class=\"name\"><a href=\"{4}\">{0}</a></td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceAssembly.Name' classCoverage' methodCoverage' lineCoverage' _pathResolver.RelativePathFromAssemblyToRoot + _pathResolver.GetRelativePathFromRootForAssembly (sourceAssembly));  }  
Magic Number,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: foreach (var sourceAssembly in _assemblies) {  	classCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.ClassesCovered / (float)sourceAssembly.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.ClassesCovered' sourceAssembly.CoverageStats.TotalClasses);  	methodCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.MethodsCovered / (float)sourceAssembly.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.MethodsCovered' sourceAssembly.CoverageStats.TotalMethods);  	lineCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.LinesCovered / (float)sourceAssembly.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.LinesCovered' sourceAssembly.CoverageStats.TotalCoverableLines);  	builder.AppendFormat ("<tr><td class=\"name\"><a href=\"{4}\">{0}</a></td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceAssembly.Name' classCoverage' methodCoverage' lineCoverage' _pathResolver.RelativePathFromAssemblyToRoot + _pathResolver.GetRelativePathFromRootForAssembly (sourceAssembly));  }  
Magic Number,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: foreach (var sourceAssembly in _assemblies) {  	classCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.ClassesCovered / (float)sourceAssembly.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.ClassesCovered' sourceAssembly.CoverageStats.TotalClasses);  	methodCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.MethodsCovered / (float)sourceAssembly.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.MethodsCovered' sourceAssembly.CoverageStats.TotalMethods);  	lineCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.LinesCovered / (float)sourceAssembly.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.LinesCovered' sourceAssembly.CoverageStats.TotalCoverableLines);  	builder.AppendFormat ("<tr><td class=\"name\"><a href=\"{4}\">{0}</a></td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceAssembly.Name' classCoverage' methodCoverage' lineCoverage' _pathResolver.RelativePathFromAssemblyToRoot + _pathResolver.GetRelativePathFromRootForAssembly (sourceAssembly));  }  
Magic Number,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: classCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.ClassesCovered / (float)sourceAssembly.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.ClassesCovered' sourceAssembly.CoverageStats.TotalClasses);  
Magic Number,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: methodCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.MethodsCovered / (float)sourceAssembly.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.MethodsCovered' sourceAssembly.CoverageStats.TotalMethods);  
Magic Number,Duvet.Output.HTML.Pages,IndexTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\IndexTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: lineCoverage = string.Format (coverageFmt' sourceAssembly.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceAssembly.CoverageStats.LinesCovered / (float)sourceAssembly.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceAssembly.CoverageStats.LinesCovered' sourceAssembly.CoverageStats.TotalCoverableLines);  
Magic Number,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: classCoverage = string.Format (coverageFmt' _assembly.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * _assembly.CoverageStats.ClassesCovered / (float)_assembly.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' _assembly.CoverageStats.ClassesCovered' _assembly.CoverageStats.TotalClasses);  
Magic Number,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: methodCoverage = string.Format (coverageFmt' _assembly.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * _assembly.CoverageStats.MethodsCovered / (float)_assembly.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' _assembly.CoverageStats.MethodsCovered' _assembly.CoverageStats.TotalMethods);  
Magic Number,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: lineCoverage = string.Format (coverageFmt' _assembly.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * _assembly.CoverageStats.LinesCovered / (float)_assembly.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' _assembly.CoverageStats.LinesCovered' _assembly.CoverageStats.TotalCoverableLines);  
Magic Number,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: foreach (var sourceNamespace in _assembly.Namespaces) {  	classCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.ClassesCovered / (float)sourceNamespace.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.ClassesCovered' sourceNamespace.CoverageStats.TotalClasses);  	methodCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.MethodsCovered / (float)sourceNamespace.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.MethodsCovered' sourceNamespace.CoverageStats.TotalMethods);  	lineCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.LinesCovered / (float)sourceNamespace.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.LinesCovered' sourceNamespace.CoverageStats.TotalCoverableLines);  	builder.AppendFormat ("<tr><td class=\"name\"><a href=\"{4}\">{0}</a></td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceNamespace.Name' classCoverage' methodCoverage' lineCoverage' _pathResolver.RelativePathFromAssemblyToRoot + _pathResolver.GetRelativePathFromRootForNamespace (sourceNamespace));  }  
Magic Number,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: foreach (var sourceNamespace in _assembly.Namespaces) {  	classCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.ClassesCovered / (float)sourceNamespace.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.ClassesCovered' sourceNamespace.CoverageStats.TotalClasses);  	methodCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.MethodsCovered / (float)sourceNamespace.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.MethodsCovered' sourceNamespace.CoverageStats.TotalMethods);  	lineCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.LinesCovered / (float)sourceNamespace.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.LinesCovered' sourceNamespace.CoverageStats.TotalCoverableLines);  	builder.AppendFormat ("<tr><td class=\"name\"><a href=\"{4}\">{0}</a></td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceNamespace.Name' classCoverage' methodCoverage' lineCoverage' _pathResolver.RelativePathFromAssemblyToRoot + _pathResolver.GetRelativePathFromRootForNamespace (sourceNamespace));  }  
Magic Number,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: foreach (var sourceNamespace in _assembly.Namespaces) {  	classCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.ClassesCovered / (float)sourceNamespace.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.ClassesCovered' sourceNamespace.CoverageStats.TotalClasses);  	methodCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.MethodsCovered / (float)sourceNamespace.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.MethodsCovered' sourceNamespace.CoverageStats.TotalMethods);  	lineCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.LinesCovered / (float)sourceNamespace.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.LinesCovered' sourceNamespace.CoverageStats.TotalCoverableLines);  	builder.AppendFormat ("<tr><td class=\"name\"><a href=\"{4}\">{0}</a></td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceNamespace.Name' classCoverage' methodCoverage' lineCoverage' _pathResolver.RelativePathFromAssemblyToRoot + _pathResolver.GetRelativePathFromRootForNamespace (sourceNamespace));  }  
Magic Number,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: classCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.ClassesCovered / (float)sourceNamespace.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.ClassesCovered' sourceNamespace.CoverageStats.TotalClasses);  
Magic Number,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: methodCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.MethodsCovered / (float)sourceNamespace.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.MethodsCovered' sourceNamespace.CoverageStats.TotalMethods);  
Magic Number,Duvet.Output.HTML.Pages,SourceAssemblyTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceAssemblyTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: lineCoverage = string.Format (coverageFmt' sourceNamespace.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceNamespace.CoverageStats.LinesCovered / (float)sourceNamespace.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceNamespace.CoverageStats.LinesCovered' sourceNamespace.CoverageStats.TotalCoverableLines);  
Magic Number,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: classCoverage = string.Format (coverageFmt' _namespace.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * _namespace.CoverageStats.ClassesCovered / (float)_namespace.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' _namespace.CoverageStats.ClassesCovered' _namespace.CoverageStats.TotalClasses);  
Magic Number,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: methodCoverage = string.Format (coverageFmt' _namespace.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * _namespace.CoverageStats.MethodsCovered / (float)_namespace.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' _namespace.CoverageStats.MethodsCovered' _namespace.CoverageStats.TotalMethods);  
Magic Number,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: lineCoverage = string.Format (coverageFmt' _namespace.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * _namespace.CoverageStats.LinesCovered / (float)_namespace.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' _namespace.CoverageStats.LinesCovered' _namespace.CoverageStats.TotalCoverableLines);  
Magic Number,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: foreach (var sourceClass in _namespace.Files) {  	classCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceClass.CoverageStats.ClassesCovered / (float)sourceClass.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.ClassesCovered' sourceClass.CoverageStats.TotalClasses);  	methodCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceClass.CoverageStats.MethodsCovered / (float)sourceClass.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.MethodsCovered' sourceClass.CoverageStats.TotalMethods);  	lineCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceClass.CoverageStats.LinesCovered / (float)sourceClass.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.LinesCovered' sourceClass.CoverageStats.TotalCoverableLines);  	builder.AppendFormat ("<tr><td class=\"name\"><a href=\"{4}\">{0}</a></td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceClass.Name' classCoverage' methodCoverage' lineCoverage' _pathResolver.RelativePathFromAssemblyToRoot + _pathResolver.GetRelativePathFromRootForFile (sourceClass));  }  
Magic Number,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: foreach (var sourceClass in _namespace.Files) {  	classCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceClass.CoverageStats.ClassesCovered / (float)sourceClass.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.ClassesCovered' sourceClass.CoverageStats.TotalClasses);  	methodCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceClass.CoverageStats.MethodsCovered / (float)sourceClass.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.MethodsCovered' sourceClass.CoverageStats.TotalMethods);  	lineCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceClass.CoverageStats.LinesCovered / (float)sourceClass.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.LinesCovered' sourceClass.CoverageStats.TotalCoverableLines);  	builder.AppendFormat ("<tr><td class=\"name\"><a href=\"{4}\">{0}</a></td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceClass.Name' classCoverage' methodCoverage' lineCoverage' _pathResolver.RelativePathFromAssemblyToRoot + _pathResolver.GetRelativePathFromRootForFile (sourceClass));  }  
Magic Number,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: foreach (var sourceClass in _namespace.Files) {  	classCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceClass.CoverageStats.ClassesCovered / (float)sourceClass.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.ClassesCovered' sourceClass.CoverageStats.TotalClasses);  	methodCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceClass.CoverageStats.MethodsCovered / (float)sourceClass.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.MethodsCovered' sourceClass.CoverageStats.TotalMethods);  	lineCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceClass.CoverageStats.LinesCovered / (float)sourceClass.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.LinesCovered' sourceClass.CoverageStats.TotalCoverableLines);  	builder.AppendFormat ("<tr><td class=\"name\"><a href=\"{4}\">{0}</a></td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceClass.Name' classCoverage' methodCoverage' lineCoverage' _pathResolver.RelativePathFromAssemblyToRoot + _pathResolver.GetRelativePathFromRootForFile (sourceClass));  }  
Magic Number,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: classCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceClass.CoverageStats.ClassesCovered / (float)sourceClass.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.ClassesCovered' sourceClass.CoverageStats.TotalClasses);  
Magic Number,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: methodCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceClass.CoverageStats.MethodsCovered / (float)sourceClass.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.MethodsCovered' sourceClass.CoverageStats.TotalMethods);  
Magic Number,Duvet.Output.HTML.Pages,SourceNamespaceTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceNamespaceTeamCityHtmlReportPageContent.cs,BuildContent,The following statement contains a magic number: lineCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceClass.CoverageStats.LinesCovered / (float)sourceClass.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.LinesCovered' sourceClass.CoverageStats.TotalCoverableLines);  
Magic Number,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: foreach (var sourceClass in _file.Classes) {  	classCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceClass.CoverageStats.ClassesCovered / (float)sourceClass.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.ClassesCovered' sourceClass.CoverageStats.TotalClasses);  	methodCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceClass.CoverageStats.MethodsCovered / (float)sourceClass.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.MethodsCovered' sourceClass.CoverageStats.TotalMethods);  	lineCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceClass.CoverageStats.LinesCovered / (float)sourceClass.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.LinesCovered' sourceClass.CoverageStats.TotalCoverableLines);  	builder.AppendFormat ("<tr><td class=\"name\">{0}</td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceClass.Name' classCoverage' methodCoverage' lineCoverage);  }  
Magic Number,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: foreach (var sourceClass in _file.Classes) {  	classCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceClass.CoverageStats.ClassesCovered / (float)sourceClass.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.ClassesCovered' sourceClass.CoverageStats.TotalClasses);  	methodCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceClass.CoverageStats.MethodsCovered / (float)sourceClass.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.MethodsCovered' sourceClass.CoverageStats.TotalMethods);  	lineCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceClass.CoverageStats.LinesCovered / (float)sourceClass.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.LinesCovered' sourceClass.CoverageStats.TotalCoverableLines);  	builder.AppendFormat ("<tr><td class=\"name\">{0}</td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceClass.Name' classCoverage' methodCoverage' lineCoverage);  }  
Magic Number,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: foreach (var sourceClass in _file.Classes) {  	classCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceClass.CoverageStats.ClassesCovered / (float)sourceClass.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.ClassesCovered' sourceClass.CoverageStats.TotalClasses);  	methodCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceClass.CoverageStats.MethodsCovered / (float)sourceClass.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.MethodsCovered' sourceClass.CoverageStats.TotalMethods);  	lineCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceClass.CoverageStats.LinesCovered / (float)sourceClass.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.LinesCovered' sourceClass.CoverageStats.TotalCoverableLines);  	builder.AppendFormat ("<tr><td class=\"name\">{0}</td><td class=\"coverageStat\">{1}</td><td class=\"coverageStat\">{2}</td><td class=\"coverageStat\">{3}</td></tr>"' sourceClass.Name' classCoverage' methodCoverage' lineCoverage);  }  
Magic Number,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: classCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * sourceClass.CoverageStats.ClassesCovered / (float)sourceClass.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.ClassesCovered' sourceClass.CoverageStats.TotalClasses);  
Magic Number,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: methodCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * sourceClass.CoverageStats.MethodsCovered / (float)sourceClass.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.MethodsCovered' sourceClass.CoverageStats.TotalMethods);  
Magic Number,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: lineCoverage = string.Format (coverageFmt' sourceClass.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * sourceClass.CoverageStats.LinesCovered / (float)sourceClass.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' sourceClass.CoverageStats.LinesCovered' sourceClass.CoverageStats.TotalCoverableLines);  
Magic Number,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: classCoverage = string.Format (coverageFmt' _file.CoverageStats.TotalClasses == 0 ? "N/A" : (100 * _file.CoverageStats.ClassesCovered / (float)_file.CoverageStats.TotalClasses).ToString (CultureInfo.InvariantCulture)' _file.CoverageStats.ClassesCovered' _file.CoverageStats.TotalClasses);  
Magic Number,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: methodCoverage = string.Format (coverageFmt' _file.CoverageStats.TotalMethods == 0 ? "N/A" : (100 * _file.CoverageStats.MethodsCovered / (float)_file.CoverageStats.TotalMethods).ToString (CultureInfo.InvariantCulture)' _file.CoverageStats.MethodsCovered' _file.CoverageStats.TotalMethods);  
Magic Number,Duvet.Output.HTML,SourceFileTeamCityHtmlReportPageContent,C:\repos\etinquis_Duvet\Duvet\Output\HTML\TeamCity\Pages\SourceFileTeamCityHtmlReportPageContent.cs,BuildCoverageStatsTable,The following statement contains a magic number: lineCoverage = string.Format (coverageFmt' _file.CoverageStats.TotalCoverableLines == 0 ? "N/A" : (100 * _file.CoverageStats.LinesCovered / (float)_file.CoverageStats.TotalCoverableLines).ToString (CultureInfo.InvariantCulture)' _file.CoverageStats.LinesCovered' _file.CoverageStats.TotalCoverableLines);  
