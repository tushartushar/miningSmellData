Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DataAnnotationsExtensions,CreditCardAttribute,C:\repos\srkirkland_DataAnnotationsExtensions\DataAnnotationsExtensions\CreditCardAttribute.cs,IsValid,Cyclomatic complexity of the method is 9
Long Statement,DataAnnotationsExtensions,EqualToAttribute,C:\repos\srkirkland_DataAnnotationsExtensions\DataAnnotationsExtensions\EqualToAttribute.cs,IsValid,The length of the statement  "                return new ValidationResult(String.Format(CultureInfo.CurrentCulture' ValidatorResources.EqualTo_UnknownProperty' OtherProperty)' memberNames); " is 143.
Magic Number,DataAnnotationsExtensions,CreditCardAttribute,C:\repos\srkirkland_DataAnnotationsExtensions\DataAnnotationsExtensions\CreditCardAttribute.cs,IsValid,The following statement contains a magic number: if (ccValue.Length < 13 || ccValue.Length > 19)              {                  return false;              }
Magic Number,DataAnnotationsExtensions,CreditCardAttribute,C:\repos\srkirkland_DataAnnotationsExtensions\DataAnnotationsExtensions\CreditCardAttribute.cs,IsValid,The following statement contains a magic number: if (ccValue.Length < 13 || ccValue.Length > 19)              {                  return false;              }
Magic Number,DataAnnotationsExtensions,CreditCardAttribute,C:\repos\srkirkland_DataAnnotationsExtensions\DataAnnotationsExtensions\CreditCardAttribute.cs,IsValid,The following statement contains a magic number: foreach (char digit in ccValue.Reverse())              {                  if (!Char.IsDigit(digit))                  {                      return false;                  }                    int digitValue = (digit - '0') * (evenDigit ? 2 : 1);                  evenDigit = !evenDigit;                    while (digitValue > 0)                  {                      checksum += digitValue % 10;                      digitValue /= 10;                  }              }
Magic Number,DataAnnotationsExtensions,CreditCardAttribute,C:\repos\srkirkland_DataAnnotationsExtensions\DataAnnotationsExtensions\CreditCardAttribute.cs,IsValid,The following statement contains a magic number: foreach (char digit in ccValue.Reverse())              {                  if (!Char.IsDigit(digit))                  {                      return false;                  }                    int digitValue = (digit - '0') * (evenDigit ? 2 : 1);                  evenDigit = !evenDigit;                    while (digitValue > 0)                  {                      checksum += digitValue % 10;                      digitValue /= 10;                  }              }
Magic Number,DataAnnotationsExtensions,CreditCardAttribute,C:\repos\srkirkland_DataAnnotationsExtensions\DataAnnotationsExtensions\CreditCardAttribute.cs,IsValid,The following statement contains a magic number: foreach (char digit in ccValue.Reverse())              {                  if (!Char.IsDigit(digit))                  {                      return false;                  }                    int digitValue = (digit - '0') * (evenDigit ? 2 : 1);                  evenDigit = !evenDigit;                    while (digitValue > 0)                  {                      checksum += digitValue % 10;                      digitValue /= 10;                  }              }
Magic Number,DataAnnotationsExtensions,CreditCardAttribute,C:\repos\srkirkland_DataAnnotationsExtensions\DataAnnotationsExtensions\CreditCardAttribute.cs,IsValid,The following statement contains a magic number: return (checksum % 10) == 0;
Magic Number,DataAnnotationsExtensions,YearAttribute,C:\repos\srkirkland_DataAnnotationsExtensions\DataAnnotationsExtensions\YearAttribute.cs,IsValid,The following statement contains a magic number: return parseSuccess && retNum >= 1 && retNum <= 9999;
