Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Ramone,BaseRequest,C:\repos\JornWildt_Ramone\Ramone\BaseRequest.cs,SetupRequest,Cyclomatic complexity of the method is 8
Complex Method,Ramone.Utility,WebLinkParser,C:\repos\JornWildt_Ramone\Ramone\Utility\WebLinkParser.cs,ReadToken,Cyclomatic complexity of the method is 10
Long Parameter List,Ramone,AsyncEventRequest,C:\repos\JornWildt_Ramone\Ramone\AsyncEventRequest.cs,DoRequest,The method has 5 parameters. Parameters: url' method' includeBody' requestModifier' retryLevel
Long Parameter List,Ramone,AsyncRequest,C:\repos\JornWildt_Ramone\Ramone\AsyncRequest.cs,DoRequestAsync,The method has 5 parameters. Parameters: url' method' includeBody' requestModifier' retryLevel
Long Parameter List,Ramone,BaseRequest,C:\repos\JornWildt_Ramone\Ramone\BaseRequest.cs,DoRequest,The method has 5 parameters. Parameters: url' method' includeBody' requestModifier' retryLevel
Long Parameter List,Ramone,BaseRequest,C:\repos\JornWildt_Ramone\Ramone\BaseRequest.cs,HandleResponse,The method has 5 parameters. Parameters: response' method' includeBody' requestModifier' retryLevel
Long Parameter List,Ramone,BaseRequest,C:\repos\JornWildt_Ramone\Ramone\BaseRequest.cs,HandleWebException,The method has 6 parameters. Parameters: ex' url' method' includeBody' requestModifier' retryLevel
Long Parameter List,Ramone,WriterContext,C:\repos\JornWildt_Ramone\Ramone\IMediaTypeWriter.cs,WriterContext,The method has 5 parameters. Parameters: s' data' request' session' codecParameters
Long Parameter List,Ramone.HyperMedia,LinkBase,C:\repos\JornWildt_Ramone\Ramone\HyperMedia\LinkBase.cs,LinkBase,The method has 5 parameters. Parameters: baseUrl' href' relationType' mediaType' title
Long Parameter List,Ramone.HyperMedia,WebLink,C:\repos\JornWildt_Ramone\Ramone\HyperMedia\WebLink.cs,WebLink,The method has 5 parameters. Parameters: baseUrl' href' relationType' mediaType' title
Long Parameter List,Ramone.MediaTypes.Atom,AtomLink,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\Atom\AtomLink.cs,AtomLink,The method has 5 parameters. Parameters: baseUrl' href' relationType' mediaType' title
Long Parameter List,Ramone.MediaTypes.Html,Anchor,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\Html\Anchor.cs,Anchor,The method has 5 parameters. Parameters: baseUrl' href' relationType' mediaType' title
Long Parameter List,Ramone.MediaTypes.Html,Link,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\Html\Link.cs,Link,The method has 5 parameters. Parameters: baseUrl' href' relationType' mediaType' title
Long Parameter List,Ramone.OAuth1,SignatureHelper,C:\repos\JornWildt_Ramone\Ramone\OAuth1\SignatureHelper.cs,GenerateSignatureBase,The method has 10 parameters. Parameters: url' consumerKey' callback' token' httpMethod' timeStamp' nonce' signatureType' normalizedUrl' normalizedRequestParameters
Long Parameter List,Ramone.OAuth1,SignatureHelper,C:\repos\JornWildt_Ramone\Ramone\OAuth1\SignatureHelper.cs,GenerateSignature,The method has 12 parameters. Parameters: url' consumerKey' consumerSecret' callback' token' tokenSecret' httpMethod' timeStamp' nonce' signatureType' normalizedUrl' normalizedRequestParameters
Long Parameter List,Ramone.OAuth2,OAuth2Extensions,C:\repos\JornWildt_Ramone\Ramone\OAuth2\OAuth2Extensions.cs,OAuth2_GetAccessTokenUsingOwnerUsernamePassword,The method has 5 parameters. Parameters: session' ownerUserName' ownerPassword' scope' useAccessToken
Long Parameter List,Ramone.OAuth2,OAuth2Extensions,C:\repos\JornWildt_Ramone\Ramone\OAuth2\OAuth2Extensions.cs,OAuth2_GetAccessTokenFromJWT,The method has 5 parameters. Parameters: session' alg' key' args' useAccessToken
Long Parameter List,Ramone.Utility,MultipartFormDataSerializer,C:\repos\JornWildt_Ramone\Ramone\Utility\MultipartFormDataSerializer.cs,Serialize,The method has 5 parameters. Parameters: s' data' encoding' boundary' settings
Long Parameter List,Ramone.Utility.ObjectSerialization,ObjectSerializer,C:\repos\JornWildt_Ramone\Ramone\Utility\ObjectSerialization\ObjectSerializer.cs,EvaluateProperty,The method has 5 parameters. Parameters: classValue' propertyType' propertyAccessor' value' IsSimpleType
Long Statement,Ramone,AsyncEventRequest,C:\repos\JornWildt_Ramone\Ramone\AsyncEventRequest.cs,HandleResponse,The length of the statement  "        HandleWebExceptionResult exResult = HandleWebException(ex' state.Url' state.Method' state.IncludeBody' state.RequestModifier' state.RetryLevel); " is 144.
Long Statement,Ramone,AsyncRequest,C:\repos\JornWildt_Ramone\Ramone\AsyncRequest.cs,DoRequestAsync,The length of the statement  "            await ((IMediaTypeWriterAsync)BodyCodec).WriteToAsync(new WriterContext(o' BodyData' request' Session' CodecParameters)); " is 121.
Long Statement,Ramone,BaseRequest,C:\repos\JornWildt_Ramone\Ramone\BaseRequest.cs,GetAcceptHeader,The length of the statement  "        throw new InvalidOperationException(string.Format("Could not find a reader codec for {0}. Try specifying Accept header."' t)); " is 126.
Long Statement,Ramone,BaseRequest,C:\repos\JornWildt_Ramone\Ramone\BaseRequest.cs,ApplyRequestStreamWrappers,The length of the statement  "          requestStream = ((IRequestStreamWrapper)interceptor.Value).Wrap(new RequestStreamWrapperContext(requestStream' request' Session)); " is 130.
Long Statement,Ramone,BaseRequest,C:\repos\JornWildt_Ramone\Ramone\BaseRequest.cs,HandleResponse,The length of the statement  "                throw new InvalidOperationException(string.Format("No redirect location supplied in {0} response from {1}."' (int)response.StatusCode' response.ResponseUri)); " is 158.
Long Statement,Ramone,BaseRequest,C:\repos\JornWildt_Ramone\Ramone\BaseRequest.cs,HandleUnauthorized,The length of the statement  "        if (handler != null && handler.HandleAuthorizationRequest(new AuthorizationContext(Session' response' scheme' parameters))) " is 123.
Long Statement,Ramone,BindingExtensions,C:\repos\JornWildt_Ramone\Ramone\BindingExtensions.cs,Bind,The length of the statement  "        throw new ArgumentException("Do not use session as Bind() parameter. You probably should have written 'Session.Bind(url)'."' "parameters"); " is 139.
Long Statement,Ramone,BindingExtensions,C:\repos\JornWildt_Ramone\Ramone\BindingExtensions.cs,BindTemplate,The length of the statement  "        throw new InvalidOperationException("It is not possible to bind relative URL templates without a base URL. Make sure session and/or service has been created with a base URL."); " is 176.
Long Statement,Ramone,HyperMediaExtensions,C:\repos\JornWildt_Ramone\Ramone\HyperMediaExtensions.cs,Select,The length of the statement  "        throw new SelectFailedException(string.Format("No {0} found matching rel='{1}' and mediaType='{2}'."' typeof(T)' rel' mediaType)); " is 130.
Long Statement,Ramone,MediaType,C:\repos\JornWildt_Ramone\Ramone\MediaType.cs,Matches,The length of the statement  "      return (IsTopLevelWildcard || t.IsTopLevelWildcard || TopLevelType.Equals(t.TopLevelType' StringComparison.OrdinalIgnoreCase)) " is 126.
Long Statement,Ramone.MediaTypes,TextCodecBase<TEntity>,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\TextCodecBase.cs,ReadFrom,The length of the statement  "      Encoding enc = MediaTypeParser.GetEncodingFromCharset(context.Response.ContentType' DefaultEncoding ?? context.Session.DefaultEncoding); " is 136.
Long Statement,Ramone.MediaTypes,TextCodecBase<TEntity>,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\TextCodecBase.cs,WriteTo,The length of the statement  "      Encoding enc = MediaTypeParser.GetEncodingFromCharset(context.Request.ContentType' DefaultEncoding ?? context.Session.DefaultEncoding); " is 135.
Long Statement,Ramone.MediaTypes.Html,HtmlAnchorExtensions,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\Html\HtmlAnchorExtensions.cs,Anchors,The length of the statement  "                 .Select(a => new Anchor(baseUrl' a.GetAttributeValue("href"' null)' a.GetAttributeValue("rel"' null)' (string)null' a.InnerText)); " is 130.
Long Statement,Ramone.MediaTypes.Html,HtmlAnchorExtensions,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\Html\HtmlAnchorExtensions.cs,Anchors,The length of the statement  "                 .Select(a => new Anchor(baseUrl' a.GetAttributeValue("href"' null)' a.GetAttributeValue("rel"' null)' (string)null' a.InnerText)); " is 130.
Long Statement,Ramone.MediaTypes.Html,HtmlAnchorExtensions,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\Html\HtmlAnchorExtensions.cs,Anchors,The length of the statement  "        select new Anchor(baseUrl' a.GetAttributeValue("href"' null)' a.GetAttributeValue("rel"' null)' (string)null' a.InnerText); " is 123.
Long Statement,Ramone.MediaTypes.Html,HtmlAnchorExtensions,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\Html\HtmlAnchorExtensions.cs,Anchor,The length of the statement  "      return new Anchor(baseUrl' node.GetAttributeValue("href"' null)' node.GetAttributeValue("rel"' null)' (string)null' node.InnerText); " is 132.
Long Statement,Ramone.MediaTypes.Html,HtmlLinkExtensions,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\Html\HtmlLinkExtensions.cs,Links,The length of the statement  "                 .Select(l => new Link(baseUrl' l.GetAttributeValue("href"' null)' l.GetAttributeValue("rel"' null)' l.GetAttributeValue("type"' null)' l.GetAttributeValue("title"' null))); " is 172.
Long Statement,Ramone.MediaTypes.Html,HtmlLinkExtensions,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\Html\HtmlLinkExtensions.cs,Links,The length of the statement  "                 .Select(l => new Link(baseUrl' l.GetAttributeValue("href"' null)' l.GetAttributeValue("rel"' null)' l.GetAttributeValue("type"' null)' l.GetAttributeValue("title"' null))); " is 172.
Long Statement,Ramone.MediaTypes.Html,HtmlLinkExtensions,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\Html\HtmlLinkExtensions.cs,Links,The length of the statement  "        select new Link(baseUrl' l.GetAttributeValue("href"' null)' l.GetAttributeValue("rel"' null)' l.GetAttributeValue("type"' null)' l.GetAttributeValue("title"' null)); " is 165.
Long Statement,Ramone.MediaTypes.Html,HtmlLinkExtensions,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\Html\HtmlLinkExtensions.cs,Link,The length of the statement  "      return new Link(baseUrl' node.GetAttributeValue("href"' null)' node.GetAttributeValue("rel"' null)' node.GetAttributeValue("type"' null)' node.GetAttributeValue("title"' null)); " is 177.
Long Statement,Ramone.MediaTypes.JsonPatch,JsonPatchDocument,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\JsonPatch\JsonPatchDocument.cs,Read,The length of the statement  "          throw new JsonPatchParserException(string.Format("Missing parameter '{0}' for op:'{1}'."' ex.ParamName' operation.op)' ex); " is 123.
Long Statement,Ramone.MediaTypes.JsonPatch,FromOperation,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\JsonPatch\JsonPatchDocument.cs,Apply,The length of the statement  "          throw new JsonPatchParserException(string.Format("Unsupport patch operation '{0}' on path '{1}' from '{2}'."' op' path' from)); " is 127.
Long Statement,Ramone.MediaTypes.JsonPatch,JsonPatchDocumentVisitor<TDocument>,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\JsonPatch\JsonPatchDocumentVisitor.cs,IfMatch,The length of the statement  "          throw new JsonPatchParserException(string.Format("Unable to convert '{0}' to {1} (got {2})."' path' typeof(TValue)' (value != null ? value.GetType().ToString() : "null"))); " is 172.
Long Statement,Ramone.MediaTypes.MultipartFormData,MultipartFormDataSerializerCodec,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\MultipartFormData\MultipartFormDataSerializerCodec.cs,WriteTo,The length of the statement  "      Serializer.Serialize(context.HttpStream' context.Data' enc' CodecArgument as string' context.Session.SerializerSettings); " is 121.
Long Statement,Ramone.OAuth1,OAuth1Extensions,C:\repos\JornWildt_Ramone\Ramone\OAuth1\OAuth1Extensions.cs,GetExistingInterceptor,The length of the statement  "        throw new InvalidOperationException("Could not locate OAuth request interceptor. Did you call Session.OAuth1Configure()?"); " is 123.
Long Statement,Ramone.OAuth1,SignatureHelper,C:\repos\JornWildt_Ramone\Ramone\OAuth1\SignatureHelper.cs,GenerateSignature,The length of the statement  "          string signatureBase = GenerateSignatureBase(url' consumerKey' callback' token' httpMethod' timeStamp' nonce' HMACSHA1SignatureType' out normalizedUrl' out normalizedRequestParameters); " is 185.
Long Statement,Ramone.OAuth2,OAuth2Extensions,C:\repos\JornWildt_Ramone\Ramone\OAuth2\OAuth2Extensions.cs,GetSettings,The length of the statement  "      throw new InvalidOperationException(string.Format("Unknown type '{0}' has been registered for OAuth2 settings with the session"' settings.GetType())); " is 150.
Long Statement,Ramone.Implementation,CodecManager,C:\repos\JornWildt_Ramone\Ramone\Implementation\CodecManager.cs,GetReaders,The length of the statement  "      return SelectReaders(t' MediaType.Wildcard).Select(e => new MediaTypeReaderRegistration(e.MediaType' e.ClrType' t' InstantiateReaderCodec(e.CodecType))); " is 153.
Long Statement,Ramone.Implementation,CodecManager,C:\repos\JornWildt_Ramone\Ramone\Implementation\CodecManager.cs,AddReader,The length of the statement  "        throw new ArgumentException(string.Format("Could not add reader for media-type {0} since one already exists (got {1} for '{2}')."' mediaType' entry.ClrType' entry.MediaType)); " is 175.
Long Statement,Ramone.Implementation,CodecManager,C:\repos\JornWildt_Ramone\Ramone\Implementation\CodecManager.cs,AddWriter,The length of the statement  "        throw new ArgumentException(string.Format("Could not add writer of type {0} for media-type '{1}' since one already exists (got {2} for '{3}')."' t' mediaType' entry.ClrType' entry.MediaType)); " is 192.
Long Statement,Ramone.Implementation,CodecManager,C:\repos\JornWildt_Ramone\Ramone\Implementation\CodecManager.cs,SelectWriters,The length of the statement  "      var anyMediaTypeMatch = RegisteredWriters.Where(w => w.MediaType.Matches(mediaType) && w.ClrType != null && w.ClrType.IsAssignableFrom(t)); " is 139.
Long Statement,Ramone.Implementation,CodecManager,C:\repos\JornWildt_Ramone\Ramone\Implementation\CodecManager.cs,SelectReaders,The length of the statement  "      var anyMediaTypeMatch = RegisteredReaders.Where(r => r.MediaType.Matches(mediaType) && r.ClrType != null && r.ClrType.IsAssignableFrom(t)); " is 139.
Long Statement,Ramone.Utility,MethodDescription,C:\repos\JornWildt_Ramone\Ramone\Utility\MethodDescription.cs,GetMethod,The length of the statement  "        throw new InvalidOperationException(string.Format("Trying to get meta information about method '{0}' but cannot find it: unknown method."' method)); " is 148.
Long Statement,Ramone.Utility,FormUrlEncodingPropertyVisitor,C:\repos\JornWildt_Ramone\Ramone\Utility\FormUrlEncodingPropertyVisitor.cs,File,The length of the statement  "      throw new InvalidOperationException(string.Format("Cannot serialize Ramone IFile '{0}' as {1}."' name' MediaType.ApplicationFormUrlEncoded)); " is 141.
Long Statement,Ramone.Utility,WebLinkParser,C:\repos\JornWildt_Ramone\Ramone\Utility\WebLinkParser.cs,Error,The length of the statement  "      throw new FormatException(string.Format("Invalid HTTP Web Link. {0} in '{1}' (around pos {2})."' msg' InputString' InputPos)); " is 126.
Long Statement,Ramone.Utility.ObjectSerialization,ObjectSerializer,C:\repos\JornWildt_Ramone\Ramone\Utility\ObjectSerialization\ObjectSerializer.cs,Serialize,The length of the statement  "          throw new InvalidOperationException($"Circular object reference detected while serializing data. This is not supported. Data type is '{dataType}'"); " is 148.
Long Statement,Ramone.Utility.ObjectSerialization,ObjectSerializer,C:\repos\JornWildt_Ramone\Ramone\Utility\ObjectSerialization\ObjectSerializer.cs,Evaluate,The length of the statement  "        object p = EvaluateProperty(classValue' dictionaryArgTypes[1]' () => ((IDictionary)classValue)[propertyName]' value' out isSimpleType); " is 135.
Long Statement,Ramone.Utility.ObjectSerialization,ObjectSerializer,C:\repos\JornWildt_Ramone\Ramone\Utility\ObjectSerialization\ObjectSerializer.cs,Evaluate,The length of the statement  "          object propertyValue = EvaluateProperty(classValue' property.PropertyType' () => property.GetValue(classValue' new object[] { })' value' out IsSimpleType); " is 155.
Complex Conditional,Ramone.MediaTypes.JsonPatch,JsonPatchDocumentVisitor<TDocument>,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\JsonPatch\JsonPatchDocumentVisitor.cs,IfMatch,The conditional expression  "value is TValue || value == null && (!type.IsValueType || isGenericNullableType)"  is complex.
Complex Conditional,Ramone.OAuth1,SignatureHelper,C:\repos\JornWildt_Ramone\Ramone\OAuth1\SignatureHelper.cs,GenerateSignatureBase,The conditional expression  "!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443))"  is complex.
Complex Conditional,Ramone.Implementation,RamoneSession,C:\repos\JornWildt_Ramone\Ramone\Implementation\RamoneSession.cs,GetAllowedRedirects,The conditional expression  "responseCode == 301 || responseCode == 302 || responseCode == 303 || responseCode == 307"  is complex.
Complex Conditional,Ramone.Utility.ObjectSerialization,ObjectSerializer,C:\repos\JornWildt_Ramone\Ramone\Utility\ObjectSerialization\ObjectSerializer.cs,Serialize,The conditional expression  "data != null && (dataType != null && dataType.IsClass || dataType == null && data.GetType().IsClass)"  is complex.
Empty Catch Block,Ramone.Utility,ContextRegistrator,C:\repos\JornWildt_Ramone\Ramone\Utility\ContextRegistrator.cs,RegisterContext,The method has an empty catch block.
Empty Catch Block,Ramone.Utility,TempFile,C:\repos\JornWildt_Ramone\Ramone\Utility\TempFile.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Ramone.Utility,WebLinkParser,C:\repos\JornWildt_Ramone\Ramone\Utility\WebLinkParser.cs,Parse,The method has an empty catch block.
Empty Catch Block,Ramone.Utility,WebLinkParser,C:\repos\JornWildt_Ramone\Ramone\Utility\WebLinkParser.cs,ParseLink,The method has an empty catch block.
Magic Number,Ramone,AuthorizationExtensions,C:\repos\JornWildt_Ramone\Ramone\AuthorizationExtensions.cs,BasicAuthentication,The following statement contains a magic number: string token = Convert.ToBase64String(Encoding.GetEncoding(1252).GetBytes(username + ":" + password));
Magic Number,Ramone,BaseRequest,C:\repos\JornWildt_Ramone\Ramone\BaseRequest.cs,HandleResponse,The following statement contains a magic number: try        {          connectionId = ConnectionStatistics.RegisterConnection(response);            // Handle redirects          if (300 <= (int)response.StatusCode && (int)response.StatusCode <= 399)          {            int allowedRedirectCount = Session.GetAllowedRedirects((int)response.StatusCode);            if (retryLevel < allowedRedirectCount)            {              bool allowAutomaticRedirect = false;              if (response.StatusCode == HttpStatusCode.SeeOther)              {                method = "GET";                includeBody = false;                allowAutomaticRedirect = true;              }              else if (method.Equals("GET"' StringComparison.InvariantCultureIgnoreCase)                       || method.Equals("HEAD"' StringComparison.InvariantCultureIgnoreCase))              {                allowAutomaticRedirect = true;              }                if (allowAutomaticRedirect)              {                Uri location = response.LocationAsUri();                if (location == null)                  throw new InvalidOperationException(string.Format("No redirect location supplied in {0} response from {1}."' (int)response.StatusCode' response.ResponseUri));                  response.Close();                if (connectionId != null)                  ConnectionStatistics.DiscardConnection(connectionId.Value);                  return DoRequest(location' method' includeBody' requestModifier' retryLevel + 1);              }            }          }            return new Response(response' Session' retryLevel' connectionId);        }        catch (Exception)        {          response.Close();          if (connectionId != null)            ConnectionStatistics.DiscardConnection(connectionId.Value);          throw;        }
Magic Number,Ramone,BaseRequest,C:\repos\JornWildt_Ramone\Ramone\BaseRequest.cs,HandleResponse,The following statement contains a magic number: try        {          connectionId = ConnectionStatistics.RegisterConnection(response);            // Handle redirects          if (300 <= (int)response.StatusCode && (int)response.StatusCode <= 399)          {            int allowedRedirectCount = Session.GetAllowedRedirects((int)response.StatusCode);            if (retryLevel < allowedRedirectCount)            {              bool allowAutomaticRedirect = false;              if (response.StatusCode == HttpStatusCode.SeeOther)              {                method = "GET";                includeBody = false;                allowAutomaticRedirect = true;              }              else if (method.Equals("GET"' StringComparison.InvariantCultureIgnoreCase)                       || method.Equals("HEAD"' StringComparison.InvariantCultureIgnoreCase))              {                allowAutomaticRedirect = true;              }                if (allowAutomaticRedirect)              {                Uri location = response.LocationAsUri();                if (location == null)                  throw new InvalidOperationException(string.Format("No redirect location supplied in {0} response from {1}."' (int)response.StatusCode' response.ResponseUri));                  response.Close();                if (connectionId != null)                  ConnectionStatistics.DiscardConnection(connectionId.Value);                  return DoRequest(location' method' includeBody' requestModifier' retryLevel + 1);              }            }          }            return new Response(response' Session' retryLevel' connectionId);        }        catch (Exception)        {          response.Close();          if (connectionId != null)            ConnectionStatistics.DiscardConnection(connectionId.Value);          throw;        }
Magic Number,Ramone,MediaType,C:\repos\JornWildt_Ramone\Ramone\MediaType.cs,TryParse,The following statement contains a magic number: if (types.Length != 2)        {          error = string.Format("Cannot instantiate MediaType from '{0}' - expected exactly one '/'."' mediaType);          return false;        }
Magic Number,Ramone.AuthorizationInterceptors,BasicAuthorizationInterceptor,C:\repos\JornWildt_Ramone\Ramone\AuthorizationInterceptors\BasicAuthorizationInterceptor.cs,HeadersReady,The following statement contains a magic number: string token = Convert.ToBase64String(Encoding.GetEncoding(1252).GetBytes(Username + ":" + Password));
Magic Number,Ramone.OAuth1,SignatureHelper,C:\repos\JornWildt_Ramone\Ramone\OAuth1\SignatureHelper.cs,GenerateSignatureBase,The following statement contains a magic number: if (!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443)))        {          normalizedUrl += ":" + url.Port;        }
Magic Number,Ramone.OAuth1,SignatureHelper,C:\repos\JornWildt_Ramone\Ramone\OAuth1\SignatureHelper.cs,GenerateSignatureBase,The following statement contains a magic number: if (!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443)))        {          normalizedUrl += ":" + url.Port;        }
Magic Number,Ramone.OAuth1,SignatureHelper,C:\repos\JornWildt_Ramone\Ramone\OAuth1\SignatureHelper.cs,GenerateTimeStamp,The following statement contains a magic number: TimeSpan ts = DateTime.UtcNow - new DateTime(1970' 1' 1' 0' 0' 0' 0);
Magic Number,Ramone.OAuth1,SignatureHelper,C:\repos\JornWildt_Ramone\Ramone\OAuth1\SignatureHelper.cs,GenerateNonce,The following statement contains a magic number: return random.Next(123400' 9999999).ToString();
Magic Number,Ramone.OAuth1,SignatureHelper,C:\repos\JornWildt_Ramone\Ramone\OAuth1\SignatureHelper.cs,GenerateNonce,The following statement contains a magic number: return random.Next(123400' 9999999).ToString();
Magic Number,Ramone.OAuth2,OAuth2Extensions,C:\repos\JornWildt_Ramone\Ramone\OAuth2\OAuth2Extensions.cs,OAuth2_GetAuthorizationRequestUrl,The following statement contains a magic number: string authorizationRequestState = RandomStrings.GetRandomStringWithLettersAndDigitsOnly(20);
Magic Number,Ramone.Implementation,RamoneService,C:\repos\JornWildt_Ramone\Ramone\Implementation\RamoneService.cs,GetAllowedRedirects,The following statement contains a magic number: if (responseCode == 303)          return 10;        else          return 0;
Magic Number,Ramone.Implementation,RamoneService,C:\repos\JornWildt_Ramone\Ramone\Implementation\RamoneService.cs,GetAllowedRedirects,The following statement contains a magic number: if (responseCode == 303)          return 10;        else          return 0;
Magic Number,Ramone.Implementation,RamoneSession,C:\repos\JornWildt_Ramone\Ramone\Implementation\RamoneSession.cs,GetAllowedRedirects,The following statement contains a magic number: if (responseCode == 301 || responseCode == 302 || responseCode == 303 || responseCode == 307)          return 10;        else          return 0;
Magic Number,Ramone.Implementation,RamoneSession,C:\repos\JornWildt_Ramone\Ramone\Implementation\RamoneSession.cs,GetAllowedRedirects,The following statement contains a magic number: if (responseCode == 301 || responseCode == 302 || responseCode == 303 || responseCode == 307)          return 10;        else          return 0;
Magic Number,Ramone.Implementation,RamoneSession,C:\repos\JornWildt_Ramone\Ramone\Implementation\RamoneSession.cs,GetAllowedRedirects,The following statement contains a magic number: if (responseCode == 301 || responseCode == 302 || responseCode == 303 || responseCode == 307)          return 10;        else          return 0;
Magic Number,Ramone.Implementation,RamoneSession,C:\repos\JornWildt_Ramone\Ramone\Implementation\RamoneSession.cs,GetAllowedRedirects,The following statement contains a magic number: if (responseCode == 301 || responseCode == 302 || responseCode == 303 || responseCode == 307)          return 10;        else          return 0;
Magic Number,Ramone.Implementation,RamoneSession,C:\repos\JornWildt_Ramone\Ramone\Implementation\RamoneSession.cs,GetAllowedRedirects,The following statement contains a magic number: if (responseCode == 301 || responseCode == 302 || responseCode == 303 || responseCode == 307)          return 10;        else          return 0;
Magic Number,Ramone.Utility,DateTimeUtility,C:\repos\JornWildt_Ramone\Ramone\Utility\DateTimeUtility.cs,ToUnixTime,The following statement contains a magic number: TimeSpan timeSpan = now - new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Ramone.Utility,HeaderEncodingParser,C:\repos\JornWildt_Ramone\Ramone\Utility\HeaderEncodingParser.cs,Parse,The following statement contains a magic number: string[] parts = header.Split(new char[] {'\''}' 3);
Magic Number,Ramone.Utility,HeaderEncodingParser,C:\repos\JornWildt_Ramone\Ramone\Utility\HeaderEncodingParser.cs,Parse,The following statement contains a magic number: string charset = (parts.Length == 3 ? parts[0] : null);
Magic Number,Ramone.Utility,HeaderEncodingParser,C:\repos\JornWildt_Ramone\Ramone\Utility\HeaderEncodingParser.cs,Parse,The following statement contains a magic number: string language = (parts.Length == 3 ? parts[1] : null);
Magic Number,Ramone.Utility.JsonWebToken,AssertionArgs,C:\repos\JornWildt_Ramone\Ramone\Utility\JsonWebToken\AssertionArgs.cs,AssertionArgs,The following statement contains a magic number: ExpireTime = TimeSpan.FromSeconds(3600);
Magic Number,Ramone.Utility.JsonWebToken,AssertionArgs,C:\repos\JornWildt_Ramone\Ramone\Utility\JsonWebToken\AssertionArgs.cs,AssertionArgs,The following statement contains a magic number: IssueTimeOffset = TimeSpan.FromSeconds(-10);
Missing Default,Ramone.MediaTypes.JsonPatch,JsonPatchDocument,C:\repos\JornWildt_Ramone\Ramone\MediaTypes\JsonPatch\JsonPatchDocument.cs,Read,The following switch statement is missing a default case: switch (operation.op)            {              case "add":                patch.Add(operation.path' operation.value);                break;              case "remove":                patch.Remove(operation.path);                break;              case "replace":                patch.Replace(operation.path' operation.value);                break;              case "move":                patch.Move(operation.from' operation.path);                break;              case "copy":                patch.Copy(operation.from' operation.path);                break;              case "test":                patch.Test(operation.path' operation.value);                break;              case null:                throw new JsonPatchParserException("No 'op' property found.");            }
