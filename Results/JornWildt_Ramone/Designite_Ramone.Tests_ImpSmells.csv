Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Ramone.Tests.Utility,ObjectSerializerFormaterTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerFormaterTests.cs,,The length of the parameter MyObjectSerializerFormaterManager is 33.
Long Statement,Ramone.Tests,AcceptTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AcceptTests.cs,CanSetMultipleAcceptHeaderWithQValueFromString,The length of the statement  "        Assert.IsTrue(headers.Any(h => h == "Accept: application/xml; q=0.34' application/json; q=0.12")' "Must contain Accept header with q-value"); " is 141.
Long Statement,Ramone.Tests,AcceptTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AcceptTests.cs,CanSetMultipleAcceptHeaderWithQValueFromMediaType,The length of the statement  "        Assert.IsTrue(headers.Any(h => h == "Accept: application/xml; q=0.89' application/xhtml+xml; q=1.00")' "Must contain Accept header"); " is 133.
Long Statement,Ramone.Tests,AcceptTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AcceptTests.cs,ItUsesMultipleDefaultAcceptFromSessionWithAdditionalAcceptFromRequest,The length of the statement  "        Assert.IsTrue(headers.Any(h => h == "Accept: application/json' text/csv; q=0.21' application/xml; q=0.88' text/plain")' "Must contain Accept header with q-value"); " is 163.
Long Statement,Ramone.Tests,AcceptTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AcceptTests.cs,ItUsesMultipleDefaultAcceptFromServiceWithAdditionalAcceptFromRequest,The length of the statement  "        Assert.IsTrue(headers.Any(h => h == "Accept: application/json' text/csv; q=0.21' application/xml; q=0.88' text/plain' text/html")' "Must contain Accept header with q-value"); " is 174.
Long Statement,Ramone.Tests,GetTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_Async.cs,WhenSpecifyingCharsetForGetItThrows,The length of the statement  "      await AssertThrowsAsync<InvalidOperationException>(async () => await dossierReq.Charset("utf-8").Async().Get<Dossier>()); " is 121.
Long Statement,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedDirectly,The length of the statement  "        Assert.IsTrue(headers.Any(h => h == "If-Modified-Since: Wed' 01 May 2013 08:22:11 GMT")' "Must contain If-Modified-Since header"); " is 130.
Long Statement,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedViaHeader,The length of the statement  "        Assert.IsTrue(headers.Any(h => h == "If-Modified-Since: Wed' 01 May 2013 08:22:11 GMT")' "Must contain If-Modified-Since header"); " is 130.
Long Statement,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedDirectly_AsyncEvent,The length of the statement  "            Assert.IsTrue(headers.Any(h => h == "If-Modified-Since: Wed' 01 May 2013 08:22:11 GMT")' "Must contain If-Modified-Since header"); " is 130.
Long Statement,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedViaHeader_AsyncEvent,The length of the statement  "            Assert.IsTrue(headers.Any(h => h == "If-Modified-Since: Wed' 01 May 2013 08:22:11 GMT")' "Must contain If-Modified-Since header"); " is 130.
Long Statement,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedDirectly,The length of the statement  "        Assert.IsTrue(headers.Any(h => h == "If-Unmodified-Since: Wed' 01 May 2013 08:22:11 GMT")' "Must contain If-Unmodified-Since header"); " is 134.
Long Statement,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedViaHeader,The length of the statement  "        Assert.IsTrue(headers.Any(h => h == "If-Unmodified-Since: Wed' 01 May 2013 08:22:11 GMT")' "Must contain If-Unmodified-Since header"); " is 134.
Long Statement,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedDirectly_AsyncEvent,The length of the statement  "            Assert.IsTrue(headers.Any(h => h == "If-Unmodified-Since: Wed' 01 May 2013 08:22:11 GMT")' "Must contain If-Unmodified-Since header"); " is 134.
Long Statement,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedViaHeader_AsyncEvent,The length of the statement  "              Assert.IsTrue(headers.Any(h => h == "If-Unmodified-Since: Wed' 01 May 2013 08:22:11 GMT")' "Must contain If-Unmodified-Since header"); " is 134.
Long Statement,Ramone.Tests,ParallelTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ParallelTests.cs,CanRunMultipleRequestsInParallel,The length of the statement  "      // Sometime this would fail with a null reference in ConnectionStatistics because of multi threaded access to a dictionary " is 122.
Long Statement,Ramone.Tests,ParallelTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ParallelTests.cs,CanRunMultipleRequestsInParallel,The length of the statement  "      Parallel.Invoke(DoRequest' DoRequest' DoRequest' DoRequest' DoRequest' DoRequest' DoRequest' DoRequest' DoRequest' DoRequest); " is 126.
Long Statement,Ramone.Tests,PatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PatchTests.cs,CanPatchAndGetResultWithAcceptMediaType,The length of the statement  "      using (var title = DossierReq.AsFormUrlEncoded().Accept<Dossier>(CMSConstants.CMSMediaType).Patch(new { title = "Duh" })) " is 121.
Long Statement,Ramone.Tests,AuthenticationTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AuthenticationTests.cs,WhenAuthorizationCodeIsSendItWorks,The length of the statement  "      Session.RequestInterceptors.Add("WhenAuthorizationCodeIsSendItWorks"' new BasicAuthorizationInterceptor("John"' "magic")); " is 122.
Long Statement,Ramone.Tests,AuthenticationTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AuthenticationTests.cs,WhenAuthorizationCodeIsSendItWorks_AsyncEvent,The length of the statement  "      Session.RequestInterceptors.Add("WhenAuthorizationCodeIsSendItWorks"' new BasicAuthorizationInterceptor("John"' "magic")); " is 122.
Long Statement,Ramone.Tests,BasicAuthorizationHandler,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AuthenticationTests.cs,HandleAuthorizationRequest,The length of the statement  "        context.Session.RequestInterceptors.Add("WhenAuthorizationCodeIsSendItWorks"' new BasicAuthorizationInterceptor("John"' "magic")); " is 130.
Long Statement,Ramone.Tests,ConfigurationTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ConfigurationTests.cs,CanAvoidAddingStandardCodecs,The length of the statement  "      AssertThrows<ArgumentException>(() => service.CodecManager.GetReader(typeof(Stream)' MediaType.ApplicationOctetStream)); " is 120.
Long Statement,Ramone.Tests,PutTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PutTests.cs,CanPutEmptyBody_Typed,The length of the statement  "      using (Response<string> response = request.Accept("text/plain").ContentType("application/x-www-url-formencoded").Put<string>()) " is 127.
Long Statement,Ramone.Tests,SetupFixture,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SetupFixture.cs,TearDown,The length of the statement  "        Assert.AreEqual(0' connections.Count' "All connections must have been closed (showing currently number of open connections)."); " is 127.
Long Statement,Ramone.Tests.Blog,BlogTestHelper,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Blog\BlogTestHelper.cs,TestFixtureSetUp,The length of the statement  "        TestService.CodecManager.AddCodec<Resources.CreatePostDescriptor' Codecs.Html.CreatePostDescriptorCodec_Html>(MediaType.TextHtml); " is 130.
Long Statement,Ramone.Tests.Blog,HtmlDocumentTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Blog\HtmlDocumentTests.cs,CanAddNewBlogItemIncludingImage,The length of the statement  "          IKeyValueForm form = createDescriptor.Body.DocumentNode.SelectNodes(@"//form[@id=""create""]").First().Form(createDescriptor); " is 126.
Long Statement,Ramone.Tests.Blog.Codecs.Html,BlogCodec_Html,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Blog\Codecs\Html\BlogCodec_Html.cs,ReadFromHtml,The length of the statement  "      List<ILink> blogLinks = new List<ILink>(doc.Anchors(context.Response.ResponseUri).Cast<ILink>().Union(doc.Links(context.Response.ResponseUri))); " is 144.
Long Statement,Ramone.Tests.HyperMedia,LinkTemplateTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\LinkTemplateTests.cs,SetUp,The length of the statement  "      Url1 = new OpenSearchUrl { RelationType = "tv"' MediaType = "text/html"' Template = "http://search.com?q={searchTerms}" }; " is 122.
Long Statement,Ramone.Tests.HyperMedia,LinkTemplateTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\LinkTemplateTests.cs,SetUp,The length of the statement  "      Url2 = new OpenSearchUrl { RelationType = "home"' MediaType = "text/html"' Template = "http://search.com?q={searchTerms}" }; " is 124.
Long Statement,Ramone.Tests.HyperMedia,LinkTemplateTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\LinkTemplateTests.cs,SetUp,The length of the statement  "      Url3 = new OpenSearchUrl { RelationType = "tv"' MediaType = "application/atom+xml"' Template = "http://search.com?q={searchTerms}" }; " is 133.
Long Statement,Ramone.Tests.HyperMedia,LinkTemplateTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\LinkTemplateTests.cs,SetUp,The length of the statement  "      Url4 = new OpenSearchUrl { RelationType = "home"' MediaType = "application/atom+xml"' Template = "http://search.com?q={searchTerms}" }; " is 135.
Long Statement,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArrayWithDefaultMediaTypeOctetStream,The length of the statement  "        Assert.IsTrue(headers.Any(h => h == "Content-Type: application/octet-stream")' "Must contain content type octet stream"); " is 121.
Long Statement,Ramone.Tests.MediaTypes,StreamCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\StreamCodecTests.cs,CanPostStreamWithDefaultMediaTypeOctetStream,The length of the statement  "          Assert.IsTrue(headers.Any(h => h == "Content-Type: application/octet-stream")' "Must contain content type octet stream"); " is 121.
Long Statement,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchCodecTests.cs,CanPatchDocument,The length of the statement  "        Assert.AreEqual(@"[{""value"":10'""op"":""add""'""path"":""/X""}'{""op"":""remove""'""path"":""/Y""}'{""value"":""üÆ$€""'""op"":""add""'""path"":""/øÅ""}]"' response.Body); " is 172.
Long Statement,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanBuildAdd,The length of the statement  "      Assert.AreEqual(@"[{""value"":{""Name"":""Liza""'""Id"":0}'""op"":""add""'""path"":""/RelatedParties""}]"' patch.ToString()); " is 125.
Long Statement,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanBuildTypedAdd,The length of the statement  "      Assert.AreEqual(@"[{""value"":{""Name"":""Liza""'""Id"":0}'""op"":""add""'""path"":""/RelatedParties""}]"' patch.ToString()); " is 125.
Long Statement,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanBuildTypedReplaceWithObjectValue,The length of the statement  "      Assert.AreEqual(@"[{""value"":{""Name"":""John""'""Id"":0}'""op"":""replace""'""path"":""/Responsible""}]"' patch.ToString()); " is 126.
Long Statement,Ramone.Tests.OAuth2,OAuth2ResourceOwnerPasswordCredentialsGrantTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\OAuth2\OAuth2ResourceOwnerPasswordCredentialsGrantTests.cs,CanRestoreSessionStateWithAccessToken,The length of the statement  "      Request protectedResourceRequest = newSession.OAuth2_RestoreState(state).Bind(OAuth2TestConstants.ProtectedResourcePath); " is 121.
Long Statement,Ramone.Tests.OAuth2,OAuth2Tests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\OAuth2\OAuth2Tests.cs,WhenDoingOAuth2BeforeConfiguringItThrowsInvalidOperation,The length of the statement  "        () => Session.OAuth2_GetAccessTokenUsingOwnerUsernamePassword(OAuth2TestConstants.Username' OAuth2TestConstants.UserPassword)); " is 127.
Long Statement,Ramone.Tests.HyperMedia.Html,FormTest,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\Html\FormTest.cs,GetForm,The length of the statement  "      Request formRequest = Session.Bind(FormTemplate' new { actionUrlMode = actionUrlMode' encType = encType' charset = charset' method = method' InputText = ""' Select = "" }); " is 172.
Long Statement,Ramone.Tests.MediaTypes.Atom,AtomTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\Atom\AtomTests.cs,CanSerializeAtomLinksToCorrectFormat,The length of the statement  "      string correctXml = @"<link href=""http://dr.dk/"" rel=""test"" type=""text/html"" title=""DR"" xmlns=""http://www.w3.org/2005/Atom"" />"; " is 138.
Long Statement,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostUnregisteredFormUrlEncoded,The length of the statement  "      using (Response<string> response = formdataReq.Accept("text/plain").ContentType("application/x-www-form-urlencoded").Post<string>(data)) " is 136.
Long Statement,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostRegisteredFormUrlEncoded,The length of the statement  "      Session.Service.CodecManager.AddCodec<RegisteredData' FormUrlEncodedSerializerCodec>(MediaType.ApplicationFormUrlEncoded); " is 122.
Long Statement,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostFormUrlEncodedWithEncoding,The length of the statement  "        Assert.AreNotEqual("ÆØÅüî-10"' response.Body' "What a hack: OpenRasta always assume UTF-8' so if body is not identical to the expected it must mean that it was actually send in non-UTF-8!"); " is 190.
Long Statement,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostComplexClass,The length of the statement  "        Assert.AreEqual("|X=15|Y=Abc|IntArray[0]=1|IntArray[1]=2|SubC.SubC.Data[0]=Benny|SubC.Data[0]=Brian|Dict[abc]=123|Dict[qwe]=xyz|Date=2012-10-30T12:13:14|Dou=15.234|GID=" + g.ToString()' response.Body); " is 201.
Long Statement,Ramone.Tests.MediaTypes.Json,JsonSerializerCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\Json\JsonSerializerCodecTests.cs,CanPostUnregisteredType,The length of the statement  "      using (Response<UnregisteredClass> response = request.Accept("application/json").ContentType("application/json").Post<UnregisteredClass>(data)) " is 143.
Long Statement,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostSimpleMultipartFormData,The length of the statement  "      using (Response<string> response = formdataReq.Accept("text/plain").ContentType("multipart/form-data").Post<string>(data)) " is 122.
Long Statement,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostMultipartFormDataWithFileUsingHashtable,The length of the statement  "      using (Response<string> response = formdataReq.Accept("text/plain").ContentType("multipart/form-data").Post<string>(data)) " is 122.
Long Statement,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostMultipartFormDataWithSpecialFilenameUsingHashtable_ItMustReplaceSpecialCharsWithX,The length of the statement  "      using (Response<string> response = formdataReq.Accept("text/plain").ContentType("multipart/form-data").Post<string>(data)) " is 122.
Long Statement,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostMultipartFormDataWithSpecialFilename_ItMustReplaceSpecialCharsWithX,The length of the statement  "      using (Response<string> response = formdataReq.Accept("text/plain").ContentType("multipart/form-data").Post<string>(data)) " is 122.
Long Statement,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostMultipartFormDataWithFilenameContainingQuotes,The length of the statement  "      using (Response<string> response = formdataReq.Accept("text/plain").ContentType("multipart/form-data").Post<string>(data)) " is 122.
Long Statement,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostMultipartFormDataWithBinaryFile,The length of the statement  "      using (Response<string> response = formdataReq.Accept("text/plain").ContentType("multipart/form-data").Post<string>(data)) " is 122.
Long Statement,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostMultipartFormDataWithAdditionalFilenameSpecified,The length of the statement  "      using (Response<string> response = formdataReq.Accept("text/plain").ContentType("multipart/form-data").Post<string>(data)) " is 122.
Long Statement,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostSMultipartFormDataFromAnonymousTypes,The length of the statement  "      using (Response<string> response = formdataReq.Accept("text/plain").ContentType("multipart/form-data").Post<string>(data)) " is 122.
Long Statement,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostComplexClass,The length of the statement  "        Assert.AreEqual("|X=15|Y=Abc|IntArray[0]=1|IntArray[1]=2|SubC.SubC.Data[0]=Benny|SubC.Data[0]=Brian|Dict[abc]=123|Dict[qwe]=xyz|Date=2012-10-30T12:13:14|Dou=15.234|GID=" + g.ToString()' response.Body); " is 201.
Long Statement,Ramone.Tests.MediaTypes.Xml,XmlSerializerCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\Xml\XmlSerializerCodecTests.cs,CanPostUnregisteredType,The length of the statement  "      using (Response<UnregisteredClass> response = request.Accept("application/xml").ContentType("application/xml").Post<UnregisteredClass>(data)) " is 141.
Long Statement,Ramone.Tests.OAuth1,OAuth1HelperTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\OAuth1\OAuth1HelperTests.cs,CanGenerateSignatureBase,The length of the statement  "      string signatureBase = Helper.GenerateSignatureBase(RequestUrl' "xckey"' "xcb"' "xat"' "post"' "12345"' "abcd"' SignatureHelper.HMACSHA1SignatureType' out normalizedUrl' out normalizedRequestParameters); " is 203.
Long Statement,Ramone.Tests.OAuth1,OAuth1HelperTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\OAuth1\OAuth1HelperTests.cs,CanGenerateSignatureBase,The length of the statement  "      Assert.AreEqual("POST&http%3A%2F%2Fhome.dk%2Fset&age%3D6%26name%3DJ%25C3%25B8rn%26oauth_callback%3Dxcb%26oauth_consumer_key%3Dxckey%26oauth_nonce%3Dabcd%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D12345%26oauth_token%3Dxat%26oauth_version%3D1.0"'  " is 259.
Long Statement,Ramone.Tests.OAuth1,OAuth1HelperTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\OAuth1\OAuth1HelperTests.cs,CanGenerateSignatureBaseForSpecialChars,The length of the statement  "      string signatureBase = Helper.GenerateSignatureBase(RequestUrl' "xÆckey"' "xØcb"' "xÅat"' "post"' "12345"' "abcd"' SignatureHelper.HMACSHA1SignatureType' out normalizedUrl' out normalizedRequestParameters); " is 206.
Long Statement,Ramone.Tests.OAuth1,OAuth1HelperTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\OAuth1\OAuth1HelperTests.cs,CanGenerateSignatureBaseForSpecialChars,The length of the statement  "      Assert.AreEqual("POST&http%3A%2F%2Fhome.dk%2Fset&age%3D6%26name%3DJ%25C3%25B8rn%26oauth_callback%3Dx%25C3%2598cb%26oauth_consumer_key%3Dx%25C3%2586ckey%26oauth_nonce%3Dabcd%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D12345%26oauth_token%3Dx%25C3%2585at%26oauth_version%3D1.0"' " is 289.
Long Statement,Ramone.Tests.Utility,Base64UtilityTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\Base64UtilityTests.cs,CanBase64UrlEncode,The length of the statement  "      Assert.AreEqual("eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ"' encodedPayload); " is 130.
Long Statement,Ramone.Tests.Utility,LinkHeaderTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\LinkHeaderTests.cs,CanReadInternationalTitles,The length of the statement  "      string header = @"<http://example.com/TheBook/chapter6>; rel=""previous""; title*=""UTF-8'de'N%c3%a4chstes%20Kapitel"""; " is 120.
Long Statement,Ramone.Tests.Utility,LinkHeaderTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\LinkHeaderTests.cs,WhenBothNormalAndIntlTitleExistsItSelectsInternational,The length of the statement  "      string header1 = @"<http://example.com/TheBook/chapter6>; rel=""previous""; title=""abc""; title*=""UTF-8'de'N%c3%a4chstes%20Kapitel"""; " is 136.
Long Statement,Ramone.Tests.Utility,LinkHeaderTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\LinkHeaderTests.cs,WhenBothNormalAndIntlTitleExistsItSelectsInternational,The length of the statement  "      string header2 = @"<http://example.com/TheBook/chapter6>; rel=""previous""; title*=""UTF-8'de'N%c3%a4chstes%20Kapitel""; title=""abc"""; " is 136.
Long Statement,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexClass,The length of the statement  "      Assert.AreEqual("|X=15|Y=Abc|IntArray[0]=1|IntArray[1]=2|SubC.SubC.Data[0][w]=99|SubC.Data[0]=5|SubC.Data[1]=Hello|Dict[123]=abc|Date=2012-05-30T19:20:21"' result); " is 164.
Magic Number,Ramone.Tests,AcceptTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AcceptTests.cs,CanSetAcceptHeaderWithQValueFromString,The following statement contains a magic number: request.Accept("application/xml"' 0.34);
Magic Number,Ramone.Tests,AcceptTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AcceptTests.cs,CanSetMultipleAcceptHeaderWithQValueFromString,The following statement contains a magic number: request.Accept("application/xml"' 0.34).Accept("application/json"' 0.12);
Magic Number,Ramone.Tests,AcceptTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AcceptTests.cs,CanSetMultipleAcceptHeaderWithQValueFromString,The following statement contains a magic number: request.Accept("application/xml"' 0.34).Accept("application/json"' 0.12);
Magic Number,Ramone.Tests,AcceptTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AcceptTests.cs,CanSetAcceptHeaderWithQValueFromMediaType,The following statement contains a magic number: request.Accept(MediaType.ApplicationXml' 0.34);
Magic Number,Ramone.Tests,AcceptTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AcceptTests.cs,CanSetMultipleAcceptHeaderWithQValueFromMediaType,The following statement contains a magic number: request.Accept(MediaType.ApplicationXml' 0.89).Accept(MediaType.ApplicationXHtml' 1);
Magic Number,Ramone.Tests,AcceptTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AcceptTests.cs,CanSetTypedAcceptHeaderWithQValueFromString,The following statement contains a magic number: var request = AcceptSession.Bind(HeaderListUrl).Accept<HeaderList>("application/xml"' 0.34);
Magic Number,Ramone.Tests,AcceptTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AcceptTests.cs,ItUsesMultipleDefaultAcceptFromSessionWithAdditionalAcceptFromRequest,The following statement contains a magic number: AcceptSession.AlwaysAccept(MediaType.ApplicationXml' 0.88)                     .AlwaysAccept(MediaType.TextPlain);
Magic Number,Ramone.Tests,AcceptTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AcceptTests.cs,ItUsesMultipleDefaultAcceptFromSessionWithAdditionalAcceptFromRequest,The following statement contains a magic number: var request = AcceptSession.Bind(HeaderListUrl).Accept(MediaType.ApplicationJson).Accept("text/csv"' 0.21);
Magic Number,Ramone.Tests,AcceptTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AcceptTests.cs,ItUsesMultipleDefaultAcceptFromServiceWithAdditionalAcceptFromRequest,The following statement contains a magic number: IService service = RamoneConfiguration.NewService(BaseUrl)                                              .AlwaysAccept(MediaType.ApplicationXml' 0.88)                                              .AlwaysAccept(MediaType.TextPlain);
Magic Number,Ramone.Tests,AcceptTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AcceptTests.cs,ItUsesMultipleDefaultAcceptFromServiceWithAdditionalAcceptFromRequest,The following statement contains a magic number: var request = session.Bind(HeaderListUrl).Accept(MediaType.ApplicationJson).Accept("text/csv"' 0.21);
Magic Number,Ramone.Tests,AdditionalMethodsTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AdditionalMethodsTests.cs,CanDoHead,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,AdditionalMethodsTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AdditionalMethodsTests.cs,CanDoHead_AsyncEvent,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,AdditionalMethodsTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AdditionalMethodsTests.cs,CanDoAsyncEventHeadWithEmptyHandler,The following statement contains a magic number: Request dossierReq = Session.Bind(VerifiedMethodDossierTemplate' new { id = 8' method = "HEAD" });
Magic Number,Ramone.Tests,AdditionalMethodsTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AdditionalMethodsTests.cs,CanDoAsyncEventHeadWithNullHandler,The following statement contains a magic number: Request dossierReq = Session.Bind(VerifiedMethodDossierTemplate' new { id = 8' method = "HEAD" });
Magic Number,Ramone.Tests,ApplicationErrorTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ApplicationErrorTests.cs,ItSignalsMissingSessionWhenDecodingResponse,The following statement contains a magic number: WebRequest request = WebRequest.Create(BindingExtensions.BindTemplate(BaseUrl' DossierTemplate' new { id = 8 }));
Magic Number,Ramone.Tests,AsyncEventTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AsyncEventTests.cs,CanDoAsyncEventRequest,The following statement contains a magic number: Request request = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,AsyncEventTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AsyncEventTests.cs,WhenExceptionIsThrownInCallbackItCallsErrorHandlerWithRequestAsWellAsCompleteHandler,The following statement contains a magic number: Request request = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,AsyncTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AsyncTests.cs,CanDoAsyncRequest,The following statement contains a magic number: Request request = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,BindingTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\BindingTests.cs,TestFixtureSetUp,The following statement contains a magic number: HashtableParameters["a"] = 10;
Magic Number,Ramone.Tests,BindingTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\BindingTests.cs,TestFixtureSetUp,The following statement contains a magic number: HashtableParameters["c"] = 33;
Magic Number,Ramone.Tests,DeleteTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\DeleteTests_Async.cs,WhenDeletingAsyncTheRequestIsInFactAsync,The following statement contains a magic number: await VerifyIsAsync(          async req => await req.Async().Delete<SlowResource>()'          resp =>          {            Assert.IsNotNull(resp.Body);            Assert.AreEqual(4' resp.Body.Time);          });
Magic Number,Ramone.Tests,DeleteTests_AsyncEvent,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\DeleteTests_AsyncEvent.cs,SetUp,The following statement contains a magic number: DossierReq = Session.Bind(VerifiedMethodDossierTemplate' new { id = 8' method = "DELETE" });
Magic Number,Ramone.Tests,GenericMethodTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests_Async.cs,CanExecuteGetWithGenericResult,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,GenericMethodTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests_Async.cs,CanExecuteGetWithGenericResult,The following statement contains a magic number: Assert.AreEqual(8' dossier1.Body.Id);
Magic Number,Ramone.Tests,GenericMethodTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests_Async.cs,CanExecuteGetWithGenericResult,The following statement contains a magic number: Assert.AreEqual(8' dossier2.Body.Id);
Magic Number,Ramone.Tests,GetTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_Async.cs,SetUp,The following statement contains a magic number: DossierReq = Session.Bind(VerifiedMethodDossierTemplate' new { id = 8' method = "GET" });
Magic Number,Ramone.Tests,GetTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_Async.cs,WhenGettingAsyncTheRequestIsInFactAsync,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(4));
Magic Number,Ramone.Tests,GetTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_Async.cs,WhenGettingAsyncTheRequestIsInFactAsync,The following statement contains a magic number: Assert.Less(getTime.TotalMilliseconds' 1000);
Magic Number,Ramone.Tests,GetTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_Async.cs,WhenGettingAsyncTheRequestIsInFactAsync,The following statement contains a magic number: Assert.Less(responseTime.TotalMilliseconds' 1000);
Magic Number,Ramone.Tests,GetTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_Async.cs,WhenGettingAsyncTheRequestIsInFactAsync,The following statement contains a magic number: Assert.GreaterOrEqual(totalTime.TotalMilliseconds' 4000);
Magic Number,Ramone.Tests,GetTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_Async.cs,CanGetDossier_async,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,GetTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_Async.cs,CanGetDossier_async,The following statement contains a magic number: Assert.AreEqual(8' dossier.Body.Id);
Magic Number,Ramone.Tests,GetTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_Async.cs,CanGetDossierWithDictionaryParams_async,The following statement contains a magic number: Assert.AreEqual(8' dossier.Body.Id);
Magic Number,Ramone.Tests,GetTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_Async.cs,WhenSpecifyingCharsetForGetItThrows,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,GetTests_AsyncEvent,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_AsyncEvent.cs,SetUp,The following statement contains a magic number: DossierReq = Session.Bind(VerifiedMethodDossierTemplate' new { id = 8' method = "GET" });
Magic Number,Ramone.Tests,GetTests_AsyncEvent,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_AsyncEvent.cs,WhenGettingAsyncEventTheRequestIsInFactAsync,The following statement contains a magic number: Assert.AreEqual(4' result.Time);
Magic Number,Ramone.Tests,GetTests_AsyncEvent,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_AsyncEvent.cs,WhenGettingAsyncEventTheRequestIsInFactAsync,The following statement contains a magic number: Assert.Greater(syncTime' TimeSpan.FromSeconds(3)' "Request takes at least 4 seconds - 3 should be a safe test");
Magic Number,Ramone.Tests,GetTests_AsyncEvent,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_AsyncEvent.cs,CanGetDossier_Typed_AsyncEvent,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,GetTests_AsyncEvent,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_AsyncEvent.cs,CanGetDossier_Typed_AsyncEvent,The following statement contains a magic number: TestAsyncEvent(wh =>        {          // Act          dossierReq.AsyncEvent().Get<Dossier>(dossier =>          {            Assert.AreEqual(8' dossier.Body.Id);            Assert.AreEqual("Dossier no. 8"' dossier.Body.Title);            Assert.IsNotNull(dossier.Body.Links);            wh.Set();          });        });
Magic Number,Ramone.Tests,GetTests_AsyncEvent,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_AsyncEvent.cs,CanGetDossier_Untyped_AsyncEvent,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,GetTests_AsyncEvent,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests_AsyncEvent.cs,CanGetDossier_Untyped_AsyncEvent,The following statement contains a magic number: TestAsyncEvent(wh =>        {          // Act          dossierReq.AsyncEvent().Get(response =>          {            Dossier dossier = response.Decode<Dossier>();            Assert.AreEqual(8' dossier.Id);            Assert.AreEqual("Dossier no. 8"' dossier.Title);            Assert.IsNotNull(dossier.Links);            wh.Set();          });        });
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedDirectly,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedDirectly,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedDirectly,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedDirectly,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedDirectly,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedViaHeader,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedViaHeader,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedViaHeader,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedViaHeader,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedViaHeader,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedDirectly_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedDirectly_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedDirectly_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedDirectly_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedDirectly_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedViaHeader_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedViaHeader_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedViaHeader_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedViaHeader_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfModifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfModifiedSinceTests.cs,CanSetIfModifiedViaHeader_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedDirectly,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedDirectly,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedDirectly,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedDirectly,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedDirectly,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedViaHeader,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedViaHeader,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedViaHeader,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedViaHeader,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedViaHeader,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedDirectly_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedDirectly_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedDirectly_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedDirectly_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedDirectly_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedViaHeader_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedViaHeader_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedViaHeader_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedViaHeader_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,IfUnmodifiedSinceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\IfUnmodifiedSinceTests.cs,CanSetIfUnmodifiedViaHeader_AsyncEvent,The following statement contains a magic number: DateTime since = new DateTime(2013' 5' 1' 10' 22' 11);
Magic Number,Ramone.Tests,OptionsTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\OptionsTests.cs,SetUp,The following statement contains a magic number: DossierReq = Session.Bind(VerifiedMethodDossierTemplate' new { id = 8' method = "OPTIONS" });
Magic Number,Ramone.Tests,PatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PatchTests.cs,SetUp,The following statement contains a magic number: DossierReq = Session.Bind(VerifiedMethodDossierTemplate' new { id = 15' method = "PATCH" });
Magic Number,Ramone.Tests,ExceptionHandlingTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ExceptionHandlingTests.cs,CanHandleClientSideExceptionsWhenDisposing,The following statement contains a magic number: Request request = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,SetUp,The following statement contains a magic number: DossierReq = Session.Bind(VerifiedMethodDossierTemplate' new { method = "POST"' id = 8 });
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,CanExecuteGetWithGenericResult,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,CanExecuteGetWithGenericResult,The following statement contains a magic number: Assert.AreEqual(8' dossier1.Body.Id);
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,CanExecuteGetWithGenericResult,The following statement contains a magic number: Assert.AreEqual(8' dossier2.Body.Id);
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,CanExecuteGetWithGenericResult_AsyncEvent,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,CanExecuteGetWithGenericResult_AsyncEvent,The following statement contains a magic number: TestAsyncEvent(wh =>        {          // Act          dossierReq.AsyncEvent()            .Execute<Dossier>("GET"' response =>            {              // Assert              Assert.AreEqual(8' response.Body.Id);              wh.Set();            });        });
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,CanExecuteGetWithNonGenericResult,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,CanExecuteGetWithNonGenericResult,The following statement contains a magic number: Assert.AreEqual(8' response1.Decode<Dossier>().Id);
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,CanExecuteGetWithNonGenericResult_AsyncEvent,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,CanExecuteGetWithNonGenericResult_AsyncEvent,The following statement contains a magic number: TestAsyncEvent(wh =>        {          // Act          dossierReq.AsyncEvent()            .Execute("GET"' response =>            {              // Assert              Assert.AreEqual(8' response.Decode<Dossier>().Id);              wh.Set();            });        });
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,CanExecutePostWithGenericResult,The following statement contains a magic number: Assert.AreEqual(999' dossier1.Id);
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,CanExecutePostWithGenericResult,The following statement contains a magic number: Assert.AreEqual(999' dossier2.Id);
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,CanExecutePostWithGenericResult_AsyncEvent,The following statement contains a magic number: TestAsyncEvent(wh =>        {          // Act          dossiersReq.AsyncEvent()            .Execute<Dossier>("POST"' MyDossier' response =>            {              // Assert              Assert.AreEqual(999' response.Body.Id);              wh.Set();            });        });
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,CanExecutePostWithNonGenericResult,The following statement contains a magic number: Assert.AreEqual(999' response.Decode<Dossier>().Id);
Magic Number,Ramone.Tests,GenericMethodTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GenericMethodTests.cs,CanExecutePostWithNonGenericResult_AsyncEvent,The following statement contains a magic number: TestAsyncEvent(wh =>        {          // Act          dossiersReq.AsyncEvent()            .Execute("POST"' MyDossier' response =>            {              // Assert              Assert.AreEqual(999' response.Decode<Dossier>().Id);              wh.Set();            });        });
Magic Number,Ramone.Tests,AuthenticationHandlerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AuthenticationHandlerTests.cs,WhenNoAuthorizationCodeIsSendItAsksForAuthorization,The following statement contains a magic number: Assert.AreEqual(2' CountingAuthorizationHandler.Count);
Magic Number,Ramone.Tests,AuthenticationHandlerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\AuthenticationHandlerTests.cs,WhenNoAuthorizationCodeIsSendItAsksForAuthorization_AsyncEvent,The following statement contains a magic number: Assert.AreEqual(2' CountingAuthorizationHandler.Count);
Magic Number,Ramone.Tests,ContentNegotiationTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ContentNegotiationTests.cs,CanSpecifyAcceptAsGenericWithoutMediaType,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,DeleteTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\DeleteTests.cs,SetUp,The following statement contains a magic number: DossierReq = Session.Bind(VerifiedMethodDossierTemplate' new { id = 8' method = "DELETE" });
Magic Number,Ramone.Tests,DeleteTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\DeleteTests.cs,WhenSpecifyingCharsetForDeleteItThrows,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,PostTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PostTests.cs,SetUp,The following statement contains a magic number: DossierReq = Session.Bind(VerifiedMethodDossierTemplate' new { method = "POST"' id = 8 });
Magic Number,Ramone.Tests,PostTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PostTests_Async.cs,SetUp,The following statement contains a magic number: DossierReq = Session.Bind(VerifiedMethodDossierTemplate' new { method = "POST"' id = 8 });
Magic Number,Ramone.Tests,PostTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PostTests_Async.cs,WhenPostingEmptyDataAsyncTheRequestIsInFactAsync,The following statement contains a magic number: await VerifyIsAsync(          async req => await req.Async().Post<SlowResource>()'           resp =>          {            Assert.IsNotNull(resp.Body);            Assert.AreEqual(4' resp.Body.Time);          });
Magic Number,Ramone.Tests,PostTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PostTests_Async.cs,WhenPostingDataAsyncTheRequestIsInFactAsync,The following statement contains a magic number: await VerifyIsAsync(          async req => await req.AsJson().Async().Post<SlowResource>(new SlowResource { Time = 10 })'          resp =>          {            Assert.IsNotNull(resp.Body);            Assert.AreEqual(10' resp.Body.Time);          });
Magic Number,Ramone.Tests,PostTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PostTests_Async.cs,WhenPostingDataAsyncTheRequestIsInFactAsync,The following statement contains a magic number: await VerifyIsAsync(          async req => await req.AsJson().Async().Post<SlowResource>(new SlowResource { Time = 10 })'          resp =>          {            Assert.IsNotNull(resp.Body);            Assert.AreEqual(10' resp.Body.Time);          });
Magic Number,Ramone.Tests,PostTests_AsyncEvent,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PostTests_AsyncEvent.cs,SetUp,The following statement contains a magic number: DossierReq = Session.Bind(VerifiedMethodDossierTemplate' new { method = "POST"' id = 8 });
Magic Number,Ramone.Tests,PostTests_AsyncEvent,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PostTests_AsyncEvent.cs,WhenPostingEmptyDataAsyncEventTheRequestIsInFactAsync,The following statement contains a magic number: Assert.AreEqual(4' result.Time);
Magic Number,Ramone.Tests,PostTests_AsyncEvent,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PostTests_AsyncEvent.cs,WhenPostingEmptyDataAsyncEventTheRequestIsInFactAsync,The following statement contains a magic number: Assert.Greater(syncTime' TimeSpan.FromSeconds(3)' "Request takes at least 4 seconds - 3 should be a safe test");
Magic Number,Ramone.Tests,PostTests_AsyncEvent,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PostTests_AsyncEvent.cs,WhenPostingAsyncEventTheRequestIsInFactAsync,The following statement contains a magic number: SlowResource input = new SlowResource { Time = 10 };
Magic Number,Ramone.Tests,PostTests_AsyncEvent,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PostTests_AsyncEvent.cs,WhenPostingAsyncEventTheRequestIsInFactAsync,The following statement contains a magic number: Assert.Greater(syncTime' TimeSpan.FromSeconds(3)' "Request takes at least 4 seconds - 3 should be a safe test");
Magic Number,Ramone.Tests,CreationTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\CreationTests.cs,CanGetCreatedLocationAndBody_Generic,The following statement contains a magic number: Assert.AreEqual(999' createdDossier.Id);
Magic Number,Ramone.Tests,CreationTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\CreationTests.cs,CanGetCreatedLocationAndBody_AsyncEvent,The following statement contains a magic number: TestAsyncEvent(wh =>          {            request.AsyncEvent().Post<Dossier>(dossier' response =>              {                // Assert                Uri createdDossierLocation = response.CreatedLocation;                Dossier createdDossier = response.Body;                  Assert.IsNotNull(createdDossierLocation);                Assert.IsNotNull(createdDossier);                Assert.AreEqual("A new dossier"' createdDossier.Title);                Assert.AreEqual(999' createdDossier.Id);                wh.Set();              });          });
Magic Number,Ramone.Tests,GetTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests.cs,SetUp,The following statement contains a magic number: DossierReq = Session.Bind(VerifiedMethodDossierTemplate' new { id = 8' method = "GET" });
Magic Number,Ramone.Tests,GetTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests.cs,CanGetDossier,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,GetTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests.cs,CanGetDossier,The following statement contains a magic number: Assert.AreEqual(8' dossier.Body.Id);
Magic Number,Ramone.Tests,GetTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests.cs,CanGetDossierWithDictionaryParams,The following statement contains a magic number: Assert.AreEqual(8' dossier.Body.Id);
Magic Number,Ramone.Tests,GetTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests.cs,CanGetDossierDocuments,The following statement contains a magic number: Request dossierDocumentsReq = Session.Bind(DossierDocumentsTemplate' new { id = 8 });
Magic Number,Ramone.Tests,GetTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests.cs,CanGetDossierDocuments,The following statement contains a magic number: Assert.AreEqual(2' documents.Body.Count);
Magic Number,Ramone.Tests,GetTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests.cs,CanGetParty,The following statement contains a magic number: Request partyReq = Session.Bind(PartyTemplate' new { id = 12 });
Magic Number,Ramone.Tests,GetTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests.cs,CanGetParty,The following statement contains a magic number: Assert.AreEqual(12' party.Body.Id);
Magic Number,Ramone.Tests,GetTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests.cs,CanGetDocumentLinksInDossier,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,GetTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests.cs,CanGetAndIgnoreReturnedBody,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,GetTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\GetTests.cs,WhenSpecifyingCharsetForGetItThrows,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,PutTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PutTests_Async.cs,WhenPuttingEmptyDataAsyncTheRequestIsInFactAsync,The following statement contains a magic number: await VerifyIsAsync(          async req => await req.Async().Put<SlowResource>()'          resp =>          {            Assert.IsNotNull(resp.Body);            Assert.AreEqual(4' resp.Body.Time);          });
Magic Number,Ramone.Tests,PutTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PutTests_Async.cs,WhenPuttingDataAsyncTheRequestIsInFactAsync,The following statement contains a magic number: await VerifyIsAsync(          async req => await req.AsJson().Async().Put<SlowResource>(new SlowResource { Time = 10 })'          resp =>          {            Assert.IsNotNull(resp.Body);            Assert.AreEqual(10' resp.Body.Time);          });
Magic Number,Ramone.Tests,PutTests_Async,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\PutTests_Async.cs,WhenPuttingDataAsyncTheRequestIsInFactAsync,The following statement contains a magic number: await VerifyIsAsync(          async req => await req.AsJson().Async().Put<SlowResource>(new SlowResource { Time = 10 })'          resp =>          {            Assert.IsNotNull(resp.Body);            Assert.AreEqual(10' resp.Body.Time);          });
Magic Number,Ramone.Tests,RedirectTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\RedirectTests.cs,ItFollowsRedirectOnValidMethodsAndStatuses,The following statement contains a magic number: Assert.AreEqual(4' resp.RedirectCount);
Magic Number,Ramone.Tests,RedirectTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\RedirectTests.cs,ItFollowsRedirectOnValidMethodsAndStatuses_AsyncEvent,The following statement contains a magic number: TestAsyncEvent(wh =>          {            req.AsyncEvent().Execute<RedirectArgs>(method' response =>              {                // Assert                Assert.AreEqual(4' response.RedirectCount);                wh.Set();              });          });
Magic Number,Ramone.Tests,RedirectTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\RedirectTests.cs,WhenRedirectingItOnlyCallsOnCompleteOnce_AsyncEvent,The following statement contains a magic number: Request req = Session.Bind(RedirectTemplate' new { code = 301' count = 1' v = 0 });
Magic Number,Ramone.Tests,RedirectTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\RedirectTests.cs,WhenRedirectingItOnlyCallsOnCompleteOnce_AsyncEvent,The following statement contains a magic number: System.Threading.Thread.Sleep(3000);
Magic Number,Ramone.Tests,RedirectTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\RedirectTests.cs,RedirectCountCanBeSpecified,The following statement contains a magic number: Session.SetAllowedRedirects(responseCode' 2);
Magic Number,Ramone.Tests,RedirectTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\RedirectTests.cs,RedirectCountCanBeSpecified,The following statement contains a magic number: Assert.AreEqual(2' resp.RedirectCount);
Magic Number,Ramone.Tests,RedirectTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\RedirectTests.cs,RedirectCountCanBeSpecified_AsyncEvent,The following statement contains a magic number: Session.SetAllowedRedirects(responseCode' 2);
Magic Number,Ramone.Tests,RedirectTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\RedirectTests.cs,RedirectCountCanBeSpecified_AsyncEvent,The following statement contains a magic number: TestAsyncEvent(wh =>        {          req.AsyncEvent().Execute<RedirectArgs>(method' response =>          {            // Assert            Assert.AreEqual(2' response.RedirectCount);            wh.Set();          });        });
Magic Number,Ramone.Tests,RedirectTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\RedirectTests.cs,WhenFollowingRedirectsItAppliesRequestInterceptors,The following statement contains a magic number: Session.SetAllowedRedirects(responseCode' 5);
Magic Number,Ramone.Tests,RedirectTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\RedirectTests.cs,WhenFollowingRedirectsItAppliesRequestInterceptors,The following statement contains a magic number: Assert.AreEqual(5' InterceptorCount);
Magic Number,Ramone.Tests,RedirectTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\RedirectTests.cs,WhenFollowingRedirectsItAppliesRequestInterceptors_AsyncEvent,The following statement contains a magic number: Session.SetAllowedRedirects(responseCode' 5);
Magic Number,Ramone.Tests,RedirectTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\RedirectTests.cs,WhenFollowingRedirectsItAppliesRequestInterceptors_AsyncEvent,The following statement contains a magic number: TestAsyncEvent(wh =>        {          req.AsyncEvent().Execute<RedirectArgs>(method' response =>          {            // Assert            Assert.AreEqual(5' InterceptorCount);            wh.Set();          });        });
Magic Number,Ramone.Tests,RedirectTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\RedirectTests.cs,WhenNotFollowingARedirectItWillNotCrashDueToMissingMediaType,The following statement contains a magic number: Request req = Session.Bind(RedirectTemplate' new { code = 303' count = -1' v = 0 });
Magic Number,Ramone.Tests,RedirectTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\RedirectTests.cs,WhenNotFollowingARedirectItWillNotCrashDueToMissingMediaType,The following statement contains a magic number: Session.SetAllowedRedirects(303' 0);
Magic Number,Ramone.Tests,ResponseInterceptorTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ResponseInterceptorTests.cs,CanReadStatusCode,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,ResponseInterceptorTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ResponseInterceptorTests.cs,ResponseInterceptorsAreCalledOnRedirects,The following statement contains a magic number: Request req = Session.Bind(RedirectTemplate' new { code = 301' count = 1' v = 0 });
Magic Number,Ramone.Tests,ResponseInterceptorTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ResponseInterceptorTests.cs,ResponseInterceptorsAreCalledOnRedirects,The following statement contains a magic number: Assert.AreEqual(5' StatusCodes.Count);
Magic Number,Ramone.Tests,ResponseInterceptorTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ResponseInterceptorTests.cs,ResponseInterceptorsAreCalledOnRedirects,The following statement contains a magic number: Assert.AreEqual(HttpStatusCode.MovedPermanently' StatusCodes[2]);
Magic Number,Ramone.Tests,ResponseInterceptorTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ResponseInterceptorTests.cs,ResponseInterceptorsAreCalledOnRedirects,The following statement contains a magic number: Assert.AreEqual(HttpStatusCode.MovedPermanently' StatusCodes[3]);
Magic Number,Ramone.Tests,ResponseInterceptorTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ResponseInterceptorTests.cs,ResponseInterceptorsAreCalledOnRedirects,The following statement contains a magic number: Assert.AreEqual(HttpStatusCode.OK' StatusCodes[4]);
Magic Number,Ramone.Tests,ResponseInterceptorTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ResponseInterceptorTests.cs,ResponseInterceptorsAreCalled_Async,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,ResponseInterceptorTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ResponseInterceptorTests.cs,ResponseInterceptorsAreCalled_AsyncEvent,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,ServiceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ServiceTests.cs,CanSetAndGetServiceItems,The following statement contains a magic number: service.Items["X"] = 1234;
Magic Number,Ramone.Tests,ServiceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ServiceTests.cs,CanSetAndGetServiceItems,The following statement contains a magic number: Assert.AreEqual(1234' x);
Magic Number,Ramone.Tests,ServiceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ServiceTests.cs,WhenCreatingSessionItInheritsServiceItems,The following statement contains a magic number: service.Items["X"] = 1234;
Magic Number,Ramone.Tests,ServiceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ServiceTests.cs,WhenCreatingSessionItInheritsServiceItems,The following statement contains a magic number: Assert.AreEqual(1234' x);
Magic Number,Ramone.Tests,ServiceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ServiceTests.cs,WhenChangingItemsInSessionItDoesNotChangeItemsInService,The following statement contains a magic number: service.Items["X"] = 1234;
Magic Number,Ramone.Tests,ServiceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ServiceTests.cs,WhenChangingItemsInSessionItDoesNotChangeItemsInService,The following statement contains a magic number: Assert.AreEqual(1234' (int)service.Items["X"]);
Magic Number,Ramone.Tests,ServiceTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\ServiceTests.cs,WhenNotUsingBaseUrlItThrowsInvalidOperationException,The following statement contains a magic number: AssertThrows<InvalidOperationException>(          () => session.Bind(DossierTemplate' new { id = 2 })'          ex => ex.Message.Contains("base URL"));
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,WhenCreatingSessionItClonesRedirectSettings,The following statement contains a magic number: service.SetAllowedRedirects(300' 11);
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,WhenCreatingSessionItClonesRedirectSettings,The following statement contains a magic number: service.SetAllowedRedirects(300' 11);
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,WhenCreatingSessionItClonesRedirectSettings,The following statement contains a magic number: session2.SetAllowedRedirects(301' 7);
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,WhenCreatingSessionItClonesRedirectSettings,The following statement contains a magic number: session2.SetAllowedRedirects(301' 7);
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,WhenCreatingSessionItClonesRedirectSettings,The following statement contains a magic number: Assert.AreEqual(11' service.GetAllowedRedirects(300));
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,WhenCreatingSessionItClonesRedirectSettings,The following statement contains a magic number: Assert.AreEqual(11' service.GetAllowedRedirects(300));
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,WhenCreatingSessionItClonesRedirectSettings,The following statement contains a magic number: Assert.AreEqual(0' session1.GetAllowedRedirects(300));
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,WhenCreatingSessionItClonesRedirectSettings,The following statement contains a magic number: Assert.AreEqual(11' session2.GetAllowedRedirects(300));
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,WhenCreatingSessionItClonesRedirectSettings,The following statement contains a magic number: Assert.AreEqual(11' session2.GetAllowedRedirects(300));
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,WhenCreatingSessionItClonesRedirectSettings,The following statement contains a magic number: Assert.AreEqual(7' session2.GetAllowedRedirects(301));
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,WhenCreatingSessionItClonesRedirectSettings,The following statement contains a magic number: Assert.AreEqual(7' session2.GetAllowedRedirects(301));
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,WhenCreatingSessionItClonesInterceptors,The following statement contains a magic number: Assert.AreEqual(2' session2.RequestInterceptors.Count());
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,CanSetAndGetSessionItems,The following statement contains a magic number: session.Items["X"] = 1234;
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,CanSetAndGetSessionItems,The following statement contains a magic number: Assert.AreEqual(1234' x);
Magic Number,Ramone.Tests,SessionTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SessionTests.cs,WhenNotUsingBaseUrlItThrowsInvalidOperationException,The following statement contains a magic number: AssertThrows<InvalidOperationException>(          () => session.Bind(DossierTemplate' new { id = 2 })'          ex => ex.Message.Contains("base URL"));
Magic Number,Ramone.Tests,SubmitTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SubmitTests.cs,SetUp,The following statement contains a magic number: DossierReq = Session.Bind(VerifiedMethodDossierTemplate' new { method = "GET"' id = 8 });
Magic Number,Ramone.Tests,SubmitTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SubmitTests.cs,CanRememberGetForNextSubmit_generic,The following statement contains a magic number: Assert.AreEqual(8' r.Body.Id);
Magic Number,Ramone.Tests,SubmitTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SubmitTests.cs,CanRememberGetForNextSubmit_generic_AsyncEvent,The following statement contains a magic number: TestAsyncEvent(wh =>          {            DossierReq.Method("GET").AsyncEvent()              .OnError(e => Assert.Fail())              .OnComplete(() => wh.Set())              .Submit<Dossier>(r =>               {                Assert.AreEqual(8' r.Body.Id);              });          });
Magic Number,Ramone.Tests,SubmitTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SubmitTests.cs,WhenNoMethodIsSetThenSubmitThrows_generic,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests,SubmitTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SubmitTests.cs,CanRememberGetForNextSubmit_untyped,The following statement contains a magic number: Assert.AreEqual(8' dossier.Id);
Magic Number,Ramone.Tests,SubmitTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\SubmitTests.cs,CanRememberGetForNextSubmit_untyped_AsyncEvent,The following statement contains a magic number: TestAsyncEvent(wh =>        {          DossierReq.Method("GET").AsyncEvent()            .OnError(e => Assert.Fail())            .OnComplete(() => wh.Set())            .Submit(r =>            {              Dossier dossier = r.Decode<Dossier>();              Assert.AreEqual(8' dossier.Id);            });        });
Magic Number,Ramone.Tests,TestHelper,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\TestHelper.cs,VerifyIsAsync,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(4));
Magic Number,Ramone.Tests,TestHelper,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\TestHelper.cs,VerifyIsAsync,The following statement contains a magic number: Assert.Less(getTime.TotalMilliseconds' 1000);
Magic Number,Ramone.Tests,TestHelper,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\TestHelper.cs,VerifyIsAsync,The following statement contains a magic number: Assert.Less(responseTime.TotalMilliseconds' 1000);
Magic Number,Ramone.Tests,TestHelper,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\TestHelper.cs,VerifyIsAsync,The following statement contains a magic number: Assert.GreaterOrEqual(totalTime.TotalMilliseconds' 4000);
Magic Number,Ramone.Tests,TestHelper,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\TestHelper.cs,TestAsyncEvent,The following statement contains a magic number: bool signalReceived = handle.WaitOne(TimeSpan.FromSeconds(10));
Magic Number,Ramone.Tests,UriParametersTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\UriParametersTests.cs,CanAddQueryParametersFromNameValueCollectionWithRepeatedKeys,The following statement contains a magic number: Assert.AreEqual(2' pcoll1.Count);
Magic Number,Ramone.Tests,UriParametersTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\UriParametersTests.cs,CanAddQueryParametersFromNameValueCollectionWithRepeatedKeys,The following statement contains a magic number: Assert.AreEqual(2' pcoll2.Count);
Magic Number,Ramone.Tests,UriParametersTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\UriParametersTests.cs,CanAddQueryParametersFromAny,The following statement contains a magic number: Assert.AreEqual(2' pcoll1.Count);
Magic Number,Ramone.Tests,UriParametersTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\UriParametersTests.cs,CanAddQueryParametersFromAny,The following statement contains a magic number: Assert.AreEqual(3' pcoll2.Count);
Magic Number,Ramone.Tests,UriParametersTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\UriParametersTests.cs,CanAddQueryParametersFromAny,The following statement contains a magic number: Assert.AreEqual(3' pcoll3.Count);
Magic Number,Ramone.Tests,UriParametersTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\UriParametersTests.cs,CanAddQueryParametersFromAny,The following statement contains a magic number: Assert.AreEqual(3' pcoll4.Count);
Magic Number,Ramone.Tests.Blog,HtmlDocumentTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Blog\HtmlDocumentTests.cs,CanLoadBlog,The following statement contains a magic number: Assert.AreEqual(2' posts.Count);
Magic Number,Ramone.Tests.Blog,HtmlDocumentTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Blog\HtmlDocumentTests.cs,CanFollowAllAuthorsAndGetAllEMails,The following statement contains a magic number: Assert.AreEqual(2' foundEMails.Count);
Magic Number,Ramone.Tests.Blog,TypedHtmlTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Blog\TypedHtmlTests.cs,CanLoadBlog,The following statement contains a magic number: Assert.AreEqual(2' blog.Posts.Count);
Magic Number,Ramone.Tests.Blog,TypedHtmlTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Blog\TypedHtmlTests.cs,CanFollowAllAuthorsAndGetAllEMails,The following statement contains a magic number: Assert.AreEqual(2' foundEMails.Count);
Magic Number,Ramone.Tests.HyperMedia,FollowTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\FollowTests.cs,CanFollowRelativeLinksInContextDependentData,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests.HyperMedia,FollowTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\FollowTests.cs,CanFollowRelativeLinksInContextDependentData,The following statement contains a magic number: Assert.AreEqual(2' documents.Count);
Magic Number,Ramone.Tests.HyperMedia,FollowTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\FollowTests.cs,CanFollowLinksInGeneral,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests.HyperMedia,FollowTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\FollowTests.cs,CanFollowLinksInGeneral,The following statement contains a magic number: Assert.AreEqual(2' documents1.Count);
Magic Number,Ramone.Tests.HyperMedia,FollowTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\FollowTests.cs,FollowCanSelectLinkByItself,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests.HyperMedia,FollowTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\FollowTests.cs,FollowCanSelectLinkByItself,The following statement contains a magic number: Assert.AreEqual(2' documents1.Count);
Magic Number,Ramone.Tests.HyperMedia,FollowTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\FollowTests.cs,FollowCanSelectLinkByItselfWithoutUsingSession,The following statement contains a magic number: Request dossierReq = Session.Bind(DossierTemplate' new { id = 8 });
Magic Number,Ramone.Tests.HyperMedia,FollowTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\FollowTests.cs,FollowCanSelectLinkByItselfWithoutUsingSession,The following statement contains a magic number: Assert.AreEqual(2' documents1.Count);
Magic Number,Ramone.Tests.HyperMedia,LinkTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\LinkTests.cs,CanSelectLinkFromMultiRelLinkList,The following statement contains a magic number: Assert.AreEqual(3' Link5.RelationTypes.Count());
Magic Number,Ramone.Tests.HyperMedia,LinkTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\LinkTests.cs,CanSelectLinkFromMultiRelLinkList,The following statement contains a magic number: Assert.AreEqual(3' Link6.RelationTypes.Count());
Magic Number,Ramone.Tests.HyperMedia,WebLinkTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\WebLinkTests.cs,CanUseLinksForRelValues,The following statement contains a magic number: Assert.AreEqual(4' l1.RelationTypes.Count());
Magic Number,Ramone.Tests.HyperMedia,LinkHeaderTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\LinkHeaderTests.cs,CanReadLinksFromLinkHeader,The following statement contains a magic number: Assert.AreEqual(2' links.Count);
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanGetByteArray,The following statement contains a magic number: Assert.AreEqual(12' response.ContentLength);
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanGetByteArray,The following statement contains a magic number: Assert.AreEqual((int)'l'' data[2]);
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanGetByteArray,The following statement contains a magic number: Assert.AreEqual((int)'l'' data[3]);
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArray,The following statement contains a magic number: byte[] data = new byte[] { 10' 2' 30' 4 };
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArray,The following statement contains a magic number: byte[] data = new byte[] { 10' 2' 30' 4 };
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArray,The following statement contains a magic number: byte[] data = new byte[] { 10' 2' 30' 4 };
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArray,The following statement contains a magic number: byte[] data = new byte[] { 10' 2' 30' 4 };
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArray,The following statement contains a magic number: Assert.AreEqual(4' response.ContentLength);
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArray,The following statement contains a magic number: Assert.AreEqual(10' response.Body[0]);
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArray,The following statement contains a magic number: Assert.AreEqual(2' response.Body[1]);
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArray,The following statement contains a magic number: Assert.AreEqual(30' response.Body[2]);
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArray,The following statement contains a magic number: Assert.AreEqual(30' response.Body[2]);
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArray,The following statement contains a magic number: Assert.AreEqual(4' response.Body[3]);
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArray,The following statement contains a magic number: Assert.AreEqual(4' response.Body[3]);
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArrayWithDefaultMediaTypeOctetStream,The following statement contains a magic number: byte[] data = new byte[] { 10' 2' 30' 4 };
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArrayWithDefaultMediaTypeOctetStream,The following statement contains a magic number: byte[] data = new byte[] { 10' 2' 30' 4 };
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArrayWithDefaultMediaTypeOctetStream,The following statement contains a magic number: byte[] data = new byte[] { 10' 2' 30' 4 };
Magic Number,Ramone.Tests.MediaTypes,ByteArrayCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\ByteArrayCodecTests.cs,CanPostByteArrayWithDefaultMediaTypeOctetStream,The following statement contains a magic number: byte[] data = new byte[] { 10' 2' 30' 4 };
Magic Number,Ramone.Tests.MediaTypes,StreamCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\StreamCodecTests.cs,CanGetStream,The following statement contains a magic number: Assert.AreEqual(12' response.ContentLength);
Magic Number,Ramone.Tests.MediaTypes,StreamCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\StreamCodecTests.cs,CanGetStream,The following statement contains a magic number: byte[] data = new byte[12];
Magic Number,Ramone.Tests.MediaTypes,StreamCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\StreamCodecTests.cs,CanGetStream,The following statement contains a magic number: response.Body.Read(data' 0' 12);
Magic Number,Ramone.Tests.MediaTypes,StreamCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\StreamCodecTests.cs,CanGetStream,The following statement contains a magic number: Assert.AreEqual((int)'l'' data[2]);
Magic Number,Ramone.Tests.MediaTypes,StreamCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\StreamCodecTests.cs,CanGetStream,The following statement contains a magic number: Assert.AreEqual((int)'l'' data[3]);
Magic Number,Ramone.Tests.MediaTypes,StreamCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\StreamCodecTests.cs,CanPostStream,The following statement contains a magic number: Assert.AreEqual(4' response.ContentLength);
Magic Number,Ramone.Tests.MediaTypes,StreamCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\StreamCodecTests.cs,CanPostStream,The following statement contains a magic number: Assert.AreEqual(10' response.Body.ReadByte());
Magic Number,Ramone.Tests.MediaTypes,StreamCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\StreamCodecTests.cs,CanPostStream,The following statement contains a magic number: Assert.AreEqual(2' response.Body.ReadByte());
Magic Number,Ramone.Tests.MediaTypes,StreamCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\StreamCodecTests.cs,CanPostStream,The following statement contains a magic number: Assert.AreEqual(30' response.Body.ReadByte());
Magic Number,Ramone.Tests.MediaTypes,StreamCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\StreamCodecTests.cs,CanPostStream,The following statement contains a magic number: Assert.AreEqual(4' response.Body.ReadByte());
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchCodecTests.cs,CanPatchDocument,The following statement contains a magic number: patch.Add("/X"' 10);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanChainWithFluentInterface,The following statement contains a magic number: Assert.AreEqual(6' patch.Operations.Count);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanChainWithFluentInterface,The following statement contains a magic number: Assert.AreEqual("move"' patch.Operations[5].op);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanChainWithFluentInterface_typed,The following statement contains a magic number: Assert.AreEqual(6' patch.Operations.Count);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanChainWithFluentInterface_typed,The following statement contains a magic number: Assert.AreEqual("move"' patch.Operations[5].op);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanReadFromReader,The following statement contains a magic number: Assert.AreEqual(6' operations.Count);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanReadFromReader,The following statement contains a magic number: Assert.AreEqual("replace"' operations[2].op);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanReadFromReader,The following statement contains a magic number: Assert.AreEqual("/Responsible"' operations[2].path);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanReadFromReader,The following statement contains a magic number: Assert.AreEqual("Liza"' operations[2].value.Name);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanReadFromReader,The following statement contains a magic number: Assert.AreEqual("move"' operations[3].op);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanReadFromReader,The following statement contains a magic number: Assert.AreEqual("/AnotherTitle"' operations[3].from);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanReadFromReader,The following statement contains a magic number: Assert.AreEqual("/Title"' operations[3].path);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanReadFromReader,The following statement contains a magic number: Assert.AreEqual("copy"' operations[4].op);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanReadFromReader,The following statement contains a magic number: Assert.AreEqual("/Title"' operations[4].from);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanReadFromReader,The following statement contains a magic number: Assert.AreEqual("/AnotherTitle"' operations[4].path);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanReadFromReader,The following statement contains a magic number: Assert.AreEqual("test"' operations[5].op);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanReadFromReader,The following statement contains a magic number: Assert.AreEqual("/RelatedParties"' operations[5].path);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchTests.cs,CanReadFromReader,The following statement contains a magic number: Assert.AreEqual("Liza"' operations[5].value);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchApplyTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchApplyTests.cs,CanApplyPatchDocument,The following statement contains a magic number: doc.Replace("/A"' 2);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchApplyTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchApplyTests.cs,CanApplyPatchDocument,The following statement contains a magic number: doc.Test("/A"' 3);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchApplyTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchApplyTests.cs,CanUseIfMatchInVisitor,The following statement contains a magic number: doc.Add("/Id"' 10);
Magic Number,Ramone.Tests.MediaTypes.JsonPatch,JsonPatchApplyTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\JsonPatch\JsonPatchApplyTests.cs,DefaultPatchVisitorFailsOnUnknownPaths,The following statement contains a magic number: doc.Add("/XxxUnknown"' 10);
Magic Number,Ramone.Tests.OAuth2,OAuth2AuthorizationCodeGrantTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\OAuth2\OAuth2AuthorizationCodeGrantTests.cs,WhenRequestingAuthorizationCodeItSavesState,The following statement contains a magic number: Assert.Greater(state.AuthorizationState.Length' 8);
Magic Number,Ramone.Tests.OAuth2,OAuth2ClientCredentialsGrantTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\OAuth2\OAuth2ClientCredentialsGrantTests.cs,CanGetAccessTokenWithAdditionalParametersUsingOAuth2Extensions,The following statement contains a magic number: Assert.AreEqual(199' token.expires_in);
Magic Number,Ramone.Tests.OAuth2,OAuth2ResourceOwnerPasswordCredentialsGrantTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\OAuth2\OAuth2ResourceOwnerPasswordCredentialsGrantTests.cs,CanGetAccessTokenWithAdditionalParametersUsingOAuth2Extensions,The following statement contains a magic number: Assert.AreEqual(199' token.expires_in);
Magic Number,Ramone.Tests.HyperMedia.Atom,AtomLinkTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\Atom\AtomLinkTests.cs,CanGetLinksFromFeed,The following statement contains a magic number: Assert.AreEqual(2' links.Count);
Magic Number,Ramone.Tests.HyperMedia.Atom,AtomLinkTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\Atom\AtomLinkTests.cs,CanGetAtomLinksFromSyndicationLinks,The following statement contains a magic number: Assert.AreEqual(2' links.Count);
Magic Number,Ramone.Tests.HyperMedia.Html,InvalidFormTest,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\Html\InvalidFormTests.cs,WhenFormHasMultipleInputsWithSameNameItSelectsOne,The following statement contains a magic number: Assert.AreEqual(3' form.Values.Count);
Magic Number,Ramone.Tests.HyperMedia.Html,HtmlDocumentLinkTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\Html\HtmlDocumentLinkTests.cs,CanExtractAnchorLinksFromHtmlDocument,The following statement contains a magic number: Assert.AreEqual(5' links.Count);
Magic Number,Ramone.Tests.HyperMedia.Html,HtmlDocumentLinkTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\Html\HtmlDocumentLinkTests.cs,CanExtractAnchorLinksFromHtmlDocument,The following statement contains a magic number: ILink l2 = links[2];
Magic Number,Ramone.Tests.HyperMedia.Html,HtmlDocumentLinkTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\Html\HtmlDocumentLinkTests.cs,CanExtractAnchorLinksFromHtmlNode,The following statement contains a magic number: Assert.AreEqual(2' links.Count);
Magic Number,Ramone.Tests.HyperMedia.Html,HtmlDocumentLinkTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\Html\HtmlDocumentLinkTests.cs,CanExtractHeadLinksFromHtmlDocument,The following statement contains a magic number: Assert.AreEqual(2' links.Count);
Magic Number,Ramone.Tests.HyperMedia.Html,HtmlDocumentLinkTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\Html\HtmlDocumentLinkTests.cs,CanExtractHeadLinksFromNode,The following statement contains a magic number: Assert.AreEqual(2' links.Count);
Magic Number,Ramone.Tests.HyperMedia.Html,HtmlDocumentLinkTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\Html\HtmlDocumentLinkTests.cs,CanExtractHeadLinksFromNodes,The following statement contains a magic number: Assert.AreEqual(2' links.Count);
Magic Number,Ramone.Tests.HyperMedia.Html,HtmlDocumentLinkTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\HyperMedia\Html\HtmlDocumentLinkTests.cs,ItIncludesBaseUrlWhenCreatingRelativeHeadLinks,The following statement contains a magic number: Assert.AreEqual(2' links.Count);
Magic Number,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostUnregisteredFormUrlEncoded,The following statement contains a magic number: var data = new { Name = "Pete"' Age = 10' Active = "false" };
Magic Number,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostUnregisteredFormUrlEncodedUsingShorthand,The following statement contains a magic number: var data = new { Name = "Pete"' Age = 10' Active = true };
Magic Number,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostRegisteredFormUrlEncoded,The following statement contains a magic number: RegisteredData data = new RegisteredData { Name = "Pete"' Age = 10' Active = false };
Magic Number,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostFormUrlEncodedWithEncoding,The following statement contains a magic number: var data = new { Name = "ÆØÅüî"' Age = 10 };
Magic Number,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.FormUrlEncoded,FormUrlEncodedCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\FormUrlEncoded\FormUrlEncodedCodecTests.cs,CanReadTyped,The following statement contains a magic number: Assert.AreEqual(15' data.Age);
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostSimpleMultipartFormData,The following statement contains a magic number: MultipartData data = new MultipartData { Name = "Pete"' Age = 10' Active = true };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostSimpleMultipartFormDataUsingShorthand,The following statement contains a magic number: MultipartData data = new MultipartData { Name = "Pete"' Age = 10' Active = false };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostMultipartFormDataWithFileUsingHashtable,The following statement contains a magic number: data["Age"] = 10;
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostMultipartFormDataWithFile,The following statement contains a magic number: MultipartDataFile data = new MultipartDataFile { DataFile = file' Age = 10 };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostMultipartFormDataWithSpecialFilenameUsingHashtable_ItMustReplaceSpecialCharsWithX,The following statement contains a magic number: data["Age"] = 10;
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostMultipartFormDataWithSpecialFilename_ItMustReplaceSpecialCharsWithX,The following statement contains a magic number: MultipartDataFile data = new MultipartDataFile { DataFile = file' Age = 10 };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostMultipartFormDataWithFilenameContainingQuotes,The following statement contains a magic number: MultipartDataFile data = new MultipartDataFile { DataFile = file' Age = 10 };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostMultipartFormDataWithBinaryFile,The following statement contains a magic number: MultipartDataFile data = new MultipartDataFile { DataFile = file' Age = 99 };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostMultipartFormDataWithAdditionalFilenameSpecified,The following statement contains a magic number: MultipartDataFile data = new MultipartDataFile { DataFile = file' Age = 99 };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostSMultipartFormDataFromAnonymousTypes,The following statement contains a magic number: var data = new { Name = "Pete"' Age = 10' Active = false };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostSimpleMultipartFormDataWithEncoding,The following statement contains a magic number: MultipartData data = new MultipartData { Name = "ÆØÅüî"' Age = 10' Active = true };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,WhenSpecifyingCharsetForCodecItUsesIt,The following statement contains a magic number: MultipartData data = new MultipartData { Name = "ÆØÅüî"' Age = 10 };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string' string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string' string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string' string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string' string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string' string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string' string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string' string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string' string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.MultipartFormData,MultipartFormDataTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\MultipartFormData\MultipartFormDataTests.cs,CanPostComplexClass,The following statement contains a magic number: ComplexClassForOpenRastaSerializationTests o = new ComplexClassForOpenRastaSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new List<int> { 1' 2 }'          SubC = new ComplexClassForOpenRastaSerializationTests.SubClass          {            SubC = new ComplexClassForOpenRastaSerializationTests.SubClass            {              Data = new List<string> { "Benny" }            }'            Data = new List<string> { "Brian" }          }'          Dict = new Dictionary<string' string>()'          Date = new DateTime(2012' 10' 30' 12' 13' 14)'          Dou = 15.234'          GID = g        };
Magic Number,Ramone.Tests.MediaTypes.Xml,XmlDocumentCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\Xml\XmlDocumentCodecTests.cs,CanReadXmlDocument,The following statement contains a magic number: Request req = Session.Bind(DossierTemplate' new { id = 5 });
Magic Number,Ramone.Tests.MediaTypes.Xml,XmlSerializerCodecTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\MediaTypes\Xml\XmlSerializerCodecTests.cs,CanLetServerEvolveByIgnoringUnknownProperties,The following statement contains a magic number: Assert.AreEqual(25' d2.Body.Weight);
Magic Number,Ramone.Tests.Utility,ContextRegistratorTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ContextRegistratorTests.cs,CanRegisterContext,The following statement contains a magic number: Record src = new Record        {          X = 10'          A = new Item()'          Links = new AtomLinkList          {            new AtomLink("./path"' "self"' MediaType.ApplicationXml' "Link 1")          }'          R1 = new Record          {            X = 5'            R1 = null'            A = new Item()'            Links = new AtomLinkList            {              new AtomLink("./other"' "self"' MediaType.ApplicationXml' "Link 2")            }          }'          RecordList = new List<Record>          {            new Record            {              X = 1'              R1 = new Record              {                Links = new AtomLinkList                {                  new AtomLink("./new"' "self"' MediaType.ApplicationXml' "Link 3")                }              }'              A = new Item()'              Links = new AtomLinkList              {                new AtomLink("./sub"' "self"' MediaType.ApplicationXml' "Link 4")              }            }          }'          RecordArray = new Record[1]          {            new Record            {              R1 = new Record              {                Links = new AtomLinkList                {                  new AtomLink("./array1"' "self"' MediaType.ApplicationXml' "Link 4")                }              }'              A = new Item()'              Links = new AtomLinkList              {                new AtomLink("./array2"' "self"' MediaType.ApplicationXml' "Link 6")              }            }          }        };
Magic Number,Ramone.Tests.Utility,ContextRegistratorTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ContextRegistratorTests.cs,CanRegisterContext,The following statement contains a magic number: Record src = new Record        {          X = 10'          A = new Item()'          Links = new AtomLinkList          {            new AtomLink("./path"' "self"' MediaType.ApplicationXml' "Link 1")          }'          R1 = new Record          {            X = 5'            R1 = null'            A = new Item()'            Links = new AtomLinkList            {              new AtomLink("./other"' "self"' MediaType.ApplicationXml' "Link 2")            }          }'          RecordList = new List<Record>          {            new Record            {              X = 1'              R1 = new Record              {                Links = new AtomLinkList                {                  new AtomLink("./new"' "self"' MediaType.ApplicationXml' "Link 3")                }              }'              A = new Item()'              Links = new AtomLinkList              {                new AtomLink("./sub"' "self"' MediaType.ApplicationXml' "Link 4")              }            }          }'          RecordArray = new Record[1]          {            new Record            {              R1 = new Record              {                Links = new AtomLinkList                {                  new AtomLink("./array1"' "self"' MediaType.ApplicationXml' "Link 4")                }              }'              A = new Item()'              Links = new AtomLinkList              {                new AtomLink("./array2"' "self"' MediaType.ApplicationXml' "Link 6")              }            }          }        };
Magic Number,Ramone.Tests.Utility,ContextRegistratorTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ContextRegistratorTests.cs,CanRegisterContext,The following statement contains a magic number: Assert.AreEqual(10' src.X);
Magic Number,Ramone.Tests.Utility,JsonPointerHelperTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\JsonPointerHelperTests.cs,CanGetPathFromListIndex,The following statement contains a magic number: Assert.AreEqual("/3/ListOfRelatedParties/2/Name"' PListHelper.GetPath(r => r[3].ListOfRelatedParties[2].Name));
Magic Number,Ramone.Tests.Utility,JsonPointerHelperTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\JsonPointerHelperTests.cs,CanGetPathFromListIndex,The following statement contains a magic number: Assert.AreEqual("/3/ListOfRelatedParties/2/Name"' PListHelper.GetPath(r => r[3].ListOfRelatedParties[2].Name));
Magic Number,Ramone.Tests.Utility,JsonPointerHelperTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\JsonPointerHelperTests.cs,CanGetPathFromListIndex,The following statement contains a magic number: Assert.AreEqual("/ListOfRelatedParties/2/Name"' PObjHelper.GetPath(r => r.ListOfRelatedParties[2].Name));
Magic Number,Ramone.Tests.Utility,JsonPointerHelperTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\JsonPointerHelperTests.cs,CanGetPathFromArrayIndex,The following statement contains a magic number: Assert.AreEqual("/3/ArrayOfOtherParties/2/Name"' PArrayHelper.GetPath(r => r[3].ArrayOfOtherParties[2].Name));
Magic Number,Ramone.Tests.Utility,JsonPointerHelperTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\JsonPointerHelperTests.cs,CanGetPathFromArrayIndex,The following statement contains a magic number: Assert.AreEqual("/3/ArrayOfOtherParties/2/Name"' PArrayHelper.GetPath(r => r[3].ArrayOfOtherParties[2].Name));
Magic Number,Ramone.Tests.Utility,JsonPointerHelperTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\JsonPointerHelperTests.cs,CanGetPathFromArrayIndex,The following statement contains a magic number: Assert.AreEqual("/ArrayOfOtherParties/2/Name"' PObjHelper.GetPath(r => r.ArrayOfOtherParties[2].Name));
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,CanDeserializeSimpleTypes,The following statement contains a magic number: Assert.AreEqual(10' data.MyInt);
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,CanDeserializeSimpleTypes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2012'10'30'12'13'14)' data.MyDate);
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,CanDeserializeSimpleTypes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2012'10'30'12'13'14)' data.MyDate);
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,CanDeserializeSimpleTypes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2012'10'30'12'13'14)' data.MyDate);
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,CanDeserializeSimpleTypes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2012'10'30'12'13'14)' data.MyDate);
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,CanDeserializeSimpleTypes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2012'10'30'12'13'14)' data.MyDate);
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,CanDeserializeSimpleTypes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2012'10'30'12'13'14)' data.MyDate);
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,CanDeserializeSimpleTypes,The following statement contains a magic number: Assert.AreEqual(10.5f' data.MyFloat);
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,CanDeserializeSimpleTypes,The following statement contains a magic number: Assert.AreEqual(9.25d' data.MyDouble);
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,CanDeserializeSimpleTypes,The following statement contains a magic number: Assert.AreEqual(8.75m' data.MyDecimal);
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,WhenDeserializingItIgnoresExtraValues,The following statement contains a magic number: Assert.AreEqual(2' data.MyInt);
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,CanDeserializeNestedTypes,The following statement contains a magic number: Assert.AreEqual(555' data.MyInt);
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,CanDeserializeNestedTypes,The following statement contains a magic number: Assert.AreEqual(10' data.Simple.MyInt);
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,CanDeserializeNestedTypedDataWithCollections,The following statement contains a magic number: Assert.AreEqual(10' data.MyDictionaryStringNested["X"].MyInt);
Magic Number,Ramone.Tests.Utility,FormUrlEncodingDeserializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingDeserializerTests.cs,CanDeserializeNestedTypedDataWithCollections,The following statement contains a magic number: Assert.AreEqual(20' data.MyDictionaryStringNested["Y"].MyInt);
Magic Number,Ramone.Tests.Utility,DictionaryConverterTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\DictionaryConverterTests.cs,CanConvertSimpleObjectsToDictionary,The following statement contains a magic number: object o1 = new { A = 10' B = "Train"' C = true };
Magic Number,Ramone.Tests.Utility,DictionaryConverterTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\DictionaryConverterTests.cs,CanConvertSimpleObjectsToDictionary,The following statement contains a magic number: object o2 = new SimpleObject { X = 10' Y = "Train"' Z = true };
Magic Number,Ramone.Tests.Utility,DictionaryConverterTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\DictionaryConverterTests.cs,CanConvertSimpleObjectsToDictionary,The following statement contains a magic number: Assert.AreEqual(3' d1.Count);
Magic Number,Ramone.Tests.Utility,DictionaryConverterTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\DictionaryConverterTests.cs,CanConvertSimpleObjectsToDictionary,The following statement contains a magic number: Assert.AreEqual(4' d2.Count);
Magic Number,Ramone.Tests.Utility,LinkHeaderTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\LinkHeaderTests.cs,CanReadMultipleWebLinks,The following statement contains a magic number: Assert.AreEqual(2' links.Count);
Magic Number,Ramone.Tests.Utility,LinkHeaderTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\LinkHeaderTests.cs,CanReadLinksWithMultipleRelValues,The following statement contains a magic number: Assert.AreEqual(3' l1.RelationTypes.Count());
Magic Number,Ramone.Tests.Utility,LinkHeaderTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\LinkHeaderTests.cs,ItSkipsAttributesWithSyntaxErrors,The following statement contains a magic number: Assert.AreEqual(2' links1.Count);
Magic Number,Ramone.Tests.Utility,MultipartFormDataSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\MultipartFormDataSerializerTests.cs,CanSerializeSimpleClass,The following statement contains a magic number: SimpleData data = new SimpleData          {            MyInt = 10'            MyString = "Abc"          };
Magic Number,Ramone.Tests.Utility,FormUrlEncodingSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingSerializerTests.cs,CanSerializeSimpleClassWithEncoding,The following statement contains a magic number: SimpleData data = new SimpleData          {            MyInt = 10'            MyString = "Abc ÆØÅ^ü"          };
Magic Number,Ramone.Tests.Utility,FormUrlEncodingSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\FormUrlEncodingSerializerTests.cs,WhenSerializingDictionariesItIncludesContent,The following statement contains a magic number: DictionaryData data = new DictionaryData        {          MyInt = 20'          MyDict = new Dictionary<string' object>()'          MyNameValues = new NameValueCollection()'          MyHashtable = new Hashtable()        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerFormaterTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerFormaterTests.cs,CanSerializeWithStandardFormaters,The following statement contains a magic number: var o = new        {          Bool = false'          Date = new DateTime(2012' 10' 12' 15' 14' 13)'          Url = new Uri("http://dr.dk")        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerFormaterTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerFormaterTests.cs,CanSerializeWithStandardFormaters,The following statement contains a magic number: var o = new        {          Bool = false'          Date = new DateTime(2012' 10' 12' 15' 14' 13)'          Url = new Uri("http://dr.dk")        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerFormaterTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerFormaterTests.cs,CanSerializeWithStandardFormaters,The following statement contains a magic number: var o = new        {          Bool = false'          Date = new DateTime(2012' 10' 12' 15' 14' 13)'          Url = new Uri("http://dr.dk")        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerFormaterTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerFormaterTests.cs,CanSerializeWithStandardFormaters,The following statement contains a magic number: var o = new        {          Bool = false'          Date = new DateTime(2012' 10' 12' 15' 14' 13)'          Url = new Uri("http://dr.dk")        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerFormaterTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerFormaterTests.cs,CanSerializeWithStandardFormaters,The following statement contains a magic number: var o = new        {          Bool = false'          Date = new DateTime(2012' 10' 12' 15' 14' 13)'          Url = new Uri("http://dr.dk")        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerFormaterTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerFormaterTests.cs,CanSerializeWithStandardFormaters,The following statement contains a magic number: var o = new        {          Bool = false'          Date = new DateTime(2012' 10' 12' 15' 14' 13)'          Url = new Uri("http://dr.dk")        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeSimpleClass,The following statement contains a magic number: object o = new         {           A = 10'           B = "Train"'           C = true         };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeClassWithDictionary,The following statement contains a magic number: var o = new        {          A = 10'          B = new Dictionary<string' object>()        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeClassWithDictionary,The following statement contains a magic number: o.B["X"] = 100;
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeClassWithNestedDictionaries,The following statement contains a magic number: var o = new        {          A = 10'          B = new Dictionary<string' object>()        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeClassWithNestedDictionaries,The following statement contains a magic number: o.B["X"] = 100;
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeClassWithArray,The following statement contains a magic number: var o = new        {          A = 10'          B = new int[] { 10' 20 }        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeClassWithArray,The following statement contains a magic number: var o = new        {          A = 10'          B = new int[] { 10' 20 }        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeClassWithArray,The following statement contains a magic number: var o = new        {          A = 10'          B = new int[] { 10' 20 }        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeClassWithNestedArrays,The following statement contains a magic number: var o = new        {          A = 10'          B = new object[]          {            "James"'            new string[] { "Jamie"' "Jolee" }          }        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeClassWithNestedClass,The following statement contains a magic number: var o = new        {          B = new { x = 2' y = "abc" }'          A = 10        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeClassWithNestedClass,The following statement contains a magic number: var o = new        {          B = new { x = 2' y = "abc" }'          A = 10        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeWithDifferentSeparatorFormaters,The following statement contains a magic number: ((Hashtable)o.A)["p"] = 17;
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexMix,The following statement contains a magic number: var o = new        {          B = new           {             x = 2'             y = "abc"           }'          A = new object[]          {            "xyz"'            new Dictionary<string' object>()'            new { p = 2' q = "uuu" }          }        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexMix,The following statement contains a magic number: var o = new        {          B = new           {             x = 2'             y = "abc"           }'          A = new object[]          {            "xyz"'            new Dictionary<string' object>()'            new { p = 2' q = "uuu" }          }        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexMix,The following statement contains a magic number: ((Dictionary<string' object>)o.A[1])["I"] = new        {          b = 9'          n = 7        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexMix,The following statement contains a magic number: ((Dictionary<string' object>)o.A[1])["I"] = new        {          b = 9'          n = 7        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexClass,The following statement contains a magic number: ComplexClassForSerializationTests o = new ComplexClassForSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new int[] { 1' 2 }'          SubC = new ComplexClassForSerializationTests.SubClass          {            SubC = new ComplexClassForSerializationTests.SubClass            {              Data = new object[]              {                new Hashtable()              }            }'            Data = new object[]            {              5' "Hello"            }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 5' 30' 19' 20 '21)        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexClass,The following statement contains a magic number: ComplexClassForSerializationTests o = new ComplexClassForSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new int[] { 1' 2 }'          SubC = new ComplexClassForSerializationTests.SubClass          {            SubC = new ComplexClassForSerializationTests.SubClass            {              Data = new object[]              {                new Hashtable()              }            }'            Data = new object[]            {              5' "Hello"            }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 5' 30' 19' 20 '21)        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexClass,The following statement contains a magic number: ComplexClassForSerializationTests o = new ComplexClassForSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new int[] { 1' 2 }'          SubC = new ComplexClassForSerializationTests.SubClass          {            SubC = new ComplexClassForSerializationTests.SubClass            {              Data = new object[]              {                new Hashtable()              }            }'            Data = new object[]            {              5' "Hello"            }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 5' 30' 19' 20 '21)        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexClass,The following statement contains a magic number: ComplexClassForSerializationTests o = new ComplexClassForSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new int[] { 1' 2 }'          SubC = new ComplexClassForSerializationTests.SubClass          {            SubC = new ComplexClassForSerializationTests.SubClass            {              Data = new object[]              {                new Hashtable()              }            }'            Data = new object[]            {              5' "Hello"            }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 5' 30' 19' 20 '21)        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexClass,The following statement contains a magic number: ComplexClassForSerializationTests o = new ComplexClassForSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new int[] { 1' 2 }'          SubC = new ComplexClassForSerializationTests.SubClass          {            SubC = new ComplexClassForSerializationTests.SubClass            {              Data = new object[]              {                new Hashtable()              }            }'            Data = new object[]            {              5' "Hello"            }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 5' 30' 19' 20 '21)        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexClass,The following statement contains a magic number: ComplexClassForSerializationTests o = new ComplexClassForSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new int[] { 1' 2 }'          SubC = new ComplexClassForSerializationTests.SubClass          {            SubC = new ComplexClassForSerializationTests.SubClass            {              Data = new object[]              {                new Hashtable()              }            }'            Data = new object[]            {              5' "Hello"            }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 5' 30' 19' 20 '21)        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexClass,The following statement contains a magic number: ComplexClassForSerializationTests o = new ComplexClassForSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new int[] { 1' 2 }'          SubC = new ComplexClassForSerializationTests.SubClass          {            SubC = new ComplexClassForSerializationTests.SubClass            {              Data = new object[]              {                new Hashtable()              }            }'            Data = new object[]            {              5' "Hello"            }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 5' 30' 19' 20 '21)        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexClass,The following statement contains a magic number: ComplexClassForSerializationTests o = new ComplexClassForSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new int[] { 1' 2 }'          SubC = new ComplexClassForSerializationTests.SubClass          {            SubC = new ComplexClassForSerializationTests.SubClass            {              Data = new object[]              {                new Hashtable()              }            }'            Data = new object[]            {              5' "Hello"            }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 5' 30' 19' 20 '21)        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexClass,The following statement contains a magic number: ComplexClassForSerializationTests o = new ComplexClassForSerializationTests        {          X = 15'          Y = "Abc"'          IntArray = new int[] { 1' 2 }'          SubC = new ComplexClassForSerializationTests.SubClass          {            SubC = new ComplexClassForSerializationTests.SubClass            {              Data = new object[]              {                new Hashtable()              }            }'            Data = new object[]            {              5' "Hello"            }          }'          Dict = new Dictionary<string'string>()'          Date = new DateTime(2012' 5' 30' 19' 20 '21)        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeComplexClass,The following statement contains a magic number: ((Hashtable)o.SubC.SubC.Data[0])["w"] = 99;
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeDictionaryAndClassesWithNullValues,The following statement contains a magic number: var o = new        {          A = (int?)null'          B = new Dictionary<string' object>          {            { "X"' 100 }'            { "Y"' null }          }        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,CanSerializeDictionaryAndClassesAndExcludeNullValues,The following statement contains a magic number: var o = new        {          A = (int?)null'          B = new Dictionary<string' object>          {            { "X"' 100 }'            { "Y"' null }          }        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,WhenSerializingItUsesDefaultLocale,The following statement contains a magic number: ClassWithLocaleDependentValues o = new ClassWithLocaleDependentValues        {          Dec = 10.5M'          Flo = 20.12F'          Dou = 13.23        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,WhenSerializingItUsesDefaultLocale,The following statement contains a magic number: ClassWithLocaleDependentValues o = new ClassWithLocaleDependentValues        {          Dec = 10.5M'          Flo = 20.12F'          Dou = 13.23        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,WhenSerializingItUsesDefaultLocale,The following statement contains a magic number: ClassWithLocaleDependentValues o = new ClassWithLocaleDependentValues        {          Dec = 10.5M'          Flo = 20.12F'          Dou = 13.23        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,WhenSerializingItUsesSuppliedLocale,The following statement contains a magic number: ClassWithLocaleDependentValues o = new ClassWithLocaleDependentValues        {          Dec = 10.5M'          Flo = 20.12F'          Dou = 13.23        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,WhenSerializingItUsesSuppliedLocale,The following statement contains a magic number: ClassWithLocaleDependentValues o = new ClassWithLocaleDependentValues        {          Dec = 10.5M'          Flo = 20.12F'          Dou = 13.23        };
Magic Number,Ramone.Tests.Utility,ObjectSerializerTests,D:\research\architectureSmells\repos\JornWildt_Ramone\Ramone.Tests\Utility\ObjectSerializerTests.cs,WhenSerializingItUsesSuppliedLocale,The following statement contains a magic number: ClassWithLocaleDependentValues o = new ClassWithLocaleDependentValues        {          Dec = 10.5M'          Flo = 20.12F'          Dou = 13.23        };
