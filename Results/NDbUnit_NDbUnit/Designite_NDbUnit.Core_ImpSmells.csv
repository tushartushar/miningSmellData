Implementation smell,Namespace,Class,File,Method,Description
Long Method,NDbUnit.Core,NDbUnitTest,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\NDbUnitTest.cs,PerformDbOperation,The method has 77 lines of code.
Complex Method,NDbUnit.Core,DbCommandBuilder,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbCommandBuilder.cs,CreateUpdateCommand,Cyclomatic complexity of the method is 9
Complex Method,NDbUnit.Core,DbOperation,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,deleteRecursive,Cyclomatic complexity of the method is 8
Complex Method,NDbUnit.Core,DbOperation,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,insertRecursive,Cyclomatic complexity of the method is 9
Complex Method,NDbUnit.Core,NDbUnitTest,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\NDbUnitTest.cs,PerformDbOperation,Cyclomatic complexity of the method is 21
Long Parameter List,NDbUnit.Core,DbOperation,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,OnRefresh,The method has 4 parameters.
Long Parameter List,NDbUnit.Core,DbOperation,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,OnUpdate,The method has 4 parameters.
Long Parameter List,NDbUnit.Core,DbOperation,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,deleteCommon,The method has 4 parameters.
Long Parameter List,NDbUnit.Core,DbOperation,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,deleteRecursive,The method has 6 parameters.
Long Parameter List,NDbUnit.Core,DbOperation,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,insertCommon,The method has 4 parameters.
Long Parameter List,NDbUnit.Core,DbOperation,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,insertRecursive,The method has 6 parameters.
Long Statement,NDbUnit.Core,NDbUnitDataSetComparer,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DataSetComparer.cs,CompareEachTable,The length of the statement  "		string currentBreadCrumb = AddBreadCrumb (parms.Config' parms.BreadCrumb' "Tables"' string.Empty' dataSet1.Tables [i].TableName); " is 129.
Long Statement,NDbUnit.Core,DbCommandBuilder,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbCommandBuilder.cs,CreateDeleteAllCommand,The length of the statement  "	command.CommandText = String.Format ("DELETE FROM {0}"' TableNameHelper.FormatTableName (tableName' QuotePrefix' QuoteSuffix)); " is 127.
Long Statement,NDbUnit.Core,DbCommandBuilder,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbCommandBuilder.cs,CreateDeleteCommand,The length of the statement  "	sb.Append (String.Format ("DELETE FROM {0} WHERE "' TableNameHelper.FormatTableName (tableName' QuotePrefix' QuoteSuffix))); " is 124.
Long Statement,NDbUnit.Core,DbCommandBuilder,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbCommandBuilder.cs,CreateSelectCommand,The length of the statement  "		string message = String.Format ("DbCommandBuilder.CreateSelectCommand(DataSet' string) failed for tableName = '{0}'"' tableName); " is 129.
Long Statement,NDbUnit.Core,DbCommandBuilder,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbCommandBuilder.cs,isInitialized,The length of the statement  "		string message = "IDbCommandBuilder.BuildCommands(string) or IDbCommandBuilder.BuildCommands(Stream) must be called successfully"; " is 130.
Long Statement,NDbUnit.Core,DbConnectionManager,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbConnectionManager.cs,GetConnection,The length of the statement  "			throw new InvalidOperationException ("Cannot force new connection when DbConnectionManager has been initialized with an external connection."); " is 143.
Long Statement,NDbUnit.Core,DbOperation,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,OnInsertIdentity,The length of the statement  "			IDbCommand sqlCommand = CreateDbCommand ("SET IDENTITY_INSERT " + TableNameHelper.FormatTableName (dataTable.TableName' QuotePrefix' QuoteSuffix) + " ON"); " is 155.
Long Statement,NDbUnit.Core,DbOperation,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,OnInsertIdentity,The length of the statement  "				IDbCommand sqlCommand = CreateDbCommand ("SET IDENTITY_INSERT " + TableNameHelper.FormatTableName (dataTable.TableName' QuotePrefix' QuoteSuffix) + " OFF"); " is 156.
Long Statement,NDbUnit.Core,NDbUnitTest,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\NDbUnitTest.cs,ValidateNamespace,The length of the statement  "		throw new ArgumentException (string.Format ("The namespace in the file '{0}' is invalid.  Expected '{1}' but was '{2}'"' _xmlSchemaFile' expectedNamespace' dsSchema.Namespace)); " is 177.
Long Statement,NDbUnit.Core,NDbUnitTest,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\NDbUnitTest.cs,checkInitialized,The length of the statement  "		const string message = "INDbUnitTest.ReadXmlSchema(string) or INDbUnitTest.ReadXmlSchema(Stream) must be called successfully"; " is 126.
Empty Catch Block,NDbUnit.Core,DbCommandBuilder,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbCommandBuilder.cs,GetSchemaTable,The method has an empty catch block.
Empty Catch Block,NDbUnit.Core,DbOperation,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,deleteRecursive,The method has an empty catch block.
Empty Catch Block,NDbUnit.Core,DbOperation,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,deleteRecursive,The method has an empty catch block.
Missing Default,NDbUnit.Core,NDbUnitTest,D:\newReposJune17\NDbUnit_NDbUnit\src\NDbUnit.Core\NDbUnitTest.cs,PerformDbOperation,The following switch statement is missing a default case: switch (dbOperationFlag) {  case DbOperationFlag.Insert: {  	dbOperation.Insert (_dataSet' dbCommandBuilder' dbTransaction);  	break;  }  case DbOperationFlag.InsertIdentity: {  	dbOperation.InsertIdentity (_dataSet' dbCommandBuilder' dbTransaction);  	break;  }  case DbOperationFlag.Delete: {  	dbOperation.Delete (_dataSet' dbCommandBuilder' dbTransaction);  	break;  }  case DbOperationFlag.DeleteAll: {  	dbOperation.DeleteAll (_dataSet' dbCommandBuilder' dbTransaction);  	break;  }  case DbOperationFlag.Refresh: {  	dbOperation.Refresh (_dataSet' dbCommandBuilder' dbTransaction);  	break;  }  case DbOperationFlag.Update: {  	dbOperation.Update (_dataSet' dbCommandBuilder' dbTransaction);  	break;  }  case DbOperationFlag.CleanInsert: {  	dbOperation.DeleteAll (_dataSet' dbCommandBuilder' dbTransaction);  	dbOperation.Insert (_dataSet' dbCommandBuilder' dbTransaction);  	break;  }  case DbOperationFlag.CleanInsertIdentity: {  	dbOperation.DeleteAll (_dataSet' dbCommandBuilder' dbTransaction);  	dbOperation.InsertIdentity (_dataSet' dbCommandBuilder' dbTransaction);  	break;  }  }  
