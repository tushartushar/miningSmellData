Implementation smell,Namespace,Class,File,Method,Description
Long Method,NDbUnit.Core,NDbUnitTest<TDbConnection>,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\NDbUnitTest.cs,PerformDbOperation,The method has 112 lines of code.
Complex Method,NDbUnit.Core,DbCommandBuilder<TDbConnection>,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\DbCommandBuilder.cs,CreateUpdateCommand,Cyclomatic complexity of the method is 9
Complex Method,NDbUnit.Core,DbOperation,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,insertRecursive,Cyclomatic complexity of the method is 9
Complex Method,NDbUnit.Core,NDbUnitTest<TDbConnection>,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\NDbUnitTest.cs,PerformDbOperation,Cyclomatic complexity of the method is 12
Long Parameter List,NDbUnit.Core,DbOperation,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,deleteRecursive,The method has 6 parameters. Parameters: ds' dataTableSchema' dbCommandBuilder' dbTransaction' deletedTableColl' deleteAll
Long Parameter List,NDbUnit.Core,DbOperation,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,insertRecursive,The method has 6 parameters. Parameters: ds' dataTableSchema' dbCommandBuilder' dbTransaction' insertedTableColl' insertIdentity
Long Statement,NDbUnit.Core,DbCommandBuilder<TDbConnection>,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\DbCommandBuilder.cs,CreateDeleteAllCommand,The length of the statement  "            command.CommandText = String.Format("DELETE FROM {0}"' TableNameHelper.FormatTableName(tableName' QuotePrefix' QuoteSuffix));" is 125.
Long Statement,NDbUnit.Core,DbCommandBuilder<TDbConnection>,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\DbCommandBuilder.cs,CreateDeleteCommand,The length of the statement  "            sb.Append(String.Format("DELETE FROM {0} WHERE "' TableNameHelper.FormatTableName(tableName' QuotePrefix' QuoteSuffix)));" is 121.
Long Statement,NDbUnit.Core,DbConnectionManager<TDbConnection>,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\DbConnectionManager.cs,GetConnection,The length of the statement  "                    throw new InvalidOperationException("Cannot force new connection when DbConnectionManager has been initialized with an external connection.");" is 142.
Long Statement,NDbUnit.Core,NDbUnitTest<TDbConnection>,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\NDbUnitTest.cs,ValidateNamespace,The length of the statement  "                throw new ArgumentException(string.Format("The namespace in the file '{0}' is invalid.  Expected '{1}' but was '{2}'"' _xmlSchemaFile' expectedNamespace' dsSchema.Namespace));" is 175.
Long Statement,NDbUnit.Core,NDbUnitTest<TDbConnection>,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\NDbUnitTest.cs,checkInitialized,The length of the statement  "                const string message = "INDbUnitTest.ReadXmlSchema(string) or INDbUnitTest.ReadXmlSchema(Stream) must be called successfully";" is 126.
Empty Catch Block,NDbUnit.Core,DbCommandBuilder<TDbConnection>,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\DbCommandBuilder.cs,GetSchemaTable,The method has an empty catch block.
Empty Catch Block,NDbUnit.Core,DbOperation,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,deleteRecursive,The method has an empty catch block.
Empty Catch Block,NDbUnit.Core,DbOperation,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\DbOperation.cs,deleteRecursive,The method has an empty catch block.
Missing Default,NDbUnit.Core,NDbUnitTest<TDbConnection>,C:\research\architectureSmells\repos\NDbUnit_NDbUnit\src\NDbUnit.Core\NDbUnitTest.cs,PerformDbOperation,The following switch statement is missing a default case: switch (dbOperationFlag)                 {                     case DbOperationFlag.Insert:                         {                             dbOperation.Insert(_dataSet' dbCommandBuilder' dbTransaction);                             break;                         }                     case DbOperationFlag.InsertIdentity:                         {                             dbOperation.InsertIdentity(_dataSet' dbCommandBuilder' dbTransaction);                             break;                         }                     case DbOperationFlag.Delete:                         {                             dbOperation.Delete(_dataSet' dbCommandBuilder' dbTransaction);                              break;                         }                     case DbOperationFlag.DeleteAll:                         {                             dbOperation.DeleteAll(_dataSet' dbCommandBuilder' dbTransaction);                             break;                         }                     case DbOperationFlag.Refresh:                         {                             dbOperation.Refresh(_dataSet' dbCommandBuilder' dbTransaction);                             break;                         }                     case DbOperationFlag.Update:                         {                             dbOperation.Update(_dataSet' dbCommandBuilder' dbTransaction);                             break;                         }                     case DbOperationFlag.CleanInsert:                         {                             dbOperation.DeleteAll(_dataSet' dbCommandBuilder' dbTransaction);                             dbOperation.Insert(_dataSet' dbCommandBuilder' dbTransaction);                             break;                         }                     case DbOperationFlag.CleanInsertIdentity:                         {                             dbOperation.DeleteAll(_dataSet' dbCommandBuilder' dbTransaction);                             dbOperation.InsertIdentity(_dataSet' dbCommandBuilder' dbTransaction);                             break;                         }                 }
