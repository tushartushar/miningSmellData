Implementation smell,Namespace,Class,File,Method,Description
Long Method,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,OnWorkerDoWork,The method has 125 lines of code.
Long Method,AppLimit.NetSparkle,NetSparkleForm,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleForm.cs,InitializeComponent,The method has 127 lines of code.
Complex Method,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,OnWebDownloadClientDownloadFileCompleted,Cyclomatic complexity of the method is 8
Complex Method,AppLimit.NetSparkle,NetSparkleAppCast,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleAppCast.cs,GetLatestVersion,Cyclomatic complexity of the method is 11
Complex Method,AppLimit.NetSparkle,NetSparkleDownloadProgress,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleDownloadProgress.cs,OnClientDownloadFileCompleted,Cyclomatic complexity of the method is 8
Long Parameter List,AppLimit.NetSparkle,NetSparkleDownloadProgress,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleDownloadProgress.cs,NetSparkleDownloadProgress,The method has 5 parameters. Parameters: sparkle' item' appIcon' windowIcon' Unattend
Long Identifier,AppLimit.NetSparkle,NetSparkleConfiguration,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleConfiguration.cs,NetSparkleConfiguration,The length of the parameter isReflectionBasedAssemblyAccessorUsed is 37.
Long Statement,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,UnregisterEvents,The length of the statement  "                    _webDownloadClient.DownloadProgressChanged -= new DownloadProgressChangedEventHandler(this.ProgressWindow.OnClientDownloadProgressChanged); " is 139.
Long Statement,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,IsUpdateRequired,The length of the statement  "                ReportDiagnosticMessage("Latest update has to be skipped (user decided to skip version " + config.SkipThisVersion + ")"); " is 121.
Long Statement,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,InitDownloadAndInstallProcess,The length of the statement  "                this.ProgressWindow = new NetSparkleDownloadProgress(this' item' ApplicationIcon' ApplicationWindowIcon' EnableSilentMode); " is 123.
Long Statement,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,InitDownloadAndInstallProcess,The length of the statement  "                _webDownloadClient.DownloadProgressChanged -= new DownloadProgressChangedEventHandler(this.ProgressWindow.OnClientDownloadProgressChanged); " is 139.
Long Statement,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,InitDownloadAndInstallProcess,The length of the statement  "            _webDownloadClient.DownloadProgressChanged += new DownloadProgressChangedEventHandler(this.ProgressWindow.OnClientDownloadProgressChanged); " is 139.
Long Statement,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,RunDownloadedInstaller,The length of the statement  "                MessageBox.Show("Updater not supported' please execute " + _downloadTempFileName + " manually"' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 149.
Long Statement,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,CheckForUpdates,The length of the statement  "                ReportDiagnosticMessage("Update needed from version " + config.InstalledVersion + " to version " + latestVersion.Version); " is 122.
Long Statement,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,CheckForUpdates,The length of the statement  "                UpdateDetectedEventArgs ev = new UpdateDetectedEventArgs { NextAction = NextUpdateAction.ShowStandardUserInterface' ApplicationConfig = config' LatestVersion = latestVersion }; " is 176.
Long Statement,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,OnWorkerDoWork,The length of the statement  "                        ReportDiagnosticMessage(String.Format("Update check performed within the last {0} minutes!"' _CheckFrequency.TotalMinutes)); " is 124.
Long Statement,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,OnWorkerDoWork,The length of the statement  "                ReportDiagnosticMessage("Update needed from version " + config.InstalledVersion + " to version " + latestVersion.Version); " is 122.
Long Statement,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,OnWorkerDoWork,The length of the statement  "                UpdateDetectedEventArgs ev = new UpdateDetectedEventArgs { NextAction = NextUpdateAction.ShowStandardUserInterface' ApplicationConfig = config' LatestVersion = latestVersion }; " is 176.
Long Statement,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,OnWorkerDoWork,The length of the statement  "                ReportDiagnosticMessage(String.Format("Sleeping for an other {0} minutes' exit event or force update check event"' _CheckFrequency.TotalMinutes)); " is 146.
Long Statement,AppLimit.NetSparkle,NetSparkleDeviceInventory,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleDeviceInventory.cs,CollectWindowsVersion,The length of the statement  "            OsVersion = string.Format("{0}.{1}.{2}.{3}"' osInfo.Version.Major' osInfo.Version.Minor' osInfo.Version.Build' osInfo.Version.Revision); " is 136.
Long Statement,AppLimit.NetSparkle,NetSparkleDownloadProgress,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleDownloadProgress.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(NetSparkleDownloadProgress)); " is 146.
Long Statement,AppLimit.NetSparkle,NetSparkleDSAVerificator,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleDSAVerificator.cs,TryGetResourceStream,The length of the statement  "                var resourceName = asm.GetManifestResourceNames().FirstOrDefault(s => s.IndexOf(publicKey' StringComparison.OrdinalIgnoreCase) > -1); " is 133.
Long Statement,AppLimit.NetSparkle,NetSparkleForm,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleForm.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(NetSparkleForm)); " is 134.
Long Statement,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(NetSparkleMainWindows)); " is 141.
Long Statement,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The length of the statement  "            this.label1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 139.
Long Statement,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The length of the statement  "            this.label1.Font = new System.Drawing.Font("Segoe UI"' 9.75F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 141.
Long Statement,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The length of the statement  "            this.lstActions.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 146.
Empty Catch Block,AppLimit.NetSparkle,NetSparkleForm,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleForm.cs,NetSparkleForm,The method has an empty catch block.
Magic Number,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,StartLoop,The following statement contains a magic number: StartLoop(doInitialCheck' forceInitialCheck' TimeSpan.FromHours(24));
Magic Number,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,UpdateSystemProfileInformation,The following statement contains a magic number: DateTime.Now - config.LastProfileUpdate < new TimeSpan(7' 0' 0' 0)
Magic Number,AppLimit.NetSparkle,NetSparkleDeviceInventory,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleDeviceInventory.cs,CollectProcessorBitnes,The following statement contains a magic number: x64System = Marshal.SizeOf(typeof(IntPtr)) == 8;
Magic Number,AppLimit.NetSparkle,NetSparkleDeviceInventory,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleDeviceInventory.cs,CollectRamSize,The following statement contains a magic number: MemorySize = (MemorySize / 1024) / 1024;
Magic Number,AppLimit.NetSparkle,NetSparkleDeviceInventory,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleDeviceInventory.cs,CollectRamSize,The following statement contains a magic number: MemorySize = (MemorySize / 1024) / 1024;
Magic Number,AppLimit.NetSparkle,NetSparkleDownloadProgress,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleDownloadProgress.cs,NetSparkleDownloadProgress,The following statement contains a magic number: progressDownload.Maximum = 100;
Magic Number,AppLimit.NetSparkle,NetSparkleDownloadProgress,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleDownloadProgress.cs,NetSparkleDownloadProgress,The following statement contains a magic number: Size = new Size(Size.Width' 107);
Magic Number,AppLimit.NetSparkle,NetSparkleDownloadProgress,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleDownloadProgress.cs,UpdateDownloadValid,The following statement contains a magic number: Size = new Size(Size.Width' 137);
Magic Number,AppLimit.NetSparkle,NetSparkleForm,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleForm.cs,InitializeComponent,The following statement contains a magic number: this.NetSparkleBrowser.MinimumSize = new System.Drawing.Size(20' 28);
Magic Number,AppLimit.NetSparkle,NetSparkleForm,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleForm.cs,InitializeComponent,The following statement contains a magic number: this.NetSparkleBrowser.MinimumSize = new System.Drawing.Size(20' 28);
Magic Number,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The following statement contains a magic number: this.label1.Font = new System.Drawing.Font("Segoe UI"' 9.75F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0)));
Magic Number,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 9);
Magic Number,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 9);
Magic Number,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(503' 23);
Magic Number,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(503' 23);
Magic Number,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The following statement contains a magic number: this.lstActions.Location = new System.Drawing.Point(15' 35);
Magic Number,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The following statement contains a magic number: this.lstActions.Location = new System.Drawing.Point(15' 35);
Magic Number,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The following statement contains a magic number: this.lstActions.Size = new System.Drawing.Size(500' 303);
Magic Number,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The following statement contains a magic number: this.lstActions.Size = new System.Drawing.Size(500' 303);
Magic Number,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(527' 351);
Magic Number,AppLimit.NetSparkle,NetSparkleMainWindows,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleMainWindows.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(527' 351);
Missing Default,AppLimit.NetSparkle,Sparkle,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkle.cs,OnWorkerProgressChanged,The following switch statement is missing a default case: switch (e.ProgressPercentage)              {                  case 1:                      Update(e.UserState as NetSparkleAppCastItem);                      break;                  case 0:                      ReportDiagnosticMessage(e.UserState.ToString());                      break;              }
Missing Default,AppLimit.NetSparkle,NetSparkleAppCast,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleAppCast.cs,GetLatestVersion,The following switch statement is missing a default case: switch (reader.NodeType)                          {                              case XmlNodeType.Element:                                  switch (reader.Name)                                  {                                      case itemNode:                                          {                                              currentItem = new NetSparkleAppCastItem();                                              break;                                          }                                      case releaseNotesLinkNode:                                          {                                              if (currentItem != null)                                              {                                                  currentItem.ReleaseNotesLink = reader.ReadString();                                                  currentItem.ReleaseNotesLink = currentItem.ReleaseNotesLink.Trim('\n');                                              }                                              break;                                          }                                      case enclosureNode:                                          {                                              if (currentItem != null)                                              {                                                  currentItem.Version = reader.GetAttribute(versionAttribute);                                                  currentItem.DownloadLink = reader.GetAttribute(urlAttribute);                                                  currentItem.DSASignature = reader.GetAttribute(dasSignature);                                              }                                              break;                                          }                                  }                                  break;                              case XmlNodeType.EndElement:                                  switch (reader.Name)                                  {                                      case itemNode:                                          {                                              if (latestVersion == null)                                                  latestVersion = currentItem;                                              else if (currentItem.CompareTo(latestVersion) > 0)                                              {                                                  latestVersion = currentItem;                                              }                                              break;                                          }                                  }                                  break;                          }
Missing Default,AppLimit.NetSparkle,NetSparkleAppCast,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleAppCast.cs,GetLatestVersion,The following switch statement is missing a default case: switch (reader.Name)                                  {                                      case itemNode:                                          {                                              currentItem = new NetSparkleAppCastItem();                                              break;                                          }                                      case releaseNotesLinkNode:                                          {                                              if (currentItem != null)                                              {                                                  currentItem.ReleaseNotesLink = reader.ReadString();                                                  currentItem.ReleaseNotesLink = currentItem.ReleaseNotesLink.Trim('\n');                                              }                                              break;                                          }                                      case enclosureNode:                                          {                                              if (currentItem != null)                                              {                                                  currentItem.Version = reader.GetAttribute(versionAttribute);                                                  currentItem.DownloadLink = reader.GetAttribute(urlAttribute);                                                  currentItem.DSASignature = reader.GetAttribute(dasSignature);                                              }                                              break;                                          }                                  }
Missing Default,AppLimit.NetSparkle,NetSparkleAppCast,D:\research\architectureSmells\repos\jimgraham_NetSparkle\NetSparkle\NetSparkleAppCast.cs,GetLatestVersion,The following switch statement is missing a default case: switch (reader.Name)                                  {                                      case itemNode:                                          {                                              if (latestVersion == null)                                                  latestVersion = currentItem;                                              else if (currentItem.CompareTo(latestVersion) > 0)                                              {                                                  latestVersion = currentItem;                                              }                                              break;                                          }                                  }
