Implementation smell,Namespace,Class,File,Method,Description
Complex Method,git_wrapper,mainForm,C:\repos\gllera_git-wrapper\svn_git\Form.cs,Procesado,Cyclomatic complexity of the method is 24
Complex Method,MouseKeyboardActivityMonitor,MouseEventExtArgs,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\MouseEventExtArgs.cs,FromRawDataUniversal,Cyclomatic complexity of the method is 63
Long Parameter List,MouseKeyboardActivityMonitor,KeyEventArgsExt,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\KeyEventArgsExt.cs,KeyEventArgsExt,The method has 5 parameters.
Long Parameter List,MouseKeyboardActivityMonitor,MouseEventExtArgs,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\MouseEventExtArgs.cs,MouseEventExtArgs,The method has 7 parameters.
Long Parameter List,MouseKeyboardActivityMonitor.WinApi,KeyboardNativeMethods,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\WinApi\KeyboardNativeMethods.cs,TryGetCharFromKeyboardState,The method has 5 parameters.
Long Parameter List,MouseKeyboardActivityMonitor.WinApi,KeyboardNativeMethods,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\WinApi\KeyboardNativeMethods.cs,ToAscii,The method has 5 parameters.
Long Parameter List,MouseKeyboardActivityMonitor.WinApi,KeyboardNativeMethods,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\WinApi\KeyboardNativeMethods.cs,ToUnicodeEx,The method has 7 parameters.
Long Statement,git_wrapper,Version_Control_Handler,C:\repos\gllera_git-wrapper\svn_git\GitWrapper.cs,Is_git_ok,The length of the statement  "		Inform ("Debe estar en la rama git \"" + from_branch + "\" en lugar de \"" + branch + "\" para poder hacer " + command + " en svn."' ToolTipIcon.Error); " is 152.
Long Statement,MouseKeyboardActivityMonitor,BaseHookListener,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\BaseHookListener.cs,Start,The length of the statement  "		throw new InvalidOperationException ("Hook listener is already started. Call Stop() method firts or use Enabled property."); " is 124.
Long Statement,MouseKeyboardActivityMonitor,KeyEventArgsExt,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\KeyEventArgsExt.cs,FromRawDataApp,The length of the statement  "	//bit 30 Specifies the previous key state. The value is 1 if the key is down before the message is sent; it is 0 if the key is up. " is 130.
Long Statement,MouseKeyboardActivityMonitor,KeyEventArgsExt,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\KeyEventArgsExt.cs,FromRawDataGlobal,The length of the statement  "	KeyboardHookStruct keyboardHookStruct = (KeyboardHookStruct)Marshal.PtrToStructure (lParam' typeof(KeyboardHookStruct)); " is 120.
Long Statement,MouseKeyboardActivityMonitor,KeyEventArgsExt,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\KeyEventArgsExt.cs,FromRawDataGlobal,The length of the statement  "		return new KeyEventArgsExt (keyData' keyboardHookStruct.Time' isKeyDown' isKeyUp' (char)AppendModifierStates ((Keys)keyboardHookStruct.ScanCode)); " is 146.
Long Statement,MouseKeyboardActivityMonitor,KeyEventArgsExt,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\KeyEventArgsExt.cs,FromRawDataGlobal,The length of the statement  "	KeyboardNativeMethods.TryGetCharFromKeyboardState (keyboardHookStruct.VirtualKeyCode' keyboardHookStruct.ScanCode' keyboardHookStruct.Flags' out ch); " is 149.
Long Statement,MouseKeyboardActivityMonitor,KeyEventArgsExt,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\KeyEventArgsExt.cs,AppendModifierStates,The length of the statement  "	bool control = ((KeyboardNativeMethods.GetKeyState (KeyboardNativeMethods.VK_LCONTROL) & 0x80) != 0) || ((KeyboardNativeMethods.GetKeyState (KeyboardNativeMethods.VK_RCONTROL) & 0x80) != 0); " is 190.
Long Statement,MouseKeyboardActivityMonitor,KeyEventArgsExt,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\KeyEventArgsExt.cs,AppendModifierStates,The length of the statement  "	bool shift = ((KeyboardNativeMethods.GetKeyState (KeyboardNativeMethods.VK_LSHIFT) & 0x80) != 0) || ((KeyboardNativeMethods.GetKeyState (KeyboardNativeMethods.VK_RSHIFT) & 0x80) != 0); " is 184.
Long Statement,MouseKeyboardActivityMonitor,KeyEventArgsExt,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\KeyEventArgsExt.cs,AppendModifierStates,The length of the statement  "	bool alt = ((KeyboardNativeMethods.GetKeyState (KeyboardNativeMethods.VK_LMENU) & 0x80) != 0) || ((KeyboardNativeMethods.GetKeyState (KeyboardNativeMethods.VK_RMENU) & 0x80) != 0); " is 180.
Long Statement,MouseKeyboardActivityMonitor,KeyEventArgsExt,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\KeyEventArgsExt.cs,AppendModifierStates,The length of the statement  "	return keyData | (control ? Keys.Control : Keys.None) | (shift ? Keys.Shift : Keys.None) | (alt ? Keys.Alt : Keys.None) | (winL ? Keys.LWin : Keys.None) | (winR ? Keys.RWin : Keys.None); " is 186.
Long Statement,MouseKeyboardActivityMonitor,KeyPressEventArgsExt,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\KeyPressEventArgsExt.cs,FromRawDataApp,The length of the statement  "	//bit 30 Specifies the previous key state. The value is 1 if the key is down before the message is sent; it is 0 if the key is up. " is 130.
Long Statement,MouseKeyboardActivityMonitor,KeyPressEventArgsExt,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\KeyPressEventArgsExt.cs,FromRawDataGlobal,The length of the statement  "	KeyboardHookStruct keyboardHookStruct = (KeyboardHookStruct)Marshal.PtrToStructure (lParam' typeof(KeyboardHookStruct)); " is 120.
Long Statement,MouseKeyboardActivityMonitor,MouseEventExtArgs,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\MouseEventExtArgs.cs,FromRawDataUniversal,The length of the statement  "	var e = new MouseEventExtArgs (button' clickCount' mouseInfo.Point' mouseDelta' mouseInfo.Timestamp' isMouseKeyDown' isMouseKeyUp); " is 131.
Long Statement,MouseKeyboardActivityMonitor.HotKeys,HotKeySetsListener,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\HotKeys\HotKeySetsListener.cs,ProcessCallback,The length of the statement  "	//Can bypass the base by setting the 3 Invoke methods to protected' which will reduce having to create KeyEventArgsExt twice. " is 125.
Long Statement,MouseKeyboardActivityMonitor.WinApi,AppHooker,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\WinApi\AppHooker.cs,Subscribe,The length of the statement  "	int hookHandle = HookNativeMethods.SetWindowsHookEx (hookId' hookCallback' IntPtr.Zero' ThreadNativeMethods.GetCurrentThreadId ()); " is 131.
Long Statement,MouseKeyboardActivityMonitor.WinApi,GlobalHooker,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\WinApi\GlobalHooker.cs,Subscribe,The length of the statement  "	int hookHandle = HookNativeMethods.SetWindowsHookEx (hookId' hookCallback' Process.GetCurrentProcess ().MainModule.BaseAddress' 0); " is 131.
Long Statement,MouseKeyboardActivityMonitor.WinApi,Hooker,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\WinApi\Hooker.cs,ThrowLastUnmanagedErrorAsException,The length of the statement  "	//Returns the error code returned by the last unmanaged function called using platform invoke that has the DllImportAttribute.SetLastError flag set.  " is 148.
Magic Number,git_wrapper,mainForm,C:\repos\gllera_git-wrapper\svn_git\Form.cs,vch_Inform,The following statement contains a magic number: trayIcon.ShowBalloonTip (50);  
Magic Number,git_wrapper,mainForm,C:\repos\gllera_git-wrapper\svn_git\Form.cs,button3_Click,The following statement contains a magic number: trayIcon.ShowBalloonTip (50);  
Magic Number,git_wrapper,Version_Control_Handler,C:\repos\gllera_git-wrapper\svn_git\GitWrapper.cs,Sync_SVN_to_Git,The following statement contains a magic number: foreach (string folder in svn_folders) {  	var svn_files = query (svn' "ls -R"' folder);  	foreach (string file in svn_files) {  		if (file.Last () != '/') {  			string fullPath = folder + '/' + file;  			if (!git_files.Contains (fullPath)) {  				if (sol.Length + fullPath.Length > 4000) {  					execute (git' sol.ToString ()' repo_path);  					sol.Clear ().Append ("add -f");  				}  				sol.Append (" \"").Append (fullPath).Append ('"');  			}  		}  	}  }  
Magic Number,git_wrapper,Version_Control_Handler,C:\repos\gllera_git-wrapper\svn_git\GitWrapper.cs,Sync_SVN_to_Git,The following statement contains a magic number: foreach (string file in svn_files) {  	if (file.Last () != '/') {  		string fullPath = folder + '/' + file;  		if (!git_files.Contains (fullPath)) {  			if (sol.Length + fullPath.Length > 4000) {  				execute (git' sol.ToString ()' repo_path);  				sol.Clear ().Append ("add -f");  			}  			sol.Append (" \"").Append (fullPath).Append ('"');  		}  	}  }  
Magic Number,git_wrapper,Version_Control_Handler,C:\repos\gllera_git-wrapper\svn_git\GitWrapper.cs,Sync_SVN_to_Git,The following statement contains a magic number: if (file.Last () != '/') {  	string fullPath = folder + '/' + file;  	if (!git_files.Contains (fullPath)) {  		if (sol.Length + fullPath.Length > 4000) {  			execute (git' sol.ToString ()' repo_path);  			sol.Clear ().Append ("add -f");  		}  		sol.Append (" \"").Append (fullPath).Append ('"');  	}  }  
Magic Number,git_wrapper,Version_Control_Handler,C:\repos\gllera_git-wrapper\svn_git\GitWrapper.cs,Sync_SVN_to_Git,The following statement contains a magic number: if (!git_files.Contains (fullPath)) {  	if (sol.Length + fullPath.Length > 4000) {  		execute (git' sol.ToString ()' repo_path);  		sol.Clear ().Append ("add -f");  	}  	sol.Append (" \"").Append (fullPath).Append ('"');  }  
Magic Number,git_wrapper,Version_Control_Handler,C:\repos\gllera_git-wrapper\svn_git\GitWrapper.cs,Sync_SVN_to_Git,The following statement contains a magic number: if (sol.Length + fullPath.Length > 4000) {  	execute (git' sol.ToString ()' repo_path);  	sol.Clear ().Append ("add -f");  }  
Magic Number,git_wrapper,Version_Control_Handler,C:\repos\gllera_git-wrapper\svn_git\GitWrapper.cs,Sync_SVN_to_Git,The following statement contains a magic number: if (sol.Length != 6) {  	execute (git' sol.ToString ()' repo_path);  }  
Magic Number,MouseKeyboardActivityMonitor,KeyboardState,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\KeyboardState.cs,GetKeyState,The following statement contains a magic number: if (virtualKeyCode < 0 || virtualKeyCode > 255) {  	throw new ArgumentOutOfRangeException ("key"' key' "The value must be between 0 and 255.");  }  
Magic Number,MouseKeyboardActivityMonitor,KeyboardState,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\KeyboardState.cs,GetHighBit,The following statement contains a magic number: return (value >> 7) != 0;  
Magic Number,MouseKeyboardActivityMonitor,MouseEventExtArgs,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\MouseEventExtArgs.cs,FromRawDataUniversal,The following statement contains a magic number: switch (wParam) {  case Messages.WM_LBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Left;  	clickCount = 1;  	break;  case Messages.WM_LBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Left;  	clickCount = 1;  	break;  case Messages.WM_LBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Left;  	clickCount = 2;  	break;  case Messages.WM_RBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Right;  	clickCount = 1;  	break;  case Messages.WM_RBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Right;  	clickCount = 1;  	break;  case Messages.WM_RBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Right;  	clickCount = 2;  	break;  case Messages.WM_MBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Middle;  	clickCount = 1;  	break;  case Messages.WM_MBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Middle;  	clickCount = 1;  	break;  case Messages.WM_MBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Middle;  	clickCount = 2;  	break;  case Messages.WM_MOUSEWHEEL:  	mouseDelta = mouseInfo.MouseData;  	break;  case Messages.WM_XBUTTONDOWN:  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	isMouseKeyDown = true;  	clickCount = 1;  	break;  case Messages.WM_XBUTTONUP:  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	isMouseKeyUp = true;  	clickCount = 1;  	break;  case Messages.WM_XBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	clickCount = 2;  	break;  }  
Magic Number,MouseKeyboardActivityMonitor,MouseEventExtArgs,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\MouseEventExtArgs.cs,FromRawDataUniversal,The following statement contains a magic number: switch (wParam) {  case Messages.WM_LBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Left;  	clickCount = 1;  	break;  case Messages.WM_LBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Left;  	clickCount = 1;  	break;  case Messages.WM_LBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Left;  	clickCount = 2;  	break;  case Messages.WM_RBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Right;  	clickCount = 1;  	break;  case Messages.WM_RBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Right;  	clickCount = 1;  	break;  case Messages.WM_RBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Right;  	clickCount = 2;  	break;  case Messages.WM_MBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Middle;  	clickCount = 1;  	break;  case Messages.WM_MBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Middle;  	clickCount = 1;  	break;  case Messages.WM_MBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Middle;  	clickCount = 2;  	break;  case Messages.WM_MOUSEWHEEL:  	mouseDelta = mouseInfo.MouseData;  	break;  case Messages.WM_XBUTTONDOWN:  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	isMouseKeyDown = true;  	clickCount = 1;  	break;  case Messages.WM_XBUTTONUP:  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	isMouseKeyUp = true;  	clickCount = 1;  	break;  case Messages.WM_XBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	clickCount = 2;  	break;  }  
Magic Number,MouseKeyboardActivityMonitor,MouseEventExtArgs,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\MouseEventExtArgs.cs,FromRawDataUniversal,The following statement contains a magic number: switch (wParam) {  case Messages.WM_LBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Left;  	clickCount = 1;  	break;  case Messages.WM_LBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Left;  	clickCount = 1;  	break;  case Messages.WM_LBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Left;  	clickCount = 2;  	break;  case Messages.WM_RBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Right;  	clickCount = 1;  	break;  case Messages.WM_RBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Right;  	clickCount = 1;  	break;  case Messages.WM_RBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Right;  	clickCount = 2;  	break;  case Messages.WM_MBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Middle;  	clickCount = 1;  	break;  case Messages.WM_MBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Middle;  	clickCount = 1;  	break;  case Messages.WM_MBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Middle;  	clickCount = 2;  	break;  case Messages.WM_MOUSEWHEEL:  	mouseDelta = mouseInfo.MouseData;  	break;  case Messages.WM_XBUTTONDOWN:  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	isMouseKeyDown = true;  	clickCount = 1;  	break;  case Messages.WM_XBUTTONUP:  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	isMouseKeyUp = true;  	clickCount = 1;  	break;  case Messages.WM_XBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	clickCount = 2;  	break;  }  
Magic Number,MouseKeyboardActivityMonitor,MouseEventExtArgs,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\MouseEventExtArgs.cs,FromRawDataUniversal,The following statement contains a magic number: switch (wParam) {  case Messages.WM_LBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Left;  	clickCount = 1;  	break;  case Messages.WM_LBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Left;  	clickCount = 1;  	break;  case Messages.WM_LBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Left;  	clickCount = 2;  	break;  case Messages.WM_RBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Right;  	clickCount = 1;  	break;  case Messages.WM_RBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Right;  	clickCount = 1;  	break;  case Messages.WM_RBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Right;  	clickCount = 2;  	break;  case Messages.WM_MBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Middle;  	clickCount = 1;  	break;  case Messages.WM_MBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Middle;  	clickCount = 1;  	break;  case Messages.WM_MBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Middle;  	clickCount = 2;  	break;  case Messages.WM_MOUSEWHEEL:  	mouseDelta = mouseInfo.MouseData;  	break;  case Messages.WM_XBUTTONDOWN:  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	isMouseKeyDown = true;  	clickCount = 1;  	break;  case Messages.WM_XBUTTONUP:  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	isMouseKeyUp = true;  	clickCount = 1;  	break;  case Messages.WM_XBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	clickCount = 2;  	break;  }  
Magic Number,MouseKeyboardActivityMonitor,MouseEventExtArgs,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\MouseEventExtArgs.cs,FromRawDataUniversal,The following statement contains a magic number: clickCount = 2;  
Magic Number,MouseKeyboardActivityMonitor,MouseEventExtArgs,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\MouseEventExtArgs.cs,FromRawDataUniversal,The following statement contains a magic number: clickCount = 2;  
Magic Number,MouseKeyboardActivityMonitor,MouseEventExtArgs,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\MouseEventExtArgs.cs,FromRawDataUniversal,The following statement contains a magic number: clickCount = 2;  
Magic Number,MouseKeyboardActivityMonitor,MouseEventExtArgs,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\MouseEventExtArgs.cs,FromRawDataUniversal,The following statement contains a magic number: clickCount = 2;  
Magic Number,MouseKeyboardActivityMonitor,MouseEventExtArgs,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\MouseEventExtArgs.cs,ToDoubleClickEventArgs,The following statement contains a magic number: return new MouseEventExtArgs (Button' 2' Point' Delta' Timestamp' IsMouseKeyDown' IsMouseKeyUp);  
Magic Number,MouseKeyboardActivityMonitor,MouseHookListener,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\MouseHookListener.cs,ProcessCallback,The following statement contains a magic number: if (e.Clicks == 2 && !e.Handled) {  	InvokeMouseEventHandler (MouseDoubleClick' e);  }  
Magic Number,MouseKeyboardActivityMonitor.WinApi,Point,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\WinApi\Point.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return (X * 397) ^ Y;  }  
Magic Number,MouseKeyboardActivityMonitor.WinApi,Point,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\WinApi\Point.cs,GetHashCode,The following statement contains a magic number: return (X * 397) ^ Y;  
Missing Default,git_wrapper,mainForm,C:\repos\gllera_git-wrapper\svn_git\Form.cs,HookManager_KeyDown,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.W:  	Procesar (VC_Command.UPDATE);  	break;  }  
Missing Default,git_wrapper,mainForm,C:\repos\gllera_git-wrapper\svn_git\Form.cs,Procesado,The following switch statement is missing a default case: switch (com) {  case VC_Command.UPDATE:  	vch.Update ();  	break;  case VC_Command.COMMIT:  	vch.Commit ();  	break;  case VC_Command.SYNC_GIT_SVN:  	vch.Git_to_SVN ();  	break;  case VC_Command.SYNC_SVN_GIT:  	vch.SVN_to_Git ();  	break;  case VC_Command.GIT_STATUS:  	vch.git_status ();  	break;  case VC_Command.SVN_STATUS:  	vch.svn_status ();  	break;  case VC_Command.REBASE_DEVELOP:  	vch.Rebase_develop ();  	break;  case VC_Command.VERSIONS:  	vch.Versions ();  	break;  }  
Missing Default,MouseKeyboardActivityMonitor,MouseEventExtArgs,C:\repos\gllera_git-wrapper\svn_git\MouseKeyboardMonitorLibrary\MouseEventExtArgs.cs,FromRawDataUniversal,The following switch statement is missing a default case: switch (wParam) {  case Messages.WM_LBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Left;  	clickCount = 1;  	break;  case Messages.WM_LBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Left;  	clickCount = 1;  	break;  case Messages.WM_LBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Left;  	clickCount = 2;  	break;  case Messages.WM_RBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Right;  	clickCount = 1;  	break;  case Messages.WM_RBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Right;  	clickCount = 1;  	break;  case Messages.WM_RBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Right;  	clickCount = 2;  	break;  case Messages.WM_MBUTTONDOWN:  	isMouseKeyDown = true;  	button = MouseButtons.Middle;  	clickCount = 1;  	break;  case Messages.WM_MBUTTONUP:  	isMouseKeyUp = true;  	button = MouseButtons.Middle;  	clickCount = 1;  	break;  case Messages.WM_MBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = MouseButtons.Middle;  	clickCount = 2;  	break;  case Messages.WM_MOUSEWHEEL:  	mouseDelta = mouseInfo.MouseData;  	break;  case Messages.WM_XBUTTONDOWN:  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	isMouseKeyDown = true;  	clickCount = 1;  	break;  case Messages.WM_XBUTTONUP:  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	isMouseKeyUp = true;  	clickCount = 1;  	break;  case Messages.WM_XBUTTONDBLCLK:  	isMouseKeyDown = true;  	button = mouseInfo.MouseData == 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;  	clickCount = 2;  	break;  }  
