Implementation smell,Namespace,Class,File,Method,Description
Long Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,SortInPlace,The method has 141 lines of code.
Long Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,StableSortInPlace,The method has 173 lines of code.
Long Method,Magnum.Collections,RedBlackTree<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\RedBlack.cs,DeleteItemFromRange,The method has 191 lines of code.
Long Method,Magnum.Collections,RedBlackTree<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\RedBlack.cs,Insert,The method has 116 lines of code.
Complex Method,Magnum.Extensions,ExtensionsToTimeSpan,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToTimeSpan.cs,ToFriendlyString,Cyclomatic complexity of the method is 13
Complex Method,Magnum.Binding,InstanceBinderContext,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Binding\InstanceBinderContext.cs,CreateBinderFor,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,RemoveDuplicatesInPlace,Cyclomatic complexity of the method is 12
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,FirstConsecutiveEqual,Cyclomatic complexity of the method is 9
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,FirstConsecutiveWhere,Cyclomatic complexity of the method is 9
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,TryFindLastWhere,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,SearchForSubsequence,Cyclomatic complexity of the method is 9
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,ToString,Cyclomatic complexity of the method is 9
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,ToString,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,RandomSubset,Cyclomatic complexity of the method is 9
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,GeneratePermutations,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,GenerateSortedPermutations,Cyclomatic complexity of the method is 10
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,SortInPlace,Cyclomatic complexity of the method is 17
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,StableSortInPlace,Cyclomatic complexity of the method is 18
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,BinarySearch,Cyclomatic complexity of the method is 10
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,MergeSorted,Cyclomatic complexity of the method is 10
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,LexicographicalCompare,Cyclomatic complexity of the method is 9
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,RemoveWhere,Cyclomatic complexity of the method is 16
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,Partition,Cyclomatic complexity of the method is 9
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,StablePartition,Cyclomatic complexity of the method is 10
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,Copy,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,Copy,Cyclomatic complexity of the method is 13
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,Copy,Cyclomatic complexity of the method is 9
Complex Method,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,RotateInPlace,Cyclomatic complexity of the method is 10
Complex Method,Magnum.Collections,BigList<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,InsertRange,Cyclomatic complexity of the method is 9
Complex Method,Magnum.Collections,BigList<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,InsertRange,Cyclomatic complexity of the method is 10
Complex Method,Magnum.Collections,BigList<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,Rebalance,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,BigList<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,GetEnumerator,Cyclomatic complexity of the method is 14
Complex Method,Magnum.Collections,BigList<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,NCopiesOfNode,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,BigList<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,AddBalancedNodeToRebalanceArray,Cyclomatic complexity of the method is 10
Complex Method,Magnum.Collections,LeafNode,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,InsertInPlace,Cyclomatic complexity of the method is 9
Complex Method,Magnum.Collections,CollectionBase<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\CollectionBase.cs,CopyTo,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,Deque<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Deque.cs,Insert,Cyclomatic complexity of the method is 16
Complex Method,Magnum.Collections,Deque<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Deque.cs,InsertRange,Cyclomatic complexity of the method is 22
Complex Method,Magnum.Collections,Deque<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Deque.cs,RemoveAt,Cyclomatic complexity of the method is 14
Complex Method,Magnum.Collections,Deque<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Deque.cs,RemoveRange,Cyclomatic complexity of the method is 23
Complex Method,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,Insert,Cyclomatic complexity of the method is 10
Complex Method,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,Validate,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,MultiDictionary<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\MultiDictionary.cs,CloneContents,Cyclomatic complexity of the method is 9
Complex Method,Magnum.Collections,MultiDictionaryBase<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\MultiDictionaryBase.cs,DebuggerDisplayString,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,EnumerableValuesCollection,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\MultiDictionaryBase.cs,Contains,Cyclomatic complexity of the method is 9
Complex Method,Magnum.Collections,EnumerableValuesCollection,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\MultiDictionaryBase.cs,Contains,Cyclomatic complexity of the method is 9
Complex Method,Magnum.Collections,View,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\OrderedBag.cs,IndexOf,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,View,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\OrderedBag.cs,LastIndexOf,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,View,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\OrderedBag.cs,IndexOf,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,OrderedDictionary<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\OrderedDictionary.cs,CloneContents,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,OrderedMultiDictionary<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\OrderedMultiDictionary.cs,CloneContents,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,ReadOnlyCollectionBase<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\ReadOnlyCollectionBase.cs,CopyTo,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,ReadOnlyCollectionBase<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\ReadOnlyCollectionBase.cs,CopyTo,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,ReadOnlyMultiDictionaryBase<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\ReadOnlyMultiDictionaryBase.cs,DebuggerDisplayString,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Collections,RedBlackTree<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\RedBlack.cs,DeleteItemFromRange,Cyclomatic complexity of the method is 15
Complex Method,Magnum.Collections,RedBlackTree<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\RedBlack.cs,Insert,Cyclomatic complexity of the method is 17
Complex Method,Magnum.Collections,RedBlackTree<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\RedBlack.cs,ValidateSubTree,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Reflection,ExtensionsForArgumentMatching,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\ExtensionsForArgumentMatching.cs,RateParameterTypeCompatibility,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Reflection,ExpressionVisitor,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\ExpressionVisitor.cs,Visit,Cyclomatic complexity of the method is 16
Complex Method,Magnum.Reflection,ExtensionsForGenericArguments,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\ExtensionsForGenericArguments.cs,GetDeclaredGenericArguments,Cyclomatic complexity of the method is 9
Complex Method,Magnum.Pipeline.Visitors,AbstractPipeVisitor,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Pipeline\Visitors\AbstractPipeVisitor.cs,Visit,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Parsers,ExtensionsToRangeParser,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Parsers\ExtensionsToRangeParser.cs,CombineOverlappingRanges,Cyclomatic complexity of the method is 12
Complex Method,Magnum.Parsers,ExtensionsToRangeParser,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Parsers\ExtensionsToRangeParser.cs,RestrictTo,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Serialization.FastText,FastTextParser,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\FastText\FastTextParser.cs,ReadMapValue,Cyclomatic complexity of the method is 8
Complex Method,Magnum.Validation,DateTimeExtensions,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Validation\DateTimeExtensions.cs,ToFriendlyString,Cyclomatic complexity of the method is 13
Long Parameter List,Magnum,Range<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Range.cs,Range,The method has 5 parameters. Parameters: lowerBound' upperBound' includeLowerBound' includeUpperBound' comparer
Long Parameter List,Magnum.Extensions,ExtensionsToDateTime,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToDateTime.cs,SetTime,The method has 5 parameters. Parameters: value' hour' minute' second' millisecond
Long Parameter List,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,ToString,The method has 5 parameters. Parameters: collection' recursive' start' separator' end
Long Parameter List,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,Copy,The method has 5 parameters. Parameters: source' sourceIndex' dest' destIndex' count
Long Parameter List,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,Copy,The method has 5 parameters. Parameters: source' sourceIndex' dest' destIndex' count
Long Parameter List,Magnum.Collections,MultiDictionary<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\MultiDictionary.cs,MultiDictionary,The method has 5 parameters. Parameters: allowDuplicateValues' keyEqualityComparer' valueEqualityComparer' equalityComparer' hash
Long Parameter List,Magnum.Collections,OrderedMultiDictionary<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\OrderedMultiDictionary.cs,OrderedMultiDictionary,The method has 6 parameters. Parameters: allowDuplicateValues' keyCount' keyComparer' valueComparer' comparer' tree
Long Parameter List,Magnum.Collections,RedBlackTree<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\RedBlack.cs,InsertSplit,The method has 5 parameters. Parameters: ggparent' gparent' parent' node' rotated
Long Parameter List,Magnum.Metrics.Monitor,SuccessRateMonitor,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Metrics\Monitor\SuccessRateMonitor.cs,SuccessRateMonitor,The method has 5 parameters. Parameters: monitorType' name' monitor' itemThreshold' timeThreshold
Long Identifier,Magnum.Reflection,InterfaceImplementationBuilder,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\InterfaceImplementationBuilder.cs,,The length of the parameter PropertyAccessMethodAttributes is 30.
Long Identifier,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,,The length of the parameter DateTimeShortMillisecondsFormat is 31.
Long Statement,Magnum,Range<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Range.cs,Equals,The length of the statement  "	        return obj._includeLowerBound.Equals(_includeLowerBound) && obj._includeUpperBound.Equals(_includeUpperBound) && Equals(obj._lowerBound' _lowerBound) && Equals(obj._upperBound' _upperBound);" is 190.
Long Statement,Magnum.Extensions,ExtensionsToDateTime,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToDateTime.cs,ForceUtc,The length of the statement  "			return new DateTime(value.Year' value.Month' value.Day' value.Hour' value.Minute' value.Second' value.Millisecond' DateTimeKind.Utc); " is 133.
Long Statement,Magnum.Collections,BigList<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,CheckBalance,The length of the statement  "			    (root.Depth > BALANCEFACTOR && !(root.Depth - BALANCEFACTOR <= MAXFIB && Count >= FIBONACCI[root.Depth - BALANCEFACTOR]))) " is 122.
Long Statement,Magnum.Collections,ConcatNode,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,Print,The length of the statement  "				Console.WriteLine("{0}CONCAT {1} {2} count={3} depth={4}"' prefixNode' shared ? "S" : " "' IsBalanced() ? "B" : (IsAlmostBalanced() ? "A" : " ")' count' depth); " is 160.
Long Statement,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,PrintStats,The length of the statement  "			Console.WriteLine("loadFactor={0}  thresholdGrow={1}  thresholdShrink={2}"' loadFactor' thresholdGrow' thresholdShrink); " is 120.
Long Statement,Magnum.Collections,MultiDictionary<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\MultiDictionary.cs,Clone,The length of the statement  "			return new MultiDictionary<TKey' TValue>(allowDuplicateValues' keyEqualityComparer' valueEqualityComparer' equalityComparer' " is 124.
Long Statement,Magnum.Collections,MultiDictionary<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\MultiDictionary.cs,CloneContents,The length of the statement  "			MultiDictionary<TKey' TValue> newDict = new MultiDictionary<TKey' TValue>(allowDuplicateValues' keyEqualityComparer' valueEqualityComparer); " is 140.
Long Statement,Magnum.Collections,ObjectToDictionaryConverter,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\ObjectToDictionary.cs,CreateObjectToDictionaryConverter,The length of the statement  "			return (Func<object' IDictionary<string' object>>) dm.CreateDelegate(typeof (Func<object' IDictionary<string' object>>)); " is 121.
Long Statement,Magnum.Collections,OrderedDictionary<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\OrderedDictionary.cs,Range,The length of the statement  "			return new View(this' tree.DoubleBoundedRangeTester(NewPair(from)' fromInclusive' NewPair(to)' toInclusive)' false' false); " is 123.
Long Statement,Magnum.Collections,OrderedMultiDictionary<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\OrderedMultiDictionary.cs,Clone,The length of the statement  "			OrderedMultiDictionary<TKey' TValue> newDict = new OrderedMultiDictionary<TKey' TValue>(allowDuplicateValues' keyCount' keyComparer' valueComparer' comparer' tree.Clone()); " is 172.
Long Statement,Magnum.Collections,OrderedMultiDictionary<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\OrderedMultiDictionary.cs,CloneContents,The length of the statement  "			OrderedMultiDictionary<TKey' TValue> newDict = new OrderedMultiDictionary<TKey' TValue>(allowDuplicateValues' keyComparer' valueComparer); " is 138.
Long Statement,Magnum.Collections,Pair,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Pair.cs,ToString,The length of the statement  "			return string.Format("First: {0}' Second: {1}"' (First == null) ? "null" : First.ToString()' (Second == null) ? "null" : Second.ToString()); " is 140.
Long Statement,Magnum.CommandLineParser,ExtensionForCommandLineElementParsers,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\CommandLineParser\ExtensionForCommandLineElementParsers.cs,Optional,The length of the statement  "						return new Result<IEnumerable<ICommandLineElement>' ISwitchElement>(query.First() as ISwitchElement' input.Except(query)); " is 122.
Long Statement,Magnum.CommandLineParser,ExtensionForCommandLineElementParsers,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\CommandLineParser\ExtensionForCommandLineElementParsers.cs,Optional,The length of the statement  "						return new Result<IEnumerable<ICommandLineElement>' IDefinitionElement>(query.First() as IDefinitionElement' input.Except(query)); " is 130.
Long Statement,Magnum.CommandLineParser,ExtensionForCommandLineElementParsers,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\CommandLineParser\ExtensionForCommandLineElementParsers.cs,Optional,The length of the statement  "					return new Result<IEnumerable<ICommandLineElement>' IDefinitionElement>(new DefinitionElement(key' defaultValue)' input); " is 121.
Long Statement,Magnum.Cryptography.PKI,RsaCryptographyService,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Cryptography\PKI\RsaCryptographyService.cs,Encrypt,The length of the statement  "            // If Length of PlainText > (Modulus Size - 11)' then PlainText will need to be broken into segments of size (Modulus Size - 11) " is 128.
Long Statement,Magnum.Cryptography.PKI,RsaCryptographyService,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Cryptography\PKI\RsaCryptographyService.cs,Encrypt,The length of the statement  "            // When decrypting' if the EncryptedText string > Modulus size' it will be split into segments of size equal to Modulus Size " is 124.
Long Statement,Magnum.Cryptography.PKI,RsaCryptographyService,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Cryptography\PKI\RsaCryptographyService.cs,Encrypt,The length of the statement  "            // Each of these EncryptedText segments will be decrypted individually with the resulting PlainText segments re-assembled. " is 122.
Long Statement,Magnum.Reflection,FastCollection,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastCollection.cs,InitializeAdd,The length of the statement  "            AddDelegate = Expression.Lambda<Action<object' object>>(Expression.Call(instance' addMethod' value)' new[] { instance' value }).Compile();" is 138.
Long Statement,Magnum.Reflection,FastCollection,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastCollection.cs,InitializeRemove,The length of the statement  "            RemoveDelegate = Expression.Lambda<Action<object' object>>(Expression.Call(instance' removeMethod' value)' new[] { instance' value }).Compile();" is 144.
Long Statement,Magnum.Reflection,FastCollection<TCollection>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastCollection.cs,InitializeAdd,The length of the statement  "            AddDelegate = Expression.Lambda<Action<TCollection' object>>(Expression.Call(instance' addMethod' value)' new[] { instance' value }).Compile();" is 143.
Long Statement,Magnum.Reflection,FastCollection<TCollection>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastCollection.cs,InitializeRemove,The length of the statement  "            RemoveDelegate = Expression.Lambda<Action<TCollection' object>>(Expression.Call(instance' removeMethod' value)' new[] { instance' value }).Compile();" is 149.
Long Statement,Magnum.Reflection,FastCollection<TCollection;TElement>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastCollection.cs,InitializeAdd,The length of the statement  "            AddDelegate = Expression.Lambda<Action<TCollection' TElement>>(Expression.Call(instance' addMethod' value)' new[] { instance' value }).Compile();" is 145.
Long Statement,Magnum.Reflection,FastCollection<TCollection;TElement>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastCollection.cs,InitializeRemove,The length of the statement  "            RemoveDelegate = Expression.Lambda<Action<TCollection' TElement>>(Expression.Call(instance' removeMethod' value)' new[] { instance' value }).Compile();" is 151.
Long Statement,Magnum.Parsers,RangeElement,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Parsers\RangeElement.cs,Union,The length of the statement  "				combined = new RangeElement((Begin.Begin.CompareTo(other.Begin.Begin) <= 0) ? Begin.Begin : other.Begin.Begin' End.End); " is 120.
Long Statement,Magnum.Policies,CircuitBreaker,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Policies\CircuitBreaker.cs,Reset,The length of the statement  "			_lastException = new InvalidOperationException("This is the default exception for the circuit breaker' no exception has been thrown.");" is 135.
Long Statement,Magnum.Policies,RetryPolicy,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Policies\RetryPolicy.cs,Retry,The length of the statement  "			return new ExceptionPolicy(action => ImplementPolicy(action' RetryImmediately(builder.Condition' retryCount' retryAction))); " is 124.
Long Statement,Magnum.Policies,RetryPolicy,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Policies\RetryPolicy.cs,Retry,The length of the statement  "			return new ExceptionPolicy(action => ImplementPolicy(action' RetryInterval(builder.Condition' intervals' retryAction))); " is 120.
Long Statement,Magnum.StateMachine,StateMachine<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\StateMachine\StateMachine.cs,InitializeEvents,The length of the statement  "			foreach (PropertyInfo propertyInfo in machineType.GetProperties(BindingFlags.Static | BindingFlags.Public | BindingFlags.FlattenHierarchy)) " is 139.
Long Statement,Magnum.StateMachine,StateMachine<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\StateMachine\StateMachine.cs,InitializeStates,The length of the statement  "            foreach (PropertyInfo propertyInfo in machineType.GetProperties(BindingFlags.Static | BindingFlags.Public | BindingFlags.FlattenHierarchy)) " is 139.
Long Statement,Magnum.StateMachine,StateMachine<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\StateMachine\StateMachine.cs,SetPropertyValue,The length of the statement  "			var action = Expression.Lambda<Action<object>>(Expression.Call(propertyInfo.GetSetMethod()' valueCast)' new[] {value}).Compile(); " is 129.
Long Statement,Magnum.StateMachine,StateMachine<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\StateMachine\StateMachine.cs,SetPropertyValue,The length of the statement  "			var action = Expression.Lambda<Action<TValue>>(Expression.Call(propertyInfo.GetSetMethod()' value)' new[] {value}).Compile(); " is 125.
Complex Conditional,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,Range,The conditional expression  "start < 0 || start > list.Count || (start == list.Count && count != 0)"  is complex.
Complex Conditional,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,Range,The conditional expression  "start < 0 || start > array.Length || (start == array.Length && count != 0)"  is complex.
Complex Conditional,Magnum.Collections,BigList<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,Range,The conditional expression  "index < 0 || index > this.Count || (index == this.Count && count != 0)"  is complex.
Complex Conditional,Magnum.Collections,BigList<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,CheckBalance,The conditional expression  "root != null &&  			    (root.Depth > BALANCEFACTOR && !(root.Depth - BALANCEFACTOR <= MAXFIB && Count >= FIBONACCI[root.Depth - BALANCEFACTOR]))"  is complex.
Complex Conditional,Magnum.Collections,RedBlackTree<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\RedBlack.cs,DeleteItemFromRange,The conditional expression  "(node.left == null || !node.left.IsRed) && (node.right == null || !node.right.IsRed)"  is complex.
Complex Conditional,Magnum.Collections,RedBlackTree<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\RedBlack.cs,DeleteItemFromRange,The conditional expression  "(sib.left == null || !sib.left.IsRed) && (sib.right == null || !sib.right.IsRed)"  is complex.
Complex Conditional,Magnum.Collections,RedBlackTree<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\RedBlack.cs,Insert,The conditional expression  "node.left != null && node.left.IsRed && node.right != null && node.right.IsRed"  is complex.
Complex Conditional,Magnum.Metrics.Monitor,SuccessRateMonitor,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Metrics\Monitor\SuccessRateMonitor.cs,GetCurrentSuccessRate,The conditional expression  "completed < 0 || failed < 0 || justCompleted < 0 || justFailed < 0"  is complex.
Virtual Method Call from Constructor,Magnum.Reflection,SafePropertyVisitor,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\SafePropertyVisitor.cs,SafePropertyVisitor,The constructor "SafePropertyVisitor" calls a virtual method "Visit".
Empty Catch Block,Magnum.TypeScanning,Scanner,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\TypeScanning\Scanner.cs,GetAssembliesFromPath,The method has an empty catch block.
Magic Number,Magnum,CombGuid,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\CombGuid.cs,Generate,The following statement contains a magic number: byte[] msecsArray = BitConverter.GetBytes((long)(msecs.TotalMilliseconds/3.333333));
Magic Number,Magnum,CombGuid,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(daysArray' daysArray.Length - 2' guidArray' guidArray.Length - 6' 2);
Magic Number,Magnum,CombGuid,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(daysArray' daysArray.Length - 2' guidArray' guidArray.Length - 6' 2);
Magic Number,Magnum,CombGuid,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(daysArray' daysArray.Length - 2' guidArray' guidArray.Length - 6' 2);
Magic Number,Magnum,CombGuid,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(msecsArray' msecsArray.Length - 4' guidArray' guidArray.Length - 4' 4);
Magic Number,Magnum,CombGuid,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(msecsArray' msecsArray.Length - 4' guidArray' guidArray.Length - 4' 4);
Magic Number,Magnum,CombGuid,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(msecsArray' msecsArray.Length - 4' guidArray' guidArray.Length - 4' 4);
Magic Number,Magnum,Range<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Range.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ _includeUpperBound.GetHashCode();
Magic Number,Magnum,Range<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Range.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ _lowerBound.GetHashCode();
Magic Number,Magnum,Range<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Range.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ _upperBound.GetHashCode();
Magic Number,Magnum,FunctionTimer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\FunctionTimer.cs,ToString,The following statement contains a magic number: var sb = new StringBuilder(256);
Magic Number,Magnum.Extensions,ExtensionsToDateTime,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToDateTime.cs,Next,The following statement contains a magic number: offsetDays += 7;
Magic Number,Magnum.Extensions,ExtensionsToDateTime,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToDateTime.cs,Noon,The following statement contains a magic number: return new DateTime(value.Year' value.Month' value.Day' 12' 0' 0);
Magic Number,Magnum.Extensions,ExtensionsToTimeSpan,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToTimeSpan.cs,Weeks,The following statement contains a magic number: return TimeSpan.FromDays(value*7);
Magic Number,Magnum.Extensions,ExtensionsToTimeSpan,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToTimeSpan.cs,ToFriendlyString,The following statement contains a magic number: int years = ts.Days/365;
Magic Number,Magnum.Extensions,ExtensionsToTimeSpan,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToTimeSpan.cs,ToFriendlyString,The following statement contains a magic number: int months = (ts.Days%365)/30;
Magic Number,Magnum.Extensions,ExtensionsToTimeSpan,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToTimeSpan.cs,ToFriendlyString,The following statement contains a magic number: int months = (ts.Days%365)/30;
Magic Number,Magnum.Extensions,ExtensionsToTimeSpan,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToTimeSpan.cs,ToFriendlyString,The following statement contains a magic number: int weeks = ((ts.Days%365)%30)/7;
Magic Number,Magnum.Extensions,ExtensionsToTimeSpan,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToTimeSpan.cs,ToFriendlyString,The following statement contains a magic number: int weeks = ((ts.Days%365)%30)/7;
Magic Number,Magnum.Extensions,ExtensionsToTimeSpan,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToTimeSpan.cs,ToFriendlyString,The following statement contains a magic number: int weeks = ((ts.Days%365)%30)/7;
Magic Number,Magnum.Extensions,ExtensionsToTimeSpan,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToTimeSpan.cs,ToFriendlyString,The following statement contains a magic number: int days = (((ts.Days%365)%30)%7);
Magic Number,Magnum.Extensions,ExtensionsToTimeSpan,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToTimeSpan.cs,ToFriendlyString,The following statement contains a magic number: int days = (((ts.Days%365)%30)%7);
Magic Number,Magnum.Extensions,ExtensionsToTimeSpan,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToTimeSpan.cs,ToFriendlyString,The following statement contains a magic number: int days = (((ts.Days%365)%30)%7);
Magic Number,Magnum.Extensions,ExtensionsToStream,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToStream.cs,ReadToEnd,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,Magnum.Extensions,ExtensionsToStream,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToStream.cs,ReadToEnd,The following statement contains a magic number: int read = stream.Read(buffer' 0' 4096);
Magic Number,Magnum.Extensions,ExtensionsToStream,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Extensions\ExtensionsToStream.cs,ReadToEnd,The following statement contains a magic number: read = stream.Read(buffer' 0' 4096);
Magic Number,Magnum.Cryptography,RijndaelCryptographyService,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Cryptography\RijndaelCryptographyService.cs,RijndaelCryptographyService,The following statement contains a magic number: _cipher = new RijndaelManaged                            {                                KeySize = 256'                                // defaults to 256' it's better to be explicit.                                BlockSize = 256'                                // defaults to 128 bits' so let's set this to 256 for better security                                Mode = CipherMode.CBC'                                Padding = PaddingMode.ISO10126'                                // adds random padding bytes which reduces the predictability of the plain text                            };
Magic Number,Magnum.Cryptography,RijndaelCryptographyService,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Cryptography\RijndaelCryptographyService.cs,RijndaelCryptographyService,The following statement contains a magic number: _cipher = new RijndaelManaged                            {                                KeySize = 256'                                // defaults to 256' it's better to be explicit.                                BlockSize = 256'                                // defaults to 128 bits' so let's set this to 256 for better security                                Mode = CipherMode.CBC'                                Padding = PaddingMode.ISO10126'                                // adds random padding bytes which reduces the predictability of the plain text                            };
Magic Number,Magnum.Concurrency,MultipleElementImmutableQueue<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Concurrency\MultipleElementImmutableQueue.cs,RemoveFirst,The following statement contains a magic number: Count == 2
Magic Number,Magnum.Concurrency,MultipleElementImmutableQueue<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Concurrency\MultipleElementImmutableQueue.cs,RemoveFirst,The following statement contains a magic number: _output.Count > 2
Magic Number,Magnum.Calendar,DaySpecs,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\DefaultCalendar.cs,NthDayOfMonth,The following statement contains a magic number: _checks.Add(d=> d.Day >= (1+7*(nTh-1)));
Magic Number,Magnum.Calendar.Holidays,ChristmasDayCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\ChristmasDayCheck.cs,Check,The following statement contains a magic number: return CheckMonth(dateToCheck' Months.December) &&                     dateToCheck.Day.Equals(25) &&                     IsWeekday(dateToCheck);
Magic Number,Magnum.Calendar.Holidays,ChristmasDayObserved,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\ChristmasDayObserved.cs,Check,The following statement contains a magic number: return CheckMonth(dateToCheck' Months.December) &&                     IsMonday(dateToCheck) &&                     dateToCheck.Day.Equals(26);
Magic Number,Magnum.Calendar.Holidays,ColumbusDayObserved,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\ColumbusDayObserved.cs,Check,The following statement contains a magic number: return CheckMonth(dateToCheck' Months.October) &&                     GetWeekNumberInYear(dateToCheck).Equals(2) &&                     IsMonday(dateToCheck) &&                     WhatIsThisChecking(dateToCheck);
Magic Number,Magnum.Calendar.Holidays,ColumbusDayObserved,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\ColumbusDayObserved.cs,WhatIsThisChecking,The following statement contains a magic number: return ((dateToCheck.Day - 1)/7) == 1;
Magic Number,Magnum.Calendar.Holidays,IndependenceDayCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\IndependenceDayCheck.cs,Check,The following statement contains a magic number: return CheckMonth(dateToCheck' Months.July) &&                     dateToCheck.Day.Equals(4);
Magic Number,Magnum.Calendar.Holidays,IndependenceDayObservedCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\IndependenceDayObservedCheck.cs,Check,The following statement contains a magic number: return CheckMonth(dateToCheck' Months.July) &&                     IsMonday(dateToCheck) &&                     dateToCheck.Day.Equals(5);
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int g = year % 19;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int c = intDiv(year' 100);
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int h = (c - intDiv(c' 4) - intDiv(8 * c + 13' 25) + 19 * g + 15) % 30;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int h = (c - intDiv(c' 4) - intDiv(8 * c + 13' 25) + 19 * g + 15) % 30;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int h = (c - intDiv(c' 4) - intDiv(8 * c + 13' 25) + 19 * g + 15) % 30;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int h = (c - intDiv(c' 4) - intDiv(8 * c + 13' 25) + 19 * g + 15) % 30;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int h = (c - intDiv(c' 4) - intDiv(8 * c + 13' 25) + 19 * g + 15) % 30;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int h = (c - intDiv(c' 4) - intDiv(8 * c + 13' 25) + 19 * g + 15) % 30;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int h = (c - intDiv(c' 4) - intDiv(8 * c + 13' 25) + 19 * g + 15) % 30;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int i = h - intDiv(h' 28) * (1 - intDiv(h' 28)                                               * intDiv(29' h + 1) * intDiv(21 - g' 11));
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int i = h - intDiv(h' 28) * (1 - intDiv(h' 28)                                               * intDiv(29' h + 1) * intDiv(21 - g' 11));
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int i = h - intDiv(h' 28) * (1 - intDiv(h' 28)                                               * intDiv(29' h + 1) * intDiv(21 - g' 11));
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int i = h - intDiv(h' 28) * (1 - intDiv(h' 28)                                               * intDiv(29' h + 1) * intDiv(21 - g' 11));
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int i = h - intDiv(h' 28) * (1 - intDiv(h' 28)                                               * intDiv(29' h + 1) * intDiv(21 - g' 11));
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int j = (year + intDiv(year' 4) + i + 2 - c + intDiv(c' 4)) % 7;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int j = (year + intDiv(year' 4) + i + 2 - c + intDiv(c' 4)) % 7;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int j = (year + intDiv(year' 4) + i + 2 - c + intDiv(c' 4)) % 7;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int j = (year + intDiv(year' 4) + i + 2 - c + intDiv(c' 4)) % 7;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int p = i - j + 28;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: int month = 4;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: day = p - 31;
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,getEasterWestern,The following statement contains a magic number: p > 31
Magic Number,Magnum.Calendar.Holidays,EasterCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\EasterCheck.cs,intDiv,The following statement contains a magic number: return -99999;
Magic Number,Magnum.Calendar.Holidays,FlagDayCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\FlagDayCheck.cs,Check,The following statement contains a magic number: return CheckMonth(dateToCheck' Months.June) &&                     dateToCheck.Day.Equals(14);
Magic Number,Magnum.Calendar.Holidays,FlagDayObservedCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\FlagDayObservedCheck.cs,Check,The following statement contains a magic number: return CheckMonth(dateToCheck' Months.June) &&                     IsMonday(dateToCheck) &&                     dateToCheck.Day.Equals(15);
Magic Number,Magnum.Calendar.Holidays,LaborDayCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\LaborDayCheck.cs,Check,The following statement contains a magic number: return GetWeekNumberInYear(dateToCheck).Equals(2)                     && ((dateToCheck.Day - 1)/7) == 0;
Magic Number,Magnum.Calendar.Holidays,LaborDayCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\LaborDayCheck.cs,Check,The following statement contains a magic number: return GetWeekNumberInYear(dateToCheck).Equals(2)                     && ((dateToCheck.Day - 1)/7) == 0;
Magic Number,Magnum.Calendar.Holidays,MartinLutherKingDayCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\MartinLutherKingDayCheck.cs,Check,The following statement contains a magic number: return dateToCheck.Month == 1 &&                     IsMonday(dateToCheck) &&                     ((dateToCheck.DayOfYear - 1)/7) == 2;
Magic Number,Magnum.Calendar.Holidays,MartinLutherKingDayCheck,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Calendar\Holidays\MartinLutherKingDayCheck.cs,Check,The following statement contains a magic number: return dateToCheck.Month == 1 &&                     IsMonday(dateToCheck) &&                     ((dateToCheck.DayOfYear - 1)/7) == 2;
Magic Number,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,GenerateSortedPermutations,The following statement contains a magic number: key = length - 2;
Magic Number,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,SortInPlace,The following statement contains a magic number: int[] leftStack = new int[32]' rightStack = new int[32];
Magic Number,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,SortInPlace,The following statement contains a magic number: int[] leftStack = new int[32]' rightStack = new int[32];
Magic Number,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,StableSortInPlace,The following statement contains a magic number: int[] leftStack = new int[32]' rightStack = new int[32];
Magic Number,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,StableSortInPlace,The following statement contains a magic number: int[] leftStack = new int[32]' rightStack = new int[32];
Magic Number,Magnum.Collections,Algorithms,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,BinarySearch,The following statement contains a magic number: int m = l + (r - l)/2;
Magic Number,Magnum.Collections,CollectionEqualityComparer<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,GetHashCode,The following statement contains a magic number: hash = (hash << 9) | (hash >> 23);
Magic Number,Magnum.Collections,CollectionEqualityComparer<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Algorithms.cs,GetHashCode,The following statement contains a magic number: hash = (hash << 9) | (hash >> 23);
Magic Number,Magnum.Collections,BigList<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,Rebalance,The following statement contains a magic number: root.Depth <= 1 || (root.Depth - 2 <= MAXFIB && Count >= FIBONACCI[root.Depth - 2])
Magic Number,Magnum.Collections,BigList<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,Rebalance,The following statement contains a magic number: root.Depth <= 1 || (root.Depth - 2 <= MAXFIB && Count >= FIBONACCI[root.Depth - 2])
Magic Number,Magnum.Collections,BigList<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,Rebalance,The following statement contains a magic number: Debug.Assert(root.Depth <= 1 || (root.Depth - 2 <= MAXFIB && Count >= FIBONACCI[root.Depth - 2]));
Magic Number,Magnum.Collections,BigList<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,Rebalance,The following statement contains a magic number: Debug.Assert(root.Depth <= 1 || (root.Depth - 2 <= MAXFIB && Count >= FIBONACCI[root.Depth - 2]));
Magic Number,Magnum.Collections,BigList<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\BigList.cs,NCopiesOfNode,The following statement contains a magic number: n *= 2;
Magic Number,Magnum.Collections,CollectionBase<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\CollectionBase.cs,DebuggerDisplayString,The following statement contains a magic number: const int MAXLENGTH = 250;
Magic Number,Magnum.Collections,Deque<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Deque.cs,Insert,The following statement contains a magic number: index < count/2
Magic Number,Magnum.Collections,Deque<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Deque.cs,InsertRange,The following statement contains a magic number: index < count/2
Magic Number,Magnum.Collections,Deque<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Deque.cs,RemoveAt,The following statement contains a magic number: index < count/2
Magic Number,Magnum.Collections,Deque<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Deque.cs,RemoveRange,The following statement contains a magic number: index < dequeCount/2
Magic Number,Magnum.Collections,Deque<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Deque.cs,IncreaseBuffer,The following statement contains a magic number: T[] newBuffer = new T[length*2];
Magic Number,Magnum.Collections,DictionaryBase<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\DictionaryBase.cs,DebuggerDisplayString,The following statement contains a magic number: const int MAXLENGTH = 250;
Magic Number,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,Hash,The following statement contains a magic number: this.loadFactor = 0.70F;
Magic Number,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,Validate,The following statement contains a magic number: Debug.Assert(thresholdGrow / 3 == thresholdShrink);
Magic Number,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,GetFullHash,The following statement contains a magic number: hash += ~(hash << 15);
Magic Number,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,GetFullHash,The following statement contains a magic number: hash ^= (hash >> 10);
Magic Number,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,GetFullHash,The following statement contains a magic number: hash += (hash << 3);
Magic Number,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,GetFullHash,The following statement contains a magic number: hash ^= (hash >> 6);
Magic Number,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,GetFullHash,The following statement contains a magic number: hash += ~(hash << 11);
Magic Number,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,GetFullHash,The following statement contains a magic number: hash ^= (hash >> 16);
Magic Number,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,EnsureEnoughSlots,The following statement contains a magic number: newSize *= 2;
Magic Number,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,ShrinkIfNeeded,The following statement contains a magic number: newSize *= 2;
Magic Number,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,ResizeTable,The following statement contains a magic number: thresholdShrink = thresholdGrow / 3;
Magic Number,Magnum.Collections,Hash<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\Hash.cs,GetSecondaryShift,The following statement contains a magic number: int x = newSize - 2;
Magic Number,Magnum.Collections,MultiDictionary<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\MultiDictionary.cs,Add,The following statement contains a magic number: TValue[] newValues = new TValue[existingCount*2];
Magic Number,Magnum.Collections,MultiDictionaryBase<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\MultiDictionaryBase.cs,DebuggerDisplayString,The following statement contains a magic number: const int MAXLENGTH = 250;
Magic Number,Magnum.Collections,ReadOnlyCollectionBase<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\ReadOnlyCollectionBase.cs,DebuggerDisplayString,The following statement contains a magic number: const int MAXLENGTH = 250;
Magic Number,Magnum.Collections,ReadOnlyDictionaryBase<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\ReadOnlyDictionaryBase.cs,DebuggerDisplayString,The following statement contains a magic number: const int MAXLENGTH = 250;
Magic Number,Magnum.Collections,ReadOnlyMultiDictionaryBase<TKey;TValue>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\ReadOnlyMultiDictionaryBase.cs,DebuggerDisplayString,The following statement contains a magic number: const int MAXLENGTH = 250;
Magic Number,Magnum.Collections,RedBlackTree<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\RedBlack.cs,Insert,The following statement contains a magic number: nodeStackPtr -= 2;
Magic Number,Magnum.Collections,RedBlackTree<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Collections\RedBlack.cs,GetNodeStack,The following statement contains a magic number: maxDepth = 21;
Magic Number,Magnum.CommandLineParser,SwitchElement,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\CommandLineParser\SwitchElement.cs,GetHashCode,The following statement contains a magic number: return ((Key != null ? Key.GetHashCode() : 0)*397) ^ Value.GetHashCode();
Magic Number,Magnum.CommandLineParser,DefinitionElement,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\CommandLineParser\DefinitionElement.cs,GetHashCode,The following statement contains a magic number: return ((Key != null ? Key.GetHashCode() : 0)*397) ^ (Value != null ? Value.GetHashCode() : 0);
Magic Number,Magnum.Cryptography.PKI,RsaCryptographyService,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Cryptography\PKI\RsaCryptographyService.cs,Encrypt,The following statement contains a magic number: var blockSize = GetModulusSize() - 11;
Magic Number,Magnum.Cryptography.PKI,RsaCryptographyService,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Cryptography\PKI\RsaCryptographyService.cs,GetModulusSize,The following statement contains a magic number: return (int)Math.Round(_rsaCryptoServiceProvider.KeySize / 8.0);
Magic Number,Magnum.Reflection,ExtensionsForArgumentMatching,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\ExtensionsForArgumentMatching.cs,MatchesArguments,The following statement contains a magic number: return args.Length == 2  			       && args[0].ParameterType.RateParameterTypeCompatibility(typeof (TArg0)) > 0  			       && args[1].ParameterType.RateParameterTypeCompatibility(typeof (TArg1)) > 0;
Magic Number,Magnum.Reflection,ExtensionsForArgumentMatching,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\ExtensionsForArgumentMatching.cs,MatchesArguments,The following statement contains a magic number: return 23;
Magic Number,Magnum.Reflection,ExtensionsForArgumentMatching,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\ExtensionsForArgumentMatching.cs,RateParameterTypeCompatibility,The following statement contains a magic number: return 22;
Magic Number,Magnum.Reflection,ExtensionsForArgumentMatching,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\ExtensionsForArgumentMatching.cs,RateParameterTypeCompatibility,The following statement contains a magic number: return argType.MeetsGenericConstraints(parameterType) ? 21 : 0;
Magic Number,Magnum.Reflection,ExtensionsForArgumentMatching,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\ExtensionsForArgumentMatching.cs,RateParameterTypeCompatibility,The following statement contains a magic number: return matchDepth + 5;
Magic Number,Magnum.Reflection,ExtensionsForArgumentMatching,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\ExtensionsForArgumentMatching.cs,RateParameterTypeCompatibility,The following statement contains a magic number: return parameterType.IsInterface ? 4 : 5;
Magic Number,Magnum.Reflection,ExtensionsForArgumentMatching,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\ExtensionsForArgumentMatching.cs,RateParameterTypeCompatibility,The following statement contains a magic number: return parameterType.IsInterface ? 4 : 5;
Magic Number,Magnum.Reflection,ExtensionsForArgumentMatching,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\ExtensionsForArgumentMatching.cs,RateParameterTypeCompatibility,The following statement contains a magic number: return parameterType.IsInterface ? 2 : 3;
Magic Number,Magnum.Reflection,ExtensionsForArgumentMatching,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\ExtensionsForArgumentMatching.cs,RateParameterTypeCompatibility,The following statement contains a magic number: return parameterType.IsInterface ? 2 : 3;
Magic Number,Magnum.Reflection,FastInvoker<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.1.cs,GetInvoker,The following statement contains a magic number: int key = 97*methodName.GetHashCode();
Magic Number,Magnum.Reflection,FastInvoker<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.1.cs,GetInvoker,The following statement contains a magic number: int key = GetArgumentHashCode(97*methodName.GetHashCode()' args);
Magic Number,Magnum.Reflection,FastInvoker<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.1.cs,FastInvoke,The following statement contains a magic number: int key = GetArgumentHashCode(97*methodName.GetHashCode()' genericTypes);
Magic Number,Magnum.Reflection,FastInvoker<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.1.cs,FastInvoke,The following statement contains a magic number: int key = GetArgumentHashCode(97*methodName.GetHashCode()' genericTypes' args);
Magic Number,Magnum.Reflection,FastInvoker<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.1.cs,FastInvoke,The following statement contains a magic number: int key = 61*call.Method.GetHashCode();
Magic Number,Magnum.Reflection,FastInvoker<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.1.cs,FastInvoke,The following statement contains a magic number: int key = GetArgumentHashCode(61*method.GetHashCode()' args);
Magic Number,Magnum.Reflection,FastInvoker<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.1.cs,FastInvoke,The following statement contains a magic number: int key = GetArgumentHashCode(61*method.GetHashCode()' genericTypes);
Magic Number,Magnum.Reflection,FastInvoker<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.1.cs,FastInvoke,The following statement contains a magic number: int key = GetArgumentHashCode(61*method.GetHashCode()' genericTypes' args);
Magic Number,Magnum.Reflection,FastInvokerBase,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvokerBase.cs,GetArgumentHashCode,The following statement contains a magic number: key ^= args[i] == null ? 31*i : args[i].GetType().GetHashCode() << i;
Magic Number,Magnum.Reflection,FastInvokerBase,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvokerBase.cs,GetArgumentHashCode,The following statement contains a magic number: key ^= genericTypes[i] == null ? 27*i : genericTypes[i].GetHashCode()*101 << i;
Magic Number,Magnum.Reflection,FastInvokerBase,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvokerBase.cs,GetArgumentHashCode,The following statement contains a magic number: key ^= genericTypes[i] == null ? 27*i : genericTypes[i].GetHashCode()*101 << i;
Magic Number,Magnum.Reflection,FastInvokerBase,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvokerBase.cs,GetArgumentHashCode,The following statement contains a magic number: key ^= genericTypes[i] == null ? 27*i : genericTypes[i].GetHashCode()*101 << i;
Magic Number,Magnum.Reflection,FastInvokerBase,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvokerBase.cs,GetArgumentHashCode,The following statement contains a magic number: key ^= genericTypes[i] == null ? 27*i : genericTypes[i].GetHashCode()*101 << i;
Magic Number,Magnum.Reflection,FastInvokerBase,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvokerBase.cs,GetArgumentHashCode,The following statement contains a magic number: key ^= args[i] == null ? 31*i : args[i].GetType().GetHashCode() << i;
Magic Number,Magnum.Reflection,FastInvoker<T;TResult>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.2.cs,FastInvoke,The following statement contains a magic number: int key = 97*methodName.GetHashCode();
Magic Number,Magnum.Reflection,FastInvoker<T;TResult>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.2.cs,FastInvoke,The following statement contains a magic number: int key = GetArgumentHashCode(97*methodName.GetHashCode()' args);
Magic Number,Magnum.Reflection,FastInvoker<T;TResult>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.2.cs,FastInvoke,The following statement contains a magic number: int key = GetArgumentHashCode(97*methodName.GetHashCode()' genericTypes);
Magic Number,Magnum.Reflection,FastInvoker<T;TResult>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.2.cs,FastInvoke,The following statement contains a magic number: int key = GetArgumentHashCode(97*methodName.GetHashCode()' genericTypes' args);
Magic Number,Magnum.Reflection,FastInvoker<T;TResult>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.2.cs,FastInvoke,The following statement contains a magic number: int key = 61*call.Method.GetHashCode();
Magic Number,Magnum.Reflection,FastInvoker<T;TResult>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.2.cs,FastInvoke,The following statement contains a magic number: int key = GetArgumentHashCode(61*method.GetHashCode()' args);
Magic Number,Magnum.Reflection,FastInvoker<T;TResult>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.2.cs,FastInvoke,The following statement contains a magic number: int key = GetArgumentHashCode(61*method.GetHashCode()' genericTypes);
Magic Number,Magnum.Reflection,FastInvoker<T;TResult>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Reflection\FastInvoker.2.cs,FastInvoke,The following statement contains a magic number: int key = GetArgumentHashCode(61*method.GetHashCode()' genericTypes' args);
Magic Number,Magnum.Metrics.Monitor,SuccessRateMonitor,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Metrics\Monitor\SuccessRateMonitor.cs,GetCurrentSuccessRate,The following statement contains a magic number: return 100;
Magic Number,Magnum.Metrics.Monitor,SuccessRateMonitor,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Metrics\Monitor\SuccessRateMonitor.cs,CalculateSuccessRate,The following statement contains a magic number: return (long) Math.Round(100 - (100*(double) failed)/(completed + failed));
Magic Number,Magnum.Metrics.Monitor,SuccessRateMonitor,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Metrics\Monitor\SuccessRateMonitor.cs,CalculateSuccessRate,The following statement contains a magic number: return (long) Math.Round(100 - (100*(double) failed)/(completed + failed));
Magic Number,Magnum.Parsers,RangeElement,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Parsers\RangeElement.cs,GetHashCode,The following statement contains a magic number: return ((Begin != null ? Begin.GetHashCode() : 0)*397) ^ (End != null ? End.GetHashCode() : 0);
Magic Number,Magnum.Parsers,LessThanElement,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Parsers\LessThanElement.cs,GetEndForQuery,The following statement contains a magic number: return End + new string('z'' 64);
Magic Number,Magnum.Serialization.FastText,FastTextParser,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\FastText\FastTextParser.cs,RemoveListChars,The following statement contains a magic number: return value[0] == ListStart ? value.Substring(1' value.Length - 2) : value;
Magic Number,Magnum.Serialization.FastText,FastTextObjectSerializer<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\FastText\FastTextObjectSerializer.cs,StringToInstance,The following statement contains a magic number: string message =  					string.Format("Types should start with a '{0}'' expecting serialized type '{1}'' got string starting with: {2}"'  					              MapStart' typeof (T).Name'  					              text.Substring(0' text.Length < 50 ? text.Length : 50));
Magic Number,Magnum.Serialization.FastText,FastTextObjectSerializer<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\FastText\FastTextObjectSerializer.cs,StringToInstance,The following statement contains a magic number: string message =  					string.Format("Types should start with a '{0}'' expecting serialized type '{1}'' got string starting with: {2}"'  					              MapStart' typeof (T).Name'  					              text.Substring(0' text.Length < 50 ? text.Length : 50));
Magic Number,Magnum.Serialization.FastText,FastTextStringSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\FastText\FastTextStringSerializer.cs,GetReader,The following statement contains a magic number: return value =>  				{  					if (string.IsNullOrEmpty(value))  						return value;    					if (value[0] != Quote)  						return value;    					return value.Substring(1' value.Length - 2)  						.Replace(DoubleQuoteString' QuoteString);  				};
Magic Number,Magnum.Serialization,FastTextSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\FastTextSerializer.cs,Serialize,The following statement contains a magic number: var sb = new StringBuilder(4096);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTimeMs,The following statement contains a magic number: var chars = new char[24];
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTimeMs,The following statement contains a magic number: chars[4] = '-';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTimeMs,The following statement contains a magic number: Write2Chars(chars' 5' dt.Month);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTimeMs,The following statement contains a magic number: chars[7] = '-';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTimeMs,The following statement contains a magic number: Write2Chars(chars' 8' dt.Day);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTimeMs,The following statement contains a magic number: chars[10] = 'T';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTimeMs,The following statement contains a magic number: Write2Chars(chars' 11' dt.Hour);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTimeMs,The following statement contains a magic number: chars[13] = ':';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTimeMs,The following statement contains a magic number: Write2Chars(chars' 14' dt.Minute);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTimeMs,The following statement contains a magic number: chars[16] = ':';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTimeMs,The following statement contains a magic number: Write2Chars(chars' 17' dt.Second);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTimeMs,The following statement contains a magic number: chars[19] = '.';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTimeMs,The following statement contains a magic number: Write3Chars(chars' 20' dt.Millisecond);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTimeMs,The following statement contains a magic number: chars[23] = 'Z';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTime,The following statement contains a magic number: var chars = new char[20];
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTime,The following statement contains a magic number: chars[4] = '-';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTime,The following statement contains a magic number: Write2Chars(chars' 5' dt.Month);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTime,The following statement contains a magic number: chars[7] = '-';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTime,The following statement contains a magic number: Write2Chars(chars' 8' dt.Day);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTime,The following statement contains a magic number: chars[10] = 'T';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTime,The following statement contains a magic number: Write2Chars(chars' 11' dt.Hour);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTime,The following statement contains a magic number: chars[13] = ':';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTime,The following statement contains a magic number: Write2Chars(chars' 14' dt.Minute);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTime,The following statement contains a magic number: chars[16] = ':';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTime,The following statement contains a magic number: Write2Chars(chars' 17' dt.Second);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDateTime,The following statement contains a magic number: chars[19] = 'Z';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDate,The following statement contains a magic number: var chars = new char[10];
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDate,The following statement contains a magic number: chars[4] = '-';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDate,The following statement contains a magic number: Write2Chars(chars' 5' dt.Month);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDate,The following statement contains a magic number: chars[7] = '-';
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,FormatDate,The following statement contains a magic number: Write2Chars(chars' 8' dt.Day);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,Write2Chars,The following statement contains a magic number: chars[offset++] = (char) (value/10 + '0');
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,Write2Chars,The following statement contains a magic number: chars[offset] = (char) (value%10 + '0');
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,Write3Chars,The following statement contains a magic number: chars[offset++] = (char)('0' + (value / 100));
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,Write3Chars,The following statement contains a magic number: chars[offset++] = (char)('0' + ((value / 10) % 10));
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,Write3Chars,The following statement contains a magic number: chars[offset++] = (char)('0' + ((value / 10) % 10));
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,Write3Chars,The following statement contains a magic number: chars[offset] = (char)('0' + (value % 10));
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,Write4Chars,The following statement contains a magic number: chars[offset++] = (char)('0' + (value / 1000 % 10));
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,Write4Chars,The following statement contains a magic number: chars[offset++] = (char)('0' + (value / 1000 % 10));
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,Write4Chars,The following statement contains a magic number: chars[offset++] = (char)('0' + (value / 100 % 10));
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,Write4Chars,The following statement contains a magic number: chars[offset++] = (char)('0' + (value / 100 % 10));
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,Write4Chars,The following statement contains a magic number: chars[offset++] = (char)('0' + ((value / 10) % 10));
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,Write4Chars,The following statement contains a magic number: chars[offset++] = (char)('0' + ((value / 10) % 10));
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,Write4Chars,The following statement contains a magic number: chars[offset] = (char)('0' + (value % 10));
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,ParseShortestXsdDateTime,The following statement contains a magic number: return new DateTime(  				int.Parse(text.Substring(0' 4))'  				int.Parse(text.Substring(5' 2))'  				int.Parse(text.Substring(8' 2))'  				0' 0' 0'  				DateTimeKind.Utc);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,ParseShortestXsdDateTime,The following statement contains a magic number: return new DateTime(  				int.Parse(text.Substring(0' 4))'  				int.Parse(text.Substring(5' 2))'  				int.Parse(text.Substring(8' 2))'  				0' 0' 0'  				DateTimeKind.Utc);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,ParseShortestXsdDateTime,The following statement contains a magic number: return new DateTime(  				int.Parse(text.Substring(0' 4))'  				int.Parse(text.Substring(5' 2))'  				int.Parse(text.Substring(8' 2))'  				0' 0' 0'  				DateTimeKind.Utc);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,ParseShortestXsdDateTime,The following statement contains a magic number: return new DateTime(  				int.Parse(text.Substring(0' 4))'  				int.Parse(text.Substring(5' 2))'  				int.Parse(text.Substring(8' 2))'  				0' 0' 0'  				DateTimeKind.Utc);
Magic Number,Magnum.Serialization.TypeSerializers,DateTimeSerializer,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Serialization\TypeSerializers\DateTimeSerializer.cs,ParseShortestXsdDateTime,The following statement contains a magic number: return new DateTime(  				int.Parse(text.Substring(0' 4))'  				int.Parse(text.Substring(5' 2))'  				int.Parse(text.Substring(8' 2))'  				0' 0' 0'  				DateTimeKind.Utc);
Magic Number,Magnum.StateMachine,EventCombiner<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\StateMachine\EventCombiner.cs,Into,The following statement contains a magic number: _sources.Count > 31
Magic Number,Magnum.Validation,DateTimeExtensions,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Validation\DateTimeExtensions.cs,ToFriendlyString,The following statement contains a magic number: ts.Equals(TimeSpan.FromDays(30))
Magic Number,Magnum.Validation,DateTimeExtensions,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Validation\DateTimeExtensions.cs,ToFriendlyString,The following statement contains a magic number: ts.Equals(TimeSpan.FromDays(365))
Magic Number,Magnum.Validation,DateTimeExtensions,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Validation\DateTimeExtensions.cs,ToFriendlyString,The following statement contains a magic number: int years = ts.Days/365;
Magic Number,Magnum.Validation,DateTimeExtensions,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Validation\DateTimeExtensions.cs,ToFriendlyString,The following statement contains a magic number: int months = (ts.Days%365)/30;
Magic Number,Magnum.Validation,DateTimeExtensions,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Validation\DateTimeExtensions.cs,ToFriendlyString,The following statement contains a magic number: int months = (ts.Days%365)/30;
Magic Number,Magnum.Validation,DateTimeExtensions,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Validation\DateTimeExtensions.cs,ToFriendlyString,The following statement contains a magic number: int weeks = ((ts.Days%365)%30)/7;
Magic Number,Magnum.Validation,DateTimeExtensions,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Validation\DateTimeExtensions.cs,ToFriendlyString,The following statement contains a magic number: int weeks = ((ts.Days%365)%30)/7;
Magic Number,Magnum.Validation,DateTimeExtensions,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Validation\DateTimeExtensions.cs,ToFriendlyString,The following statement contains a magic number: int weeks = ((ts.Days%365)%30)/7;
Magic Number,Magnum.Validation,DateTimeExtensions,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Validation\DateTimeExtensions.cs,ToFriendlyString,The following statement contains a magic number: int days = (((ts.Days%365)%30)%7);
Magic Number,Magnum.Validation,DateTimeExtensions,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Validation\DateTimeExtensions.cs,ToFriendlyString,The following statement contains a magic number: int days = (((ts.Days%365)%30)%7);
Magic Number,Magnum.Validation,DateTimeExtensions,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\Validation\DateTimeExtensions.cs,ToFriendlyString,The following statement contains a magic number: int days = (((ts.Days%365)%30)%7);
Magic Number,Magnum.ValueProviders,ValueProviderDecorator,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\ValueProviders\ValueProviderDecorator.cs,ObscureValueIfNecessary,The following statement contains a magic number: return text.Substring(0' 100) + "... (" + text.Length + " bytes)";
Magic Number,Magnum.ValueProviders,ValueProviderDecorator,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\ValueProviders\ValueProviderDecorator.cs,ObscureValueIfNecessary,The following statement contains a magic number: text.Length > 100
Missing Default,Magnum.StateMachine,StateMachine<T>,C:\research\architectureSmells\repos\phatboyg_Magnum\src\Magnum\StateMachine\StateMachine.cs,InitializeStates,The following switch statement is missing a default case: switch (state.Name)  				{  					case InitialStateName:  						_initialState = state;  						break;  					case CompletedStateName:  						_completedState = state;  						break;  				}
