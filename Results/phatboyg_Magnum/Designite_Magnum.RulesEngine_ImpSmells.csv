Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Magnum.RulesEngine.ExecutionModel,ConditionNormalizer,C:\repos\phatboyg_Magnum\src\Magnum.RulesEngine\ExecutionModel\ConditionNormalizer.cs,VisitBinary,Cyclomatic complexity of the method is 8
Complex Conditional,Magnum.RulesEngine.ExecutionModel,ConditionNormalizer,C:\repos\phatboyg_Magnum\src\Magnum.RulesEngine\ExecutionModel\ConditionNormalizer.cs,VisitBinary,The conditional expression  "((m = b.Left as MethodCallExpression) != null && (c = b.Right as ConstantExpression) != null)  				    || ((m = b.Right as MethodCallExpression) != null && (c = b.Left as ConstantExpression) != null)"  is complex.
Complex Conditional,Magnum.RulesEngine.ExecutionModel,ConditionNormalizer,C:\repos\phatboyg_Magnum\src\Magnum.RulesEngine\ExecutionModel\ConditionNormalizer.cs,VisitBinary,The conditional expression  "((me = b.Left as MemberExpression) != null && (c = b.Right as ConstantExpression) != null)  				    || ((me = b.Right as MemberExpression) != null && (c = b.Left as ConstantExpression) != null)"  is complex.
Magic Number,Magnum.RulesEngine.ExecutionModel,DeclarationCompiler,C:\repos\phatboyg_Magnum\src\Magnum.RulesEngine\ExecutionModel\DeclarationCompiler.cs,GetFinalJunction,The following statement contains a magic number: if (nodes.Count() == 1)  			{  				junction = nodes.Single().GetConstantJoinNode();  			}  			else if (nodes.Count() == 2)  			{  				junction = nodes.Skip(1).First().GetAlphaJoinNode(nodes.First());  			}  			else  			{  				junction = new JoinNode<T>(nodes.First());  				GetFinalJunction(nodes.Skip(1)).AddSuccessor(junction);  			}
