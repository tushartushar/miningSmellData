Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Trainer,Program,C:\repos\AlexPoint_OpenNlp\Trainer\Program.cs,OptimizeSentenceDetectionTraining,Cyclomatic complexity of the method is 8
Long Statement,Trainer,Program,C:\repos\AlexPoint_OpenNlp\Trainer\Program.cs,OptimizeSentenceDetectionTraining,The length of the statement  "            Console.WriteLine("Training model with files {0}"' string.Join("' "' allTrainFiles.Select(f => Path.GetFileNameWithoutExtension(f)))); " is 134.
Long Statement,Trainer,Program,C:\repos\AlexPoint_OpenNlp\Trainer\Program.cs,OptimizeSentenceDetectionTraining,The length of the statement  "            Console.WriteLine("Persisting model for iteration={0} and cut={1} to file '{2}'..."' bestIterationValue' bestCutValue' outputFilePath); " is 135.
Long Statement,Trainer,Program,C:\repos\AlexPoint_OpenNlp\Trainer\Program.cs,OptimizeSentenceDetectionTraining,The length of the statement  "            var bestModel = MaximumEntropySentenceDetector.TrainModel(allTrainFiles' bestIterationValue' bestCutValue' endOfSentenceScanner); " is 129.
Long Statement,Trainer,Program,C:\repos\AlexPoint_OpenNlp\Trainer\Program.cs,OptimizeTokenizerTraining,The length of the statement  "            Console.WriteLine("Training model with files: {0}"' string.Join("' "' allTrainFiles.Select(f => Path.GetFileNameWithoutExtension(f)))); " is 135.
Long Statement,Trainer,Program,C:\repos\AlexPoint_OpenNlp\Trainer\Program.cs,OptimizeTokenizerTraining,The length of the statement  "                    var model = MaximumEntropyTokenizer.Train(allTrainFiles' iteration' cut' includeAllCapsExamples: includeAllCapsExamples); " is 121.
Long Statement,Trainer,Program,C:\repos\AlexPoint_OpenNlp\Trainer\Program.cs,OptimizeTokenizerTraining,The length of the statement  "            Console.WriteLine("Persisting model for iteration={0} and cut={1} to file '{2}'..."' bestIterationValue' bestCutValue' outputFilePath); " is 135.
Magic Number,Trainer,Program,C:\repos\AlexPoint_OpenNlp\Trainer\Program.cs,OptimizeSentenceDetectionTraining,The following statement contains a magic number: foreach (var iteration in iterations)              {                  foreach (var cut in cuts)                  {                      var model = MaximumEntropySentenceDetector.TrainModel(allTrainFiles' iteration' cut' endOfSentenceScanner);                      // compute accuracy                      var sentenceDetector = new MaximumEntropySentenceDetector(model' endOfSentenceScanner);                      var results = sentenceDetector.SentenceDetect(testData);                        // not perfect for comparing files but it gives a very good approximation                      //var commonValues = allSentences.Intersect(results).Count();                      var nbOfCommonSentences = 0;                      foreach (var result in results)                      {                          if (allSentences.Contains(result))                          {                              nbOfCommonSentences++;                          }                          else                          {                              //Console.WriteLine(result);                          }                      }                      var accuracyScore = (float)2 * nbOfCommonSentences / (allSentences.Count + results.Count());                      Console.WriteLine("Accuracy for iteration={0} and cut={1}: {2}"' iteration' cut' accuracyScore);                      if (accuracyScore > bestAccuracy)                      {                          bestAccuracy = accuracyScore;                          bestIterationValue = iteration;                          bestCutValue = cut;                      }                  }              }
