Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SharpWordNet.Morph,TokenizerOperation,C:\repos\AlexPoint_OpenNlp\SharpWordNet\Morph\TokenizerOperation.cs,TryAllCombinations,Cyclomatic complexity of the method is 9
Long Parameter List,SharpWordNet,IndexWord,C:\repos\AlexPoint_OpenNlp\SharpWordNet\IndexWord.cs,IndexWord,The method has 5 parameters. Parameters: lemma' partOfSpeech' relationTypes' synsetOffsets' tagSenseCount
Long Parameter List,SharpWordNet,Relation,C:\repos\AlexPoint_OpenNlp\SharpWordNet\Relation.cs,Relation,The method has 6 parameters. Parameters: wordNetEngine' relationType' targetSynsetOffset' targetSynsetPartOfSpeech' sourceWord' targetWord
Long Parameter List,SharpWordNet,Synset,C:\repos\AlexPoint_OpenNlp\SharpWordNet\Synset.cs,Synset,The method has 5 parameters. Parameters: offset' gloss' wordList' lexicographerFile' relations
Long Parameter List,SharpWordNet.Morph,TokenizerOperation,C:\repos\AlexPoint_OpenNlp\SharpWordNet\Morph\TokenizerOperation.cs,TryAllCombinations,The method has 5 parameters. Parameters: partOfSpeech' tokenForms' startIndex' endIndex' baseForms
Long Statement,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,CreateSynset,The length of the statement  "					relations[currentRelation] = new Relation(this' (RelationType)_relationTypeDictionary[relationTypeKey]' targetSynsetOffset' targetPartOfSpeech); " is 144.
Long Statement,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,CreateSynset,The length of the statement  "					relations[currentRelation] = new Relation(this' (RelationType)_relationTypeDictionary[relationTypeKey]' targetSynsetOffset' targetPartOfSpeech' sourceWord' targetWord); " is 168.
Long Statement,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeRelationTypes,The length of the statement  "		    //moRelationTypeDictionary.Add(";"' new RelationType("Domain of synset"' new string[] {"noun"' "verb"' "adjective"' "adverb"})); " is 128.
Long Statement,SharpWordNet.Morph,DetachSuffixesOperation,C:\repos\AlexPoint_OpenNlp\SharpWordNet\Morph\DetachSuffixesOperation.cs,Execute,The length of the statement  "                    string stem = lemma.Substring(0' (lemma.Length - suffixArray[currentSuffix][0].Length) - (0)) + suffixArray[currentSuffix][1]; " is 126.
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,DataFileEngine,The following statement contains a magic number: _dataFileDictionary = new Dictionary<string' PosDataFileSet>(4)              {                  {"noun"' new PosDataFileSet(dataFolder' "noun")}'                  {"verb"' new PosDataFileSet(dataFolder' "verb")}'                  {"adjective"' new PosDataFileSet(dataFolder' "adj")}'                  {"adverb"' new PosDataFileSet(dataFolder' "adv")}              };
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,BinarySearch,The following statement contains a magic number: diff = 666;
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,BinarySearch,The following statement contains a magic number: mid = (bot-top)/2;
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,BinarySearch,The following statement contains a magic number: do   			{                  searchFile.DiscardBufferedData();                  searchFile.BaseStream.Position = mid - 1;  			    if (mid != 1)  			    {                      while ((c = searchFile.Read()) != '\n' && c != -1) { }  			    }                  line = searchFile.ReadLine();  			    if (line == null)  			    {                      return null;  			    }  				n = line.IndexOf(' ');  				key = line.Substring(0'n);  				key=key.Replace("-"'" ").Replace("_"'" ");  				if (string.CompareOrdinal(key' searchKey) < 0)   				{  					top = mid;  					diff = (bot - top)/2;  					mid = top + diff;  				}                  if (string.CompareOrdinal(key' searchKey) > 0)  				{  					bot = mid;  					diff = (bot - top)/2;  					mid = top + diff;  				}  			} while (key!=searchKey && diff!=0);
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,BinarySearch,The following statement contains a magic number: do   			{                  searchFile.DiscardBufferedData();                  searchFile.BaseStream.Position = mid - 1;  			    if (mid != 1)  			    {                      while ((c = searchFile.Read()) != '\n' && c != -1) { }  			    }                  line = searchFile.ReadLine();  			    if (line == null)  			    {                      return null;  			    }  				n = line.IndexOf(' ');  				key = line.Substring(0'n);  				key=key.Replace("-"'" ").Replace("_"'" ");  				if (string.CompareOrdinal(key' searchKey) < 0)   				{  					top = mid;  					diff = (bot - top)/2;  					mid = top + diff;  				}                  if (string.CompareOrdinal(key' searchKey) > 0)  				{  					bot = mid;  					diff = (bot - top)/2;  					mid = top + diff;  				}  			} while (key!=searchKey && diff!=0);
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,CreateSynset,The following statement contains a magic number: for (int currentRelation = 0; currentRelation < relationCount; currentRelation++)  			{  				string relationTypeKey = tokenizer.NextToken();  //				if (fpos.name=="adj" && sstype==AdjSynSetType.DontKnow)   //				{  //					if (ptrs[j].ptp.mnemonic=="ANTPTR")  //						sstype = AdjSynSetType.DirectAnt;  //					else if (ptrs[j].ptp.mnemonic=="PERTPTR")   //						sstype = AdjSynSetType.Pertainym;  //				}  				int targetSynsetOffset = int.Parse(tokenizer.NextToken());  				string targetPartOfSpeech = tokenizer.NextToken();  				switch (targetPartOfSpeech)  				{  					case "n":  						targetPartOfSpeech = "noun";  						break;  					case "v":  						targetPartOfSpeech = "verb";  						break;  					case "a":  					case "s":  						targetPartOfSpeech = "adjective";  						break;  					case "r":  						targetPartOfSpeech = "adverb";  						break;  				}    				int sourceTarget = int.Parse(tokenizer.NextToken()' System.Globalization.NumberStyles.HexNumber);  				if (sourceTarget == 0)  				{  					relations[currentRelation] = new Relation(this' (RelationType)_relationTypeDictionary[relationTypeKey]' targetSynsetOffset' targetPartOfSpeech);  				}   				else  				{  					int sourceWord = sourceTarget >> 8;  					int targetWord = sourceTarget & 0xff;  					relations[currentRelation] = new Relation(this' (RelationType)_relationTypeDictionary[relationTypeKey]' targetSynsetOffset' targetPartOfSpeech' sourceWord' targetWord);  				}  			}
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles = new string[45];
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[2] = "adv.all - all adverbs";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[3] = "noun.Tops - unique beginners for nouns";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[4] = "noun.act - nouns denoting acts or actions";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[5] = "noun.animal - nouns denoting animals";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[6] = "noun.artifact - nouns denoting man-made objects";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[7] = "noun.attribute - nouns denoting attributes of people and objects";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[8] = "noun.body - nouns denoting body parts";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[9] = "noun.cognition - nouns denoting cognitive processes and contents";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[10] = "noun.communication - nouns denoting communicative processes and contents";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[11] = "noun.event - nouns denoting natural events";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[12] = "noun.feeling - nouns denoting feelings and emotions";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[13] = "noun.food - nouns denoting foods and drinks";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[14] = "noun.group - nouns denoting groupings of people or objects";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[15] = "noun.location - nouns denoting spatial position";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[16] = "noun.motive - nouns denoting goals";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[17] = "noun.object - nouns denoting natural objects (not man-made)";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[18] = "noun.person - nouns denoting people";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[19] = "noun.phenomenon - nouns denoting natural phenomena";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[20] = "noun.plant - nouns denoting plants";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[21] = "noun.possession - nouns denoting possession and transfer of possession";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[22] = "noun.process - nouns denoting natural processes";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[23] = "noun.quantity - nouns denoting quantities and units of measure";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[24] = "noun.relation - nouns denoting relations between people or things or ideas";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[25] = "noun.shape - nouns denoting two and three dimensional shapes";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[26] = "noun.state - nouns denoting stable states of affairs";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[27] = "noun.substance - nouns denoting substances";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[28] = "noun.time - nouns denoting time and temporal relations";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[29] = "verb.body - verbs of grooming' dressing and bodily care";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[30] = "verb.change - verbs of size' temperature change' intensifying' etc.";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[31] = "verb.cognition - verbs of thinking' judging' analyzing' doubting";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[32] = "verb.communication - verbs of telling' asking' ordering' singing";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[33] = "verb.competition - verbs of fighting' athletic activities";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[34] = "verb.consumption - verbs of eating and drinking";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[35] = "verb.contact - verbs of touching' hitting' tying' digging";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[36] = "verb.creation - verbs of sewing' baking' painting' performing";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[37] = "verb.emotion - verbs of feeling";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[38] = "verb.motion - verbs of walking' flying' swimming";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[39] = "verb.perception - verbs of seeing' hearing' feeling";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[40] = "verb.possession - verbs of buying' selling' owning";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[41] = "verb.social - verbs of political and social activities and events";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[42] = "verb.stative - verbs of being' having' spatial relations";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[43] = "verb.weather - verbs of raining' snowing' thawing' thundering";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeLexicographerFiles,The following statement contains a magic number: _lexicographerFiles[44] = "adj.ppl - participial adjectives";
Magic Number,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,InitializeRelationTypes,The following statement contains a magic number: _relationTypeDictionary = new Dictionary<string' RelationType>(30)              {                  {"!"' new RelationType("Antonym"' new string[] {"noun"' "verb"' "adjective"' "adverb"})}'                  {"@"' new RelationType("Hypernym"' new string[] {"noun"' "verb"})}'                  {"@i"' new RelationType("Instance Hypernym"' new string[] {"noun"})}'                  {"~"' new RelationType("Hyponym"' new string[] {"noun"' "verb"})}'                  {"~i"' new RelationType("Instance Hyponym"' new string[] {"noun"})}'                  {"#m"' new RelationType("Member holonym"' new string[] {"noun"})}'                  {"#s"' new RelationType("Substance holonym"' new string[] {"noun"})}'                  {"#p"' new RelationType("Part holonym"' new string[] {"noun"})}'                  {"%m"' new RelationType("Member meronym"' new string[] {"noun"})}'                  {"%s"' new RelationType("Substance meronym"' new string[] {"noun"})}'                  {"%p"' new RelationType("Part meronym"' new string[] {"noun"})}'                  {"="' new RelationType("Attribute"' new string[] {"noun"' "adjective"})}'                  {"+"' new RelationType("Derivationally related form"' new string[] {"noun"' "verb"})}'                  {";c"' new RelationType("Domain of synset - TOPIC"' new string[] {"noun"' "verb"' "adjective"' "adverb"})}'                  {"-c"' new RelationType("Member of this domain - TOPIC"' new string[] {"noun"})}'                  {";r"' new RelationType("Domain of synset - REGION"' new string[] {"noun"' "verb"' "adjective"' "adverb"})}'                  {"-r"' new RelationType("Member of this domain - REGION"' new string[] {"noun"})}'                  {";u"' new RelationType("Domain of synset - USAGE"' new string[] {"noun"' "verb"' "adjective"' "adverb"})}'                  {"-u"' new RelationType("Member of this domain - USAGE"' new string[] {"noun"})}'                  {"*"' new RelationType("Entailment"' new string[] {"verb"})}'                  {">"' new RelationType("Cause"' new string[] {"verb"})}'                  {"^"' new RelationType("Also see"' new string[] {"verb"' "adjective"})}'                  {"$"' new RelationType("Verb Group"' new string[] {"verb"})}'                  {"&"' new RelationType("Similar to"' new string[] {"adjective"})}'                  {"<"' new RelationType("Participle of verb"' new string[] {"adjective"})}'                  {@"\"' new RelationType("Pertainym"' new string[] {"adjective"' "adverb"})}              };
Magic Number,SharpWordNet.Morph,TokenizerOperation,C:\repos\AlexPoint_OpenNlp\SharpWordNet\Morph\TokenizerOperation.cs,TryAllCombinations,The following statement contains a magic number: BitArray bits = new BitArray(64);
Missing Default,SharpWordNet,DataFileEngine,C:\repos\AlexPoint_OpenNlp\SharpWordNet\DataFileEngine.cs,CreateSynset,The following switch statement is missing a default case: switch (targetPartOfSpeech)  				{  					case "n":  						targetPartOfSpeech = "noun";  						break;  					case "v":  						targetPartOfSpeech = "verb";  						break;  					case "a":  					case "s":  						targetPartOfSpeech = "adjective";  						break;  					case "r":  						targetPartOfSpeech = "adverb";  						break;  				}
