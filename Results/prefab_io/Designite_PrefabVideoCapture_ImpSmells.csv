Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PrefabVideoCapture,MainWindow,C:\repos\prefab_io\MainWindow.xaml.cs,UpdateUI,Cyclomatic complexity of the method is 27
Long Parameter List,PrefabVideoCapture,ScreenshotToTreeDoubleBuffered,C:\repos\prefab_io\ScreenshotToTreeDoubleBuffered.cs,GetDirtyRect,The method has 6 parameters.
Long Statement,PrefabVideoCapture,ScreenshotToTreeDoubleBuffered,C:\repos\prefab_io\ScreenshotToTreeDoubleBuffered.cs,CopyPixelsFromDrawingBitmap,The length of the statement  "	System.Drawing.Imaging.BitmapData bitmapData = source.LockBits (new System.Drawing.Rectangle (0' 0' source.Width' source.Height)' System.Drawing.Imaging.ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb); " is 229.
Long Statement,PrefabVideoCapture,WindowStreamCapture,C:\repos\prefab_io\WindowCapture.cs,GetWindowAttributes,The length of the statement  "		expensiveInfo = new ExpensiveWindowInfo (Win32.GetClassName (hwnd)' Win32.GetWindowText (hwnd)' Win32.GetProcessPathFromWindowHandle (hwnd)); " is 141.
Long Statement,PrefabVideoCapture,WindowStreamCapture,C:\repos\prefab_io\WindowCapture.cs,CaptureWindowWithoutPixels,The length of the statement  "	BoundingBox windowRect = new BoundingBox (windowinfo.rcWindow.left' windowinfo.rcWindow.top' windowinfo.rcWindow.right - windowinfo.rcWindow.left + 1' windowinfo.rcWindow.bottom - windowinfo.rcWindow.top + 1); " is 209.
Long Statement,PrefabVideoCapture,WindowStreamCapture,C:\repos\prefab_io\WindowCapture.cs,CaptureWindow,The length of the statement  "	BoundingBox windowRect = new BoundingBox (windowinfo.rcWindow.left' windowinfo.rcWindow.top' windowinfo.rcWindow.right - windowinfo.rcWindow.left + 1' windowinfo.rcWindow.bottom - windowinfo.rcWindow.top + 1); " is 209.
Long Statement,PrefabVideoCapture,MainWindow,C:\repos\prefab_io\MainWindow.xaml.cs,ShouldConsiderWindow,The length of the statement  "	return window != null && (((IntPtr)window ["handle"]) != highlightHandle) && ((Win32.WindowStyles)window ["style"] & Win32.WindowStyles.WS_ICONIC) != Win32.WindowStyles.WS_ICONIC && // not minimized " is 198.
Long Statement,PrefabVideoCapture,MainWindow,C:\repos\prefab_io\MainWindow.xaml.cs,ShouldConsiderWindow,The length of the statement  "	((Win32.WindowStyles)window ["style"] & Win32.WindowStyles.WS_CHILD) != Win32.WindowStyles.WS_CHILD && //not a child window " is 123.
Long Statement,PrefabVideoCapture,MainWindow,C:\repos\prefab_io\MainWindow.xaml.cs,ShouldConsiderWindow,The length of the statement  "	((Win32.WindowStyles)window ["style"] & Win32.WindowStyles.WS_VISIBLE) == Win32.WindowStyles.WS_VISIBLE && ((((Win32.WindowStyles)window ["style"] & Win32.WindowStyles.WS_POPUP) != Win32.WindowStyles.WS_POPUP || ((Win32.WindowStyles)window ["exstyle"] & Win32.WindowStyles.WS_EX_TOOLWINDOW) != Win32.WindowStyles.WS_EX_TOOLWINDOW) || window.Height > 29) && //is not a tooltip (not a popup or not a tool window or bigger than 28 high). (28 px is a hack to distinguish tooltips from other windows). " is 496.
Long Statement,PrefabVideoCapture,MainWindow,C:\repos\prefab_io\MainWindow.xaml.cs,ShouldConsiderWindow,The length of the statement  "	(window.Width < System.Windows.SystemParameters.VirtualScreenWidth || window.Height < System.Windows.SystemParameters.VirtualScreenHeight); " is 139.
Magic Number,PrefabVideoCapture,CaptureThread,C:\repos\prefab_io\CaptureThread.cs,ThreadRun,The following statement contains a magic number: if (!_running) {  	_running = true;  	while (!_exitEvent.WaitOne (0' false)) {  		IntPtr windowHandle = (IntPtr)arg;  		//Get the active window so we can translate it.  		Tree window = _windowCapture.CaptureWindowWithPixels (windowHandle' UsePrintWindow' false);  		if (window != null) {  			Prefab.Bitmap capture = window ["capturedpixels"] as Prefab.Bitmap;  			System.Drawing.Bitmap bmp = _pool.GetInstance (capture.Width' capture.Height);  			Bitmap.ToSystemDrawingBitmap (capture' bmp);  			// Get Window features  			Win32.WINDOWINFO windowinfo = new Win32.WINDOWINFO (true);  			Win32.GetWindowInfo (windowHandle' ref windowinfo);  			// Save as png image  			String filename = string.Format ("{0}_f{1:D4}.png"' _saveLoc.Substring (0' _saveLoc.Length - 4)' frame_num);  			bmp.Save (@filename' ImageFormat.Png);  			frame_num++;  			if (_videoStream == null) {  				_videoStream = _aviManager.AddVideoStream (false' 20' bmp);  			}  			else  				_videoStream.AddFrame (bmp);  			_pool.ReturnInstance (bmp);  		}  		//Let's not melt our processor ;)  		Thread.Sleep (50);  	}  	_running = false;  	_aviManager.Close ();  }  
Magic Number,PrefabVideoCapture,CaptureThread,C:\repos\prefab_io\CaptureThread.cs,ThreadRun,The following statement contains a magic number: if (!_running) {  	_running = true;  	while (!_exitEvent.WaitOne (0' false)) {  		IntPtr windowHandle = (IntPtr)arg;  		//Get the active window so we can translate it.  		Tree window = _windowCapture.CaptureWindowWithPixels (windowHandle' UsePrintWindow' false);  		if (window != null) {  			Prefab.Bitmap capture = window ["capturedpixels"] as Prefab.Bitmap;  			System.Drawing.Bitmap bmp = _pool.GetInstance (capture.Width' capture.Height);  			Bitmap.ToSystemDrawingBitmap (capture' bmp);  			// Get Window features  			Win32.WINDOWINFO windowinfo = new Win32.WINDOWINFO (true);  			Win32.GetWindowInfo (windowHandle' ref windowinfo);  			// Save as png image  			String filename = string.Format ("{0}_f{1:D4}.png"' _saveLoc.Substring (0' _saveLoc.Length - 4)' frame_num);  			bmp.Save (@filename' ImageFormat.Png);  			frame_num++;  			if (_videoStream == null) {  				_videoStream = _aviManager.AddVideoStream (false' 20' bmp);  			}  			else  				_videoStream.AddFrame (bmp);  			_pool.ReturnInstance (bmp);  		}  		//Let's not melt our processor ;)  		Thread.Sleep (50);  	}  	_running = false;  	_aviManager.Close ();  }  
Magic Number,PrefabVideoCapture,CaptureThread,C:\repos\prefab_io\CaptureThread.cs,ThreadRun,The following statement contains a magic number: if (!_running) {  	_running = true;  	while (!_exitEvent.WaitOne (0' false)) {  		IntPtr windowHandle = (IntPtr)arg;  		//Get the active window so we can translate it.  		Tree window = _windowCapture.CaptureWindowWithPixels (windowHandle' UsePrintWindow' false);  		if (window != null) {  			Prefab.Bitmap capture = window ["capturedpixels"] as Prefab.Bitmap;  			System.Drawing.Bitmap bmp = _pool.GetInstance (capture.Width' capture.Height);  			Bitmap.ToSystemDrawingBitmap (capture' bmp);  			// Get Window features  			Win32.WINDOWINFO windowinfo = new Win32.WINDOWINFO (true);  			Win32.GetWindowInfo (windowHandle' ref windowinfo);  			// Save as png image  			String filename = string.Format ("{0}_f{1:D4}.png"' _saveLoc.Substring (0' _saveLoc.Length - 4)' frame_num);  			bmp.Save (@filename' ImageFormat.Png);  			frame_num++;  			if (_videoStream == null) {  				_videoStream = _aviManager.AddVideoStream (false' 20' bmp);  			}  			else  				_videoStream.AddFrame (bmp);  			_pool.ReturnInstance (bmp);  		}  		//Let's not melt our processor ;)  		Thread.Sleep (50);  	}  	_running = false;  	_aviManager.Close ();  }  
Magic Number,PrefabVideoCapture,CaptureThread,C:\repos\prefab_io\CaptureThread.cs,ThreadRun,The following statement contains a magic number: while (!_exitEvent.WaitOne (0' false)) {  	IntPtr windowHandle = (IntPtr)arg;  	//Get the active window so we can translate it.  	Tree window = _windowCapture.CaptureWindowWithPixels (windowHandle' UsePrintWindow' false);  	if (window != null) {  		Prefab.Bitmap capture = window ["capturedpixels"] as Prefab.Bitmap;  		System.Drawing.Bitmap bmp = _pool.GetInstance (capture.Width' capture.Height);  		Bitmap.ToSystemDrawingBitmap (capture' bmp);  		// Get Window features  		Win32.WINDOWINFO windowinfo = new Win32.WINDOWINFO (true);  		Win32.GetWindowInfo (windowHandle' ref windowinfo);  		// Save as png image  		String filename = string.Format ("{0}_f{1:D4}.png"' _saveLoc.Substring (0' _saveLoc.Length - 4)' frame_num);  		bmp.Save (@filename' ImageFormat.Png);  		frame_num++;  		if (_videoStream == null) {  			_videoStream = _aviManager.AddVideoStream (false' 20' bmp);  		}  		else  			_videoStream.AddFrame (bmp);  		_pool.ReturnInstance (bmp);  	}  	//Let's not melt our processor ;)  	Thread.Sleep (50);  }  
Magic Number,PrefabVideoCapture,CaptureThread,C:\repos\prefab_io\CaptureThread.cs,ThreadRun,The following statement contains a magic number: while (!_exitEvent.WaitOne (0' false)) {  	IntPtr windowHandle = (IntPtr)arg;  	//Get the active window so we can translate it.  	Tree window = _windowCapture.CaptureWindowWithPixels (windowHandle' UsePrintWindow' false);  	if (window != null) {  		Prefab.Bitmap capture = window ["capturedpixels"] as Prefab.Bitmap;  		System.Drawing.Bitmap bmp = _pool.GetInstance (capture.Width' capture.Height);  		Bitmap.ToSystemDrawingBitmap (capture' bmp);  		// Get Window features  		Win32.WINDOWINFO windowinfo = new Win32.WINDOWINFO (true);  		Win32.GetWindowInfo (windowHandle' ref windowinfo);  		// Save as png image  		String filename = string.Format ("{0}_f{1:D4}.png"' _saveLoc.Substring (0' _saveLoc.Length - 4)' frame_num);  		bmp.Save (@filename' ImageFormat.Png);  		frame_num++;  		if (_videoStream == null) {  			_videoStream = _aviManager.AddVideoStream (false' 20' bmp);  		}  		else  			_videoStream.AddFrame (bmp);  		_pool.ReturnInstance (bmp);  	}  	//Let's not melt our processor ;)  	Thread.Sleep (50);  }  
Magic Number,PrefabVideoCapture,CaptureThread,C:\repos\prefab_io\CaptureThread.cs,ThreadRun,The following statement contains a magic number: while (!_exitEvent.WaitOne (0' false)) {  	IntPtr windowHandle = (IntPtr)arg;  	//Get the active window so we can translate it.  	Tree window = _windowCapture.CaptureWindowWithPixels (windowHandle' UsePrintWindow' false);  	if (window != null) {  		Prefab.Bitmap capture = window ["capturedpixels"] as Prefab.Bitmap;  		System.Drawing.Bitmap bmp = _pool.GetInstance (capture.Width' capture.Height);  		Bitmap.ToSystemDrawingBitmap (capture' bmp);  		// Get Window features  		Win32.WINDOWINFO windowinfo = new Win32.WINDOWINFO (true);  		Win32.GetWindowInfo (windowHandle' ref windowinfo);  		// Save as png image  		String filename = string.Format ("{0}_f{1:D4}.png"' _saveLoc.Substring (0' _saveLoc.Length - 4)' frame_num);  		bmp.Save (@filename' ImageFormat.Png);  		frame_num++;  		if (_videoStream == null) {  			_videoStream = _aviManager.AddVideoStream (false' 20' bmp);  		}  		else  			_videoStream.AddFrame (bmp);  		_pool.ReturnInstance (bmp);  	}  	//Let's not melt our processor ;)  	Thread.Sleep (50);  }  
Magic Number,PrefabVideoCapture,CaptureThread,C:\repos\prefab_io\CaptureThread.cs,ThreadRun,The following statement contains a magic number: if (window != null) {  	Prefab.Bitmap capture = window ["capturedpixels"] as Prefab.Bitmap;  	System.Drawing.Bitmap bmp = _pool.GetInstance (capture.Width' capture.Height);  	Bitmap.ToSystemDrawingBitmap (capture' bmp);  	// Get Window features  	Win32.WINDOWINFO windowinfo = new Win32.WINDOWINFO (true);  	Win32.GetWindowInfo (windowHandle' ref windowinfo);  	// Save as png image  	String filename = string.Format ("{0}_f{1:D4}.png"' _saveLoc.Substring (0' _saveLoc.Length - 4)' frame_num);  	bmp.Save (@filename' ImageFormat.Png);  	frame_num++;  	if (_videoStream == null) {  		_videoStream = _aviManager.AddVideoStream (false' 20' bmp);  	}  	else  		_videoStream.AddFrame (bmp);  	_pool.ReturnInstance (bmp);  }  
Magic Number,PrefabVideoCapture,CaptureThread,C:\repos\prefab_io\CaptureThread.cs,ThreadRun,The following statement contains a magic number: if (window != null) {  	Prefab.Bitmap capture = window ["capturedpixels"] as Prefab.Bitmap;  	System.Drawing.Bitmap bmp = _pool.GetInstance (capture.Width' capture.Height);  	Bitmap.ToSystemDrawingBitmap (capture' bmp);  	// Get Window features  	Win32.WINDOWINFO windowinfo = new Win32.WINDOWINFO (true);  	Win32.GetWindowInfo (windowHandle' ref windowinfo);  	// Save as png image  	String filename = string.Format ("{0}_f{1:D4}.png"' _saveLoc.Substring (0' _saveLoc.Length - 4)' frame_num);  	bmp.Save (@filename' ImageFormat.Png);  	frame_num++;  	if (_videoStream == null) {  		_videoStream = _aviManager.AddVideoStream (false' 20' bmp);  	}  	else  		_videoStream.AddFrame (bmp);  	_pool.ReturnInstance (bmp);  }  
Magic Number,PrefabVideoCapture,CaptureThread,C:\repos\prefab_io\CaptureThread.cs,ThreadRun,The following statement contains a magic number: if (_videoStream == null) {  	_videoStream = _aviManager.AddVideoStream (false' 20' bmp);  }  else  	_videoStream.AddFrame (bmp);  
Magic Number,PrefabVideoCapture,CaptureThread,C:\repos\prefab_io\CaptureThread.cs,ThreadRun,The following statement contains a magic number: _videoStream = _aviManager.AddVideoStream (false' 20' bmp);  
Magic Number,PrefabVideoCapture,CaptureThread,C:\repos\prefab_io\CaptureThread.cs,ThreadRun,The following statement contains a magic number: Thread.Sleep (50);  
Magic Number,PrefabVideoCapture,MainWindow,C:\repos\prefab_io\MainWindow.xaml.cs,_windowGetter_DoWork,The following statement contains a magic number: while (true) {  	_windows = _windowEnumerator.GetAllWindowsWithoutPixels ().Where (ShouldConsiderWindow);  	Thread.Sleep (100);  }  
Magic Number,PrefabVideoCapture,MainWindow,C:\repos\prefab_io\MainWindow.xaml.cs,_windowGetter_DoWork,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,PrefabVideoCapture,MainWindow,C:\repos\prefab_io\MainWindow.xaml.cs,ShouldConsiderWindow,The following statement contains a magic number: return window != null && (((IntPtr)window ["handle"]) != highlightHandle) && ((Win32.WindowStyles)window ["style"] & Win32.WindowStyles.WS_ICONIC) != Win32.WindowStyles.WS_ICONIC && // not minimized  ((Win32.WindowStyles)window ["style"] & Win32.WindowStyles.WS_CHILD) != Win32.WindowStyles.WS_CHILD && //not a child window  ((Win32.WindowStyles)window ["style"] & Win32.WindowStyles.WS_VISIBLE) == Win32.WindowStyles.WS_VISIBLE && ((((Win32.WindowStyles)window ["style"] & Win32.WindowStyles.WS_POPUP) != Win32.WindowStyles.WS_POPUP || ((Win32.WindowStyles)window ["exstyle"] & Win32.WindowStyles.WS_EX_TOOLWINDOW) != Win32.WindowStyles.WS_EX_TOOLWINDOW) || window.Height > 29) && //is not a tooltip (not a popup or not a tool window or bigger than 28 high). (28 px is a hack to distinguish tooltips from other windows).  (window.Width < System.Windows.SystemParameters.VirtualScreenWidth || window.Height < System.Windows.SystemParameters.VirtualScreenHeight);  
Missing Default,PrefabVideoCapture,MainWindow,C:\repos\prefab_io\MainWindow.xaml.cs,_mousehook_OnMouseMove,The following switch statement is missing a default case: switch (_state) {  case State.Selecting:  	IEnumerable<Tree> windows = _windows;  	Tree underCursor = windows.FirstOrDefault (wo => BoundingBox.Contains (wo' e.X' e.Y));  	//Win32.POINT pt = new Win32.POINT();  	//pt.x = e.X;  	//pt.y = e.Y;  	//WindowOccurrence underCursor = _windowEnumerator.CreateOccurrence(Win32.WindowFromPoint(pt));  	if (underCursor != null) {  		_selectedWindow = underCursor;  		Dispatcher.BeginInvoke (_updateUI' UpdateType.HighlightWindow);  	}  	break;  }  
Missing Default,PrefabVideoCapture,MainWindow,C:\repos\prefab_io\MainWindow.xaml.cs,SelectAWindowButton_Click,The following switch statement is missing a default case: switch (_state) {  case State.None:  case State.SelectedButNotRecording:  	_state = State.Selecting;  	Dispatcher.BeginInvoke (_updateUI' UpdateType.DisableSelecting);  	break;  }  
