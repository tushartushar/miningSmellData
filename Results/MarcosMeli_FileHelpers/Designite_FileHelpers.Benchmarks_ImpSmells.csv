Implementation smell,Namespace,Class,File,Method,Description
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,Main,The following statement contains a magic number: var records = 250000;
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,Main,The following statement contains a magic number: Console.WriteLine("Filesize: " + fi.Length + " Bytes | " + (fi.Length / (1024 * 1024)) + " MBytes");
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,Main,The following statement contains a magic number: Console.WriteLine("Filesize: " + fi.Length + " Bytes | " + (fi.Length / (1024 * 1024)) + " MBytes");
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,Main,The following statement contains a magic number: RunBigFileSortTest(file' file + "_test2"' (int)(0.5 * 1024 * 1024));
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,Main,The following statement contains a magic number: RunBigFileSortTest(file' file + "_test2"' (int)(0.5 * 1024 * 1024));
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,Main,The following statement contains a magic number: RunBigFileSortTest(file' file + "_test2"' (int)(0.5 * 1024 * 1024));
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,Main,The following statement contains a magic number: RunBigFileSortTest(file' file + "_test2"' (10 * 1024 * 1024));
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,Main,The following statement contains a magic number: RunBigFileSortTest(file' file + "_test2"' (10 * 1024 * 1024));
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,Main,The following statement contains a magic number: RunBigFileSortTest(file' file + "_test2"' (10 * 1024 * 1024));
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,Main,The following statement contains a magic number: RunBigFileSortTest(file' file + "_test3"' (40 * 1024 * 1024));
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,Main,The following statement contains a magic number: RunBigFileSortTest(file' file + "_test3"' (40 * 1024 * 1024));
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,Main,The following statement contains a magic number: RunBigFileSortTest(file' file + "_test3"' (40 * 1024 * 1024));
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,RunBigFileSortTest,The following statement contains a magic number: Console.WriteLine("Block Size: " + blockSize + " Bytes | " + ((float)blockSize / (1024 * 1024)) + " MBytes");
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,RunBigFileSortTest,The following statement contains a magic number: Console.WriteLine("Block Size: " + blockSize + " Bytes | " + ((float)blockSize / (1024 * 1024)) + " MBytes");
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,RunBigFileSortTest,The following statement contains a magic number: Console.WriteLine("Total Time: " + Math.Round(ts.TotalSeconds' 3) + " seconds");
Magic Number,FileHelpers.Benchmarks,Benchmark,C:\repos\MarcosMeli_FileHelpers\FileHelpers.Benchmarks\BenchMark.cs,CreateSampleFixedString,The following statement contains a magic number: using (var stream = new StreamWriter(file)) {                  var loops = records/20;                    //var res = new StringBuilder(mFixedSample.Length*(loops + 1));                  for (int i = 0; i < loops; i++)                      stream.Write(mFixedSample);              }
