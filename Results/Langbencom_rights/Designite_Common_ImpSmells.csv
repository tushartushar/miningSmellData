Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Common,NetSendMail,F:\newReposMay17\Langbencom_rights\Rights\Common\NetSendMail.cs,MailSend,Cyclomatic complexity of the method is 9
Long Parameter List,Common,NetSendMail,F:\newReposMay17\Langbencom_rights\Rights\Common\NetSendMail.cs,MailSend,The method has 12 parameters.
Long Parameter List,Common,NetSendMail,F:\newReposMay17\Langbencom_rights\Rights\Common\NetSendMail.cs,MailSendText,The method has 9 parameters.
Long Statement,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,ReadFile,The length of the statement  "		System.IO.StreamReader sr = new System.IO.StreamReader (System.Web.HttpContext.Current.Server.MapPath (file)' System.Text.Encoding.UTF8); " is 137.
Long Statement,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,SaveFile,The length of the statement  "			sw = new System.IO.StreamWriter (System.Web.HttpContext.Current.Server.MapPath (tempDir)' false' new System.Text.UTF8Encoding (false)); " is 135.
Long Statement,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,SaveFile,The length of the statement  "			sw = new System.IO.StreamWriter (System.Web.HttpContext.Current.Server.MapPath (tempDir)' false' System.Text.Encoding.UTF8); " is 124.
Long Statement,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,CopyFile,The length of the statement  "			System.IO.File.Copy (System.Web.HttpContext.Current.Server.MapPath (file1)' System.Web.HttpContext.Current.Server.MapPath (file2)' true); " is 137.
Long Statement,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,CopyFile,The length of the statement  "				System.IO.File.Copy (System.Web.HttpContext.Current.Server.MapPath (file1)' System.Web.HttpContext.Current.Server.MapPath (file2)); " is 131.
Long Statement,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,GetFileExt,The length of the statement  "	return filePath.Substring (filePath.LastIndexOf (".") + 1' filePath.Length - filePath.LastIndexOf (".") - 1).ToLower (); " is 120.
Long Statement,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,DownloadFile,The length of the statement  "			_Response.AddHeader ("Content-Disposition"' "attachment;filename=" + System.Web.HttpUtility.UrlEncode (_fileName' System.Text.Encoding.UTF8)); " is 142.
Long Statement,Common,EncryptAndDecrypte,F:\newReposMay17\Langbencom_rights\Rights\Common\EncryptAndDecrypte.cs,EncryptString,The length of the statement  "	return Convert.ToBase64String (EncryptAndDecrypte.EncryptString (encryptString' Convert.FromBase64String (strKey)' Convert.FromBase64String (strIV))); " is 150.
Long Statement,Common,EncryptAndDecrypte,F:\newReposMay17\Langbencom_rights\Rights\Common\EncryptAndDecrypte.cs,DecrypteString,The length of the statement  "	return EncryptAndDecrypte.DecrypteString (Convert.FromBase64String (EncryptedConnectionString)' Convert.FromBase64String (strKey)' Convert.FromBase64String (strIV)).TrimEnd ('\0'); " is 180.
Long Statement,Common,NetSendMail,F:\newReposMay17\Langbencom_rights\Rights\Common\NetSendMail.cs,MailSendText,The length of the statement  "	MailSend (mailFrom' maiFromlAccount' mailFromPwd' mailSmtpServer' mailTo' mailCC' mailBCC' mailTitle' mailContent' attList' Encoding.UTF8' false); " is 146.
Long Statement,Common,NetSendMail,F:\newReposMay17\Langbencom_rights\Rights\Common\NetSendMail.cs,MailSendHTML,The length of the statement  "	string mailFrom = "ben@langben.com"' maiFromlAccount = "service@langben.com"' mailFromPwd = "langben123"' mailSmtpServer = "smtp.exmail.qq.com"; " is 144.
Long Statement,Common,NetSendMail,F:\newReposMay17\Langbencom_rights\Rights\Common\NetSendMail.cs,MailSendHTML,The length of the statement  "	MailSend (mailFrom' maiFromlAccount' mailFromPwd' mailSmtpServer' mailToList' mailCC' mailBCC' mailTitle' mailContent' attList' Encoding.UTF8' true); " is 149.
Long Statement,Common,ValueConvert,F:\newReposMay17\Langbencom_rights\Rights\Common\ValueConvert.cs,GetIdSort,The length of the statement  "		var sort = new SortedSet<string> (ids.Split ('^').Where (w => !string.IsNullOrWhiteSpace (w) && w.Contains ('&')).Select (s => s.Substring (0' s.IndexOf ('&')))); " is 162.
Long Statement,Common,ValueConvert,F:\newReposMay17\Langbencom_rights\Rights\Common\ValueConvert.cs,GetId,The length of the statement  "		var sort = new SortedSet<string> (ids.Split ('^').Where (w => !string.IsNullOrWhiteSpace (w) && w.Contains ('&')).Select (s => s.Substring (0' s.IndexOf ('&')))); " is 162.
Long Statement,Common,ValueConvert,F:\newReposMay17\Langbencom_rights\Rights\Common\ValueConvert.cs,GetDateTime,The length of the statement  "		strValue = strValue.Replace ("年"' "-").Replace ("月"' "-").Replace ("日"' "-").Replace ("点"' ":").Replace ("时"' ":").Replace ("分"' ":").Replace ("秒"' ":"); " is 153.
Empty Catch Block,Common,EncryptAndDecrypte,F:\newReposMay17\Langbencom_rights\Rights\Common\EncryptAndDecrypte.cs,TryGetKeyAndIV,The method has an empty catch block.
Empty Catch Block,Common,ValueConvert,F:\newReposMay17\Langbencom_rights\Rights\Common\ValueConvert.cs,GetBool,The method has an empty catch block.
Magic Number,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,DownloadFile,The following statement contains a magic number: try {  	FileStream myFile = new FileStream (_fullPath' FileMode.Open' FileAccess.Read' FileShare.ReadWrite);  	BinaryReader br = new BinaryReader (myFile);  	try {  		_Response.AddHeader ("Accept-Ranges"' "bytes");  		_Response.Buffer = false;  		long fileLength = myFile.Length;  		long startBytes = 0;  		double pack = 10240;  		//10K bytes  		//int sleep = 200;   //每秒5次   即5*10K bytes每秒  		int sleep = (int)Math.Floor (1000 * pack / _speed) + 1;  		if (_Request.Headers ["Range"] != null) {  			_Response.StatusCode = 206;  			string[] range = _Request.Headers ["Range"].Split (new char[] {  				'=''  				'-'  			});  			startBytes = Convert.ToInt64 (range [1]);  		}  		_Response.AddHeader ("Content-Length"' (fileLength - startBytes).ToString ());  		_Response.AddHeader ("Connection"' "Keep-Alive");  		_Response.ContentType = "application/octet-stream";  		_Response.AddHeader ("Content-Disposition"' "attachment;filename=" + System.Web.HttpUtility.UrlEncode (_fileName' System.Text.Encoding.UTF8));  		br.BaseStream.Seek (startBytes' SeekOrigin.Begin);  		int maxCount = (int)Math.Floor ((fileLength - startBytes) / pack) + 1;  		for (int i = 0; i < maxCount; i++) {  			if (_Response.IsClientConnected) {  				_Response.BinaryWrite (br.ReadBytes (int.Parse (pack.ToString ())));  				System.Threading.Thread.Sleep (sleep);  			} else {  				i = maxCount;  			}  		}  	} catch {  		return false;  	} finally {  		br.Close ();  		myFile.Close ();  	}  } catch {  	return false;  }  
Magic Number,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,DownloadFile,The following statement contains a magic number: try {  	FileStream myFile = new FileStream (_fullPath' FileMode.Open' FileAccess.Read' FileShare.ReadWrite);  	BinaryReader br = new BinaryReader (myFile);  	try {  		_Response.AddHeader ("Accept-Ranges"' "bytes");  		_Response.Buffer = false;  		long fileLength = myFile.Length;  		long startBytes = 0;  		double pack = 10240;  		//10K bytes  		//int sleep = 200;   //每秒5次   即5*10K bytes每秒  		int sleep = (int)Math.Floor (1000 * pack / _speed) + 1;  		if (_Request.Headers ["Range"] != null) {  			_Response.StatusCode = 206;  			string[] range = _Request.Headers ["Range"].Split (new char[] {  				'=''  				'-'  			});  			startBytes = Convert.ToInt64 (range [1]);  		}  		_Response.AddHeader ("Content-Length"' (fileLength - startBytes).ToString ());  		_Response.AddHeader ("Connection"' "Keep-Alive");  		_Response.ContentType = "application/octet-stream";  		_Response.AddHeader ("Content-Disposition"' "attachment;filename=" + System.Web.HttpUtility.UrlEncode (_fileName' System.Text.Encoding.UTF8));  		br.BaseStream.Seek (startBytes' SeekOrigin.Begin);  		int maxCount = (int)Math.Floor ((fileLength - startBytes) / pack) + 1;  		for (int i = 0; i < maxCount; i++) {  			if (_Response.IsClientConnected) {  				_Response.BinaryWrite (br.ReadBytes (int.Parse (pack.ToString ())));  				System.Threading.Thread.Sleep (sleep);  			} else {  				i = maxCount;  			}  		}  	} catch {  		return false;  	} finally {  		br.Close ();  		myFile.Close ();  	}  } catch {  	return false;  }  
Magic Number,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,DownloadFile,The following statement contains a magic number: try {  	FileStream myFile = new FileStream (_fullPath' FileMode.Open' FileAccess.Read' FileShare.ReadWrite);  	BinaryReader br = new BinaryReader (myFile);  	try {  		_Response.AddHeader ("Accept-Ranges"' "bytes");  		_Response.Buffer = false;  		long fileLength = myFile.Length;  		long startBytes = 0;  		double pack = 10240;  		//10K bytes  		//int sleep = 200;   //每秒5次   即5*10K bytes每秒  		int sleep = (int)Math.Floor (1000 * pack / _speed) + 1;  		if (_Request.Headers ["Range"] != null) {  			_Response.StatusCode = 206;  			string[] range = _Request.Headers ["Range"].Split (new char[] {  				'=''  				'-'  			});  			startBytes = Convert.ToInt64 (range [1]);  		}  		_Response.AddHeader ("Content-Length"' (fileLength - startBytes).ToString ());  		_Response.AddHeader ("Connection"' "Keep-Alive");  		_Response.ContentType = "application/octet-stream";  		_Response.AddHeader ("Content-Disposition"' "attachment;filename=" + System.Web.HttpUtility.UrlEncode (_fileName' System.Text.Encoding.UTF8));  		br.BaseStream.Seek (startBytes' SeekOrigin.Begin);  		int maxCount = (int)Math.Floor ((fileLength - startBytes) / pack) + 1;  		for (int i = 0; i < maxCount; i++) {  			if (_Response.IsClientConnected) {  				_Response.BinaryWrite (br.ReadBytes (int.Parse (pack.ToString ())));  				System.Threading.Thread.Sleep (sleep);  			} else {  				i = maxCount;  			}  		}  	} catch {  		return false;  	} finally {  		br.Close ();  		myFile.Close ();  	}  } catch {  	return false;  }  
Magic Number,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,DownloadFile,The following statement contains a magic number: try {  	_Response.AddHeader ("Accept-Ranges"' "bytes");  	_Response.Buffer = false;  	long fileLength = myFile.Length;  	long startBytes = 0;  	double pack = 10240;  	//10K bytes  	//int sleep = 200;   //每秒5次   即5*10K bytes每秒  	int sleep = (int)Math.Floor (1000 * pack / _speed) + 1;  	if (_Request.Headers ["Range"] != null) {  		_Response.StatusCode = 206;  		string[] range = _Request.Headers ["Range"].Split (new char[] {  			'=''  			'-'  		});  		startBytes = Convert.ToInt64 (range [1]);  	}  	_Response.AddHeader ("Content-Length"' (fileLength - startBytes).ToString ());  	_Response.AddHeader ("Connection"' "Keep-Alive");  	_Response.ContentType = "application/octet-stream";  	_Response.AddHeader ("Content-Disposition"' "attachment;filename=" + System.Web.HttpUtility.UrlEncode (_fileName' System.Text.Encoding.UTF8));  	br.BaseStream.Seek (startBytes' SeekOrigin.Begin);  	int maxCount = (int)Math.Floor ((fileLength - startBytes) / pack) + 1;  	for (int i = 0; i < maxCount; i++) {  		if (_Response.IsClientConnected) {  			_Response.BinaryWrite (br.ReadBytes (int.Parse (pack.ToString ())));  			System.Threading.Thread.Sleep (sleep);  		} else {  			i = maxCount;  		}  	}  } catch {  	return false;  } finally {  	br.Close ();  	myFile.Close ();  }  
Magic Number,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,DownloadFile,The following statement contains a magic number: try {  	_Response.AddHeader ("Accept-Ranges"' "bytes");  	_Response.Buffer = false;  	long fileLength = myFile.Length;  	long startBytes = 0;  	double pack = 10240;  	//10K bytes  	//int sleep = 200;   //每秒5次   即5*10K bytes每秒  	int sleep = (int)Math.Floor (1000 * pack / _speed) + 1;  	if (_Request.Headers ["Range"] != null) {  		_Response.StatusCode = 206;  		string[] range = _Request.Headers ["Range"].Split (new char[] {  			'=''  			'-'  		});  		startBytes = Convert.ToInt64 (range [1]);  	}  	_Response.AddHeader ("Content-Length"' (fileLength - startBytes).ToString ());  	_Response.AddHeader ("Connection"' "Keep-Alive");  	_Response.ContentType = "application/octet-stream";  	_Response.AddHeader ("Content-Disposition"' "attachment;filename=" + System.Web.HttpUtility.UrlEncode (_fileName' System.Text.Encoding.UTF8));  	br.BaseStream.Seek (startBytes' SeekOrigin.Begin);  	int maxCount = (int)Math.Floor ((fileLength - startBytes) / pack) + 1;  	for (int i = 0; i < maxCount; i++) {  		if (_Response.IsClientConnected) {  			_Response.BinaryWrite (br.ReadBytes (int.Parse (pack.ToString ())));  			System.Threading.Thread.Sleep (sleep);  		} else {  			i = maxCount;  		}  	}  } catch {  	return false;  } finally {  	br.Close ();  	myFile.Close ();  }  
Magic Number,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,DownloadFile,The following statement contains a magic number: try {  	_Response.AddHeader ("Accept-Ranges"' "bytes");  	_Response.Buffer = false;  	long fileLength = myFile.Length;  	long startBytes = 0;  	double pack = 10240;  	//10K bytes  	//int sleep = 200;   //每秒5次   即5*10K bytes每秒  	int sleep = (int)Math.Floor (1000 * pack / _speed) + 1;  	if (_Request.Headers ["Range"] != null) {  		_Response.StatusCode = 206;  		string[] range = _Request.Headers ["Range"].Split (new char[] {  			'=''  			'-'  		});  		startBytes = Convert.ToInt64 (range [1]);  	}  	_Response.AddHeader ("Content-Length"' (fileLength - startBytes).ToString ());  	_Response.AddHeader ("Connection"' "Keep-Alive");  	_Response.ContentType = "application/octet-stream";  	_Response.AddHeader ("Content-Disposition"' "attachment;filename=" + System.Web.HttpUtility.UrlEncode (_fileName' System.Text.Encoding.UTF8));  	br.BaseStream.Seek (startBytes' SeekOrigin.Begin);  	int maxCount = (int)Math.Floor ((fileLength - startBytes) / pack) + 1;  	for (int i = 0; i < maxCount; i++) {  		if (_Response.IsClientConnected) {  			_Response.BinaryWrite (br.ReadBytes (int.Parse (pack.ToString ())));  			System.Threading.Thread.Sleep (sleep);  		} else {  			i = maxCount;  		}  	}  } catch {  	return false;  } finally {  	br.Close ();  	myFile.Close ();  }  
Magic Number,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,DownloadFile,The following statement contains a magic number: if (_Request.Headers ["Range"] != null) {  	_Response.StatusCode = 206;  	string[] range = _Request.Headers ["Range"].Split (new char[] {  		'=''  		'-'  	});  	startBytes = Convert.ToInt64 (range [1]);  }  
Magic Number,Common,DirFile,F:\newReposMay17\Langbencom_rights\Rights\Common\DirFile.cs,DownloadFile,The following statement contains a magic number: _Response.StatusCode = 206;  
Magic Number,Common,EncryptAndDecrypte,F:\newReposMay17\Langbencom_rights\Rights\Common\EncryptAndDecrypte.cs,TryGetKeyAndIV,The following statement contains a magic number: for (int i = 200; i > 0; i--) {  	try {  		Key = GetBytes (i);  		IV = GetBytes (i);  		tdes.CreateDecryptor (Key' IV);  		return;  	} catch {  	}  }  
Magic Number,Common,NetSendMail,F:\newReposMay17\Langbencom_rights\Rights\Common\NetSendMail.cs,MailSend,The following statement contains a magic number: smtpClient.Timeout = 1000;  
Magic Number,Common,Result,F:\newReposMay17\Langbencom_rights\Rights\Common\Result.cs,GetNewId,The following statement contains a magic number: id += guid.Substring (0' 10);  
