Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Common,NetSendMail,C:\repos\Langbencom_rights\Rights\Common\NetSendMail.cs,MailSend,Cyclomatic complexity of the method is 9
Complex Method,Common,ValueConvert,C:\repos\Langbencom_rights\Rights\Common\ValueConvert.cs,GetBool,Cyclomatic complexity of the method is 11
Long Parameter List,Common,NetSendMail,C:\repos\Langbencom_rights\Rights\Common\NetSendMail.cs,MailSend,The method has 12 parameters. Parameters: mailFrom' maiFromlAccount' mailFromPwd' mailSmtpServer' mailTo' mailCC' mailBCC' mailTitle' mailContent' mailAttachments' encoding' isBodyHtml
Long Parameter List,Common,NetSendMail,C:\repos\Langbencom_rights\Rights\Common\NetSendMail.cs,MailSendText,The method has 9 parameters. Parameters: mailFrom' maiFromlAccount' mailFromPwd' mailSmtpServer' mailTo' mailCC' mailBCC' mailTitle' mailContent
Long Statement,Common,DirFile,C:\repos\Langbencom_rights\Rights\Common\DirFile.cs,ReadFile,The length of the statement  "                System.IO.StreamReader sr = new System.IO.StreamReader(System.Web.HttpContext.Current.Server.MapPath(file)' System.Text.Encoding.UTF8); " is 135.
Long Statement,Common,DirFile,C:\repos\Langbencom_rights\Rights\Common\DirFile.cs,SaveFile,The length of the statement  "                    sw = new System.IO.StreamWriter(System.Web.HttpContext.Current.Server.MapPath(tempDir)' false' new System.Text.UTF8Encoding(false)); " is 132.
Long Statement,Common,DirFile,C:\repos\Langbencom_rights\Rights\Common\DirFile.cs,SaveFile,The length of the statement  "                    sw = new System.IO.StreamWriter(System.Web.HttpContext.Current.Server.MapPath(tempDir)' false' System.Text.Encoding.UTF8); " is 122.
Long Statement,Common,DirFile,C:\repos\Langbencom_rights\Rights\Common\DirFile.cs,CopyFile,The length of the statement  "                    System.IO.File.Copy(System.Web.HttpContext.Current.Server.MapPath(file1)' System.Web.HttpContext.Current.Server.MapPath(file2)' true); " is 134.
Long Statement,Common,DirFile,C:\repos\Langbencom_rights\Rights\Common\DirFile.cs,CopyFile,The length of the statement  "                        System.IO.File.Copy(System.Web.HttpContext.Current.Server.MapPath(file1)' System.Web.HttpContext.Current.Server.MapPath(file2)); " is 128.
Long Statement,Common,DirFile,C:\repos\Langbencom_rights\Rights\Common\DirFile.cs,DownloadFile,The length of the statement  "                    _Response.AddHeader("Content-Disposition"' "attachment;filename=" + System.Web.HttpUtility.UrlEncode(_fileName' System.Text.Encoding.UTF8)); " is 140.
Long Statement,Common,IP,C:\repos\Langbencom_rights\Rights\Common\IP.cs,GetIP,The length of the statement  "                        ip = System.Web.HttpContext.Current.Request.ServerVariables["HTTP_X_FORWARDED_FOR"].ToString(); // Return real client IP. " is 121.
Long Statement,Common,IP,C:\repos\Langbencom_rights\Rights\Common\IP.cs,GetIP,The length of the statement  "                        ip = System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"].ToString(); //While it can't get the Client IP' it will return proxy IP. " is 147.
Long Statement,Common,NetSendMail,C:\repos\Langbencom_rights\Rights\Common\NetSendMail.cs,MailSendText,The length of the statement  "            MailSend(mailFrom' maiFromlAccount' mailFromPwd' mailSmtpServer' mailTo' mailCC' mailBCC' mailTitle' mailContent' attList' Encoding.UTF8' false); " is 145.
Long Statement,Common,NetSendMail,C:\repos\Langbencom_rights\Rights\Common\NetSendMail.cs,MailSendHTML,The length of the statement  "            List<string> mailToList = new List<string>() { mailTo }; IList<string> mailCC = new List<string>(); IList<string> mailBCC = new List<string>(); " is 143.
Long Statement,Common,NetSendMail,C:\repos\Langbencom_rights\Rights\Common\NetSendMail.cs,MailSendHTML,The length of the statement  "            MailSend(mailFrom' maiFromlAccount' mailFromPwd' mailSmtpServer' mailToList' mailCC' mailBCC' mailTitle' mailContent' attList' Encoding.UTF8' true); " is 148.
Empty Catch Block,Common,EncryptAndDecrypte,C:\repos\Langbencom_rights\Rights\Common\EncryptAndDecrypte.cs,TryGetKeyAndIV,The method has an empty catch block.
Empty Catch Block,Common,ValueConvert,C:\repos\Langbencom_rights\Rights\Common\ValueConvert.cs,GetBool,The method has an empty catch block.
Magic Number,Common,DirFile,C:\repos\Langbencom_rights\Rights\Common\DirFile.cs,DownloadFile,The following statement contains a magic number: try              {                  FileStream myFile = new FileStream(_fullPath' FileMode.Open' FileAccess.Read' FileShare.ReadWrite);                  BinaryReader br = new BinaryReader(myFile);                  try                  {                      _Response.AddHeader("Accept-Ranges"' "bytes");                      _Response.Buffer = false;                      long fileLength = myFile.Length;                      long startBytes = 0;                        double pack = 10240; //10K bytes                      //int sleep = 200;   //每秒5次   即5*10K bytes每秒                      int sleep = (int)Math.Floor(1000 * pack / _speed) + 1;                      if (_Request.Headers["Range"] != null)                      {                          _Response.StatusCode = 206;                          string[] range = _Request.Headers["Range"].Split(new char[] { '='' '-' });                          startBytes = Convert.ToInt64(range[1]);                      }                      _Response.AddHeader("Content-Length"' (fileLength - startBytes).ToString());                      _Response.AddHeader("Connection"' "Keep-Alive");                      _Response.ContentType = "application/octet-stream";                      _Response.AddHeader("Content-Disposition"' "attachment;filename=" + System.Web.HttpUtility.UrlEncode(_fileName' System.Text.Encoding.UTF8));                        br.BaseStream.Seek(startBytes' SeekOrigin.Begin);                      int maxCount = (int)Math.Floor((fileLength - startBytes) / pack) + 1;                        for (int i = 0; i < maxCount; i++)                      {                          if (_Response.IsClientConnected)                          {                              _Response.BinaryWrite(br.ReadBytes(int.Parse(pack.ToString())));                              System.Threading.Thread.Sleep(sleep);                          }                          else                          {                              i = maxCount;                          }                      }                  }                  catch                  {                      return false;                  }                  finally                  {                      br.Close();                      myFile.Close();                  }              }              catch              {                  return false;              }
Magic Number,Common,DirFile,C:\repos\Langbencom_rights\Rights\Common\DirFile.cs,DownloadFile,The following statement contains a magic number: try              {                  FileStream myFile = new FileStream(_fullPath' FileMode.Open' FileAccess.Read' FileShare.ReadWrite);                  BinaryReader br = new BinaryReader(myFile);                  try                  {                      _Response.AddHeader("Accept-Ranges"' "bytes");                      _Response.Buffer = false;                      long fileLength = myFile.Length;                      long startBytes = 0;                        double pack = 10240; //10K bytes                      //int sleep = 200;   //每秒5次   即5*10K bytes每秒                      int sleep = (int)Math.Floor(1000 * pack / _speed) + 1;                      if (_Request.Headers["Range"] != null)                      {                          _Response.StatusCode = 206;                          string[] range = _Request.Headers["Range"].Split(new char[] { '='' '-' });                          startBytes = Convert.ToInt64(range[1]);                      }                      _Response.AddHeader("Content-Length"' (fileLength - startBytes).ToString());                      _Response.AddHeader("Connection"' "Keep-Alive");                      _Response.ContentType = "application/octet-stream";                      _Response.AddHeader("Content-Disposition"' "attachment;filename=" + System.Web.HttpUtility.UrlEncode(_fileName' System.Text.Encoding.UTF8));                        br.BaseStream.Seek(startBytes' SeekOrigin.Begin);                      int maxCount = (int)Math.Floor((fileLength - startBytes) / pack) + 1;                        for (int i = 0; i < maxCount; i++)                      {                          if (_Response.IsClientConnected)                          {                              _Response.BinaryWrite(br.ReadBytes(int.Parse(pack.ToString())));                              System.Threading.Thread.Sleep(sleep);                          }                          else                          {                              i = maxCount;                          }                      }                  }                  catch                  {                      return false;                  }                  finally                  {                      br.Close();                      myFile.Close();                  }              }              catch              {                  return false;              }
Magic Number,Common,DirFile,C:\repos\Langbencom_rights\Rights\Common\DirFile.cs,DownloadFile,The following statement contains a magic number: try              {                  FileStream myFile = new FileStream(_fullPath' FileMode.Open' FileAccess.Read' FileShare.ReadWrite);                  BinaryReader br = new BinaryReader(myFile);                  try                  {                      _Response.AddHeader("Accept-Ranges"' "bytes");                      _Response.Buffer = false;                      long fileLength = myFile.Length;                      long startBytes = 0;                        double pack = 10240; //10K bytes                      //int sleep = 200;   //每秒5次   即5*10K bytes每秒                      int sleep = (int)Math.Floor(1000 * pack / _speed) + 1;                      if (_Request.Headers["Range"] != null)                      {                          _Response.StatusCode = 206;                          string[] range = _Request.Headers["Range"].Split(new char[] { '='' '-' });                          startBytes = Convert.ToInt64(range[1]);                      }                      _Response.AddHeader("Content-Length"' (fileLength - startBytes).ToString());                      _Response.AddHeader("Connection"' "Keep-Alive");                      _Response.ContentType = "application/octet-stream";                      _Response.AddHeader("Content-Disposition"' "attachment;filename=" + System.Web.HttpUtility.UrlEncode(_fileName' System.Text.Encoding.UTF8));                        br.BaseStream.Seek(startBytes' SeekOrigin.Begin);                      int maxCount = (int)Math.Floor((fileLength - startBytes) / pack) + 1;                        for (int i = 0; i < maxCount; i++)                      {                          if (_Response.IsClientConnected)                          {                              _Response.BinaryWrite(br.ReadBytes(int.Parse(pack.ToString())));                              System.Threading.Thread.Sleep(sleep);                          }                          else                          {                              i = maxCount;                          }                      }                  }                  catch                  {                      return false;                  }                  finally                  {                      br.Close();                      myFile.Close();                  }              }              catch              {                  return false;              }
Magic Number,Common,EncryptAndDecrypte,C:\repos\Langbencom_rights\Rights\Common\EncryptAndDecrypte.cs,TryGetKeyAndIV,The following statement contains a magic number: for (int i = 200; i > 0; i--)              {                  try                  {                      Key = GetBytes(i);                      IV = GetBytes(i);                      tdes.CreateDecryptor(Key' IV);                      return;                  }                  catch                  {                  }              }
Magic Number,Common,NetSendMail,C:\repos\Langbencom_rights\Rights\Common\NetSendMail.cs,MailSend,The following statement contains a magic number: smtpClient.Timeout = 1000;
Magic Number,Common,Result,C:\repos\Langbencom_rights\Rights\Common\Result.cs,GetNewId,The following statement contains a magic number: id += guid.Substring(0' 10);
