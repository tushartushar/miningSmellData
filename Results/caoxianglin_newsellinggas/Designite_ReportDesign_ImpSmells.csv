Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,ComposeCell,Cyclomatic complexity of the method is 8
Complex Method,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,Load,Cyclomatic complexity of the method is 10
Complex Method,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,Save,Cyclomatic complexity of the method is 14
Complex Method,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,GetPosition,Cyclomatic complexity of the method is 9
Complex Method,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,LayoutCells,Cyclomatic complexity of the method is 11
Long Statement,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,Save,The length of the statement  "		cells += "{row:" + cell.Row + "'type:'" + type + "''rowspan:" + cell.RowSpan + "'columnspan:" + cell.ColumnSpan + "' column:" + cell.Column + "' content:'" + cell.Content + "'' location:'" + cell.location + "'" + "'height:" + cell.Height + "}"; " is 244.
Long Statement,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,SelectCell,The length of the statement  "		if (endCell != null && cell.Column >= Math.Min (this.editCell.Column' endCell.Column) && cell.Column <= Math.Max (this.editCell.Column' endCell.Column) && cell.Row >= Math.Min (this.editCell.Row' endCell.Row) && cell.Row <= Math.Max (this.editCell.Row' endCell.Row)) { " is 268.
Long Statement,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,GetCell,The length of the statement  "		if (row >= cell.Row && row < cell.Row + cell.RowSpan && column >= cell.Column && column < cell.Column + cell.ColumnSpan) { " is 122.
Complex Conditional,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,SelectCell,The conditional expression  "endCell != null && cell.Column >= Math.Min (this.editCell.Column' endCell.Column) && cell.Column <= Math.Max (this.editCell.Column' endCell.Column) && cell.Row >= Math.Min (this.editCell.Row' endCell.Row) && cell.Row <= Math.Max (this.editCell.Row' endCell.Row)"  is complex.
Complex Conditional,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,GetCell,The conditional expression  "row >= cell.Row && row < cell.Row + cell.RowSpan && column >= cell.Column && column < cell.Column + cell.ColumnSpan"  is complex.
Magic Number,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,Table,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	Row row = new Row () {  		Number = i'  		Height = 100  	};  	rows.Add (row);  }  
Magic Number,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,Table,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	Row row = new Row () {  		Number = i'  		Height = 100  	};  	rows.Add (row);  }  
Magic Number,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,Table,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	Column column = new Column () {  		Number = i'  		Width = 100  	};  	columns.Add (column);  }  
Magic Number,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,Table,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	Column column = new Column () {  		Number = i'  		Width = 100  	};  	columns.Add (column);  }  
Magic Number,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,Table,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	for (int j = 0; j < 5; j++) {  		Cell cell = new Cell () {  			Row = i'  			Column = j  		};  		cells.Add (cell);  	}  }  
Magic Number,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,Table,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	for (int j = 0; j < 5; j++) {  		Cell cell = new Cell () {  			Row = i'  			Column = j  		};  		cells.Add (cell);  	}  }  
Magic Number,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,Table,The following statement contains a magic number: for (int j = 0; j < 5; j++) {  	Cell cell = new Cell () {  		Row = i'  		Column = j  	};  	cells.Add (cell);  }  
Magic Number,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,GetPosition,The following statement contains a magic number: if (inRow != null && Math.Abs (inRow.StartY - point.Y) < 5) {  	return preRow;  }  
Magic Number,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,GetPosition,The following statement contains a magic number: if (inRow != null && Math.Abs (inRow.StartY + inRow.Height - point.Y) < 5) {  	return inRow;  }  
Magic Number,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,GetPosition,The following statement contains a magic number: if (inColumn != null && Math.Abs (inColumn.StartX - point.X) < 5) {  	return preColumn;  }  
Magic Number,Com.Aote.Report,Table,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,GetPosition,The following statement contains a magic number: if (inColumn != null && Math.Abs (inColumn.StartX + inColumn.Width - point.X) < 5) {  	return inColumn;  }  
Magic Number,Com.Aote.Report,Column,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,MoveTo,The following statement contains a magic number: if (width > 10) {  	this.Width = width;  }  
Magic Number,Com.Aote.Report,Row,C:\repos\caoxianglin_newsellinggas\ReportDesign\ReportDesign\Table.cs,MoveTo,The following statement contains a magic number: if (height > 10) {  	this.Height = height;  }  
