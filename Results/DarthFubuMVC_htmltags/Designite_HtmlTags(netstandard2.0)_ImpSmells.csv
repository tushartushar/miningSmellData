Implementation smell,Namespace,Class,File,Method,Description
Complex Method,HtmlTags,HtmlHelperExtensions,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\HtmlHelperExtensions.cs,FromLambdaExpression,Cyclomatic complexity of the method is 10
Complex Method,HtmlTags.Reflection,ReflectionHelper,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Reflection\ReflectionHelper.cs,BuildValueGetters,Cyclomatic complexity of the method is 9
Long Parameter List,HtmlTags,HtmlTag,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\HtmlTag.cs,RenderAttribute,The method has 5 parameters. Parameters: html' encoder' key' value' attributeIsEncoded
Long Parameter List,HtmlTags.Conventions.Formatting,DisplayFormatterExtensions,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Conventions\Formatting\DisplayFormatterExtensions.cs,FormatValue,The method has 5 parameters. Parameters: formatter' modelType' accessor' value' format
Long Parameter List,HtmlTags.Conventions.Formatting,GetStringRequest,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Conventions\Formatting\GetStringRequest.cs,GetStringRequest,The method has 5 parameters. Parameters: accessor' rawValue' locator' format' ownerType
Long Parameter List,HtmlTags.Conventions.Formatting,GetStringRequest,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Conventions\Formatting\GetStringRequest.cs,GetStringRequest,The method has 5 parameters. Parameters: ownerType' property' rawValue' format' propertyType
Long Statement,HtmlTags,HtmlHelperExtensions,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\HtmlHelperExtensions.cs,GetGenerator,The length of the statement  "            object ServiceLocator(Type t) => additionalServices.FirstOrDefault(t.IsInstanceOfType) ?? helper.ViewContext.HttpContext.RequestServices.GetService(t); " is 151.
Long Statement,HtmlTags,HtmlHelperExtensions,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\HtmlHelperExtensions.cs,FromLambdaExpression,The length of the statement  "                throw new InvalidOperationException("Templates can be used only with field access' property access' single-dimension array index' or single-parameter custom indexer expressions."); " is 180.
Long Statement,HtmlTags,HtmlTag,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\HtmlTag.cs,TextIfEmpty,The length of the statement  "            if (TagName().EqualsIgnoreCase("input")) throw new InvalidOperationException("You are attempting to set the inner text on an INPUT tag. If you wanted a textarea' call MultilineMode() first."); " is 192.
Long Statement,HtmlTags,HtmlTagTagHelper,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\HtmlTagTagHelper.cs,Process,The length of the statement  "            object ServiceLocator(Type t) => additionalServices.FirstOrDefault(t.IsInstanceOfType) ?? ViewContext.HttpContext.RequestServices.GetService(t); " is 144.
Long Statement,HtmlTags,TypeExtensions,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\TypeExtensions.cs,IsAnEnumerationOf,The length of the statement  "            throw new Exception(string.Format("I don't know how to figure out what this is a collection of. Can you tell me? {0}"' new[] {type})); " is 134.
Long Statement,HtmlTags.Conventions.Elements,AccessorOverrideElementBuilderPolicy,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Conventions\Elements\AccessorOverrideElementBuilderPolicy.cs,Matches,The length of the statement  "            return _rules.AllRulesFor<IElementTagOverride>(subject.Accessor).Any(x => x.Category == _category && x.Profile == _profile); " is 124.
Long Statement,HtmlTags.Conventions.Elements.Builders,DefaultValidationMessageBuilder,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Conventions\Elements\Builders\ValidationMessageBuilder.cs,Build,The length of the statement  "            var viewContext = request.Get<ViewContext>() ?? throw new InvalidOperationException("Validation messages require a ViewContext"); " is 129.
Long Statement,HtmlTags.Conventions.Elements.Builders,DefaultValidationMessageBuilder,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Conventions\Elements\Builders\ValidationMessageBuilder.cs,Build,The length of the statement  "                var modelExplorer = request.Get<ModelExplorer>() ?? throw new InvalidOperationException("Validation messages require a ModelExplorer"); " is 135.
Long Statement,HtmlTags.Reflection,MethodValueGetter,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Reflection\MethodValueGetter.cs,GetHashCode,The length of the statement  "                    return ((_methodInfo != null ? _methodInfo.GetHashCode() : 0) * 397) ^ (_arguments[0] != null ? _arguments[0].GetHashCode() : 0); " is 129.
Long Statement,HtmlTags.Reflection.Expressions,ConstructorBuilder,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Reflection\Expressions\ExpressionClasses.cs,CreateSingleStringArgumentConstructor,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(concreteType)' concreteType' "Only types with a ctor(string) can be used here"); " is 125.
Complex Conditional,HtmlTags,HtmlTag,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\HtmlTag.cs,BuildAttr,The conditional expression  "value.Equals(string.Empty) &&                  (IsCssClassAttr(attribute) || IsCssStyleAttr(attribute) || IsMetadataAttr(attribute))"  is complex.
Magic Number,HtmlTags,TagList,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\TagList.cs,ToHtmlString,The following statement contains a magic number: _tags.Count() > 5
Magic Number,HtmlTags.Conventions,TagSubject,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Conventions\TagSubject.cs,GetHashCode,The following statement contains a magic number: return ((Profile?.GetHashCode() ?? 0)*397) ^                         (Subject?.GetHashCode() ?? 0);
Magic Number,HtmlTags.Conventions.Elements,AccessorDef,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Conventions\Elements\AccessorDef.cs,GetHashCode,The following statement contains a magic number: return ((Accessor?.GetHashCode() ?? 0) * 397) ^                         (ModelType?.GetHashCode() ?? 0);
Magic Number,HtmlTags.Conventions.Formatting,GetStringRequest,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Conventions\Formatting\GetStringRequest.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (Property?.GetHashCode() ?? 0);
Magic Number,HtmlTags.Conventions.Formatting,GetStringRequest,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Conventions\Formatting\GetStringRequest.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (RawValue?.GetHashCode() ?? 0);
Magic Number,HtmlTags.Conventions.Formatting,GetStringRequest,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Conventions\Formatting\GetStringRequest.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (Format?.GetHashCode() ?? 0);
Magic Number,HtmlTags.Reflection,IndexerValueGetter,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Reflection\IndexerValueGetter.cs,GetHashCode,The following statement contains a magic number: return ((DeclaringType?.GetHashCode() ?? 0) * 397) ^ Index;
Magic Number,HtmlTags.Reflection,MethodValueGetter,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Reflection\MethodValueGetter.cs,GetHashCode,The following statement contains a magic number: return ((_methodInfo != null ? _methodInfo.GetHashCode() : 0) * 397) ^ (_arguments[0] != null ? _arguments[0].GetHashCode() : 0);
Missing Default,HtmlTags,HtmlHelperExtensions,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\HtmlHelperExtensions.cs,FromLambdaExpression,The following switch statement is missing a default case: switch (expression.Body.NodeType)              {                  case ExpressionType.ArrayIndex:                      // ArrayIndex always means a single-dimensional indexer;                      // multi-dimensional indexer is a method call to Get().                      legalExpression = true;                      break;                    case ExpressionType.Call:                      // Only legal method call is a single argument indexer/DefaultMember call                      legalExpression = IsSingleArgumentIndexer(expression.Body);                      break;                    case ExpressionType.MemberAccess:                      // Property/field access is always legal                      var memberExpression = (MemberExpression)expression.Body;                      propertyName = memberExpression.Member is PropertyInfo ? memberExpression.Member.Name : null;                      if (string.Equals(propertyName' "Model"' StringComparison.Ordinal) &&                          memberExpression.Type == typeof(TModel) &&                          memberExpression.Expression.NodeType == ExpressionType.Constant)                      {                          // Special case the Model property in RazorPage<TModel>. (m => Model) should behave identically                          // to (m => m). But do the more complicated thing for (m => m.Model) since that is a slightly                          // different beast.)                          return FromModel(viewData' metadataProvider);                      }                        // memberExpression.Expression can be null when this is a static field or property.                      //                      // This can be the case if the expression is like (m => Person.Name) where Name is a static field                      // or property on the Person type.                      containerType = memberExpression.Expression?.Type;                        legalExpression = true;                      break;                    case ExpressionType.Parameter:                      // Parameter expression means "model => model"' so we delegate to FromModel                      return FromModel(viewData' metadataProvider);              }
Missing Default,HtmlTags.Reflection,ReflectionHelper,D:\research\architectureSmells\repos\DarthFubuMVC_htmltags\src\HtmlTags\Reflection\ReflectionHelper.cs,TryEvaluateExpression,The following switch statement is missing a default case: switch (operation.NodeType)              {                  case ExpressionType.Constant:                      value = ((ConstantExpression)operation).Value;                      return true;                  case ExpressionType.MemberAccess:                      MemberExpression me = (MemberExpression)operation;                      object target;                      if (TryEvaluateExpression(me.Expression' out target))                      { // instance target                          if (me.Member is FieldInfo)                          {                              value = ((FieldInfo)me.Member).GetValue(target);                              return true;                          }                          if (me.Member is PropertyInfo)                          {                              value = ((PropertyInfo)me.Member).GetValue(target' null);                              return true;                          }                      }                      break;              }
