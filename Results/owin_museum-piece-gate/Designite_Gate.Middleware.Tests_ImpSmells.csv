Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,,The length of the parameter _rethrowWithNoStackLossDelegate is 31.
Long Statement,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,CatchImpl,The length of the statement  "                            throw new InvalidOperationException("You must set the Task property of the CatchInfo returned from the TaskHelpersExtensions.Catch continuation.");" is 147.
Long Statement,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,CatchImplContinuation,The length of the statement  "            task.ContinueWith(innerTask => tcs.TrySetFromTask(innerTask)' TaskContinuationOptions.NotOnFaulted | TaskContinuationOptions.ExecuteSynchronously);" is 147.
Long Statement,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,CatchImplContinuation,The length of the statement  "                                throw new InvalidOperationException("You cannot return null from the TaskHelpersExtensions.Catch continuation. You must return a valid task or throw an exception.");" is 165.
Long Statement,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,CatchImplContinuation,The length of the statement  "                            throw new InvalidOperationException("You cannot return null from the TaskHelpersExtensions.Catch continuation. You must return a valid task or throw an exception.");" is 165.
Long Statement,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,GetRethrowWithNoStackLossDelegate,The length of the statement  "                // No-ops if the task completed successfully' else throws the originating exception complete with the correct call stack." is 121.
Long Statement,Gate.Middleware.Tests.StaticFiles,FileServerTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\FileServerTests.cs,FileServer_sets_LastModified_header,The length of the statement  "            Assert.That(GetFile("/kayak.png").Headers.GetHeader("Last-Modified")' Is.EqualTo(fileInfo.LastWriteTimeUtc.ToHttpDateString())); " is 128.
Empty Catch Block,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,GetRethrowWithNoStackLossDelegate,The method has an empty catch block.
Magic Number,Gate.Middleware.Tests,PassiveValidatorTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\PassiveValidatorTests.cs,NormalPassThrough_Success,The following statement contains a magic number: AppFunc middleware = new PassiveValidator(                 env =>                 {                     env[OwinConstants.ResponseStatusCode] = 200;                     return TaskHelpers.Completed();                 }).Invoke;
Magic Number,Gate.Middleware.Tests,PassiveValidatorTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\PassiveValidatorTests.cs,NormalPassThrough_Success,The following statement contains a magic number: Assert.That(response.StatusCode' Is.EqualTo(200)' ReadBody(response.OutputStream));
Magic Number,Gate.Middleware.Tests,StaticTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticTests.cs,Static_serves_files_from_default_location,The following statement contains a magic number: Assert.That(result' Is.EqualTo(200));
Magic Number,Gate.Middleware.Tests,StaticTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticTests.cs,Static_serves_files_from_provided_location,The following statement contains a magic number: Assert.That(result' Is.EqualTo(200));
Magic Number,Gate.Middleware.Tests,StaticTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticTests.cs,Static_serves_files_from_provided_whitelist,The following statement contains a magic number: Assert.That(result' Is.EqualTo(200));
Magic Number,Gate.Middleware.Tests,StaticTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticTests.cs,Static_returns_404_for_request_to_file_not_in_provided_whitelist,The following statement contains a magic number: Assert.That(result' Is.EqualTo(404));
Magic Number,Gate.Middleware.Tests,StaticTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticTests.cs,Static_calls_down_the_chain_if_URL_root_is_unknown,The following statement contains a magic number: var result = Call(b => b.UseStatic().UseFunc<AppFunc>(                  _ => env =>                  {                      new Response(env) { StatusCode = 301 };                       return TaskHelpers.Completed();                  })' "/johnson/and/johnson");
Magic Number,Gate.Middleware.Tests,StaticTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticTests.cs,Static_calls_down_the_chain_if_URL_root_is_unknown,The following statement contains a magic number: Assert.That(result' Is.EqualTo(301));
Magic Number,Gate.Middleware.Tests,StaticTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticTests.cs,Static_returns_404_on_missing_file,The following statement contains a magic number: Assert.That(result' Is.EqualTo(404));
Magic Number,Gate.Middleware.Tests,ChunkedTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\ChunkedTests.cs,ChunkPrefixHasCorrectResults,The following statement contains a magic number: AssertChunkPrefix(Chunked.ChunkPrefix(15)' "f\r\n");
Magic Number,Gate.Middleware.Tests,CascadeTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\CascadeTests.cs,Cascade_with_no_apps_should_return_404,The following statement contains a magic number: Assert.That(response.StatusCode' Is.EqualTo(404));
Magic Number,Gate.Middleware.Tests,CascadeTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\CascadeTests.cs,Cascade_with_app_calls_through,The following statement contains a magic number: var cascade = Build(b => b.UseCascade(SetStatusApp(200)));
Magic Number,Gate.Middleware.Tests,CascadeTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\CascadeTests.cs,Cascade_with_app_calls_through,The following statement contains a magic number: Assert.That(response.StatusCode' Is.EqualTo(200));
Magic Number,Gate.Middleware.Tests,CascadeTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\CascadeTests.cs,Cascade_will_pass_along_to_first_non_404_app,The following statement contains a magic number: AppFunc app1 = SetStatusApp(404);
Magic Number,Gate.Middleware.Tests,CascadeTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\CascadeTests.cs,Cascade_will_pass_along_to_first_non_404_app,The following statement contains a magic number: AppFunc app2 = SetStatusApp(200);
Magic Number,Gate.Middleware.Tests,CascadeTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\CascadeTests.cs,Cascade_will_pass_along_to_first_non_404_app,The following statement contains a magic number: Assert.That(response.StatusCode' Is.EqualTo(200));
Magic Number,Gate.Middleware.Tests,ShowExceptionsTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\ShowExceptionsTests.cs,Normal_request_should_pass_through_unchanged,The following statement contains a magic number: var stack = Build(b => b                  .UseShowExceptions()                  .UseFunc<AppFunc>(_ => appEnv =>                  {                      Response appResult = new Response(appEnv) { StatusCode = 200 };                      appResult.Headers.SetHeader("Content-Type"' "text/plain");                      appResult.Headers.SetHeader("Content-Length"' "5");                      appResult.Write("Hello");                      return TaskHelpers.Completed();                  }));
Magic Number,Gate.Middleware.Tests,ShowExceptionsTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\ShowExceptionsTests.cs,Normal_request_should_pass_through_unchanged,The following statement contains a magic number: Assert.That(response.StatusCode' Is.EqualTo(200));
Magic Number,Gate.Middleware.Tests,ShowExceptionsTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\ShowExceptionsTests.cs,Request_fault_should_be_500_with_html_body,The following statement contains a magic number: Assert.That(response.StatusCode' Is.EqualTo(500));
Magic Number,Gate.Middleware.Tests,ShowExceptionsTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\ShowExceptionsTests.cs,Sync_Exception_in_response_body_stream_should_be_formatted_as_it_passes_through,The following statement contains a magic number: var stack = Build(b => b                  .UseShowExceptions()                  .UseFunc<AppFunc>(_ => appEnv =>                  {                      Response appResponse = new Response(appEnv);                      appResponse.StatusCode = 200;                      appResponse.Headers.SetHeader("Content-Type"' "text/html");                        byte[] bodyBytes = Encoding.ASCII.GetBytes("<p>so far so good</p>");                      appResponse.OutputStream.Write(bodyBytes' 0' bodyBytes.Length);                      throw new ApplicationException("failed sending body sync");                  }));
Magic Number,Gate.Middleware.Tests,ShowExceptionsTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\ShowExceptionsTests.cs,Sync_Exception_in_response_body_stream_should_be_formatted_as_it_passes_through,The following statement contains a magic number: Assert.That(response.StatusCode' Is.EqualTo(200));
Magic Number,Gate.Middleware.Tests,ShowExceptionsTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\ShowExceptionsTests.cs,Async_Exception_in_response_body_stream_should_be_formatted_as_it_passes_through,The following statement contains a magic number: var stack = Build(b => b                  .UseShowExceptions()                  .UseFunc<AppFunc>(_ => appEnv =>                  {                      Response appResponse = new Response(appEnv);                      appResponse.StatusCode = 200;                      appResponse.Headers.SetHeader("Content-Type"' "text/html");                                            byte[] bodyBytes = Encoding.ASCII.GetBytes("<p>so far so good</p>");                      appResponse.OutputStream.Write(bodyBytes' 0' bodyBytes.Length);                      return TaskHelpers.FromError(new ApplicationException("failed sending body async"));                  }));
Magic Number,Gate.Middleware.Tests,ShowExceptionsTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\ShowExceptionsTests.cs,Async_Exception_in_response_body_stream_should_be_formatted_as_it_passes_through,The following statement contains a magic number: Assert.That(response.StatusCode' Is.EqualTo(200));
Magic Number,Gate.Tests,UrlMapperTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\UrlMapperTests.cs,Call_on_empty_map_defaults_to_status_404,The following statement contains a magic number: Assert.That(env.Get<int>("owin.ResponseStatusCode")' Is.EqualTo(404));
Magic Number,Gate.Middleware.Tests.StaticFiles,FileServerTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\FileServerTests.cs,FileServer_serves_files,The following statement contains a magic number: Assert.That(GetFile("/kayak.png").StatusCode' Is.EqualTo(200));
Magic Number,Gate.Middleware.Tests.StaticFiles,FileServerTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\FileServerTests.cs,FileServer_returns_404_on_missing_file,The following statement contains a magic number: Assert.That(GetFile("/scripts/horses.js").StatusCode' Is.EqualTo(404));
Magic Number,Gate.Middleware.Tests.StaticFiles,FileServerTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\FileServerTests.cs,FileServer_does_not_decode_request_path,The following statement contains a magic number: Assert.That(GetFile("/%6B%61%79%61%6B%2E%70%6E%67").StatusCode' Is.EqualTo(404));
Magic Number,Gate.Middleware.Tests.StaticFiles,FileServerTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\FileServerTests.cs,FileServer_returns_403_on_directory_traversal_attempt,The following statement contains a magic number: Assert.That(GetFile("/../ccinfo.txt").StatusCode' Is.EqualTo(403));
Magic Number,Gate.Middleware.Tests.StaticFiles,FileServerTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\FileServerTests.cs,FileServer_returns_correct_byte_range_in_body,The following statement contains a magic number: Assert.That(response.StatusCode' Is.EqualTo(206));
Magic Number,Gate.Middleware.Tests.StaticFiles,FileServerTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\FileServerTests.cs,FileServer_returns_error_for_unsatisfiable_byte_range,The following statement contains a magic number: Assert.That(response.StatusCode' Is.EqualTo(416));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Reports_Syntactically_Invalid_Byte_Ranges,The following statement contains a magic number: Assert.IsNull(CreateByteRanges("bytes=123'456"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Reports_Syntactically_Invalid_Byte_Ranges,The following statement contains a magic number: Assert.IsNull(CreateByteRanges("bytes=456-123"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Reports_Syntactically_Invalid_Byte_Ranges,The following statement contains a magic number: Assert.IsNull(CreateByteRanges("bytes=456-455"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Parses_Simple_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(123' 456) }' CreateByteRanges("bytes=123-456"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Parses_Simple_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(123' 456) }' CreateByteRanges("bytes=123-456"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Parses_Simple_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(123' 456) }' CreateByteRanges("bytes=123-456"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Parses_Simple_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(123' 499) }' CreateByteRanges("bytes=123-"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Parses_Simple_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(123' 499) }' CreateByteRanges("bytes=123-"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Parses_Simple_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(123' 499) }' CreateByteRanges("bytes=123-"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Parses_Simple_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(400' 499) }' CreateByteRanges("bytes=-100"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Parses_Simple_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(400' 499) }' CreateByteRanges("bytes=-100"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Parses_Simple_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(400' 499) }' CreateByteRanges("bytes=-100"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Parses_Simple_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(0' 0) }' CreateByteRanges("bytes=0-0"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Parses_Simple_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(499' 499) }' CreateByteRanges("bytes=499-499"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Parses_Simple_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(499' 499) }' CreateByteRanges("bytes=499-499"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Parses_Simple_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(499' 499) }' CreateByteRanges("bytes=499-499"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Truncates_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(123' 499) }' CreateByteRanges("bytes=123-999"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Truncates_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(123' 499) }' CreateByteRanges("bytes=123-999"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Truncates_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(123' 499) }' CreateByteRanges("bytes=123-999"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Truncates_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(null' CreateByteRanges("bytes=600-999"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Truncates_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(0' 499) }' CreateByteRanges("bytes=-999"' 500));
Magic Number,Gate.Middleware.Tests.StaticFiles,RangeHeaderTests,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\StaticFiles\RangeHeaderTests.cs,RangeHeader_Truncates_Byte_Ranges,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { new Tuple<long' long>(0' 499) }' CreateByteRanges("bytes=-999"' 500));
Missing Default,System.Threading.Tasks,TaskHelpers,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\App_Packages\TaskHelpers.Sources.0.2\TaskHelpers.cs,SetIfTaskFailed,The following switch statement is missing a default case: switch (source.Status)             {                 case TaskStatus.Canceled:                 case TaskStatus.Faulted:                     return tcs.TrySetFromTask(source);             }
Missing Default,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,CopyResultToCompletionSourceImpl,The following switch statement is missing a default case: switch (task.Status)                 {                     case TaskStatus.Canceled:                     case TaskStatus.Faulted:                         TaskHelpers.TrySetFromTask(tcs' task);                         break;                      case TaskStatus.RanToCompletion:                         tcs.TrySetResult(resultThunk(task));                         break;                 }
Missing Default,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Tests\Gate.Middleware.Tests\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,CopyResultToCompletionSourceImplContinuation,The following switch statement is missing a default case: switch (innerTask.Status)                 {                     case TaskStatus.Canceled:                     case TaskStatus.Faulted:                         TaskHelpers.TrySetFromTask(tcs' innerTask);                         break;                      case TaskStatus.RanToCompletion:                         tcs.TrySetResult(resultThunk(task));                         break;                 }
