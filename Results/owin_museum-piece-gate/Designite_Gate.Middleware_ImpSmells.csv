Implementation smell,Namespace,Class,File,Method,Description
Long Method,Gate.Middleware,PassiveValidator,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\PassiveValidator.cs,CheckRequiredCallData,The method has 135 lines of code.
Long Method,Gate.Middleware,ShowExceptions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\ShowExceptions.cs,ErrorPage,The method has 493 lines of code.
Complex Method,Gate.Middleware,PassiveValidator,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\PassiveValidator.cs,CheckRequiredCallData,Cyclomatic complexity of the method is 21
Complex Method,Gate.Middleware,PassiveValidator,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\PassiveValidator.cs,TryValidateResult,Cyclomatic complexity of the method is 13
Complex Method,Gate.Middleware,ShowExceptions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\ShowExceptions.cs,ErrorPage,Cyclomatic complexity of the method is 21
Complex Method,Gate.Middleware.Utils,RangeHeader,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Utils\RangeHeader.cs,TryParseRange,Cyclomatic complexity of the method is 8
Long Parameter List,Owin,StartupExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\App_Packages\Owin.Extensions.Sources.0.6.4\StartupExtensions.cs,UseFunc,The method has 5 parameters. Parameters: builder' middleware' arg1' arg2' arg3
Long Parameter List,Owin,StartupExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\App_Packages\Owin.Extensions.Sources.0.6.4\StartupExtensions.cs,UseFunc,The method has 6 parameters. Parameters: builder' middleware' arg1' arg2' arg3' arg4
Long Parameter List,Owin,StartupExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\App_Packages\Owin.Extensions.Sources.0.6.4\StartupExtensions.cs,UseFunc,The method has 5 parameters. Parameters: builder' middleware' arg1' arg2' arg3
Long Parameter List,Owin,StartupExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\App_Packages\Owin.Extensions.Sources.0.6.4\StartupExtensions.cs,UseFunc,The method has 6 parameters. Parameters: builder' middleware' arg1' arg2' arg3' arg4
Long Parameter List,Gate.Middleware.Utils,FilterStream,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Utils\FilterStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,Gate.Middleware.Utils,FilterStream,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Utils\FilterStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,Gate.Middleware.Utils,TriggerStream,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Utils\TriggerStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,Gate.Middleware.Utils,TriggerStream,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Utils\TriggerStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Identifier,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,,The length of the parameter _rethrowWithNoStackLossDelegate is 31.
Long Statement,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,CatchImpl,The length of the statement  "                            throw new InvalidOperationException("You must set the Task property of the CatchInfo returned from the TaskHelpersExtensions.Catch continuation.");" is 147.
Long Statement,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,CatchImplContinuation,The length of the statement  "            task.ContinueWith(innerTask => tcs.TrySetFromTask(innerTask)' TaskContinuationOptions.NotOnFaulted | TaskContinuationOptions.ExecuteSynchronously);" is 147.
Long Statement,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,CatchImplContinuation,The length of the statement  "                                throw new InvalidOperationException("You cannot return null from the TaskHelpersExtensions.Catch continuation. You must return a valid task or throw an exception.");" is 165.
Long Statement,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,CatchImplContinuation,The length of the statement  "                            throw new InvalidOperationException("You cannot return null from the TaskHelpersExtensions.Catch continuation. You must return a valid task or throw an exception.");" is 165.
Long Statement,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,GetRethrowWithNoStackLossDelegate,The length of the statement  "                // No-ops if the task completed successfully' else throws the originating exception complete with the correct call stack." is 121.
Long Statement,Gate.Middleware,PassiveValidator,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\PassiveValidator.cs,CheckRequiredCallData,The length of the statement  "                SetFatalResult(env' "3.2.3"' "owin.CallCancelled is not of type CancellationToken: " + env["owin.CallCancelled"].GetType().FullName); " is 133.
Long Statement,Gate.Middleware,PassiveValidator,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\PassiveValidator.cs,CheckRequiredCallData,The length of the statement  "                warnings.Add(CreateWarning("3.6"' "The owin.CallCancelled CancellationToken was cancelled before processing the request.")); " is 124.
Long Statement,Gate.Middleware,PassiveValidator,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\PassiveValidator.cs,TryValidateHeaderCollection,The length of the statement  "            if (!headers.TryGetValue(lowerKey' out resultValue) || resultValue.Length != caseValue.Length || resultValue[0] != caseValue[0]) " is 128.
Long Statement,Gate.Middleware.Utils,RangeHeader,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Utils\RangeHeader.cs,IsValid,The length of the statement  "            var isValid = (httpRange != null && httpRange.StartsWith(ValuePrefix' StringComparison.InvariantCultureIgnoreCase)) && httpRange.Length > ValuePrefix.Length; " is 157.
Complex Conditional,Gate.Middleware.WebSockets,OpaqueToWebSocket,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\WebSockets\OpaqueToWebSocket.cs,Middleware,The conditional expression  "opaqueSupport == "opaque.Upgrade" // If we have opaque support                      && opaqueUpgrade != null                      && websocketSupport != "websocket.Accept" // and no current websocket support                      && webSocketAccept == null"  is complex.
Empty Catch Block,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,GetRethrowWithNoStackLossDelegate,The method has an empty catch block.
Magic Number,Gate.Middleware,NotFound,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\NotFound.cs,Call,The following statement contains a magic number: Response response = new Response(env)             {                 StatusCode = 404'                  ReasonPhrase = "Not Found"'                  ContentType = "text/html"'                 ContentLength = body.Length'             };
Magic Number,Gate.Middleware,PassiveValidator,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\PassiveValidator.cs,TryValidateResult,The following statement contains a magic number: statusCode <= 100 || statusCode >= 1000
Magic Number,Gate.Middleware,PassiveValidator,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\PassiveValidator.cs,TryValidateResult,The following statement contains a magic number: statusCode <= 100 || statusCode >= 1000
Magic Number,Gate.Middleware,PassiveValidator,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\PassiveValidator.cs,SetFatalResult,The following statement contains a magic number: new Response(env)              {                  StatusCode = 500'                  ReasonPhrase = "Internal Server Error"              }.Write("OWIN v0.15.0 validation failure: Section#{0}' {1}"' standardSection' message);
Magic Number,Gate.Middleware,ContentLength,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\ContentLength.cs,IsStatusWithNoNoEntityBody,The following statement contains a magic number: return (status >= 100 && status < 200) ||                  status == 204 ||                  status == 205 ||                  status == 304;
Magic Number,Gate.Middleware,ContentLength,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\ContentLength.cs,IsStatusWithNoNoEntityBody,The following statement contains a magic number: return (status >= 100 && status < 200) ||                  status == 204 ||                  status == 205 ||                  status == 304;
Magic Number,Gate.Middleware,ContentLength,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\ContentLength.cs,IsStatusWithNoNoEntityBody,The following statement contains a magic number: return (status >= 100 && status < 200) ||                  status == 204 ||                  status == 205 ||                  status == 304;
Magic Number,Gate.Middleware,ContentLength,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\ContentLength.cs,IsStatusWithNoNoEntityBody,The following statement contains a magic number: return (status >= 100 && status < 200) ||                  status == 204 ||                  status == 205 ||                  status == 304;
Magic Number,Gate.Middleware,ContentLength,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\ContentLength.cs,IsStatusWithNoNoEntityBody,The following statement contains a magic number: return (status >= 100 && status < 200) ||                  status == 204 ||                  status == 205 ||                  status == 304;
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: var prefixBytes = new[]              {                  Hex[(dataCount >> 28) & 0xf]'                  Hex[(dataCount >> 24) & 0xf]'                  Hex[(dataCount >> 20) & 0xf]'                  Hex[(dataCount >> 16) & 0xf]'                  Hex[(dataCount >> 12) & 0xf]'                  Hex[(dataCount >> 8) & 0xf]'                  Hex[(dataCount >> 4) & 0xf]'                  Hex[(dataCount >> 0) & 0xf]'                  Hex[16]'                  Hex[17]'              };
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: var prefixBytes = new[]              {                  Hex[(dataCount >> 28) & 0xf]'                  Hex[(dataCount >> 24) & 0xf]'                  Hex[(dataCount >> 20) & 0xf]'                  Hex[(dataCount >> 16) & 0xf]'                  Hex[(dataCount >> 12) & 0xf]'                  Hex[(dataCount >> 8) & 0xf]'                  Hex[(dataCount >> 4) & 0xf]'                  Hex[(dataCount >> 0) & 0xf]'                  Hex[16]'                  Hex[17]'              };
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: var prefixBytes = new[]              {                  Hex[(dataCount >> 28) & 0xf]'                  Hex[(dataCount >> 24) & 0xf]'                  Hex[(dataCount >> 20) & 0xf]'                  Hex[(dataCount >> 16) & 0xf]'                  Hex[(dataCount >> 12) & 0xf]'                  Hex[(dataCount >> 8) & 0xf]'                  Hex[(dataCount >> 4) & 0xf]'                  Hex[(dataCount >> 0) & 0xf]'                  Hex[16]'                  Hex[17]'              };
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: var prefixBytes = new[]              {                  Hex[(dataCount >> 28) & 0xf]'                  Hex[(dataCount >> 24) & 0xf]'                  Hex[(dataCount >> 20) & 0xf]'                  Hex[(dataCount >> 16) & 0xf]'                  Hex[(dataCount >> 12) & 0xf]'                  Hex[(dataCount >> 8) & 0xf]'                  Hex[(dataCount >> 4) & 0xf]'                  Hex[(dataCount >> 0) & 0xf]'                  Hex[16]'                  Hex[17]'              };
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: var prefixBytes = new[]              {                  Hex[(dataCount >> 28) & 0xf]'                  Hex[(dataCount >> 24) & 0xf]'                  Hex[(dataCount >> 20) & 0xf]'                  Hex[(dataCount >> 16) & 0xf]'                  Hex[(dataCount >> 12) & 0xf]'                  Hex[(dataCount >> 8) & 0xf]'                  Hex[(dataCount >> 4) & 0xf]'                  Hex[(dataCount >> 0) & 0xf]'                  Hex[16]'                  Hex[17]'              };
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: var prefixBytes = new[]              {                  Hex[(dataCount >> 28) & 0xf]'                  Hex[(dataCount >> 24) & 0xf]'                  Hex[(dataCount >> 20) & 0xf]'                  Hex[(dataCount >> 16) & 0xf]'                  Hex[(dataCount >> 12) & 0xf]'                  Hex[(dataCount >> 8) & 0xf]'                  Hex[(dataCount >> 4) & 0xf]'                  Hex[(dataCount >> 0) & 0xf]'                  Hex[16]'                  Hex[17]'              };
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: var prefixBytes = new[]              {                  Hex[(dataCount >> 28) & 0xf]'                  Hex[(dataCount >> 24) & 0xf]'                  Hex[(dataCount >> 20) & 0xf]'                  Hex[(dataCount >> 16) & 0xf]'                  Hex[(dataCount >> 12) & 0xf]'                  Hex[(dataCount >> 8) & 0xf]'                  Hex[(dataCount >> 4) & 0xf]'                  Hex[(dataCount >> 0) & 0xf]'                  Hex[16]'                  Hex[17]'              };
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: var prefixBytes = new[]              {                  Hex[(dataCount >> 28) & 0xf]'                  Hex[(dataCount >> 24) & 0xf]'                  Hex[(dataCount >> 20) & 0xf]'                  Hex[(dataCount >> 16) & 0xf]'                  Hex[(dataCount >> 12) & 0xf]'                  Hex[(dataCount >> 8) & 0xf]'                  Hex[(dataCount >> 4) & 0xf]'                  Hex[(dataCount >> 0) & 0xf]'                  Hex[16]'                  Hex[17]'              };
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: var prefixBytes = new[]              {                  Hex[(dataCount >> 28) & 0xf]'                  Hex[(dataCount >> 24) & 0xf]'                  Hex[(dataCount >> 20) & 0xf]'                  Hex[(dataCount >> 16) & 0xf]'                  Hex[(dataCount >> 12) & 0xf]'                  Hex[(dataCount >> 8) & 0xf]'                  Hex[(dataCount >> 4) & 0xf]'                  Hex[(dataCount >> 0) & 0xf]'                  Hex[16]'                  Hex[17]'              };
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: var shift = (dataCount & 0xffff0000) == 0 ? 16 : 0;
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: shift += ((dataCount << shift) & 0xff000000) == 0 ? 8 : 0;
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: shift += ((dataCount << shift) & 0xf0000000) == 0 ? 4 : 0;
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: return new ArraySegment<byte>(prefixBytes' shift / 4' 10 - shift / 4);
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: return new ArraySegment<byte>(prefixBytes' shift / 4' 10 - shift / 4);
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,ChunkPrefix,The following statement contains a magic number: return new ArraySegment<byte>(prefixBytes' shift / 4' 10 - shift / 4);
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,IsStatusWithNoNoEntityBody,The following statement contains a magic number: return (status >= 100 && status < 200) ||                  status == 204 ||                  status == 205 ||                  status == 304;
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,IsStatusWithNoNoEntityBody,The following statement contains a magic number: return (status >= 100 && status < 200) ||                  status == 204 ||                  status == 205 ||                  status == 304;
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,IsStatusWithNoNoEntityBody,The following statement contains a magic number: return (status >= 100 && status < 200) ||                  status == 204 ||                  status == 205 ||                  status == 304;
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,IsStatusWithNoNoEntityBody,The following statement contains a magic number: return (status >= 100 && status < 200) ||                  status == 204 ||                  status == 205 ||                  status == 304;
Magic Number,Gate.Middleware,Chunked,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Chunked.cs,IsStatusWithNoNoEntityBody,The following statement contains a magic number: return (status >= 100 && status < 200) ||                  status == 204 ||                  status == 205 ||                  status == 304;
Magic Number,Gate.Middleware,Cascade,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Cascade.cs,Invoke,The following statement contains a magic number: loop = () =>              {                  var threadId = Thread.CurrentThread.ManagedThreadId;                  for (var tryAgainOnSameThread = true; tryAgainOnSameThread; )                  {                      TriggerStream triggerStream = new TriggerStream(outputStream);                      triggerStream.OnFirstWrite = () =>                      {                          if (resp.StatusCode == 404)                          {                              triggerStream.InnerStream = Stream.Null;                          }                      };                        env[OwinConstants.ResponseBody] = triggerStream;                        tryAgainOnSameThread = false;                      iter.Current.Invoke(env)                          .Then(() =>                          {                              if (resp.StatusCode != 404)                              {                                  tcs.TrySetResult(null);                                  return;                              }                                // Cleanup and try the next one.                              resp.Headers.Clear();                              resp.Body = outputStream;                                if (iter.MoveNext())                              {                                  // ReSharper disable AccessToModifiedClosure                                  if (threadId == Thread.CurrentThread.ManagedThreadId)                                  {                                      tryAgainOnSameThread = true;                                  }                                  else                                  {                                      loop();                                  }                                  // ReSharper restore AccessToModifiedClosure                              }                              else                              {                                  fallback();                              }                          })                          .Catch(errorInfo =>                          {                              tcs.TrySetException(errorInfo.Exception);                              return errorInfo.Handled();                          });                  }                  threadId = 0;              };
Magic Number,Gate.Middleware,Cascade,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Cascade.cs,Invoke,The following statement contains a magic number: loop = () =>              {                  var threadId = Thread.CurrentThread.ManagedThreadId;                  for (var tryAgainOnSameThread = true; tryAgainOnSameThread; )                  {                      TriggerStream triggerStream = new TriggerStream(outputStream);                      triggerStream.OnFirstWrite = () =>                      {                          if (resp.StatusCode == 404)                          {                              triggerStream.InnerStream = Stream.Null;                          }                      };                        env[OwinConstants.ResponseBody] = triggerStream;                        tryAgainOnSameThread = false;                      iter.Current.Invoke(env)                          .Then(() =>                          {                              if (resp.StatusCode != 404)                              {                                  tcs.TrySetResult(null);                                  return;                              }                                // Cleanup and try the next one.                              resp.Headers.Clear();                              resp.Body = outputStream;                                if (iter.MoveNext())                              {                                  // ReSharper disable AccessToModifiedClosure                                  if (threadId == Thread.CurrentThread.ManagedThreadId)                                  {                                      tryAgainOnSameThread = true;                                  }                                  else                                  {                                      loop();                                  }                                  // ReSharper restore AccessToModifiedClosure                              }                              else                              {                                  fallback();                              }                          })                          .Catch(errorInfo =>                          {                              tcs.TrySetException(errorInfo.Exception);                              return errorInfo.Handled();                          });                  }                  threadId = 0;              };
Magic Number,Gate.Middleware,ShowExceptions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\ShowExceptions.cs,StackFrames,The following statement contains a magic number: var heap = new Chunk { Text = stackTrace + "\r\n"' End = stackTrace.Length + 2 };
Magic Number,Gate.Middleware,ShowExceptions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\ShowExceptions.cs,LoadFrame,The following statement contains a magic number: frame.PreContextLine = Math.Max(lineNumber - 6' 1);
Magic Number,Gate.Middleware,ShowExceptions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\ShowExceptions.cs,LoadFrame,The following statement contains a magic number: frame.PostContextCode = code.Skip(lineNumber).Take(6).ToArray();
Magic Number,Gate.Middleware,WilsonAsync,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Wilson.cs,Invoke,The following statement contains a magic number: return TimerLoop(350'                   () => response.Write("<title>Hutchtastic</title>")'                  () => response.Write("<pre>")'                   () => response.Write(wilson)'                   () => response.Write("</pre>")'                   () =>                  {                      if (request.Query["flip"] == "crash")                      {                          throw new ApplicationException("Wilson crashed!");                      }                  }'                   () => response.Write("<p><a href='" + href + "'>flip!</a></p>")'                  () => response.Write("<p><a href='?flip=crash'>crash!</a></p>"));
Magic Number,Gate.Middleware.Utils,RangeHeader,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\Utils\RangeHeader.cs,TryParseRange,The following statement contains a magic number: !range.Any() || range.Count() < 2
Magic Number,Gate.Middleware.WebSockets,OpaqueToWebSocket,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\WebSockets\OpaqueToWebSocket.cs,Middleware,The following statement contains a magic number: return env =>              {                  var request = new Request(env);                  string opaqueSupport = request.Get<string>("opaque.Support");                  OpaqueUpgrade opaqueUpgrade = request.Get<OpaqueUpgrade>("opaque.Upgrade");                  string websocketSupport = request.Get<string>("websocket.Support");                  WebSocketAccept webSocketAccept = request.Get<WebSocketAccept>("websocket.Accept");                    if (opaqueSupport == "opaque.Upgrade" // If we have opaque support                      && opaqueUpgrade != null                      && websocketSupport != "websocket.Accept" // and no current websocket support                      && webSocketAccept == null) // and this request is a websocket request...                  {                      // This middleware is adding support for websockets.                      env["websocket.Support"] = "websocket.Accept";                        if (IsWebSocketRequest(env))                      {                          IDictionary<string' object> acceptOptions = null;                          WebSocketFunc webSocketFunc = null;                            // Announce websocket support                          env["websocket.Accept"] = new WebSocketAccept(                              (options' callback) =>                              {                                  acceptOptions = options;                                  webSocketFunc = callback;                                  env[OwinConstants.ResponseStatusCode] = 101;                              });                              return app(env).Then(() =>                          {                              Response response = new Response(env);                              if (response.StatusCode == 101                                  && webSocketFunc != null)                              {                                  SetWebSocketResponseHeaders(env' acceptOptions);                                    opaqueUpgrade(acceptOptions' opaqueEnv =>                                  {                                      WebSocketLayer webSocket = new WebSocketLayer(opaqueEnv);                                      return webSocketFunc(webSocket.Environment)                                          .Then(() => webSocket.CleanupAsync());                                  });                              }                          });                      }                  }                    // else                  return app(env);              };
Magic Number,Gate.Middleware.WebSockets,OpaqueToWebSocket,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\WebSockets\OpaqueToWebSocket.cs,Middleware,The following statement contains a magic number: return env =>              {                  var request = new Request(env);                  string opaqueSupport = request.Get<string>("opaque.Support");                  OpaqueUpgrade opaqueUpgrade = request.Get<OpaqueUpgrade>("opaque.Upgrade");                  string websocketSupport = request.Get<string>("websocket.Support");                  WebSocketAccept webSocketAccept = request.Get<WebSocketAccept>("websocket.Accept");                    if (opaqueSupport == "opaque.Upgrade" // If we have opaque support                      && opaqueUpgrade != null                      && websocketSupport != "websocket.Accept" // and no current websocket support                      && webSocketAccept == null) // and this request is a websocket request...                  {                      // This middleware is adding support for websockets.                      env["websocket.Support"] = "websocket.Accept";                        if (IsWebSocketRequest(env))                      {                          IDictionary<string' object> acceptOptions = null;                          WebSocketFunc webSocketFunc = null;                            // Announce websocket support                          env["websocket.Accept"] = new WebSocketAccept(                              (options' callback) =>                              {                                  acceptOptions = options;                                  webSocketFunc = callback;                                  env[OwinConstants.ResponseStatusCode] = 101;                              });                              return app(env).Then(() =>                          {                              Response response = new Response(env);                              if (response.StatusCode == 101                                  && webSocketFunc != null)                              {                                  SetWebSocketResponseHeaders(env' acceptOptions);                                    opaqueUpgrade(acceptOptions' opaqueEnv =>                                  {                                      WebSocketLayer webSocket = new WebSocketLayer(opaqueEnv);                                      return webSocketFunc(webSocket.Environment)                                          .Then(() => webSocket.CleanupAsync());                                  });                              }                          });                      }                  }                    // else                  return app(env);              };
Duplicate Code,Gate.Middleware,ShowExceptions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\ShowExceptions.cs,ErrorPage,The method contains a code clone-set at the following line numbers (starting from the method definition): ((317' 336)' (359' 378)' (400' 419))
Missing Default,System.Threading.Tasks,TaskHelpers,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\App_Packages\TaskHelpers.Sources.0.2\TaskHelpers.cs,SetIfTaskFailed,The following switch statement is missing a default case: switch (source.Status)             {                 case TaskStatus.Canceled:                 case TaskStatus.Faulted:                     return tcs.TrySetFromTask(source);             }
Missing Default,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,CopyResultToCompletionSourceImpl,The following switch statement is missing a default case: switch (task.Status)                 {                     case TaskStatus.Canceled:                     case TaskStatus.Faulted:                         TaskHelpers.TrySetFromTask(tcs' task);                         break;                      case TaskStatus.RanToCompletion:                         tcs.TrySetResult(resultThunk(task));                         break;                 }
Missing Default,System.Threading.Tasks,TaskHelpersExtensions,C:\research\architectureSmells\repos\owin_museum-piece-gate\src\Main\Gate.Middleware\App_Packages\TaskHelpers.Sources.0.2\TaskHelpersExtensions.cs,CopyResultToCompletionSourceImplContinuation,The following switch statement is missing a default case: switch (innerTask.Status)                 {                     case TaskStatus.Canceled:                     case TaskStatus.Faulted:                         TaskHelpers.TrySetFromTask(tcs' innerTask);                         break;                      case TaskStatus.RanToCompletion:                         tcs.TrySetResult(resultThunk(task));                         break;                 }
