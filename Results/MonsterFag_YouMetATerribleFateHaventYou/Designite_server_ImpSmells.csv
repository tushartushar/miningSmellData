Implementation smell,Namespace,Class,File,Method,Description
Complex Method,server.account,purchaseCharSlot,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\account\purchaseCharSlot.cs,HandleRequest,Cyclomatic complexity of the method is 8
Complex Method,server.account,register,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\account\register.cs,HandleRequest,Cyclomatic complexity of the method is 9
Complex Method,server.fame,list,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\fame\list.cs,HandleRequest,Cyclomatic complexity of the method is 22
Complex Method,server.picture,get,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\picture\get.cs,HandleRequest,Cyclomatic complexity of the method is 12
Long Statement,server.account,forgotPassword,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\account\forgotPassword.cs,HandleRequest,The length of the statement  "	byte[] status = Encoding.UTF8.GetBytes ("<Error>This function has been disabled' please contact a server admin.</Error>"); " is 122.
Long Statement,server.account,register,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\account\register.cs,HandleRequest,The length of the statement  "					cmd.CommandText = "UPDATE accounts SET uuid=@newUuid' name=@newUuid' password=SHA1(@password)' guest=FALSE WHERE uuid=@uuid' name=@name;"; " is 138.
Long Statement,server.guild,listMembers,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\guild\listMembers.cs,HandleRequest,The length of the statement  "				status = Encoding.UTF8.GetBytes (db.HttpGetGuildMembers (Convert.ToInt32 (query ["num"])' Convert.ToInt32 (query ["offset"])' acc)); " is 132.
Long Statement,server.credits,getoffers,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\credits\getoffers.cs,HandleRequest,The length of the statement  "	byte[] res = Encoding.UTF8.GetBytes ("<Offers><Tok>WUT</Tok><Exp>STH</Exp><Offer><Id>0</Id><Price>0</Price><RealmGold>No Gold</RealmGold><CheckoutJWT>No Gold</CheckoutJWT><Data>YO</Data><Currency>HKD</Currency></Offer></Offers>"); " is 230.
Long Statement,server.picture,get,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\picture\get.cs,HandleRequest,The length of the statement  "				XmlDatas.RemoteTextures.Add (id' new WebClient ().DownloadData ("http://realmofthemadgod.appspot.com/picture/get?id=" + rid [1])); " is 130.
Long Statement,server.picture,get,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\picture\get.cs,HandleRequest,The length of the statement  "				XmlDatas.RemoteTextures.Add (id' new WebClient ().DownloadData ("http://rotmgtesting.appspot.com/picture/get?id=" + rid [1])); " is 126.
Empty Catch Block,server,Program,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\Program.cs,ListenerCallback,The method has an empty catch block.
Empty Catch Block,server,Program,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\Program.cs,Worker,The method has an empty catch block.
Magic Number,server.account,setName,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\account\setName.cs,HandleRequest,The following statement contains a magic number: using (var db = new Database ()) {  	Account acc = db.Verify (query ["guid"]' query ["password"]);  	byte[] status;  	if (acc == null | acc.Credits < 1001) {  		status = Encoding.UTF8.GetBytes ("<Error>Bad login</Error>");  	}  	else {  		MySqlCommand cmd = db.CreateQuery ();  		object exescala;  		cmd.CommandText = "SELECT COUNT(name) FROM accounts WHERE name=@name;";  		cmd.Parameters.AddWithValue ("@name"' query ["name"]);  		exescala = cmd.ExecuteScalar ();  		if (int.Parse (exescala.ToString ()) > 0)  			status = Encoding.UTF8.GetBytes ("<Error>Duplicated name</Error>");  		else {  			cmd = db.CreateQuery ();  			cmd.CommandText = "UPDATE accounts SET name=@name' namechosen=TRUE WHERE id=@accId;";  			cmd.Parameters.AddWithValue ("@accId"' acc.AccountId);  			cmd.Parameters.AddWithValue ("@name"' query ["name"]);  			if (cmd.ExecuteNonQuery () != 0)  				status = Encoding.UTF8.GetBytes ("<Success />");  			else  				status = Encoding.UTF8.GetBytes ("<Error>Internal error</Error>");  		}  	}  	context.Response.OutputStream.Write (status' 0' status.Length);  	db.Dispose ();  }  
Magic Number,server.account,setName,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\account\setName.cs,HandleRequest,The following statement contains a magic number: if (acc == null | acc.Credits < 1001) {  	status = Encoding.UTF8.GetBytes ("<Error>Bad login</Error>");  }  else {  	MySqlCommand cmd = db.CreateQuery ();  	object exescala;  	cmd.CommandText = "SELECT COUNT(name) FROM accounts WHERE name=@name;";  	cmd.Parameters.AddWithValue ("@name"' query ["name"]);  	exescala = cmd.ExecuteScalar ();  	if (int.Parse (exescala.ToString ()) > 0)  		status = Encoding.UTF8.GetBytes ("<Error>Duplicated name</Error>");  	else {  		cmd = db.CreateQuery ();  		cmd.CommandText = "UPDATE accounts SET name=@name' namechosen=TRUE WHERE id=@accId;";  		cmd.Parameters.AddWithValue ("@accId"' acc.AccountId);  		cmd.Parameters.AddWithValue ("@name"' query ["name"]);  		if (cmd.ExecuteNonQuery () != 0)  			status = Encoding.UTF8.GetBytes ("<Success />");  		else  			status = Encoding.UTF8.GetBytes ("<Error>Internal error</Error>");  	}  }  
Magic Number,server.account,purchaseCharSlot,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\account\purchaseCharSlot.cs,HandleRequest,The following statement contains a magic number: using (var db = new Database ()) {  	Account acc = db.Verify (query ["guid"]' query ["password"]);  	byte[] status;  	if (acc == null) {  		status = Encoding.UTF8.GetBytes ("<Error>Bad login</Error>");  	}  	else {  		MySqlCommand cmd = db.CreateQuery ();  		cmd.CommandText = "SELECT fame FROM stats WHERE accId=@accId;";  		cmd.Parameters.AddWithValue ("@accId"' acc.AccountId);  		if ((int)cmd.ExecuteScalar () < 5000)  			status = Encoding.UTF8.GetBytes ("<Error>Not enough fame</Error>");  		else {  			cmd = db.CreateQuery ();  			cmd.CommandText = "UPDATE stats SET fame = fame - 5000 WHERE accId=@accId";  			cmd.Parameters.AddWithValue ("@accId"' acc.AccountId);  			if (cmd.ExecuteNonQuery () > 0) {  				cmd = db.CreateQuery ();  				cmd.CommandText = "UPDATE accounts SET maxCharSlot = maxCharSlot + 1 WHERE id=@accId";  				cmd.Parameters.AddWithValue ("@accId"' acc.AccountId);  				if (cmd.ExecuteNonQuery () > 0)  					status = Encoding.UTF8.GetBytes ("<Success/>");  				else  					status = Encoding.UTF8.GetBytes ("<Error>Internal Error</Error>");  			}  			else  				status = Encoding.UTF8.GetBytes ("<Error>Internal Error</Error>");  		}  	}  	context.Response.OutputStream.Write (status' 0' status.Length);  	db.Dispose ();  }  
Magic Number,server.account,purchaseCharSlot,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\account\purchaseCharSlot.cs,HandleRequest,The following statement contains a magic number: if (acc == null) {  	status = Encoding.UTF8.GetBytes ("<Error>Bad login</Error>");  }  else {  	MySqlCommand cmd = db.CreateQuery ();  	cmd.CommandText = "SELECT fame FROM stats WHERE accId=@accId;";  	cmd.Parameters.AddWithValue ("@accId"' acc.AccountId);  	if ((int)cmd.ExecuteScalar () < 5000)  		status = Encoding.UTF8.GetBytes ("<Error>Not enough fame</Error>");  	else {  		cmd = db.CreateQuery ();  		cmd.CommandText = "UPDATE stats SET fame = fame - 5000 WHERE accId=@accId";  		cmd.Parameters.AddWithValue ("@accId"' acc.AccountId);  		if (cmd.ExecuteNonQuery () > 0) {  			cmd = db.CreateQuery ();  			cmd.CommandText = "UPDATE accounts SET maxCharSlot = maxCharSlot + 1 WHERE id=@accId";  			cmd.Parameters.AddWithValue ("@accId"' acc.AccountId);  			if (cmd.ExecuteNonQuery () > 0)  				status = Encoding.UTF8.GetBytes ("<Success/>");  			else  				status = Encoding.UTF8.GetBytes ("<Error>Internal Error</Error>");  		}  		else  			status = Encoding.UTF8.GetBytes ("<Error>Internal Error</Error>");  	}  }  
Magic Number,server.account,purchaseCharSlot,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\account\purchaseCharSlot.cs,HandleRequest,The following statement contains a magic number: if ((int)cmd.ExecuteScalar () < 5000)  	status = Encoding.UTF8.GetBytes ("<Error>Not enough fame</Error>");  else {  	cmd = db.CreateQuery ();  	cmd.CommandText = "UPDATE stats SET fame = fame - 5000 WHERE accId=@accId";  	cmd.Parameters.AddWithValue ("@accId"' acc.AccountId);  	if (cmd.ExecuteNonQuery () > 0) {  		cmd = db.CreateQuery ();  		cmd.CommandText = "UPDATE accounts SET maxCharSlot = maxCharSlot + 1 WHERE id=@accId";  		cmd.Parameters.AddWithValue ("@accId"' acc.AccountId);  		if (cmd.ExecuteNonQuery () > 0)  			status = Encoding.UTF8.GetBytes ("<Success/>");  		else  			status = Encoding.UTF8.GetBytes ("<Error>Internal Error</Error>");  	}  	else  		status = Encoding.UTF8.GetBytes ("<Error>Internal Error</Error>");  }  
Magic Number,server.char,list,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\char\list.cs,HandleRequest,The following statement contains a magic number: using (var db = new Database ()) {  	List<ServerItem> filteredServers = null;  	Account a = db.Verify (query ["guid"]' query ["password"]);  	if (a != null) {  		if (a.Banned) {  			filteredServers = YoureBanned ();  		}  		else {  			filteredServers = GetServersForRank (a.Rank);  		}  	}  	else {  		filteredServers = GetServersForRank (0);  	}  	var chrs = new Chars {  		Characters = new List<Char> ()'  		NextCharId = 2'  		MaxNumChars = 1'  		Account = db.Verify (query ["guid"]' query ["password"])'  		Servers = filteredServers  	};  	Account dvh = null;  	if (chrs.Account != null) {  		db.GetCharData (chrs.Account' chrs);  		db.LoadCharacters (chrs.Account' chrs);  		chrs.News = db.GetNews (chrs.Account);  		dvh = chrs.Account;  	}  	else {  		chrs.Account = Database.CreateGuestAccount (query ["guid"]);  		chrs.News = db.GetNews (null);  	}  	var ms = new MemoryStream ();  	var serializer = new XmlSerializer (chrs.GetType ()' new XmlRootAttribute (chrs.GetType ().Name) {  		Namespace = ""  	});  	var xws = new XmlWriterSettings ();  	xws.OmitXmlDeclaration = true;  	xws.Encoding = Encoding.UTF8;  	XmlWriter xtw = XmlWriter.Create (context.Response.OutputStream' xws);  	serializer.Serialize (xtw' chrs' chrs.Namespaces);  	db.Dispose ();  }  
Magic Number,server,Program,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\Program.cs,Main,The following statement contains a magic number: Console.CancelKeyPress += (sender' e) =>  {  	Console.WriteLine ("Terminating...");  	listener.Stop ();  	while (contextQueue.Count > 0)  		Thread.Sleep (100);  	Environment.Exit (0);  };  
Magic Number,server,Program,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\Program.cs,Main,The following statement contains a magic number: while (contextQueue.Count > 0)  	Thread.Sleep (100);  
Magic Number,server,Program,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,server,Program,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\Program.cs,ProcessRequest,The following statement contains a magic number: try {  	IRequestHandler handler;  	if (!RequestHandlers.Handlers.TryGetValue (context.Request.Url.LocalPath' out handler)) {  		context.Response.StatusCode = 400;  		context.Response.StatusDescription = "Bad request";  		using (var wtr = new StreamWriter (context.Response.OutputStream))  			wtr.Write ("<h1>Bad request</h1>");  	}  	else  		handler.HandleRequest (context);  }  catch (Exception e) {  	using (var wtr = new StreamWriter (context.Response.OutputStream))  		wtr.Write ("<Error>Internal Server Error</Error>");  	Console.Error.WriteLine (e);  }  
Magic Number,server,Program,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\Program.cs,ProcessRequest,The following statement contains a magic number: if (!RequestHandlers.Handlers.TryGetValue (context.Request.Url.LocalPath' out handler)) {  	context.Response.StatusCode = 400;  	context.Response.StatusDescription = "Bad request";  	using (var wtr = new StreamWriter (context.Response.OutputStream))  		wtr.Write ("<h1>Bad request</h1>");  }  else  	handler.HandleRequest (context);  
Magic Number,server,Program,C:\repos\MonsterFag_YouMetATerribleFateHaventYou\server\Program.cs,ProcessRequest,The following statement contains a magic number: context.Response.StatusCode = 400;  
