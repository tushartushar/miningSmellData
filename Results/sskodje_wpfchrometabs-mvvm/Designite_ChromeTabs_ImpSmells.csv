Implementation smell,Namespace,Class,File,Method,Description
Long Method,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,ProcessMouseMove,The method has 111 lines of code.
Complex Method,ChromeTabs,ChromeTabControl,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabControl.cs,MoveTab,Cyclomatic complexity of the method is 8
Complex Method,ChromeTabs,ChromeTabControl,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabControl.cs,OnItemsChanged,Cyclomatic complexity of the method is 10
Complex Method,ChromeTabs,ChromeTabControl,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabControl.cs,SetSelectedContent,Cyclomatic complexity of the method is 9
Complex Method,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,OnPreviewMouseLeftButtonDown,Cyclomatic complexity of the method is 8
Complex Method,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,ProcessMouseMove,Cyclomatic complexity of the method is 18
Long Identifier,ChromeTabs,ChromeTabControl,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabControl.cs,,The length of the parameter AddTabCommandParameterProperty is 30.
Long Identifier,ChromeTabs,ChromeTabControl,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabControl.cs,,The length of the parameter ContainerItemPreparedForOverrideEvent is 37.
Long Identifier,ChromeTabs,ChromeTabControl,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabControl.cs,,The length of the parameter CloseTabWhenDraggedOutsideBondsProperty is 39.
Long Identifier,ChromeTabs,ChromeTabControl,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabControl.cs,,The length of the parameter AddButtonMouseDownBrushProperty is 31.
Long Identifier,ChromeTabs,ChromeTabControl,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabControl.cs,,The length of the parameter AddButtonMouseOverBrushProperty is 31.
Long Identifier,ChromeTabs,ChromeTabControl,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabControl.cs,,The length of the parameter AddButtonDisabledBrushProperty is 30.
Long Identifier,ChromeTabs,ChromeTabControl,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabControl.cs,,The length of the parameter TabTearTriggerDistanceProperty is 30.
Long Statement,ChromeTabs,TabShape,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\TabShape.cs,GetGeometry,The length of the statement  "            return Geometry.Parse(string.Format(CultureInfo.InvariantCulture' "M0'{5} C2.5'{5} 5'0 10'0 15'0 {0}'0 {1}'0 {2}'0 {3}'{5} {4}'{5}"' x1' x2' x3' x4' x5' height)); " is 162.
Long Statement,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,CalculateTabWidth,The length of the statement  "            double activeWidth = double.IsPositiveInfinity(availableSize.Width) ? 500 : availableSize.Width - _leftMargin - _rightMargin; " is 125.
Long Statement,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,ProcessMouseMove,The length of the statement  "                    var bound = Math.Min(1' Math.Abs(diff)) * ((sign * GetWidthForTabItem(tab) * _tabWidthSlidePercent) + ((Math.Abs(diff) < 2) ? 0 : (diff - sign) * (GetWidthForTabItem(tab) - Overlap))); " is 184.
Long Statement,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,OnPreviewMouseMove,The length of the statement  "                var eventArgs = new TabDragEventArgs(ChromeTabControl.TabDraggedOutsideBondsEvent' this' viewmodel' PointToScreen(e.GetPosition(this))); " is 136.
Long Statement,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,OnPreviewMouseMove,The length of the statement  "                OnTabRelease(e.GetPosition(this)' IsMouseCaptured' closeTab' 0.01);//If we set it to 0 the completed event never fires' so we set it to a small decimal. " is 152.
Long Statement,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,Reanimate,The length of the statement  "            ThicknessAnimation moveBackAnimation = new ThicknessAnimation(tab.Margin' offset' new Duration(TimeSpan.FromSeconds(duration))); " is 128.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,StartTabDrag,The conditional expression  "Children.Count == 1                      && ParentTabControl.DragWindowWithOneTab                      && Mouse.LeftButton == MouseButtonState.Pressed                      && !isTabGrab"  is complex.
Complex Conditional,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,ProcessMouseMove,The conditional expression  "!shiftedTab.Equals(_draggedTab)                              && ((shiftedTab.IsPinned && _draggedTab.IsPinned) || (!shiftedTab.IsPinned && !_draggedTab.IsPinned))"  is complex.
Magic Number,ChromeTabs,TabShape,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\TabShape.cs,GetGeometry,The following statement contains a magic number: double height = 25;
Magic Number,ChromeTabs,TabShape,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\TabShape.cs,GetGeometry,The following statement contains a magic number: double x1 = width - 15;
Magic Number,ChromeTabs,TabShape,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\TabShape.cs,GetGeometry,The following statement contains a magic number: double x2 = width - 10;
Magic Number,ChromeTabs,TabShape,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\TabShape.cs,GetGeometry,The following statement contains a magic number: double x3 = width - 5;
Magic Number,ChromeTabs,TabShape,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\TabShape.cs,GetGeometry,The following statement contains a magic number: double x4 = width - 2.5;
Magic Number,ChromeTabs,ChromeTabControl,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabControl.cs,ChangeSelectedItem,The following statement contains a magic number: Panel.SetZIndex(item' 1001);
Magic Number,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,ChromeTabPanel,The following statement contains a magic number: _rightMargin = 25.0;
Magic Number,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,ChromeTabPanel,The following statement contains a magic number: _defaultMeasureHeight = 30.0;
Magic Number,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,ChromeTabPanel,The following statement contains a magic number: _addButtonSize = new Size(20' 12);
Magic Number,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,ChromeTabPanel,The following statement contains a magic number: _addButtonSize = new Size(20' 12);
Magic Number,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,ArrangeOverride,The following statement contains a magic number: _rightMargin = ParentTabControl.IsAddButtonVisible ? 25 : 0;
Magic Number,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,ArrangeOverride,The following statement contains a magic number: _addButtonRect = new Rect(new Point(offset + Overlap' (finalSize.Height - _addButtonSize.Height) / 2)' _addButtonSize);
Magic Number,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,CalculateTabWidth,The following statement contains a magic number: double activeWidth = double.IsPositiveInfinity(availableSize.Width) ? 500 : availableSize.Width - _leftMargin - _rightMargin;
Magic Number,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,StartTabDrag,The following statement contains a magic number: double xPos = totalWidth + ((GetWidthForTabItem(tab) / 2));
Magic Number,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,ProcessMouseMove,The following statement contains a magic number: var bound = Math.Min(1' Math.Abs(diff)) * ((sign * GetWidthForTabItem(tab) * _tabWidthSlidePercent) + ((Math.Abs(diff) < 2) ? 0 : (diff - sign) * (GetWidthForTabItem(tab) - Overlap)));
Magic Number,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,OnPreviewMouseMove,The following statement contains a magic number: _draggedTab == null || DateTime.UtcNow.Subtract(_lastMouseDown).TotalMilliseconds < 50
Magic Number,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,OnPreviewMouseMove,The following statement contains a magic number: bool isOutsideTabPanel = nowPoint.X < 0 - ParentTabControl.TabTearTriggerDistance                  || nowPoint.X > ActualWidth + ParentTabControl.TabTearTriggerDistance                  || nowPoint.Y < -(ActualHeight)                  || nowPoint.Y > ActualHeight + 5 + ParentTabControl.TabTearTriggerDistance;
Magic Number,ChromeTabs,ChromeTabPanel,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabPanel.cs,OnPreviewMouseMove,The following statement contains a magic number: OnTabRelease(e.GetPosition(this)' IsMouseCaptured' closeTab' 0.01);
Missing Default,ChromeTabs,ChromeTabControl,D:\research\architectureSmells\repos1\sskodje_wpfchrometabs-mvvm\ChromeTabs\ChromeTabControl.cs,OnItemsChanged,The following switch statement is missing a default case: switch (e.Action)                  {                      case NotifyCollectionChangedAction.Replace:                      case NotifyCollectionChangedAction.Reset:                          {                              var itemsToRemove = _itemsHolder.Children.Cast<ContentPresenter>().Where(x => !Items.Contains(x.Content)).ToList();                              foreach (var item in itemsToRemove)                                  _itemsHolder.Children.Remove(item);                          }                          break;                      case NotifyCollectionChangedAction.Add:                          {                              // don't do anything with new items not created by the add button' because we don't want to                              // create visuals that aren't being shown.                              if (_addTabButtonClicked && AddTabButtonBehavior == AddTabButtonBehavior.OpenNewTab)                              {                                  _addTabButtonClicked = false;                                  if (e.NewItems != null)                                      ChangeSelectedItem(AsTabItem(e.NewItems.Cast<object>().Last()));                              }                          }                          break;                      case NotifyCollectionChangedAction.Remove:                          if (e.OldItems != null)                          {                              foreach (var item in e.OldItems)                              {                                  ContentPresenter cp = FindChildContentPresenter(item);                                  if (cp != null)                                  {                                      _itemsHolder.Children.Remove(cp);                                  }                              }                          }                              break;                  }
