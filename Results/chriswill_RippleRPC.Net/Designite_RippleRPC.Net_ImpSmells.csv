Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RippleRPC.Net,RippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\RippleClient.cs,MakeRequest,Cyclomatic complexity of the method is 13
Complex Method,RippleRPC.Net,RippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\RippleClient.cs,MakeRequestAsync,Cyclomatic complexity of the method is 13
Complex Method,RippleRPC.Net,RippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\RippleClient.cs,CertificateValidationCallBack,Cyclomatic complexity of the method is 8
Long Parameter List,RippleRPC.Net,IRippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\IRippleClient.cs,GetAccountInformation,The method has 5 parameters.
Long Parameter List,RippleRPC.Net,IRippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\IRippleClient.cs,GetTransactions,The method has 6 parameters.
Long Parameter List,RippleRPC.Net,IRippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\IRippleClient.cs,GetBookOffers,The method has 7 parameters.
Long Parameter List,RippleRPC.Net,IRippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\IRippleClient.cs,FindRipplePath,The method has 6 parameters.
Long Parameter List,RippleRPC.Net,RippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\RippleClient.cs,GetAccountInformation,The method has 5 parameters.
Long Parameter List,RippleRPC.Net,RippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\RippleClient.cs,GetTransactions,The method has 6 parameters.
Long Parameter List,RippleRPC.Net,RippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\RippleClient.cs,GetBookOffers,The method has 7 parameters.
Long Parameter List,RippleRPC.Net,RippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\RippleClient.cs,FindRipplePath,The method has 6 parameters.
Long Statement,RippleRPC.Net,RippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\RippleClient.cs,MakeRequest,The length of the statement  "		webRequest.Headers.Add ("Authorization"' "Basic " + Convert.ToBase64String (Encoding.ASCII.GetBytes (string.Format ("{0}:{1}"' Credentials.UserName' Credentials.Password)))); " is 174.
Long Statement,RippleRPC.Net,RippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\RippleClient.cs,MakeRequestAsync,The length of the statement  "		webRequest.Headers.Add ("Authorization"' "Basic " + Convert.ToBase64String (Encoding.ASCII.GetBytes (string.Format ("{0}:{1}"' Credentials.UserName' Credentials.Password)))); " is 174.
Long Statement,RippleRPC.Net,RippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\RippleClient.cs,CertificateValidationCallBack,The length of the statement  "				if ((certificate.Subject == certificate.Issuer) && (status.Status == System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.UntrustedRoot)) { " is 153.
Long Statement,RippleRPC.Net.Model,Transaction,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Model\Transaction.cs,ToJson,The length of the statement  "	var transaction = "{" + "\"TransactionType\": \"Payment\"' " + "\"Account\": \"rho3u4kXc5q3chQFKfn9S1ZqUCya1xT3t4\"'" + "\"Destination\": \"rDLXQ8KEBn3Aw313bGzhEemx8cCPpGha3d\"'" + "\"Amount\": \"1000\"' " + "\"Fee\": \"10\"' " + "\"Sequence\": 59 }"; " is 251.
Empty Catch Block,Newtonsoft.Json.Converters,PathConverter,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Infrastructure\JsonConverters.cs,ReadJson,The method has an empty catch block.
Empty Catch Block,Newtonsoft.Json.Converters,PathConverter,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Infrastructure\JsonConverters.cs,ReadJson,The method has an empty catch block.
Empty Catch Block,Newtonsoft.Json.Converters,OfferItemConverter,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Infrastructure\JsonConverters.cs,ReadJson,The method has an empty catch block.
Empty Catch Block,Newtonsoft.Json.Converters,OfferItemConverter,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Infrastructure\JsonConverters.cs,ReadJson,The method has an empty catch block.
Magic Number,RippleRPC.Net.Crypto,KeyPair,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\KeyPair.cs,CheckIsCanonical,The following statement contains a magic number: if ((sigLen < 8) || (sigLen > 72))  	return false;  
Magic Number,RippleRPC.Net.Crypto,KeyPair,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\KeyPair.cs,CheckIsCanonical,The following statement contains a magic number: if ((sigLen < 8) || (sigLen > 72))  	return false;  
Magic Number,RippleRPC.Net.Crypto,KeyPair,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\KeyPair.cs,CheckIsCanonical,The following statement contains a magic number: if ((sig [0] != 0x30) || (sig [1] != (sigLen - 2)))  	return false;  
Magic Number,RippleRPC.Net.Crypto,KeyPair,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\KeyPair.cs,CheckIsCanonical,The following statement contains a magic number: if ((rLen < 1) || (rLen > 33) || ((rLen + 7) > sigLen))  	return false;  
Magic Number,RippleRPC.Net.Crypto,KeyPair,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\KeyPair.cs,CheckIsCanonical,The following statement contains a magic number: if ((rLen < 1) || (rLen > 33) || ((rLen + 7) > sigLen))  	return false;  
Magic Number,RippleRPC.Net.Crypto,KeyPair,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\KeyPair.cs,CheckIsCanonical,The following statement contains a magic number: if ((sLen < 1) || (sLen > 33) || ((rLen + sLen + 6) != sigLen))  	return false;  
Magic Number,RippleRPC.Net.Crypto,KeyPair,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\KeyPair.cs,CheckIsCanonical,The following statement contains a magic number: if ((sLen < 1) || (sLen > 33) || ((rLen + sLen + 6) != sigLen))  	return false;  
Magic Number,RippleRPC.Net.Crypto,KeyPair,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\KeyPair.cs,CheckIsCanonical,The following statement contains a magic number: if ((sig [rPos - 2] != 0x02) || (sig [sPos - 2] != 0x02))  	return false;  
Magic Number,RippleRPC.Net.Crypto,KeyPair,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\KeyPair.cs,CheckIsCanonical,The following statement contains a magic number: if ((sig [rPos - 2] != 0x02) || (sig [sPos - 2] != 0x02))  	return false;  
Magic Number,RippleRPC.Net.Crypto,Seed,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\Seed.cs,AppendIntBytes,The following statement contains a magic number: outArray [inArray.Length] = (byte)((((uint)i) >> 24) & 0xFF);  
Magic Number,RippleRPC.Net.Crypto,Seed,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\Seed.cs,AppendIntBytes,The following statement contains a magic number: outArray [inArray.Length + 1] = (byte)((((uint)i) >> 16) & 0xFF);  
Magic Number,RippleRPC.Net.Crypto,Seed,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\Seed.cs,AppendIntBytes,The following statement contains a magic number: outArray [inArray.Length + 2] = (byte)((((uint)i) >> 8) & 0xFF);  
Magic Number,RippleRPC.Net.Crypto,Seed,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\Seed.cs,AppendIntBytes,The following statement contains a magic number: outArray [inArray.Length + 2] = (byte)((((uint)i) >> 8) & 0xFF);  
Magic Number,RippleRPC.Net.Crypto,Seed,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\Seed.cs,AppendIntBytes,The following statement contains a magic number: outArray [inArray.Length + 3] = (byte)(((uint)i) & 0xFF);  
Magic Number,RippleRPC.Net.Crypto,Utils,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\Utils.cs,HalfSha512,The following statement contains a magic number: Array.Copy (Sha512 (bytes)' 0' hash' 0' 32);  
Magic Number,RippleRPC.Net.Crypto,Utils,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Crypto\Utils.cs,QuarterSha512,The following statement contains a magic number: Array.Copy (Sha512 (bytes)' 0' hash' 0' 16);  
Magic Number,Newtonsoft.Json.Converters,RippleValueConverter,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Infrastructure\JsonConverters.cs,ReadJson,The following statement contains a magic number: return val / 1000000;  
Magic Number,Newtonsoft.Json.Converters,OfferItemConverter,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Infrastructure\JsonConverters.cs,ReadJson,The following statement contains a magic number: try {  	double val = serializer.Deserialize<double> (reader);  	return val / 1000000;  }  catch (JsonSerializationException) {  }  
Magic Number,Newtonsoft.Json.Converters,OfferItemConverter,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\Infrastructure\JsonConverters.cs,ReadJson,The following statement contains a magic number: return val / 1000000;  
Magic Number,RippleRPC.Net,RippleClient,C:\repos\chriswill_RippleRPC.Net\RippleRPC.Net\RippleClient.cs,FindRipplePath,The following statement contains a magic number: param.destination_amount = (amount * 1000000).ToString (CultureInfo.InvariantCulture);  
