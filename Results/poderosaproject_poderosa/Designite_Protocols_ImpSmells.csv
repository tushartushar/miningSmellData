Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,Cyclomatic complexity of the method is 9
Complex Method,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,GetSocks5ErrorMessage,Cyclomatic complexity of the method is 9
Complex Method,Poderosa.Protocols,TelnetNegotiator,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\Telnet.cs,ProcessOptionRequest,Cyclomatic complexity of the method is 11
Complex Method,Poderosa.Protocols,TelnetReceiver,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\TerminalConnection.cs,ProcessBuffer,Cyclomatic complexity of the method is 8
Complex Method,Poderosa.Protocols,SSHParameterSerializer,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\TerminalParameterSerialize.cs,Serialize,Cyclomatic complexity of the method is 11
Long Identifier,Poderosa.Protocols,ProtocolOptions,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\ProtocolOptions.cs,,The length of the parameter _hostKeyCheckerVerifierTypeName is 31.
Long Identifier,Poderosa.Protocols,SSHSocket,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\SSHSocket.cs,,The length of the parameter _keyboardInteractiveAuthHanlder is 31.
Long Statement,Poderosa.Protocols,HostKeyVerifierBridge,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\HostKeyCheckerEx.cs,FindHostKeyVerifier,The length of the statement  "            ISSHHostKeyVerifier2[] vs = (ISSHHostKeyVerifier2[])ProtocolsPlugin.Instance.PoderosaWorld.PluginManager.FindExtensionPoint(ProtocolsPluginConstants.HOSTKEYCHECKER_EXTENSION).GetExtensions(); " is 191.
Long Statement,Poderosa.Protocols,InterruptableConnector,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\InterruptableConnector.cs,SocksApplicapable,The length of the statement  "                if (address.AvailableAddresses.Length > 0 && NetAddressUtil.NetAddressIncludesIPAddress(netaddress' address.AvailableAddresses[0])) //１個だけで判断、ややさぼり " is 147.
Long Statement,Poderosa.Protocols,Connector,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\LocalShell.cs,Connect,The length of the statement  "                string args = String.Format("-p {0} -v HOME=\"{1}\" -v TERM=\"{2}\" -s \"{3}\""' _localPort' _param.Home' term.TerminalType' _param.ShellName); " is 143.
Long Statement,Poderosa.Protocols,Connector,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\LocalShell.cs,Connect,The length of the statement  "                    throw new LocalShellUtilException(PEnv.Strings.GetString("Message.CygwinUtil.FailedToRunCygterm") + ": " + cygtermPath' ex); " is 124.
Long Statement,Poderosa.Protocols,Connector,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\LocalShell.cs,GetCygtermPath,The length of the statement  "                IPoderosaApplication app = (IPoderosaApplication)ProtocolsPlugin.Instance.PoderosaWorld.GetAdapter(typeof(IPoderosaApplication)); " is 129.
Long Statement,Poderosa.Protocols,NetUtil,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\NetUtil.cs,ConnectTCPSocket,The length of the statement  "            throw new Exception(String.Format(PEnv.Strings.GetString("Message.FailedToConnectAddress")' addrlist.AvailableAddresses[0].ToString())); " is 136.
Long Statement,Poderosa.Protocols,ProtocolOptions,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\ProtocolOptions.cs,DefineItems,The length of the statement  "            _sshWindowSize = builder.DefineIntValue(_folder' "sshWindowSize"' 2097152' PreferenceValidatorUtil.PositiveIntegerValidator); " is 125.
Long Statement,Poderosa.Protocols,ProtocolOptions,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\ProtocolOptions.cs,DefineItems,The length of the statement  "            _hostKeyCheckerVerifierTypeName = builder.DefineStringValue(_folder' "hostKeyCheckerVerifierTypeName"' "Poderosa.Usability.SSHKnownHosts"' null); " is 145.
Long Statement,Poderosa.Protocols,ProtocolOptions,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\ProtocolOptions.cs,DefineItems,The length of the statement  "            _sshResponseTimeout = builder.DefineIntValue(_folder' "sshResponseTimeout"' defaultTimeouts.ResponseTimeout' PreferenceValidatorUtil.PositiveIntegerValidator); " is 159.
Long Statement,Poderosa.Protocols,ProtocolOptions,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\ProtocolOptions.cs,DefineItems,The length of the statement  "            _socketConnectTimeout = builder.DefineIntValue(_folder' "socketConnectTimeout"' 3000' PreferenceValidatorUtil.PositiveIntegerValidator); " is 136.
Long Statement,Poderosa.Protocols,ProtocolOptions,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\ProtocolOptions.cs,DefineItems,The length of the statement  "            _ipVersionPriority = new EnumPreferenceItem<IPVersionPriority>(builder.DefineStringValue(_folder' "ipVersionPriority"' "Both"' null)' IPVersionPriority.Both); " is 158.
Long Statement,Poderosa.Protocols,ProtocolOptions,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\ProtocolOptions.cs,DefineItems,The length of the statement  "            _socketBufferSize = builder.DefineIntValue(_folder' "socketBufferSize"' 0x1000' PreferenceValidatorUtil.PositiveIntegerValidator); " is 130.
Long Statement,Poderosa.Protocols,ProtocolsPlugin,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\ProtocolsPlugin.cs,InitializePlugin,The length of the statement  "            _connectionResultEventHandler = pm.CreateExtensionPoint(ProtocolsPluginConstants.RESULTEVENTHANDLER_EXTENSION' typeof(IConnectionResultEventHandler)' this); " is 156.
Long Statement,Poderosa.Protocols,ProtocolsPlugin,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\ProtocolsPlugin.cs,InitializePlugin,The length of the statement  "            pm.CreateExtensionPoint(ProtocolsPluginConstants.HOSTKEYCHECKER_EXTENSION' typeof(ISSHHostKeyVerifier2)' ProtocolsPlugin.Instance); " is 131.
Long Statement,Poderosa.Protocols,SimpleStringEncrypt,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\SimpleStringEncrypt.cs,DecryptString,The length of the statement  "            using (ICryptoTransform transform = this.mCSP.CreateDecryptor(Convert.FromBase64String(CKEY)' Convert.FromBase64String(CIV))) { " is 127.
Long Statement,Poderosa.Protocols,SimpleStringEncrypt,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\SimpleStringEncrypt.cs,EncryptString,The length of the statement  "                using (ICryptoTransform transform = this.mCSP.CreateEncryptor(Convert.FromBase64String(CKEY)' Convert.FromBase64String(CIV))) { " is 127.
Long Statement,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The length of the statement  "                throw new IOException(String.Format("The SOCKS server specified an unsupported authentication method [{0}]."' response[0])); " is 124.
Long Statement,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The length of the statement  "                throw new IOException(String.Format("The SOCKS server specified an unsupported authentication method [{0}]."' response[1])); " is 124.
Long Statement,Poderosa.Protocols,TelnetNegotiator,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\Telnet.cs,Process,The length of the statement  "                    if (data != (byte)TelnetCode.SE && data != (byte)TelnetOption.NAWS) //IAC SB 0x1F ときてそれっきり、というケースがあった。ホスト側の仕様違反のように見えるが、Poderosaが何かの応答を返すわけではないのでこれで回避 " is 150.
Long Statement,Poderosa.Protocols,SSHParameterSerializer,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\TerminalParameterSerialize.cs,Deserialize,The length of the statement  "            tp.AuthenticationType = ParseUtil.ParseEnum<AuthenticationType>(node.Get("authentication"' "")' AuthenticationType.Password); " is 125.
Complex Conditional,Poderosa.Protocols,TelnetSocket,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\TerminalConnection.cs,WriteEscaping,The conditional expression  "t == 0x0D && !(_telnetNewLine && i + 1 < length && buf[offset + i + 1] == 0x0A)"  is complex.
Empty Catch Block,Poderosa.Protocols,SSHSocket,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\SSHSocket.cs,SendKeepAliveData,The method has an empty catch block.
Empty Catch Block,Poderosa.Protocols,SSHSocket,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\SSHSocket.cs,SendKeepAliveData,The method has an empty catch block.
Empty Catch Block,Poderosa.Protocols,TelnetSocket,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\TerminalConnection.cs,SendKeepAliveData,The method has an empty catch block.
Empty Catch Block,Poderosa.Protocols,TelnetSocket,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\TerminalConnection.cs,SendKeepAliveData,The method has an empty catch block.
Magic Number,Poderosa.Protocols,LocalShellUtil,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\LocalShell.cs,PrepareListener,The following statement contains a magic number: _localPort = 20345;
Magic Number,Poderosa.Protocols,Connector,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\LocalShell.cs,Connect,The following statement contains a magic number: Socket.Select(chk' null' null' 100);
Magic Number,Poderosa.Protocols,CygwinUtil,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\LocalShell.cs,GuessRootDirectory,The following statement contains a magic number: IntPtr.Size == 8
Magic Number,Poderosa.Protocols,NetAddressUtil,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\NetUtil.cs,NetAddressIncludesIPAddress,The following statement contains a magic number: bits -= 8;
Magic Number,Poderosa.Protocols,ProtocolOptions,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\ProtocolOptions.cs,DefineItems,The following statement contains a magic number: _sshWindowSize = builder.DefineIntValue(_folder' "sshWindowSize"' 2097152' PreferenceValidatorUtil.PositiveIntegerValidator);
Magic Number,Poderosa.Protocols,ProtocolOptions,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\ProtocolOptions.cs,DefineItems,The following statement contains a magic number: _socketConnectTimeout = builder.DefineIntValue(_folder' "socketConnectTimeout"' 3000' PreferenceValidatorUtil.PositiveIntegerValidator);
Magic Number,Poderosa.Protocols,ProtocolOptions,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\ProtocolOptions.cs,DefineItems,The following statement contains a magic number: _socksPort = builder.DefineIntValue(_folder' "socksPort"' 1080' PreferenceValidatorUtil.PositiveIntegerValidator);
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,Socks,The following statement contains a magic number: _version = 5;
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,Connect,The following statement contains a magic number: _version == 4
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks4,The following statement contains a magic number: wr.Write((byte)4);
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks4,The following statement contains a magic number: byte[] response = new byte[8];
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks4,The following statement contains a magic number: response[1] != 90
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The following statement contains a magic number: byte[] first = new byte[] { 5' 2' 0' 2 };
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The following statement contains a magic number: byte[] first = new byte[] { 5' 2' 0' 2 };
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The following statement contains a magic number: byte[] first = new byte[] { 5' 2' 0' 2 };
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The following statement contains a magic number: s.Send(first' 0' 4' SocketFlags.None);
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The following statement contains a magic number: byte[] response = new byte[4];
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The following statement contains a magic number: int r = s.Receive(response' 0' 2' SocketFlags.None);
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The following statement contains a magic number: r != 2
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The following statement contains a magic number: response[0] != 5
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The following statement contains a magic number: wr.Write((byte)5);
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The following statement contains a magic number: wr.Write((byte)3);
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The following statement contains a magic number: r = s.Receive(response' 0' 4' SocketFlags.None);
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The following statement contains a magic number: response[3] == 3
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,ConnectBySocks5,The following statement contains a magic number: response[3] == 3
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,Sock5Auth,The following statement contains a magic number: byte[] response = new byte[2];
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,Sock5Auth,The following statement contains a magic number: int r = s.Receive(response' 0' 2' SocketFlags.None);
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,Sock5Auth,The following statement contains a magic number: r != 2 || response[1] != 0
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,GetSocks5ErrorMessage,The following statement contains a magic number: switch (code) {                  case 1:                      return "SOCKS server error";                  case 2:                      return "The connection is not allowed.";                  case 3:                      return "Failed to reach the destination network.";                  case 4:                      return "Failed to reach the destination host.";                  case 5:                      return "The access is denied.";                  case 6:                      return "TTL is disposed.";                  case 7:                      return "The SOCKS command is not supported.";                  case 8:                      return "The type of address is not supported.";                  default:                      return String.Format("Unknown Code {0}"' code);              }
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,GetSocks5ErrorMessage,The following statement contains a magic number: switch (code) {                  case 1:                      return "SOCKS server error";                  case 2:                      return "The connection is not allowed.";                  case 3:                      return "Failed to reach the destination network.";                  case 4:                      return "Failed to reach the destination host.";                  case 5:                      return "The access is denied.";                  case 6:                      return "TTL is disposed.";                  case 7:                      return "The SOCKS command is not supported.";                  case 8:                      return "The type of address is not supported.";                  default:                      return String.Format("Unknown Code {0}"' code);              }
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,GetSocks5ErrorMessage,The following statement contains a magic number: switch (code) {                  case 1:                      return "SOCKS server error";                  case 2:                      return "The connection is not allowed.";                  case 3:                      return "Failed to reach the destination network.";                  case 4:                      return "Failed to reach the destination host.";                  case 5:                      return "The access is denied.";                  case 6:                      return "TTL is disposed.";                  case 7:                      return "The SOCKS command is not supported.";                  case 8:                      return "The type of address is not supported.";                  default:                      return String.Format("Unknown Code {0}"' code);              }
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,GetSocks5ErrorMessage,The following statement contains a magic number: switch (code) {                  case 1:                      return "SOCKS server error";                  case 2:                      return "The connection is not allowed.";                  case 3:                      return "Failed to reach the destination network.";                  case 4:                      return "Failed to reach the destination host.";                  case 5:                      return "The access is denied.";                  case 6:                      return "TTL is disposed.";                  case 7:                      return "The SOCKS command is not supported.";                  case 8:                      return "The type of address is not supported.";                  default:                      return String.Format("Unknown Code {0}"' code);              }
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,GetSocks5ErrorMessage,The following statement contains a magic number: switch (code) {                  case 1:                      return "SOCKS server error";                  case 2:                      return "The connection is not allowed.";                  case 3:                      return "Failed to reach the destination network.";                  case 4:                      return "Failed to reach the destination host.";                  case 5:                      return "The access is denied.";                  case 6:                      return "TTL is disposed.";                  case 7:                      return "The SOCKS command is not supported.";                  case 8:                      return "The type of address is not supported.";                  default:                      return String.Format("Unknown Code {0}"' code);              }
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,GetSocks5ErrorMessage,The following statement contains a magic number: switch (code) {                  case 1:                      return "SOCKS server error";                  case 2:                      return "The connection is not allowed.";                  case 3:                      return "Failed to reach the destination network.";                  case 4:                      return "Failed to reach the destination host.";                  case 5:                      return "The access is denied.";                  case 6:                      return "TTL is disposed.";                  case 7:                      return "The SOCKS command is not supported.";                  case 8:                      return "The type of address is not supported.";                  default:                      return String.Format("Unknown Code {0}"' code);              }
Magic Number,Poderosa.Protocols,Socks,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\socks.cs,GetSocks5ErrorMessage,The following statement contains a magic number: switch (code) {                  case 1:                      return "SOCKS server error";                  case 2:                      return "The connection is not allowed.";                  case 3:                      return "Failed to reach the destination network.";                  case 4:                      return "Failed to reach the destination host.";                  case 5:                      return "The access is denied.";                  case 6:                      return "TTL is disposed.";                  case 7:                      return "The SOCKS command is not supported.";                  case 8:                      return "The type of address is not supported.";                  default:                      return String.Format("Unknown Code {0}"' code);              }
Magic Number,Poderosa.Protocols,LocalSSHUtil,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\SSH.cs,SimpleEncrypt,The following statement contains a magic number: byte[] t2 = new byte[t.Length + (16 - (t.Length % 16))];
Magic Number,Poderosa.Protocols,LocalSSHUtil,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\SSH.cs,SimpleEncrypt,The following statement contains a magic number: byte[] t2 = new byte[t.Length + (16 - (t.Length % 16))];
Magic Number,Poderosa.Protocols,LocalSSHUtil,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\SSH.cs,SimpleEncrypt,The following statement contains a magic number: (t.Length % 16) != 0
Magic Number,Poderosa.Protocols,KeyboardInteractiveAuthHanlder,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\SSHSocket.cs,OnData,The following statement contains a magic number: b == 13 || b == 10
Magic Number,Poderosa.Protocols,KeyboardInteractiveAuthHanlder,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\SSHSocket.cs,OnData,The following statement contains a magic number: b == 13 || b == 10
Magic Number,Poderosa.Protocols,KeyboardInteractiveAuthHanlder,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\SSHSocket.cs,OnData,The following statement contains a magic number: _output(new byte[] { 13' 10 });
Magic Number,Poderosa.Protocols,KeyboardInteractiveAuthHanlder,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\SSHSocket.cs,OnData,The following statement contains a magic number: _output(new byte[] { 13' 10 });
Magic Number,Poderosa.Protocols,TelnetOptionWriter,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\Telnet.cs,WriteTerminalSize,The following statement contains a magic number: _strm.WriteByte((byte)(width >> 8));
Magic Number,Poderosa.Protocols,TelnetOptionWriter,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\Telnet.cs,WriteTerminalSize,The following statement contains a magic number: _strm.WriteByte((byte)(height >> 8));
Magic Number,Poderosa.Protocols,TelnetSocket,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\TerminalConnection.cs,WriteEscaping,The following statement contains a magic number: byte[] newbuf = new byte[length * 2];
Magic Number,Poderosa.Protocols,TelnetSocket,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\TerminalConnection.cs,AreYouThere,The following statement contains a magic number: byte[] data = new byte[2];
Magic Number,Poderosa.Protocols,TelnetSocket,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\TerminalConnection.cs,SendBreak,The following statement contains a magic number: byte[] data = new byte[2];
Magic Number,Poderosa.Protocols,TelnetSocket,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\TerminalConnection.cs,SendKeepAliveData,The following statement contains a magic number: byte[] data = new byte[2];
Magic Number,Poderosa.Protocols,TerminalParameter,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\TerminalParameter.cs,TerminalParameter,The following statement contains a magic number: SetTerminalSize(80' 25);
Magic Number,Poderosa.Protocols,TerminalParameter,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\TerminalParameter.cs,TerminalParameter,The following statement contains a magic number: SetTerminalSize(80' 25);
Magic Number,Poderosa.Protocols,TelnetParameter,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\TerminalParameter.cs,TelnetParameter,The following statement contains a magic number: this.Port = 23;
Magic Number,Poderosa.Protocols,SSHLoginParameter,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\TerminalParameter.cs,SSHLoginParameter,The following statement contains a magic number: this.Port = 22;
Missing Default,Poderosa.Protocols,TelnetNegotiator,C:\research\architectureSmells\repos\poderosaproject_poderosa\Protocols\Telnet.cs,Process,The following switch statement is missing a default case: switch (_state) {                  case TelnetCode.IAC:                      if (data == (byte)TelnetCode.SB || ((byte)TelnetCode.WILL <= data && data <= (byte)TelnetCode.DONT))                          _state = (TelnetCode)data;                      else if (data == (byte)TelnetCode.IAC) {                          _state = TelnetCode.NA;                          return ProcessResult.REAL_0xFF;                      }                      else                          _state = TelnetCode.NA;                      break;                  case TelnetCode.SB:                      if (data != (byte)TelnetCode.SE && data != (byte)TelnetOption.NAWS) //IAC SB 0x1F ときてそれっきり、というケースがあった。ホスト側の仕様違反のように見えるが、Poderosaが何かの応答を返すわけではないのでこれで回避                          _sequenceBuffer.WriteByte(data);                      else {                          ProcessSequence(_sequenceBuffer.ToArray());                          _state = TelnetCode.NA;                          _sequenceBuffer.SetLength(0);                      }                      break;                  case TelnetCode.DO:                  case TelnetCode.DONT:                  case TelnetCode.WILL:                  case TelnetCode.WONT:                      ProcessOptionRequest(data);                      _state = TelnetCode.NA;                      break;              }
