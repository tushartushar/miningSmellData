Implementation smell,Namespace,Class,File,Method,Description
Complex Method,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,DumpToFile,Cyclomatic complexity of the method is 31
Long Parameter List,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,WriteFormat,The method has 6 parameters.
Long Statement,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,GetStringsOffset,The length of the statement  "	Console.WriteLine ("str_ofs_delta = temp - start_str_ofs = 0x{0} - 0x{1} = 0x{2}"' temp.ToString ("X8")' FIELDS_NAMES_START.ToString ("X8")' FIELDS_NAMES_OFFSET.ToString ("X8")); " is 178.
Magic Number,uf_extractor2,GenericReader,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\GenericReader.cs,ReadPackedGuid,The following statement contains a magic number: while (i < 9) {  	if ((mask & 1 << i) != 0)  		res += (ulong)ReadByte () << (i * 8);  	i++;  }  
Magic Number,uf_extractor2,GenericReader,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\GenericReader.cs,ReadPackedGuid,The following statement contains a magic number: while (i < 9) {  	if ((mask & 1 << i) != 0)  		res += (ulong)ReadByte () << (i * 8);  	i++;  }  
Magic Number,uf_extractor2,GenericReader,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\GenericReader.cs,ReadPackedGuid,The following statement contains a magic number: if ((mask & 1 << i) != 0)  	res += (ulong)ReadByte () << (i * 8);  
Magic Number,uf_extractor2,GenericReader,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\GenericReader.cs,ReadPackedGuid,The following statement contains a magic number: res += (ulong)ReadByte () << (i * 8);  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,Init,The following statement contains a magic number: Console.WriteLine ("{0} kb readed to filestream"' gr.BaseStream.Length / 1024);  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,GetFieldsInfoStartPos,The following statement contains a magic number: if (i > 0) {  	FIELDS_INFO_START = i - 4;  	Console.WriteLine ("Found fields info start position at 0x{0}"' FIELDS_INFO_START.ToString ("X8"));  	return true;  }  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,GetFieldsInfoStartPos,The following statement contains a magic number: FIELDS_INFO_START = i - 4;  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,DumpToFile,The following statement contains a magic number: for (int i = 0; i < list.Count; ++i) {  	UpdateField uf = list [i];  	if (uf.Pos == 0) {  		if (i > 1) {  			long last_end = list [i - 1].Pos + list [i - 1].Total;  			WriteFormat (sw' list [i - 1].Name' delta' last_end.ToString ("X4")' ""' true);  			if (!list [i - 1].Name.Contains ("UNIT")) {  				sw.WriteLine ("};");  				sw.WriteLine ();  			}  			else {  				sw.WriteLine ();  			}  			switch (list [i].Name) {  			case "ITEM_FIELD_OWNER":  				sw.WriteLine ("enum EItemFields");  				sw.WriteLine ("{");  				break;  			case "CONTAINER_FIELD_NUM_SLOTS":  				sw.WriteLine ("enum EContainerFields");  				sw.WriteLine ("{");  				break;  			case "UNIT_FIELD_CHARM":  				sw.WriteLine ("enum EUnitFields");  				sw.WriteLine ("{");  				break;  			case "OBJECT_FIELD_CREATED_BY":  				sw.WriteLine ("enum EGameObjectFields");  				sw.WriteLine ("{");  				break;  			case "DYNAMICOBJECT_CASTER":  				sw.WriteLine ("enum EDynamicObjectFields");  				sw.WriteLine ("{");  				break;  			case "CORPSE_FIELD_OWNER":  				sw.WriteLine ("enum ECorpseFields");  				sw.WriteLine ("{");  				break;  			}  		}  	}  	delta = String.Empty;  	if (i > 5)  		delta = "OBJECT_END";  	if (list [i].Name.StartsWith ("CONTAINER"))  		delta = "ITEM_END";  	if (list [i].Name.StartsWith ("PLAYER"))  		delta = "UNIT_END";  	WriteFormat (sw' list [i].Name' delta' list [i].Pos.ToString ("X4")' list [i].Descr' false);  }  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,DumpToFile,The following statement contains a magic number: if (i > 5)  	delta = "OBJECT_END";  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,WriteFormat,The following statement contains a magic number: if (end) {  	temp = name.Substring (0' name.IndexOf ("_")) + "_END";  	if (String.IsNullOrEmpty (delta))  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + "0x{0}'"' index);  	else  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + " + 0x{0}'"' index);  }  else {  	temp = name;  	if (String.IsNullOrEmpty (delta))  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + "0x{0}' // {1}"' index' descr);  	else  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + " + 0x{0}' // {1}"' index' descr);  }  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,WriteFormat,The following statement contains a magic number: if (end) {  	temp = name.Substring (0' name.IndexOf ("_")) + "_END";  	if (String.IsNullOrEmpty (delta))  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + "0x{0}'"' index);  	else  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + " + 0x{0}'"' index);  }  else {  	temp = name;  	if (String.IsNullOrEmpty (delta))  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + "0x{0}' // {1}"' index' descr);  	else  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + " + 0x{0}' // {1}"' index' descr);  }  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,WriteFormat,The following statement contains a magic number: if (end) {  	temp = name.Substring (0' name.IndexOf ("_")) + "_END";  	if (String.IsNullOrEmpty (delta))  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + "0x{0}'"' index);  	else  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + " + 0x{0}'"' index);  }  else {  	temp = name;  	if (String.IsNullOrEmpty (delta))  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + "0x{0}' // {1}"' index' descr);  	else  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + " + 0x{0}' // {1}"' index' descr);  }  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,WriteFormat,The following statement contains a magic number: if (end) {  	temp = name.Substring (0' name.IndexOf ("_")) + "_END";  	if (String.IsNullOrEmpty (delta))  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + "0x{0}'"' index);  	else  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + " + 0x{0}'"' index);  }  else {  	temp = name;  	if (String.IsNullOrEmpty (delta))  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + "0x{0}' // {1}"' index' descr);  	else  		sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + " + 0x{0}' // {1}"' index' descr);  }  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,WriteFormat,The following statement contains a magic number: if (String.IsNullOrEmpty (delta))  	sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + "0x{0}'"' index);  else  	sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + " + 0x{0}'"' index);  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,WriteFormat,The following statement contains a magic number: if (String.IsNullOrEmpty (delta))  	sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + "0x{0}'"' index);  else  	sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + " + 0x{0}'"' index);  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,WriteFormat,The following statement contains a magic number: sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + "0x{0}'"' index);  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,WriteFormat,The following statement contains a magic number: sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + " + 0x{0}'"' index);  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,WriteFormat,The following statement contains a magic number: if (String.IsNullOrEmpty (delta))  	sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + "0x{0}' // {1}"' index' descr);  else  	sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + " + 0x{0}' // {1}"' index' descr);  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,WriteFormat,The following statement contains a magic number: if (String.IsNullOrEmpty (delta))  	sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + "0x{0}' // {1}"' index' descr);  else  	sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + " + 0x{0}' // {1}"' index' descr);  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,WriteFormat,The following statement contains a magic number: sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + "0x{0}' // {1}"' index' descr);  
Magic Number,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,WriteFormat,The following statement contains a magic number: sw.WriteLine ("    " + zsp (temp' 42' true) + " = " + delta + " + 0x{0}' // {1}"' index' descr);  
Missing Default,uf_extractor2,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor2\uf_extractor2\Program.cs,DumpToFile,The following switch statement is missing a default case: switch (list [i].Name) {  case "ITEM_FIELD_OWNER":  	sw.WriteLine ("enum EItemFields");  	sw.WriteLine ("{");  	break;  case "CONTAINER_FIELD_NUM_SLOTS":  	sw.WriteLine ("enum EContainerFields");  	sw.WriteLine ("{");  	break;  case "UNIT_FIELD_CHARM":  	sw.WriteLine ("enum EUnitFields");  	sw.WriteLine ("{");  	break;  case "OBJECT_FIELD_CREATED_BY":  	sw.WriteLine ("enum EGameObjectFields");  	sw.WriteLine ("{");  	break;  case "DYNAMICOBJECT_CASTER":  	sw.WriteLine ("enum EDynamicObjectFields");  	sw.WriteLine ("{");  	break;  case "CORPSE_FIELD_OWNER":  	sw.WriteLine ("enum ECorpseFields");  	sw.WriteLine ("{");  	break;  }  
