Implementation smell,Namespace,Class,File,Method,Description
Complex Method,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,DumpToFile,Cyclomatic complexity of the method is 31
Long Parameter List,uf_extractor_struct,UpdateField,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Defines.cs,UpdateField,The method has 5 parameters.
Long Statement,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,GetStringsOffset,The length of the statement  "	Console.WriteLine ("str_ofs_delta = temp - start_str_ofs = 0x{0} - 0x{1} = 0x{2}"' temp.ToString ("X8")' FIELDS_NAMES_START.ToString ("X8")' FIELDS_NAMES_OFFSET.ToString ("X8")); " is 178.
Magic Number,uf_extractor_struct,GenericReader,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\GenericReader.cs,ReadPackedGuid,The following statement contains a magic number: while (i < 9) {  	if ((mask & 1 << i) != 0)  		res += (ulong)ReadByte () << (i * 8);  	i++;  }  
Magic Number,uf_extractor_struct,GenericReader,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\GenericReader.cs,ReadPackedGuid,The following statement contains a magic number: while (i < 9) {  	if ((mask & 1 << i) != 0)  		res += (ulong)ReadByte () << (i * 8);  	i++;  }  
Magic Number,uf_extractor_struct,GenericReader,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\GenericReader.cs,ReadPackedGuid,The following statement contains a magic number: if ((mask & 1 << i) != 0)  	res += (ulong)ReadByte () << (i * 8);  
Magic Number,uf_extractor_struct,GenericReader,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\GenericReader.cs,ReadPackedGuid,The following statement contains a magic number: res += (ulong)ReadByte () << (i * 8);  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,Init,The following statement contains a magic number: Console.WriteLine ("{0} kb readed to filestream"' gr.BaseStream.Length / 1024);  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,GetFieldsInfoStartPos,The following statement contains a magic number: if (i > 0) {  	FIELDS_INFO_START = i - 4;  	Console.WriteLine ("Found fields info start position at 0x{0}"' FIELDS_INFO_START.ToString ("X8"));  	return true;  }  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,GetFieldsInfoStartPos,The following statement contains a magic number: FIELDS_INFO_START = i - 4;  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: if (type == UpdateFieldType.WGUID) {  	if (size == 2)  		sw.WriteLine ("    {0} {1};"' type' name);  	else  		sw.WriteLine ("    {0} {1}[{2}];"' type' name' size / 2);  }  else if (type == UpdateFieldType.WORD_char_2) {  	sw.WriteLine ("    {0} {1}_LOW;"' UpdateFieldType.WORD' name);  	sw.WriteLine ("    {0} {1}_HIGH[{2}];"' UpdateFieldType.@char' name' 2);  }  else {  	if (type == UpdateFieldType.WORD)  		size *= 2;  	if (type == UpdateFieldType.@char)  		size *= 4;  	if (size == 1) {  		sw.WriteLine ("    {0} {1};"' type' name);  	}  	else {  		sw.WriteLine ("    {0} {1}[{2}];"' type' name' size);  	}  }  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: if (type == UpdateFieldType.WGUID) {  	if (size == 2)  		sw.WriteLine ("    {0} {1};"' type' name);  	else  		sw.WriteLine ("    {0} {1}[{2}];"' type' name' size / 2);  }  else if (type == UpdateFieldType.WORD_char_2) {  	sw.WriteLine ("    {0} {1}_LOW;"' UpdateFieldType.WORD' name);  	sw.WriteLine ("    {0} {1}_HIGH[{2}];"' UpdateFieldType.@char' name' 2);  }  else {  	if (type == UpdateFieldType.WORD)  		size *= 2;  	if (type == UpdateFieldType.@char)  		size *= 4;  	if (size == 1) {  		sw.WriteLine ("    {0} {1};"' type' name);  	}  	else {  		sw.WriteLine ("    {0} {1}[{2}];"' type' name' size);  	}  }  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: if (type == UpdateFieldType.WGUID) {  	if (size == 2)  		sw.WriteLine ("    {0} {1};"' type' name);  	else  		sw.WriteLine ("    {0} {1}[{2}];"' type' name' size / 2);  }  else if (type == UpdateFieldType.WORD_char_2) {  	sw.WriteLine ("    {0} {1}_LOW;"' UpdateFieldType.WORD' name);  	sw.WriteLine ("    {0} {1}_HIGH[{2}];"' UpdateFieldType.@char' name' 2);  }  else {  	if (type == UpdateFieldType.WORD)  		size *= 2;  	if (type == UpdateFieldType.@char)  		size *= 4;  	if (size == 1) {  		sw.WriteLine ("    {0} {1};"' type' name);  	}  	else {  		sw.WriteLine ("    {0} {1}[{2}];"' type' name' size);  	}  }  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: if (type == UpdateFieldType.WGUID) {  	if (size == 2)  		sw.WriteLine ("    {0} {1};"' type' name);  	else  		sw.WriteLine ("    {0} {1}[{2}];"' type' name' size / 2);  }  else if (type == UpdateFieldType.WORD_char_2) {  	sw.WriteLine ("    {0} {1}_LOW;"' UpdateFieldType.WORD' name);  	sw.WriteLine ("    {0} {1}_HIGH[{2}];"' UpdateFieldType.@char' name' 2);  }  else {  	if (type == UpdateFieldType.WORD)  		size *= 2;  	if (type == UpdateFieldType.@char)  		size *= 4;  	if (size == 1) {  		sw.WriteLine ("    {0} {1};"' type' name);  	}  	else {  		sw.WriteLine ("    {0} {1}[{2}];"' type' name' size);  	}  }  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: if (type == UpdateFieldType.WGUID) {  	if (size == 2)  		sw.WriteLine ("    {0} {1};"' type' name);  	else  		sw.WriteLine ("    {0} {1}[{2}];"' type' name' size / 2);  }  else if (type == UpdateFieldType.WORD_char_2) {  	sw.WriteLine ("    {0} {1}_LOW;"' UpdateFieldType.WORD' name);  	sw.WriteLine ("    {0} {1}_HIGH[{2}];"' UpdateFieldType.@char' name' 2);  }  else {  	if (type == UpdateFieldType.WORD)  		size *= 2;  	if (type == UpdateFieldType.@char)  		size *= 4;  	if (size == 1) {  		sw.WriteLine ("    {0} {1};"' type' name);  	}  	else {  		sw.WriteLine ("    {0} {1}[{2}];"' type' name' size);  	}  }  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: if (size == 2)  	sw.WriteLine ("    {0} {1};"' type' name);  else  	sw.WriteLine ("    {0} {1}[{2}];"' type' name' size / 2);  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: if (size == 2)  	sw.WriteLine ("    {0} {1};"' type' name);  else  	sw.WriteLine ("    {0} {1}[{2}];"' type' name' size / 2);  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: sw.WriteLine ("    {0} {1}[{2}];"' type' name' size / 2);  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: if (type == UpdateFieldType.WORD_char_2) {  	sw.WriteLine ("    {0} {1}_LOW;"' UpdateFieldType.WORD' name);  	sw.WriteLine ("    {0} {1}_HIGH[{2}];"' UpdateFieldType.@char' name' 2);  }  else {  	if (type == UpdateFieldType.WORD)  		size *= 2;  	if (type == UpdateFieldType.@char)  		size *= 4;  	if (size == 1) {  		sw.WriteLine ("    {0} {1};"' type' name);  	}  	else {  		sw.WriteLine ("    {0} {1}[{2}];"' type' name' size);  	}  }  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: if (type == UpdateFieldType.WORD_char_2) {  	sw.WriteLine ("    {0} {1}_LOW;"' UpdateFieldType.WORD' name);  	sw.WriteLine ("    {0} {1}_HIGH[{2}];"' UpdateFieldType.@char' name' 2);  }  else {  	if (type == UpdateFieldType.WORD)  		size *= 2;  	if (type == UpdateFieldType.@char)  		size *= 4;  	if (size == 1) {  		sw.WriteLine ("    {0} {1};"' type' name);  	}  	else {  		sw.WriteLine ("    {0} {1}[{2}];"' type' name' size);  	}  }  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: if (type == UpdateFieldType.WORD_char_2) {  	sw.WriteLine ("    {0} {1}_LOW;"' UpdateFieldType.WORD' name);  	sw.WriteLine ("    {0} {1}_HIGH[{2}];"' UpdateFieldType.@char' name' 2);  }  else {  	if (type == UpdateFieldType.WORD)  		size *= 2;  	if (type == UpdateFieldType.@char)  		size *= 4;  	if (size == 1) {  		sw.WriteLine ("    {0} {1};"' type' name);  	}  	else {  		sw.WriteLine ("    {0} {1}[{2}];"' type' name' size);  	}  }  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: sw.WriteLine ("    {0} {1}_HIGH[{2}];"' UpdateFieldType.@char' name' 2);  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: if (type == UpdateFieldType.WORD)  	size *= 2;  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: size *= 2;  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: if (type == UpdateFieldType.@char)  	size *= 4;  
Magic Number,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,WriteFormat,The following statement contains a magic number: size *= 4;  
Missing Default,uf_extractor_struct,Extractor,C:\repos\AwkwardDev_StrawberryTools\Source\Client Extractors\uf_extractor_struct\uf_extractor_struct\Program.cs,DumpToFile,The following switch statement is missing a default case: switch (list [i].Name) {  case "ITEM_FIELD_OWNER":  	sw.WriteLine ("struct sItemFields");  	sw.WriteLine ("{");  	break;  case "CONTAINER_FIELD_NUM_SLOTS":  	sw.WriteLine ("struct sContainerFields");  	sw.WriteLine ("{");  	break;  case "UNIT_FIELD_CHARM":  	sw.WriteLine ("struct sUnitFields");  	sw.WriteLine ("{");  	break;  case "OBJECT_FIELD_CREATED_BY":  	sw.WriteLine ("struct sGameObjectFields");  	sw.WriteLine ("{");  	break;  case "DYNAMICOBJECT_CASTER":  	sw.WriteLine ("struct sDynamicObjectFields");  	sw.WriteLine ("{");  	break;  case "CORPSE_FIELD_OWNER":  	sw.WriteLine ("struct sCorpseFields");  	sw.WriteLine ("{");  	break;  case "PLAYER_DUEL_ARBITER":  	sw.WriteLine ("struct sPlayerFields");  	sw.WriteLine ("{");  	break;  }  
