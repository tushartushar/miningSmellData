Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Clide,ProjectNodeFactory,C:\repos\clariuslabs_clide\src\Clide\Solution\Factories\ProjectNodeFactory.cs,Supports,Cyclomatic complexity of the method is 8
Long Parameter List,Clide,ProjectNodeFactory,C:\repos\clariuslabs_clide\src\Clide\Solution\Factories\ProjectNodeFactory.cs,ProjectNodeFactory,The method has 6 parameters. Parameters: services' hierarchyManager' childNodeFactory' adapter' solutionExplorer' expressionEvaluator
Long Parameter List,Clide,SolutionNodeFactory,C:\repos\clariuslabs_clide\src\Clide\Solution\Factories\SolutionNodeFactory.cs,SolutionNodeFactory,The method has 5 parameters. Parameters: services' nodeFactory' adapter' selection' solutionExplorer
Long Parameter List,Clide,ProjectItemNode,C:\repos\clariuslabs_clide\src\Clide\Solution\ProjectItemNode.cs,ProjectItemNode,The method has 5 parameters. Parameters: kind' hierarchyNode' nodeFactory' adapter' solutionExplorer
Long Parameter List,Clide,ProjectNode,C:\repos\clariuslabs_clide\src\Clide\Solution\ProjectNode.cs,ProjectNode,The method has 5 parameters. Parameters: hierarchyNode' nodeFactory' adapter' solutionExplorer' expressionEvaluator
Long Parameter List,Clide,SolutionExplorerNode,C:\repos\clariuslabs_clide\src\Clide\Solution\SolutionExplorerNode.cs,SolutionExplorerNode,The method has 5 parameters. Parameters: nodeKind' hierarchyItem' nodeFactory' adapter' solutionExplorer
Long Parameter List,Clide,SolutionNode,C:\repos\clariuslabs_clide\src\Clide\Solution\SolutionNode.cs,SolutionNode,The method has 6 parameters. Parameters: services' hierarchyNode' nodeFactory' adapter' selection' solutionExplorer
Long Parameter List,Microsoft.VisualStudio.Shell.Interop,IVsSharedProjectReferencesHelper,C:\repos\clariuslabs_clide\src\Clide\Interop\IVsSharedProjectReferencesHelper.cs,ChangeSharedProjectReferences,The method has 5 parameters. Parameters: ReferencingProject' cReferencesToRemove' referencesToRemove' cReferencesToAdd' referencesToAdd
Long Identifier,Clide,Interop,C:\repos\clariuslabs_clide\src\Clide\Components\Interop\ContractNames.cs,,The length of the parameter IVsBooleanSymbolExpressionEvaluator is 35.
Long Statement,Clide,IVsHierarchyItemExtensions,C:\repos\clariuslabs_clide\src\Clide\Extensions\VisualStudio\IVsHierarchyItemExtensions.cs,GetProperty,The length of the statement  "				if (ErrorHandler.Succeeded (item.HierarchyIdentity.NestedHierarchy.GetProperty (item.HierarchyIdentity.NestedItemID' propId' out value)) && " is 139.
Long Statement,Clide,IVsHierarchyItemExtensions,C:\repos\clariuslabs_clide\src\Clide\Extensions\VisualStudio\IVsHierarchyItemExtensions.cs,GetProperty,The length of the statement  "			if (ErrorHandler.Succeeded (item.HierarchyIdentity.Hierarchy.GetProperty (item.HierarchyIdentity.ItemID' propId' out value)) && " is 127.
Long Statement,Clide,ProjectNodeFactory,C:\repos\clariuslabs_clide\src\Clide\Solution\Factories\ProjectNodeFactory.cs,Supports,The length of the statement  "				if (ErrorHandler.Succeeded (item.GetActualHierarchy ().GetGuidProperty ((uint)VSConstants.VSITEMID.Root' (int)__VSHPROPID.VSHPROPID_ProjectIDGuid' out guid)) && " is 160.
Long Statement,Clide,ProjectNodeFactory,C:\repos\clariuslabs_clide\src\Clide\Solution\Factories\ProjectNodeFactory.cs,Supports,The length of the statement  "					if (ErrorHandler.Succeeded (((IVsSolution4)solution.Value).EnsureProjectIsLoaded (ref guid' (uint)__VSBSLFLAGS.VSBSLFLAGS_None))) " is 129.
Long Statement,Clide,ProjectNodeFactory,C:\repos\clariuslabs_clide\src\Clide\Solution\Factories\ProjectNodeFactory.cs,Supports,The length of the statement  "			if (extenderObject != null && extenderObject.GetType ().FullName == "Microsoft.VisualStudio.Project.Automation.OAProject") " is 122.
Long Statement,Clide,SolutionExplorerNode,C:\repos\clariuslabs_clide\src\Clide\Solution\SolutionExplorerNode.cs,Select,The length of the statement  "				var selectionType = allowMultiple ? vsUISelectionType.vsUISelectionTypeToggle : vsUISelectionType.vsUISelectionTypeSelect; " is 122.
Long Statement,Clide.Components.Interop,VsUIHierarchyWindowProvider,C:\repos\clariuslabs_clide\src\Clide\Components\Interop\VsUIHierarchyWindowProvider.cs,GetHierarchyWindow,The length of the statement  "			if (ErrorHandler.Succeeded (uiShell.FindToolWindow ((uint)__VSFINDTOOLWIN.FTW_fForceCreate' ref persistenceSlot' out frame)) && frame != null) " is 142.
Long Statement,Clide.Interop,VsHierarchySelection,C:\repos\clariuslabs_clide\src\Clide\Interop\VsHierarchySelection.cs,GetActiveHierarchy,The length of the statement  "					ErrorHandler.ThrowOnFailure (monitorSelection.GetCurrentSelection (out selHier' out selId' out selMulti' out selContainer)); " is 124.
Long Statement,Clide.Interop,VsHierarchySelection,C:\repos\clariuslabs_clide\src\Clide\Interop\VsHierarchySelection.cs,GetSelection,The length of the statement  "					ErrorHandler.ThrowOnFailure (monitorSelection.GetCurrentSelection (out selHier' out selId' out selMulti' out selContainer)); " is 124.
Long Statement,Clide.Interop,VsSolutionSelection,C:\repos\clariuslabs_clide\src\Clide\Interop\VsSolutionSelection.cs,GetActiveHierarchy,The length of the statement  "				if (ErrorHandler.Failed (hierarchyWindow.FindCommonSelectedHierarchy ((uint)__VSCOMHIEROPTIONS.COMHIEROPT_RootHierarchyOnly' out uiHier))) " is 138.
Long Statement,Clide.Interop,VsToolWindow,C:\repos\clariuslabs_clide\src\Clide\Interop\VsToolWindow.cs,Show,The length of the statement  "            ErrorHandler.ThrowOnFailure(this.uiShell.FindToolWindow((uint)__VSFINDTOOLWIN.FTW_fForceCreate' ref toolWindowId' out frame)); " is 126.
Long Statement,Clide.Interop,VsToolWindow,C:\repos\clariuslabs_clide\src\Clide\Interop\VsToolWindow.cs,Close,The length of the statement  "            ErrorHandler.ThrowOnFailure(this.uiShell.FindToolWindow((uint)__VSFINDTOOLWIN.FTW_fFindFirst' ref toolWindowId' out frame)); " is 124.
Complex Conditional,Clide,ProjectItemNode,C:\repos\clariuslabs_clide\src\Clide\Solution\ProjectItemNode.cs,Equals,The conditional expression  "Object.Equals(null' obj1) ||  				Object.Equals(null' obj2) ||  				obj1.GetType() != obj2.GetType() ||  				Object.Equals(null' obj1.OwningProject) ||  				Object.Equals(null' obj2.OwningProject)"  is complex.
