Implementation smell,Namespace,Class,File,Method,Description
Long Method,Clide,SettingsManager,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Settings\SettingsManager.cs,Read,The method has 100 lines of code.
Complex Method,Clide,VsUIShellExtensions,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Extensions\VsUIShellExtensions.cs,ToOleDefault,Cyclomatic complexity of the method is 8
Complex Method,Clide,SettingsManager,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Settings\SettingsManager.cs,Read,Cyclomatic complexity of the method is 10
Long Parameter List,Clide,DevEnvImpl,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\DevEnvImpl.cs,DevEnvImpl,The method has 8 parameters. Parameters: serviceLocator' dialogFactory' messageBox' errorsManager' outputWindow' status' devEnvInfo' context
Long Parameter List,Clide,VsUIShellExtensions,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Extensions\VsUIShellExtensions.cs,ShowMessageBox,The method has 6 parameters. Parameters: shell' message' title' button' icon' defaultResult
Long Parameter List,Clide,VsUIShellExtensions,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Extensions\VsUIShellExtensions.cs,Prompt,The method has 6 parameters. Parameters: shell' message' title' button' icon' defaultResult
Long Parameter List,Clide,ProjectNodeFactory,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Solution\Factories\ProjectNodeFactory.cs,ProjectNodeFactory,The method has 8 parameters. Parameters: services' hierarchyManager' childNodeFactory' adapter' solutionExplorer' jtc' vsSolution' expressionEvaluator
Long Parameter List,Clide,SolutionExplorerNodeFactory,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Solution\Factories\SolutionExplorerNodeFactory.cs,SolutionExplorerNodeFactory,The method has 6 parameters. Parameters: defaultFactories' customFactories' adapter' jtc' solutionExplorer' hierarchyManager
Long Parameter List,Clide,SolutionNodeFactory,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Solution\Factories\SolutionNodeFactory.cs,SolutionNodeFactory,The method has 5 parameters. Parameters: services' nodeFactory' adapter' selection' solutionExplorer
Long Parameter List,Clide,ProjectItemNode,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Solution\ProjectItemNode.cs,ProjectItemNode,The method has 5 parameters. Parameters: kind' hierarchyNode' nodeFactory' adapter' solutionExplorer
Long Parameter List,Clide,ProjectNode,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Solution\ProjectNode.cs,ProjectNode,The method has 6 parameters. Parameters: hierarchyNode' nodeFactory' adapter' solutionExplorer' expressionEvaluator' flavorHierarchy
Long Parameter List,Clide,SolutionExplorerNode,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Solution\SolutionExplorerNode.cs,SolutionExplorerNode,The method has 5 parameters. Parameters: nodeKind' hierarchyItem' nodeFactory' adapter' solutionExplorer
Long Parameter List,Clide,SolutionNode,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Solution\SolutionNode.cs,SolutionNode,The method has 6 parameters. Parameters: services' hierarchyNode' nodeFactory' adapter' selection' solutionExplorer
Long Parameter List,Clide,MessageBoxService,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\UI\MessageBoxService.cs,Show,The method has 5 parameters. Parameters: message' title' button' icon' defaultResult
Long Parameter List,Clide,MessageBoxService,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\UI\MessageBoxService.cs,Prompt,The method has 5 parameters. Parameters: message' title' button' icon' defaultResult
Long Parameter List,Clide.Adapters,MsBuildAdapter,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Adapters\MsBuildAdapter.cs,MsBuildAdapter,The method has 5 parameters. Parameters: vsSolution' nodeFactory' solutionExplorer' hierarchyItemManager' jtc
Long Parameter List,Microsoft.VisualStudio.Shell.Interop,IVsSharedProjectReferencesHelper,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Interop\IVsSharedProjectReferencesHelper.cs,ChangeSharedProjectReferences,The method has 5 parameters. Parameters: ReferencingProject' cReferencesToRemove' referencesToRemove' cReferencesToAdd' referencesToAdd
Long Identifier,Clide,Interop,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Components\Interop\ContractNames.cs,,The length of the parameter IVsBooleanSymbolExpressionEvaluator is 35.
Long Identifier,Clide.Components.Interop,VsBooleanSymbolExpressionEvaluatorProvider,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Components\Interop\VsBooleanSymbolExpressionEvaluatorProvider.cs,,The length of the parameter BooleanSymbolExpressionEvaluatorClsid is 37.
Long Statement,Clide,DevEnvInfoProvider,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\DevEnvInfoProvider.cs,GetDevEnvInfo,The length of the statement  "            var workloadsList = workloads?.Split(new string[] { "'" }' StringSplitOptions.RemoveEmptyEntries) ?? Enumerable.Empty<string>(); " is 128.
Long Statement,Clide,DevEnvInfoProvider,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\DevEnvInfoProvider.cs,GetDevEnvInfo,The length of the statement  "            var packagesList = packages?.Split(new string[] { "'" }' StringSplitOptions.RemoveEmptyEntries) ?? Enumerable.Empty<string>(); " is 126.
Long Statement,Clide,DevEnvInfoProvider,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\DevEnvInfoProvider.cs,GetDevEnvInfo,The length of the statement  "                Version = Version.TryParse(vsAppId.GetProperty<string>(VSAPropID.VSAPROPID_IsolationInstallationVersion)' out var version) ? version : default(Version)' " is 152.
Long Statement,Clide,DiagnosticsLogProvider,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\DiagnosticsLogProvider.cs,GetLoggersAsync,The length of the statement  "            return Task.FromResult<IImmutableSet<ILogger>>(ImmutableHashSet<ILogger>.Empty.Add(logging.CreateLogger(project.FullPath))); " is 124.
Long Statement,Clide,IVsHierarchyItemExtensions,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Extensions\VisualStudio\IVsHierarchyItemExtensions.cs,GetProperty,The length of the statement  "                if (ErrorHandler.Succeeded(item.HierarchyIdentity.NestedHierarchy.GetProperty(item.HierarchyIdentity.NestedItemID' propId' out value)) && " is 137.
Long Statement,Clide,IVsHierarchyItemExtensions,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Extensions\VisualStudio\IVsHierarchyItemExtensions.cs,GetProperty,The length of the statement  "            if (ErrorHandler.Succeeded(item.HierarchyIdentity.Hierarchy.GetProperty(item.HierarchyIdentity.ItemID' propId' out value)) && " is 125.
Long Statement,Clide,ProjectNodeFactory,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Solution\Factories\ProjectNodeFactory.cs,Supports,The length of the statement  "                    if (ErrorHandler.Succeeded(item.GetActualHierarchy().GetGuidProperty((uint)VSConstants.VSITEMID.Root' (int)__VSHPROPID.VSHPROPID_ProjectIDGuid' out guid)) && " is 157.
Long Statement,Clide,ProjectNodeFactory,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Solution\Factories\ProjectNodeFactory.cs,Supports,The length of the statement  "                        if (ErrorHandler.Succeeded(((IVsSolution4)solution.GetValue()).EnsureProjectIsLoaded(ref guid' (uint)__VSBSLFLAGS.VSBSLFLAGS_None))) " is 132.
Long Statement,Clide,ProjectNodeFactory,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Solution\Factories\ProjectNodeFactory.cs,Supports,The length of the statement  "            if (extenderObject != null && extenderObject.GetType().FullName == "Microsoft.VisualStudio.Project.Automation.OAProject") " is 121.
Long Statement,Clide,ProjectNode,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Solution\ProjectNode.cs,Supports,The length of the statement  "                ErrorHandler.Succeeded(Hierarchy.GetProperty(VSConstants.VSITEMID_ROOT' (int)__VSHPROPID5.VSHPROPID_ProjectCapabilities' out var projectCapabilitiesObject))) " is 157.
Long Statement,Clide,SolutionExplorerNode,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Solution\SolutionExplorerNode.cs,Select,The length of the statement  "                var selectionType = allowMultiple ? vsUISelectionType.vsUISelectionTypeToggle : vsUISelectionType.vsUISelectionTypeSelect; " is 122.
Long Statement,Clide.Adapters,MsBuildAdapter,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Adapters\MsBuildAdapter.cs,Adapt,The length of the statement  "                return (IProjectNode)nodeFactory.Value.CreateNode(hierarchyItemManager.GetValue().GetHierarchyItem(hierarchy' VSConstants.VSITEMID_ROOT)); " is 138.
Long Statement,Clide.Components.Interop,VsUIHierarchyWindowProvider,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Components\Interop\VsUIHierarchyWindowProvider.cs,GetHierarchyWindow,The length of the statement  "            if (ErrorHandler.Succeeded(uiShell.FindToolWindow((uint)__VSFINDTOOLWIN.FTW_fForceCreate' ref persistenceSlot' out frame)) && frame != null) " is 140.
Long Statement,Clide.Interop,VsHierarchySelection,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Interop\VsHierarchySelection.cs,GetActiveHierarchy,The length of the statement  "                    ErrorHandler.ThrowOnFailure(monitorSelection.GetCurrentSelection(out selHier' out var selId' out var selMulti' out selContainer)); " is 130.
Long Statement,Clide.Interop,VsHierarchySelection,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Interop\VsHierarchySelection.cs,GetSelection,The length of the statement  "                    ErrorHandler.ThrowOnFailure(monitorSelection.GetCurrentSelection(out selHier' out var selId' out var selMulti' out selContainer)); " is 130.
Long Statement,Clide.Interop,VsSolutionSelection,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Interop\VsSolutionSelection.cs,GetActiveHierarchy,The length of the statement  "                if (ErrorHandler.Failed(hierarchyWindow.FindCommonSelectedHierarchy((uint)__VSCOMHIEROPTIONS.COMHIEROPT_RootHierarchyOnly' out var uiHier)) ||  " is 142.
Long Statement,Clide.Interop,VsToolWindow,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Interop\VsToolWindow.cs,Show,The length of the statement  "            ErrorHandler.ThrowOnFailure(uiShell.FindToolWindow((uint)__VSFINDTOOLWIN.FTW_fForceCreate' ref toolWindowId' out frame)); " is 121.
Complex Conditional,Clide,ProjectItemNode,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Solution\ProjectItemNode.cs,Equals,The conditional expression  "Object.Equals(null' obj1) ||                  Object.Equals(null' obj2) ||                  obj1.GetType() != obj2.GetType() ||                  Object.Equals(null' obj1.OwningProject) ||                  Object.Equals(null' obj2.OwningProject)"  is complex.
Magic Number,Clide,DevEnvImpl,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\DevEnvImpl.cs,Exit,The following statement contains a magic number: jtf.Run(async () =>               {                  await jtf.SwitchToMainThreadAsync();                  var dte = ServiceLocator.GetService<DTE>();                    if (saveAll)                      dte.ExecuteCommand("File.SaveAll");                    // Just to be clean on exit' wait for pending builds to cancel.                  // VS will exit anyway if we don't' but this is safer.                  while (dte.Solution.SolutionBuild.BuildState == vsBuildState.vsBuildStateInProgress)                  {                      // Sometimes when in the middle of some long-running build' the cancel command                       // may not kick in immediately. We re-issue it after a bit.                      dte.ExecuteCommand("Build.Cancel");                      await System.Threading.Tasks.Task.Delay(100);                  }                    dte.Quit();              });
Magic Number,Clide,DevEnvImpl,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\DevEnvImpl.cs,Restart,The following statement contains a magic number: return jtf.Run(async () =>               {                  await jtf.SwitchToMainThreadAsync();                  var dte = ServiceLocator.GetService<DTE>();                    if (saveAll)                      dte.ExecuteCommand("File.SaveAll");                    // Just to be clean on exit' wait for pending builds to cancel.                  while (dte.Solution.SolutionBuild.BuildState == vsBuildState.vsBuildStateInProgress)                  {                      // Sometimes when in the middle of some long-running build' the cancel command                       // may not kick in immediately. We re-issue it after a bit.                      dte.ExecuteCommand("Build.Cancel");                      await System.Threading.Tasks.Task.Delay(100);                  }                    var shell = ServiceLocator.GetService<SVsShell' IVsShell4>();                  var result = shell.Restart((uint)__VSRESTARTTYPE.RESTART_Normal);                    return ErrorHandler.Succeeded(result);              });
Magic Number,Clide,VsUIShellExtensions,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Extensions\VsUIShellExtensions.cs,FromOle,The following statement contains a magic number: switch (value)              {                  case 1:                      return MessageBoxResult.OK;                    case 2:                      return MessageBoxResult.Cancel;                    case 6:                      return MessageBoxResult.Yes;                    case 7:                      return MessageBoxResult.No;              }
Magic Number,Clide,VsUIShellExtensions,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Extensions\VsUIShellExtensions.cs,FromOle,The following statement contains a magic number: switch (value)              {                  case 1:                      return MessageBoxResult.OK;                    case 2:                      return MessageBoxResult.Cancel;                    case 6:                      return MessageBoxResult.Yes;                    case 7:                      return MessageBoxResult.No;              }
Magic Number,Clide,VsUIShellExtensions,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Extensions\VsUIShellExtensions.cs,FromOle,The following statement contains a magic number: switch (value)              {                  case 1:                      return MessageBoxResult.OK;                    case 2:                      return MessageBoxResult.Cancel;                    case 6:                      return MessageBoxResult.Yes;                    case 7:                      return MessageBoxResult.No;              }
Magic Number,Clide,SettingsManager,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Settings\SettingsManager.cs,Read,The following statement contains a magic number: var mappedMethods = settingsType                          // Get all the interfaces implemented by the type                          .GetInterfaces()                          // The interfaces map contains the methods on the target class where the interface is implemented                          .Select(iface => settingsType.GetInterfaceMap(iface))                          // We need to shred this information into Property > getter maps' so we can retrieve the                           // attributes associated with the property on the interface itself.                          .SelectMany(interfaceMap => interfaceMap.InterfaceMethods                              // We're only interested in property getters/setters.                              .Where(interfaceMethod => interfaceMethod.Name.StartsWith("get_"))                              // Get a map of interface method => target method that is easier to lookup.                              .Select(interfaceMethod => new                              {                                  // Get the declaring property for the interface getter method.                                  InterfaceProperty = interfaceMethod.DeclaringType.GetProperty(interfaceMethod.Name.Substring(4))'                                  // Match the target getter on the class' which in C# spec is a match of Name + parameters.                                  TargetMethod = interfaceMap.TargetMethods.FirstOrDefault(targetMethod =>                                      targetMethod.Name == interfaceMethod.Name &&                                      targetMethod.GetParameters().SequenceEqual(interfaceMethod.GetParameters()))                              })                              // Finally' filter out those where we couldn't find the property or the target getter.                              .Where(map => map.InterfaceProperty != null && map.TargetMethod != null));
Missing Default,Clide,VsUIShellExtensions,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Extensions\VsUIShellExtensions.cs,ToOleDefault,The following switch statement is missing a default case: switch (button)              {                  case MessageBoxButton.OK:                      return OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST;                    case MessageBoxButton.OKCancel:                      if (defaultResult == MessageBoxResult.Cancel)                          return OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_SECOND;                        return OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST;                    case MessageBoxButton.YesNoCancel:                      if (defaultResult == MessageBoxResult.No)                          return OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_SECOND;                      if (defaultResult == MessageBoxResult.Cancel)                          return OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_THIRD;                        return OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST;                    case MessageBoxButton.YesNo:                      if (defaultResult == MessageBoxResult.No)                          return OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_SECOND;                        return OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST;              }
Missing Default,Clide,VsUIShellExtensions,D:\research\architectureSmells\repos\clariuslabs_clide\src\Clide\Extensions\VsUIShellExtensions.cs,FromOle,The following switch statement is missing a default case: switch (value)              {                  case 1:                      return MessageBoxResult.OK;                    case 2:                      return MessageBoxResult.Cancel;                    case 6:                      return MessageBoxResult.Yes;                    case 7:                      return MessageBoxResult.No;              }
