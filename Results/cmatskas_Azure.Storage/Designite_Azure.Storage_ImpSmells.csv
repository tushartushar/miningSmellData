Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Azure.Storage,ProgressRecorder,C:\repos\cmatskas_Azure.Storage\Azure.Storage\ProgressRecorder.cs,ToString,The length of the statement  "            return $"Transferred bytes: {LatestBytesTransferred}; Transfered: {LatestNumberOfFilesTransferred}; Skipped: {LatestNumberOfFilesSkipped}' Failed: {LatestNumberOfFilesFailed}"; " is 176.
Long Statement,Azure.Storage,Validate,C:\repos\cmatskas_Azure.Storage\Azure.Storage\Validate.cs,BlobContainerName,The length of the statement  "					"Every dash (-) character must be immediately preceded and followed by a letter or number; consecutive dashes are not permitted in container names. " + " is 151.
Long Statement,Azure.Storage,Validate,C:\repos\cmatskas_Azure.Storage\Azure.Storage\Validate.cs,QueueName,The length of the statement  "					"The first and last letters in the queue name must be alphanumeric. The dash (-) character cannot be the first or last character. Consecutive dash characters are not permitted in the queue name. " + " is 198.
Magic Number,Azure.Storage,BlobDataManager,C:\repos\cmatskas_Azure.Storage\Azure.Storage\BlobDataManager.cs,UploadFileToBlobAsync,The following statement contains a magic number: TransferManager.Configurations.ParallelOperations = 64;
Magic Number,Azure.Storage,TableStorageAsync<T>,C:\repos\cmatskas_Azure.Storage\Azure.Storage\TableStorageAsync.cs,TableStorageAsync,The following statement contains a magic number: var requestOptions = new TableRequestOptions  		    {  		        RetryPolicy = new ExponentialRetry(TimeSpan.FromSeconds(1)' 3)  		    };
Magic Number,Azure.Storage,TableStorageAsync<T>,C:\repos\cmatskas_Azure.Storage\Azure.Storage\TableStorageAsync.cs,DeleteEntitiesByPartitionKeyAsync,The following statement contains a magic number: foreach (var entity in results)  		    {  		        batchOperation.Delete(entity);  		        counter++;                    //Batch operations are limited to 100 items                  //when we reach 100' we commit and clear the operation                  if (counter == 100)                  {                      await cloudTable.ExecuteBatchAsync(batchOperation);                      batchOperation = new TableBatchOperation();                      counter = 0;                  }  		    }
Magic Number,Azure.Storage,TableStorageAsync<T>,C:\repos\cmatskas_Azure.Storage\Azure.Storage\TableStorageAsync.cs,DeleteEntitiesByRowKeyAsync,The following statement contains a magic number: foreach (var entity in results)              {                  batchOperation.Delete(entity);                  counter++;                    //Batch operations are limited to 100 items                  //when we reach 100' we commit and clear the operation                  if (counter == 100)                  {                      await cloudTable.ExecuteBatchAsync(batchOperation);                      batchOperation = new TableBatchOperation();                      counter = 0;                  }              }
Magic Number,Azure.Storage,TableStorage<T>,C:\repos\cmatskas_Azure.Storage\Azure.Storage\TableStorage.cs,TableStorage,The following statement contains a magic number: var requestOptions = new TableRequestOptions  		    {  		        RetryPolicy = new ExponentialRetry(TimeSpan.FromSeconds(1)' 3)  		    };
Magic Number,Azure.Storage,TableStorage<T>,C:\repos\cmatskas_Azure.Storage\Azure.Storage\TableStorage.cs,DeleteEntitiesByPartitionKey,The following statement contains a magic number: foreach (var entity in results)  		    {  		        batchOperation.Delete(entity);  		        counter++;                    //Batch operations are limited to 100 items                  //when we reach 100' we commit and clear the operation                  if (counter == 100)                  {                      cloudTable.ExecuteBatch(batchOperation);                      batchOperation = new TableBatchOperation();                      counter = 0;                  }  		    }
Magic Number,Azure.Storage,TableStorage<T>,C:\repos\cmatskas_Azure.Storage\Azure.Storage\TableStorage.cs,DeleteEntitiesByRowKey,The following statement contains a magic number: foreach (var entity in results)              {                  batchOperation.Delete(entity);                  counter++;                    //Batch operations are limited to 100 items                  //when we reach 100' we commit and clear the operation                  if (counter == 100)                  {                      cloudTable.ExecuteBatch(batchOperation);                      batchOperation = new TableBatchOperation();                      counter = 0;                  }              }
Magic Number,Azure.Storage,Validate,C:\repos\cmatskas_Azure.Storage\Azure.Storage\Validate.cs,BlobName,The following statement contains a magic number: if (paramValue.Length > 1024)  			{  				throw new ArgumentException("Blob names must conform to these rules: " +  					"Must be from 1 to 1024 characters long."' paramName ?? "");  			}
