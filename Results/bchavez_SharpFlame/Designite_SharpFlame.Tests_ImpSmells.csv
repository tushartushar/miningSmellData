Implementation smell,Namespace,Class,File,Method,Description
Long Method,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The method has 235 lines of code.
Complex Method,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseSettingsIni,Cyclomatic complexity of the method is 11
Complex Method,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseDroidIni,Cyclomatic complexity of the method is 21
Complex Method,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseStructIni,Cyclomatic complexity of the method is 9
Long Statement,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The length of the statement  "            //	        4200                  3    7    6    5        2               1       11        14      45  128     54  128     54  140 " is 130.
Long Statement,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The length of the statement  "            //[PolygonFlags] [Number of Points] [P1] [P2] [P3] [frames]  [playbackRate]  [width]  [height]    [VU] [VV]   [VU] [VV]   [VU] [VV] " is 131.
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_campaign_section,The following statement contains a magic number: result.Data.Length.Should().Be(7);
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_campaign_section,The following statement contains a magic number: result.Data[3].Should().Be("wrf/audio.wrf");
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_player_directive,The following statement contains a magic number: result.Should().Be(4);
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_type_directive,The following statement contains a magic number: result.Should().Be( 18 );
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_level_section,The following statement contains a magic number: result.Players.Should().Be(4);
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_level_section,The following statement contains a magic number: result.Type.Should().Be(18);
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_level_with_mutiple_game_directives,The following statement contains a magic number: result.Players.Should().Be( 2 );
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_level_with_mutiple_game_directives,The following statement contains a magic number: result.Type.Should().Be( 19 );
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_tinny_war_lev_file,The following statement contains a magic number: result.Levels.Length.Should().Be(3);
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_tinny_war_lev_file,The following statement contains a magic number: result.Levels[1].Players.Should().Be(2);
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_tinny_war_lev_file,The following statement contains a magic number: result.Levels[0].Type.Should().Be( 14 );
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_tinny_war_lev_file,The following statement contains a magic number: result.Levels[1].Type.Should().Be( 18 );
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_tinny_war_lev_file,The following statement contains a magic number: result.Levels[2].Type.Should().Be( 19 );
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_tinny_war_lev_file,The following statement contains a magic number: result.Levels[2].Type.Should().Be( 19 );
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_tinny_war_lev_file,The following statement contains a magic number: result.Levels[2].Dataset.Should().Be( "MULTI_T3_C1" );
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_tinny_war_lev_file,The following statement contains a magic number: result.Levels[2].Name.Should().Be( "Tinny-War-T3" );
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_tinny_war_lev_file,The following statement contains a magic number: result.Levels[1].Data.Count().Should().Be( 2 );
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_addon_lev,The following statement contains a magic number: levfile.Campaigns.Length.Should().Be(9);
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,can_parse_addon_lev,The following statement contains a magic number: levfile.Levels.Length.Should().Be(114);
Magic Number,SharpFlame.Tests.Parser,Lev2ParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\Lev2ParserTests.cs,benchmark,The following statement contains a magic number: i < 1000
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,CanParseCampaign,The following statement contains a magic number: result.Data.Count.Should ().Be (7);
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,CanParseCampaign,The following statement contains a magic number: result.Data [4].Should ().Be ("wrf/piestats.wrf");
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,CanParseLevel,The following statement contains a magic number: result.Players.Should ().Be (2);
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,CanParseLevel,The following statement contains a magic number: result.Type.Should ().Be (14);
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,CanParseLevel,The following statement contains a magic number: result.Data.Count.Should ().Be (2);
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,CanParseAddonLev,The following statement contains a magic number: levfile.Campaigns.Count.Should ().Be (9);
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,CanParseAddonLev,The following statement contains a magic number: levfile.Campaigns [0].Data [3].Should ().Be ("wrf/audio.wrf");
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,CanParseAddonLev,The following statement contains a magic number: levfile.Campaigns [4].Data [0].Should ().Be ("wrf/vidmem2.wrf");
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,CanParseAddonLev,The following statement contains a magic number: levfile.Levels.Count.Should ().Be (114);
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,CanParseTinnyWarLev,The following statement contains a magic number: levfile.Levels.Count.Should ().Be (3);
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,CanParseTinnyWarLev,The following statement contains a magic number: levfile.Levels [0].Players.Should ().Be (2);
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,CanParseTinnyWarLev,The following statement contains a magic number: levfile.Levels [0].Type.Should ().Be (14);
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,CanParseTinnyWarLev,The following statement contains a magic number: levfile.Levels [0].Data.Count.Should ().Be (2);
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,CanParseTinnyWarLev,The following statement contains a magic number: levfile.Levels [2].Name.Should ().Be ("Tinny-War-T3");
Magic Number,SharpFlame.Tests.Parser,LevParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\LevParserTests.cs,bechmark,The following statement contains a magic number: i < 1000
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_version_number,The following statement contains a magic number: result.Should().Be(2);
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_pie_header,The following statement contains a magic number: result.Should().Be(10200);
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_texture_directive,The following statement contains a magic number: result.ShouldBeEquivalentTo(new Texture                  {                      Height = 256'                      Width = 256'                      Path = "page-17-droid-weapons.png"                  });
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_texture_directive,The following statement contains a magic number: result.ShouldBeEquivalentTo(new Texture                  {                      Height = 256'                      Width = 256'                      Path = "page-17-droid-weapons.png"                  });
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_levels_directive,The following statement contains a magic number: result.Should().Be(3);
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_xyz_coord,The following statement contains a magic number: result.ShouldBeEquivalentTo(new Point                   {                      X = -52'                      Y = 7'                      Z = 22                  });
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_xyz_coord,The following statement contains a magic number: result.ShouldBeEquivalentTo(new Point                   {                      X = -52'                      Y = 7'                      Z = 22                  });
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_xyz_coord,The following statement contains a magic number: result.ShouldBeEquivalentTo(new Point                   {                      X = -52'                      Y = 7'                      Z = 22                  });
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_points_directive,The following statement contains a magic number: result.Should().Be(56);
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Texture'                      PointCount = 3'                      P1 = 3'                      P2 = 2'                      P3 = 1'                      Frames = 1'                      PlaybackRate = 1'                      TexCoords = new[]                          {                              new TexCoord {U = 237f' V = 220f}'                              new TexCoord {U = 239f' V = 220f}'                              new TexCoord {U = 239f' V = 222f}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Texture'                      PointCount = 3'                      P1 = 3'                      P2 = 2'                      P3 = 1'                      Frames = 1'                      PlaybackRate = 1'                      TexCoords = new[]                          {                              new TexCoord {U = 237f' V = 220f}'                              new TexCoord {U = 239f' V = 220f}'                              new TexCoord {U = 239f' V = 222f}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Texture'                      PointCount = 3'                      P1 = 3'                      P2 = 2'                      P3 = 1'                      Frames = 1'                      PlaybackRate = 1'                      TexCoords = new[]                          {                              new TexCoord {U = 237f' V = 220f}'                              new TexCoord {U = 239f' V = 220f}'                              new TexCoord {U = 239f' V = 222f}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Texture'                      PointCount = 3'                      P1 = 3'                      P2 = 2'                      P3 = 1'                      Frames = 1'                      PlaybackRate = 1'                      TexCoords = new[]                          {                              new TexCoord {U = 237f' V = 220f}'                              new TexCoord {U = 239f' V = 220f}'                              new TexCoord {U = 239f' V = 222f}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Texture'                      PointCount = 3'                      P1 = 3'                      P2 = 2'                      P3 = 1'                      Frames = 1'                      PlaybackRate = 1'                      TexCoords = new[]                          {                              new TexCoord {U = 237f' V = 220f}'                              new TexCoord {U = 239f' V = 220f}'                              new TexCoord {U = 239f' V = 222f}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Texture'                      PointCount = 3'                      P1 = 3'                      P2 = 2'                      P3 = 1'                      Frames = 1'                      PlaybackRate = 1'                      TexCoords = new[]                          {                              new TexCoord {U = 237f' V = 220f}'                              new TexCoord {U = 239f' V = 220f}'                              new TexCoord {U = 239f' V = 222f}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Texture'                      PointCount = 3'                      P1 = 3'                      P2 = 2'                      P3 = 1'                      Frames = 1'                      PlaybackRate = 1'                      TexCoords = new[]                          {                              new TexCoord {U = 237f' V = 220f}'                              new TexCoord {U = 239f' V = 220f}'                              new TexCoord {U = 239f' V = 222f}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Texture'                      PointCount = 3'                      P1 = 3'                      P2 = 2'                      P3 = 1'                      Frames = 1'                      PlaybackRate = 1'                      TexCoords = new[]                          {                              new TexCoord {U = 237f' V = 220f}'                              new TexCoord {U = 239f' V = 220f}'                              new TexCoord {U = 239f' V = 222f}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Texture'                      PointCount = 3'                      P1 = 3'                      P2 = 2'                      P3 = 1'                      Frames = 1'                      PlaybackRate = 1'                      TexCoords = new[]                          {                              new TexCoord {U = 237f' V = 220f}'                              new TexCoord {U = 239f' V = 220f}'                              new TexCoord {U = 239f' V = 222f}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_texcoords,The following statement contains a magic number: var result = PieGrammar.TexCoord.Repeat(3)                  .Parse(data).ToArray();
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_texcoords,The following statement contains a magic number: var truth = new[]                  {                      new TexCoord {U = 237f' V = 220f}'                      new TexCoord {U = 239f' V = 220f}'                      new TexCoord {U = 239f' V = 222f}'                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_texcoords,The following statement contains a magic number: var truth = new[]                  {                      new TexCoord {U = 237f' V = 220f}'                      new TexCoord {U = 239f' V = 220f}'                      new TexCoord {U = 239f' V = 222f}'                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_texcoords,The following statement contains a magic number: var truth = new[]                  {                      new TexCoord {U = 237f' V = 220f}'                      new TexCoord {U = 239f' V = 220f}'                      new TexCoord {U = 239f' V = 222f}'                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_texcoords,The following statement contains a magic number: var truth = new[]                  {                      new TexCoord {U = 237f' V = 220f}'                      new TexCoord {U = 239f' V = 220f}'                      new TexCoord {U = 239f' V = 222f}'                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_texcoords,The following statement contains a magic number: var truth = new[]                  {                      new TexCoord {U = 237f' V = 220f}'                      new TexCoord {U = 239f' V = 220f}'                      new TexCoord {U = 239f' V = 222f}'                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_texcoords,The following statement contains a magic number: var truth = new[]                  {                      new TexCoord {U = 237f' V = 220f}'                      new TexCoord {U = 239f' V = 220f}'                      new TexCoord {U = 239f' V = 222f}'                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Animation | PolygonFlags.Texture'                      PointCount = 3'                      P1 = 7'                      P2 = 6'                      P3 = 5'                      Frames = 2'                      PlaybackRate = 1'                      Width = 11'                      Height = 14'                      TexCoords = new[]                          {                              new TexCoord {U = 45' V = 128}'                              new TexCoord {U = 54' V = 128}'                              new TexCoord {U = 54' V = 140}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Animation | PolygonFlags.Texture'                      PointCount = 3'                      P1 = 7'                      P2 = 6'                      P3 = 5'                      Frames = 2'                      PlaybackRate = 1'                      Width = 11'                      Height = 14'                      TexCoords = new[]                          {                              new TexCoord {U = 45' V = 128}'                              new TexCoord {U = 54' V = 128}'                              new TexCoord {U = 54' V = 140}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Animation | PolygonFlags.Texture'                      PointCount = 3'                      P1 = 7'                      P2 = 6'                      P3 = 5'                      Frames = 2'                      PlaybackRate = 1'                      Width = 11'                      Height = 14'                      TexCoords = new[]                          {                              new TexCoord {U = 45' V = 128}'                              new TexCoord {U = 54' V = 128}'                              new TexCoord {U = 54' V = 140}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Animation | PolygonFlags.Texture'                      PointCount = 3'                      P1 = 7'                      P2 = 6'                      P3 = 5'                      Frames = 2'                      PlaybackRate = 1'                      Width = 11'                      Height = 14'                      TexCoords = new[]                          {                              new TexCoord {U = 45' V = 128}'                              new TexCoord {U = 54' V = 128}'                              new TexCoord {U = 54' V = 140}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Animation | PolygonFlags.Texture'                      PointCount = 3'                      P1 = 7'                      P2 = 6'                      P3 = 5'                      Frames = 2'                      PlaybackRate = 1'                      Width = 11'                      Height = 14'                      TexCoords = new[]                          {                              new TexCoord {U = 45' V = 128}'                              new TexCoord {U = 54' V = 128}'                              new TexCoord {U = 54' V = 140}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Animation | PolygonFlags.Texture'                      PointCount = 3'                      P1 = 7'                      P2 = 6'                      P3 = 5'                      Frames = 2'                      PlaybackRate = 1'                      Width = 11'                      Height = 14'                      TexCoords = new[]                          {                              new TexCoord {U = 45' V = 128}'                              new TexCoord {U = 54' V = 128}'                              new TexCoord {U = 54' V = 140}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Animation | PolygonFlags.Texture'                      PointCount = 3'                      P1 = 7'                      P2 = 6'                      P3 = 5'                      Frames = 2'                      PlaybackRate = 1'                      Width = 11'                      Height = 14'                      TexCoords = new[]                          {                              new TexCoord {U = 45' V = 128}'                              new TexCoord {U = 54' V = 128}'                              new TexCoord {U = 54' V = 140}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Animation | PolygonFlags.Texture'                      PointCount = 3'                      P1 = 7'                      P2 = 6'                      P3 = 5'                      Frames = 2'                      PlaybackRate = 1'                      Width = 11'                      Height = 14'                      TexCoords = new[]                          {                              new TexCoord {U = 45' V = 128}'                              new TexCoord {U = 54' V = 128}'                              new TexCoord {U = 54' V = 140}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Animation | PolygonFlags.Texture'                      PointCount = 3'                      P1 = 7'                      P2 = 6'                      P3 = 5'                      Frames = 2'                      PlaybackRate = 1'                      Width = 11'                      Height = 14'                      TexCoords = new[]                          {                              new TexCoord {U = 45' V = 128}'                              new TexCoord {U = 54' V = 128}'                              new TexCoord {U = 54' V = 140}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Animation | PolygonFlags.Texture'                      PointCount = 3'                      P1 = 7'                      P2 = 6'                      P3 = 5'                      Frames = 2'                      PlaybackRate = 1'                      Width = 11'                      Height = 14'                      TexCoords = new[]                          {                              new TexCoord {U = 45' V = 128}'                              new TexCoord {U = 54' V = 128}'                              new TexCoord {U = 54' V = 140}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Animation | PolygonFlags.Texture'                      PointCount = 3'                      P1 = 7'                      P2 = 6'                      P3 = 5'                      Frames = 2'                      PlaybackRate = 1'                      Width = 11'                      Height = 14'                      TexCoords = new[]                          {                              new TexCoord {U = 45' V = 128}'                              new TexCoord {U = 54' V = 128}'                              new TexCoord {U = 54' V = 140}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Animation | PolygonFlags.Texture'                      PointCount = 3'                      P1 = 7'                      P2 = 6'                      P3 = 5'                      Frames = 2'                      PlaybackRate = 1'                      Width = 11'                      Height = 14'                      TexCoords = new[]                          {                              new TexCoord {U = 45' V = 128}'                              new TexCoord {U = 54' V = 128}'                              new TexCoord {U = 54' V = 140}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_parse_polygon_line_texture_animation,The following statement contains a magic number: var truth = new Polygon                  {                      Flags = PolygonFlags.Animation | PolygonFlags.Texture'                      PointCount = 3'                      P1 = 7'                      P2 = 6'                      P3 = 5'                      Frames = 2'                      PlaybackRate = 1'                      Width = 11'                      Height = 14'                      TexCoords = new[]                          {                              new TexCoord {U = 45' V = 128}'                              new TexCoord {U = 54' V = 128}'                              new TexCoord {U = 54' V = 140}'                          }                  };
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Version.Should().Be( 2 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Type.Should().Be(10200);
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Texture.Height.Should().Be( 255 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Texture.Width.Should().Be( 256 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Points.Length.Should().Be( 13 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons.Length.Should().Be( 36 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Points[12].X.Should().Be( 0 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Points[12].Y.Should().Be( 37 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Points[12].Y.Should().Be( 37 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Points[12].Z.Should().Be( 0 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].Flags.Should().Be( PolygonFlags.Texture );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].PointCount.Should().Be(3 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].PointCount.Should().Be(3 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].P1.Should().Be( 11 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].P1.Should().Be( 11 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].P2.Should().Be( 7 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].P2.Should().Be( 7 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].P3.Should().Be( 12 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].P3.Should().Be( 12 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].TexCoords[2].U.Should().Be( 23 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].TexCoords[2].U.Should().Be( 23 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].TexCoords[2].U.Should().Be( 23 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].TexCoords[2].V.Should().Be( 185 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].TexCoords[2].V.Should().Be( 185 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_simple_piev2,The following statement contains a magic number: pie.Levels[0].Polygons[35].TexCoords[2].V.Should().Be( 185 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Version.Should().Be( 2 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Type.Should().Be( 10200 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Texture.Width.Should().Be( 254 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Texture.Height.Should().Be( 256 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels.Length.Should().Be( 3 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[0].Points.Length.Should().Be( 56 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[1].Points.Length.Should().Be( 8 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Points.Length.Should().Be( 26 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Points.Length.Should().Be( 26 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[0].Points[0].X.Should().Be( -52 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[1].Points[1].Y.Should().Be( 73 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Points[2].Z.Should().Be( 7 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Points[2].Z.Should().Be( 7 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Points[2].Z.Should().Be( 7 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Polygons[1].Flags.Should().Be( PolygonFlags.Texture );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Polygons[1].PointCount.Should().Be( 3 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Polygons[1].PointCount.Should().Be( 3 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Polygons[1].P1.Should().Be( 0 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Polygons[1].P2.Should().Be( 2 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Polygons[1].P2.Should().Be( 2 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Polygons[1].P3.Should().Be( 3);
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Polygons[1].P3.Should().Be( 3);
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Polygons[1].TexCoords[2].U.Should().Be( 3 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Polygons[1].TexCoords[2].U.Should().Be( 3 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Polygons[1].TexCoords[2].U.Should().Be( 3 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Polygons[1].TexCoords[2].V.Should().Be( 243 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Polygons[1].TexCoords[2].V.Should().Be( 243 );
Magic Number,SharpFlame.Tests.Parser,PieParseTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\PieParseTests.cs,can_read_piev2_with_multi_level,The following statement contains a magic number: pie.Levels[2].Polygons[1].TexCoords[2].V.Should().Be( 243 );
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanReadHealthPercent,The following statement contains a magic number: tmpInt.Should ().Be (100);
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseSettingsIni,The following statement contains a magic number: sec.Data.Count.Should ().Be (25);
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseSettingsIni,The following statement contains a magic number: switch (d.Name) {                      case "AutoSave":                          Convert.ToBoolean (d.Data).Should ().Be (true);                          break;                      case "AutoSaveCompress":                          Convert.ToBoolean (d.Data).Should ().Be (false);                          break;                      case "AutoSaveMinInterval":                          Convert.ToInt32 (d.Data).Should ().Be (180);                          break;                      case "AutoSaveMinChanges":                          Convert.ToInt32 (d.Data).Should ().Be (20);                          break;                      case "MinimapCliffColour":                          var color = Rgba.FromString (d.Data);                          color.Red.Should ().Be (1F);                          color.Green.Should ().Be (0.25F);                          color.Blue.Should ().Be (0.25F);                          color.Alpha.Should ().Be (0.5F);                          break;                      case "FOVDefault":                          Convert.ToDouble (d.Data' CultureInfo.InvariantCulture).Should ().Be (0.000666666666666667D);                          break;                      case "FontFamily":                          d.Data.Should ().Be ("DejaVu Serif");                          break;                      case "TilesetsPath":                          d.Data.Should ().Be ("/home/pcdummy/Projekte/wzlobby/SharpFlame/source/Data/tilesets");                          break;                      case "PickOrientation":                          Convert.ToBoolean (d.Data).Should ().Be (true);                          break;                                          }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseSettingsIni,The following statement contains a magic number: switch (d.Name) {                      case "AutoSave":                          Convert.ToBoolean (d.Data).Should ().Be (true);                          break;                      case "AutoSaveCompress":                          Convert.ToBoolean (d.Data).Should ().Be (false);                          break;                      case "AutoSaveMinInterval":                          Convert.ToInt32 (d.Data).Should ().Be (180);                          break;                      case "AutoSaveMinChanges":                          Convert.ToInt32 (d.Data).Should ().Be (20);                          break;                      case "MinimapCliffColour":                          var color = Rgba.FromString (d.Data);                          color.Red.Should ().Be (1F);                          color.Green.Should ().Be (0.25F);                          color.Blue.Should ().Be (0.25F);                          color.Alpha.Should ().Be (0.5F);                          break;                      case "FOVDefault":                          Convert.ToDouble (d.Data' CultureInfo.InvariantCulture).Should ().Be (0.000666666666666667D);                          break;                      case "FontFamily":                          d.Data.Should ().Be ("DejaVu Serif");                          break;                      case "TilesetsPath":                          d.Data.Should ().Be ("/home/pcdummy/Projekte/wzlobby/SharpFlame/source/Data/tilesets");                          break;                      case "PickOrientation":                          Convert.ToBoolean (d.Data).Should ().Be (true);                          break;                                          }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseSettingsIni,The following statement contains a magic number: switch (d.Name) {                      case "AutoSave":                          Convert.ToBoolean (d.Data).Should ().Be (true);                          break;                      case "AutoSaveCompress":                          Convert.ToBoolean (d.Data).Should ().Be (false);                          break;                      case "AutoSaveMinInterval":                          Convert.ToInt32 (d.Data).Should ().Be (180);                          break;                      case "AutoSaveMinChanges":                          Convert.ToInt32 (d.Data).Should ().Be (20);                          break;                      case "MinimapCliffColour":                          var color = Rgba.FromString (d.Data);                          color.Red.Should ().Be (1F);                          color.Green.Should ().Be (0.25F);                          color.Blue.Should ().Be (0.25F);                          color.Alpha.Should ().Be (0.5F);                          break;                      case "FOVDefault":                          Convert.ToDouble (d.Data' CultureInfo.InvariantCulture).Should ().Be (0.000666666666666667D);                          break;                      case "FontFamily":                          d.Data.Should ().Be ("DejaVu Serif");                          break;                      case "TilesetsPath":                          d.Data.Should ().Be ("/home/pcdummy/Projekte/wzlobby/SharpFlame/source/Data/tilesets");                          break;                      case "PickOrientation":                          Convert.ToBoolean (d.Data).Should ().Be (true);                          break;                                          }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseSettingsIni,The following statement contains a magic number: switch (d.Name) {                      case "AutoSave":                          Convert.ToBoolean (d.Data).Should ().Be (true);                          break;                      case "AutoSaveCompress":                          Convert.ToBoolean (d.Data).Should ().Be (false);                          break;                      case "AutoSaveMinInterval":                          Convert.ToInt32 (d.Data).Should ().Be (180);                          break;                      case "AutoSaveMinChanges":                          Convert.ToInt32 (d.Data).Should ().Be (20);                          break;                      case "MinimapCliffColour":                          var color = Rgba.FromString (d.Data);                          color.Red.Should ().Be (1F);                          color.Green.Should ().Be (0.25F);                          color.Blue.Should ().Be (0.25F);                          color.Alpha.Should ().Be (0.5F);                          break;                      case "FOVDefault":                          Convert.ToDouble (d.Data' CultureInfo.InvariantCulture).Should ().Be (0.000666666666666667D);                          break;                      case "FontFamily":                          d.Data.Should ().Be ("DejaVu Serif");                          break;                      case "TilesetsPath":                          d.Data.Should ().Be ("/home/pcdummy/Projekte/wzlobby/SharpFlame/source/Data/tilesets");                          break;                      case "PickOrientation":                          Convert.ToBoolean (d.Data).Should ().Be (true);                          break;                                          }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseSettingsIni,The following statement contains a magic number: switch (d.Name) {                      case "AutoSave":                          Convert.ToBoolean (d.Data).Should ().Be (true);                          break;                      case "AutoSaveCompress":                          Convert.ToBoolean (d.Data).Should ().Be (false);                          break;                      case "AutoSaveMinInterval":                          Convert.ToInt32 (d.Data).Should ().Be (180);                          break;                      case "AutoSaveMinChanges":                          Convert.ToInt32 (d.Data).Should ().Be (20);                          break;                      case "MinimapCliffColour":                          var color = Rgba.FromString (d.Data);                          color.Red.Should ().Be (1F);                          color.Green.Should ().Be (0.25F);                          color.Blue.Should ().Be (0.25F);                          color.Alpha.Should ().Be (0.5F);                          break;                      case "FOVDefault":                          Convert.ToDouble (d.Data' CultureInfo.InvariantCulture).Should ().Be (0.000666666666666667D);                          break;                      case "FontFamily":                          d.Data.Should ().Be ("DejaVu Serif");                          break;                      case "TilesetsPath":                          d.Data.Should ().Be ("/home/pcdummy/Projekte/wzlobby/SharpFlame/source/Data/tilesets");                          break;                      case "PickOrientation":                          Convert.ToBoolean (d.Data).Should ().Be (true);                          break;                                          }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseSettingsIni,The following statement contains a magic number: switch (d.Name) {                      case "AutoSave":                          Convert.ToBoolean (d.Data).Should ().Be (true);                          break;                      case "AutoSaveCompress":                          Convert.ToBoolean (d.Data).Should ().Be (false);                          break;                      case "AutoSaveMinInterval":                          Convert.ToInt32 (d.Data).Should ().Be (180);                          break;                      case "AutoSaveMinChanges":                          Convert.ToInt32 (d.Data).Should ().Be (20);                          break;                      case "MinimapCliffColour":                          var color = Rgba.FromString (d.Data);                          color.Red.Should ().Be (1F);                          color.Green.Should ().Be (0.25F);                          color.Blue.Should ().Be (0.25F);                          color.Alpha.Should ().Be (0.5F);                          break;                      case "FOVDefault":                          Convert.ToDouble (d.Data' CultureInfo.InvariantCulture).Should ().Be (0.000666666666666667D);                          break;                      case "FontFamily":                          d.Data.Should ().Be ("DejaVu Serif");                          break;                      case "TilesetsPath":                          d.Data.Should ().Be ("/home/pcdummy/Projekte/wzlobby/SharpFlame/source/Data/tilesets");                          break;                      case "PickOrientation":                          Convert.ToBoolean (d.Data).Should ().Be (true);                          break;                                          }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseDroidIni,The following statement contains a magic number: iniFile.Count.Should().Be (40);
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseDroidIni,The following statement contains a magic number: switch (d.Name) {                  case "id":                      int.Parse (d.Data).Should ().Be (3693);                      break;                  case "startpos":                      int.Parse (d.Data).Should ().Be (3);                      break;                  case "template":                      d.Data.Should ().Be ("ConstructionDroid");                      break;                  case "position":                      var tmpPosition = XYZInt.FromString (d.Data);                      tmpPosition.X.Should ().Be (9792);                      tmpPosition.Y.Should ().Be (26048);                      tmpPosition.Z.Should ().Be (0);                      break;                  case "rotation":                      var tmpRotation = Rotation.FromString (d.Data);                      tmpRotation.Direction.Should ().Be (0);                      tmpRotation.Pitch.Should ().Be (0);                      tmpRotation.Roll.Should ().Be (0);                      break;                  case "player":                      break;                  case "name":                      break;                  case "health":                      break;                  case "droidtype":                      break;                  case "weapons":                      break;                  case "parts\\body":                      break;                  case "parts\\propulsion":                      break;                  case "parts\\brain":                      break;                  case "parts\\repair":                      break;                  case "parts\\ecm":                      break;                  case "parts\\sensor":                      break;                  case "parts\\construct":                      break;                  case "parts\\weapon\\1":                      break;                  case "parts\\weapon\\2":                      break;                  case "parts\\weapon\\3":                      break;                  }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseDroidIni,The following statement contains a magic number: switch (d.Name) {                  case "id":                      int.Parse (d.Data).Should ().Be (3693);                      break;                  case "startpos":                      int.Parse (d.Data).Should ().Be (3);                      break;                  case "template":                      d.Data.Should ().Be ("ConstructionDroid");                      break;                  case "position":                      var tmpPosition = XYZInt.FromString (d.Data);                      tmpPosition.X.Should ().Be (9792);                      tmpPosition.Y.Should ().Be (26048);                      tmpPosition.Z.Should ().Be (0);                      break;                  case "rotation":                      var tmpRotation = Rotation.FromString (d.Data);                      tmpRotation.Direction.Should ().Be (0);                      tmpRotation.Pitch.Should ().Be (0);                      tmpRotation.Roll.Should ().Be (0);                      break;                  case "player":                      break;                  case "name":                      break;                  case "health":                      break;                  case "droidtype":                      break;                  case "weapons":                      break;                  case "parts\\body":                      break;                  case "parts\\propulsion":                      break;                  case "parts\\brain":                      break;                  case "parts\\repair":                      break;                  case "parts\\ecm":                      break;                  case "parts\\sensor":                      break;                  case "parts\\construct":                      break;                  case "parts\\weapon\\1":                      break;                  case "parts\\weapon\\2":                      break;                  case "parts\\weapon\\3":                      break;                  }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseDroidIni,The following statement contains a magic number: switch (d.Name) {                  case "id":                      int.Parse (d.Data).Should ().Be (3693);                      break;                  case "startpos":                      int.Parse (d.Data).Should ().Be (3);                      break;                  case "template":                      d.Data.Should ().Be ("ConstructionDroid");                      break;                  case "position":                      var tmpPosition = XYZInt.FromString (d.Data);                      tmpPosition.X.Should ().Be (9792);                      tmpPosition.Y.Should ().Be (26048);                      tmpPosition.Z.Should ().Be (0);                      break;                  case "rotation":                      var tmpRotation = Rotation.FromString (d.Data);                      tmpRotation.Direction.Should ().Be (0);                      tmpRotation.Pitch.Should ().Be (0);                      tmpRotation.Roll.Should ().Be (0);                      break;                  case "player":                      break;                  case "name":                      break;                  case "health":                      break;                  case "droidtype":                      break;                  case "weapons":                      break;                  case "parts\\body":                      break;                  case "parts\\propulsion":                      break;                  case "parts\\brain":                      break;                  case "parts\\repair":                      break;                  case "parts\\ecm":                      break;                  case "parts\\sensor":                      break;                  case "parts\\construct":                      break;                  case "parts\\weapon\\1":                      break;                  case "parts\\weapon\\2":                      break;                  case "parts\\weapon\\3":                      break;                  }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseDroidIni,The following statement contains a magic number: switch (d.Name) {                  case "id":                      int.Parse (d.Data).Should ().Be (3693);                      break;                  case "startpos":                      int.Parse (d.Data).Should ().Be (3);                      break;                  case "template":                      d.Data.Should ().Be ("ConstructionDroid");                      break;                  case "position":                      var tmpPosition = XYZInt.FromString (d.Data);                      tmpPosition.X.Should ().Be (9792);                      tmpPosition.Y.Should ().Be (26048);                      tmpPosition.Z.Should ().Be (0);                      break;                  case "rotation":                      var tmpRotation = Rotation.FromString (d.Data);                      tmpRotation.Direction.Should ().Be (0);                      tmpRotation.Pitch.Should ().Be (0);                      tmpRotation.Roll.Should ().Be (0);                      break;                  case "player":                      break;                  case "name":                      break;                  case "health":                      break;                  case "droidtype":                      break;                  case "weapons":                      break;                  case "parts\\body":                      break;                  case "parts\\propulsion":                      break;                  case "parts\\brain":                      break;                  case "parts\\repair":                      break;                  case "parts\\ecm":                      break;                  case "parts\\sensor":                      break;                  case "parts\\construct":                      break;                  case "parts\\weapon\\1":                      break;                  case "parts\\weapon\\2":                      break;                  case "parts\\weapon\\3":                      break;                  }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseDroidIni,The following statement contains a magic number: iniFile[4].Data
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseFeatureIni,The following statement contains a magic number: iniFile [3].Name.Should ().Be ("feature_1493");
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseFeatureIni,The following statement contains a magic number: switch (d.Name) {                  case "id":                      int.Parse (d.Data).Should ().Be (1493);                      break;                  case "position":                      var tmpPosition = XYZInt.FromString (d.Data);                      tmpPosition.X.Should ().Be (2496);                      tmpPosition.Y.Should ().Be (26688);                      tmpPosition.Z.Should ().Be (0);                      break;                      case "rotation":                      var tmpRotation = Rotation.FromString (d.Data);                      tmpRotation.Direction.Should ().Be (0);                      tmpRotation.Pitch.Should ().Be (0);                      tmpRotation.Roll.Should ().Be (0);                      break;                      case "name":                      d.Data.Should ().Be ("AirTrafficControl");                      break;                  default:                      throw new Exception (string.Format ("Invalid ID \"{0}\" value \"{1}\""' d.Name' d.Data));                  }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseFeatureIni,The following statement contains a magic number: switch (d.Name) {                  case "id":                      int.Parse (d.Data).Should ().Be (1493);                      break;                  case "position":                      var tmpPosition = XYZInt.FromString (d.Data);                      tmpPosition.X.Should ().Be (2496);                      tmpPosition.Y.Should ().Be (26688);                      tmpPosition.Z.Should ().Be (0);                      break;                      case "rotation":                      var tmpRotation = Rotation.FromString (d.Data);                      tmpRotation.Direction.Should ().Be (0);                      tmpRotation.Pitch.Should ().Be (0);                      tmpRotation.Roll.Should ().Be (0);                      break;                      case "name":                      d.Data.Should ().Be ("AirTrafficControl");                      break;                  default:                      throw new Exception (string.Format ("Invalid ID \"{0}\" value \"{1}\""' d.Name' d.Data));                  }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseFeatureIni,The following statement contains a magic number: switch (d.Name) {                  case "id":                      int.Parse (d.Data).Should ().Be (1493);                      break;                  case "position":                      var tmpPosition = XYZInt.FromString (d.Data);                      tmpPosition.X.Should ().Be (2496);                      tmpPosition.Y.Should ().Be (26688);                      tmpPosition.Z.Should ().Be (0);                      break;                      case "rotation":                      var tmpRotation = Rotation.FromString (d.Data);                      tmpRotation.Direction.Should ().Be (0);                      tmpRotation.Pitch.Should ().Be (0);                      tmpRotation.Roll.Should ().Be (0);                      break;                      case "name":                      d.Data.Should ().Be ("AirTrafficControl");                      break;                  default:                      throw new Exception (string.Format ("Invalid ID \"{0}\" value \"{1}\""' d.Name' d.Data));                  }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseFeatureIni,The following statement contains a magic number: iniFile[3].Data
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseStructIni,The following statement contains a magic number: iniFile.Count.Should ().Be (2006);
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseStructIni,The following statement contains a magic number: iniFile [2].Name.Should ().Be ("structure_1248");
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseStructIni,The following statement contains a magic number: switch (d.Name) {                  case "id":                      int.Parse (d.Data).Should ().Be (1248);                      break;                  case "startpos":                      int.Parse (d.Data).Should ().Be (5);                      break;                  case "name":                      break;                  case "wall/type":                      int.Parse (d.Data).Should ().Be (0);                      break;                  case "position":                      var tmpPosition = XYZInt.FromString (d.Data);                      tmpPosition.X.Should ().Be (6208);                      tmpPosition.Y.Should ().Be (5440);                      tmpPosition.Z.Should ().Be (0);                      break;                  case "rotation":                      var tmpRotation = Rotation.FromString (d.Data);                      tmpRotation.Direction.Should ().Be (16384);                      tmpRotation.Pitch.Should ().Be (0);                      tmpRotation.Roll.Should ().Be (0);                      break;                  case "modules":                      int.Parse (d.Data).Should ().Be (0);                      break;                  default:                      throw new Exception (string.Format ("Invalid ID \"{0}\" value \"{1}\""' d.Name' d.Data));                  }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseStructIni,The following statement contains a magic number: switch (d.Name) {                  case "id":                      int.Parse (d.Data).Should ().Be (1248);                      break;                  case "startpos":                      int.Parse (d.Data).Should ().Be (5);                      break;                  case "name":                      break;                  case "wall/type":                      int.Parse (d.Data).Should ().Be (0);                      break;                  case "position":                      var tmpPosition = XYZInt.FromString (d.Data);                      tmpPosition.X.Should ().Be (6208);                      tmpPosition.Y.Should ().Be (5440);                      tmpPosition.Z.Should ().Be (0);                      break;                  case "rotation":                      var tmpRotation = Rotation.FromString (d.Data);                      tmpRotation.Direction.Should ().Be (16384);                      tmpRotation.Pitch.Should ().Be (0);                      tmpRotation.Roll.Should ().Be (0);                      break;                  case "modules":                      int.Parse (d.Data).Should ().Be (0);                      break;                  default:                      throw new Exception (string.Format ("Invalid ID \"{0}\" value \"{1}\""' d.Name' d.Data));                  }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseStructIni,The following statement contains a magic number: switch (d.Name) {                  case "id":                      int.Parse (d.Data).Should ().Be (1248);                      break;                  case "startpos":                      int.Parse (d.Data).Should ().Be (5);                      break;                  case "name":                      break;                  case "wall/type":                      int.Parse (d.Data).Should ().Be (0);                      break;                  case "position":                      var tmpPosition = XYZInt.FromString (d.Data);                      tmpPosition.X.Should ().Be (6208);                      tmpPosition.Y.Should ().Be (5440);                      tmpPosition.Z.Should ().Be (0);                      break;                  case "rotation":                      var tmpRotation = Rotation.FromString (d.Data);                      tmpRotation.Direction.Should ().Be (16384);                      tmpRotation.Pitch.Should ().Be (0);                      tmpRotation.Roll.Should ().Be (0);                      break;                  case "modules":                      int.Parse (d.Data).Should ().Be (0);                      break;                  default:                      throw new Exception (string.Format ("Invalid ID \"{0}\" value \"{1}\""' d.Name' d.Data));                  }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseStructIni,The following statement contains a magic number: switch (d.Name) {                  case "id":                      int.Parse (d.Data).Should ().Be (1248);                      break;                  case "startpos":                      int.Parse (d.Data).Should ().Be (5);                      break;                  case "name":                      break;                  case "wall/type":                      int.Parse (d.Data).Should ().Be (0);                      break;                  case "position":                      var tmpPosition = XYZInt.FromString (d.Data);                      tmpPosition.X.Should ().Be (6208);                      tmpPosition.Y.Should ().Be (5440);                      tmpPosition.Z.Should ().Be (0);                      break;                  case "rotation":                      var tmpRotation = Rotation.FromString (d.Data);                      tmpRotation.Direction.Should ().Be (16384);                      tmpRotation.Pitch.Should ().Be (0);                      tmpRotation.Roll.Should ().Be (0);                      break;                  case "modules":                      int.Parse (d.Data).Should ().Be (0);                      break;                  default:                      throw new Exception (string.Format ("Invalid ID \"{0}\" value \"{1}\""' d.Name' d.Data));                  }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseStructIni,The following statement contains a magic number: switch (d.Name) {                  case "id":                      int.Parse (d.Data).Should ().Be (1248);                      break;                  case "startpos":                      int.Parse (d.Data).Should ().Be (5);                      break;                  case "name":                      break;                  case "wall/type":                      int.Parse (d.Data).Should ().Be (0);                      break;                  case "position":                      var tmpPosition = XYZInt.FromString (d.Data);                      tmpPosition.X.Should ().Be (6208);                      tmpPosition.Y.Should ().Be (5440);                      tmpPosition.Z.Should ().Be (0);                      break;                  case "rotation":                      var tmpRotation = Rotation.FromString (d.Data);                      tmpRotation.Direction.Should ().Be (16384);                      tmpRotation.Pitch.Should ().Be (0);                      tmpRotation.Roll.Should ().Be (0);                      break;                  case "modules":                      int.Parse (d.Data).Should ().Be (0);                      break;                  default:                      throw new Exception (string.Format ("Invalid ID \"{0}\" value \"{1}\""' d.Name' d.Data));                  }
Magic Number,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseStructIni,The following statement contains a magic number: iniFile[2].Data
Magic Number,SharpFlame.Tests.Parser,NumericsTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\NumericsTests.cs,CanParseDouble,The following statement contains a magic number: myDouble.Should ().Be (123.123D);
Magic Number,SharpFlame.Tests.Parser,NumericsTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\NumericsTests.cs,CanParseInt,The following statement contains a magic number: myInt.Should ().Be (123);
Magic Number,SharpFlame.Tests.Parser,NumericsTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\NumericsTests.cs,CanParseFloat,The following statement contains a magic number: myFloat.Should ().Be (17.123F);
Magic Number,SharpFlame.Tests.Parser,NumericsTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\NumericsTests.cs,CanParseSignedFloat,The following statement contains a magic number: myFloat.Should ().Be (-17.123F);
Missing Default,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseSettingsIni,The following switch statement is missing a default case: switch (d.Name) {                      case "AutoSave":                          Convert.ToBoolean (d.Data).Should ().Be (true);                          break;                      case "AutoSaveCompress":                          Convert.ToBoolean (d.Data).Should ().Be (false);                          break;                      case "AutoSaveMinInterval":                          Convert.ToInt32 (d.Data).Should ().Be (180);                          break;                      case "AutoSaveMinChanges":                          Convert.ToInt32 (d.Data).Should ().Be (20);                          break;                      case "MinimapCliffColour":                          var color = Rgba.FromString (d.Data);                          color.Red.Should ().Be (1F);                          color.Green.Should ().Be (0.25F);                          color.Blue.Should ().Be (0.25F);                          color.Alpha.Should ().Be (0.5F);                          break;                      case "FOVDefault":                          Convert.ToDouble (d.Data' CultureInfo.InvariantCulture).Should ().Be (0.000666666666666667D);                          break;                      case "FontFamily":                          d.Data.Should ().Be ("DejaVu Serif");                          break;                      case "TilesetsPath":                          d.Data.Should ().Be ("/home/pcdummy/Projekte/wzlobby/SharpFlame/source/Data/tilesets");                          break;                      case "PickOrientation":                          Convert.ToBoolean (d.Data).Should ().Be (true);                          break;                                          }
Missing Default,SharpFlame.Tests.Parser,IniParserTests,D:\research\architectureSmells\repos\bchavez_SharpFlame\source\SharpFlame.Tests\Parser\IniParserTests.cs,CanParseDroidIni,The following switch statement is missing a default case: switch (d.Name) {                  case "id":                      int.Parse (d.Data).Should ().Be (3693);                      break;                  case "startpos":                      int.Parse (d.Data).Should ().Be (3);                      break;                  case "template":                      d.Data.Should ().Be ("ConstructionDroid");                      break;                  case "position":                      var tmpPosition = XYZInt.FromString (d.Data);                      tmpPosition.X.Should ().Be (9792);                      tmpPosition.Y.Should ().Be (26048);                      tmpPosition.Z.Should ().Be (0);                      break;                  case "rotation":                      var tmpRotation = Rotation.FromString (d.Data);                      tmpRotation.Direction.Should ().Be (0);                      tmpRotation.Pitch.Should ().Be (0);                      tmpRotation.Roll.Should ().Be (0);                      break;                  case "player":                      break;                  case "name":                      break;                  case "health":                      break;                  case "droidtype":                      break;                  case "weapons":                      break;                  case "parts\\body":                      break;                  case "parts\\propulsion":                      break;                  case "parts\\brain":                      break;                  case "parts\\repair":                      break;                  case "parts\\ecm":                      break;                  case "parts\\sensor":                      break;                  case "parts\\construct":                      break;                  case "parts\\weapon\\1":                      break;                  case "parts\\weapon\\2":                      break;                  case "parts\\weapon\\3":                      break;                  }
