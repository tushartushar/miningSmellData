Implementation smell,Namespace,Class,File,Method,Description
Long Method,SharpFlame.Core.Parsers,ScanFormatted,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseFormatSpecifier,The method has 104 lines of code.
Complex Method,SharpFlame.Core.Parsers,ScanFormatted,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseFormatSpecifier,Cyclomatic complexity of the method is 9
Complex Method,SharpFlame.Core.Parsers,ScanFormatted,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,Cyclomatic complexity of the method is 8
Complex Method,SharpFlame.Core.Parsers,ScanFormatted,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseFloat,Cyclomatic complexity of the method is 13
Long Parameter List,SharpFlame.Core.Extensions,EventBrokerLogExtension,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,RelayingEvent,The method has 6 parameters. Parameters: eventTopic' publication' subscription' handler' sender' e
Long Parameter List,SharpFlame.Core.Extensions,EventBrokerLogExtension,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,RelayedEvent,The method has 6 parameters. Parameters: eventTopic' publication' subscription' handler' sender' e
Long Parameter List,SharpFlame.Core.Extensions,EventBrokerLogExtension,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,SkippedEvent,The method has 5 parameters. Parameters: eventTopic' publication' subscription' sender' e
Long Statement,SharpFlame.Core.Extensions,EventBrokerLogExtension,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,SkippedEvent,The length of the statement  "            var publicationMatchers = from matcher in publication.PublicationMatchers where !matcher.Match(publication' subscription' e) select matcher; " is 140.
Long Statement,SharpFlame.Core.Extensions,EventBrokerLogExtension,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,SkippedEvent,The length of the statement  "            var subscriptionMatchers = from matcher in subscription.SubscriptionMatchers where !matcher.Match(publication' subscription' e) select matcher; " is 143.
Long Statement,SharpFlame.Core.Extensions,EventBrokerLogExtension,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,SkippedEvent,The length of the statement  "                "Skipped event '{0}' from publisher '{1}' [{2}] to subscriber '{3}' [{4}] with EventArgs '{5}' because the matchers '{6}' did not match."' " is 138.
Magic Number,SharpFlame.Core,Result,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: foreach (var lItem in ((Result)item).Items)              {                  if (lItem is Result.Problem)                  {                      result += String.Format ("{0}PROBLEM: {1}\n"' new string (' '' intending+2)' ((Result.Problem)lItem).GetText);                  } else if (lItem is Result.Warning)                  {                      result += String.Format ("{0}WARNING: {1}\n"' new string (' '' intending+2)' ((Result.Warning)lItem).GetText);                  } else if (lItem is Core.Result)                  {                      result += toStringHelper (lItem' intending + 4);                  }              }
Magic Number,SharpFlame.Core,Result,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: foreach (var lItem in ((Result)item).Items)              {                  if (lItem is Result.Problem)                  {                      result += String.Format ("{0}PROBLEM: {1}\n"' new string (' '' intending+2)' ((Result.Problem)lItem).GetText);                  } else if (lItem is Result.Warning)                  {                      result += String.Format ("{0}WARNING: {1}\n"' new string (' '' intending+2)' ((Result.Warning)lItem).GetText);                  } else if (lItem is Core.Result)                  {                      result += toStringHelper (lItem' intending + 4);                  }              }
Magic Number,SharpFlame.Core,Result,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: foreach (var lItem in ((Result)item).Items)              {                  if (lItem is Result.Problem)                  {                      result += String.Format ("{0}PROBLEM: {1}\n"' new string (' '' intending+2)' ((Result.Problem)lItem).GetText);                  } else if (lItem is Result.Warning)                  {                      result += String.Format ("{0}WARNING: {1}\n"' new string (' '' intending+2)' ((Result.Warning)lItem).GetText);                  } else if (lItem is Core.Result)                  {                      result += toStringHelper (lItem' intending + 4);                  }              }
Magic Number,SharpFlame.Core.Extensions,EventBrokerLogExtension,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,SkippedEvent,The following statement contains a magic number: if (sb.Length > 0)              {                  sb.Length -= 2;              }
Magic Number,SharpFlame.Core.Domain.Colors,Rgba,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Domain\Colors\Rgba.cs,FromString,The following statement contains a magic number: if (split.Count() != 4)              {                  throw new Exception(string.Format("\"{0}\" is not a valid RGBA."' text));              }
Magic Number,SharpFlame.Core.Domain.Colors,Rgba,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Domain\Colors\Rgba.cs,FromString,The following statement contains a magic number: return new Rgba(float.Parse(split[0]' CultureInfo.InvariantCulture)'                  float.Parse(split[1]' CultureInfo.InvariantCulture)'                  float.Parse(split[2]' CultureInfo.InvariantCulture)'                  float.Parse(split[3]' CultureInfo.InvariantCulture));
Magic Number,SharpFlame.Core.Domain.Colors,Rgba,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Domain\Colors\Rgba.cs,FromString,The following statement contains a magic number: return new Rgba(float.Parse(split[0]' CultureInfo.InvariantCulture)'                  float.Parse(split[1]' CultureInfo.InvariantCulture)'                  float.Parse(split[2]' CultureInfo.InvariantCulture)'                  float.Parse(split[3]' CultureInfo.InvariantCulture));
Magic Number,SharpFlame.Core.Domain,Rotation,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Domain\Rotation.cs,FromString,The following statement contains a magic number: if (split.Count() != 3) {                  throw new Exception(string.Format("\"{0}\" is not a valid Rotation."' text));              }
Magic Number,SharpFlame.Core.Domain,Rotation,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Domain\Rotation.cs,FromString,The following statement contains a magic number: var result = new Rotation (UInt16.Parse (split [0])'                                         UInt16.Parse (split [1])'                                         UInt16.Parse (split [2]));
Magic Number,SharpFlame.Core.Domain,XYZInt,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Domain\XYZInt.cs,FromString,The following statement contains a magic number: if (split.Count() != 3) {                  throw new Exception(string.Format("\"{0}\" is not a valid XYZ Position."' text));              }
Magic Number,SharpFlame.Core.Domain,XYZInt,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Domain\XYZInt.cs,FromString,The following statement contains a magic number: var result = new XYZInt (Int32.Parse (split [0])'                                       Int32.Parse (split [1])'                                       Int32.Parse (split [2]));
Magic Number,SharpFlame.Core.Domain,XYInt,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Domain\XYInt.cs,FromString,The following statement contains a magic number: if (split.Count() != 2) {                  throw new Exception(string.Format("\"{0}\" is not a valid XY Position."' text));              }
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: int radix = 10;
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: if( input.Peek() == '+' || input.Peek() == '-' )              {                  input.MoveAhead();              }              else if( input.Peek() == '0' )              {                  if( Char.ToLower( input.Peek( 1 ) ) == 'x' )                  {                      radix = 16;                      input.MoveAhead( 2 );                  }                  else                  {                      radix = 8;                      input.MoveAhead();                  }              }
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: if( input.Peek() == '+' || input.Peek() == '-' )              {                  input.MoveAhead();              }              else if( input.Peek() == '0' )              {                  if( Char.ToLower( input.Peek( 1 ) ) == 'x' )                  {                      radix = 16;                      input.MoveAhead( 2 );                  }                  else                  {                      radix = 8;                      input.MoveAhead();                  }              }
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: if( input.Peek() == '+' || input.Peek() == '-' )              {                  input.MoveAhead();              }              else if( input.Peek() == '0' )              {                  if( Char.ToLower( input.Peek( 1 ) ) == 'x' )                  {                      radix = 16;                      input.MoveAhead( 2 );                  }                  else                  {                      radix = 8;                      input.MoveAhead();                  }              }
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseHexadecimal,The following statement contains a magic number: if( input.Peek() == '0' && input.Peek( 1 ) == 'x' )                  input.MoveAhead( 2 );
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseHexadecimal,The following statement contains a magic number: while( IsValidDigit( input.Peek()' 16 ) )                  input.MoveAhead();
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseHexadecimal,The following statement contains a magic number: if( input.Position > start )              {                  if( !spec.NoResult )                      AddUnsigned( input.Extract( start' input.Position )' spec.Modifier' 16 );                  return true;              }
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseOctal,The following statement contains a magic number: while( IsValidDigit( input.Peek()' 8 ) )                  input.MoveAhead();
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,C:\repos\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseOctal,The following statement contains a magic number: if( input.Position > start )              {                  if( !spec.NoResult )                      AddUnsigned( input.Extract( start' input.Position )' spec.Modifier' 8 );                  return true;              }
