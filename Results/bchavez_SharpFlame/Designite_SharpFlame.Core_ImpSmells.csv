Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseFormatSpecifier,Cyclomatic complexity of the method is 54
Complex Method,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,Cyclomatic complexity of the method is 11
Complex Method,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseFloat,Cyclomatic complexity of the method is 14
Complex Method,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseHexadecimal,Cyclomatic complexity of the method is 8
Complex Method,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseScanSet,Cyclomatic complexity of the method is 10
Long Parameter List,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,RelayingEvent,The method has 6 parameters.
Long Parameter List,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,RelayedEvent,The method has 6 parameters.
Long Parameter List,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,SkippedEvent,The method has 5 parameters.
Long Statement,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,FiredEvent,The length of the statement  "		this.log.Debug ("Fired event '{0}'. Invoked by publisher '{1}' with name '{2}' with sender '{3}' and EventArgs '{4}'."' eventTopic.Uri' publication.Publisher' namedItem.EventBrokerItemName' sender' e); " is 201.
Long Statement,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,FiredEvent,The length of the statement  "		this.log.Debug ("Fired event '{0}'. Invoked by publisher '{1}' with sender '{2}' and EventArgs '{3}'."' eventTopic.Uri' publication.Publisher' sender' e); " is 154.
Long Statement,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,AddedPublication,The length of the statement  "		this.log.Debug ("Added publication '{0}.{1}' to topic '{2}' with matchers '{3}'."' publication.Publisher != null ? publication.Publisher.GetType ().FullName : "-"' publication.EventName' eventTopic.Uri' writer); " is 211.
Long Statement,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,RemovedPublication,The length of the statement  "	this.log.Debug ("Removed publication '{0}.{1}' from topic '{2}'."' publication.Publisher != null ? publication.Publisher.GetType ().FullName : "-"' publication.EventName' eventTopic.Uri); " is 187.
Long Statement,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,AddedSubscription,The length of the statement  "		this.log.Debug ("Added subscription '{0}.{1}' to topic '{2}' with matchers '{3}'."' subscription.Subscriber != null ? subscription.Subscriber.GetType ().FullName : "-"' subscription.HandlerMethodName' eventTopic.Uri' writer); " is 225.
Long Statement,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,RemovedSubscription,The length of the statement  "	this.log.Debug ("Removed subscription '{0}.{1}' from topic '{2}'."' subscription.Subscriber != null ? subscription.Subscriber.GetType ().FullName : "-"' subscription.HandlerMethodName' eventTopic.Uri); " is 201.
Long Statement,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,RelayingEvent,The length of the statement  "	this.log.Debug ("Relaying event '{6}' from publisher '{0}' [{1}] to subscriber '{2}' [{3}] with EventArgs '{4}' with handler '{5}'."' publication.Publisher' publication.Publisher is INamedItem ? ((INamedItem)publication.Publisher).EventBrokerItemName : string.Empty' subscription.Subscriber' subscription.Subscriber is INamedItem ? ((INamedItem)subscription.Subscriber).EventBrokerItemName : string.Empty' e' handler' eventTopic.Uri); " is 434.
Long Statement,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,RelayedEvent,The length of the statement  "	this.log.Debug ("Relayed event '{6}' from publisher '{0}' [{1}] to subscriber '{2}' [{3}] with EventArgs '{4}' with handler '{5}'."' publication.Publisher' publication.Publisher is INamedItem ? ((INamedItem)publication.Publisher).EventBrokerItemName : string.Empty' subscription.Subscriber' subscription.Subscriber is INamedItem ? ((INamedItem)subscription.Subscriber).EventBrokerItemName : string.Empty' e' handler' eventTopic.Uri); " is 433.
Long Statement,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,SkippedEvent,The length of the statement  "	this.log.Debug ("Skipped event '{0}' from publisher '{1}' [{2}] to subscriber '{3}' [{4}] with EventArgs '{5}' because the matchers '{6}' did not match."' eventTopic.Uri' publication.Publisher' publication.Publisher is INamedItem ? ((INamedItem)publication.Publisher).EventBrokerItemName : string.Empty' subscription.Subscriber' subscription.Subscriber is INamedItem ? ((INamedItem)subscription.Subscriber).EventBrokerItemName : string.Empty' e' sb); " is 450.
Long Statement,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,SubscriberExceptionOccurred,The length of the statement  "	this.log.Error (string.Format (CultureInfo.InvariantCulture' "An exception was thrown during handling the topic '{0}'"' eventTopic.Uri)' exception); " is 148.
Long Statement,SharpFlame.Core.Domain.Colors,Rgba,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Domain\Colors\Rgba.cs,FromString,The length of the statement  "	return new Rgba (float.Parse (split [0]' CultureInfo.InvariantCulture)' float.Parse (split [1]' CultureInfo.InvariantCulture)' float.Parse (split [2]' CultureInfo.InvariantCulture)' float.Parse (split [3]' CultureInfo.InvariantCulture)); " is 237.
Long Statement,SharpFlame.Core.Parsers.Ini,IniReader,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\Ini\IniReader.cs,ReadString,The length of the statement  "			currentSection = new Section (line.Substring (1' line.LastIndexOf ("]"' StringComparison.InvariantCulture) - 1).Trim ()); " is 121.
Magic Number,SharpFlame.Core,Result,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: foreach (var lItem in ((Result)item).Items) {  	if (lItem is Result.Problem) {  		result += String.Format ("{0}PROBLEM: {1}\n"' new string (' '' intending + 2)' ((Result.Problem)lItem).GetText);  	} else if (lItem is Result.Warning) {  		result += String.Format ("{0}WARNING: {1}\n"' new string (' '' intending + 2)' ((Result.Warning)lItem).GetText);  	} else if (lItem is Core.Result) {  		result += toStringHelper (lItem' intending + 4);  	}  }  
Magic Number,SharpFlame.Core,Result,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: foreach (var lItem in ((Result)item).Items) {  	if (lItem is Result.Problem) {  		result += String.Format ("{0}PROBLEM: {1}\n"' new string (' '' intending + 2)' ((Result.Problem)lItem).GetText);  	} else if (lItem is Result.Warning) {  		result += String.Format ("{0}WARNING: {1}\n"' new string (' '' intending + 2)' ((Result.Warning)lItem).GetText);  	} else if (lItem is Core.Result) {  		result += toStringHelper (lItem' intending + 4);  	}  }  
Magic Number,SharpFlame.Core,Result,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: foreach (var lItem in ((Result)item).Items) {  	if (lItem is Result.Problem) {  		result += String.Format ("{0}PROBLEM: {1}\n"' new string (' '' intending + 2)' ((Result.Problem)lItem).GetText);  	} else if (lItem is Result.Warning) {  		result += String.Format ("{0}WARNING: {1}\n"' new string (' '' intending + 2)' ((Result.Warning)lItem).GetText);  	} else if (lItem is Core.Result) {  		result += toStringHelper (lItem' intending + 4);  	}  }  
Magic Number,SharpFlame.Core,Result,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: if (lItem is Result.Problem) {  	result += String.Format ("{0}PROBLEM: {1}\n"' new string (' '' intending + 2)' ((Result.Problem)lItem).GetText);  } else if (lItem is Result.Warning) {  	result += String.Format ("{0}WARNING: {1}\n"' new string (' '' intending + 2)' ((Result.Warning)lItem).GetText);  } else if (lItem is Core.Result) {  	result += toStringHelper (lItem' intending + 4);  }  
Magic Number,SharpFlame.Core,Result,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: if (lItem is Result.Problem) {  	result += String.Format ("{0}PROBLEM: {1}\n"' new string (' '' intending + 2)' ((Result.Problem)lItem).GetText);  } else if (lItem is Result.Warning) {  	result += String.Format ("{0}WARNING: {1}\n"' new string (' '' intending + 2)' ((Result.Warning)lItem).GetText);  } else if (lItem is Core.Result) {  	result += toStringHelper (lItem' intending + 4);  }  
Magic Number,SharpFlame.Core,Result,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: if (lItem is Result.Problem) {  	result += String.Format ("{0}PROBLEM: {1}\n"' new string (' '' intending + 2)' ((Result.Problem)lItem).GetText);  } else if (lItem is Result.Warning) {  	result += String.Format ("{0}WARNING: {1}\n"' new string (' '' intending + 2)' ((Result.Warning)lItem).GetText);  } else if (lItem is Core.Result) {  	result += toStringHelper (lItem' intending + 4);  }  
Magic Number,SharpFlame.Core,Result,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: result += String.Format ("{0}PROBLEM: {1}\n"' new string (' '' intending + 2)' ((Result.Problem)lItem).GetText);  
Magic Number,SharpFlame.Core,Result,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: if (lItem is Result.Warning) {  	result += String.Format ("{0}WARNING: {1}\n"' new string (' '' intending + 2)' ((Result.Warning)lItem).GetText);  } else if (lItem is Core.Result) {  	result += toStringHelper (lItem' intending + 4);  }  
Magic Number,SharpFlame.Core,Result,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: if (lItem is Result.Warning) {  	result += String.Format ("{0}WARNING: {1}\n"' new string (' '' intending + 2)' ((Result.Warning)lItem).GetText);  } else if (lItem is Core.Result) {  	result += toStringHelper (lItem' intending + 4);  }  
Magic Number,SharpFlame.Core,Result,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: result += String.Format ("{0}WARNING: {1}\n"' new string (' '' intending + 2)' ((Result.Warning)lItem).GetText);  
Magic Number,SharpFlame.Core,Result,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: if (lItem is Core.Result) {  	result += toStringHelper (lItem' intending + 4);  }  
Magic Number,SharpFlame.Core,Result,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Result.cs,toStringHelper,The following statement contains a magic number: result += toStringHelper (lItem' intending + 4);  
Magic Number,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,SkippedEvent,The following statement contains a magic number: if (sb.Length > 0) {  	sb.Length -= 2;  }  
Magic Number,SharpFlame.Core.Extensions,EventBrokerLogExtension,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Extensions\EventBrokerLogExtension.cs,SkippedEvent,The following statement contains a magic number: sb.Length -= 2;  
Magic Number,SharpFlame.Core.Domain.Colors,Rgba,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Domain\Colors\Rgba.cs,FromString,The following statement contains a magic number: if (split.Count () != 4) {  	throw new Exception (string.Format ("\"{0}\" is not a valid RGBA."' text));  }  
Magic Number,SharpFlame.Core.Domain.Colors,Rgba,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Domain\Colors\Rgba.cs,FromString,The following statement contains a magic number: return new Rgba (float.Parse (split [0]' CultureInfo.InvariantCulture)' float.Parse (split [1]' CultureInfo.InvariantCulture)' float.Parse (split [2]' CultureInfo.InvariantCulture)' float.Parse (split [3]' CultureInfo.InvariantCulture));  
Magic Number,SharpFlame.Core.Domain.Colors,Rgba,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Domain\Colors\Rgba.cs,FromString,The following statement contains a magic number: return new Rgba (float.Parse (split [0]' CultureInfo.InvariantCulture)' float.Parse (split [1]' CultureInfo.InvariantCulture)' float.Parse (split [2]' CultureInfo.InvariantCulture)' float.Parse (split [3]' CultureInfo.InvariantCulture));  
Magic Number,SharpFlame.Core.Domain,Rotation,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Domain\Rotation.cs,FromString,The following statement contains a magic number: if (split.Count () != 3) {  	throw new Exception (string.Format ("\"{0}\" is not a valid Rotation."' text));  }  
Magic Number,SharpFlame.Core.Domain,XYZInt,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Domain\XYZInt.cs,FromString,The following statement contains a magic number: if (split.Count () != 3) {  	throw new Exception (string.Format ("\"{0}\" is not a valid XYZ Position."' text));  }  
Magic Number,SharpFlame.Core.Domain,XYInt,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Domain\XYInt.cs,FromString,The following statement contains a magic number: if (split.Count () != 2) {  	throw new Exception (string.Format ("\"{0}\" is not a valid XY Position."' text));  }  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: if (input.Peek () == '+' || input.Peek () == '-') {  	input.MoveAhead ();  } else if (input.Peek () == '0') {  	if (Char.ToLower (input.Peek (1)) == 'x') {  		radix = 16;  		input.MoveAhead (2);  	} else {  		radix = 8;  		input.MoveAhead ();  	}  }  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: if (input.Peek () == '+' || input.Peek () == '-') {  	input.MoveAhead ();  } else if (input.Peek () == '0') {  	if (Char.ToLower (input.Peek (1)) == 'x') {  		radix = 16;  		input.MoveAhead (2);  	} else {  		radix = 8;  		input.MoveAhead ();  	}  }  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: if (input.Peek () == '+' || input.Peek () == '-') {  	input.MoveAhead ();  } else if (input.Peek () == '0') {  	if (Char.ToLower (input.Peek (1)) == 'x') {  		radix = 16;  		input.MoveAhead (2);  	} else {  		radix = 8;  		input.MoveAhead ();  	}  }  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: if (input.Peek () == '0') {  	if (Char.ToLower (input.Peek (1)) == 'x') {  		radix = 16;  		input.MoveAhead (2);  	} else {  		radix = 8;  		input.MoveAhead ();  	}  }  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: if (input.Peek () == '0') {  	if (Char.ToLower (input.Peek (1)) == 'x') {  		radix = 16;  		input.MoveAhead (2);  	} else {  		radix = 8;  		input.MoveAhead ();  	}  }  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: if (input.Peek () == '0') {  	if (Char.ToLower (input.Peek (1)) == 'x') {  		radix = 16;  		input.MoveAhead (2);  	} else {  		radix = 8;  		input.MoveAhead ();  	}  }  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: if (Char.ToLower (input.Peek (1)) == 'x') {  	radix = 16;  	input.MoveAhead (2);  } else {  	radix = 8;  	input.MoveAhead ();  }  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: if (Char.ToLower (input.Peek (1)) == 'x') {  	radix = 16;  	input.MoveAhead (2);  } else {  	radix = 8;  	input.MoveAhead ();  }  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: if (Char.ToLower (input.Peek (1)) == 'x') {  	radix = 16;  	input.MoveAhead (2);  } else {  	radix = 8;  	input.MoveAhead ();  }  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: radix = 16;  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: input.MoveAhead (2);  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseDecimal,The following statement contains a magic number: radix = 8;  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseHexadecimal,The following statement contains a magic number: if (input.Peek () == '0' && input.Peek (1) == 'x')  	input.MoveAhead (2);  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseHexadecimal,The following statement contains a magic number: input.MoveAhead (2);  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseHexadecimal,The following statement contains a magic number: while (IsValidDigit (input.Peek ()' 16))  	input.MoveAhead ();  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseHexadecimal,The following statement contains a magic number: if (input.Position > start) {  	if (!spec.NoResult)  		AddUnsigned (input.Extract (start' input.Position)' spec.Modifier' 16);  	return true;  }  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseHexadecimal,The following statement contains a magic number: if (!spec.NoResult)  	AddUnsigned (input.Extract (start' input.Position)' spec.Modifier' 16);  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseHexadecimal,The following statement contains a magic number: AddUnsigned (input.Extract (start' input.Position)' spec.Modifier' 16);  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseOctal,The following statement contains a magic number: while (IsValidDigit (input.Peek ()' 8))  	input.MoveAhead ();  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseOctal,The following statement contains a magic number: if (input.Position > start) {  	if (!spec.NoResult)  		AddUnsigned (input.Extract (start' input.Position)' spec.Modifier' 8);  	return true;  }  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseOctal,The following statement contains a magic number: if (!spec.NoResult)  	AddUnsigned (input.Extract (start' input.Position)' spec.Modifier' 8);  
Magic Number,SharpFlame.Core.Parsers,ScanFormatted,F:\newReposMay17\bchavez_SharpFlame\source\SharpFlame.Core\Parsers\ScanFormatted.cs,ParseOctal,The following statement contains a magic number: AddUnsigned (input.Extract (start' input.Position)' spec.Modifier' 8);  
