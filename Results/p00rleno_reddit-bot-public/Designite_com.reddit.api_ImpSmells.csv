Implementation smell,Namespace,Class,File,Method,Description
Complex Method,com.reddit.api,Comment,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Comment.cs,Comment,Cyclomatic complexity of the method is 9
Complex Method,com.reddit.api,Comment,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Comment.cs,GetCommentsForPost,Cyclomatic complexity of the method is 9
Complex Method,com.reddit.api,CommentListing,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\CommentListing.cs,FromJson,Cyclomatic complexity of the method is 8
Complex Method,com.reddit.api,Sub,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Sub.cs,GetListing,Cyclomatic complexity of the method is 48
Long Parameter List,com.reddit.api,Comment,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Comment.cs,GetCommentsForPost,The method has 5 parameters.
Long Parameter List,com.reddit.api,Post,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Post.cs,Remove,The method has 5 parameters.
Long Parameter List,com.reddit.api,Sub,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Sub.cs,GetListing,The method has 5 parameters.
Long Parameter List,com.reddit.api,Sub,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Sub.cs,BanUser,The method has 5 parameters.
Long Parameter List,com.reddit.api,Sub,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Sub.cs,UnBanUser,The method has 5 parameters.
Long Statement,com.reddit.api,Message,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Message.cs,Send,The length of the statement  "		Content = "uh=" + session.ModHash + "&to=" + message.Destination + "&subject=" + message.Subject + "&thing_id=" + "&text=" + message.Body + "&iden=" + iden + //"&captcha=" + captcha +  " is 183.
Long Statement,com.reddit.api,Post,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Post.cs,Submit,The length of the statement  "		Content = "uh=" + session.ModHash + "&kind=" + (kind == PostKind.Link ? "link" : "self") + "&url=" + (kind == PostKind.Link ? post.Url : post.SelfText) + "&sr=" + post.SubReddit + "&title=" + post.Title + "&r=" + post.SubReddit + "&renderstyle=html" " is 249.
Long Statement,com.reddit.api,Sub,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Sub.cs,Create,The length of the statement  "		Content = "name=" + sub.Name + "&title=" + sub.Title + "&description=" + sub.Description + "&lang=" + language + "&type=" + subreddit_type + "&link_type=" + content_options + "&over_18=" + (over_18 ? "on" : "off") + "&allow_top=" + (default_set ? "on" : "off") + "&show_media=" + (show_media ? "on" : "off") + "&domain=" + domain + "&uh=" + session.ModHash + "&id=#sr-form&api_type=json" " is 387.
Long Statement,com.reddit.api,Sub,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Sub.cs,BanUser,The length of the statement  "		Content = "action=add" + "&container=" + sub_id + "&type=banned" + "&name=" + username + "&id=#banned" + "&r=" + sub + "&uh=" + modhash + "&renderstyle=html" " is 157.
Long Statement,com.reddit.api,Sub,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Sub.cs,UnBanUser,The length of the statement  "		Content = "id=" + user_id + "&executed=removed" + "&container=" + sub_id + "&type=banned" + "&r=" + sub + "&uh=" + modhash + "&renderstyle=html" " is 144.
Magic Number,com.reddit.api,Request,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Request.cs,Execute,The following statement contains a magic number: request.ServicePoint.ConnectionLimit = 100;  
Magic Number,com.reddit.api,Request,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Request.cs,Execute,The following statement contains a magic number: using (var handle = new ManualResetEvent (false)) {  	if (!string.IsNullOrEmpty (Content)) {  		// set the content type of the posted data  		request.ContentType = "application/x-www-form-urlencoded; charset=UTF-8";  		// Write the XML data to the post form' as part of the 'xml' variable              		request.BeginGetRequestStream (ar =>  {  			try {  				using (var requestStream = request.EndGetRequestStream (ar))  					using (var writeStream = new StreamWriter (requestStream' Encoding.ASCII)) {  						writeStream.Write (Content);  					}  			}  			catch (Exception exp) {  				System.Diagnostics.Debug.WriteLine ("Request.Execute: " + exp.Message);  				Console.WriteLine ("Request.Execute: " + exp.Message);  				throw exp;  			}  			finally {  				handle.Set ();  			}  		}' new object ()/* state */);  		handle.WaitOne ();  		handle.Reset ();  	}  	request.BeginGetResponse (ar =>  {  		try {  			var response = (HttpWebResponse)request.EndGetResponse (ar);  			using (var receiveStream = response.GetResponseStream ())  				using (var readStream = new StreamReader (receiveStream' Encoding.ASCII)) {  					Data = readStream.ReadToEnd ();  				}  			Status = response.StatusCode;  			// Update the cache hash & the time the URL was requested  			// if the request was successful' that way we don't count   			// failed requests in the 30 second limit   			// throw new NotImplementedException();  		}  		catch (Exception exp) {  			System.Diagnostics.Debug.WriteLine ("Request.Execute: " + exp.Message);  			Console.WriteLine ("Request.Execute: " + exp.Message);  		}  		finally {  			handle.Set ();  		}  	}' new object ()/* state */);  	// In case the first timeout doesn't work then move onto then  	// we'll let the wait request handle timeout as well  	handle.WaitOne (RequestTimeout + (RequestTimeout / 10));  }  
Magic Number,com.reddit.api,Request,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Request.cs,Execute,The following statement contains a magic number: handle.WaitOne (RequestTimeout + (RequestTimeout / 10));  
Missing Default,com.reddit.api,Comment,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Comment.cs,Comment,The following switch statement is missing a default case: switch (child ["kind"].ToString ()) {  case "t1":  	Replies.Add (new Comment (child ["data"]));  	break;  case "more":  	var test = child ["data"] ["children"].Values ().Select (t => t.ToString ()).ToList ();  	Replies.More.AddRange (test);  	break;  }  
Missing Default,com.reddit.api,Comment,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Comment.cs,GetCommentsForPost,The following switch statement is missing a default case: switch (comment ["kind"].ToString ()) {  case "t1":  	list.Add (new Comment (comment ["data"]));  	break;  case "more":  	var test = comment ["data"] ["children"].Values ().Select (t => t.ToString ()).ToList ();  	list.More.AddRange (test);  	break;  }  
Missing Default,com.reddit.api,CommentListing,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\CommentListing.cs,FromJson,The following switch statement is missing a default case: switch (comment ["kind"].ToString ()) {  case "t1":  	list.Add (new Comment (comment ["data"]));  	break;  case "more":  	var test = comment ["data"] ["children"].Values ().Select (t => t.ToString ()).ToList ();  	list.More.AddRange (test);  	break;  }  
Missing Default,com.reddit.api,Sub,C:\repos\p00rleno_reddit-bot-public\com.reddit.api\Sub.cs,GetListing,The following switch statement is missing a default case: switch (sort) {  case SubSortBy.Hot:  	url += ".json?limit=" + Limit;  	break;  case SubSortBy.New:  	url += "new/.json?sort=new&limit=" + Limit;  	break;  case SubSortBy.Rising:  	url += "new/.json?sort=rising&limit=" + Limit;  	break;  case SubSortBy.TopAllTime:  	url += "top/.json?sort=top&t=all&limit=" + Limit;  	break;  case SubSortBy.TopYear:  	url += "top/.json?sort=top&t=year&limit=" + Limit;  	break;  case SubSortBy.TopMonth:  	url += "top/.json?sort=top&t=month&limit=" + Limit;  	break;  case SubSortBy.TopWeek:  	url += "top/.json?sort=top&t=week&limit=" + Limit;  	break;  case SubSortBy.TopToday:  	url += "top/.json?sort=top&t=day&limit=" + Limit;  	break;  case SubSortBy.TopHour:  	url += "top/.json?sort=top&t=hour&limit=" + Limit;  	break;  case SubSortBy.ControversalAllTime:  	url += "controversial/.json?sort=controversial&t=all&limit=" + Limit;  	break;  case SubSortBy.ControversalYear:  	url += "controversial/.json?sort=controversial&t=year&limit=" + Limit;  	break;  case SubSortBy.ControversalMonth:  	url += "controversial/.json?sort=controversial&t=month&limit=" + Limit;  	break;  case SubSortBy.ControversalWeek:  	url += "controversial/.json?sort=controversial&t=week&limit=" + Limit;  	break;  case SubSortBy.ControversalToday:  	url += "controversial/.json?sort=controversial&t=day&limit=" + Limit;  	break;  case SubSortBy.ControversalHour:  	url += "controversial/.json?sort=controversial&t=hour&limit=" + Limit;  	break;  }  
