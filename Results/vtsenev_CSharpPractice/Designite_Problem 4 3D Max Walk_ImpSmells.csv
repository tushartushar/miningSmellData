Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Problem_4_3D_Max_Walk,MaxWalk3D,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\MaxWalk3D.cs,GetNextPosition,Cyclomatic complexity of the method is 10
Complex Method,Problem_4_3D_Max_Walk,TestGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\TestGenerator.cs,Main2,Cyclomatic complexity of the method is 20
Long Parameter List,Problem_4_3D_Max_Walk,MaxWalk3D,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\MaxWalk3D.cs,GetNextPosition,The method has 7 parameters.
Magic Number,Problem_4_3D_Max_Walk,MaxWalk3D,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\MaxWalk3D.cs,ReadCuboid,The following statement contains a magic number: depth = int.Parse (sizes [2]);  
Magic Number,Problem_4_3D_Max_Walk,TestGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\TestGenerator.cs,Main2,The following statement contains a magic number: while (true) {  	for (int nextW = 0; nextW < width; nextW++) {  		if (cuboid [nextW' h' d] == 0) {  			cuboid [nextW' h' d] = -1 - nextW;  		}  	}  	for (int nextH = 0; nextH < height; nextH++) {  		if (cuboid [w' nextH' d] == 0) {  			cuboid [w' nextH' d] = -1 - 120 - nextH;  		}  	}  	for (int nextD = 0; nextD < depth; nextD++) {  		if (cuboid [w' h' nextD] == 0) {  			cuboid [w' h' nextD] = -1 - 250 - nextD;  		}  	}  	cuboid [w' h' d] = value;  	value++;  	if (value > 200) {  		break;  	}  	int r = rnd.Next (3);  	if (r == 0) {  		w = rnd.Next (width);  	}  	if (r == 1) {  		h = rnd.Next (height);  	}  	if (r == 2) {  		d = rnd.Next (depth);  	}  }  
Magic Number,Problem_4_3D_Max_Walk,TestGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\TestGenerator.cs,Main2,The following statement contains a magic number: while (true) {  	for (int nextW = 0; nextW < width; nextW++) {  		if (cuboid [nextW' h' d] == 0) {  			cuboid [nextW' h' d] = -1 - nextW;  		}  	}  	for (int nextH = 0; nextH < height; nextH++) {  		if (cuboid [w' nextH' d] == 0) {  			cuboid [w' nextH' d] = -1 - 120 - nextH;  		}  	}  	for (int nextD = 0; nextD < depth; nextD++) {  		if (cuboid [w' h' nextD] == 0) {  			cuboid [w' h' nextD] = -1 - 250 - nextD;  		}  	}  	cuboid [w' h' d] = value;  	value++;  	if (value > 200) {  		break;  	}  	int r = rnd.Next (3);  	if (r == 0) {  		w = rnd.Next (width);  	}  	if (r == 1) {  		h = rnd.Next (height);  	}  	if (r == 2) {  		d = rnd.Next (depth);  	}  }  
Magic Number,Problem_4_3D_Max_Walk,TestGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\TestGenerator.cs,Main2,The following statement contains a magic number: while (true) {  	for (int nextW = 0; nextW < width; nextW++) {  		if (cuboid [nextW' h' d] == 0) {  			cuboid [nextW' h' d] = -1 - nextW;  		}  	}  	for (int nextH = 0; nextH < height; nextH++) {  		if (cuboid [w' nextH' d] == 0) {  			cuboid [w' nextH' d] = -1 - 120 - nextH;  		}  	}  	for (int nextD = 0; nextD < depth; nextD++) {  		if (cuboid [w' h' nextD] == 0) {  			cuboid [w' h' nextD] = -1 - 250 - nextD;  		}  	}  	cuboid [w' h' d] = value;  	value++;  	if (value > 200) {  		break;  	}  	int r = rnd.Next (3);  	if (r == 0) {  		w = rnd.Next (width);  	}  	if (r == 1) {  		h = rnd.Next (height);  	}  	if (r == 2) {  		d = rnd.Next (depth);  	}  }  
Magic Number,Problem_4_3D_Max_Walk,TestGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\TestGenerator.cs,Main2,The following statement contains a magic number: while (true) {  	for (int nextW = 0; nextW < width; nextW++) {  		if (cuboid [nextW' h' d] == 0) {  			cuboid [nextW' h' d] = -1 - nextW;  		}  	}  	for (int nextH = 0; nextH < height; nextH++) {  		if (cuboid [w' nextH' d] == 0) {  			cuboid [w' nextH' d] = -1 - 120 - nextH;  		}  	}  	for (int nextD = 0; nextD < depth; nextD++) {  		if (cuboid [w' h' nextD] == 0) {  			cuboid [w' h' nextD] = -1 - 250 - nextD;  		}  	}  	cuboid [w' h' d] = value;  	value++;  	if (value > 200) {  		break;  	}  	int r = rnd.Next (3);  	if (r == 0) {  		w = rnd.Next (width);  	}  	if (r == 1) {  		h = rnd.Next (height);  	}  	if (r == 2) {  		d = rnd.Next (depth);  	}  }  
Magic Number,Problem_4_3D_Max_Walk,TestGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\TestGenerator.cs,Main2,The following statement contains a magic number: while (true) {  	for (int nextW = 0; nextW < width; nextW++) {  		if (cuboid [nextW' h' d] == 0) {  			cuboid [nextW' h' d] = -1 - nextW;  		}  	}  	for (int nextH = 0; nextH < height; nextH++) {  		if (cuboid [w' nextH' d] == 0) {  			cuboid [w' nextH' d] = -1 - 120 - nextH;  		}  	}  	for (int nextD = 0; nextD < depth; nextD++) {  		if (cuboid [w' h' nextD] == 0) {  			cuboid [w' h' nextD] = -1 - 250 - nextD;  		}  	}  	cuboid [w' h' d] = value;  	value++;  	if (value > 200) {  		break;  	}  	int r = rnd.Next (3);  	if (r == 0) {  		w = rnd.Next (width);  	}  	if (r == 1) {  		h = rnd.Next (height);  	}  	if (r == 2) {  		d = rnd.Next (depth);  	}  }  
Magic Number,Problem_4_3D_Max_Walk,TestGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\TestGenerator.cs,Main2,The following statement contains a magic number: for (int nextH = 0; nextH < height; nextH++) {  	if (cuboid [w' nextH' d] == 0) {  		cuboid [w' nextH' d] = -1 - 120 - nextH;  	}  }  
Magic Number,Problem_4_3D_Max_Walk,TestGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\TestGenerator.cs,Main2,The following statement contains a magic number: if (cuboid [w' nextH' d] == 0) {  	cuboid [w' nextH' d] = -1 - 120 - nextH;  }  
Magic Number,Problem_4_3D_Max_Walk,TestGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\TestGenerator.cs,Main2,The following statement contains a magic number: cuboid [w' nextH' d] = -1 - 120 - nextH;  
Magic Number,Problem_4_3D_Max_Walk,TestGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\TestGenerator.cs,Main2,The following statement contains a magic number: for (int nextD = 0; nextD < depth; nextD++) {  	if (cuboid [w' h' nextD] == 0) {  		cuboid [w' h' nextD] = -1 - 250 - nextD;  	}  }  
Magic Number,Problem_4_3D_Max_Walk,TestGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\TestGenerator.cs,Main2,The following statement contains a magic number: if (cuboid [w' h' nextD] == 0) {  	cuboid [w' h' nextD] = -1 - 250 - nextD;  }  
Magic Number,Problem_4_3D_Max_Walk,TestGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\TestGenerator.cs,Main2,The following statement contains a magic number: cuboid [w' h' nextD] = -1 - 250 - nextD;  
Magic Number,Problem_4_3D_Max_Walk,TestGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\TestGenerator.cs,Main2,The following statement contains a magic number: if (value > 200) {  	break;  }  
Magic Number,Problem_4_3D_Max_Walk,TestGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 4 3D Max Walk\TestGenerator.cs,Main2,The following statement contains a magic number: if (r == 2) {  	d = rnd.Next (depth);  }  
