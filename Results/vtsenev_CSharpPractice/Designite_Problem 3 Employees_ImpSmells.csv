Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,Cyclomatic complexity of the method is 8
Long Statement,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The length of the statement  "			employees.Add (new Employee (string.Format ("{0} {1}"' GetRandomName ()' GetRandomName ())' positions [rand.Next (0' positions.Count)])); " is 137.
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (10' 15));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (10' 15));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (40' 10));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (40' 10));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (10' 40));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (10' 40));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (50' 50));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (50' 50));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (100' 100));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (100' 100));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (200' 200));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (200' 200));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (1000' 500));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (1000' 500));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (501' 1000));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (501' 1000));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (700' 700));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (700' 700));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (750' 750));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (750' 750));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (800' 800));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (800' 800));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (909' 909));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (909' 909));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (999' 950));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (999' 950));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (950' 999));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (950' 999));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (999' 999));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (999' 999));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (1000' 999));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (1000' 999));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (999' 1000));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (999' 1000));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (1000' 1000));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (1000' 1000));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (1000' 1000));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: TestsNMValues.Add (new Tuple<int' int> (1000' 1000));  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: for (int j = 1; j <= TestsNMValues.Count; j++) {  	Tuple<int' int> testParams = TestsNMValues [j - 1];  	// Generate  	List<Position> positions = new List<Position> ();  	for (int i = 1; i <= testParams.Item1; i++) {  		positions.Add (new Position (string.Format ("{0} - {1}"' GetRandomNameWithSpaces ()' rand.Next (0' 10000))));  	}  	List<Employee> employees = new List<Employee> ();  	for (int i = 1; i <= testParams.Item2; i++) {  		employees.Add (new Employee (string.Format ("{0} {1}"' GetRandomName ()' GetRandomName ())' positions [rand.Next (0' positions.Count)]));  	}  	// Write  	using (StreamWriter sw = new StreamWriter (string.Format ("test.{0:000}.in.txt"' j))) {  		sw.WriteLine (testParams.Item1);  		foreach (var position in positions) {  			sw.WriteLine (string.Format ("{0} - {1}"' position.Name' position.Rating));  		}  		sw.WriteLine (testParams.Item2);  		foreach (var employee in employees) {  			sw.WriteLine (string.Format ("{0} {1} - {2}"' employee.FirstName' employee.LastName' employee.Position.Name));  		}  	}  }  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: for (int i = 1; i <= testParams.Item1; i++) {  	positions.Add (new Position (string.Format ("{0} - {1}"' GetRandomNameWithSpaces ()' rand.Next (0' 10000))));  }  
Magic Number,Problem_3_Employees,TestsGenerator,C:\repos\vtsenev_CSharpPractice\Practical Exam 1\Author\Problem 3 Employees\TestsGenerator.cs,GenerateTests,The following statement contains a magic number: positions.Add (new Position (string.Format ("{0} - {1}"' GetRandomNameWithSpaces ()' rand.Next (0' 10000))));  
