Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OSAE.Jabber,Jabber,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Jabber\Jabber.cs,ProcessCommand,Cyclomatic complexity of the method is 8
Complex Method,OSAE.Jabber,Jabber,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Jabber\Jabber.cs,xmppCon_OnMessage,Cyclomatic complexity of the method is 9
Complex Method,OSAE.Jabber,Jabber,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Jabber\Jabber.cs,oRecognizer_SpeechRecognized,Cyclomatic complexity of the method is 12
Long Statement,OSAE.Jabber,Jabber,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Jabber\Jabber.cs,OwnTypes,The length of the statement  "                OSAEObjectTypeManager.ObjectTypeUpdate(oType.Name' oType.Name' oType.Description' gAppName' oType.BaseType' oType.Owner' oType.SysType' oType.Container' oType.HideRedundant' oType.Tooltip); " is 189.
Long Statement,OSAE.Jabber,Jabber,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Jabber\Jabber.cs,ProcessCommand,The length of the statement  "                        string listItem = method.Parameter2.Substring(method.Parameter2.IndexOf("'") + 1' method.Parameter2.Length - (method.Parameter2.IndexOf("'")+ 1)); " is 146.
Long Statement,OSAE.Jabber,Jabber,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Jabber\Jabber.cs,ProcessCommand,The length of the statement  "                        sendMessage(method.Parameter1' to' Common.PatternParse(OSAEObjectPropertyManager.ObjectPropertyArrayGetRandom(speechList' listItem))); " is 134.
Long Statement,OSAE.Jabber,Jabber,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Jabber\Jabber.cs,Ask_Question,The length of the statement  "            dataset = OSAESql.RunSQL("SELECT Question'object_name'property_name'property_datatype'property_object_type'interest_level FROM osae_v_interests ORDER BY interest_level DESC LIMIT 1"); " is 183.
Long Statement,OSAE.Jabber,Jabber,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Jabber\Jabber.cs,Ask_Question,The length of the statement  "                oRecognizer = OSAEGrammar.Load_Answer_Grammar(oRecognizer' dataset.Tables[0].Rows[0]["property_datatype"].ToString()' dataset.Tables[0].Rows[0]["property_object_type"].ToString()); " is 180.
Long Statement,OSAE.Jabber,Jabber,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Jabber\Jabber.cs,Question_Answered,The length of the statement  "            sendMessage(gCurrentUser'Common.PatternParse("Setting " + gAnswerObject + "'s " + gAnswerProperty + " to " + answer)' gCurrentAddress); " is 135.
Long Statement,OSAE.Jabber,Jabber,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Jabber\Jabber.cs,xmppCon_OnPresence,The length of the statement  "                    Log.Info(String.Format("Received Presence from: {0} show: {1} status: {2}"' oObj.Name' pres.Show.ToString()' pres.Status)); " is 123.
Magic Number,OSAE.Jabber,Jabber,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Jabber\Jabber.cs,xmppCon_OnClose,The following statement contains a magic number: Thread.Sleep(5000);
Missing Default,OSAE.Jabber,Jabber,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Jabber\Jabber.cs,ProcessCommand,The following switch statement is missing a default case: switch (method.MethodName)                  {                      case "SEND MESSAGE":                          sendMessage(method.Parameter1' to' Common.PatternParse(method.Parameter2));                          break;                        case "SEND QUESTION":                          Ask_Question(to);                          break;                        case "SEND FROM LIST":                          string speechList = method.Parameter2.Substring(0'method.Parameter2.IndexOf("'"));                          string listItem = method.Parameter2.Substring(method.Parameter2.IndexOf("'") + 1' method.Parameter2.Length - (method.Parameter2.IndexOf("'")+ 1));                          if (gDebug) Log.Debug("List = " + speechList + "   Item=" + listItem);                          sendMessage(method.Parameter1' to' Common.PatternParse(OSAEObjectPropertyManager.ObjectPropertyArrayGetRandom(speechList' listItem)));                          break;                  }
