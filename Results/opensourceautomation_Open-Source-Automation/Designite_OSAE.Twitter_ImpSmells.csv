Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OSAE.Twitter,OAuthBase,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\oAuth.cs,GenerateSignatureBase,Cyclomatic complexity of the method is 9
Complex Method,OSAE.Twitter,oAuthTwitter,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\oAuthTwitter.cs,oAuthWebRequest,Cyclomatic complexity of the method is 8
Long Parameter List,OSAE.Twitter,OAuthBase,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\oAuth.cs,GenerateSignatureBase,The method has 11 parameters. Parameters: url' consumerKey' token' tokenSecret' httpMethod' timeStamp' nonce' PIN' signatureType' normalizedUrl' normalizedRequestParameters
Long Parameter List,OSAE.Twitter,OAuthBase,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\oAuth.cs,GenerateSignature,The method has 11 parameters. Parameters: url' consumerKey' consumerSecret' token' tokenSecret' httpMethod' timeStamp' nonce' PIN' normalizedUrl' normalizedRequestParameters
Long Parameter List,OSAE.Twitter,OAuthBase,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\oAuth.cs,GenerateSignature,The method has 12 parameters. Parameters: url' consumerKey' consumerSecret' token' tokenSecret' httpMethod' timeStamp' nonce' PIN' signatureType' normalizedUrl' normalizedRequestParameters
Long Statement,OSAE.Twitter,OAuthBase,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\oAuth.cs,GenerateSignature,The length of the statement  "            return GenerateSignature(url' consumerKey' consumerSecret' token' tokenSecret' httpMethod' timeStamp' nonce' PIN' SignatureTypes.HMACSHA1' out normalizedUrl' out normalizedRequestParameters); " is 191.
Long Statement,OSAE.Twitter,OAuthBase,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\oAuth.cs,GenerateSignature,The length of the statement  "                    string signatureBase = GenerateSignatureBase(url' consumerKey' token' tokenSecret' httpMethod' timeStamp' nonce' PIN' HMACSHA1SignatureType' out normalizedUrl' out normalizedRequestParameters); " is 193.
Long Statement,OSAE.Twitter,OAuthBase,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\oAuth.cs,GenerateSignature,The length of the statement  "                    hmacsha1.Key = Encoding.ASCII.GetBytes(string.Format("{0}&{1}"' UrlEncode(consumerSecret)' string.IsNullOrEmpty(tokenSecret) ? "" : UrlEncode(tokenSecret))); " is 157.
Long Statement,OSAE.Twitter,Twitter,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\Twitter.cs,RunInterface,The length of the statement  "                    Log.Info("Here is the Twitter Authorization Link.  Copy and paste into your browser to authorize OSA to use your twitter account.  \nCopy the PIN you are given and put it into the PIN property for the Twitter plugin object and then execute the Authorize method: \n" + authLink); " is 278.
Long Statement,OSAE.Twitter,Twitter,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\Twitter.cs,SendTweet,The length of the statement  "                    string xml = _oAuth.oAuthWebRequest(oAuthTwitter.Method.POST'"http://api.twitter.com/1/statuses/update.xml"'"status=" + tweetEnc); " is 130.
Complex Conditional,OSAE.Twitter,OAuthBase,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\oAuth.cs,GenerateSignatureBase,The conditional expression  "!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443))"  is complex.
Complex Conditional,OSAE.Twitter,Twitter,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\Twitter.cs,RunInterface,The conditional expression  "_oAuth.Token != "" && _oAuth.TokenSecret != "" && _oAuth.PIN != "" && _oAuth.OAuthToken != """  is complex.
Magic Number,OSAE.Twitter,OAuthBase,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\oAuth.cs,GenerateSignatureBase,The following statement contains a magic number: if (!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443)))              {                  normalizedUrl += ":" + url.Port;              }
Magic Number,OSAE.Twitter,OAuthBase,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\oAuth.cs,GenerateSignatureBase,The following statement contains a magic number: if (!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443)))              {                  normalizedUrl += ":" + url.Port;              }
Magic Number,OSAE.Twitter,OAuthBase,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\oAuth.cs,GenerateTimeStamp,The following statement contains a magic number: TimeSpan ts = DateTime.UtcNow - new DateTime(1970' 1' 1' 0' 0' 0' 0);
Magic Number,OSAE.Twitter,OAuthBase,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\oAuth.cs,GenerateNonce,The following statement contains a magic number: return random.Next(123400' 9999999).ToString();
Magic Number,OSAE.Twitter,OAuthBase,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\oAuth.cs,GenerateNonce,The following statement contains a magic number: return random.Next(123400' 9999999).ToString();
Magic Number,OSAE.Twitter,Twitter,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Twitter\OSAE.Twitter\Twitter.cs,SendTweet,The following statement contains a magic number: if (tweet.Length == 0)              {                  Log.Info("Your tweet must be at least 1 character long!");                  return;              }              else if (tweet.Length > 140)              {                  Log.Info("Your tweet must less than 140 characters long!");                  return;              }              else              {                  try                  {                      // URL-encode the tweet...                      string tweetEnc = HttpUtility.UrlEncode(tweet);                        // And send it off...                      string xml = _oAuth.oAuthWebRequest(oAuthTwitter.Method.POST'"http://api.twitter.com/1/statuses/update.xml"'"status=" + tweetEnc);                      Log.Info("Tweet posted successfully: " + tweet);                  }                  catch (Exception ex)                  {                      Log.Error("An error occurred while posting your tweet"' ex);                      return;                  }              }
