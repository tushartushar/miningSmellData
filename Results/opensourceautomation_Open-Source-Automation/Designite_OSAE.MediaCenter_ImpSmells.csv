Implementation smell,Namespace,Class,File,Method,Description
Long Method,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,statusListen,The method has 286 lines of code.
Complex Method,OSAE.MediaCenter,MediaCenter,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenter.cs,update,Cyclomatic complexity of the method is 9
Complex Method,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,ProcessCommand,Cyclomatic complexity of the method is 10
Complex Method,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,statusListen,Cyclomatic complexity of the method is 53
Long Statement,OSAE.MediaCenter,MediaCenter,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenter.cs,RunInterface,The length of the statement  "            OSAEObjectTypeManager.ObjectTypeUpdate("MediaCenter Device"' "MediaCenter Device"' "MediaCenter Device"' pluginName' "MediaCenter Device"' false' false' false' true);" is 166.
Long Statement,OSAE.MediaCenter,MediaCenter,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenter.cs,RunInterface,The length of the statement  "            bool isNum = Int32.TryParse(OSAEObjectPropertyManager.GetObjectPropertyValue(pName' "Poll Interval").Value' out interval);" is 122.
Long Statement,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,EstablishCommandConnection,The length of the statement  "                    if (initialconnection) Log.Debug("Creating Command TCP Client (" + _name + "): ip-" + _ip + " commandport-" + _CommandPort);" is 124.
Long Statement,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,EstablishCommandConnection,The length of the statement  "                    if (initialconnection) Log.Info(_name + " - Properties not set correctly: ip-" + _ip + " networkport-" + _CommandPort + " statusport-" + _StatusPort);" is 150.
Long Statement,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,EstablishCommandConnection,The length of the statement  "                if (initialconnection) Log.Error("Error creating command connection to MediaCenter device (" + _name + "): " + ex.Message);" is 123.
Long Statement,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,EstablishStatusConnection,The length of the statement  "                    if (initialconnection) Log.Debug("Creating Status TCP Client (" + _name + "): ip-" + _ip + " statusport-" + _StatusPort);" is 121.
Long Statement,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,EstablishStatusConnection,The length of the statement  "                    if (initialconnection) Log.Info(_name + " - Properties not set correctly: ip-" + _ip + " networkport-" + _CommandPort + " statusport-" + _StatusPort);" is 150.
Long Statement,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,statusListen,The length of the statement  "            System.TimeSpan sessioninfoduration = new System.TimeSpan(0' 0' 0' 15); //session info occurs within 15 seconds otherwise we can't identify what session it belongs to" is 166.
Long Statement,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,statusListen,The length of the statement  "                                    else // if we can't find that session then it could have been already in progress and got assigned session number 0 when we started.. so mark 0 and not active" is 158.
Long Statement,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,statusListen,The length of the statement  "                                // somehow we only need to update for non recording sessions (also if the curr session is a recording... find the last active non recording and update that)" is 156.
Long Statement,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,statusListen,The length of the statement  "                                OSAEObjectPropertyManager.ObjectPropertySet(_name' "Last Screen"' curLine.Replace("=True"' "").Replace("FS_"' "")' pName);" is 122.
Long Statement,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,statusListen,The length of the statement  "                                Log.Debug("looping sessions for " + _name + " (" + sessions.Count().ToString() + ")-  active:" + s.active + "' sessionnum:" + s.SessionNumber + "' type:" + s.SessionType + "' lastupdate:" + s.lastupdate + "' medianame:" + s.MediaName + "' play:" + s.Play.ToString() + "' stop:" + s.Stop.ToString());" is 299.
Long Statement,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,statusListen,The length of the statement  "                                        if (s.SessionNumber == 0) // fix issue when plugin first started it will give us the last media played and not the current recording name on start of the status connection" is 171.
Long Statement,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,statusListen,The length of the statement  "                                    if (DateTime.Now >= s.lastupdate.Add(sessionkeepduration) && cursessionindex != sessions.Count() - 1) // if it is not active and hasn't been updated in an hour and is not the last session then remove it" is 202.
Magic Number,OSAE.MediaCenter,MediaCenter,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenter.cs,RunInterface,The following statement contains a magic number: Clock.Interval = interval * 1000;
Magic Number,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,SendCommand_Network,The following statement contains a magic number: int total = length + 16;
Magic Number,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,statusListen,The following statement contains a magic number: System.TimeSpan sessioninfoduration = new System.TimeSpan(0' 0' 0' 15);
Magic Number,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,statusListen,The following statement contains a magic number: tracktime % 30 == 0 || tracktime == 1
Missing Default,OSAE.MediaCenter,MediaCenter,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenter.cs,ProcessCommand,The following switch statement is missing a default case: switch (method_name)                 {                     case "SCAN":                         //will eventaully try to run a network scan to check if any devices are active on port 40400 or 40500                         Log.Info("Scan event triggered... currently it does nothing ");                         break;                     case "NOTIFYALL":                         mycommand = @"msgbox ""OSA"" """ + parameter_1 + @""" " + parameter_2;                         Log.Info("NOTIFYALL event triggered' command to send=" + mycommand);                          foreach (MCDevice d in mcdevices)                         {                             d.SendCommand_Network(mycommand);                         }                                                  break;                  }
Missing Default,OSAE.MediaCenter,MediaCenter,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenter.cs,createdevice,The following switch statement is missing a default case: switch (prop.Name)                 {                     case "Type":                         d.Type = prop.Value;                         break;                     case "IP":                         d.IP = prop.Value;                         break;                     case "Network Port":                         try                         {                             d.CommandPort = Int32.Parse(prop.Value);                         }                         catch                         {                             d.CommandPort = 0;                         }                         break;                 }
Missing Default,OSAE.MediaCenter,MCDevice,C:\research\architectureSmells\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.MediaCenter\MediaCenterDevice.cs,ProcessCommand,The following switch statement is missing a default case: switch (method_name)             {                 case "PLAY":                     Log.Info("PLAY event triggered (" + _name + ")");                     SendCommand_Network("playrate Play");                     break;                 case "STOP":                     Log.Info("STOP event triggered (" + _name + ")");                     SendCommand_Network("playrate Stop");                     break;                 case "PAUSE":                     Log.Info("STOP event triggered (" + _name + ")");                     SendCommand_Network("playrate Pause");                     break;                 case "MUTE":                     Log.Info("MUTE event triggered (" + _name + ")");                     SendCommand_Network("volume Mute");                     break;                 case "UNMUTE":                     Log.Info("UNMUTE event triggered (" + _name + ")");                     SendCommand_Network("volume UnMute");                     break;                 case "SETVOLUME":                     mycommand = "volume " + parameter_1;                     Log.Info("SETVOLUME event triggered (" + _name + ")' command to send=" + mycommand);                     SendCommand_Network(mycommand);                     break;                 case "NOTIFY":                     mycommand = @"msgbox ""OSA"" """ + parameter_1 + @""" " + parameter_2;                     Log.Info("NOTIFY event triggered (" + _name + ")' command to send=" + mycommand);                     SendCommand_Network(mycommand);                     break;                 case "GOTO":                     mycommand = "goto " + parameter_1;                     Log.Info("GOTO event triggered (" + _name + ")' command to send=" + mycommand);                     SendCommand_Network(mycommand);                     break;                 case "SEND_COMMAND":                     mycommand = parameter_1;                     Log.Info("SEND_COMMAND event triggered (" + _name + ")' command to send=" + mycommand);                     SendCommand_Network(mycommand);                     break;                 case "TEST_REESTABLISHCONNECTIONS":                     EstablishInitialConnections();                                         break;              }
