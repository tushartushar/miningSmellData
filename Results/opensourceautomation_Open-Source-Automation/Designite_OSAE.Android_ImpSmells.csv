Implementation smell,Namespace,Class,File,Method,Description
Long Statement,OSAE.Android,Android,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Android\OSAE.Android\Android.cs,OwnTypes,The length of the statement  "                OSAEObjectTypeManager.ObjectTypeUpdate(oType.Name' oType.Name' oType.Description' pName' oType.BaseType' oType.Owner' oType.SysType' oType.Container' oType.HideRedundant' oType.Tooltip); " is 186.
Long Statement,OSAE.Android,Android,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Android\OSAE.Android\Android.cs,OwnTypes,The length of the statement  "                OSAEObjectTypeManager.ObjectTypeUpdate(oType.Name' oType.Name' oType.Description' pName' oType.BaseType' oType.Owner' oType.SysType' oType.Container' oType.HideRedundant'oType.Tooltip); " is 185.
Long Statement,OSAE.Android,AndroidDevice,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Android\OSAE.Android\AndroidDevice.cs,ProcessCommand,The length of the statement  "            string osaid; //eventually we will use this to keep track on osa side to handle removing notification once it is seen on one of the devices with the same owner' but for now it is not used " is 187.
Long Statement,OSAE.Android,AndroidDevice,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Android\OSAE.Android\AndroidDevice.cs,ProcessCommand,The length of the statement  "            //look up address again in case it changed' but don't update if we get back a null or blank value (this probably means they renamed the object so looking up by the name we have returns nothing) " is 193.
Long Statement,OSAE.Android,AndroidDevice,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Android\OSAE.Android\AndroidDevice.cs,ProcessCommand,The length of the statement  "                    osaid = "-1"; //eventually we will use this to keep track on osa side to handle removing notification once it is seen on one of the devices with the same owner' but for now it is not used " is 187.
Long Statement,OSAE.Android,AndroidDevice,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Android\OSAE.Android\AndroidDevice.cs,ProcessCommand,The length of the statement  "                    payload = "\"type\" : \"notification\" \"message\" : \"" + parameter_1 + "\" \"category\" : \"" + category + "\" \"level\" : \"" + level + "\" \"osaid\" : \"" + osaid + "\" \"messagedate\" : \"" + messagedate + "\" "; " is 217.
Long Statement,OSAE.Android,AndroidDevice,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Android\OSAE.Android\AndroidDevice.cs,ProcessCommand,The length of the statement  "                    osaid = "-1"; //eventually we will use this to keep track on osa side to handle removing notification once it is seen on one of the devices with the same owner' but for now it is not used " is 187.
Long Statement,OSAE.Android,AndroidDevice,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Android\OSAE.Android\AndroidDevice.cs,ProcessCommand,The length of the statement  "                    payload = "\"type\" : \"taskertask\" \"message\" : \"" + parameter_1 + "\" \"category\" : \"" + category + "\" \"level\" : \"" + level + "\" \"osaid\" : \"" + osaid + "\" \"messagedate\" : \"" + messagedate + "\" "; " is 215.
Missing Default,OSAE.Android,Android,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Android\OSAE.Android\Android.cs,ProcessCommand,The following switch statement is missing a default case: switch (method_name)                      {                          case "NOTIFYALL":                              Log.Debug("NOTIFYALL event triggered");                              Log.Debug("NOTIFYALL devices to loop:" + mdevices.Count);                                foreach (AndroidDevice d in mdevices)                              {                                  Log.Debug("NOTIFYALL loop for device:" + d.Name);                                  d.ProcessCommand("NOTIFY"' parameter_1' parameter_2);                              }                                break;                            case "EXECUTEALL":                              Log.Debug("EXECUTEALL event triggered");                              Log.Debug("EXECUTEALL devices to loop:" + mdevices.Count);                                foreach (AndroidDevice d in mdevices)                              {                                  Log.Debug("EXECUTEALL loop for device:" + d.Name);                                  d.ProcessCommand("EXECUTE"' parameter_1' parameter_2);                              }                              break;                      }
Missing Default,OSAE.Android,Android,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Android\OSAE.Android\Android.cs,createdevice,The following switch statement is missing a default case: switch (prop.Name)                  {                      case "Owner":                          d.Owner = prop.Value;                          break;                      case "GCMID":                          d.GCMID = prop.Value;                          break;                  }
Missing Default,OSAE.Android,AndroidDevice,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Android\OSAE.Android\AndroidDevice.cs,ProcessCommand,The following switch statement is missing a default case: switch (method_name)              {                  case "NOTIFY":                      Log.Info("NOTIFY event triggered (" + _name + ")' parameter_1=" + parameter_1 + "' parameter_2=" + parameter_2);                      Log.Debug("address = " + _gcmid);                      category = "default";                      level = "5";                      osaid = "-1"; //eventually we will use this to keep track on osa side to handle removing notification once it is seen on one of the devices with the same owner' but for now it is not used                        if (parameter_2 != "")                      {                          string[] parts = parameter_2.Split(''');                          if (parts.Length > 0) { category = parts[0]; }                          if (parts.Length > 1) { level = parts[1]; }                      }                      payload = "\"type\" : \"notification\" \"message\" : \"" + parameter_1 + "\" \"category\" : \"" + category + "\" \"level\" : \"" + level + "\" \"osaid\" : \"" + osaid + "\" \"messagedate\" : \"" + messagedate + "\" ";                      strResponse = gcmsender.Send(payload);                      Log.Debug("GCM response new version = " + strResponse);                      break;                  case "EXECUTE":                      Log.Info("EXECUTE event triggered (" + _name + ")' parameter_1=" + parameter_1 + "' parameter_2=" + parameter_2);                      Log.Debug("address = " + _gcmid);                      category = "#taskertask#";                      level = "5";                      osaid = "-1"; //eventually we will use this to keep track on osa side to handle removing notification once it is seen on one of the devices with the same owner' but for now it is not used                      payload = "\"type\" : \"taskertask\" \"message\" : \"" + parameter_1 + "\" \"category\" : \"" + category + "\" \"level\" : \"" + level + "\" \"osaid\" : \"" + osaid + "\" \"messagedate\" : \"" + messagedate + "\" ";                      strResponse = gcmsender.Send(payload);                      Log.Debug("GCM response new version = " + strResponse);                      break;              }
