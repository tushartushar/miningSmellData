Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,Poll,Cyclomatic complexity of the method is 13
Complex Method,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,RunInterface,Cyclomatic complexity of the method is 8
Long Statement,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,StateChange,The length of the statement  "                Log.Debug("State change: " + obj.Name + " (" + address + ")" + " changed to " + OSAEObjectStateManager.GetObjectStateValue(obj.Name).Value); " is 140.
Long Statement,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,RunInterface,The length of the statement  "            OSAEObjectTypeManager.ObjectTypeUpdate("JWORKS INPUT"' "JWORKS INPUT"' "J-Works Input"' pName' "JWORKS INPUT"' false' false' false' true' "J-Works Input"); " is 155.
Long Statement,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,RunInterface,The length of the statement  "            OSAEObjectTypeManager.ObjectTypeUpdate("JWORKS OUTPUT"' "JWORKS OUTPUT"' "J-Works Output"' pName' "JWORKS OUTPUT"' false' false' false' true' "J-Works Output"); " is 160.
Long Statement,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,RunInterface,The length of the statement  "                Log.Info("Found JSB34x device " + serial + " " + driverVersion + " " + DllVersion + " " + firmwareVersion + " with " + numInputs + " inputs' " + numOutputs + " outputs."); " is 171.
Long Statement,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,RunInterface,The length of the statement  "                Log.Info("Found JSB38x / JSB39x device " + serial + " " + driverVersion + " " + DllVersion + " " + firmwareVersion + " with " + numInputs + " inputs."); " is 152.
Magic Number,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,AddIO,The following statement contains a magic number: if (OSAEObjectManager.GetObjectByAddress(address) == null)              {                  if (dir == Direction.Input)                      OSAEObjectManager.ObjectAdd("J-Works-I" + address'""' "J -Works input"' "JWORKS INPUT"' address' ""' 30' true);                  else                      OSAEObjectManager.ObjectAdd("J-Works-0" + address'""' "J-Works output"' "JWORKS OUTPUT"' address' ""' 30' true);                    OSAEObjectPropertyManager.ObjectPropertySet(address' "Serial"' serial' pName);                  OSAEObjectPropertyManager.ObjectPropertySet(address' "Id"' Convert.ToString(id)'pName);                  OSAEObjectPropertyManager.ObjectPropertySet(address' "Invert"' "FALSE"' pName);              }
Magic Number,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,AddIO,The following statement contains a magic number: if (OSAEObjectManager.GetObjectByAddress(address) == null)              {                  if (dir == Direction.Input)                      OSAEObjectManager.ObjectAdd("J-Works-I" + address'""' "J -Works input"' "JWORKS INPUT"' address' ""' 30' true);                  else                      OSAEObjectManager.ObjectAdd("J-Works-0" + address'""' "J-Works output"' "JWORKS OUTPUT"' address' ""' 30' true);                    OSAEObjectPropertyManager.ObjectPropertySet(address' "Serial"' serial' pName);                  OSAEObjectPropertyManager.ObjectPropertySet(address' "Id"' Convert.ToString(id)'pName);                  OSAEObjectPropertyManager.ObjectPropertySet(address' "Invert"' "FALSE"' pName);              }
Magic Number,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,RunInterface,The following statement contains a magic number: StringBuilder sb = new StringBuilder(32);
Magic Number,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,RunInterface,The following statement contains a magic number: Jsb34xDllVersion(sb' 32);
Magic Number,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,RunInterface,The following statement contains a magic number: for (short dev = 1; dev <= numDevs; ++dev)              {                  sb.Clear();                  Jsb34xSerialNumber(dev' sb' 32);                  String serial = sb.ToString();                  sb.Clear();                  Jsb34xFirmwareVersion(serial' sb' 32);                  string firmwareVersion = sb.ToString();                  sb.Clear();                  Jsb34xDriverVersion(serial' sb' 32);                  string driverVersion = sb.ToString();                    Jsb34xOpenAllRelays(serial);                  JSB34Xs.Add(serial);                  JSB34XState.Add(0);                    byte numInputs = Jsb34xMaxInputs(serial);                  byte numOutputs = Jsb34xMaxRelays(serial);                  Log.Info("Found JSB34x device " + serial + " " + driverVersion + " " + DllVersion + " " + firmwareVersion + " with " + numInputs + " inputs' " + numOutputs + " outputs.");                  for (byte inp = 1; inp <= numInputs; ++inp)                      AddIO(serial + "_I" + inp' Direction.Input' serial' inp);                  for (byte outp = 1; outp <= numOutputs; ++outp)                      AddIO(serial + "_O" + outp' Direction.Output' serial' outp);              }
Magic Number,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,RunInterface,The following statement contains a magic number: for (short dev = 1; dev <= numDevs; ++dev)              {                  sb.Clear();                  Jsb34xSerialNumber(dev' sb' 32);                  String serial = sb.ToString();                  sb.Clear();                  Jsb34xFirmwareVersion(serial' sb' 32);                  string firmwareVersion = sb.ToString();                  sb.Clear();                  Jsb34xDriverVersion(serial' sb' 32);                  string driverVersion = sb.ToString();                    Jsb34xOpenAllRelays(serial);                  JSB34Xs.Add(serial);                  JSB34XState.Add(0);                    byte numInputs = Jsb34xMaxInputs(serial);                  byte numOutputs = Jsb34xMaxRelays(serial);                  Log.Info("Found JSB34x device " + serial + " " + driverVersion + " " + DllVersion + " " + firmwareVersion + " with " + numInputs + " inputs' " + numOutputs + " outputs.");                  for (byte inp = 1; inp <= numInputs; ++inp)                      AddIO(serial + "_I" + inp' Direction.Input' serial' inp);                  for (byte outp = 1; outp <= numOutputs; ++outp)                      AddIO(serial + "_O" + outp' Direction.Output' serial' outp);              }
Magic Number,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,RunInterface,The following statement contains a magic number: for (short dev = 1; dev <= numDevs; ++dev)              {                  sb.Clear();                  Jsb34xSerialNumber(dev' sb' 32);                  String serial = sb.ToString();                  sb.Clear();                  Jsb34xFirmwareVersion(serial' sb' 32);                  string firmwareVersion = sb.ToString();                  sb.Clear();                  Jsb34xDriverVersion(serial' sb' 32);                  string driverVersion = sb.ToString();                    Jsb34xOpenAllRelays(serial);                  JSB34Xs.Add(serial);                  JSB34XState.Add(0);                    byte numInputs = Jsb34xMaxInputs(serial);                  byte numOutputs = Jsb34xMaxRelays(serial);                  Log.Info("Found JSB34x device " + serial + " " + driverVersion + " " + DllVersion + " " + firmwareVersion + " with " + numInputs + " inputs' " + numOutputs + " outputs.");                  for (byte inp = 1; inp <= numInputs; ++inp)                      AddIO(serial + "_I" + inp' Direction.Input' serial' inp);                  for (byte outp = 1; outp <= numOutputs; ++outp)                      AddIO(serial + "_O" + outp' Direction.Output' serial' outp);              }
Magic Number,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,RunInterface,The following statement contains a magic number: Jsb383DllVersion(sb' 32);
Magic Number,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,RunInterface,The following statement contains a magic number: for (short dev = 1; dev <= numDevs; ++dev)              {                  sb.Clear();                  Jsb383SerialNumber(dev' sb' 32);                  String serial = sb.ToString();                  sb.Clear();                  Jsb383FirmwareVersion(serial' sb' 32);                  string firmwareVersion = sb.ToString();                  sb.Clear();                  Jsb383DriverVersion(serial' sb' 32);                  string driverVersion = sb.ToString();                    JSB383s.Add(serial);                  JSB383State.Add(0);                    byte numInputs = Jsb383MaxInputs(serial);                  Log.Info("Found JSB38x / JSB39x device " + serial + " " + driverVersion + " " + DllVersion + " " + firmwareVersion + " with " + numInputs + " inputs.");                  for (byte inp = 1; inp <= numInputs; ++inp)                      AddIO(serial + "_I" + inp' Direction.Input' serial' inp);              }
Magic Number,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,RunInterface,The following statement contains a magic number: for (short dev = 1; dev <= numDevs; ++dev)              {                  sb.Clear();                  Jsb383SerialNumber(dev' sb' 32);                  String serial = sb.ToString();                  sb.Clear();                  Jsb383FirmwareVersion(serial' sb' 32);                  string firmwareVersion = sb.ToString();                  sb.Clear();                  Jsb383DriverVersion(serial' sb' 32);                  string driverVersion = sb.ToString();                    JSB383s.Add(serial);                  JSB383State.Add(0);                    byte numInputs = Jsb383MaxInputs(serial);                  Log.Info("Found JSB38x / JSB39x device " + serial + " " + driverVersion + " " + DllVersion + " " + firmwareVersion + " with " + numInputs + " inputs.");                  for (byte inp = 1; inp <= numInputs; ++inp)                      AddIO(serial + "_I" + inp' Direction.Input' serial' inp);              }
Magic Number,OSAE.JWorks,jworks,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.J-Works\jworks.cs,RunInterface,The following statement contains a magic number: for (short dev = 1; dev <= numDevs; ++dev)              {                  sb.Clear();                  Jsb383SerialNumber(dev' sb' 32);                  String serial = sb.ToString();                  sb.Clear();                  Jsb383FirmwareVersion(serial' sb' 32);                  string firmwareVersion = sb.ToString();                  sb.Clear();                  Jsb383DriverVersion(serial' sb' 32);                  string driverVersion = sb.ToString();                    JSB383s.Add(serial);                  JSB383State.Add(0);                    byte numInputs = Jsb383MaxInputs(serial);                  Log.Info("Found JSB38x / JSB39x device " + serial + " " + driverVersion + " " + DllVersion + " " + firmwareVersion + " with " + numInputs + " inputs.");                  for (byte inp = 1; inp <= numInputs; ++inp)                      AddIO(serial + "_I" + inp' Direction.Input' serial' inp);              }
