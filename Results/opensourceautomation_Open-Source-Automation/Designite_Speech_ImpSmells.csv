Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OSAE.Speech,SPEECH,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Speech\Speech.cs,Load_Settings,Cyclomatic complexity of the method is 9
Long Statement,OSAE.Speech,SPEECH,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Speech\Speech.cs,OwnTypes,The length of the statement  "                OSAEObjectTypeManager.ObjectTypeUpdate(oType.Name' oType.Name' oType.Description' gAppName' oType.BaseType' oType.Owner' oType.SysType' oType.Container' oType.HideRedundant' oType.Tooltip); " is 189.
Magic Number,OSAE.Speech,SPEECH,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Speech\Speech.cs,Load_Settings,The following statement contains a magic number: try              {                  try                  { gDebug = Convert.ToBoolean(OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "Debug").Value); }                  catch                  { Log.Error("I think the Debug property is missing from the Speech object type!"); }                    Log.Info("Debug Mode Set to " + gDebug);                  gSelectedVoice = OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "Voice").Value;                  bool VoiceValid = false;                  string aValidVoice = "";                  OSAEObjectPropertyManager.ObjectPropertyArrayDeleteAll(gAppName' "Voices");                  foreach (System.Speech.Synthesis.InstalledVoice i in oSpeech.GetInstalledVoices())                  {                      if (aValidVoice == "") aValidVoice = i.VoiceInfo.Name;                      if (gSelectedVoice == "") gSelectedVoice = i.VoiceInfo.Name;                      Log.Info("Adding Voice: " + i.VoiceInfo.Name);                      if (gSelectedVoice == i.VoiceInfo.Name) VoiceValid = true;                      OSAEObjectPropertyManager.ObjectPropertyArrayAdd(gAppName' "Voices"' i.VoiceInfo.Name' "Voice");                  }                  if (VoiceValid != true) gSelectedVoice = aValidVoice;                    if (gSelectedVoice != "")                  {                      oSpeech.SelectVoice(gSelectedVoice);                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Voice"' gSelectedVoice' "SPEECH");                      Log.Info("Current Voice Set to " + gSelectedVoice);                  }                    // Load the speech rate' which must be -10 to 10' and set it to 0 if it is not valid.                  int iTTSRate = 0;                  try                  { iTTSRate = Convert.ToInt16(OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "TTS Rate").Value); }                  catch                  {                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Rate"' iTTSRate.ToString()' gAppName);                      Log.Info("TTS Rate was invalid! I changed it to " + iTTSRate.ToString());                  }                  if (iTTSRate < -10 || iTTSRate > 10)                  {                      iTTSRate = 0;                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Rate"' iTTSRate.ToString()' gAppName);                      Log.Info("TTS Rate was invalid! I changed it to " + iTTSRate.ToString());                  }                  Log.Info("TTS Rate Set to " + iTTSRate.ToString());                  oSpeech.Rate = iTTSRate;                    // Load the speech volume' which must be 0 to 100' and set it to 1000 if it is not valid.                  int iTTSVolume = 1000;                  try                  {                      iTTSVolume = Convert.ToInt16(OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "TTS Volume").Value);                  }                  catch                  {                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Volume"' iTTSVolume.ToString()' gAppName);                      Log.Info("TTS Volume was invalid! I changed it to " + iTTSVolume.ToString());                  }                  if (iTTSVolume < 0 || iTTSVolume > 100)                  {                      iTTSVolume = 0;                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Volume"' iTTSVolume.ToString()' gAppName);                      Log.Info("TTS Volume was invalid! I changed it to " + iTTSVolume.ToString());                  }                  oSpeech.Volume = iTTSVolume;                  Log.Info("TTS Volume Set to " + iTTSVolume.ToString());              }              catch (Exception ex)              { Log.Error("Error in Load_Settings!"' ex); }
Magic Number,OSAE.Speech,SPEECH,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Speech\Speech.cs,Load_Settings,The following statement contains a magic number: try              {                  try                  { gDebug = Convert.ToBoolean(OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "Debug").Value); }                  catch                  { Log.Error("I think the Debug property is missing from the Speech object type!"); }                    Log.Info("Debug Mode Set to " + gDebug);                  gSelectedVoice = OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "Voice").Value;                  bool VoiceValid = false;                  string aValidVoice = "";                  OSAEObjectPropertyManager.ObjectPropertyArrayDeleteAll(gAppName' "Voices");                  foreach (System.Speech.Synthesis.InstalledVoice i in oSpeech.GetInstalledVoices())                  {                      if (aValidVoice == "") aValidVoice = i.VoiceInfo.Name;                      if (gSelectedVoice == "") gSelectedVoice = i.VoiceInfo.Name;                      Log.Info("Adding Voice: " + i.VoiceInfo.Name);                      if (gSelectedVoice == i.VoiceInfo.Name) VoiceValid = true;                      OSAEObjectPropertyManager.ObjectPropertyArrayAdd(gAppName' "Voices"' i.VoiceInfo.Name' "Voice");                  }                  if (VoiceValid != true) gSelectedVoice = aValidVoice;                    if (gSelectedVoice != "")                  {                      oSpeech.SelectVoice(gSelectedVoice);                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Voice"' gSelectedVoice' "SPEECH");                      Log.Info("Current Voice Set to " + gSelectedVoice);                  }                    // Load the speech rate' which must be -10 to 10' and set it to 0 if it is not valid.                  int iTTSRate = 0;                  try                  { iTTSRate = Convert.ToInt16(OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "TTS Rate").Value); }                  catch                  {                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Rate"' iTTSRate.ToString()' gAppName);                      Log.Info("TTS Rate was invalid! I changed it to " + iTTSRate.ToString());                  }                  if (iTTSRate < -10 || iTTSRate > 10)                  {                      iTTSRate = 0;                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Rate"' iTTSRate.ToString()' gAppName);                      Log.Info("TTS Rate was invalid! I changed it to " + iTTSRate.ToString());                  }                  Log.Info("TTS Rate Set to " + iTTSRate.ToString());                  oSpeech.Rate = iTTSRate;                    // Load the speech volume' which must be 0 to 100' and set it to 1000 if it is not valid.                  int iTTSVolume = 1000;                  try                  {                      iTTSVolume = Convert.ToInt16(OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "TTS Volume").Value);                  }                  catch                  {                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Volume"' iTTSVolume.ToString()' gAppName);                      Log.Info("TTS Volume was invalid! I changed it to " + iTTSVolume.ToString());                  }                  if (iTTSVolume < 0 || iTTSVolume > 100)                  {                      iTTSVolume = 0;                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Volume"' iTTSVolume.ToString()' gAppName);                      Log.Info("TTS Volume was invalid! I changed it to " + iTTSVolume.ToString());                  }                  oSpeech.Volume = iTTSVolume;                  Log.Info("TTS Volume Set to " + iTTSVolume.ToString());              }              catch (Exception ex)              { Log.Error("Error in Load_Settings!"' ex); }
Magic Number,OSAE.Speech,SPEECH,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Speech\Speech.cs,Load_Settings,The following statement contains a magic number: try              {                  try                  { gDebug = Convert.ToBoolean(OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "Debug").Value); }                  catch                  { Log.Error("I think the Debug property is missing from the Speech object type!"); }                    Log.Info("Debug Mode Set to " + gDebug);                  gSelectedVoice = OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "Voice").Value;                  bool VoiceValid = false;                  string aValidVoice = "";                  OSAEObjectPropertyManager.ObjectPropertyArrayDeleteAll(gAppName' "Voices");                  foreach (System.Speech.Synthesis.InstalledVoice i in oSpeech.GetInstalledVoices())                  {                      if (aValidVoice == "") aValidVoice = i.VoiceInfo.Name;                      if (gSelectedVoice == "") gSelectedVoice = i.VoiceInfo.Name;                      Log.Info("Adding Voice: " + i.VoiceInfo.Name);                      if (gSelectedVoice == i.VoiceInfo.Name) VoiceValid = true;                      OSAEObjectPropertyManager.ObjectPropertyArrayAdd(gAppName' "Voices"' i.VoiceInfo.Name' "Voice");                  }                  if (VoiceValid != true) gSelectedVoice = aValidVoice;                    if (gSelectedVoice != "")                  {                      oSpeech.SelectVoice(gSelectedVoice);                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Voice"' gSelectedVoice' "SPEECH");                      Log.Info("Current Voice Set to " + gSelectedVoice);                  }                    // Load the speech rate' which must be -10 to 10' and set it to 0 if it is not valid.                  int iTTSRate = 0;                  try                  { iTTSRate = Convert.ToInt16(OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "TTS Rate").Value); }                  catch                  {                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Rate"' iTTSRate.ToString()' gAppName);                      Log.Info("TTS Rate was invalid! I changed it to " + iTTSRate.ToString());                  }                  if (iTTSRate < -10 || iTTSRate > 10)                  {                      iTTSRate = 0;                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Rate"' iTTSRate.ToString()' gAppName);                      Log.Info("TTS Rate was invalid! I changed it to " + iTTSRate.ToString());                  }                  Log.Info("TTS Rate Set to " + iTTSRate.ToString());                  oSpeech.Rate = iTTSRate;                    // Load the speech volume' which must be 0 to 100' and set it to 1000 if it is not valid.                  int iTTSVolume = 1000;                  try                  {                      iTTSVolume = Convert.ToInt16(OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "TTS Volume").Value);                  }                  catch                  {                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Volume"' iTTSVolume.ToString()' gAppName);                      Log.Info("TTS Volume was invalid! I changed it to " + iTTSVolume.ToString());                  }                  if (iTTSVolume < 0 || iTTSVolume > 100)                  {                      iTTSVolume = 0;                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Volume"' iTTSVolume.ToString()' gAppName);                      Log.Info("TTS Volume was invalid! I changed it to " + iTTSVolume.ToString());                  }                  oSpeech.Volume = iTTSVolume;                  Log.Info("TTS Volume Set to " + iTTSVolume.ToString());              }              catch (Exception ex)              { Log.Error("Error in Load_Settings!"' ex); }
Magic Number,OSAE.Speech,SPEECH,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Speech\Speech.cs,Load_Settings,The following statement contains a magic number: try              {                  try                  { gDebug = Convert.ToBoolean(OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "Debug").Value); }                  catch                  { Log.Error("I think the Debug property is missing from the Speech object type!"); }                    Log.Info("Debug Mode Set to " + gDebug);                  gSelectedVoice = OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "Voice").Value;                  bool VoiceValid = false;                  string aValidVoice = "";                  OSAEObjectPropertyManager.ObjectPropertyArrayDeleteAll(gAppName' "Voices");                  foreach (System.Speech.Synthesis.InstalledVoice i in oSpeech.GetInstalledVoices())                  {                      if (aValidVoice == "") aValidVoice = i.VoiceInfo.Name;                      if (gSelectedVoice == "") gSelectedVoice = i.VoiceInfo.Name;                      Log.Info("Adding Voice: " + i.VoiceInfo.Name);                      if (gSelectedVoice == i.VoiceInfo.Name) VoiceValid = true;                      OSAEObjectPropertyManager.ObjectPropertyArrayAdd(gAppName' "Voices"' i.VoiceInfo.Name' "Voice");                  }                  if (VoiceValid != true) gSelectedVoice = aValidVoice;                    if (gSelectedVoice != "")                  {                      oSpeech.SelectVoice(gSelectedVoice);                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Voice"' gSelectedVoice' "SPEECH");                      Log.Info("Current Voice Set to " + gSelectedVoice);                  }                    // Load the speech rate' which must be -10 to 10' and set it to 0 if it is not valid.                  int iTTSRate = 0;                  try                  { iTTSRate = Convert.ToInt16(OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "TTS Rate").Value); }                  catch                  {                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Rate"' iTTSRate.ToString()' gAppName);                      Log.Info("TTS Rate was invalid! I changed it to " + iTTSRate.ToString());                  }                  if (iTTSRate < -10 || iTTSRate > 10)                  {                      iTTSRate = 0;                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Rate"' iTTSRate.ToString()' gAppName);                      Log.Info("TTS Rate was invalid! I changed it to " + iTTSRate.ToString());                  }                  Log.Info("TTS Rate Set to " + iTTSRate.ToString());                  oSpeech.Rate = iTTSRate;                    // Load the speech volume' which must be 0 to 100' and set it to 1000 if it is not valid.                  int iTTSVolume = 1000;                  try                  {                      iTTSVolume = Convert.ToInt16(OSAEObjectPropertyManager.GetObjectPropertyValue(gAppName' "TTS Volume").Value);                  }                  catch                  {                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Volume"' iTTSVolume.ToString()' gAppName);                      Log.Info("TTS Volume was invalid! I changed it to " + iTTSVolume.ToString());                  }                  if (iTTSVolume < 0 || iTTSVolume > 100)                  {                      iTTSVolume = 0;                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Volume"' iTTSVolume.ToString()' gAppName);                      Log.Info("TTS Volume was invalid! I changed it to " + iTTSVolume.ToString());                  }                  oSpeech.Volume = iTTSVolume;                  Log.Info("TTS Volume Set to " + iTTSVolume.ToString());              }              catch (Exception ex)              { Log.Error("Error in Load_Settings!"' ex); }
Magic Number,OSAE.Speech,SPEECH,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Speech\Speech.cs,ProcessCommand,The following statement contains a magic number: if (sMethod == "SPEAK")              {                  string sText = Common.PatternParse(sParam1);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "TRUE"' gAppName);                  oSpeech.Speak(sText);                  Log.Info("Said " + sText);                  Thread.Sleep(500);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "FALSE"' gAppName);              }              else if (sMethod == "SPEAKFROM")              {                  Log.Info("--Speak From Object: " + sParam1 + " and pick From list: " + sParam2);                  string sText = OSAEObjectPropertyManager.ObjectPropertyArrayGetRandom(sParam1' sParam2).ToString();                  sText = Common.PatternParse(sText);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "TRUE"' gAppName);                  oSpeech.Speak(sText);                  Log.Info("Said " + sText);                  Thread.Sleep(500);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "FALSE"' gAppName);              }              else if (sMethod == "PLAY")              {                  wmPlayer.URL = sParam1;                  wmPlayer.controls.play();                  Log.Info("Played " + sParam1);              }              else if (sMethod == "PLAYFROM")              {                  string sFile = OSAEObjectPropertyManager.ObjectPropertyArrayGetRandom(sParam1' sParam2).ToString();                  wmPlayer.URL = sFile;                  wmPlayer.controls.play();                  Log.Info("Played " + sFile);              }              else if (sMethod == "STOP")              {                  wmPlayer.controls.stop();                  Log.Info("Stopped");              }              else if (sMethod == "PAUSE")              {                  wmPlayer.controls.pause();                  Log.Info("Paused");              }              else if (sMethod == "SETVOICE")              {                  gSelectedVoice = sParam1;                  oSpeech.SelectVoice(gSelectedVoice);                  Log.Info("Voice Set to " + gSelectedVoice);              }              else if (sMethod == "SETTTSVOLUME")              {                  if (Convert.ToInt16(sParam1) > 0 && Convert.ToInt16(sParam1) <= 100)                  {                      oSpeech.Volume = Convert.ToInt16(sParam1);                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Volume"' sParam1' "SPEECH");                      Log.Info("TTS Volume Set to " + Convert.ToInt16(sParam1));                  }              }              else if (sMethod == "SETTTSRATE")              {                  // Load the speech rate' which must be -10 to 10' and set it to 0 if it is not valid.                  Int16 iTTSRate = Convert.ToInt16(sParam1);                  if (iTTSRate < -10 || iTTSRate > 10)                  {                      iTTSRate = 0;                      Log.Info("TTS Rate was invalid! I changed it to " + iTTSRate.ToString());                  }                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Rate"' iTTSRate.ToString()' gAppName);                  Log.Info("TTS Rate Set to " + iTTSRate.ToString());                  oSpeech.Rate = iTTSRate;              }
Magic Number,OSAE.Speech,SPEECH,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Speech\Speech.cs,ProcessCommand,The following statement contains a magic number: if (sMethod == "SPEAK")              {                  string sText = Common.PatternParse(sParam1);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "TRUE"' gAppName);                  oSpeech.Speak(sText);                  Log.Info("Said " + sText);                  Thread.Sleep(500);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "FALSE"' gAppName);              }              else if (sMethod == "SPEAKFROM")              {                  Log.Info("--Speak From Object: " + sParam1 + " and pick From list: " + sParam2);                  string sText = OSAEObjectPropertyManager.ObjectPropertyArrayGetRandom(sParam1' sParam2).ToString();                  sText = Common.PatternParse(sText);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "TRUE"' gAppName);                  oSpeech.Speak(sText);                  Log.Info("Said " + sText);                  Thread.Sleep(500);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "FALSE"' gAppName);              }              else if (sMethod == "PLAY")              {                  wmPlayer.URL = sParam1;                  wmPlayer.controls.play();                  Log.Info("Played " + sParam1);              }              else if (sMethod == "PLAYFROM")              {                  string sFile = OSAEObjectPropertyManager.ObjectPropertyArrayGetRandom(sParam1' sParam2).ToString();                  wmPlayer.URL = sFile;                  wmPlayer.controls.play();                  Log.Info("Played " + sFile);              }              else if (sMethod == "STOP")              {                  wmPlayer.controls.stop();                  Log.Info("Stopped");              }              else if (sMethod == "PAUSE")              {                  wmPlayer.controls.pause();                  Log.Info("Paused");              }              else if (sMethod == "SETVOICE")              {                  gSelectedVoice = sParam1;                  oSpeech.SelectVoice(gSelectedVoice);                  Log.Info("Voice Set to " + gSelectedVoice);              }              else if (sMethod == "SETTTSVOLUME")              {                  if (Convert.ToInt16(sParam1) > 0 && Convert.ToInt16(sParam1) <= 100)                  {                      oSpeech.Volume = Convert.ToInt16(sParam1);                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Volume"' sParam1' "SPEECH");                      Log.Info("TTS Volume Set to " + Convert.ToInt16(sParam1));                  }              }              else if (sMethod == "SETTTSRATE")              {                  // Load the speech rate' which must be -10 to 10' and set it to 0 if it is not valid.                  Int16 iTTSRate = Convert.ToInt16(sParam1);                  if (iTTSRate < -10 || iTTSRate > 10)                  {                      iTTSRate = 0;                      Log.Info("TTS Rate was invalid! I changed it to " + iTTSRate.ToString());                  }                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Rate"' iTTSRate.ToString()' gAppName);                  Log.Info("TTS Rate Set to " + iTTSRate.ToString());                  oSpeech.Rate = iTTSRate;              }
Magic Number,OSAE.Speech,SPEECH,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Speech\Speech.cs,ProcessCommand,The following statement contains a magic number: if (sMethod == "SPEAK")              {                  string sText = Common.PatternParse(sParam1);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "TRUE"' gAppName);                  oSpeech.Speak(sText);                  Log.Info("Said " + sText);                  Thread.Sleep(500);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "FALSE"' gAppName);              }              else if (sMethod == "SPEAKFROM")              {                  Log.Info("--Speak From Object: " + sParam1 + " and pick From list: " + sParam2);                  string sText = OSAEObjectPropertyManager.ObjectPropertyArrayGetRandom(sParam1' sParam2).ToString();                  sText = Common.PatternParse(sText);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "TRUE"' gAppName);                  oSpeech.Speak(sText);                  Log.Info("Said " + sText);                  Thread.Sleep(500);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "FALSE"' gAppName);              }              else if (sMethod == "PLAY")              {                  wmPlayer.URL = sParam1;                  wmPlayer.controls.play();                  Log.Info("Played " + sParam1);              }              else if (sMethod == "PLAYFROM")              {                  string sFile = OSAEObjectPropertyManager.ObjectPropertyArrayGetRandom(sParam1' sParam2).ToString();                  wmPlayer.URL = sFile;                  wmPlayer.controls.play();                  Log.Info("Played " + sFile);              }              else if (sMethod == "STOP")              {                  wmPlayer.controls.stop();                  Log.Info("Stopped");              }              else if (sMethod == "PAUSE")              {                  wmPlayer.controls.pause();                  Log.Info("Paused");              }              else if (sMethod == "SETVOICE")              {                  gSelectedVoice = sParam1;                  oSpeech.SelectVoice(gSelectedVoice);                  Log.Info("Voice Set to " + gSelectedVoice);              }              else if (sMethod == "SETTTSVOLUME")              {                  if (Convert.ToInt16(sParam1) > 0 && Convert.ToInt16(sParam1) <= 100)                  {                      oSpeech.Volume = Convert.ToInt16(sParam1);                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Volume"' sParam1' "SPEECH");                      Log.Info("TTS Volume Set to " + Convert.ToInt16(sParam1));                  }              }              else if (sMethod == "SETTTSRATE")              {                  // Load the speech rate' which must be -10 to 10' and set it to 0 if it is not valid.                  Int16 iTTSRate = Convert.ToInt16(sParam1);                  if (iTTSRate < -10 || iTTSRate > 10)                  {                      iTTSRate = 0;                      Log.Info("TTS Rate was invalid! I changed it to " + iTTSRate.ToString());                  }                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Rate"' iTTSRate.ToString()' gAppName);                  Log.Info("TTS Rate Set to " + iTTSRate.ToString());                  oSpeech.Rate = iTTSRate;              }
Magic Number,OSAE.Speech,SPEECH,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Speech\Speech.cs,ProcessCommand,The following statement contains a magic number: if (sMethod == "SPEAK")              {                  string sText = Common.PatternParse(sParam1);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "TRUE"' gAppName);                  oSpeech.Speak(sText);                  Log.Info("Said " + sText);                  Thread.Sleep(500);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "FALSE"' gAppName);              }              else if (sMethod == "SPEAKFROM")              {                  Log.Info("--Speak From Object: " + sParam1 + " and pick From list: " + sParam2);                  string sText = OSAEObjectPropertyManager.ObjectPropertyArrayGetRandom(sParam1' sParam2).ToString();                  sText = Common.PatternParse(sText);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "TRUE"' gAppName);                  oSpeech.Speak(sText);                  Log.Info("Said " + sText);                  Thread.Sleep(500);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "FALSE"' gAppName);              }              else if (sMethod == "PLAY")              {                  wmPlayer.URL = sParam1;                  wmPlayer.controls.play();                  Log.Info("Played " + sParam1);              }              else if (sMethod == "PLAYFROM")              {                  string sFile = OSAEObjectPropertyManager.ObjectPropertyArrayGetRandom(sParam1' sParam2).ToString();                  wmPlayer.URL = sFile;                  wmPlayer.controls.play();                  Log.Info("Played " + sFile);              }              else if (sMethod == "STOP")              {                  wmPlayer.controls.stop();                  Log.Info("Stopped");              }              else if (sMethod == "PAUSE")              {                  wmPlayer.controls.pause();                  Log.Info("Paused");              }              else if (sMethod == "SETVOICE")              {                  gSelectedVoice = sParam1;                  oSpeech.SelectVoice(gSelectedVoice);                  Log.Info("Voice Set to " + gSelectedVoice);              }              else if (sMethod == "SETTTSVOLUME")              {                  if (Convert.ToInt16(sParam1) > 0 && Convert.ToInt16(sParam1) <= 100)                  {                      oSpeech.Volume = Convert.ToInt16(sParam1);                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Volume"' sParam1' "SPEECH");                      Log.Info("TTS Volume Set to " + Convert.ToInt16(sParam1));                  }              }              else if (sMethod == "SETTTSRATE")              {                  // Load the speech rate' which must be -10 to 10' and set it to 0 if it is not valid.                  Int16 iTTSRate = Convert.ToInt16(sParam1);                  if (iTTSRate < -10 || iTTSRate > 10)                  {                      iTTSRate = 0;                      Log.Info("TTS Rate was invalid! I changed it to " + iTTSRate.ToString());                  }                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Rate"' iTTSRate.ToString()' gAppName);                  Log.Info("TTS Rate Set to " + iTTSRate.ToString());                  oSpeech.Rate = iTTSRate;              }
Magic Number,OSAE.Speech,SPEECH,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Speech\Speech.cs,ProcessCommand,The following statement contains a magic number: if (sMethod == "SPEAK")              {                  string sText = Common.PatternParse(sParam1);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "TRUE"' gAppName);                  oSpeech.Speak(sText);                  Log.Info("Said " + sText);                  Thread.Sleep(500);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "FALSE"' gAppName);              }              else if (sMethod == "SPEAKFROM")              {                  Log.Info("--Speak From Object: " + sParam1 + " and pick From list: " + sParam2);                  string sText = OSAEObjectPropertyManager.ObjectPropertyArrayGetRandom(sParam1' sParam2).ToString();                  sText = Common.PatternParse(sText);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "TRUE"' gAppName);                  oSpeech.Speak(sText);                  Log.Info("Said " + sText);                  Thread.Sleep(500);                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "Speaking"' "FALSE"' gAppName);              }              else if (sMethod == "PLAY")              {                  wmPlayer.URL = sParam1;                  wmPlayer.controls.play();                  Log.Info("Played " + sParam1);              }              else if (sMethod == "PLAYFROM")              {                  string sFile = OSAEObjectPropertyManager.ObjectPropertyArrayGetRandom(sParam1' sParam2).ToString();                  wmPlayer.URL = sFile;                  wmPlayer.controls.play();                  Log.Info("Played " + sFile);              }              else if (sMethod == "STOP")              {                  wmPlayer.controls.stop();                  Log.Info("Stopped");              }              else if (sMethod == "PAUSE")              {                  wmPlayer.controls.pause();                  Log.Info("Paused");              }              else if (sMethod == "SETVOICE")              {                  gSelectedVoice = sParam1;                  oSpeech.SelectVoice(gSelectedVoice);                  Log.Info("Voice Set to " + gSelectedVoice);              }              else if (sMethod == "SETTTSVOLUME")              {                  if (Convert.ToInt16(sParam1) > 0 && Convert.ToInt16(sParam1) <= 100)                  {                      oSpeech.Volume = Convert.ToInt16(sParam1);                      OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Volume"' sParam1' "SPEECH");                      Log.Info("TTS Volume Set to " + Convert.ToInt16(sParam1));                  }              }              else if (sMethod == "SETTTSRATE")              {                  // Load the speech rate' which must be -10 to 10' and set it to 0 if it is not valid.                  Int16 iTTSRate = Convert.ToInt16(sParam1);                  if (iTTSRate < -10 || iTTSRate > 10)                  {                      iTTSRate = 0;                      Log.Info("TTS Rate was invalid! I changed it to " + iTTSRate.ToString());                  }                  OSAEObjectPropertyManager.ObjectPropertySet(gAppName' "TTS Rate"' iTTSRate.ToString()' gAppName);                  Log.Info("TTS Rate Set to " + iTTSRate.ToString());                  oSpeech.Rate = iTTSRate;              }
