Implementation smell,Namespace,Class,File,Method,Description
Long Statement,OSAE.SqueezeboxServer,SqueezeboxServer,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.SqueezeCenter\Class1.cs,RunInterface,The length of the statement  "            OSAEObjectTypeManager.ObjectTypeUpdate(objt.Name' objt.Name' objt.Description' pName' "SQUEEZEBOX"' objt.Owner' objt.SysType' objt.Container' objt.HideRedundant' objt.Tooltip); " is 176.
Magic Number,OSAE.SqueezeboxServer,SqueezeboxServer,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.SqueezeCenter\Class1.cs,RunInterface,The following statement contains a magic number: foreach (string player in players)              {                  Log.Info("Found player: " + player);                  string[] sb = player.Split(' ');                  bool found = false;                  foreach (OSAEObject obj in objects)                  {                      if (obj.Address == sb[0])                      {                          Log.Info("Found matching object: " + obj.Name);                          found = true;                      }                  }                    if (!found)                  {                      Log.Info("No object found.  Adding to OSA");                      OSAEObjectManager.ObjectAdd(sb[1]'""' sb[1]' "SQUEEZEBOX"' sb[0]' ""' 30' true);                  }              }
Magic Number,OSAE.SqueezeboxServer,SqueezeboxServer,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.SqueezeCenter\Class1.cs,TextToSpeech,The following statement contains a magic number: SpeechAudioFormatInfo synthFormat = new SpeechAudioFormatInfo(44100' AudioBitsPerSample.Sixteen' AudioChannel.Stereo);
Magic Number,OSAE.SqueezeboxServer,SqueezeboxServerAPI,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.SqueezeCenter\squeezeboxServer.cs,GetPlayers,The following statement contains a magic number: while (iPos > -1)              {                  string sName = null;                  string sID = null;                  s = s.Substring(iPos + 9);                    //get the index of the next space                  int iLen = s.IndexOf(" ");                  sID = s.Substring(0' iLen);                    int iPosName = s.IndexOf("name:");                    if (iPosName > -1)                  {                      s = s.Substring(iPosName + 5);                      iLen = s.IndexOf("model:");                      sName = s.Substring(0' iLen);                  }                    result.Add(sID + " " + sName);                    iPos = s.IndexOf("playerid:");              }
Magic Number,OSAE.SqueezeboxServer,SqueezeboxServerAPI,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.SqueezeCenter\squeezeboxServer.cs,GetPlayers,The following statement contains a magic number: while (iPos > -1)              {                  string sName = null;                  string sID = null;                  s = s.Substring(iPos + 9);                    //get the index of the next space                  int iLen = s.IndexOf(" ");                  sID = s.Substring(0' iLen);                    int iPosName = s.IndexOf("name:");                    if (iPosName > -1)                  {                      s = s.Substring(iPosName + 5);                      iLen = s.IndexOf("model:");                      sName = s.Substring(0' iLen);                  }                    result.Add(sID + " " + sName);                    iPos = s.IndexOf("playerid:");              }
Magic Number,OSAE.SqueezeboxServer,SqueezeboxServerAPI,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.SqueezeCenter\squeezeboxServer.cs,SetVolume,The following statement contains a magic number: if (iVol < 0 | iVol > 100)              {                  return "Illegal volume";              }
Magic Number,OSAE.SqueezeboxServer,SqueezeboxServerAPI,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.SqueezeCenter\squeezeboxServer.cs,SendCommand,The following statement contains a magic number: try              {                    //mHost is the server' mPort the port number                  client = new TcpClient(mHost' mPort);                    byte[] data = System.Text.Encoding.ASCII.GetBytes(cmd);                  NetworkStream stream = client.GetStream();                    // Send the message.                   stream.Write(data' 0' data.Length);                    // Now read in result into a byte buffer.                  byte[] bytes = null;                    int BytesRead = 0;                    do                  {                      bytes = new byte[257];                      BytesRead = stream.Read(bytes' 0' bytes.Length);                        // Read can return anything from 0 to numBytesToRead.                      ReturnVal = ReturnVal + System.Text.Encoding.ASCII.GetString(bytes' 0' BytesRead);                  }                  while (stream.DataAvailable);                    ReturnVal = HttpUtility.UrlDecode(ReturnVal);                    // Clean up.                  stream.Close();                  client.Close();              }              catch (ArgumentNullException e)              {                  Debug.WriteLine("ArgumentNullException: " + e.Message);              }              catch (SocketException e)              {                  Debug.WriteLine("SocketException: " + e.Message);              }
Missing Default,OSAE.SqueezeboxServer,SqueezeboxServer,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.SqueezeCenter\Class1.cs,ProcessCommand,The following switch statement is missing a default case: switch (method.MethodName)              {                  case "PLAY":                      if (method.Parameter1.Trim() == string.Empty)                          sbs.Play(method.Address);                      else                          sbs.PlaylistPlay(method.Address' method.Parameter1);                      OSAEObjectStateManager.ObjectStateSet(OSAEObjectManager.GetObjectByAddress(method.Address).Name' "PLAYING"' pName);                      break;                  case "STOP":                      sbs.StopPlayer(method.Address);                      OSAEObjectStateManager.ObjectStateSet(OSAEObjectManager.GetObjectByAddress(method.Address).Name' "STOPPED"' pName);                      break;                  case "NEXT":                      sbs.Next(method.Address);                      break;                  case "PREV":                      sbs.Previous(method.Address);                      break;                  case "SHOW":                      sbs.ShowMessage(method.Address' method.Parameter1' Int32.Parse(method.Parameter2));                      break;                  case "PAUSE":                      sbs.PausePlayer(method.Address);                      OSAEObjectStateManager.ObjectStateSet(OSAEObjectManager.GetObjectByAddress(method.Address).Name' "PAUSED"' pName);                      break;                  case "TTS":                      TextToSpeech(method.Parameter1);                      sbs.PlaylistPlay(method.Address' ttsPlay);                      break;                  case "TTSLIST":                      DataSet list = OSAEObjectPropertyManager.ObjectPropertyArrayGetAll(method.Parameter1' method.Parameter2);                      string tts = "";                      int count = 1;                      foreach(DataRow item in list.Tables[0].Rows)                      {                          tts += "  RSS item number " + count.ToString() + ".  " + item["item_name"].ToString();                          count++;                      }                      TextToSpeech(tts);                      sbs.PlaylistPlay(method.Address' ttsPlay);                      break;                  case "TTSLISTRAND":                      string listItem = OSAEObjectPropertyManager.ObjectPropertyArrayGetRandom(method.Parameter1' method.Parameter2);                      TextToSpeech(listItem);                      sbs.PlaylistPlay(method.Address' ttsPlay);                      break;              }
