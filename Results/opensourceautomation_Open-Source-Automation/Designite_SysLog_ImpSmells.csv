Implementation smell,Namespace,Class,File,Method,Description
Long Statement,OSAE.SysLog,SysLog,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\SysLog\SysLog.cs,RunInterface,The length of the statement  "                    OSAEObjectManager.ObjectAdd("SysLog Tigger - Example"' "This is an an example trigger created by the plugin which can be deleted"' "SysLog-Trigger"' ""' ""' true); " is 163.
Long Statement,OSAE.SysLog,SysLog,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\SysLog\SysLog.cs,RunInterface,The length of the statement  "                    OSAEObjectPropertyManager.ObjectPropertySet("SysLog Tigger - Example"' "Trigger String"' "The string to look for"' pName); " is 122.
Magic Number,OSAE.SysLog,SysLog,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\SysLog\SysLog.cs,RunInterface,The following statement contains a magic number: try              {                  logging.AddToLog("Starting SysLog..."' true);                    logEventsToFile = Boolean.Parse(OSAEObjectPropertyManager.GetObjectPropertyValue(pName' "Log to file").Value);                  port = int.Parse(OSAEObjectPropertyManager.GetObjectPropertyValue(pName' "Port").Value);                                                  IPEndPoint anyIP = new IPEndPoint(IPAddress.Any' 0);                  UdpClient udpListener = new UdpClient(port);                                    cts = new CancellationTokenSource();                  token = cts.Token;                    OSAEObjectCollection c = OSAEObjectManager.GetObjectsByType("SysLog-Trigger");                  if (c.Count > 0)                  {                      logging.AddToLog("Found " + c.Count + " triggers to watch for"' false);                      GetMatches(c);                  }                  else                  {                      logging.AddToLog("No SysLog Triggers found to look for creating example"' true);                      OSAEObjectManager.ObjectAdd("SysLog Tigger - Example"' "This is an an example trigger created by the plugin which can be deleted"' "SysLog-Trigger"' ""' ""' true);                      OSAEObjectPropertyManager.ObjectPropertySet("SysLog Tigger - Example"' "Trigger String"' "The string to look for"' pName);                      OSAEObjectPropertyManager.ObjectPropertySet("SysLog Tigger - Example"' "Source IP"' "192.168.0.1"' pName);                  }                    task = Task.Factory.StartNew(() =>                  {                      while (!token.IsCancellationRequested)                      {                          if (udpListener.Available > 0)                          {                              try                              {                                  byte[] bReceive = udpListener.Receive(ref anyIP);                                  string sReceive = Encoding.ASCII.GetString(bReceive);                                  string sourceIP = anyIP.Address.ToString();                                    Task messageProcessor = new Task(() => ProcessEvent(sourceIP' sReceive));                                  messageProcessor.Start();                              }                              catch (Exception ex)                              {                                  logging.AddToLog("Exception occurred in SysLog details: " + ex.Message' true);                              }                          }                          else                          {                              token.WaitHandle.WaitOne(300);                          }                      }                        if (token.IsCancellationRequested)                      {                          logging.AddToLog("Cancellation Token Set"' false);                      }                  }' token);              }              catch (Exception ex)              {                  logging.AddToLog("Error during RunInterface: " + ex.Message' true);              }
