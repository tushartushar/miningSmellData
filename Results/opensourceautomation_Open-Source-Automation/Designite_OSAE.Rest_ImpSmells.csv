Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OSAERest,api,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Rest\WebService.cs,oRecognizer_SpeechRecognized,Cyclomatic complexity of the method is 11
Long Parameter List,OSAERest,IRestService,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Rest\WebService.cs,AddObject,The method has 8 parameters. Parameters: name' alias' description' type' address' container' mintrustlevel' enabled
Long Parameter List,OSAERest,IRestService,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Rest\WebService.cs,UpdateObject,The method has 9 parameters. Parameters: oldName' newName' alias' description' type' address' container' mintrustlevel' enabled
Long Parameter List,OSAERest,api,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Rest\WebService.cs,AddObject,The method has 8 parameters. Parameters: name' alias' description' type' address' container' mintruestlevel' enabled
Long Parameter List,OSAERest,api,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Rest\WebService.cs,UpdateObject,The method has 9 parameters. Parameters: oldName' newName' alias' description' type' address' container' mintruestlevel' enabled
Long Statement,OSAE.Rest,Rest,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Rest\Rest.cs,OwnTypes,The length of the statement  "                OSAEObjectTypeManager.ObjectTypeUpdate(oType.Name' oType.Name' oType.Description' pName' oType.BaseType' oType.Owner' oType.SysType' oType.Container' oType.HideRedundant' oType.Tooltip); " is 186.
Long Statement,OSAERest,api,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Rest\WebService.cs,AddObject,The length of the statement  "            OSAEObjectManager.ObjectAdd(name' alias' description' type' address' container' mintruestlevel' StringToBoolean(enabled)); " is 122.
Long Statement,OSAERest,api,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Rest\WebService.cs,AddObject,The length of the statement  "            Log.Debug("Oject Add:  " + name + "' " + alias + "' " + description + "' " + type + "' " + address + "' " + container + "' " + mintruestlevel + "' " + enabled); " is 160.
Long Statement,OSAERest,api,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Rest\WebService.cs,UpdateObject,The length of the statement  "            OSAEObjectManager.ObjectUpdate(oldName' newName' alias' description' type' address' container' mintruestlevel' Convert.ToBoolean(StringToBoolean(enabled))); " is 156.
Long Statement,OSAERest,api,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Rest\WebService.cs,UpdateObject,The length of the statement  "            Log.Debug("Oject Update:  " + oldName + "' " + newName + "' " + alias + "' " + description + "' " + type + "' " + address + "' " + container + "' " + mintruestlevel + "' " + enabled); " is 183.
Long Statement,OSAERest,api,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Rest\WebService.cs,StringToBoolean,The length of the statement  "            if (!bool.TryParse(passedvalue' out booleanvalue)) //if they passed "true"/"false" this will work and booleanvalue will contain our converted value " is 147.
Magic Number,OSAE.Rest,Rest,C:\repos\opensourceautomation_Open-Source-Automation\Plugins\OSAE.Rest\Rest.cs,RunInterface,The following statement contains a magic number: try              {                  this.Log.Info("Starting Rest Interface");                    bool showHelp = bool.Parse(OSAEObjectPropertyManager.GetObjectPropertyValue(pName' "Show Help").Value);                  int restPort = 8732;                    if (!OSAEObjectPropertyManager.GetObjectPropertyValue(pName' "REST Port").Id.Equals(String.Empty))                  {                      try                      {                          restPort = int.Parse(OSAEObjectPropertyManager.GetObjectPropertyValue(pName' "REST Port").Value);                          Log.Info("Rest Port read in as: " + restPort);                      }                      catch (FormatException ex)                      { Log.Error("Error pulling REST port from property (not a valid number)"' ex); }                      catch (OverflowException ex)                      { Log.Error("Error pulling REST port from property (too large)"' ex); }                      catch (ArgumentNullException ex)                      { Log.Error("Error pulling REST port from property (null)"' ex); }                  }                    String restUrl = "http://localhost:"+restPort.ToString()+"/api";                  serviceHost = new WebServiceHost(typeof(OSAERest.api)' new Uri(restUrl));                                    WebHttpBinding binding = new WebHttpBinding(WebHttpSecurityMode.None);                   binding.CrossDomainScriptAccessEnabled = true;                  var endpoint = serviceHost.AddServiceEndpoint(typeof(IRestService)' binding' "");                    ServiceDebugBehavior sdb = serviceHost.Description.Behaviors.Find<ServiceDebugBehavior>();                  sdb.HttpHelpPageEnabled = false;                  if (showHelp) serviceHost.Description.Endpoints[0].Behaviors.Add(new WebHttpBehavior { HelpEnabled = true });                    Log.Info("Starting RESTful Interface");                  serviceHost.Open();                                              }              catch (Exception ex)              { Log.Error("Error starting RESTful web service"' ex); }
