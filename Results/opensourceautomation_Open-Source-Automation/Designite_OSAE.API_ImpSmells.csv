Implementation smell,Namespace,Class,File,Method,Description
Long Method,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The method has 219 lines of code.
Long Method,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetTypeDeserializer,The method has 288 lines of code.
Long Method,OSAE,OSAEAdminManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEAdmin\OSAEAdminManager.cs,GetAdminSettings,The method has 148 lines of code.
Long Method,OSAE,OSAEGrammar,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEGrammar\OSAEGrammar.cs,Load_Voice_Grammars,The method has 553 lines of code.
Complex Method,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,Cyclomatic complexity of the method is 27
Complex Method,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetTypeDeserializer,Cyclomatic complexity of the method is 17
Complex Method,Dapper,DefaultTypeMap,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,FindConstructor,Cyclomatic complexity of the method is 9
Complex Method,OSAE,OSAEGrammar,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEGrammar\OSAEGrammar.cs,Load_Voice_Grammars,Cyclomatic complexity of the method is 9
Complex Method,OSAE,OSAEGrammar,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEGrammar\OSAEGrammar.cs,Load_Text_Only_Grammars,Cyclomatic complexity of the method is 11
Complex Method,OSAE.General,OSAELog,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\OSAELog.cs,OSAELog,Cyclomatic complexity of the method is 9
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Execute,The method has 6 parameters. Parameters: cnn' sql' param' transaction' commandTimeout' commandType
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Query,The method has 7 parameters. Parameters: cnn' sql' param' transaction' buffered' commandTimeout' commandType
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Query,The method has 7 parameters. Parameters: cnn' sql' param' transaction' buffered' commandTimeout' commandType
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,QueryMultiple,The method has 6 parameters. Parameters: cnn' sql' param' transaction' commandTimeout' commandType
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,QueryInternal,The method has 6 parameters. Parameters: cnn' sql' param' transaction' commandTimeout' commandType
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,MultiMap,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,MultiMapImpl,The method has 10 parameters. Parameters: cnn' sql' map' param' transaction' splitOn' commandTimeout' commandType' reader' identity
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetDeserializer,The method has 5 parameters. Parameters: type' reader' startBound' length' returnNullIfFirstMissing
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,SetupCommand,The method has 7 parameters. Parameters: cnn' transaction' sql' paramReader' obj' commandTimeout' commandType
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,ExecuteCommand,The method has 7 parameters. Parameters: cnn' transaction' sql' paramReader' obj' commandTimeout' commandType
Long Parameter List,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetTypeDeserializer,The method has 5 parameters. Parameters: type' reader' startBound' length' returnNullIfFirstMissing
Long Parameter List,Dapper,Identity,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Identity,The method has 6 parameters. Parameters: sql' commandType' connection' type' parametersType' otherTypes
Long Parameter List,Dapper,Identity,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Identity,The method has 7 parameters. Parameters: sql' commandType' connectionString' type' parametersType' otherTypes' gridIndex
Long Parameter List,Dapper,DynamicParameters,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Add,The method has 5 parameters. Parameters: name' value' dbType' direction' size
Long Parameter List,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyArrayUpdate,The method has 5 parameters. Parameters: objectName' propertyName' oldPropertyValue' newPropertyValue' PropertyLabel
Long Parameter List,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyScraperAdd,The method has 7 parameters. Parameters: objectName' propertyName' URL' Prefix' PrefixOffset' Suffix' UpdateInterval
Long Parameter List,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyScraperUpdate,The method has 8 parameters. Parameters: scraperid' objectName' propertyName' URL' Prefix' PrefixOffset' Suffix' UpdateInterval
Long Parameter List,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeAdd,The method has 9 parameters. Parameters: Name' Description' OwnedBy' BaseType' TypeOwner' SystemType' Container' HideRedundantEvents' Tooltip
Long Parameter List,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeUpdate,The method has 10 parameters. Parameters: oldName' newName' Description' OwnedBy' BaseType' TypeOwner' SystemType' Container' HideRedundantEvents' Tooltip
Long Parameter List,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeEventUpdate,The method has 5 parameters. Parameters: oldName' newName' label' objectType' tooltip
Long Parameter List,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeMethodAdd,The method has 8 parameters. Parameters: ObjectType' Name' Label' ParamLabel1' ParamLabel2' ParamDefault1' ParamDefault2' tooltip
Long Parameter List,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeMethodUpdate,The method has 9 parameters. Parameters: oldName' newName' label' objectType' paramLabel1' paramLabel2' ParamDefault1' ParamDefault2' tooltip
Long Parameter List,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypePropertyAdd,The method has 8 parameters. Parameters: ObjectType' Name' ParameterType' ParameterObjectType' ParameterDefault' TrackHistory' Required' tooltip
Long Parameter List,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypePropertyUpdate,The method has 9 parameters. Parameters: oldName' newName' ParameterType' ParameterObjectType' ParameterDefault' objectType' TrackHistory' Required' tooltip
Long Parameter List,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeStateUpdate,The method has 5 parameters. Parameters: oldName' newName' newLabel' objectType' tooltip
Long Parameter List,OSAE,Plugin,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Plugin\Plugin.cs,Plugin,The method has 5 parameters. Parameters: assemblyName' assemblyType' domain' location' clientAppendage
Long Parameter List,OSAE,OSAEScheduleManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAESchedule.cs\OSAEScheduleManager.cs,ScheduleQueueAdd,The method has 7 parameters. Parameters: scheduleDate' obj' method' parameter1' parameter2' script' recurringID
Long Parameter List,OSAE,OSAEScheduleManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAESchedule.cs\OSAEScheduleManager.cs,ScheduleRecurringAdd,The method has 19 parameters. Parameters: scheduleName' obj' method' parameter1' parameter2' script' recurringTime' sunday' monday' tuesday' wednesday' thursday' friday' saturday' interval' recurringMinutes' recurringDay' recurringDate' active
Long Parameter List,OSAE,OSAEScheduleManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAESchedule.cs\OSAEScheduleManager.cs,ScheduleRecurringUpdate,The method has 20 parameters. Parameters: oldScheduleName' newScheduleName' obj' method' parameter1' parameter2' script' recurringTime' sunday' monday' tuesday' wednesday' thursday' friday' saturday' interval' recurringMinutes' recurringDay' recurringDate' active
Long Parameter List,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,ObjectAdd,The method has 8 parameters. Parameters: name' alias' description' objectType' address' container' minTrustLevel' enabled
Long Parameter List,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,ObjectUpdate,The method has 9 parameters. Parameters: oldName' newName' alias' description' objectType' address' container' minTrustLevel' enabled
Long Parameter List,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,EventTrigger,The method has 5 parameters. Parameters: objectName' eventName' parameter1' parameter2' source
Long Parameter List,OSAE,OSAEMethod,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEMethod\OSAEMethod.cs,OSAEMethod,The method has 8 parameters. Parameters: objName' methodName' methodLabel' param1' param2' address' owner' fromObject
Long Parameter List,OSAE,OSAEMethod,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEMethod\OSAEMethod.cs,OSAEMethod,The method has 9 parameters. Parameters: id' methodName' methodLabel' objName' param1' param2' address' owner' fromObject
Long Parameter List,OSAE,OSAEMethodManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEMethod\OSAEMethodManager.cs,MethodQueueAdd,The method has 5 parameters. Parameters: objectName' method' param1' param2' plugin
Long Parameter List,OSAE,OSAEObject,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObject.cs,OSAEObject,The method has 8 parameters. Parameters: name' alias' description' type' address' container' mintrustlevel' enabled
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetBindByName,The length of the statement  "                var method = new DynamicMethod(commandType.Name + "_BindByName"' null' new Type[] { typeof(IDbCommand)' typeof(bool) }); " is 120.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,LookupDbType,The length of the statement  "            throw new NotSupportedException(string.Format("The member {0} of type {1} cannot be used as a parameter value"' name' type)); " is 125.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Execute,The length of the statement  "            return ExecuteCommand(cnn' transaction' sql' (object)param == null ? null : info.ParamReader' (object)param' commandTimeout' commandType); " is 138.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,QueryMultiple,The length of the statement  "            Identity identity = new Identity(sql' commandType' cnn' typeof(GridReader)' (object)param == null ? null : ((object)param).GetType()' null); " is 140.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Query,The length of the statement  "            return MultiMap<TFirst' TSecond' DontMap' DontMap' DontMap' DontMap' DontMap' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 180.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Query,The length of the statement  "            return MultiMap<TFirst' TSecond' TThird' DontMap' DontMap' DontMap' DontMap' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 179.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Query,The length of the statement  "            return MultiMap<TFirst' TSecond' TThird' TFourth' DontMap' DontMap' DontMap' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 179.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Query,The length of the statement  "            return MultiMap<TFirst' TSecond' TThird' TFourth' TFifth' DontMap' DontMap' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 178.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Query,The length of the statement  "            return MultiMap<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' DontMap' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 177.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Query,The length of the statement  "            return MultiMap<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 178.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,MultiMap,The length of the statement  "            var results = MultiMapImpl<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>(cnn' sql' map' param' transaction' splitOn' commandTimeout' commandType' null' null); " is 181.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,MultiMapImpl,The length of the statement  "            identity = identity ?? new Identity(sql' commandType' cnn' typeof(TFirst)' (object)param == null ? null : ((object)param).GetType()' new[] { typeof(TFirst)' typeof(TSecond)' typeof(TThird)' typeof(TFourth)' typeof(TFifth)' typeof(TSixth)' typeof(TSeventh) }); " is 259.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,MultiMapImpl,The length of the statement  "                if ((deserializer = cinfo.Deserializer).Func == null || (otherDeserializers = cinfo.OtherDeserializers) == null || hash != deserializer.Hash) " is 141.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,MultiMapImpl,The length of the statement  "                    var deserializers = GenerateDeserializers(new Type[] { typeof(TFirst)' typeof(TSecond)' typeof(TThird)' typeof(TFourth)' typeof(TFifth)' typeof(TSixth)' typeof(TSeventh) }' splitOn' reader); " is 190.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,MultiMapImpl,The length of the statement  "                Func<IDataReader' TReturn> mapIt = GenerateMapper<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>(deserializer.Func' otherDeserializers' map); " is 163.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The length of the statement  "                    return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)); " is 152.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The length of the statement  "                    return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)); " is 196.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The length of the statement  "                    return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)); " is 238.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The length of the statement  "                    return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)); " is 280.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The length of the statement  "                    return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r)); " is 326.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetCacheInfo,The length of the statement  "                    else if (typeof(IEnumerable<KeyValuePair<string' object>>).IsAssignableFrom(identity.parametersType) && typeof(System.Dynamic.IDynamicMetaObjectProvider).IsAssignableFrom(identity.parametersType)) " is 196.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,PackListParameters,The length of the statement  "                        command.CommandText = Regex.Replace(command.CommandText' @"[?@:]" + Regex.Escape(namePrefix)' "(SELECT NULL WHERE 1 = 0)"); " is 123.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,FilterParameters,The length of the statement  "            return parameters.Where(p => Regex.IsMatch(sql' @"[?@:]" + p.Name + "([^a-zA-Z0-9_]+|$)"' RegexOptions.IgnoreCase | RegexOptions.Multiline)); " is 141.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "            var dm = new DynamicMethod(string.Format("ParamInfo{0}"' Guid.NewGuid())' null' new[] { typeof(IDbCommand)' typeof(object) }' type' true); " is 138.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "            il.EmitCall(OpCodes.Callvirt' typeof(IDbCommand).GetProperty("Parameters").GetGetMethod()' null); // stack is now [parameters] " is 126.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                    il.EmitCall(OpCodes.Call' typeof(SqlMapper).GetMethod("FindOrAddParameter")' null); // stack is [parameters] [parameter] " is 120.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                    il.EmitCall(OpCodes.Callvirt' typeof(IDbCommand).GetMethod("CreateParameter")' null);// stack is now [parameters] [parameters] [parameter] " is 138.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                    il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("ParameterName").GetSetMethod()' null);// stack is now [parameters] [parameters] [parameter] " is 157.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                if (dbType != DbType.Time) // https://connect.microsoft.com/VisualStudio/feedback/details/381934/sqlparameter-dbtype-dbtype-time-sets-the-parameter-to-sqldbtype-datetime-instead-of-sqldbtype-time " is 195.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                    il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("DbType").GetSetMethod()' null);// stack is now [parameters] [[parameters]] [parameter] " is 152.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("Direction").GetSetMethod()' null);// stack is now [parameters] [[parameters]] [parameter] " is 155.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                il.Emit(OpCodes.Callvirt' prop.GetGetMethod()); // stack is [parameters] [[parameters]] [parameter] [parameter] [typed-value] " is 125.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                        il.EmitCall(OpCodes.Callvirt' prop.PropertyType.GetMethod("ToArray"' BindingFlags.Public | BindingFlags.Instance)' null); " is 121.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("Value").GetSetMethod()' null);// stack is now [parameters] [[parameters]] [parameter] " is 151.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                    il.EmitCall(OpCodes.Callvirt' typeof(IDbDataParameter).GetProperty("Size").GetSetMethod()' null); // stack is now [parameters] [[parameters]] [parameter] " is 153.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetStructDeserializer,The length of the statement  "            // no point using special per-type handling here; it boils down to the same' plus not all are supported anyway (see: SqlDataReader.GetChar - not supported!) " is 156.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "            var dm = new DynamicMethod(string.Format("Deserialize{0}"' Guid.NewGuid())' typeof(object)' new[] { typeof(IDataReader) }' true); " is 129.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                        throw new InvalidOperationException(String.Format("A parameterless default constructor or one matching signature {0} is required for {1} materialization"' proposedTypes' type.FullName)); " is 186.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                            memberType == typeof(char) ? "ReadChar" : "ReadNullableChar"' BindingFlags.Static | BindingFlags.Public)' null); // stack is now [target][target][typed-value] " is 158.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                            il.EmitCall(OpCodes.Call' typeof(Type).GetMethod("GetTypeFromHandle")' null);// stack is now [target][target][enum-type] " is 120.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                                il.Emit(OpCodes.Newobj' memberType.GetConstructor(new[] { nullUnderlyingType })); // stack is now [target][target][enum-value] " is 126.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                            il.Emit(OpCodes.Newobj' memberType.GetConstructor(new Type[] { typeof(byte[]) }));// stack is now [target][target][binary] " is 122.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                                        il.EmitCall(OpCodes.Call' typeof(Type).GetMethod("GetTypeFromHandle")' null); // stack is now [target][target][value][member-type] " is 130.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                                        il.EmitCall(OpCodes.Call' typeof(Convert).GetMethod("ChangeType"' new Type[] { typeof(object)' typeof(Type) })' null); // stack is now [target][target][boxed-member-type-value] " is 176.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                                    il.Emit(OpCodes.Newobj' unboxType.GetConstructor(new[] { nullUnderlyingType })); // stack is now [target][target][typed-value] " is 126.
Long Statement,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetOperator,The length of the statement  "            return ResolveOperator(fromMethods = from.GetMethods(BindingFlags.Static | BindingFlags.Public)' from' to' "op_Implicit") " is 121.
Long Statement,Dapper,GridReader,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Read,The length of the statement  "                if (reader == null) throw new ObjectDisposedException(GetType().FullName' "The reader has been disposed; this can happen after all data has been consumed"); " is 156.
Long Statement,Dapper,GridReader,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Read,The length of the statement  "                if (consumed) throw new InvalidOperationException("Query results must be consumed in the correct order' and each result can only be consumed once"); " is 148.
Long Statement,Dapper,GridReader,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,MultiReadInternal,The length of the statement  "                    foreach (var r in SqlMapper.MultiMapImpl<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>(null' null' func' null' null' splitOn' null' null' reader' identity)) " is 179.
Long Statement,Dapper,DynamicParameters,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Add,The length of the statement  "            parameters[Clean(name)] = new ParamInfo() { Name = name' Value = value' ParameterDirection = direction ?? ParameterDirection.Input' DbType = dbType' Size = size }; " is 163.
Long Statement,Dapper,DbString,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,AddParameter,The length of the statement  "            param.DbType = IsAnsi ? (IsFixedLength ? DbType.AnsiStringFixedLength : DbType.AnsiString) : (IsFixedLength ? DbType.StringFixedLength : DbType.String); " is 152.
Long Statement,Dapper,DefaultTypeMap,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetPropertySetter,The length of the statement  "                propertyInfo.DeclaringType.GetProperty(propertyInfo.Name' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance).GetSetMethod(true); " is 147.
Long Statement,Dapper,DefaultTypeMap,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,FindConstructor,The length of the statement  "            foreach (ConstructorInfo ctor in constructors.OrderBy(c => c.IsPublic ? 0 : (c.IsPrivate ? 2 : 1)).ThenBy(c => c.GetParameters().Length)) " is 137.
Long Statement,Dapper,DefaultTypeMap,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetConstructorParameter,The length of the statement  "            return new SimpleMemberMap(columnName' parameters.FirstOrDefault(p => string.Equals(p.Name' columnName' StringComparison.OrdinalIgnoreCase))); " is 142.
Long Statement,OSAE,Common,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Common.cs,ObjectNamesStartingWith,The length of the statement  "                   // command.CommandText = "SELECT object_name FROM osae_object WHERE UPPER(object_name) LIKE '@Pattern%' ORDER BY Length(object_name) DESC"; " is 139.
Long Statement,OSAE,Common,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Common.cs,ObjectNamesStartingWith,The length of the statement  "                    //command.CommandText = "SELECT object_name FROM osae_object WHERE UPPER(object_name) LIKE '@Pattern%' ORDER BY Length(object_name) DESC"; " is 138.
Long Statement,OSAE,Common,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Common.cs,ObjectNamesStartingWith,The length of the statement  "                    dataset = OSAESql.RunSQL("SELECT object_name FROM osae_object WHERE (UPPER(object_name) LIKE UPPER('" + pattern.Replace("'"' "''") + "%') OR UPPER(object_alias) LIKE UPPER('" + pattern.Replace("'"' "''") + "%')) ORDER BY Length(object_name) DESC"); " is 248.
Long Statement,OSAE,Common,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Common.cs,InitialiseLogFolder,The length of the statement  "                FileInfo file = new FileInfo(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + @"\OSAE\Logs\"); " is 122.
Long Statement,OSAE,Common,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Common.cs,InitialiseLogFolder,The length of the statement  "                    string[] files = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + @"\OSAE\Logs\"); " is 129.
Long Statement,OSAE,Common,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Common.cs,CheckComputerObject,The length of the statement  "                    OSAEObjectManager.ObjectUpdate(obj.Name' Common.ComputerName' obj.Alias' obj.Description' "COMPUTER"' computerIp' obj.Container' obj.MinTrustLevel' obj.Enabled); " is 161.
Long Statement,OSAE,Common,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Common.cs,CheckComputerObject,The length of the statement  "                    OSAEObjectManager.ObjectAdd(Common.ComputerName' ""' Common.ComputerName' "COMPUTER"' computerIp' string.Empty' obj.MinTrustLevel' true); " is 137.
Long Statement,OSAE,Common,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Common.cs,CheckComputerObject,The length of the statement  "                    OSAEObjectPropertyManager.ObjectPropertySet(Common.ComputerName + "." + computerIp' "Host Name"' Common.ComputerName' sourceName); " is 130.
Long Statement,OSAE,Common,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Common.cs,CheckComputerObject,The length of the statement  "                OSAEObjectManager.ObjectUpdate(obj.Name' obj.Name' obj.Alias' obj.Description' "COMPUTER"' computerIp' obj.Container' obj.MinTrustLevel' obj.Enabled); " is 150.
Long Statement,OSAE,OSAEAdminManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEAdmin\OSAEAdminManager.cs,UpdateAdminSettings,The length of the statement  "                        //command.CommandText = "UPDATE osae_admin SET ScreenTrust=" + ScreenTrust + "'ObjectsTrust=" + ObjectsTrust + "'AnalyticsTrust=" + AnalyticsTrust + "'LogsTrust=" + LogsTrust + "'ValuesTrust=" + ValuesTrust + "'ConfigTrust=" + ConfigTrust + "'ManagementTrust=" + ManagementTrust + "'ObjectTypeTrust=" + ObjectTypeTrust + "'ScriptTrust=" + ScriptTrust + "'PatternTrust=" + PatternTrust + "'ReaderTrust=" + ReaderTrust + "'ScheduleTrust=" + ScheduleTrust + "'ImagesTrust=" + ImagesTrust + "'EventLogTrust=" + EventLogTrust + "'MethodLogTrust=" + MethodLogTrust + "'ServerLogTrust=" + ServerLogTrust + "'DebugLogTrust=" + DebugLogTrust + "'defaultScreen='" + defaultScreen + "' WHERE primary_key = 1"; " is 698.
Long Statement,OSAE,OSAEAdminManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEAdmin\OSAEAdminManager.cs,UpdateAdminSettings,The length of the statement  "                        command.CommandText = "UPDATE osae_admin SET Value = '" + prop.GetValue(adSet' null) + "' WHERE ID = '" + prop.Name + "'"; " is 122.
Long Statement,OSAE,OSAEGrammar,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEGrammar\OSAEGrammar.cs,Load_Direct_Grammar,The length of the statement  "                dsResults = OSAESql.RunSQL("SELECT `match` FROM osae_pattern_match WHERE UPPER(`match`) NOT LIKE '%[OBJECT]%' AND UPPER(`match`) NOT LIKE '%[STATE]%' AND UPPER(`match`) NOT LIKE '%[PRONOUN]%' ORDER BY `match`"); " is 211.
Long Statement,OSAE,OSAEGrammar,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEGrammar\OSAEGrammar.cs,Load_Voice_Grammars,The length of the statement  "            dsResults = OSAESql.RunSQL("SELECT object_name' CONCAT(object_name''''s') AS possessive_name FROM osae_v_object_list_full"); " is 124.
Long Statement,OSAE,OSAEGrammar,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEGrammar\OSAEGrammar.cs,Load_Voice_Grammars,The length of the statement  "               dsResults = OSAESql.RunSQL("SELECT state_label FROM osae_v_object_type_state_list_full WHERE object_type='" + ot + "'"); " is 120.
Long Statement,OSAE,OSAEGrammar,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEGrammar\OSAEGrammar.cs,Load_Voice_Grammars,The length of the statement  "                dsResults = OSAESql.RunSQL("SELECT DISTINCT state_label FROM osae_v_object_type_state_list_full WHERE state_label IS NOT NULL"); " is 128.
Long Statement,OSAE,OSAEGrammar,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEGrammar\OSAEGrammar.cs,Load_Voice_Grammars,The length of the statement  "                dsResults = OSAESql.RunSQL("SELECT DISTINCT method_label FROM osae_v_object_type_method_list_full WHERE method_label IS NOT NULL"); " is 131.
Long Statement,OSAE,OSAEGrammar,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEGrammar\OSAEGrammar.cs,Load_Text_Only_Grammars,The length of the statement  "            dsResults = OSAESql.RunSQL("SELECT object_name' CONCAT(object_name''''s') AS possessive_name FROM osae_v_object_list_full"); " is 124.
Long Statement,OSAE,OSAEGrammar,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEGrammar\OSAEGrammar.cs,Load_Text_Only_Grammars,The length of the statement  "                dsResults = OSAESql.RunSQL("SELECT CONCAT(object_name''''s') as object_name FROM osae_v_object_list_full WHERE object_type='" + ot + "'"); " is 138.
Long Statement,OSAE,OSAEGrammar,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEGrammar\OSAEGrammar.cs,Load_Text_Only_Grammars,The length of the statement  "                    DataSet dsPropType = OSAESql.RunSQL("SELECT DISTINCT(property_datatype)'property_object_type FROM osae_v_object_type_property WHERE object_type='" + ot + "' ORDER BY property_datatype"); " is 186.
Long Statement,OSAE,OSAEGrammar,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEGrammar\OSAEGrammar.cs,Load_Text_Only_Grammars,The length of the statement  "                        DataSet dsPropName = OSAESql.RunSQL("SELECT DISTINCT(property_name) FROM osae_v_object_type_property WHERE object_type='" + ot + "' AND property_datatype='" + drType["property_datatype"].ToString() + "' ORDER BY property_datatype"); " is 232.
Long Statement,OSAE,OSAEGrammar,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEGrammar\OSAEGrammar.cs,Load_Text_Only_Grammars,The length of the statement  "                            DataSet dsPropObjectType = OSAESql.RunSQL("SELECT object_name FROM osae_v_object_list_full WHERE object_type='" + drType["property_object_type"].ToString() + "'"); " is 163.
Long Statement,OSAE,OSAEImageManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEImage\OSAEImageManager.cs,AddImage,The length of the statement  "                command.CommandText = "CALL osae_sp_image_add (@pimage_data' @pimage_name' @pimage_type' @pimage_width' @pimage_height' @pimage_dpi)"; " is 134.
Long Statement,OSAE,OSAEImageManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEImage\OSAEImageManager.cs,GetImage,The length of the statement  "                    var image = connection.Query<OSAEImage>("SELECT image_id as 'ID'' image_name as 'Name'' image_type as 'Type'' image_data as 'Data' FROM osae_images WHERE image_id = @id"' " is 170.
Long Statement,OSAE,OSAEImageManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEImage\OSAEImageManager.cs,GetImage,The length of the statement  "                throw new Exception("API - GetImage - Failed to get image with id: " + imageId.ToString() + "' exception encountered: " + ex.Message' ex); " is 138.
Long Statement,OSAE,OSAEImageManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEImage\OSAEImageManager.cs,GetImage,The length of the statement  "                    var image = connection.Query<OSAEImage>("SELECT image_id as 'ID'' image_name as 'Name'' image_type as 'Type'' image_data as 'Data' FROM osae_images WHERE image_name = @name"' " is 174.
Long Statement,OSAE,OSAEImageManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEImage\OSAEImageManager.cs,GetImage,The length of the statement  "                // We shouldn't log inside the API' so let's throw an exception to inform the calling application that there's an issue. " is 120.
Long Statement,OSAE,OSAEImageManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEImage\OSAEImageManager.cs,GetImage,The length of the statement  "                //throw new Exception("API - Failed to get requested image from DB: " + imageName + "' exception encountered: " + ex.Message' ex); " is 130.
Long Statement,OSAE,Logging,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Logging.cs,AddToLog,The length of the statement  "                        string filePath = Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + @"\OSAE\Logs\" + logFile + ".log"; " is 129.
Long Statement,OSAE,Logging,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Logging.cs,AddToLog,The length of the statement  "                    string filePath = Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + "/Logs/" + logFile + ".log"; " is 123.
Long Statement,OSAE,Logging,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Logging.cs,AddToLog,The length of the statement  "                    sw.WriteLine(System.DateTime.Now.ToString("MM/dd/yyyy hh:mm:ss.fff tt") + " - LOGGING ERROR: " + ex.Message + " - " + ex.InnerException); " is 137.
Long Statement,OSAE,Logging,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Logging.cs,EventLogAdd,The length of the statement  "                command.CommandText = "CALL osae_sp_event_log_add (@ObjectName' @EventName' @FromObject' @DebugInfo' @Param1' @Param2)"; " is 120.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,GetObjectPropertyValue,The length of the statement  "                    command.CommandText = "SELECT object_property_id' property_name' property_value' property_datatype' last_updated FROM osae_v_object_property WHERE (UPPER(object_name) = UPPER(@ObjectName) OR UPPER(object_alias) = UPPER(@ObjectName)) AND property_name=@OSAEObjectProperty"; " is 272.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertySet,The length of the statement  "                command.CommandText = "CALL osae_sp_object_property_set (@ObjectName' @PropertyName' @PropertyValue' @FromObject' @DebugInfo)"; " is 127.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertySet,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectPropertySet error: " + command.CommandText + " - error: " + ex.Message' true); } " is 124.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyExists,The length of the statement  "                    command.CommandText = "SELECT object_property_id FROM osae_v_object_property WHERE object_name=@ObjectName AND property_name=@PropertyName"; " is 140.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,GetObjectProperties,The length of the statement  "                    command.CommandText = "SELECT object_property_id' property_name' property_value' property_datatype' last_updated FROM osae_v_object_property WHERE UPPER(object_name) = UPPER(@ObjectName) OR UPPER(object_alias) = UPPER(@ObjectName) ORDER BY property_name"; " is 255.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyListGet,The length of the statement  "                command.CommandText = "SELECT property_name FROM osae_v_object_property WHERE (UPPER(object_name) = UPPER('" + objectName + "') OR UPPER(object_alias) = UPPER('" + objectName + "')) ORDER BY property_name asc"; " is 210.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyListGet,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectPropertyListGet error: " + command.CommandText + " - error: " + ex.Message' true); } " is 128.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyArrayAdd,The length of the statement  "                command.CommandText = "CALL osae_sp_object_property_array_add (@ObjectName' @PropertyName' @PropertyValue' @PropertyLabel)"; " is 124.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyArrayAdd,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectPropertyArrayAdd error: " + command.CommandText + " - error: " + ex.Message' true); } " is 129.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyArrayUpdate,The length of the statement  "                command.CommandText = "CALL osae_sp_object_property_array_update (@ObjectName' @PropertyName' @OldPropertyValue' @NewPropertyValue' @PropertyLabel)"; " is 149.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyArrayUpdate,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectPropertyArrayUpdate error: " + command.CommandText + " - error: " + ex.Message' true); } " is 132.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyArrayGetRandom,The length of the statement  "                    Logging.GetLogger().AddToLog("API - ObjectPropertyArrayGetRandom error: " + command.CommandText + " - error: " + ex.Message' true); " is 131.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyArrayGetAll,The length of the statement  "                    Logging.GetLogger().AddToLog("API - ObjectPropertyArrayGetAll error: " + command.CommandText + " - error: " + ex.Message' true); " is 128.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyArrayDelete,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectPropertyArrayDelete error: " + command.CommandText + " - error: " + ex.Message' true); } " is 132.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyArrayDeleteAll,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectPropertyArrayDeleteAll error: " + command.CommandText + " - error: " + ex.Message' true); } " is 135.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyScraperAdd,The length of the statement  "                command.CommandText = "CALL osae_sp_object_property_scraper_add (@ObjectName' @PropertyName' @URL' @Prefix' @PrefixOffset' @Suffix' @UpdateInterval)"; " is 150.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyScraperAdd,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectPropertyArrayAdd error: " + command.CommandText + " - error: " + ex.Message' true); } " is 129.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyScraperUpdate,The length of the statement  "                command.CommandText = "CALL osae_sp_object_property_scraper_update (@ScraperID'@ObjectName' @PropertyName' @URL' @Prefix' @PrefixOffset' @Suffix' @UpdateInterval)"; " is 164.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyScraperUpdate,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectPropertyScraperID error: " + command.CommandText + " - error: " + ex.Message' true); } " is 130.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyScraperDelete,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectPropertyArrayAdd error: " + command.CommandText + " - error: " + ex.Message' true); } " is 129.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyHistoryGet,The length of the statement  "                command.CommandText = "SELECT history_timestamp' CASE property_datatype WHEN 'Boolean' THEN IF(property_value='TRUE'' 1' 0) ELSE property_value END AS property_value FROM osae_v_object_property_history WHERE (UPPER(object_name) = UPPER('" + objectName + "') OR UPPER(object_alias) = UPPER('" + objectName + "')) and property_name = '" + propertyName + "' AND history_timestamp BETWEEN '" + from + "' AND '" + to + "' ORDER BY history_timestamp asc"; " is 449.
Long Statement,OSAE,OSAEObjectPropertyManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectProperty\OSAEObjectPopertyManager.cs,ObjectPropertyHistoryGet,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectPropertyHistoryGet error: " + command.CommandText + " - error: " + ex.Message' true); } " is 131.
Long Statement,OSAE,OSAEObjectStateManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectState\OSAEObjectStateManager.cs,GetObjectStateValue,The length of the statement  "                    command.CommandText = "SELECT state_name'state_label'coalesce(time_in_state' 0) as time_in_state'COALESCE(last_state_change'NOW()) as last_state_change FROM osae_v_object WHERE UPPER(object_name)=UPPER(@ObjectName) OR UPPER(object_alias)=UPPER(@ObjectName)"; " is 258.
Long Statement,OSAE,OSAEObjectStateManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectState\OSAEObjectStateManager.cs,GetObjectStateValue,The length of the statement  "                    Logging.GetLogger().AddToLog("API - GetObjectStateValue error: Object does not exist | ObjectName: " + ObjectName' true); " is 121.
Long Statement,OSAE,OSAEObjectStateManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectState\OSAEObjectStateManager.cs,ObjectStateHistoryGet,The length of the statement  "                command.CommandText = "SELECT history_timestamp' object_name' state_label FROM osae_v_object_state_change_history WHERE (UPPER(object_name) = UPPER('" + objectName + "') OR UPPER(object_alias) = UPPER('" + objectName + "')) AND history_timestamp BETWEEN '" + from + "' AND '" + to + "' ORDER BY history_timestamp asc"; " is 318.
Long Statement,OSAE,OSAEObjectStateManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectState\OSAEObjectStateManager.cs,ObjectStateHistoryGet,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectStateHistoryGet error: " + command.CommandText + " - error: " + ex.Message' true); } " is 128.
Long Statement,OSAE,OSAEObjectStateManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectState\OSAEObjectStateManager.cs,ObjectStateListGet,The length of the statement  "                command.CommandText = "SELECT state_name'state_label FROM osae_v_object_state WHERE UPPER(object_name) = UPPER('" + objectName + "') OR UPPER(object_alias) = UPPER('" + objectName + "') ORDER BY state_label asc"; " is 212.
Long Statement,OSAE,OSAEObjectStateManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectState\OSAEObjectStateManager.cs,ObjectStateListGet,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectStateHistoryGet error: " + command.CommandText + " - error: " + ex.Message' true); } " is 128.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeLoad,The length of the statement  "                command.CommandText = "SELECT object_type' object_type_description' object_type_owner' container' hide_redundant_events' base_type' object_name' system_hidden' object_type_tooltip FROM osae_v_object_type WHERE object_type=@Name"; " is 229.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeAdd,The length of the statement  "                command.CommandText = "CALL osae_sp_object_type_add (@Name' @Description' @OwnedBy' @BaseType' @TypeOwner' @System' @Container' @HideRedundantEvents' @Tooltip)"; " is 161.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeAdd,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypeAdd error: " + command.CommandText + " - error: " + ex.Message' true); } " is 120.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeDelete,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypeDelete error: " + command.CommandText + " - error: " + ex.Message' true); } " is 123.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeUpdate,The length of the statement  "                command.CommandText = "CALL osae_sp_object_type_update (@oldName' @newName' @Description' @OwnedBy' @BaseType' @TypeOwner' @System' @Container' @HideRedundantEvents' @Tooltip)"; " is 177.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeUpdate,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypeUpdate error: " + command.CommandText + " - error: " + ex.Message' true); } " is 123.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeClone,The length of the statement  "                OSAESql.RunSQL("CALL osae_sp_object_type_clone ('" + NewObjectTypeName.Replace("'"' "''") + "'''" + BaseObjectTypeName.Replace("'"' "''") + "')"); " is 146.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeEventDelete,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypeEventDelete error: " + command.CommandText + " - error: " + ex.Message' true); } " is 128.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeEventUpdate,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypeEventUpdate error: " + command.CommandText + " - error: " + ex.Message' true); } " is 128.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeMethodExists,The length of the statement  "                command.CommandText = "SELECT method_id FROM osae_v_object_type_method WHERE UPPER(object_type)=UPPER(@Name) AND (method_name=@method_name OR method_label=@method_name)"; " is 170.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeMethodExists,The length of the statement  "                Logging.GetLogger().AddToLog("API - ObjectTypeMenthodExists (" + typeName + "." + methodName + ") error: " + ex.Message' true); " is 127.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeMethodAdd,The length of the statement  "                command.CommandText = "CALL osae_sp_object_type_method_add (@ObjectType' @Name' @Label' @ParamLabel1' @ParamLabel2' @ParamDefault1' @ParamDefault2' @Tooltip)"; " is 159.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeMethodAdd,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypeMethodAdd error: " + command.CommandText + " - error: " + ex.Message' true); } " is 126.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeMethodDelete,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypeMethodDelete error: " + command.CommandText + " - error: " + ex.Message' true); } " is 129.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeMethodUpdate,The length of the statement  "                command.CommandText = "CALL osae_sp_object_type_method_update (@OldName' @NewName' @Label' @ObjectType' @ParamLabel1' @ParamLabel2' @ParamDefault1' @ParamDefault2' @Tooltip)"; " is 175.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeMethodUpdate,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypeMethodUpdate error: " + command.CommandText + " - error: " + ex.Message' true); } " is 129.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypePropertyAdd,The length of the statement  "                command.CommandText = "CALL osae_sp_object_type_property_add (@ObjectType' @Name' @ParameterType' @ParameterObjectType' @ParameterDefault' @TrackHistory' @Required' @ToolTip)"; " is 176.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypePropertyAdd,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypePropertyAdd error: " + command.CommandText + " - error: " + ex.Message' true); } " is 128.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypePropertyDelete,The length of the statement  "                { Logging.GetLogger().AddToLog("ObjectTypePropertyADelete error: " + command.CommandText + " - error: " + ex.Message' true); } " is 126.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypePropertyUpdate,The length of the statement  "                command.CommandText = "CALL osae_sp_object_type_property_update (@OldName' @NewName' @ParameterType' @ParameterObjectType' @ParameterDefault' @ObjectType' @TrackHistory' @Required' @ToolTip)"; " is 192.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypePropertyUpdate,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypePropertyAUpdate error: " + command.CommandText + " - error: " + ex.Message' true); } " is 132.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypePropertyOptionAdd,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypePropertyOptionAdd error: " + command.CommandText + " - error: " + ex.Message' true); } " is 134.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypePropertyOptionDelete,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypePropertyOptionDelete error: " + command.CommandText + " - error: " + ex.Message' true); } " is 137.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypePropertyOptionUpdate,The length of the statement  "                command.CommandText = "CALL osae_sp_object_type_property_option_update (@objectName' @propertyName' @newoption' @oldoption)"; " is 125.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypePropertyOptionUpdate,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypePropertyOptionUpdate error: " + command.CommandText + " - error: " + ex.Message' true); } " is 137.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeStateAdd,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypeStateAdd error: " + command.CommandText + " - error: " + ex.Message' true); } " is 125.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeStateDelete,The length of the statement  "                { Logging.GetLogger().AddToLog("API - ObjectTypeStateDelete error: " + command.CommandText + " - error: " + ex.Message' true); } " is 128.
Long Statement,OSAE,OSAEObjectTypeManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObjectType\OSAEObjectTypeManager.cs,ObjectTypeStateUpdate,The length of the statement  "                { Logging.GetLogger().AddToLog("ObjectTypeStateUpdate error: " + command.CommandText + " - error: " + ex.Message' true); } " is 122.
Long Statement,OSAE,OSAEScreenControlManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEScreenControl\OSAEScreenControlManager.cs,GetScreenControls,The length of the statement  "                    command.CommandText = "SELECT object_name' control_name' control_type' state_name' coalesce(last_updated'NOW()) as last_updated' coalesce(property_last_updated'NOW()) as property_last_updated' coalesce(time_in_state' 0) as time_in_state FROM osae_v_screen_object WHERE screen_name=@ScreenName AND control_enabled = 1"; " is 318.
Long Statement,OSAE,OSAEUserControlFinder,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEUserControl\OSAEUserControlFinder.cs,FindUserControls,The length of the statement  "                var finder = (OSAEUserControlFinder)domain.CreateInstanceAndUnwrap(typeof(OSAEUserControlFinder).Assembly.FullName' typeof(OSAEUserControlFinder).FullName); " is 156.
Long Statement,OSAE,OSAEUserControlManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEUserControl\OSAEUserControlManager.cs,GetUserControlName,The length of the statement  "                command.CommandText = "SELECT * FROM osae_v_object_property WHERE object_type=@ObjectType AND property_name='Computer Name' AND (property_value IS NULL OR property_value='' OR property_value=@MachineName) LIMIT 1"; " is 214.
Long Statement,OSAE,OSAEUserControlManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEUserControl\OSAEUserControlManager.cs,GetUserControlName,The length of the statement  "                //Log.Debug("API - GetUserControlName error: " + ex.Message + " - objectType: " + objectType + " | machineName: " + machineName); " is 129.
Long Statement,OSAE,PluginFinder,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Plugin\PluginFinder.cs,FindPlugins,The length of the statement  "                var finder = (PluginFinder)domain.CreateInstanceAndUnwrap(typeof(PluginFinder).Assembly.FullName' typeof(PluginFinder).FullName); " is 129.
Long Statement,OSAE,OSAEScheduleManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAESchedule.cs\OSAEScheduleManager.cs,ScheduleQueueAdd,The length of the statement  "                command.CommandText = "CALL osae_sp_schedule_queue_add(@ScheduleDate' @Object' @Method' @Parameter1' @Parameter2' @Script' @RecurringID)";" is 138.
Long Statement,OSAE,OSAEScheduleManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAESchedule.cs\OSAEScheduleManager.cs,ScheduleRecurringAdd,The length of the statement  "                command.CommandText = "CALL osae_sp_schedule_recurring_add(@ScheduleName' @Object' @Method' @Parameter1' @Parameter2' "; " is 120.
Long Statement,OSAE,OSAEScheduleManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAESchedule.cs\OSAEScheduleManager.cs,ScheduleRecurringAdd,The length of the statement  "                command.CommandText = command.CommandText + "@Script' @RecurringTime' @Sunday' @Monday' @Tuesday' @Wednesday' @Thursday' @Friday' "; " is 132.
Long Statement,OSAE,OSAEScheduleManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAESchedule.cs\OSAEScheduleManager.cs,ScheduleRecurringAdd,The length of the statement  "                command.CommandText = command.CommandText + "@Saturday' @Interval' @RecurringMinutes' @RecurringDay' @RecurringDate' @Active)";" is 127.
Long Statement,OSAE,OSAEScheduleManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAESchedule.cs\OSAEScheduleManager.cs,ScheduleRecurringDelete,The length of the statement  "                    Logging.GetLogger().AddToLog("ScheduleRecurringDelete error: " + command.CommandText + " - error: " + ex.Message' true);" is 120.
Long Statement,OSAE,OSAEScheduleManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAESchedule.cs\OSAEScheduleManager.cs,ScheduleRecurringUpdate,The length of the statement  "                command.CommandText = "CALL osae_sp_schedule_recurring_update(@OldScheduleName' @NewScheduleName' @Object' @Method' @Parameter1' @Parameter2' "; " is 144.
Long Statement,OSAE,OSAEScheduleManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAESchedule.cs\OSAEScheduleManager.cs,ScheduleRecurringUpdate,The length of the statement  "                command.CommandText = command.CommandText + "@Script' @RecurringTime' @Sunday' @Monday' @Tuesday' @Wednesday' @Thursday' @Friday' ";" is 132.
Long Statement,OSAE,OSAEScheduleManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAESchedule.cs\OSAEScheduleManager.cs,ScheduleRecurringUpdate,The length of the statement  "                command.CommandText = command.CommandText + "@Saturday' @Interval' @RecurringMinutes' @RecurringDay' @RecurringDate' @Active)";" is 127.
Long Statement,OSAE,OSAEScheduleManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAESchedule.cs\OSAEScheduleManager.cs,ScheduleRecurringUpdate,The length of the statement  "                    Logging.GetLogger().AddToLog("ScheduleRecurringUpdate error: " + command.CommandText + " - error: " + ex.Message' true);" is 120.
Long Statement,OSAE,OSAEScheduleManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAESchedule.cs\OSAEScheduleManager.cs,GetRecurringSchedule,The length of the statement  "                    command.CommandText = "SELECT schedule_name' parameter_1' parameter_2' recurring_time' monday' tuesday' wednesday' thursday' friday' saturday' sunday' interval_unit' recurring_minutes'" +  " is 187.
Long Statement,OSAE,OSAEScheduleManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAESchedule.cs\OSAEScheduleManager.cs,RunScheduledMethods,The length of the statement  "                    Logging.GetLogger().AddToLog("API - RunScheduledMethods error: " + command.CommandText + " - error: " + ex.Message' true);" is 122.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,ObjectExists,The length of the statement  "                    command.CommandText = "SELECT object_id FROM osae_v_object WHERE UPPER(object_name)=UPPER(@name) OR UPPER(object_alias)=UPPER(@name)"; " is 134.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectByName,The length of the statement  "                command.CommandText = "SELECT object_name' object_alias' object_description' object_type' address' container_name' min_trust_level' enabled' state_name' base_type' coalesce(time_in_state' 0) as time_in_state' last_updated FROM osae_v_object WHERE UPPER(object_name)=UPPER(@Name) OR UPPER(object_alias)=UPPER(@Name)"; " is 316.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectByName,The length of the statement  "                    OSAEObject obj = new OSAEObject(dataset.Tables[0].Rows[0]["object_name"].ToString()' dataset.Tables[0].Rows[0]["object_alias"].ToString()' dataset.Tables[0].Rows[0]["object_description"].ToString()' dataset.Tables[0].Rows[0]["object_type"].ToString()' dataset.Tables[0].Rows[0]["address"].ToString()' dataset.Tables[0].Rows[0]["container_name"].ToString()' Convert.ToUInt16(dataset.Tables[0].Rows[0]["min_trust_level"].ToString())' (dataset.Tables[0].Rows[0]["enabled"].ToString() != "0")); " is 490.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectByAddress,The length of the statement  "                    command.CommandText = "SELECT object_name' object_alias' object_description' object_type' address' container_name' min_trust_level' enabled' state_name' base_type' coalesce(time_in_state' 0) as time_in_state' last_updated FROM osae_v_object WHERE address=@Address"; " is 265.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectByAddress,The length of the statement  "                        obj = new OSAEObject(dataset.Tables[0].Rows[0]["object_name"].ToString()' dataset.Tables[0].Rows[0]["object_alias"].ToString()' dataset.Tables[0].Rows[0]["object_description"].ToString()' dataset.Tables[0].Rows[0]["object_type"].ToString()' dataset.Tables[0].Rows[0]["address"].ToString()' dataset.Tables[0].Rows[0]["container_name"].ToString()' Convert.ToInt16(dataset.Tables[0].Rows[0]["min_trust_level"].ToString())' (dataset.Tables[0].Rows[0]["enabled"].ToString() != "0")); " is 478.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectsByContainer,The length of the statement  "                    command.CommandText = "SELECT object_name' object_alias' object_description' object_type' address' container_name' min_trust_level' enabled' state_name' base_type' coalesce(time_in_state' 0) as time_in_state' last_updated FROM osae_v_object WHERE container_name is null ORDER BY object_name ASC"; " is 296.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectsByContainer,The length of the statement  "                    command.CommandText = "SELECT object_name' object_alias' object_description' object_type' address' container_name' min_trust_level' enabled' state_name' base_type' coalesce(time_in_state' 0) as time_in_state' last_updated FROM osae_v_object WHERE container_name=@ContainerName AND enabled = 1 ORDER BY object_name ASC"; " is 319.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectsByContainer,The length of the statement  "                        obj = new OSAEObject(dr["object_name"].ToString()' dr["object_alias"].ToString()' dr["object_description"].ToString()' dr["object_type"].ToString()' dr["address"].ToString()' dr["container_name"].ToString()' Convert.ToUInt16(dataset.Tables[0].Rows[0]["min_trust_level"].ToString())' (dataset.Tables[0].Rows[0]["enabled"].ToString() != "0")); " is 341.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectsByOwner,The length of the statement  "                    command.CommandText = "SELECT object_name' object_alias' object_description' object_type' address' container_name' min_trust_level' enabled' state_name' base_type' coalesce(time_in_state' 0) as time_in_state' last_updated FROM osae_v_object WHERE owned_by=@ObjectOwner"; " is 270.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectsByOwner,The length of the statement  "                            obj = new OSAEObject(dr["object_name"].ToString()' dr["object_alias"].ToString()' dr["object_description"].ToString()' dr["object_type"].ToString()' dr["address"].ToString()' dr["container_name"].ToString()' Convert.ToUInt16(dataset.Tables[0].Rows[0]["min_trust_level"].ToString())' (dataset.Tables[0].Rows[0]["enabled"].ToString() != "0")); " is 341.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectsByBaseType,The length of the statement  "                    command.CommandText = "SELECT object_name' object_alias' object_description' object_type' address' container_name' min_trust_level' enabled' state_name' base_type' coalesce(time_in_state' 0) as time_in_state' last_updated FROM osae_v_object WHERE base_type=@ObjectType"; " is 270.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectsByBaseType,The length of the statement  "                            obj = new OSAEObject(dr["object_name"].ToString()' dr["object_alias"].ToString()' dr["object_description"].ToString()' dr["object_type"].ToString()' dr["address"].ToString()' dr["container_name"].ToString()' Convert.ToUInt16(dataset.Tables[0].Rows[0]["min_trust_level"].ToString())' (dataset.Tables[0].Rows[0]["enabled"].ToString() != "0")); " is 341.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectsByType,The length of the statement  "                    command.CommandText = "SELECT object_name' object_alias' object_description' object_type' address' container_name' min_trust_level' enabled' state_name' base_type' coalesce(time_in_state' 0) as time_in_state' last_updated FROM osae_v_object WHERE object_type=@ObjectType"; " is 272.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectsByType,The length of the statement  "                            obj = new OSAEObject(dr["object_name"].ToString()' dr["object_alias"].ToString()' dr["object_description"].ToString()' dataset.Tables[0].Rows[0]["object_type"].ToString()' dr["address"].ToString()' dr["container_name"].ToString()' Convert.ToUInt16(dataset.Tables[0].Rows[0]["min_trust_level"].ToString())' (dataset.Tables[0].Rows[0]["enabled"].ToString() != "0")); " is 364.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectsByPropertyValue,The length of the statement  "                command.CommandText = "SELECT object_name' object_alias' object_description' object_type' address' container_name' min_trust_level' enabled' state_name' base_type' coalesce(time_in_state' 0) as time_in_state' last_updated FROM osae_v_object_property WHERE property_name=@Property AND UPPER(property_value) = UPPER(@Value)"; " is 323.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectsByPropertyValue,The length of the statement  "                        obj = new OSAEObject(dataset.Tables[0].Rows[0]["object_name"].ToString()' dataset.Tables[0].Rows[0]["object_alias"].ToString()' dataset.Tables[0].Rows[0]["object_description"].ToString()' dataset.Tables[0].Rows[0]["object_type"].ToString()' dataset.Tables[0].Rows[0]["address"].ToString()' dataset.Tables[0].Rows[0]["container_name"].ToString()' Convert.ToUInt16(dataset.Tables[0].Rows[0]["min_trust_level"].ToString())' (dataset.Tables[0].Rows[0]["enabled"].ToString() != "0")); " is 479.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,ObjectDeleteByAddress,The length of the statement  "                    Logging.GetLogger().AddToLog("API - ObjectDeleteByAddress error: " + command.CommandText + " - error: " + ex.Message' true); " is 124.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,ObjectUpdate,The length of the statement  "                command.CommandText = "CALL osae_sp_object_update (@OldName' @NewName' @Alias' @Description' @ObjectType' @Address' @Container' @MinTrustLevel' @Enabled)"; " is 155.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,GetObjectMethods,The length of the statement  "                    command.CommandText = "SELECT method_id' method_name' method_label FROM osae_v_object_method WHERE UPPER(object_name) = UPPER(@ObjectName) OR UPPER(object_alias) = UPPER(@ObjectName) ORDER BY method_name"; " is 205.
Long Statement,OSAE,OSAEObjectManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEObject\OSAEObjectManager.cs,EventTrigger,The length of the statement  "                command.CommandText = "CALL osae_sp_event_log_add (@ObjectName' @EventName' @FromObject' @DebugInfo' @Param1' @Param2)"; " is 120.
Long Statement,OSAE,OSAEMethod,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEMethod\OSAEMethod.cs,Run,The length of the statement  "            if(string.IsNullOrEmpty(MethodName)) throw new ArgumentException("Cannot invoke run when method name is not available"); " is 120.
Long Statement,OSAE,OSAEMethodManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEMethod\OSAEMethodManager.cs,MethodQueueAdd,The length of the statement  "                { Logging.GetLogger().AddToLog("API - MethodQueueAdd error: " + command.CommandText + " - error: " + ex.Message' true); } " is 121.
Long Statement,OSAE,OSAEMethodManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEMethod\OSAEMethodManager.cs,MethodQueueDelete,The length of the statement  "                { Logging.GetLogger().AddToLog("API - MethodQueueDelete error: " + command.CommandText + " - error: " + ex.Message' true); } " is 124.
Long Statement,OSAE,OSAEMethodManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEMethod\OSAEMethodManager.cs,GetMethodsInQueue,The length of the statement  "                command.CommandText = "SELECT method_queue_id' object_name' address' method_name' method_label' parameter_1' parameter_2' object_owner' from_object FROM osae_v_method_queue WHERE (object_owner IS NULL OR object_owner != 'SYSTEM') ORDER BY entry_time"; " is 251.
Long Statement,OSAE,OSAEScriptManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEScript\OSAEScriptManager.cs,GetScriptProcessors,The length of the statement  "                MySqlCommand command = new MySqlCommand("SELECT script_processor_id' script_processor_name' script_processor_plugin_name FROM osae_script_processors"' connection);" is 163.
Long Statement,OSAE,OSAEScriptManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEScript\OSAEScriptManager.cs,AddScriptProcessor,The length of the statement  "                    Logging.GetLogger().AddToLog("API - AddScriptProcessor error: " + command.CommandText + " - error: " + ex.Message' true); " is 121.
Long Statement,OSAE,OSAEScriptManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEScript\OSAEScriptManager.cs,ObjectEventScriptAdd,The length of the statement  "                    Logging.GetLogger().AddToLog("API - ObjectEventScriptAdd error: " + command.CommandText + " - error: " + ex.Message' true);" is 123.
Long Statement,OSAE,OSAEScriptManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEScript\OSAEScriptManager.cs,ObjectEventScriptDelete,The length of the statement  "                Logging.GetLogger().AddToLog("API - ObjectEventScriptDelete error: " + command.CommandText + " - error: " + ex.Message' true); " is 126.
Long Statement,OSAE,OSAEScriptManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEScript\OSAEScriptManager.cs,ObjectTypeEventScriptAdd,The length of the statement  "                    Logging.GetLogger().AddToLog("API - ObjectTypeEventScriptAdd error: " + command.CommandText + " - error: " + ex.Message' true); " is 127.
Long Statement,OSAE,OSAEScriptManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEScript\OSAEScriptManager.cs,ObjectTypeEventScriptDelete,The length of the statement  "                Logging.GetLogger().AddToLog("API - ObjectTypeEventScriptDelete error: " + command.CommandText + " - error: " + ex.Message' true); " is 130.
Long Statement,OSAE,OSAEScriptManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEScript\OSAEScriptManager.cs,PatternMatchDelete,The length of the statement  "                    Logging.GetLogger().AddToLog("API - PatternMatchDelete error: " + command.CommandText + " - error: " + ex.Message' true); " is 121.
Long Statement,OSAE,OSAEScriptManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEScript\OSAEScriptManager.cs,PatternMatchUpdate,The length of the statement  "                    Logging.GetLogger().AddToLog("API - PatternMatchUpdate error: " + command.CommandText + " - error: " + ex.Message' true); " is 121.
Long Statement,OSAE,OSAEScriptManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEScript\OSAEScriptManager.cs,PatternScriptDelete,The length of the statement  "                Logging.GetLogger().AddToLog("API - PatternScriptDelete error: " + command.CommandText + " - error: " + ex.Message' true); " is 122.
Long Statement,OSAE,OSAEScriptManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEScript\OSAEScriptManager.cs,GetScript,The length of the statement  "                MySqlCommand command = new MySqlCommand("SELECT script FROM osae_script WHERE script_id = " + scriptID.ToString()' connection); " is 127.
Long Statement,OSAE,OSAEScriptManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEScript\OSAEScriptManager.cs,RunPatternScript,The length of the statement  "                OSAEMethodManager.MethodQueueAdd(GetDestinationScriptProcessor(scriptID)' "RUN SCRIPT"' scriptID.ToString()' parameter' from); " is 126.
Long Statement,OSAE,OSAEScriptManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEScript\OSAEScriptManager.cs,RunScript,The length of the statement  "            OSAEMethodManager.MethodQueueAdd(GetDestinationScriptProcessor(iScriptID)' "RUN SCRIPT"' iScriptID.ToString()' scriptparameter' from); " is 134.
Long Statement,OSAE,OSAEScriptManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEScript\OSAEScriptManager.cs,GetScriptID,The length of the statement  "                    MySqlCommand command = new MySqlCommand("SELECT script_id FROM osae_script WHERE script_name=@pscriptname"' connection); " is 120.
Long Statement,OSAE.General,OSAELog,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\OSAELog.cs,PruneLogs,The length of the statement  "                if (GetTableSize("osae_event_log") > 10 || GetTableSize("osae_debug_log") > 10 || GetTableSize("osae_method_log") > 10) EventLogClear(); " is 136.
Long Statement,OSAE.General,OSAELog,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\OSAELog.cs,GetTableSize,The length of the statement  "            sql = "SELECT SUM( data_length + index_length) / 1024 / 1024 AS size FROM information_schema.TABLES WHERE table_schema = 'OSAE' AND TABLE_NAME = '" + tableName + "';"; " is 167.
Complex Conditional,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetBindByName,The conditional expression  "prop != null && prop.CanWrite && prop.PropertyType == typeof(bool)                  && ((indexers = prop.GetIndexParameters()) == null || indexers.Length == 0)                  && (setter = prop.GetSetMethod()) != null"  is complex.
Complex Conditional,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetDeserializer,The conditional expression  "!(typeMap.ContainsKey(type) || type.IsEnum || type.FullName == LinqBinary ||                  (type.IsValueType && (underlyingType = Nullable.GetUnderlyingType(type)) != null && underlyingType.IsEnum))"  is complex.
Complex Conditional,Dapper,DefaultTypeMap,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,FindConstructor,The conditional expression  "unboxedType != types[i]                          && !(unboxedType.IsEnum && Enum.GetUnderlyingType(unboxedType) == types[i])                          && !(unboxedType == typeof(char) && types[i] == typeof(string))"  is complex.
Empty Catch Block,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,QueryMultiple,The method has an empty catch block.
Empty Catch Block,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,QueryInternal,The method has an empty catch block.
Empty Catch Block,OSAE,OSAEAdminManager,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEAdmin\OSAEAdminManager.cs,UpdateAdminSettings,The method has an empty catch block.
Empty Catch Block,OSAE,Logging,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Logging.cs,DebugLogAdd,The method has an empty catch block.
Empty Catch Block,OSAE.General,OSAELog,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\OSAELog.cs,DebugLogAdd,The method has an empty catch block.
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GetColumnHash,The following statement contains a magic number: unchecked              {                  int colCount = reader.FieldCount' hash = colCount;                  for (int i = 0; i < colCount; i++)                  {   // binding code is only interested in names - not types                      object tmp = reader.GetName(i);                      hash = (hash * 31) + (tmp == null ? 0 : tmp.GetHashCode());                  }                  return hash;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,PackListParameters,The following statement contains a magic number: if (list != null)              {                  if (FeatureSupport.Get(command.Connection).Arrays)                  {                      var arrayParm = command.CreateParameter();                      arrayParm.Value = list;                      arrayParm.ParameterName = namePrefix;                      command.Parameters.Add(arrayParm);                  }                  else                  {                      bool isString = value is IEnumerable<string>;                      bool isDbString = value is IEnumerable<DbString>;                      foreach (var item in list)                      {                          count++;                          var listParam = command.CreateParameter();                          listParam.ParameterName = namePrefix + count;                          listParam.Value = item ?? DBNull.Value;                          if (isString)                          {                              listParam.Size = 4000;                              if (item != null && ((string)item).Length > 4000)                              {                                  listParam.Size = -1;                              }                          }                          if (isDbString && item as DbString != null)                          {                              var str = item as DbString;                              str.AddParameter(command' listParam.ParameterName);                          }                          else                          {                              command.Parameters.Add(listParam);                          }                      }                        if (count == 0)                      {                          command.CommandText = Regex.Replace(command.CommandText' @"[?@:]" + Regex.Escape(namePrefix)' "(SELECT NULL WHERE 1 = 0)");                      }                      else                      {                          command.CommandText = Regex.Replace(command.CommandText' @"[?@:]" + Regex.Escape(namePrefix)' match =>                          {                              var grp = match.Value;                              var sb = new StringBuilder("(").Append(grp).Append(1);                              for (int i = 2; i <= count; i++)                              {                                  sb.Append(''').Append(grp).Append(i);                              }                              return sb.Append(')').ToString();                          });                      }                  }              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,PackListParameters,The following statement contains a magic number: if (list != null)              {                  if (FeatureSupport.Get(command.Connection).Arrays)                  {                      var arrayParm = command.CreateParameter();                      arrayParm.Value = list;                      arrayParm.ParameterName = namePrefix;                      command.Parameters.Add(arrayParm);                  }                  else                  {                      bool isString = value is IEnumerable<string>;                      bool isDbString = value is IEnumerable<DbString>;                      foreach (var item in list)                      {                          count++;                          var listParam = command.CreateParameter();                          listParam.ParameterName = namePrefix + count;                          listParam.Value = item ?? DBNull.Value;                          if (isString)                          {                              listParam.Size = 4000;                              if (item != null && ((string)item).Length > 4000)                              {                                  listParam.Size = -1;                              }                          }                          if (isDbString && item as DbString != null)                          {                              var str = item as DbString;                              str.AddParameter(command' listParam.ParameterName);                          }                          else                          {                              command.Parameters.Add(listParam);                          }                      }                        if (count == 0)                      {                          command.CommandText = Regex.Replace(command.CommandText' @"[?@:]" + Regex.Escape(namePrefix)' "(SELECT NULL WHERE 1 = 0)");                      }                      else                      {                          command.CommandText = Regex.Replace(command.CommandText' @"[?@:]" + Regex.Escape(namePrefix)' match =>                          {                              var grp = match.Value;                              var sb = new StringBuilder("(").Append(grp).Append(1);                              for (int i = 2; i <= count; i++)                              {                                  sb.Append(''').Append(grp).Append(i);                              }                              return sb.Append(')').ToString();                          });                      }                  }              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,PackListParameters,The following statement contains a magic number: if (list != null)              {                  if (FeatureSupport.Get(command.Connection).Arrays)                  {                      var arrayParm = command.CreateParameter();                      arrayParm.Value = list;                      arrayParm.ParameterName = namePrefix;                      command.Parameters.Add(arrayParm);                  }                  else                  {                      bool isString = value is IEnumerable<string>;                      bool isDbString = value is IEnumerable<DbString>;                      foreach (var item in list)                      {                          count++;                          var listParam = command.CreateParameter();                          listParam.ParameterName = namePrefix + count;                          listParam.Value = item ?? DBNull.Value;                          if (isString)                          {                              listParam.Size = 4000;                              if (item != null && ((string)item).Length > 4000)                              {                                  listParam.Size = -1;                              }                          }                          if (isDbString && item as DbString != null)                          {                              var str = item as DbString;                              str.AddParameter(command' listParam.ParameterName);                          }                          else                          {                              command.Parameters.Add(listParam);                          }                      }                        if (count == 0)                      {                          command.CommandText = Regex.Replace(command.CommandText' @"[?@:]" + Regex.Escape(namePrefix)' "(SELECT NULL WHERE 1 = 0)");                      }                      else                      {                          command.CommandText = Regex.Replace(command.CommandText' @"[?@:]" + Regex.Escape(namePrefix)' match =>                          {                              var grp = match.Value;                              var sb = new StringBuilder("(").Append(grp).Append(1);                              for (int i = 2; i <= count; i++)                              {                                  sb.Append(''').Append(grp).Append(i);                              }                              return sb.Append(')').ToString();                          });                      }                  }              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The following statement contains a magic number: foreach (var prop in props)              {                  if (filterParams)                  {                      if (identity.sql.IndexOf("@" + prop.Name' StringComparison.InvariantCultureIgnoreCase) < 0                          && identity.sql.IndexOf(":" + prop.Name' StringComparison.InvariantCultureIgnoreCase) < 0                          && identity.sql.IndexOf("?" + prop.Name' StringComparison.InvariantCultureIgnoreCase) < 0)                      { // can't see the parameter in the text (even in a comment' etc) - burn it with fire                          continue;                      }                  }                  if (typeof(ICustomQueryParameter).IsAssignableFrom(prop.PropertyType))                  {                      il.Emit(OpCodes.Ldloc_0); // stack is now [parameters] [typed-param]                      il.Emit(OpCodes.Callvirt' prop.GetGetMethod()); // stack is [parameters] [dbstring]                      il.Emit(OpCodes.Ldarg_0); // stack is now [parameters] [dbstring] [command]                      il.Emit(OpCodes.Ldstr' prop.Name); // stack is now [parameters] [dbstring] [command] [name]                      il.EmitCall(OpCodes.Callvirt' prop.PropertyType.GetMethod("AddParameter")' null); // stack is now [parameters]                      continue;                  }                  DbType dbType = LookupDbType(prop.PropertyType' prop.Name);                  if (dbType == DynamicParameters.EnumerableMultiParameter)                  {                      // this actually represents special handling for list types;                      il.Emit(OpCodes.Ldarg_0); // stack is now [parameters] [command]                      il.Emit(OpCodes.Ldstr' prop.Name); // stack is now [parameters] [command] [name]                      il.Emit(OpCodes.Ldloc_0); // stack is now [parameters] [command] [name] [typed-param]                      il.Emit(OpCodes.Callvirt' prop.GetGetMethod()); // stack is [parameters] [command] [name] [typed-value]                      if (prop.PropertyType.IsValueType)                      {                          il.Emit(OpCodes.Box' prop.PropertyType); // stack is [parameters] [command] [name] [boxed-value]                      }                      il.EmitCall(OpCodes.Call' typeof(SqlMapper).GetMethod("PackListParameters")' null); // stack is [parameters]                      continue;                  }                  il.Emit(OpCodes.Dup); // stack is now [parameters] [parameters]                    il.Emit(OpCodes.Ldarg_0); // stack is now [parameters] [parameters] [command]                    if (checkForDuplicates)                  {                      // need to be a little careful about adding; use a utility method                      il.Emit(OpCodes.Ldstr' prop.Name); // stack is now [parameters] [parameters] [command] [name]                      il.EmitCall(OpCodes.Call' typeof(SqlMapper).GetMethod("FindOrAddParameter")' null); // stack is [parameters] [parameter]                  }                  else                  {                      // no risk of duplicates; just blindly add                      il.EmitCall(OpCodes.Callvirt' typeof(IDbCommand).GetMethod("CreateParameter")' null);// stack is now [parameters] [parameters] [parameter]                        il.Emit(OpCodes.Dup);// stack is now [parameters] [parameters] [parameter] [parameter]                      il.Emit(OpCodes.Ldstr' prop.Name); // stack is now [parameters] [parameters] [parameter] [parameter] [name]                      il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("ParameterName").GetSetMethod()' null);// stack is now [parameters] [parameters] [parameter]                  }                  if (dbType != DbType.Time) // https://connect.microsoft.com/VisualStudio/feedback/details/381934/sqlparameter-dbtype-dbtype-time-sets-the-parameter-to-sqldbtype-datetime-instead-of-sqldbtype-time                  {                      il.Emit(OpCodes.Dup);// stack is now [parameters] [[parameters]] [parameter] [parameter]                      EmitInt32(il' (int)dbType);// stack is now [parameters] [[parameters]] [parameter] [parameter] [db-type]                        il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("DbType").GetSetMethod()' null);// stack is now [parameters] [[parameters]] [parameter]                  }                    il.Emit(OpCodes.Dup);// stack is now [parameters] [[parameters]] [parameter] [parameter]                  EmitInt32(il' (int)ParameterDirection.Input);// stack is now [parameters] [[parameters]] [parameter] [parameter] [dir]                  il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("Direction").GetSetMethod()' null);// stack is now [parameters] [[parameters]] [parameter]                    il.Emit(OpCodes.Dup);// stack is now [parameters] [[parameters]] [parameter] [parameter]                  il.Emit(OpCodes.Ldloc_0); // stack is now [parameters] [[parameters]] [parameter] [parameter] [typed-param]                  il.Emit(OpCodes.Callvirt' prop.GetGetMethod()); // stack is [parameters] [[parameters]] [parameter] [parameter] [typed-value]                  bool checkForNull = true;                  if (prop.PropertyType.IsValueType)                  {                      il.Emit(OpCodes.Box' prop.PropertyType); // stack is [parameters] [[parameters]] [parameter] [parameter] [boxed-value]                      if (Nullable.GetUnderlyingType(prop.PropertyType) == null)                      {   // struct but not Nullable<T>; boxed value cannot be null                          checkForNull = false;                      }                  }                  if (checkForNull)                  {                      if (dbType == DbType.String && !haveInt32Arg1)                      {                          il.DeclareLocal(typeof(int));                          haveInt32Arg1 = true;                      }                      // relative stack: [boxed value]                      il.Emit(OpCodes.Dup);// relative stack: [boxed value] [boxed value]                      Label notNull = il.DefineLabel();                      Label? allDone = dbType == DbType.String ? il.DefineLabel() : (Label?)null;                      il.Emit(OpCodes.Brtrue_S' notNull);                      // relative stack [boxed value = null]                      il.Emit(OpCodes.Pop); // relative stack empty                      il.Emit(OpCodes.Ldsfld' typeof(DBNull).GetField("Value")); // relative stack [DBNull]                      if (dbType == DbType.String)                      {                          EmitInt32(il' 0);                          il.Emit(OpCodes.Stloc_1);                      }                      if (allDone != null) il.Emit(OpCodes.Br_S' allDone.Value);                      il.MarkLabel(notNull);                      if (prop.PropertyType == typeof(string))                      {                          il.Emit(OpCodes.Dup); // [string] [string]                          il.EmitCall(OpCodes.Callvirt' typeof(string).GetProperty("Length").GetGetMethod()' null); // [string] [length]                          EmitInt32(il' 4000); // [string] [length] [4000]                          il.Emit(OpCodes.Cgt); // [string] [0 or 1]                          Label isLong = il.DefineLabel()' lenDone = il.DefineLabel();                          il.Emit(OpCodes.Brtrue_S' isLong);                          EmitInt32(il' 4000); // [string] [4000]                          il.Emit(OpCodes.Br_S' lenDone);                          il.MarkLabel(isLong);                          EmitInt32(il' -1); // [string] [-1]                          il.MarkLabel(lenDone);                          il.Emit(OpCodes.Stloc_1); // [string]                       }                      if (prop.PropertyType.FullName == LinqBinary)                      {                          il.EmitCall(OpCodes.Callvirt' prop.PropertyType.GetMethod("ToArray"' BindingFlags.Public | BindingFlags.Instance)' null);                      }                      if (allDone != null) il.MarkLabel(allDone.Value);                      // relative stack [boxed value or DBNull]                  }                  il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("Value").GetSetMethod()' null);// stack is now [parameters] [[parameters]] [parameter]                    if (prop.PropertyType == typeof(string))                  {                      var endOfSize = il.DefineLabel();                      // don't set if 0                      il.Emit(OpCodes.Ldloc_1); // [parameters] [[parameters]] [parameter] [size]                      il.Emit(OpCodes.Brfalse_S' endOfSize); // [parameters] [[parameters]] [parameter]                        il.Emit(OpCodes.Dup);// stack is now [parameters] [[parameters]] [parameter] [parameter]                      il.Emit(OpCodes.Ldloc_1); // stack is now [parameters] [[parameters]] [parameter] [parameter] [size]                      il.EmitCall(OpCodes.Callvirt' typeof(IDbDataParameter).GetProperty("Size").GetSetMethod()' null); // stack is now [parameters] [[parameters]] [parameter]                        il.MarkLabel(endOfSize);                  }                  if (checkForDuplicates)                  {                      // stack is now [parameters] [parameter]                      il.Emit(OpCodes.Pop); // don't need parameter any more                  }                  else                  {                      // stack is now [parameters] [parameters] [parameter]                      // blindly add                      il.EmitCall(OpCodes.Callvirt' typeof(IList).GetMethod("Add")' null); // stack is now [parameters]                      il.Emit(OpCodes.Pop); // IList.Add returns the new index (int); we don't care                  }              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,CreateParamInfoGenerator,The following statement contains a magic number: foreach (var prop in props)              {                  if (filterParams)                  {                      if (identity.sql.IndexOf("@" + prop.Name' StringComparison.InvariantCultureIgnoreCase) < 0                          && identity.sql.IndexOf(":" + prop.Name' StringComparison.InvariantCultureIgnoreCase) < 0                          && identity.sql.IndexOf("?" + prop.Name' StringComparison.InvariantCultureIgnoreCase) < 0)                      { // can't see the parameter in the text (even in a comment' etc) - burn it with fire                          continue;                      }                  }                  if (typeof(ICustomQueryParameter).IsAssignableFrom(prop.PropertyType))                  {                      il.Emit(OpCodes.Ldloc_0); // stack is now [parameters] [typed-param]                      il.Emit(OpCodes.Callvirt' prop.GetGetMethod()); // stack is [parameters] [dbstring]                      il.Emit(OpCodes.Ldarg_0); // stack is now [parameters] [dbstring] [command]                      il.Emit(OpCodes.Ldstr' prop.Name); // stack is now [parameters] [dbstring] [command] [name]                      il.EmitCall(OpCodes.Callvirt' prop.PropertyType.GetMethod("AddParameter")' null); // stack is now [parameters]                      continue;                  }                  DbType dbType = LookupDbType(prop.PropertyType' prop.Name);                  if (dbType == DynamicParameters.EnumerableMultiParameter)                  {                      // this actually represents special handling for list types;                      il.Emit(OpCodes.Ldarg_0); // stack is now [parameters] [command]                      il.Emit(OpCodes.Ldstr' prop.Name); // stack is now [parameters] [command] [name]                      il.Emit(OpCodes.Ldloc_0); // stack is now [parameters] [command] [name] [typed-param]                      il.Emit(OpCodes.Callvirt' prop.GetGetMethod()); // stack is [parameters] [command] [name] [typed-value]                      if (prop.PropertyType.IsValueType)                      {                          il.Emit(OpCodes.Box' prop.PropertyType); // stack is [parameters] [command] [name] [boxed-value]                      }                      il.EmitCall(OpCodes.Call' typeof(SqlMapper).GetMethod("PackListParameters")' null); // stack is [parameters]                      continue;                  }                  il.Emit(OpCodes.Dup); // stack is now [parameters] [parameters]                    il.Emit(OpCodes.Ldarg_0); // stack is now [parameters] [parameters] [command]                    if (checkForDuplicates)                  {                      // need to be a little careful about adding; use a utility method                      il.Emit(OpCodes.Ldstr' prop.Name); // stack is now [parameters] [parameters] [command] [name]                      il.EmitCall(OpCodes.Call' typeof(SqlMapper).GetMethod("FindOrAddParameter")' null); // stack is [parameters] [parameter]                  }                  else                  {                      // no risk of duplicates; just blindly add                      il.EmitCall(OpCodes.Callvirt' typeof(IDbCommand).GetMethod("CreateParameter")' null);// stack is now [parameters] [parameters] [parameter]                        il.Emit(OpCodes.Dup);// stack is now [parameters] [parameters] [parameter] [parameter]                      il.Emit(OpCodes.Ldstr' prop.Name); // stack is now [parameters] [parameters] [parameter] [parameter] [name]                      il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("ParameterName").GetSetMethod()' null);// stack is now [parameters] [parameters] [parameter]                  }                  if (dbType != DbType.Time) // https://connect.microsoft.com/VisualStudio/feedback/details/381934/sqlparameter-dbtype-dbtype-time-sets-the-parameter-to-sqldbtype-datetime-instead-of-sqldbtype-time                  {                      il.Emit(OpCodes.Dup);// stack is now [parameters] [[parameters]] [parameter] [parameter]                      EmitInt32(il' (int)dbType);// stack is now [parameters] [[parameters]] [parameter] [parameter] [db-type]                        il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("DbType").GetSetMethod()' null);// stack is now [parameters] [[parameters]] [parameter]                  }                    il.Emit(OpCodes.Dup);// stack is now [parameters] [[parameters]] [parameter] [parameter]                  EmitInt32(il' (int)ParameterDirection.Input);// stack is now [parameters] [[parameters]] [parameter] [parameter] [dir]                  il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("Direction").GetSetMethod()' null);// stack is now [parameters] [[parameters]] [parameter]                    il.Emit(OpCodes.Dup);// stack is now [parameters] [[parameters]] [parameter] [parameter]                  il.Emit(OpCodes.Ldloc_0); // stack is now [parameters] [[parameters]] [parameter] [parameter] [typed-param]                  il.Emit(OpCodes.Callvirt' prop.GetGetMethod()); // stack is [parameters] [[parameters]] [parameter] [parameter] [typed-value]                  bool checkForNull = true;                  if (prop.PropertyType.IsValueType)                  {                      il.Emit(OpCodes.Box' prop.PropertyType); // stack is [parameters] [[parameters]] [parameter] [parameter] [boxed-value]                      if (Nullable.GetUnderlyingType(prop.PropertyType) == null)                      {   // struct but not Nullable<T>; boxed value cannot be null                          checkForNull = false;                      }                  }                  if (checkForNull)                  {                      if (dbType == DbType.String && !haveInt32Arg1)                      {                          il.DeclareLocal(typeof(int));                          haveInt32Arg1 = true;                      }                      // relative stack: [boxed value]                      il.Emit(OpCodes.Dup);// relative stack: [boxed value] [boxed value]                      Label notNull = il.DefineLabel();                      Label? allDone = dbType == DbType.String ? il.DefineLabel() : (Label?)null;                      il.Emit(OpCodes.Brtrue_S' notNull);                      // relative stack [boxed value = null]                      il.Emit(OpCodes.Pop); // relative stack empty                      il.Emit(OpCodes.Ldsfld' typeof(DBNull).GetField("Value")); // relative stack [DBNull]                      if (dbType == DbType.String)                      {                          EmitInt32(il' 0);                          il.Emit(OpCodes.Stloc_1);                      }                      if (allDone != null) il.Emit(OpCodes.Br_S' allDone.Value);                      il.MarkLabel(notNull);                      if (prop.PropertyType == typeof(string))                      {                          il.Emit(OpCodes.Dup); // [string] [string]                          il.EmitCall(OpCodes.Callvirt' typeof(string).GetProperty("Length").GetGetMethod()' null); // [string] [length]                          EmitInt32(il' 4000); // [string] [length] [4000]                          il.Emit(OpCodes.Cgt); // [string] [0 or 1]                          Label isLong = il.DefineLabel()' lenDone = il.DefineLabel();                          il.Emit(OpCodes.Brtrue_S' isLong);                          EmitInt32(il' 4000); // [string] [4000]                          il.Emit(OpCodes.Br_S' lenDone);                          il.MarkLabel(isLong);                          EmitInt32(il' -1); // [string] [-1]                          il.MarkLabel(lenDone);                          il.Emit(OpCodes.Stloc_1); // [string]                       }                      if (prop.PropertyType.FullName == LinqBinary)                      {                          il.EmitCall(OpCodes.Callvirt' prop.PropertyType.GetMethod("ToArray"' BindingFlags.Public | BindingFlags.Instance)' null);                      }                      if (allDone != null) il.MarkLabel(allDone.Value);                      // relative stack [boxed value or DBNull]                  }                  il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("Value").GetSetMethod()' null);// stack is now [parameters] [[parameters]] [parameter]                    if (prop.PropertyType == typeof(string))                  {                      var endOfSize = il.DefineLabel();                      // don't set if 0                      il.Emit(OpCodes.Ldloc_1); // [parameters] [[parameters]] [parameter] [size]                      il.Emit(OpCodes.Brfalse_S' endOfSize); // [parameters] [[parameters]] [parameter]                        il.Emit(OpCodes.Dup);// stack is now [parameters] [[parameters]] [parameter] [parameter]                      il.Emit(OpCodes.Ldloc_1); // stack is now [parameters] [[parameters]] [parameter] [parameter] [size]                      il.EmitCall(OpCodes.Callvirt' typeof(IDbDataParameter).GetProperty("Size").GetSetMethod()' null); // stack is now [parameters] [[parameters]] [parameter]                        il.MarkLabel(endOfSize);                  }                  if (checkForDuplicates)                  {                      // stack is now [parameters] [parameter]                      il.Emit(OpCodes.Pop); // don't need parameter any more                  }                  else                  {                      // stack is now [parameters] [parameters] [parameter]                      // blindly add                      il.EmitCall(OpCodes.Callvirt' typeof(IList).GetMethod("Add")' null); // stack is now [parameters]                      il.Emit(OpCodes.Pop); // IList.Add returns the new index (int); we don't care                  }              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,LoadLocal,The following statement contains a magic number: switch (index)              {                  case 0: il.Emit(OpCodes.Ldloc_0); break;                  case 1: il.Emit(OpCodes.Ldloc_1); break;                  case 2: il.Emit(OpCodes.Ldloc_2); break;                  case 3: il.Emit(OpCodes.Ldloc_3); break;                  default:                      if (index <= 255)                      {                          il.Emit(OpCodes.Ldloc_S' (byte)index);                      }                      else                      {                          il.Emit(OpCodes.Ldloc' (short)index);                      }                      break;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,LoadLocal,The following statement contains a magic number: switch (index)              {                  case 0: il.Emit(OpCodes.Ldloc_0); break;                  case 1: il.Emit(OpCodes.Ldloc_1); break;                  case 2: il.Emit(OpCodes.Ldloc_2); break;                  case 3: il.Emit(OpCodes.Ldloc_3); break;                  default:                      if (index <= 255)                      {                          il.Emit(OpCodes.Ldloc_S' (byte)index);                      }                      else                      {                          il.Emit(OpCodes.Ldloc' (short)index);                      }                      break;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,LoadLocal,The following statement contains a magic number: switch (index)              {                  case 0: il.Emit(OpCodes.Ldloc_0); break;                  case 1: il.Emit(OpCodes.Ldloc_1); break;                  case 2: il.Emit(OpCodes.Ldloc_2); break;                  case 3: il.Emit(OpCodes.Ldloc_3); break;                  default:                      if (index <= 255)                      {                          il.Emit(OpCodes.Ldloc_S' (byte)index);                      }                      else                      {                          il.Emit(OpCodes.Ldloc' (short)index);                      }                      break;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,StoreLocal,The following statement contains a magic number: switch (index)              {                  case 0: il.Emit(OpCodes.Stloc_0); break;                  case 1: il.Emit(OpCodes.Stloc_1); break;                  case 2: il.Emit(OpCodes.Stloc_2); break;                  case 3: il.Emit(OpCodes.Stloc_3); break;                  default:                      if (index <= 255)                      {                          il.Emit(OpCodes.Stloc_S' (byte)index);                      }                      else                      {                          il.Emit(OpCodes.Stloc' (short)index);                      }                      break;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,StoreLocal,The following statement contains a magic number: switch (index)              {                  case 0: il.Emit(OpCodes.Stloc_0); break;                  case 1: il.Emit(OpCodes.Stloc_1); break;                  case 2: il.Emit(OpCodes.Stloc_2); break;                  case 3: il.Emit(OpCodes.Stloc_3); break;                  default:                      if (index <= 255)                      {                          il.Emit(OpCodes.Stloc_S' (byte)index);                      }                      else                      {                          il.Emit(OpCodes.Stloc' (short)index);                      }                      break;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,StoreLocal,The following statement contains a magic number: switch (index)              {                  case 0: il.Emit(OpCodes.Stloc_0); break;                  case 1: il.Emit(OpCodes.Stloc_1); break;                  case 2: il.Emit(OpCodes.Stloc_2); break;                  case 3: il.Emit(OpCodes.Stloc_3); break;                  default:                      if (index <= 255)                      {                          il.Emit(OpCodes.Stloc_S' (byte)index);                      }                      else                      {                          il.Emit(OpCodes.Stloc' (short)index);                      }                      break;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,LoadLocalAddress,The following statement contains a magic number: if (index <= 255)              {                  il.Emit(OpCodes.Ldloca_S' (byte)index);              }              else              {                  il.Emit(OpCodes.Ldloca' (short)index);              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dapper,SqlMapper,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dapper,Identity,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: unchecked                  {                      hashCode = 17; // we *know* we are using this in a dictionary' so pre-compute this                      hashCode = hashCode * 23 + commandType.GetHashCode();                      hashCode = hashCode * 23 + gridIndex.GetHashCode();                      hashCode = hashCode * 23 + (sql == null ? 0 : sql.GetHashCode());                      hashCode = hashCode * 23 + (type == null ? 0 : type.GetHashCode());                      if (otherTypes != null)                      {                          foreach (var t in otherTypes)                          {                              hashCode = hashCode * 23 + (t == null ? 0 : t.GetHashCode());                          }                      }                      hashCode = hashCode * 23 + (connectionString == null ? 0 : SqlMapper.connectionStringComparer.GetHashCode(connectionString));                      hashCode = hashCode * 23 + (parametersType == null ? 0 : parametersType.GetHashCode());                  }
Magic Number,Dapper,Identity,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: unchecked                  {                      hashCode = 17; // we *know* we are using this in a dictionary' so pre-compute this                      hashCode = hashCode * 23 + commandType.GetHashCode();                      hashCode = hashCode * 23 + gridIndex.GetHashCode();                      hashCode = hashCode * 23 + (sql == null ? 0 : sql.GetHashCode());                      hashCode = hashCode * 23 + (type == null ? 0 : type.GetHashCode());                      if (otherTypes != null)                      {                          foreach (var t in otherTypes)                          {                              hashCode = hashCode * 23 + (t == null ? 0 : t.GetHashCode());                          }                      }                      hashCode = hashCode * 23 + (connectionString == null ? 0 : SqlMapper.connectionStringComparer.GetHashCode(connectionString));                      hashCode = hashCode * 23 + (parametersType == null ? 0 : parametersType.GetHashCode());                  }
Magic Number,Dapper,Identity,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: unchecked                  {                      hashCode = 17; // we *know* we are using this in a dictionary' so pre-compute this                      hashCode = hashCode * 23 + commandType.GetHashCode();                      hashCode = hashCode * 23 + gridIndex.GetHashCode();                      hashCode = hashCode * 23 + (sql == null ? 0 : sql.GetHashCode());                      hashCode = hashCode * 23 + (type == null ? 0 : type.GetHashCode());                      if (otherTypes != null)                      {                          foreach (var t in otherTypes)                          {                              hashCode = hashCode * 23 + (t == null ? 0 : t.GetHashCode());                          }                      }                      hashCode = hashCode * 23 + (connectionString == null ? 0 : SqlMapper.connectionStringComparer.GetHashCode(connectionString));                      hashCode = hashCode * 23 + (parametersType == null ? 0 : parametersType.GetHashCode());                  }
Magic Number,Dapper,Identity,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: unchecked                  {                      hashCode = 17; // we *know* we are using this in a dictionary' so pre-compute this                      hashCode = hashCode * 23 + commandType.GetHashCode();                      hashCode = hashCode * 23 + gridIndex.GetHashCode();                      hashCode = hashCode * 23 + (sql == null ? 0 : sql.GetHashCode());                      hashCode = hashCode * 23 + (type == null ? 0 : type.GetHashCode());                      if (otherTypes != null)                      {                          foreach (var t in otherTypes)                          {                              hashCode = hashCode * 23 + (t == null ? 0 : t.GetHashCode());                          }                      }                      hashCode = hashCode * 23 + (connectionString == null ? 0 : SqlMapper.connectionStringComparer.GetHashCode(connectionString));                      hashCode = hashCode * 23 + (parametersType == null ? 0 : parametersType.GetHashCode());                  }
Magic Number,Dapper,Identity,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: unchecked                  {                      hashCode = 17; // we *know* we are using this in a dictionary' so pre-compute this                      hashCode = hashCode * 23 + commandType.GetHashCode();                      hashCode = hashCode * 23 + gridIndex.GetHashCode();                      hashCode = hashCode * 23 + (sql == null ? 0 : sql.GetHashCode());                      hashCode = hashCode * 23 + (type == null ? 0 : type.GetHashCode());                      if (otherTypes != null)                      {                          foreach (var t in otherTypes)                          {                              hashCode = hashCode * 23 + (t == null ? 0 : t.GetHashCode());                          }                      }                      hashCode = hashCode * 23 + (connectionString == null ? 0 : SqlMapper.connectionStringComparer.GetHashCode(connectionString));                      hashCode = hashCode * 23 + (parametersType == null ? 0 : parametersType.GetHashCode());                  }
Magic Number,Dapper,Identity,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: unchecked                  {                      hashCode = 17; // we *know* we are using this in a dictionary' so pre-compute this                      hashCode = hashCode * 23 + commandType.GetHashCode();                      hashCode = hashCode * 23 + gridIndex.GetHashCode();                      hashCode = hashCode * 23 + (sql == null ? 0 : sql.GetHashCode());                      hashCode = hashCode * 23 + (type == null ? 0 : type.GetHashCode());                      if (otherTypes != null)                      {                          foreach (var t in otherTypes)                          {                              hashCode = hashCode * 23 + (t == null ? 0 : t.GetHashCode());                          }                      }                      hashCode = hashCode * 23 + (connectionString == null ? 0 : SqlMapper.connectionStringComparer.GetHashCode(connectionString));                      hashCode = hashCode * 23 + (parametersType == null ? 0 : parametersType.GetHashCode());                  }
Magic Number,Dapper,Identity,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: unchecked                  {                      hashCode = 17; // we *know* we are using this in a dictionary' so pre-compute this                      hashCode = hashCode * 23 + commandType.GetHashCode();                      hashCode = hashCode * 23 + gridIndex.GetHashCode();                      hashCode = hashCode * 23 + (sql == null ? 0 : sql.GetHashCode());                      hashCode = hashCode * 23 + (type == null ? 0 : type.GetHashCode());                      if (otherTypes != null)                      {                          foreach (var t in otherTypes)                          {                              hashCode = hashCode * 23 + (t == null ? 0 : t.GetHashCode());                          }                      }                      hashCode = hashCode * 23 + (connectionString == null ? 0 : SqlMapper.connectionStringComparer.GetHashCode(connectionString));                      hashCode = hashCode * 23 + (parametersType == null ? 0 : parametersType.GetHashCode());                  }
Magic Number,Dapper,Identity,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: unchecked                  {                      hashCode = 17; // we *know* we are using this in a dictionary' so pre-compute this                      hashCode = hashCode * 23 + commandType.GetHashCode();                      hashCode = hashCode * 23 + gridIndex.GetHashCode();                      hashCode = hashCode * 23 + (sql == null ? 0 : sql.GetHashCode());                      hashCode = hashCode * 23 + (type == null ? 0 : type.GetHashCode());                      if (otherTypes != null)                      {                          foreach (var t in otherTypes)                          {                              hashCode = hashCode * 23 + (t == null ? 0 : t.GetHashCode());                          }                      }                      hashCode = hashCode * 23 + (connectionString == null ? 0 : SqlMapper.connectionStringComparer.GetHashCode(connectionString));                      hashCode = hashCode * 23 + (parametersType == null ? 0 : parametersType.GetHashCode());                  }
Magic Number,Dapper,DynamicParameters,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,AddParameters,The following statement contains a magic number: foreach (var param in parameters.Values)              {                  var dbType = param.DbType;                  var val = param.Value;                  string name = Clean(param.Name);                    if (dbType == null && val != null) dbType = SqlMapper.LookupDbType(val.GetType()' name);                    if (dbType == DynamicParameters.EnumerableMultiParameter)                  {  #pragma warning disable 612' 618                      SqlMapper.PackListParameters(command' name' val);  #pragma warning restore 612' 618                  }                  else                  {                        bool add = !command.Parameters.Contains(name);                      IDbDataParameter p;                      if (add)                      {                          p = command.CreateParameter();                          p.ParameterName = name;                      }                      else                      {                          p = (IDbDataParameter)command.Parameters[name];                      }                        p.Value = val ?? DBNull.Value;                      p.Direction = param.ParameterDirection;                      var s = val as string;                      if (s != null)                      {                          if (s.Length <= 4000)                          {                              p.Size = 4000;                          }                      }                      if (param.Size != null)                      {                          p.Size = param.Size.Value;                      }                      if (dbType != null)                      {                          p.DbType = dbType.Value;                      }                      if (add)                      {                          command.Parameters.Add(p);                      }                      param.AttachedParam = p;                  }                }
Magic Number,Dapper,DynamicParameters,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,AddParameters,The following statement contains a magic number: foreach (var param in parameters.Values)              {                  var dbType = param.DbType;                  var val = param.Value;                  string name = Clean(param.Name);                    if (dbType == null && val != null) dbType = SqlMapper.LookupDbType(val.GetType()' name);                    if (dbType == DynamicParameters.EnumerableMultiParameter)                  {  #pragma warning disable 612' 618                      SqlMapper.PackListParameters(command' name' val);  #pragma warning restore 612' 618                  }                  else                  {                        bool add = !command.Parameters.Contains(name);                      IDbDataParameter p;                      if (add)                      {                          p = command.CreateParameter();                          p.ParameterName = name;                      }                      else                      {                          p = (IDbDataParameter)command.Parameters[name];                      }                        p.Value = val ?? DBNull.Value;                      p.Direction = param.ParameterDirection;                      var s = val as string;                      if (s != null)                      {                          if (s.Length <= 4000)                          {                              p.Size = 4000;                          }                      }                      if (param.Size != null)                      {                          p.Size = param.Size.Value;                      }                      if (dbType != null)                      {                          p.DbType = dbType.Value;                      }                      if (add)                      {                          command.Parameters.Add(p);                      }                      param.AttachedParam = p;                  }                }
Magic Number,Dapper,DbString,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,AddParameter,The following statement contains a magic number: if (Length == -1 && Value != null && Value.Length <= 4000)              {                  param.Size = 4000;              }              else              {                  param.Size = Length;              }
Magic Number,Dapper,DbString,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,AddParameter,The following statement contains a magic number: if (Length == -1 && Value != null && Value.Length <= 4000)              {                  param.Size = 4000;              }              else              {                  param.Size = Length;              }
Magic Number,Dapper,DefaultTypeMap,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,FindConstructor,The following statement contains a magic number: foreach (ConstructorInfo ctor in constructors.OrderBy(c => c.IsPublic ? 0 : (c.IsPrivate ? 2 : 1)).ThenBy(c => c.GetParameters().Length))              {                  ParameterInfo[] ctorParameters = ctor.GetParameters();                  if (ctorParameters.Length == 0)                      return ctor;                    if (ctorParameters.Length != types.Length)                      continue;                    int i = 0;                  for (; i < ctorParameters.Length; i++)                  {                      if (!String.Equals(ctorParameters[i].Name' names[i]' StringComparison.OrdinalIgnoreCase))                          break;                      if (types[i] == typeof(byte[]) && ctorParameters[i].ParameterType.FullName == SqlMapper.LinqBinary)                          continue;                      var unboxedType = Nullable.GetUnderlyingType(ctorParameters[i].ParameterType) ?? ctorParameters[i].ParameterType;                      if (unboxedType != types[i]                          && !(unboxedType.IsEnum && Enum.GetUnderlyingType(unboxedType) == types[i])                          && !(unboxedType == typeof(char) && types[i] == typeof(string)))                          break;                  }                    if (i == ctorParameters.Length)                      return ctor;              }
Magic Number,OSAE,Common,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Common.cs,CheckComputerObject,The following statement contains a magic number: if (OSAEObjectManager.GetObjectByName(Common.ComputerName) == null)              {                                                    OSAEObject obj = OSAEObjectManager.GetObjectByAddress(computerIp);                  if (obj == null)                  {                      Logging.GetLogger().AddToLog("Computer Object not found' creating it..."' true);                      OSAEObjectManager.ObjectAdd(Common.ComputerName'""' Common.ComputerName' "COMPUTER"' computerIp' ""' 30' true);                      OSAEObjectPropertyManager.ObjectPropertySet(Common.ComputerName' "Host Name"' Common.ComputerName' sourceName);                      Logging.GetLogger().AddToLog("Computer Object created called: " + Common.ComputerName' true);                  }                  else if (obj.Type == "COMPUTER")                  {                      Logging.GetLogger().AddToLog("Computer Object found under a different name' updating it..."' true);                      OSAEObjectManager.ObjectUpdate(obj.Name' Common.ComputerName' obj.Alias' obj.Description' "COMPUTER"' computerIp' obj.Container' obj.MinTrustLevel' obj.Enabled);                      OSAEObjectPropertyManager.ObjectPropertySet(Common.ComputerName' "Host Name"' Common.ComputerName' sourceName);                  }                  else                  {                      Logging.GetLogger().AddToLog("Computer Object found under a different Name and Object Type' updating it..."' true);                      OSAEObjectManager.ObjectAdd(Common.ComputerName' ""' Common.ComputerName' "COMPUTER"' computerIp' string.Empty' obj.MinTrustLevel' true);                      OSAEObjectPropertyManager.ObjectPropertySet(Common.ComputerName + "." + computerIp' "Host Name"' Common.ComputerName' sourceName);                  }              }              else              {                  Logging.GetLogger().AddToLog("Computer Object found' updating it..."' true);                  OSAEObject obj = OSAEObjectManager.GetObjectByName(Common.ComputerName);                  OSAEObjectManager.ObjectUpdate(obj.Name' obj.Name' obj.Alias' obj.Description' "COMPUTER"' computerIp' obj.Container' obj.MinTrustLevel' obj.Enabled);                  OSAEObjectPropertyManager.ObjectPropertySet(obj.Name' "Host Name"' Common.ComputerName' sourceName);              }
Magic Number,OSAE,Common,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Common.cs,GetJavascriptTimestamp,The following statement contains a magic number: return (long)input.Subtract(new DateTime(1970' 1' 1)).TotalMilliseconds;
Magic Number,OSAE,Logging,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Logging.cs,AddToLog,The following statement contains a magic number: try              {                  if (debug != "FALSE" || alwaysLog)                  {                      lock (logLocker)                      {                          string filePath = Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + @"\OSAE\Logs\" + logFile + ".log";                          System.IO.FileInfo file = new System.IO.FileInfo(filePath);                          file.Directory.Create();                          StreamWriter sw = File.AppendText(filePath);                            sw.WriteLine(System.DateTime.Now.ToString("MM/dd/yyyy hh:mm:ss.fff tt") + " - " + audit);                          sw.Close();                            if (pruneLogs == "TRUE")                          {                              if (file.Length > 1000000) file.Delete();                          }                      }                  }              }              catch (Exception ex)              {                  lock (logLocker)                  {                      string filePath = Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + "/Logs/" + logFile + ".log";                      System.IO.FileInfo file = new System.IO.FileInfo(filePath);                      file.Directory.Create();                      StreamWriter sw = File.AppendText(filePath);                      sw.WriteLine(System.DateTime.Now.ToString("MM/dd/yyyy hh:mm:ss.fff tt") + " - LOGGING ERROR: " + ex.Message + " - " + ex.InnerException);                      sw.Close();                      if (file.Length > 1000000) file.Delete();                  }              }
Magic Number,OSAE,Logging,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\Logging.cs,AddToLog,The following statement contains a magic number: try              {                  if (debug != "FALSE" || alwaysLog)                  {                      lock (logLocker)                      {                          string filePath = Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + @"\OSAE\Logs\" + logFile + ".log";                          System.IO.FileInfo file = new System.IO.FileInfo(filePath);                          file.Directory.Create();                          StreamWriter sw = File.AppendText(filePath);                            sw.WriteLine(System.DateTime.Now.ToString("MM/dd/yyyy hh:mm:ss.fff tt") + " - " + audit);                          sw.Close();                            if (pruneLogs == "TRUE")                          {                              if (file.Length > 1000000) file.Delete();                          }                      }                  }              }              catch (Exception ex)              {                  lock (logLocker)                  {                      string filePath = Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + "/Logs/" + logFile + ".log";                      System.IO.FileInfo file = new System.IO.FileInfo(filePath);                      file.Directory.Create();                      StreamWriter sw = File.AppendText(filePath);                      sw.WriteLine(System.DateTime.Now.ToString("MM/dd/yyyy hh:mm:ss.fff tt") + " - LOGGING ERROR: " + ex.Message + " - " + ex.InnerException);                      sw.Close();                      if (file.Length > 1000000) file.Delete();                  }              }
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Location = new System.Drawing.Point(0' 131);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Size = new System.Drawing.Size(422' 22);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Size = new System.Drawing.Size(422' 22);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabel1.Size = new System.Drawing.Size(129' 17);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabel1.Size = new System.Drawing.Size(129' 17);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonPause.Location = new System.Drawing.Point(95' 13);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonPause.Location = new System.Drawing.Point(95' 13);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonPause.Size = new System.Drawing.Size(75' 23);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonPause.Size = new System.Drawing.Size(75' 23);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonPause.TabIndex = 2;
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonStop.Location = new System.Drawing.Point(177' 13);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonStop.Location = new System.Drawing.Point(177' 13);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonStop.Size = new System.Drawing.Size(75' 23);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonStop.Size = new System.Drawing.Size(75' 23);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonStop.TabIndex = 3;
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonStart.Location = new System.Drawing.Point(13' 13);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonStart.Location = new System.Drawing.Point(13' 13);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonStart.Size = new System.Drawing.Size(75' 23);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonStart.Size = new System.Drawing.Size(75' 23);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.buttonStart.TabIndex = 6;
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(422' 153);
Magic Number,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(422' 153);
Magic Number,OSAE.General,OSAELog,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\OSAELog.cs,OSAELog,The following statement contains a magic number: if (!results.Success)              {                  Thread.Sleep(5000);                  results = Common.TestConnection();                  if (!results.Success)                  {                      Thread.Sleep(5000);                      results = Common.TestConnection();                      if (!results.Success)                      {                          Thread.Sleep(5000);                          results = Common.TestConnection();                          if (!results.Success) throw new Exception("DB Connection Test Failed!");                      }                  }              }
Magic Number,OSAE.General,OSAELog,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\OSAELog.cs,OSAELog,The following statement contains a magic number: if (!results.Success)              {                  Thread.Sleep(5000);                  results = Common.TestConnection();                  if (!results.Success)                  {                      Thread.Sleep(5000);                      results = Common.TestConnection();                      if (!results.Success)                      {                          Thread.Sleep(5000);                          results = Common.TestConnection();                          if (!results.Success) throw new Exception("DB Connection Test Failed!");                      }                  }              }
Magic Number,OSAE.General,OSAELog,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\OSAELog.cs,OSAELog,The following statement contains a magic number: if (!results.Success)              {                  Thread.Sleep(5000);                  results = Common.TestConnection();                  if (!results.Success)                  {                      Thread.Sleep(5000);                      results = Common.TestConnection();                      if (!results.Success)                      {                          Thread.Sleep(5000);                          results = Common.TestConnection();                          if (!results.Success) throw new Exception("DB Connection Test Failed!");                      }                  }              }
Magic Number,OSAE.General,OSAELog,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\OSAELog.cs,PruneLogs,The following statement contains a magic number: if(bPrune)              {                  if (GetTableSize("osae_log") > 10) Clear();                  if (GetTableSize("osae_event_log") > 10 || GetTableSize("osae_debug_log") > 10 || GetTableSize("osae_method_log") > 10) EventLogClear();              }
Magic Number,OSAE.General,OSAELog,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\OSAELog.cs,PruneLogs,The following statement contains a magic number: if(bPrune)              {                  if (GetTableSize("osae_log") > 10) Clear();                  if (GetTableSize("osae_event_log") > 10 || GetTableSize("osae_debug_log") > 10 || GetTableSize("osae_method_log") > 10) EventLogClear();              }
Magic Number,OSAE.General,OSAELog,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\OSAELog.cs,PruneLogs,The following statement contains a magic number: if(bPrune)              {                  if (GetTableSize("osae_log") > 10) Clear();                  if (GetTableSize("osae_event_log") > 10 || GetTableSize("osae_debug_log") > 10 || GetTableSize("osae_method_log") > 10) EventLogClear();              }
Magic Number,OSAE.General,OSAELog,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\General\OSAELog.cs,PruneLogs,The following statement contains a magic number: if(bPrune)              {                  if (GetTableSize("osae_log") > 10) Clear();                  if (GetTableSize("osae_event_log") > 10 || GetTableSize("osae_debug_log") > 10 || GetTableSize("osae_method_log") > 10) EventLogClear();              }
Missing Default,Dapper,DynamicParameters,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\Dapper\SqlMapper.cs,Clean,The following switch statement is missing a default case: switch (name[0])                  {                      case '@':                      case ':':                      case '?':                          return name.Substring(1);                  }
Missing Default,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,ProcessServiceState,The following switch statement is missing a default case: switch (_serviceState)        {          case ServiceState.Stopped:            break;            case ServiceState.StartPending:            string[] args = null;            _service.Start(args);            ProcessServiceState(ServiceState.Running);            break;            case ServiceState.Running:            break;            case ServiceState.PausePending:            _service.Pause();            ProcessServiceState(ServiceState.Paused);            break;            case ServiceState.Paused:            break;            case ServiceState.ContinuePending:            _service.Continue();            ProcessServiceState(ServiceState.Running);            break;            case ServiceState.StopPending:            _service.Stop();            ProcessServiceState(ServiceState.Stopped);            break;        }
Missing Default,OSAE,OSAEServiceController,C:\repos\opensourceautomation_Open-Source-Automation\OSAE.API\OSAEService\OSAEServiceController.cs,UpdateUserInterface,The following switch statement is missing a default case: switch (_serviceState)        {          case ServiceState.Stopped:            buttonStart.Enabled = true;            buttonPause.Enabled = false;            buttonStop.Enabled = false;            break;            case ServiceState.StartPending:            buttonStart.Enabled = false;            buttonPause.Enabled = false;            buttonStop.Enabled = false;            break;            case ServiceState.Running:            buttonStart.Enabled = false;            buttonPause.Enabled = true;            buttonStop.Enabled = true;            break;            case ServiceState.PausePending:            buttonStart.Enabled = false;            buttonPause.Enabled = false;            buttonStop.Enabled = false;            break;            case ServiceState.Paused:            buttonStart.Enabled = true;            buttonPause.Enabled = false;            buttonStop.Enabled = true;            break;            case ServiceState.ContinuePending:            buttonStart.Enabled = false;            buttonPause.Enabled = false;            buttonStop.Enabled = false;            break;            case ServiceState.StopPending:            buttonStart.Enabled = false;            buttonPause.Enabled = false;            buttonStop.Enabled = false;            break;        }
