Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MonkeyFist.Migrations,Configuration,C:\repos\robconery_monkey-fist\MonkeyFist\Migrations\Configuration.cs,Seed,The length of the statement  "Thank you for registering with us - just one last thing we need to do. Please [click right here]({LINK}) so we can confirm your email"; " is 135.
Long Statement,MonkeyFist.Services,Authenticator,C:\repos\robconery_monkey-fist\MonkeyFist\Services\Authenticator.cs,GetCurrentUser,The length of the statement  "        var validSession = session.Sessions.Include("User").FirstOrDefault(x => x.ID == sessionToken && x.EndsAt > DateTime.Now); " is 121.
Long Statement,MonkeyFist.Services,Registrator,C:\repos\robconery_monkey-fist\MonkeyFist\Services\Registrator.cs,ApplyForMembership,The length of the statement  "      var auth = new Authenticator().AuthenticateUser(new Credentials { Email = result.NewUser.Email' Password = CurrentApplication.Password }); " is 138.
Magic Number,MonkeyFist,Configuration,C:\repos\robconery_monkey-fist\MonkeyFist\Configuration.cs,Configuration,The following statement contains a magic number: this.MinPasswordLength = 4;
Magic Number,MonkeyFist,Configuration,C:\repos\robconery_monkey-fist\MonkeyFist\Configuration.cs,Configuration,The following statement contains a magic number: this.DefaultUserSessionDays = 30;
Magic Number,MonkeyFist.Migrations,initial,C:\repos\robconery_monkey-fist\MonkeyFist\Migrations\201308221850457_initial.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.Users"'                  c => new                      {                          ID = c.Guid(nullable: false)'                          AuthenticationToken = c.Guid(nullable: false)'                          Email = c.String(nullable: false' maxLength: 255)'                          HashedPassword = c.String(nullable: false' maxLength: 500)'                          Status = c.Int(nullable: false)'                          IP = c.String()'                          LastSignInAt = c.DateTime(nullable: false)'                          CurrentSignInAt = c.DateTime(nullable: false)'                          SignInCount = c.Int(nullable: false)'                          ReminderToken = c.Guid(nullable: false)'                          ReminderSentAt = c.DateTime()'                          CreatedAt = c.DateTime(nullable: false)'                      })                  .PrimaryKey(t => t.ID);
Magic Number,MonkeyFist.Migrations,initial,C:\repos\robconery_monkey-fist\MonkeyFist\Migrations\201308221850457_initial.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.Users"'                  c => new                      {                          ID = c.Guid(nullable: false)'                          AuthenticationToken = c.Guid(nullable: false)'                          Email = c.String(nullable: false' maxLength: 255)'                          HashedPassword = c.String(nullable: false' maxLength: 500)'                          Status = c.Int(nullable: false)'                          IP = c.String()'                          LastSignInAt = c.DateTime(nullable: false)'                          CurrentSignInAt = c.DateTime(nullable: false)'                          SignInCount = c.Int(nullable: false)'                          ReminderToken = c.Guid(nullable: false)'                          ReminderSentAt = c.DateTime()'                          CreatedAt = c.DateTime(nullable: false)'                      })                  .PrimaryKey(t => t.ID);
Magic Number,MonkeyFist.Migrations,initial,C:\repos\robconery_monkey-fist\MonkeyFist\Migrations\201308221850457_initial.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.UserActivityLogs"'                  c => new                      {                          ID = c.Int(nullable: false' identity: true)'                          Subject = c.String(nullable: false' maxLength: 255)'                          Entry = c.String(nullable: false)'                          CreatedAt = c.DateTime(nullable: false)'                          User_ID = c.Guid()'                      })                  .PrimaryKey(t => t.ID)                  .ForeignKey("dbo.Users"' t => t.User_ID'cascadeDelete:true)                  .Index(t => t.User_ID);
Magic Number,MonkeyFist.Migrations,initial,C:\repos\robconery_monkey-fist\MonkeyFist\Migrations\201308221850457_initial.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.UserMailerMessages"'                  c => new                      {                          ID = c.Int(nullable: false' identity: true)'                          Subject = c.String(nullable: false' maxLength: 255)'                          Body = c.String(nullable: false)'                          CreatedAt = c.DateTime(nullable: false)'                          Successful = c.Boolean(nullable: false)'                          ResultMessage = c.String()'                          Mailer_ID = c.Guid()'                          User_ID = c.Guid()'                      })                  .PrimaryKey(t => t.ID)                  .ForeignKey("dbo.UserMailerTemplates"' t => t.Mailer_ID)                  .ForeignKey("dbo.Users"' t => t.User_ID' cascadeDelete: true)                  .Index(t => t.Mailer_ID)                  .Index(t => t.User_ID);
Magic Number,MonkeyFist.Migrations,initial,C:\repos\robconery_monkey-fist\MonkeyFist\Migrations\201308221850457_initial.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.UserMailerTemplates"'                  c => new                      {                          ID = c.Guid(nullable: false)'                          Subject = c.String(nullable: false' maxLength: 255)'                          Markdown = c.String(nullable: false' maxLength: 1800)'                          CreatedAt = c.DateTime(nullable: false)'                          MailerType = c.Int(nullable: false)'                      })                  .PrimaryKey(t => t.ID);
Magic Number,MonkeyFist.Migrations,initial,C:\repos\robconery_monkey-fist\MonkeyFist\Migrations\201308221850457_initial.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.UserMailerTemplates"'                  c => new                      {                          ID = c.Guid(nullable: false)'                          Subject = c.String(nullable: false' maxLength: 255)'                          Markdown = c.String(nullable: false' maxLength: 1800)'                          CreatedAt = c.DateTime(nullable: false)'                          MailerType = c.Int(nullable: false)'                      })                  .PrimaryKey(t => t.ID);
Magic Number,MonkeyFist.Migrations,initial,C:\repos\robconery_monkey-fist\MonkeyFist\Migrations\201308221850457_initial.cs,Up,The following statement contains a magic number: CreateTable(                  "dbo.UserSessions"'                  c => new                      {                          ID = c.Guid(nullable: false)'                          IP = c.String(maxLength: 55)'                          StartedAt = c.DateTime(nullable: false)'                          EndsAt = c.DateTime(nullable: false)'                          User_ID = c.Guid()'                      })                  .PrimaryKey(t => t.ID)                  .ForeignKey("dbo.Users"' t => t.User_ID' cascadeDelete: true)                  .Index(t => t.User_ID);
Magic Number,MonkeyFist.Models,UserSession,C:\repos\robconery_monkey-fist\MonkeyFist\Models\UserSessions.cs,UserSession,The following statement contains a magic number: this.EndsAt = DateTime.Now.AddDays(30);
Magic Number,MonkeyFist.Services,Authenticator,C:\repos\robconery_monkey-fist\MonkeyFist\Services\Authenticator.cs,CreateSession,The following statement contains a magic number: session.EndsAt = CurrentCredentials.RememberMe ? DateTime.Now.AddDays(30) : DateTime.Now.AddHours(6);
Magic Number,MonkeyFist.Services,Authenticator,C:\repos\robconery_monkey-fist\MonkeyFist\Services\Authenticator.cs,CreateSession,The following statement contains a magic number: session.EndsAt = CurrentCredentials.RememberMe ? DateTime.Now.AddDays(30) : DateTime.Now.AddHours(6);
Magic Number,MonkeyFist.Services,Registrator,C:\repos\robconery_monkey-fist\MonkeyFist\Services\Registrator.cs,EmailIsInvalid,The following statement contains a magic number: return CurrentApplication.Email.Length <= 5;
Magic Number,MonkeyFist.Services,Registrator,C:\repos\robconery_monkey-fist\MonkeyFist\Services\Registrator.cs,HashPassword,The following statement contains a magic number: return BCryptHelper.HashPassword(CurrentApplication.Password' BCryptHelper.GenerateSalt(10));
Magic Number,MonkeyFist.Services,Reminders,C:\repos\robconery_monkey-fist\MonkeyFist\Services\Reminders.cs,ResetWindowIsOpen,The following statement contains a magic number: return user.ReminderSentAt > DateTime.Now.AddHours(-12);
Magic Number,MonkeyFist.Services,Reminders,C:\repos\robconery_monkey-fist\MonkeyFist\Services\Reminders.cs,PasswordResetIsValid,The following statement contains a magic number: return !String.IsNullOrWhiteSpace(newPassword) && newPassword.Length > 4;
Magic Number,MonkeyFist.Services,Reminders,C:\repos\robconery_monkey-fist\MonkeyFist\Services\Reminders.cs,ResetUserPassword,The following statement contains a magic number: if (user != null) {          if (PasswordResetIsValid(newPassword)) {            if (ResetWindowIsOpen(user)) {                var hashed = BCryptHelper.HashPassword(newPassword' BCryptHelper.GenerateSalt(10));              user.HashedPassword = hashed;              user.AddLogEntry("Login"' "Password was reset");              _session.SaveChanges();              result.Successful = true;              result.Message = Properties.Resources.PasswordResetSuccessful;              result.User = user;            } else {              result.Message = Properties.Resources.PasswordResetExpired;            }          } else {            result.Message = Properties.Resources.InvalidPassword;          }        } else {          result.Message = Properties.Resources.PasswordResetTokenInvalid;        }
