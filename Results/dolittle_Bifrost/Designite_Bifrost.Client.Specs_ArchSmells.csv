Architecture smell,Project,Namespace,Cause,Responsible Classes,Participating Classes
Cyclic Dependency,Bifrost.Client.Specs,Bifrost.Client.Specs.Commands.for_CommandForProxyInterceptor.given,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: Bifrost.Client.Specs.Commands.for_CommandForProxyInterceptor.given' Bifrost.Client.Specs.Commands.for_CommandForProxyInterceptor,Bifrost.Client.Specs.Commands.for_CommandForProxyInterceptor.given.a_known_method' Bifrost.Client.Specs.Commands.for_CommandForProxyInterceptor.when_getting_instance,Bifrost.Client.Specs.Commands.for_CommandForProxyInterceptor.given.a_known_method' Bifrost.Client.Specs.Commands.for_CommandForProxyInterceptor.when_getting_instance
Cyclic Dependency,Bifrost.Client.Specs,Bifrost.Client.Specs.Reflection.for_InvocationHandler.given,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: Bifrost.Client.Specs.Reflection.for_InvocationHandler.given' Bifrost.Client.Specs.Reflection.for_InvocationHandler,Bifrost.Client.Specs.Reflection.for_InvocationHandler.given.an_invocation' Bifrost.Client.Specs.Reflection.for_InvocationHandler.when_handling_getting_property_value,Bifrost.Client.Specs.Reflection.for_InvocationHandler.given.an_invocation' Bifrost.Client.Specs.Reflection.for_InvocationHandler.when_handling_getting_property_value
Unstable Dependency,Bifrost.Client.Specs,Bifrost.Client.Specs.Commands.for_CommandForProxyInterceptor.given,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): Bifrost.Client.Specs.Commands.for_CommandForProxyInterceptor,Bifrost.Client.Specs.Commands.for_CommandForProxyInterceptor.given.MyCommand,Bifrost.Client.Specs.Commands.for_CommandForProxyInterceptor.given.MyCommand
Ambiguous Interface,Bifrost.Client.Specs,Bifrost.Client.Specs.Interaction.for_CommandForMethod,The tool detected the smell in this component because the component provides only a single' general entry-point via the following class: ViewModel,Bifrost.Client.Specs.Interaction.for_CommandForMethod.ViewModel,Bifrost.Client.Specs.Interaction.for_CommandForMethod.ViewModel
Feature Concentration,Bifrost.Client.Specs,Bifrost.Client.Specs.Reflection.for_InvocationHandler,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ImplementationNeedingProxyInstance' Interface' when_asking_if_it_can_handle_for_supported_type' when_asking_if_it_can_handle_for_unsupported_type' when_handling_on_implementation_that_needs_proxy_instance' when_handling_on_implementation_that_needs_target_instance_but_has_wrong_type' when_handling_on_implementation_that_needs_target_instance' ImplementationNeedingTargetInstanceWithWrongType' ImplementationNeedingTargetInstance' Implementation]' [when_handling_getting_property_value]' [when_handling_a_method_invocation_with_two_arguments]. LCC (Lack of Component Cohesion) = 0.25,Bifrost.Client.Specs.Reflection.for_InvocationHandler.when_handling_a_method_invocation_with_two_arguments,Bifrost.Client.Specs.Reflection.for_InvocationHandler.ImplementationNeedingProxyInstance' Bifrost.Client.Specs.Reflection.for_InvocationHandler.ImplementationNeedingTargetInstanceWithWrongType' Bifrost.Client.Specs.Reflection.for_InvocationHandler.ImplementationNeedingTargetInstance' Bifrost.Client.Specs.Reflection.for_InvocationHandler.Implementation' Bifrost.Client.Specs.Reflection.for_InvocationHandler.Interface' Bifrost.Client.Specs.Reflection.for_InvocationHandler.when_asking_if_it_can_handle_for_supported_type' Bifrost.Client.Specs.Reflection.for_InvocationHandler.when_asking_if_it_can_handle_for_unsupported_type' Bifrost.Client.Specs.Reflection.for_InvocationHandler.when_handling_getting_property_value' Bifrost.Client.Specs.Reflection.for_InvocationHandler.when_handling_a_method_invocation_with_two_arguments' Bifrost.Client.Specs.Reflection.for_InvocationHandler.when_handling_on_implementation_that_needs_proxy_instance' Bifrost.Client.Specs.Reflection.for_InvocationHandler.when_handling_on_implementation_that_needs_target_instance_but_has_wrong_type' Bifrost.Client.Specs.Reflection.for_InvocationHandler.when_handling_on_implementation_that_needs_target_instance
Feature Concentration,Bifrost.Client.Specs,Bifrost.Client.Specs.Tasks.for_TaskContext,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [when_cancelling_a_task_before_cancelled_and_completed_callback_registered]' [when_cancelling_a_task_after_cancelled_and_completed_callback_registered]' [when_failing_a_task_before_failed_and_completed_callback_registered]' [when_succeeding_a_task_before_succeeded_and_completed_callback_registered]' [when_succeeding_a_task_after_succeeded_and_completed_callback_registered]' [when_failing_a_task_after_failed_and_completed_callback_registered]. LCC (Lack of Component Cohesion) = 1,Bifrost.Client.Specs.Tasks.for_TaskContext.when_cancelling_a_task_after_cancelled_and_completed_callback_registered' Bifrost.Client.Specs.Tasks.for_TaskContext.when_failing_a_task_before_failed_and_completed_callback_registered' Bifrost.Client.Specs.Tasks.for_TaskContext.when_succeeding_a_task_before_succeeded_and_completed_callback_registered' Bifrost.Client.Specs.Tasks.for_TaskContext.when_succeeding_a_task_after_succeeded_and_completed_callback_registered' Bifrost.Client.Specs.Tasks.for_TaskContext.when_failing_a_task_after_failed_and_completed_callback_registered,Bifrost.Client.Specs.Tasks.for_TaskContext.when_cancelling_a_task_before_cancelled_and_completed_callback_registered' Bifrost.Client.Specs.Tasks.for_TaskContext.when_cancelling_a_task_after_cancelled_and_completed_callback_registered' Bifrost.Client.Specs.Tasks.for_TaskContext.when_failing_a_task_before_failed_and_completed_callback_registered' Bifrost.Client.Specs.Tasks.for_TaskContext.when_succeeding_a_task_before_succeeded_and_completed_callback_registered' Bifrost.Client.Specs.Tasks.for_TaskContext.when_succeeding_a_task_after_succeeded_and_completed_callback_registered' Bifrost.Client.Specs.Tasks.for_TaskContext.when_failing_a_task_after_failed_and_completed_callback_registered
