Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonConfigSpec.cs,ClusterSingletonManagerSettings_must_have_default_config,The length of the parameter clusterSingletonManagerSettings is 31.
Long Statement,Akka.Cluster.Tools.Tests.ClusterClient,ClusterClientConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\ClusterClientConfigSpec.cs,ClusterClientSettings_must_throw_exception_on_wrong_buffer,The length of the statement  "            var sys = ActorSystem.Create("test"' ConfigurationFactory.ParseString("akka.cluster.client.buffer-size = " + bufferSize)); " is 122.
Long Statement,Akka.Cluster.Tools.Tests.ClusterClient,ClusterClientConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\ClusterClientConfigSpec.cs,ClusterClientSettings_must_throw_exception_on_empty_initial_contacts,The length of the statement  "            var exception = Assert.Throws<ArgumentException>(() => clusterClientSettings.WithInitialContacts(ImmutableHashSet<ActorPath>.Empty)); " is 133.
Long Statement,Akka.Cluster.Tools.Tests.ClusterClient,ClusterClientConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\ClusterClientConfigSpec.cs,ClusterClientSettings_must_copy_initial_contacts_via_fluent_interface,The length of the statement  "            var clusterClientSettings = ClusterClientSettings.Create(Sys).WithInitialContacts(initialContacts).WithBufferSize(2000); " is 120.
Long Statement,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMediatorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMediatorSpec.cs,GetConfig,The length of the statement  "            return ConfigurationFactory.ParseString("akka.actor.provider = \"Akka.Cluster.ClusterActorRefProvider' Akka.Cluster\""); " is 120.
Long Statement,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonLeavingSpeedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonLeavingSpeedSpec.cs,ClusterSingleton_that_is_leaving_must_quickly_hand_over_to_next_oldest,The length of the statement  "                Log.Info($"Singleton {i} stopped in {(int)stoppedDuration.TotalMilliseconds} ms' started in {(int)startedDuration.Milliseconds} ms' diff ${(int)(startedDuration - stoppedDuration).TotalMilliseconds} ms"); " is 204.
Long Statement,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonLeavingSpeedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonLeavingSpeedSpec.cs,ClusterSingleton_that_is_leaving_must_quickly_hand_over_to_next_oldest,The length of the statement  "                Log.Info($"Singleton {i} stopped in {(int)durations[i].Item1.TotalMilliseconds} ms' started in {(int)durations[i].Item2.Milliseconds} ms' diff ${(int)(durations[i].Item2 - durations[i].Item1).TotalMilliseconds} ms"); " is 216.
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,ClusterClientConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\ClusterClientConfigSpec.cs,ClusterClientSettings_must_have_default_config,The following statement contains a magic number: clusterClientSettings.EstablishingGetContactsInterval.Should().Be(3.Seconds());
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,ClusterClientConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\ClusterClientConfigSpec.cs,ClusterClientSettings_must_have_default_config,The following statement contains a magic number: clusterClientSettings.RefreshContactsInterval.Should().Be(60.Seconds());
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,ClusterClientConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\ClusterClientConfigSpec.cs,ClusterClientSettings_must_have_default_config,The following statement contains a magic number: clusterClientSettings.HeartbeatInterval.Should().Be(2.Seconds());
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,ClusterClientConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\ClusterClientConfigSpec.cs,ClusterClientSettings_must_have_default_config,The following statement contains a magic number: clusterClientSettings.AcceptableHeartbeatPause.Should().Be(13.Seconds());
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,ClusterClientConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\ClusterClientConfigSpec.cs,ClusterClientSettings_must_have_default_config,The following statement contains a magic number: clusterClientSettings.BufferSize.Should().Be(1000);
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,ClusterClientConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\ClusterClientConfigSpec.cs,ClusterClientSettings_must_copy_initial_contacts_via_fluent_interface,The following statement contains a magic number: var clusterClientSettings = ClusterClientSettings.Create(Sys).WithInitialContacts(initialContacts).WithBufferSize(2000);
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,ClusterClientConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\ClusterClientConfigSpec.cs,ClusterReceptionistSettings_must_have_default_config,The following statement contains a magic number: clusterReceptionistSettings.NumberOfContacts.Should().Be(3);
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,ClusterClientConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\ClusterClientConfigSpec.cs,ClusterReceptionistSettings_must_have_default_config,The following statement contains a magic number: clusterReceptionistSettings.ResponseTunnelReceiveTimeout.Should().Be(30.Seconds());
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,ClusterClientConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\ClusterClientConfigSpec.cs,ClusterReceptionistSettings_must_have_default_config,The following statement contains a magic number: clusterReceptionistSettings.HeartbeatInterval.Should().Be(2.Seconds());
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,ClusterClientConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\ClusterClientConfigSpec.cs,ClusterReceptionistSettings_must_have_default_config,The following statement contains a magic number: clusterReceptionistSettings.AcceptableHeartbeatPause.Should().Be(13.Seconds());
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,ClusterClientConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\ClusterClientConfigSpec.cs,ClusterReceptionistSettings_must_have_default_config,The following statement contains a magic number: clusterReceptionistSettings.FailureDetectionInterval.Should().Be(2.Seconds());
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,RingOrderingTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\RingOrderingTests.cs,AddTest,The following statement contains a magic number: set = set.Add(MakeAddress(2));
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,RingOrderingTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\RingOrderingTests.cs,AddTest,The following statement contains a magic number: set = set.Add(MakeAddress(5));
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,RingOrderingTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\RingOrderingTests.cs,AddTest,The following statement contains a magic number: set.Should().Contain(MakeAddress(2));
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,RingOrderingTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\RingOrderingTests.cs,AddTest,The following statement contains a magic number: set.Should().Contain(MakeAddress(5));
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,RingOrderingTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\RingOrderingTests.cs,RemoveTest,The following statement contains a magic number: set = set.Add(MakeAddress(1))                  .Add(MakeAddress(2))                  .Add(MakeAddress(5));
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,RingOrderingTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\RingOrderingTests.cs,RemoveTest,The following statement contains a magic number: set = set.Add(MakeAddress(1))                  .Add(MakeAddress(2))                  .Add(MakeAddress(5));
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,RingOrderingTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\RingOrderingTests.cs,RemoveTest,The following statement contains a magic number: set = set.Remove(MakeAddress(2));
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,RingOrderingTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\RingOrderingTests.cs,RemoveTest,The following statement contains a magic number: set.Should().Contain(MakeAddress(5));
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,RingOrderingTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\RingOrderingTests.cs,RemoveTest,The following statement contains a magic number: set.Should().NotContain(MakeAddress(2));
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,RingOrderingTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\RingOrderingTests.cs,RemoveTest,The following statement contains a magic number: set.ToList().Should().Contain(MakeAddress(5));
Magic Number,Akka.Cluster.Tools.Tests.ClusterClient,RingOrderingTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\ClusterClient\RingOrderingTests.cs,RemoveTest,The following statement contains a magic number: set.ToList().Should().NotContain(MakeAddress(2));
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubConfigSpec.cs,DistributedPubSubSettings_must_have_default_config,The following statement contains a magic number: distributedPubSubSettings.RemovedTimeToLive.TotalSeconds.ShouldBe(120);
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubConfigSpec.cs,DistributedPubSubSettings_must_have_default_config,The following statement contains a magic number: distributedPubSubSettings.MaxDeltaElements.ShouldBe(3000);
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Status,The following statement contains a magic number: var address1 = new Address("akka.tcp"' "system"' "some.host.org"' 4711);
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Status,The following statement contains a magic number: var address2 = new Address("akka.tcp"' "system"' "other.host.org"' 4711);
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Status,The following statement contains a magic number: var address3 = new Address("akka.tcp"' "system"' "some.host.org"' 4712);
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Status,The following statement contains a magic number: var message = new Tools.PublishSubscribe.Internal.Status(new Dictionary<Address' long>              {                  {address1' 3}'                  {address2' 17}'                  {address3' 5}              }' true);
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Status,The following statement contains a magic number: var message = new Tools.PublishSubscribe.Internal.Status(new Dictionary<Address' long>              {                  {address1' 3}'                  {address2' 17}'                  {address3' 5}              }' true);
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Status,The following statement contains a magic number: var message = new Tools.PublishSubscribe.Internal.Status(new Dictionary<Address' long>              {                  {address1' 3}'                  {address2' 17}'                  {address3' 5}              }' true);
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Delta,The following statement contains a magic number: var address1 = new Address("akka.tcp"' "system"' "some.host.org"' 4711);
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Delta,The following statement contains a magic number: var address2 = new Address("akka.tcp"' "system"' "other.host.org"' 4711);
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Delta,The following statement contains a magic number: var address3 = new Address("akka.tcp"' "system"' "some.host.org"' 4712);
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Delta,The following statement contains a magic number: var message = new Delta(new List<Bucket>              {                  new Bucket(address1' 3' new Dictionary<string' ValueHolder>                  {                      {"/user/u1"' new ValueHolder(2' u1)}'                      {"/user/u2"' new ValueHolder(3' u2)}'                  }.ToImmutableDictionary())'                  new Bucket(address2' 17' new Dictionary<string' ValueHolder>                  {                      {"/user/u3"' new ValueHolder(17' u3)}                  }.ToImmutableDictionary())'                  new Bucket(address3' 5' new Dictionary<string' ValueHolder>                  {                      {"/user/u4"' new ValueHolder(4' u4)}'                      {"/user/u5"' new ValueHolder(5' null)}'                  }.ToImmutableDictionary())              }.ToArray());
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Delta,The following statement contains a magic number: var message = new Delta(new List<Bucket>              {                  new Bucket(address1' 3' new Dictionary<string' ValueHolder>                  {                      {"/user/u1"' new ValueHolder(2' u1)}'                      {"/user/u2"' new ValueHolder(3' u2)}'                  }.ToImmutableDictionary())'                  new Bucket(address2' 17' new Dictionary<string' ValueHolder>                  {                      {"/user/u3"' new ValueHolder(17' u3)}                  }.ToImmutableDictionary())'                  new Bucket(address3' 5' new Dictionary<string' ValueHolder>                  {                      {"/user/u4"' new ValueHolder(4' u4)}'                      {"/user/u5"' new ValueHolder(5' null)}'                  }.ToImmutableDictionary())              }.ToArray());
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Delta,The following statement contains a magic number: var message = new Delta(new List<Bucket>              {                  new Bucket(address1' 3' new Dictionary<string' ValueHolder>                  {                      {"/user/u1"' new ValueHolder(2' u1)}'                      {"/user/u2"' new ValueHolder(3' u2)}'                  }.ToImmutableDictionary())'                  new Bucket(address2' 17' new Dictionary<string' ValueHolder>                  {                      {"/user/u3"' new ValueHolder(17' u3)}                  }.ToImmutableDictionary())'                  new Bucket(address3' 5' new Dictionary<string' ValueHolder>                  {                      {"/user/u4"' new ValueHolder(4' u4)}'                      {"/user/u5"' new ValueHolder(5' null)}'                  }.ToImmutableDictionary())              }.ToArray());
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Delta,The following statement contains a magic number: var message = new Delta(new List<Bucket>              {                  new Bucket(address1' 3' new Dictionary<string' ValueHolder>                  {                      {"/user/u1"' new ValueHolder(2' u1)}'                      {"/user/u2"' new ValueHolder(3' u2)}'                  }.ToImmutableDictionary())'                  new Bucket(address2' 17' new Dictionary<string' ValueHolder>                  {                      {"/user/u3"' new ValueHolder(17' u3)}                  }.ToImmutableDictionary())'                  new Bucket(address3' 5' new Dictionary<string' ValueHolder>                  {                      {"/user/u4"' new ValueHolder(4' u4)}'                      {"/user/u5"' new ValueHolder(5' null)}'                  }.ToImmutableDictionary())              }.ToArray());
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Delta,The following statement contains a magic number: var message = new Delta(new List<Bucket>              {                  new Bucket(address1' 3' new Dictionary<string' ValueHolder>                  {                      {"/user/u1"' new ValueHolder(2' u1)}'                      {"/user/u2"' new ValueHolder(3' u2)}'                  }.ToImmutableDictionary())'                  new Bucket(address2' 17' new Dictionary<string' ValueHolder>                  {                      {"/user/u3"' new ValueHolder(17' u3)}                  }.ToImmutableDictionary())'                  new Bucket(address3' 5' new Dictionary<string' ValueHolder>                  {                      {"/user/u4"' new ValueHolder(4' u4)}'                      {"/user/u5"' new ValueHolder(5' null)}'                  }.ToImmutableDictionary())              }.ToArray());
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Delta,The following statement contains a magic number: var message = new Delta(new List<Bucket>              {                  new Bucket(address1' 3' new Dictionary<string' ValueHolder>                  {                      {"/user/u1"' new ValueHolder(2' u1)}'                      {"/user/u2"' new ValueHolder(3' u2)}'                  }.ToImmutableDictionary())'                  new Bucket(address2' 17' new Dictionary<string' ValueHolder>                  {                      {"/user/u3"' new ValueHolder(17' u3)}                  }.ToImmutableDictionary())'                  new Bucket(address3' 5' new Dictionary<string' ValueHolder>                  {                      {"/user/u4"' new ValueHolder(4' u4)}'                      {"/user/u5"' new ValueHolder(5' null)}'                  }.ToImmutableDictionary())              }.ToArray());
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Delta,The following statement contains a magic number: var message = new Delta(new List<Bucket>              {                  new Bucket(address1' 3' new Dictionary<string' ValueHolder>                  {                      {"/user/u1"' new ValueHolder(2' u1)}'                      {"/user/u2"' new ValueHolder(3' u2)}'                  }.ToImmutableDictionary())'                  new Bucket(address2' 17' new Dictionary<string' ValueHolder>                  {                      {"/user/u3"' new ValueHolder(17' u3)}                  }.ToImmutableDictionary())'                  new Bucket(address3' 5' new Dictionary<string' ValueHolder>                  {                      {"/user/u4"' new ValueHolder(4' u4)}'                      {"/user/u5"' new ValueHolder(5' null)}'                  }.ToImmutableDictionary())              }.ToArray());
Magic Number,Akka.Cluster.Tools.Tests.PublishSubscribe,DistributedPubSubMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\PublishSubscribe\DistributedPubSubMessageSerializerSpec.cs,Can_serialize_Delta,The following statement contains a magic number: var message = new Delta(new List<Bucket>              {                  new Bucket(address1' 3' new Dictionary<string' ValueHolder>                  {                      {"/user/u1"' new ValueHolder(2' u1)}'                      {"/user/u2"' new ValueHolder(3' u2)}'                  }.ToImmutableDictionary())'                  new Bucket(address2' 17' new Dictionary<string' ValueHolder>                  {                      {"/user/u3"' new ValueHolder(17' u3)}                  }.ToImmutableDictionary())'                  new Bucket(address3' 5' new Dictionary<string' ValueHolder>                  {                      {"/user/u4"' new ValueHolder(4' u4)}'                      {"/user/u5"' new ValueHolder(5' null)}'                  }.ToImmutableDictionary())              }.ToArray());
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonConfigSpec.cs,ClusterSingletonManagerSettings_must_have_default_config,The following statement contains a magic number: config.GetInt("min-number-of-hand-over-retries").ShouldBe(15);
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonConfigSpec.cs,ClusterSingletonProxySettings_must_have_default_config,The following statement contains a magic number: clusterSingletonProxySettings.BufferSize.ShouldBe(1000);
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonLeavingSpeedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonLeavingSpeedSpec.cs,ClusterSingletonLeavingSpeedSpec,The following statement contains a magic number: _systems = Enumerable.Range(1' 3).Select(n =>                  ActorSystem.Create(Sys.Name' ConfigurationFactory.ParseString($"akka.cluster.roles=[role-{n % 3}]").WithFallback(Sys.Settings.Config))).ToArray();
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonLeavingSpeedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonLeavingSpeedSpec.cs,ClusterSingletonLeavingSpeedSpec,The following statement contains a magic number: _systems = Enumerable.Range(1' 3).Select(n =>                  ActorSystem.Create(Sys.Name' ConfigurationFactory.ParseString($"akka.cluster.roles=[role-{n % 3}]").WithFallback(Sys.Settings.Config))).ToArray();
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonLeavingSpeedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonLeavingSpeedSpec.cs,Join,The following statement contains a magic number: Within(TimeSpan.FromSeconds(15)' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(from).State.Members.Select(x => x.UniqueAddress).Should().Contain(Cluster.Get(from).SelfUniqueAddress);                      Cluster.Get(from)                          .State.Members.Select(x => x.Status)                          .ToImmutableHashSet()                          .Should()                          .Equal(ImmutableHashSet<MemberStatus>.Empty.Add(MemberStatus.Up));                  });              });
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonLeavingSpeedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonLeavingSpeedSpec.cs,ClusterSingleton_that_is_leaving_must_quickly_hand_over_to_next_oldest,The following statement contains a magic number: _probes[i].ExpectMsg("stopped"' TimeSpan.FromSeconds(10));
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonLeavingSpeedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonLeavingSpeedSpec.cs,ClusterSingleton_that_is_leaving_must_quickly_hand_over_to_next_oldest,The following statement contains a magic number: _probes[i + 1].ExpectMsg("started"' TimeSpan.FromSeconds(30));
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonLeavingSpeedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonLeavingSpeedSpec.cs,ClusterSingleton_that_is_leaving_must_quickly_hand_over_to_next_oldest,The following statement contains a magic number: Within(TimeSpan.FromSeconds(15)' () =>                  {                      AwaitAssert(() =>                      {                          Cluster.Get(_systems[i]).IsTerminated.Should().BeTrue();                          Cluster.Get(Sys).State.Members.Select(m => m.Address).Should().NotContain(leaveAddress);                            foreach (var sys in _systems)                          {                              if (!Cluster.Get(sys).IsTerminated)                                  Cluster.Get(sys).State.Members.Select(m => m.Address).Should().NotContain(leaveAddress);                          }                      });                  });
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonProxySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonProxySpec.cs,ClusterSingletonProxy_must_correctly_identify_the_singleton,The following statement contains a magic number: var testSystems =                  Enumerable.Range(0' 4).Select(x => new ActorSys(joinTo: seed.Cluster.SelfAddress))                  .Concat(new[] {seed})                  .ToList();
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ActorSys,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonProxySpec.cs,ActorSys,The following statement contains a magic number: Cluster.RegisterOnMemberUp(() =>                  {                      Sys.ActorOf(ClusterSingletonManager.Props(Props.Create(() => new Singleton())' PoisonPill.Instance'                          ClusterSingletonManagerSettings.Create(Sys)                              .WithRemovalMargin(TimeSpan.FromSeconds(5)))' "singletonmanager");                  });
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ActorSys,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonProxySpec.cs,TestProxy,The following statement contains a magic number: probe.ExpectMsg("Got " + msg' TimeSpan.FromSeconds(25));
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonRestart2Spec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonRestart2Spec.cs,Join,The following statement contains a magic number: Within(TimeSpan.FromSeconds(45)' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(from).Join(Cluster.Get(to).SelfAddress);                      Cluster.Get(from).State.Members.Select(x => x.UniqueAddress).Should().Contain(Cluster.Get(from).SelfUniqueAddress);                      Cluster.Get(from)                          .State.Members.Select(x => x.Status)                          .ToImmutableHashSet()                          .Should()                          .Equal(ImmutableHashSet<MemberStatus>.Empty.Add(MemberStatus.Up));                  });              });
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonRestart2Spec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonRestart2Spec.cs,Restarting_cluster_node_during_hand_over_must_restart_singletons_in_restarted_node,The following statement contains a magic number: Within(TimeSpan.FromSeconds(5)' () =>              {                  AwaitAssert(() =>                  {                      var probe = CreateTestProbe(_sys3);                      proxy3.Tell("hello"' probe.Ref);                      probe.ExpectMsg<UniqueAddress>(TimeSpan.FromSeconds(1))                          .Should()                          .Be(Cluster.Get(_sys1).SelfUniqueAddress);                  });              });
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonRestart2Spec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonRestart2Spec.cs,Restarting_cluster_node_during_hand_over_must_restart_singletons_in_restarted_node,The following statement contains a magic number: Task.Delay(TimeSpan.FromSeconds(5)).Wait();
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonRestart2Spec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonRestart2Spec.cs,Restarting_cluster_node_during_hand_over_must_restart_singletons_in_restarted_node,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                  AwaitAssert(() =>                  {                      var probe = CreateTestProbe(_sys3);                      proxy3.Tell("hello2"' probe.Ref);                        // note that sys3 doesn't have the required singleton role' so singleton instance should be                      // on the restarted node                      probe.ExpectMsg<UniqueAddress>(TimeSpan.FromSeconds(1))                          .Should()                          .Be(Cluster.Get(_sys4).SelfUniqueAddress);                  });              });
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonRestartSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonRestartSpec.cs,Join,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(from).Join(Cluster.Get(to).SelfAddress);                      Cluster.Get(from).State.Members.Select(x => x.UniqueAddress).Should().Contain(Cluster.Get(from).SelfUniqueAddress);                      Cluster.Get(from)                          .State.Members.Select(x => x.Status)                          .ToImmutableHashSet()                          .Should()                          .Equal(ImmutableHashSet<MemberStatus>.Empty.Add(MemberStatus.Up));                  });              });
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonRestartSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonRestartSpec.cs,Restarting_cluster_node_with_same_hostname_and_port_must_handover_to_next_oldest,The following statement contains a magic number: Within(TimeSpan.FromSeconds(5)' () =>              {                  AwaitAssert(() =>                  {                      var probe = CreateTestProbe(_sys2);                      proxy2.Tell("hello"' probe.Ref);                      probe.ExpectMsg("hello"' TimeSpan.FromSeconds(1));                  });              });
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonRestartSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonRestartSpec.cs,Restarting_cluster_node_with_same_hostname_and_port_must_handover_to_next_oldest,The following statement contains a magic number: Within(TimeSpan.FromSeconds(5)' () =>              {                  AwaitAssert(() =>                  {                      var probe = CreateTestProbe(_sys2);                      proxy2.Tell("hello2"' probe.Ref);                      probe.ExpectMsg("hello2"' TimeSpan.FromSeconds(1));                  });              });
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonRestartSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonRestartSpec.cs,Restarting_cluster_node_with_same_hostname_and_port_must_handover_to_next_oldest,The following statement contains a magic number: Within(TimeSpan.FromSeconds(15)' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(_sys3)                          .State.Members.Select(x => x.UniqueAddress)                          .Should()                          .Equal(Cluster.Get(_sys3).SelfUniqueAddress);                  });              });
Magic Number,Akka.Cluster.Tools.Tests.Singleton,ClusterSingletonRestartSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\contrib\cluster\Akka.Cluster.Tools.Tests\Singleton\ClusterSingletonRestartSpec.cs,Restarting_cluster_node_with_same_hostname_and_port_must_handover_to_next_oldest,The following statement contains a magic number: Within(TimeSpan.FromSeconds(5)' () =>              {                  AwaitAssert(() =>                  {                      var probe = CreateTestProbe(_sys3);                      proxy3.Tell("hello3"' probe.Ref);                      probe.ExpectMsg("hello3"' TimeSpan.FromSeconds(1));                  });              });
