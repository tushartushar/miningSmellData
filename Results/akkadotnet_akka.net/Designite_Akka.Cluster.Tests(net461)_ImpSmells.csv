Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,Cyclomatic complexity of the method is 13
Long Parameter List,Akka.Cluster.Tests,TestMember,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\TestMember.cs,Create,The method has 5 parameters. Parameters: address' status' roles' uid' upNumber
Long Statement,Akka.Cluster.Tests,ActorRefProvidersConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ActorRefProvidersConfigSpec.cs,ConfigureAndVerify,The length of the statement  "                .WithFallback(ConfigurationFactory.ParseString("akka.remote.dot-netty.tcp.port = 0")); // use a random port to avoid issues with async and parallelization " is 154.
Long Statement,Akka.Cluster.Tests,ClusterDeployerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_pool,The length of the statement  "            deployment.RouterConfig.AsInstanceOf<ClusterRouterPool>().Local.AsInstanceOf<RoundRobinPool>().NrOfInstances.ShouldBe(20); " is 122.
Long Statement,Akka.Cluster.Tests,ClusterDeployerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_pool,The length of the statement  "            deployment.RouterConfig.AsInstanceOf<ClusterRouterPool>().Settings.AsInstanceOf<ClusterRouterPoolSettings>().MaxInstancesPerNode.ShouldBe(3); " is 141.
Long Statement,Akka.Cluster.Tests,ClusterDeployerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_group,The length of the statement  "            deployment.RouterConfig.AsInstanceOf<ClusterRouterGroup>().Local.AsInstanceOf<RoundRobinGroup>().GetPaths(Sys).ShouldBe(new[]{ "/user/myservice" }); " is 148.
Long Statement,Akka.Cluster.Tests,ClusterDeployerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_group,The length of the statement  "            deployment.RouterConfig.AsInstanceOf<ClusterRouterGroup>().Settings.AsInstanceOf<ClusterRouterGroupSettings>().RouteesPaths.ShouldBe(new[] { "/user/myservice" }); " is 162.
Long Statement,Akka.Cluster.Tests,ClusterDeployerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,BugFix2266RemoteDeployer_must_be_able_to_parse_broadcast_group_cluster_router_with_default_nr_of_routees_routees,The length of the statement  "            deployment.RouterConfig.AsInstanceOf<ClusterRouterGroup>().Local.AsInstanceOf<BroadcastGroup>().GetPaths(Sys).ShouldBe(new[] { "/user/myservice" }); " is 148.
Long Statement,Akka.Cluster.Tests,ClusterDeployerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,BugFix2266RemoteDeployer_must_be_able_to_parse_broadcast_group_cluster_router_with_default_nr_of_routees_routees,The length of the statement  "            deployment.RouterConfig.AsInstanceOf<ClusterRouterGroup>().Settings.AsInstanceOf<ClusterRouterGroupSettings>().RouteesPaths.ShouldBe(new[] { "/user/myservice" }); " is 162.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_publish_role_leader_changed,The length of the statement  "            _publisher.Tell(new InternalClusterAction.Subscribe(subscriber.Ref' ClusterEvent.SubscriptionInitialStateMode.InitialStateAsSnapshot' ImmutableHashSet.Create(typeof(ClusterEvent.RoleLeaderChanged)))); " is 200.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_send_CurrentClusterState_when_subscribe,The length of the statement  "            _publisher.Tell(new InternalClusterAction.Subscribe(subscriber.Ref' ClusterEvent.SubscriptionInitialStateMode.InitialStateAsSnapshot' ImmutableHashSet.Create(typeof(ClusterEvent.IClusterDomainEvent)))); " is 202.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_send_events_corresponding_to_current_state_when_subscribe,The length of the statement  "            _publisher.Tell(new InternalClusterAction.Subscribe(subscriber.Ref' ClusterEvent.SubscriptionInitialStateMode.InitialStateAsEvents' ImmutableHashSet.Create(typeof(ClusterEvent.IMemberEvent)' typeof(ClusterEvent.ReachabilityEvent)))); " is 233.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_should_support_unsubscribe,The length of the statement  "            _publisher.Tell(new InternalClusterAction.Subscribe(subscriber.Ref' ClusterEvent.SubscriptionInitialStateMode.InitialStateAsSnapshot' ImmutableHashSet.Create(typeof(ClusterEvent.IMemberEvent)))); " is 195.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_publish_seen_changed,The length of the statement  "            _publisher.Tell(new InternalClusterAction.Subscribe(subscriber.Ref' ClusterEvent.SubscriptionInitialStateMode.InitialStateAsSnapshot' ImmutableHashSet.Create(typeof(ClusterEvent.SeenChanged)))); " is 194.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_new_members,The length of the statement  "                .BeEquivalentTo(ImmutableList.Create<ClusterEvent.IMemberEvent>(new ClusterEvent.MemberUp(bUp)' new ClusterEvent.MemberJoined(eJoining))); " is 138.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_new_members,The length of the statement  "                .BeEquivalentTo(ImmutableList.Create(new ClusterEvent.SeenChanged(true' s2.Select(s => s.Address).ToImmutableHashSet()))); " is 122.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_changed_status_of_members,The length of the statement  "                .BeEquivalentTo(ImmutableList.Create<ClusterEvent.IMemberEvent>(new ClusterEvent.MemberUp(aUp)' new ClusterEvent.MemberLeft(cLeaving)' new ClusterEvent.MemberJoined(eJoining))); " is 177.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_changed_status_of_members,The length of the statement  "                .BeEquivalentTo(ImmutableList.Create(new ClusterEvent.SeenChanged(true' s2.Select(s => s.Address).ToImmutableHashSet()))); " is 122.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_removed_members,The length of the statement  "                .BeEquivalentTo(ImmutableList.Create<ClusterEvent.IMemberEvent>(new ClusterEvent.MemberRemoved(dRemoved' MemberStatus.Exiting))); " is 129.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_removed_members,The length of the statement  "                .BeEquivalentTo(ImmutableList.Create(new ClusterEvent.SeenChanged(true' s2.Select(s => s.Address).ToImmutableHashSet()))); " is 122.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_convergence_changes,The length of the statement  "                .BeEquivalentTo(ImmutableList.Create(new ClusterEvent.SeenChanged(true' ImmutableHashSet.Create(aUp.Address' bUp.Address)))); " is 125.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_convergence_changes,The length of the statement  "                .BeEquivalentTo(ImmutableList.Create(new ClusterEvent.SeenChanged(true' ImmutableHashSet.Create(aUp.Address' bUp.Address' eJoining.Address)))); " is 143.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_leader_changes,The length of the statement  "                .BeEquivalentTo(ImmutableList.Create(new ClusterEvent.SeenChanged(true' s2.Select(a => a.Address).ToImmutableHashSet()))); " is 122.
Long Statement,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,EmptyState,The length of the statement  "            return new ClusterHeartbeatSenderState(new HeartbeatNodeRing(selfUniqueAddress' ImmutableHashSet.Create(selfUniqueAddress)' ImmutableHashSet<UniqueAddress>.Empty' 3)' " is 166.
Long Statement,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,EmptyState,The length of the statement  "                ImmutableHashSet.Create<UniqueAddress>()' new DefaultFailureDetectorRegistry<Address>(() => new FailureDetectorStub())); " is 120.
Long Statement,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_update_FailureDetector_in_active_set,The length of the statement  "            s2.FailureDetector.IsMonitoring(ee.Address).Should().BeFalse("Never added (ee) to active set' so we should not be monitoring it even if we did receive HeartbeatRsp from it"); " is 174.
Long Statement,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The length of the statement  "                    Debug.WriteLine("Failure context: i = {0}' node = {1}' op={2}' unreachable={3}' ringReceivers={4}' ringNodes={5}"' i' node' operation'  " is 134.
Long Statement,Akka.Cluster.Tests,ClusterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_must_be_allowed_to_join_and_leave_with_local_address,The length of the statement  "            var sys2 = ActorSystem.Create("ClusterSpec2"' ConfigurationFactory.ParseString(@"akka.actor.provider = ""Akka.Cluster.ClusterActorRefProvider' Akka.Cluster"" " is 157.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_reach_convergence_skipping_Unreachable_Leaving_with_ExitingConfirmed,The length of the statement  "            var g1 = new Gossip(ImmutableSortedSet.Create(a1' b1' c1)' new GossipOverview(r1)).Seen(a1.UniqueAddress).Seen(b1.UniqueAddress); " is 129.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_know_who_is_youngest,The length of the statement  "                new GossipOverview(Reachability.Empty.Unreachable(a2.UniqueAddress' b1.UniqueAddress).Unreachable(a2.UniqueAddress' e1.UniqueAddress))); " is 136.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_as_targets_for_Exiting_change,The length of the statement  "            Member a1 = TestMember.Create(new Address("akka.tcp"' "sys"' "a4"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 1); " is 136.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_as_targets_for_Exiting_change,The length of the statement  "            Member a2 = TestMember.Create(new Address("akka.tcp"' "sys"' "a3"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 2); " is 136.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_as_targets_for_Exiting_change,The length of the statement  "            Member a3 = TestMember.Create(new Address("akka.tcp"' "sys"' "a2"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 3); " is 136.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_as_targets_for_Exiting_change,The length of the statement  "            Member a4 = TestMember.Create(new Address("akka.tcp"' "sys"' "a1"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 4); " is 136.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The length of the statement  "            Member a1 = TestMember.Create(new Address("akka.tcp"' "sys"' "a4"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 1); " is 136.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The length of the statement  "            Member a2 = TestMember.Create(new Address("akka.tcp"' "sys"' "a3"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 2); " is 136.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The length of the statement  "            Member a3 = TestMember.Create(new Address("akka.tcp"' "sys"' "a2"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 3); " is 136.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The length of the statement  "            Member a4 = TestMember.Create(new Address("akka.tcp"' "sys"' "a1"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 4); " is 136.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The length of the statement  "            Member a5 = TestMember.Create(new Address("akka.tcp"' "sys"' "a5"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role1").Add("role2")' upNumber: 5); " is 167.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The length of the statement  "            Member a6 = TestMember.Create(new Address("akka.tcp"' "sys"' "a6"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role1").Add("role3")' upNumber: 6); " is 167.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The length of the statement  "            Member a7 = TestMember.Create(new Address("akka.tcp"' "sys"' "a7"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role1")' upNumber: 7); " is 154.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The length of the statement  "            Member a8 = TestMember.Create(new Address("akka.tcp"' "sys"' "a8"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role1")' upNumber: 8); " is 154.
Long Statement,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The length of the statement  "            Member a9 = TestMember.Create(new Address("akka.tcp"' "sys"' "a9"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role2")' upNumber: 9); " is 154.
Long Statement,Akka.Cluster.Tests,HeartbeatNodeRingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_all_except_own_as_receivers_when_less_than_total_number_of_nodes,The length of the statement  "            new HeartbeatNodeRing(cc' _nodes' ImmutableHashSet<UniqueAddress>.Empty' 5).MyReceivers.Value.Should().BeEquivalentTo(expected); " is 128.
Long Statement,Akka.Cluster.Tests,HeartbeatNodeRingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_all_except_own_as_receivers_when_less_than_total_number_of_nodes,The length of the statement  "            new HeartbeatNodeRing(cc' _nodes' ImmutableHashSet<UniqueAddress>.Empty' 6).MyReceivers.Value.Should().BeEquivalentTo(expected); " is 128.
Long Statement,Akka.Cluster.Tests,HeartbeatNodeRingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_all_except_own_as_receivers_when_less_than_total_number_of_nodes,The length of the statement  "            new HeartbeatNodeRing(cc' _nodes' ImmutableHashSet<UniqueAddress>.Empty' 7).MyReceivers.Value.Should().BeEquivalentTo(expected); " is 128.
Long Statement,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_work_pick_member_with_legal_transition,The length of the statement  "            var s2 = ImmutableSortedSet.Create(TestMember.Create(address1' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber:2)); " is 125.
Long Statement,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_exclude_observations_from_specific_downed_nodes,The length of the statement  "            r.RemoveObservers(ImmutableHashSet.Create(nodeB)).AllUnreachableOrTerminated.Should().BeEquivalentTo(ImmutableHashSet.Create(nodeB)); " is 133.
Long Statement,Akka.Cluster.Tests,ShutdownAfterJoinSeedNodesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ShutdownAfterJoinSeedNodesSpec.cs,Joining_seed_nodes_must_be_aborted_after_shutdown_after_unsuccessful_join_seed_nodes,The length of the statement  "            AwaitCondition(() => _seed2.WhenTerminated.IsCompleted' Cluster.Get(_seed2).Settings.ShutdownAfterUnsuccessfulJoinSeedNodes + TimeSpan.FromSeconds(10)); " is 152.
Long Statement,Akka.Cluster.Tests,ShutdownAfterJoinSeedNodesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ShutdownAfterJoinSeedNodesSpec.cs,Joining_seed_nodes_must_be_aborted_after_shutdown_after_unsuccessful_join_seed_nodes,The length of the statement  "            AwaitCondition(() => _ordinary1.WhenTerminated.IsCompleted' Cluster.Get(_ordinary1).Settings.ShutdownAfterUnsuccessfulJoinSeedNodes + TimeSpan.FromSeconds(10)); " is 160.
Long Statement,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_remaining_if_oldest_was_unreachable_role_based,The length of the statement  "            var remaining = Members(Member(a' upNumber: 1)' Member(b' upNumber: 3' role: role)' Member(c' upNumber: 4' role: role)); " is 120.
Long Statement,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_unreachable_nodes_if_oldest_was_found_in_remaining_role_based,The length of the statement  "            var remaining = Members(Member(a' upNumber: 2' role: role)' Member(b' upNumber: 5' role: role)' Member(c' upNumber: 4)); " is 120.
Long Statement,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_GossipStatus,The length of the statement  "            var reachability3 = Reachability.Empty.Unreachable(a1.UniqueAddress' e1.UniqueAddress).Unreachable(b1.UniqueAddress' e1.UniqueAddress); " is 135.
Long Statement,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_GossipStatus,The length of the statement  "            var g3 = g2.Copy(members: ImmutableSortedSet.Create(a1' b1' c1' d1' e1)' overview: g2.Overview.Copy(reachability: reachability3)); " is 130.
Magic Number,Akka.Cluster.Tests,ActorRefProvidersConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ActorRefProvidersConfigSpec.cs,ConfigureAndVerify,The following statement contains a magic number: system.Terminate().Wait(TimeSpan.FromSeconds(3));
Magic Number,Akka.Cluster.Tests,AutoDownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_down_unreachable_after_specified_duration,The following statement contains a magic number: var a = AutoDownActor(TimeSpan.FromSeconds(2));
Magic Number,Akka.Cluster.Tests,AutoDownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_down_unreachable_when_becoming_leader_inbetween_detection_and_specified_duration,The following statement contains a magic number: var a = AutoDownActor(TimeSpan.FromSeconds(2));
Magic Number,Akka.Cluster.Tests,AutoDownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_not_down_unreachable_when_loosing_leadership_inbetween_detection_and_specified_duration,The following statement contains a magic number: var a = AutoDownActor(TimeSpan.FromSeconds(2));
Magic Number,Akka.Cluster.Tests,AutoDownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_not_down_unreachable_when_loosing_leadership_inbetween_detection_and_specified_duration,The following statement contains a magic number: ExpectNoMsg(3.Seconds());
Magic Number,Akka.Cluster.Tests,AutoDownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_not_down_when_unreachable_become_reachable_inbetween_detection_and_specified_duration,The following statement contains a magic number: var a = AutoDownActor(TimeSpan.FromSeconds(2));
Magic Number,Akka.Cluster.Tests,AutoDownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_not_down_when_unreachable_become_reachable_inbetween_detection_and_specified_duration,The following statement contains a magic number: ExpectNoMsg(3.Seconds());
Magic Number,Akka.Cluster.Tests,AutoDownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_not_down_unreachable_is_removed_inbetween_detection_and_specified_duration,The following statement contains a magic number: var a = AutoDownActor(TimeSpan.FromSeconds(2));
Magic Number,Akka.Cluster.Tests,AutoDownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_not_down_unreachable_is_removed_inbetween_detection_and_specified_duration,The following statement contains a magic number: ExpectNoMsg(3.Seconds());
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: settings.SeedNodeTimeout.Should().Be(5.Seconds());
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: settings.RetryUnsuccessfulJoinAfter.Should().Be(10.Seconds());
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: settings.GossipTimeToLive.Should().Be(2.Seconds());
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: settings.MonitoredByNrOfMembers.Should().Be(5);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: settings.GossipDifferentViewProbability.Should().Be(0.8);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: settings.ReduceGossipDifferentViewProbability.Should().Be(400);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: settings.FailureDetectorConfig.GetDouble("threshold").Should().Be(8.0d);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: settings.FailureDetectorConfig.GetInt("max-sample-size").Should().Be(1000);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: settings.FailureDetectorConfig.GetTimeSpan("min-std-deviation").Should().Be(100.Milliseconds());
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: settings.FailureDetectorConfig.GetTimeSpan("acceptable-heartbeat-pause").Should().Be(3.Seconds());
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: settings.FailureDetectorConfig.GetInt("monitored-by-nr-of-members").Should().Be(5);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: settings.SchedulerTickDuration.Should().Be(33.Milliseconds());
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: settings.SchedulerTicksPerWheel.Should().Be(512);
Magic Number,Akka.Cluster.Tests,ClusterDeployerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_pool,The following statement contains a magic number: deployment.RouterConfig.AsInstanceOf<ClusterRouterPool>().Local.AsInstanceOf<RoundRobinPool>().NrOfInstances.ShouldBe(20);
Magic Number,Akka.Cluster.Tests,ClusterDeployerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_pool,The following statement contains a magic number: deployment.RouterConfig.AsInstanceOf<ClusterRouterPool>().Settings.TotalInstances.ShouldBe(20);
Magic Number,Akka.Cluster.Tests,ClusterDeployerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_pool,The following statement contains a magic number: deployment.RouterConfig.AsInstanceOf<ClusterRouterPool>().Settings.AsInstanceOf<ClusterRouterPoolSettings>().MaxInstancesPerNode.ShouldBe(3);
Magic Number,Akka.Cluster.Tests,ClusterDeployerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_group,The following statement contains a magic number: deployment.RouterConfig.AsInstanceOf<ClusterRouterGroup>().Settings.TotalInstances.ShouldBe(20);
Magic Number,Akka.Cluster.Tests,ClusterDeployerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,BugFix2266RemoteDeployer_must_be_able_to_parse_broadcast_group_cluster_router_with_default_nr_of_routees_routees,The following statement contains a magic number: deployment.RouterConfig.AsInstanceOf<ClusterRouterGroup>().Settings.TotalInstances.ShouldBe(10000);
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_publish_leader_changed,The following statement contains a magic number: _memberSubscriber.ExpectNoMsg(500.Milliseconds());
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_publish_leader_changed_when_old_leader_leaves_and_is_removed,The following statement contains a magic number: _memberSubscriber.ExpectNoMsg(500.Milliseconds());
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_not_publish_leader_changed_when_same_leader,The following statement contains a magic number: _memberSubscriber.ExpectNoMsg(500.Milliseconds());
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_send_CurrentClusterState_when_subscribe,The following statement contains a magic number: _memberSubscriber.ExpectNoMsg(500.Milliseconds());
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_send_events_corresponding_to_current_state_when_subscribe,The following statement contains a magic number: subscriber.ReceiveN(4).Should().BeEquivalentTo(                  new ClusterEvent.MemberUp(aUp)'                  new ClusterEvent.MemberUp(cUp)'                  new ClusterEvent.MemberUp(dUp)'                  new ClusterEvent.MemberExited(bExiting));
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_send_events_corresponding_to_current_state_when_subscribe,The following statement contains a magic number: subscriber.ExpectNoMsg(500.Milliseconds());
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_should_support_unsubscribe,The following statement contains a magic number: subscriber.ExpectNoMsg(500.Milliseconds());
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_publish_seen_changed,The following statement contains a magic number: subscriber.ExpectNoMsg(500.Milliseconds());
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_publish_seen_changed,The following statement contains a magic number: subscriber.ExpectNoMsg(500.Milliseconds());
Magic Number,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,EmptyState,The following statement contains a magic number: return new ClusterHeartbeatSenderState(new HeartbeatNodeRing(selfUniqueAddress' ImmutableHashSet.Create(selfUniqueAddress)' ImmutableHashSet<UniqueAddress>.Empty' 3)'                  ImmutableHashSet.Create<UniqueAddress>()' new DefaultFailureDetectorRegistry<Address>(() => new FailureDetectorStub()));
Magic Number,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The following statement contains a magic number: var nodes = Enumerable.Range(1' rnd.Next(10' 200))                      .Select(n => new UniqueAddress(new Address("akka.tcp"' "sys"' "n" + n' 2552)' n))                      .ToList();
Magic Number,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The following statement contains a magic number: var nodes = Enumerable.Range(1' rnd.Next(10' 200))                      .Select(n => new UniqueAddress(new Address("akka.tcp"' "sys"' "n" + n' 2552)' n))                      .ToList();
Magic Number,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The following statement contains a magic number: var nodes = Enumerable.Range(1' rnd.Next(10' 200))                      .Select(n => new UniqueAddress(new Address("akka.tcp"' "sys"' "n" + n' 2552)' n))                      .ToList();
Magic Number,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The following statement contains a magic number: const int Unreachable = 2;
Magic Number,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The following statement contains a magic number: const int HeartbeatRsp = 3;
Magic Number,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The following statement contains a magic number: i <= 100000
Magic Number,Akka.Cluster.Tests,ClusterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_must_return_completed_LeaveAsync_task_if_member_already_removed,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                  LeaderActions(); // Leaving --> Exiting                  LeaderActions(); // Exiting --> Removed                    // Member should leave                  ExpectMsg<ClusterEvent.MemberRemoved>().Member.Address.Should().Be(_selfAddress);              });
Magic Number,Akka.Cluster.Tests,ClusterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_must_cancel_LeaveAsync_task_if_CancellationToken_fired_before_node_left,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                  // Second task should continue awaiting for cluster leave                  task2.IsCompleted.Should().BeFalse();                    // Waiting for leave                  LeaderActions(); // Leaving --> Exiting                  LeaderActions(); // Exiting --> Removed                    // Member should leave even a task was cancelled                  ExpectMsg<ClusterEvent.MemberRemoved>().Member.Address.Should().Be(_selfAddress);                    // Second task should complete (not cancelled)                  AwaitCondition(() => task2.IsCompleted && !task2.IsCanceled' null' "Task should be completed' but not cancelled.");              });
Magic Number,Akka.Cluster.Tests,ClusterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_must_be_allowed_to_join_and_leave_with_local_address,The following statement contains a magic number: Within(5.Seconds()' () =>                  {                      AwaitAssert(() =>                      {                          Cluster.Get(sys2).State.Members.Count.Should().Be(1);                          Cluster.Get(sys2).State.Members.First().Status.Should().Be(MemberStatus.Up);                      });                  });
Magic Number,Akka.Cluster.Tests,ClusterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_must_be_allowed_to_join_and_leave_with_local_address,The following statement contains a magic number: Within(5.Seconds()' () =>                  {                      AwaitAssert(() =>                      {                          Cluster.Get(sys2).IsTerminated.Should().BeTrue();                      });                  });
Magic Number,Akka.Cluster.Tests,ClusterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_must_be_able_to_JoinAsync,The following statement contains a magic number: var timeout = TimeSpan.FromSeconds(10);
Magic Number,Akka.Cluster.Tests,ClusterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_must_be_able_to_JoinAsync,The following statement contains a magic number: _cluster.JoinAsync(_selfAddress).Wait(TimeSpan.FromMilliseconds(100)).Should().BeTrue();
Magic Number,Akka.Cluster.Tests,ClusterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_JoinAsync_must_fail_if_could_not_connect_to_cluster,The following statement contains a magic number: var timeout = TimeSpan.FromSeconds(10);
Magic Number,Akka.Cluster.Tests,ClusterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_must_be_able_to_join_async_to_seed_nodes,The following statement contains a magic number: var timeout = TimeSpan.FromSeconds(10);
Magic Number,Akka.Cluster.Tests,ClusterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_must_be_able_to_join_async_to_seed_nodes,The following statement contains a magic number: _cluster.JoinSeedNodesAsync(new[] { _selfAddress }).Wait(TimeSpan.FromMilliseconds(100)).Should().BeTrue();
Magic Number,Akka.Cluster.Tests,ClusterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_JoinSeedNodesAsync_must_fail_if_could_not_connect_to_cluster,The following statement contains a magic number: var timeout = TimeSpan.FromSeconds(10);
Magic Number,Akka.Cluster.Tests,ClusterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_must_terminate_ActorSystem_via_leave_CoordinatedShutdown,The following statement contains a magic number: AwaitCondition(() => sys2.WhenTerminated.IsCompleted' TimeSpan.FromSeconds(10));
Magic Number,Akka.Cluster.Tests,ClusterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_must_terminate_ActorSystem_via_Down_CoordinatedShutdown,The following statement contains a magic number: AwaitCondition(() => sys3.WhenTerminated.IsCompleted' TimeSpan.FromSeconds(10));
Magic Number,Akka.Cluster.Tests,DowningProviderSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\DowningProviderSpec.cs,Downing_provider_should_use_specified_downing_provider,The following statement contains a magic number: AwaitCondition(() =>                      (downingProvider as DummyDowningProvider).ActorPropsAccessed.Value'                      TimeSpan.FromSeconds(3));
Magic Number,Akka.Cluster.Tests,DowningProviderSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\DowningProviderSpec.cs,Downing_provider_should_stop_the_cluster_if_the_downing_provider_throws_exception_in_props,The following statement contains a magic number: AwaitCondition(() => cluster.IsTerminated' TimeSpan.FromSeconds(3));
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_know_who_is_youngest,The following statement contains a magic number: var g1 = new Gossip(ImmutableSortedSet.Create(a2' b1.CopyUp(3)' e1)'                  new GossipOverview(Reachability.Empty.Unreachable(a2.UniqueAddress' e1.UniqueAddress)));
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_know_who_is_youngest,The following statement contains a magic number: var g2 = new Gossip(ImmutableSortedSet.Create(a2' b1.CopyUp(3)' e1)'                  new GossipOverview(Reachability.Empty.Unreachable(a2.UniqueAddress' b1.UniqueAddress).Unreachable(a2.UniqueAddress' e1.UniqueAddress)));
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_know_who_is_youngest,The following statement contains a magic number: var g3 = new Gossip(ImmutableSortedSet.Create(a2' b1.CopyUp(3)' e2.CopyUp(4)));
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_know_who_is_youngest,The following statement contains a magic number: var g3 = new Gossip(ImmutableSortedSet.Create(a2' b1.CopyUp(3)' e2.CopyUp(4)));
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_as_targets_for_Exiting_change,The following statement contains a magic number: Member a1 = TestMember.Create(new Address("akka.tcp"' "sys"' "a4"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 1);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_as_targets_for_Exiting_change,The following statement contains a magic number: Member a2 = TestMember.Create(new Address("akka.tcp"' "sys"' "a3"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 2);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_as_targets_for_Exiting_change,The following statement contains a magic number: Member a2 = TestMember.Create(new Address("akka.tcp"' "sys"' "a3"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 2);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_as_targets_for_Exiting_change,The following statement contains a magic number: Member a3 = TestMember.Create(new Address("akka.tcp"' "sys"' "a2"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 3);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_as_targets_for_Exiting_change,The following statement contains a magic number: Member a3 = TestMember.Create(new Address("akka.tcp"' "sys"' "a2"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 3);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_as_targets_for_Exiting_change,The following statement contains a magic number: Member a4 = TestMember.Create(new Address("akka.tcp"' "sys"' "a1"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 4);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_as_targets_for_Exiting_change,The following statement contains a magic number: Member a4 = TestMember.Create(new Address("akka.tcp"' "sys"' "a1"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 4);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a1 = TestMember.Create(new Address("akka.tcp"' "sys"' "a4"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 1);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a2 = TestMember.Create(new Address("akka.tcp"' "sys"' "a3"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 2);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a2 = TestMember.Create(new Address("akka.tcp"' "sys"' "a3"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 2);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a3 = TestMember.Create(new Address("akka.tcp"' "sys"' "a2"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 3);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a3 = TestMember.Create(new Address("akka.tcp"' "sys"' "a2"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 3);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a4 = TestMember.Create(new Address("akka.tcp"' "sys"' "a1"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 4);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a4 = TestMember.Create(new Address("akka.tcp"' "sys"' "a1"' 2552)' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber: 4);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a5 = TestMember.Create(new Address("akka.tcp"' "sys"' "a5"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role1").Add("role2")' upNumber: 5);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a5 = TestMember.Create(new Address("akka.tcp"' "sys"' "a5"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role1").Add("role2")' upNumber: 5);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a6 = TestMember.Create(new Address("akka.tcp"' "sys"' "a6"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role1").Add("role3")' upNumber: 6);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a6 = TestMember.Create(new Address("akka.tcp"' "sys"' "a6"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role1").Add("role3")' upNumber: 6);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a7 = TestMember.Create(new Address("akka.tcp"' "sys"' "a7"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role1")' upNumber: 7);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a7 = TestMember.Create(new Address("akka.tcp"' "sys"' "a7"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role1")' upNumber: 7);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a8 = TestMember.Create(new Address("akka.tcp"' "sys"' "a8"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role1")' upNumber: 8);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a8 = TestMember.Create(new Address("akka.tcp"' "sys"' "a8"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role1")' upNumber: 8);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a9 = TestMember.Create(new Address("akka.tcp"' "sys"' "a9"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role2")' upNumber: 9);
Magic Number,Akka.Cluster.Tests,GossipSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_find_two_oldest_per_role_as_targets_for_Exiting_change,The following statement contains a magic number: Member a9 = TestMember.Create(new Address("akka.tcp"' "sys"' "a9"' 2552)' MemberStatus.Exiting' ImmutableHashSet<string>.Empty.Add("role2")' upNumber: 9);
Magic Number,Akka.Cluster.Tests,HeartbeatNodeRingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_specified_number_of_nodes_as_receivers,The following statement contains a magic number: var ring = new HeartbeatNodeRing(cc' _nodes' ImmutableHashSet<UniqueAddress>.Empty' 3);
Magic Number,Akka.Cluster.Tests,HeartbeatNodeRingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_specified_number_of_nodes_as_receivers,The following statement contains a magic number: receivers.Count.Should().Be(3);
Magic Number,Akka.Cluster.Tests,HeartbeatNodeRingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_specified_number_of_nodes_plus_unreachable_as_receivers,The following statement contains a magic number: var ring = new HeartbeatNodeRing(cc' _nodes' ImmutableHashSet.Create(aa' dd' ee)' 3);
Magic Number,Akka.Cluster.Tests,HeartbeatNodeRingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_all_except_own_as_receivers_when_less_than_total_number_of_nodes,The following statement contains a magic number: new HeartbeatNodeRing(cc' _nodes' ImmutableHashSet<UniqueAddress>.Empty' 5).MyReceivers.Value.Should().BeEquivalentTo(expected);
Magic Number,Akka.Cluster.Tests,HeartbeatNodeRingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_all_except_own_as_receivers_when_less_than_total_number_of_nodes,The following statement contains a magic number: new HeartbeatNodeRing(cc' _nodes' ImmutableHashSet<UniqueAddress>.Empty' 6).MyReceivers.Value.Should().BeEquivalentTo(expected);
Magic Number,Akka.Cluster.Tests,HeartbeatNodeRingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_all_except_own_as_receivers_when_less_than_total_number_of_nodes,The following statement contains a magic number: new HeartbeatNodeRing(cc' _nodes' ImmutableHashSet<UniqueAddress>.Empty' 7).MyReceivers.Value.Should().BeEquivalentTo(expected);
Magic Number,Akka.Cluster.Tests,HeartbeatNodeRingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_none_when_alone,The following statement contains a magic number: var ring = new HeartbeatNodeRing(cc' ImmutableHashSet.Create(cc)' ImmutableHashSet<UniqueAddress>.Empty' 3);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_order_members_by_host_and_port,The following statement contains a magic number: seq.Count.Should().Be(3);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_order_members_by_host_and_port,The following statement contains a magic number: seq[2].Should().Be(TestMember.Create(Address.Parse("akka://sys@darkstar:1113")' MemberStatus.Joining));
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_be_sorted_by_address_correctly,The following statement contains a magic number: var m1 = TestMember.Create(new Address("akka.tcp"' "sys1"' "host1"' 9000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_be_sorted_by_address_correctly,The following statement contains a magic number: var m2 = TestMember.Create(new Address("akka.tcp"' "sys1"' "host1"' 10000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_be_sorted_by_address_correctly,The following statement contains a magic number: var m3 = TestMember.Create(new Address("cluster"' "sys2"' "host2"' 8000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_be_sorted_by_address_correctly,The following statement contains a magic number: var m4 = TestMember.Create(new Address("cluster"' "sys2"' "host2"' 9000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_be_sorted_by_address_correctly,The following statement contains a magic number: var m5 = TestMember.Create(new Address("cluster"' "sys1"' "host2"' 10000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_have_stable_equals_and_hash_code,The following statement contains a magic number: var address = new Address("akka.tcp"' "sys1"' "host1"' 9000);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_have_stable_equals_and_hash_code,The following statement contains a magic number: var m11 = Member.Create(new UniqueAddress(address' -3)' ImmutableHashSet<string>.Empty);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_have_stable_equals_and_hash_code,The following statement contains a magic number: var m3 = TestMember.Create(address.WithPort(10000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_consistent_ordering_and_equals,The following statement contains a magic number: var address1 = new Address("akka.tcp"' "sys1"' "host1"' 9001);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_consistent_ordering_and_equals,The following statement contains a magic number: var address2 = address1.WithPort(9002);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_consistent_ordering_and_equals,The following statement contains a magic number: var b = Member.Create(new UniqueAddress(address1' -3)' ImmutableHashSet<string>.Empty);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_work_pick_member_with_legal_transition,The following statement contains a magic number: var address1 = new Address("akka.tcp"' "sys1"' "host1"' 9001);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_work_pick_member_with_legal_transition,The following statement contains a magic number: var address2 = address1.WithPort(9002);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_work_pick_member_with_legal_transition,The following statement contains a magic number: var address3 = address1.WithPort(9003);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_work_pick_member_with_legal_transition,The following statement contains a magic number: var address4 = address1.WithPort(9004);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_work_pick_member_with_legal_transition,The following statement contains a magic number: var s2 = ImmutableSortedSet.Create(TestMember.Create(address1' MemberStatus.Up' ImmutableHashSet<string>.Empty' upNumber:2));
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_work_with_sorted_set,The following statement contains a magic number: var address1 = new Address("akka.tcp"' "sys1"' "host1"' 9001);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_work_with_sorted_set,The following statement contains a magic number: var address2 = address1.WithPort(9002);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_work_with_sorted_set,The following statement contains a magic number: var address3 = address1.WithPort(9003);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_port,The following statement contains a magic number: seq.Count.Should().Be(4);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_port,The following statement contains a magic number: seq[2].Should().Be(Address.Parse("akka://sys@darkstar:1112"));
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_port,The following statement contains a magic number: seq[3].Should().Be(Address.Parse("akka://sys@darkstar:1113"));
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_host_name,The following statement contains a magic number: seq.Count.Should().Be(4);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_host_name,The following statement contains a magic number: seq[2].Should().Be(Address.Parse("akka://sys@darkstar2:1110"));
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_host_name,The following statement contains a magic number: seq[3].Should().Be(Address.Parse("akka://sys@darkstar3:1110"));
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_host_name_and_port,The following statement contains a magic number: seq.Count.Should().Be(4);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_host_name_and_port,The following statement contains a magic number: seq[2].Should().Be(Address.Parse("akka://sys@darkstar2:1110"));
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_host_name_and_port,The following statement contains a magic number: seq[3].Should().Be(Address.Parse("akka://sys@darkstar2:1111"));
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var address = new Address("akka.tcp"' "sys1"' "host1"' 5000);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var m2 = TestMember.Create(address.WithPort(7000)' MemberStatus.Joining);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var m3 = TestMember.Create(address.WithPort(3000)' MemberStatus.Exiting);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var m4 = TestMember.Create(address.WithPort(6000)' MemberStatus.Exiting);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var m5 = TestMember.Create(address.WithPort(2000)' MemberStatus.Down);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var m6 = TestMember.Create(address.WithPort(4000)' MemberStatus.Down);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var m7 = TestMember.Create(address.WithPort(8000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var m8 = TestMember.Create(address.WithPort(9000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_be_pruned_when_all_records_of_an_observer_are_reachable,The following statement contains a magic number: var expected2 = ImmutableHashSet.Create(                  new Reachability.Record(nodeD' nodeC' Reachability.ReachabilityStatus.Unreachable' 1)'                  new Reachability.Record(nodeB' nodeD' Reachability.ReachabilityStatus.Unreachable' 5)'                  new Reachability.Record(nodeB' nodeE' Reachability.ReachabilityStatus.Unreachable' 6));
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_be_pruned_when_all_records_of_an_observer_are_reachable,The following statement contains a magic number: var expected2 = ImmutableHashSet.Create(                  new Reachability.Record(nodeD' nodeC' Reachability.ReachabilityStatus.Unreachable' 1)'                  new Reachability.Record(nodeB' nodeD' Reachability.ReachabilityStatus.Unreachable' 5)'                  new Reachability.Record(nodeB' nodeE' Reachability.ReachabilityStatus.Unreachable' 6));
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_aggregated_status,The following statement contains a magic number: var records = ImmutableList.Create(                  new Reachability.Record(nodeA' nodeB' Reachability.ReachabilityStatus.Reachable' 2)'                  new Reachability.Record(nodeC' nodeB' Reachability.ReachabilityStatus.Unreachable' 2)'                  new Reachability.Record(nodeA' nodeD' Reachability.ReachabilityStatus.Unreachable' 3)'                  new Reachability.Record(nodeD' nodeB' Reachability.ReachabilityStatus.Terminated' 4));
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_aggregated_status,The following statement contains a magic number: var records = ImmutableList.Create(                  new Reachability.Record(nodeA' nodeB' Reachability.ReachabilityStatus.Reachable' 2)'                  new Reachability.Record(nodeC' nodeB' Reachability.ReachabilityStatus.Unreachable' 2)'                  new Reachability.Record(nodeA' nodeD' Reachability.ReachabilityStatus.Unreachable' 3)'                  new Reachability.Record(nodeD' nodeB' Reachability.ReachabilityStatus.Terminated' 4));
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_aggregated_status,The following statement contains a magic number: var records = ImmutableList.Create(                  new Reachability.Record(nodeA' nodeB' Reachability.ReachabilityStatus.Reachable' 2)'                  new Reachability.Record(nodeC' nodeB' Reachability.ReachabilityStatus.Unreachable' 2)'                  new Reachability.Record(nodeA' nodeD' Reachability.ReachabilityStatus.Unreachable' 3)'                  new Reachability.Record(nodeD' nodeB' Reachability.ReachabilityStatus.Terminated' 4));
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_aggregated_status,The following statement contains a magic number: var records = ImmutableList.Create(                  new Reachability.Record(nodeA' nodeB' Reachability.ReachabilityStatus.Reachable' 2)'                  new Reachability.Record(nodeC' nodeB' Reachability.ReachabilityStatus.Unreachable' 2)'                  new Reachability.Record(nodeA' nodeD' Reachability.ReachabilityStatus.Unreachable' 3)'                  new Reachability.Record(nodeD' nodeB' Reachability.ReachabilityStatus.Terminated' 4));
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_aggregated_status,The following statement contains a magic number: var versions = ImmutableDictionary.CreateRange(new[]              {                  new KeyValuePair<UniqueAddress' long>(nodeA' 3)'                  new KeyValuePair<UniqueAddress' long>(nodeC' 3)'                  new KeyValuePair<UniqueAddress' long>(nodeD' 4)              });
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_aggregated_status,The following statement contains a magic number: var versions = ImmutableDictionary.CreateRange(new[]              {                  new KeyValuePair<UniqueAddress' long>(nodeA' 3)'                  new KeyValuePair<UniqueAddress' long>(nodeC' 3)'                  new KeyValuePair<UniqueAddress' long>(nodeD' 4)              });
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_aggregated_status,The following statement contains a magic number: var versions = ImmutableDictionary.CreateRange(new[]              {                  new KeyValuePair<UniqueAddress' long>(nodeA' 3)'                  new KeyValuePair<UniqueAddress' long>(nodeC' 3)'                  new KeyValuePair<UniqueAddress' long>(nodeD' 4)              });
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_status_for_a_mix_of_nodes,The following statement contains a magic number: r.ObserversGroupedByUnreachable.Should().HaveCount(3);
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var r1 = new Reachability(ImmutableList.Create<Reachability.Record>()' new Dictionary<UniqueAddress' long>              {                  { nodeA' 3 }'                  { nodeB' 5 }'                  { nodeC' 7 }              }.ToImmutableDictionary());
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var r1 = new Reachability(ImmutableList.Create<Reachability.Record>()' new Dictionary<UniqueAddress' long>              {                  { nodeA' 3 }'                  { nodeB' 5 }'                  { nodeC' 7 }              }.ToImmutableDictionary());
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var r1 = new Reachability(ImmutableList.Create<Reachability.Record>()' new Dictionary<UniqueAddress' long>              {                  { nodeA' 3 }'                  { nodeB' 5 }'                  { nodeC' 7 }              }.ToImmutableDictionary());
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var r2 = new Reachability(ImmutableList.Create<Reachability.Record>()' new Dictionary<UniqueAddress' long>              {                  { nodeA' 6 }'                  { nodeB' 2 }'                  { nodeD' 1 }              }.ToImmutableDictionary());
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var r2 = new Reachability(ImmutableList.Create<Reachability.Record>()' new Dictionary<UniqueAddress' long>              {                  { nodeA' 6 }'                  { nodeB' 2 }'                  { nodeD' 1 }              }.ToImmutableDictionary());
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var expected = new Dictionary<UniqueAddress' long>              {                  { nodeA' 6 }'                  { nodeB' 5 }'                  { nodeC' 7 }'                  { nodeD' 1 }              }.ToImmutableDictionary();
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var expected = new Dictionary<UniqueAddress' long>              {                  { nodeA' 6 }'                  { nodeB' 5 }'                  { nodeC' 7 }'                  { nodeD' 1 }              }.ToImmutableDictionary();
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var expected = new Dictionary<UniqueAddress' long>              {                  { nodeA' 6 }'                  { nodeB' 5 }'                  { nodeC' 7 }'                  { nodeD' 1 }              }.ToImmutableDictionary();
Magic Number,Akka.Cluster.Tests,ShutdownAfterJoinSeedNodesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ShutdownAfterJoinSeedNodesSpec.cs,Joining_seed_nodes_must_be_aborted_after_shutdown_after_unsuccessful_join_seed_nodes,The following statement contains a magic number: AwaitCondition(() => _seed2.WhenTerminated.IsCompleted' Cluster.Get(_seed2).Settings.ShutdownAfterUnsuccessfulJoinSeedNodes + TimeSpan.FromSeconds(10));
Magic Number,Akka.Cluster.Tests,ShutdownAfterJoinSeedNodesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ShutdownAfterJoinSeedNodesSpec.cs,Joining_seed_nodes_must_be_aborted_after_shutdown_after_unsuccessful_join_seed_nodes,The following statement contains a magic number: AwaitCondition(() => _ordinary1.WhenTerminated.IsCompleted' Cluster.Get(_ordinary1).Settings.ShutdownAfterUnsuccessfulJoinSeedNodes + TimeSpan.FromSeconds(10));
Magic Number,Akka.Cluster.Tests,SplitBrainResolverConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainResolverConfigSpec.cs,StaticQuorum_must_parse_settings_from_config,The following statement contains a magic number: strategy.QuorumSize.Should().Be(5);
Magic Number,Akka.Cluster.Tests,SplitBrainResolverConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainResolverConfigSpec.cs,KeepReferee_must_parse_settings_from_config,The following statement contains a magic number: strategy.DownAllIfLessThanNodes.Should().Be(3);
Magic Number,Akka.Cluster.Tests,SplitBrainResolverConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainResolverConfigSpec.cs,SplitBrainResolver_should_be_picked_up_if_set_as_downing_provider,The following statement contains a magic number: provider.DownRemovalMargin.Should().Be(TimeSpan.FromSeconds(10));
Magic Number,Akka.Cluster.Tests,SplitBrainResolverConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainResolverConfigSpec.cs,SplitBrainResolver_should_be_picked_up_if_set_as_downing_provider,The following statement contains a magic number: provider.StableAfter.Should().Be(TimeSpan.FromSeconds(40));
Magic Number,Akka.Cluster.Tests,SplitBrainResolverConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainResolverConfigSpec.cs,SplitBrainResolver_should_work_with_default_timeouts,The following statement contains a magic number: provider.StableAfter.Should().Be(TimeSpan.FromSeconds(20));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,StaticQuorum_must_down_unreachable_nodes_if_remaining_size_is_equal_quorum_size,The following statement contains a magic number: var strategy = new StaticQuorum(quorumSize: 4' role: null);
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,StaticQuorum_must_down_unreachable_nodes_if_remaining_size_is_greater_quorum_size,The following statement contains a magic number: var strategy = new StaticQuorum(quorumSize: 3' role: null);
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,StaticQuorum_must_down_remaining_nodes_if_remaining_size_is_less_than_quorum_size,The following statement contains a magic number: var strategy = new StaticQuorum(quorumSize: 4' role: null);
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,StaticQuorum_must_limit_node_counts_to_role_if_provided,The following statement contains a magic number: var strategy = new StaticQuorum(quorumSize: 3' role: role);
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_remaining_if_oldest_was_unreachable,The following statement contains a magic number: var unreachable = Members(Member(e' upNumber: 1)' Member(d' upNumber: 5));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_remaining_if_oldest_was_unreachable,The following statement contains a magic number: var remaining = Members(Member(a' upNumber: 2)' Member(b' upNumber: 3)' Member(c' upNumber: 4));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_remaining_if_oldest_was_unreachable,The following statement contains a magic number: var remaining = Members(Member(a' upNumber: 2)' Member(b' upNumber: 3)' Member(c' upNumber: 4));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_remaining_if_oldest_was_unreachable,The following statement contains a magic number: var remaining = Members(Member(a' upNumber: 2)' Member(b' upNumber: 3)' Member(c' upNumber: 4));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_unreachable_nodes_if_oldest_was_found_in_remaining,The following statement contains a magic number: var unreachable = Members(Member(e' upNumber: 2)' Member(d' upNumber: 5));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_unreachable_nodes_if_oldest_was_found_in_remaining,The following statement contains a magic number: var unreachable = Members(Member(e' upNumber: 2)' Member(d' upNumber: 5));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_unreachable_nodes_if_oldest_was_found_in_remaining,The following statement contains a magic number: var remaining = Members(Member(a' upNumber: 1)' Member(b' upNumber: 3)' Member(c' upNumber: 4));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_unreachable_nodes_if_oldest_was_found_in_remaining,The following statement contains a magic number: var remaining = Members(Member(a' upNumber: 1)' Member(b' upNumber: 3)' Member(c' upNumber: 4));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_remaining_if_oldest_was_unreachable_role_based,The following statement contains a magic number: var unreachable = Members(Member(e' upNumber: 2' role: role)' Member(d' upNumber: 5));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_remaining_if_oldest_was_unreachable_role_based,The following statement contains a magic number: var unreachable = Members(Member(e' upNumber: 2' role: role)' Member(d' upNumber: 5));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_remaining_if_oldest_was_unreachable_role_based,The following statement contains a magic number: var remaining = Members(Member(a' upNumber: 1)' Member(b' upNumber: 3' role: role)' Member(c' upNumber: 4' role: role));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_remaining_if_oldest_was_unreachable_role_based,The following statement contains a magic number: var remaining = Members(Member(a' upNumber: 1)' Member(b' upNumber: 3' role: role)' Member(c' upNumber: 4' role: role));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_unreachable_nodes_if_oldest_was_found_in_remaining_role_based,The following statement contains a magic number: var unreachable = Members(Member(e' upNumber: 1)' Member(d' upNumber: 3' role: role));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_unreachable_nodes_if_oldest_was_found_in_remaining_role_based,The following statement contains a magic number: var remaining = Members(Member(a' upNumber: 2' role: role)' Member(b' upNumber: 5' role: role)' Member(c' upNumber: 4));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_unreachable_nodes_if_oldest_was_found_in_remaining_role_based,The following statement contains a magic number: var remaining = Members(Member(a' upNumber: 2' role: role)' Member(b' upNumber: 5' role: role)' Member(c' upNumber: 4));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_must_down_unreachable_nodes_if_oldest_was_found_in_remaining_role_based,The following statement contains a magic number: var remaining = Members(Member(a' upNumber: 2' role: role)' Member(b' upNumber: 5' role: role)' Member(c' upNumber: 4));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_when_downIfAlone_must_down_oldest_if_it_was_the_only_unreachable_node,The following statement contains a magic number: var remaining = Members(Member(a' upNumber: 2)' Member(b' upNumber: 3)' Member(c' upNumber: 4));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_when_downIfAlone_must_down_oldest_if_it_was_the_only_unreachable_node,The following statement contains a magic number: var remaining = Members(Member(a' upNumber: 2)' Member(b' upNumber: 3)' Member(c' upNumber: 4));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_when_downIfAlone_must_down_oldest_if_it_was_the_only_unreachable_node,The following statement contains a magic number: var remaining = Members(Member(a' upNumber: 2)' Member(b' upNumber: 3)' Member(c' upNumber: 4));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_when_downIfAlone_must_down_oldest_if_it_was_the_only_remaining_node,The following statement contains a magic number: var unreachable = Members(Member(e' upNumber: 2)' Member(b' upNumber: 3)' Member(c' upNumber: 4));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_when_downIfAlone_must_down_oldest_if_it_was_the_only_remaining_node,The following statement contains a magic number: var unreachable = Members(Member(e' upNumber: 2)' Member(b' upNumber: 3)' Member(c' upNumber: 4));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepOldest_when_downIfAlone_must_down_oldest_if_it_was_the_only_remaining_node,The following statement contains a magic number: var unreachable = Members(Member(e' upNumber: 2)' Member(b' upNumber: 3)' Member(c' upNumber: 4));
Magic Number,Akka.Cluster.Tests,SplitBrainStrategySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\SplitBrainStrategySpec.cs,KeepReferee_must_down_all_nodes_if_referee_node_was_in_remaining_but_DownAllIfLessThanNodes_was_not_reached,The following statement contains a magic number: var strategy = new KeepReferee(address: referee' downAllIfLessThanNodes: 3);
Magic Number,Akka.Cluster.Tests,StartupWithOneThreadSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\StartupWithOneThreadSpec.cs,A_cluster_must_startup_with_one_dispatcher_thread,The following statement contains a magic number: Assert.True(totalStartupTime < (Sys.Settings.CreationTimeout - TimeSpan.FromSeconds(2)).TotalMilliseconds);
Magic Number,Akka.Cluster.Tests,StartupWithOneThreadSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\StartupWithOneThreadSpec.cs,A_cluster_must_startup_with_one_dispatcher_thread,The following statement contains a magic number: Assert.True(totalStartupTime < (Sys.Settings.CreationTimeout - TimeSpan.FromSeconds(2)).TotalMilliseconds);
Magic Number,Akka.Cluster.Tests,VectorClockSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\VectorClockSpec.cs,A_VectorClock_must_correctly_merge_two_clocks,The following statement contains a magic number: merged1.Versions.Count.Should().Be(3);
Magic Number,Akka.Cluster.Tests,VectorClockSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\VectorClockSpec.cs,A_VectorClock_must_correctly_merge_two_clocks,The following statement contains a magic number: merged2.Versions.Count.Should().Be(3);
Magic Number,Akka.Cluster.Tests,VectorClockSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\VectorClockSpec.cs,A_VectorClock_must_correctly_merge_two_disjoint_vector_clocks,The following statement contains a magic number: merged1.Versions.Count.Should().Be(4);
Magic Number,Akka.Cluster.Tests,VectorClockSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\VectorClockSpec.cs,A_VectorClock_must_correctly_merge_two_disjoint_vector_clocks,The following statement contains a magic number: merged2.Versions.Count.Should().Be(4);
Magic Number,Akka.Cluster.Tests.Serialization,BugFix3724Spec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\BugFix3724Spec.cs,Should_serialize_all_AkkaCluster_messages,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                  EventFilter.Exception<Exception>().Expect(0' () =>                  {                      // wait for a singleton cluster to fully form and publish a member up event                      _cluster.Join(_selfAddress);                      var up = ExpectMsg<ClusterEvent.MemberUp>();                      up.Member.Address.Should().Be(_selfAddress);                  });              });
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_Heartbeat,The following statement contains a magic number: var address = new Address("akka.tcp"' "system"' "some.host.org"' 4711);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_HeartbeatRsp,The following statement contains a magic number: var address = new Address("akka.tcp"' "system"' "some.host.org"' 4711);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_HeartbeatRsp,The following statement contains a magic number: var uniqueAddress = new UniqueAddress(address' 17);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_GossipEnvelope,The following statement contains a magic number: var address = new Address("akka.tcp"' "system"' "some.host.org"' 4711);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_GossipEnvelope,The following statement contains a magic number: var uniqueAddress2 = new UniqueAddress(address' 18);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_Join,The following statement contains a magic number: var address = new Address("akka.tcp"' "system"' "some.host.org"' 4711);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_Join,The following statement contains a magic number: var uniqueAddress = new UniqueAddress(address' 17);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_Welcome,The following statement contains a magic number: var address = new Address("akka.tcp"' "system"' "some.host.org"' 4711);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_Welcome,The following statement contains a magic number: var uniqueAddress = new UniqueAddress(address' 17);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_ExitingConfirmed,The following statement contains a magic number: var address = new Address("akka.tcp"' "system"' "some.host.org"' 4711);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_ExitingConfirmed,The following statement contains a magic number: var uniqueAddress = new UniqueAddress(address' 17);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_Leave,The following statement contains a magic number: var address = new Address("akka.tcp"' "system"' "some.host.org"' 4711);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_Down,The following statement contains a magic number: var address = new Address("akka.tcp"' "system"' "some.host.org"' 4711);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_InitJoinAck,The following statement contains a magic number: var address = new Address("akka.tcp"' "system"' "some.host.org"' 4711);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_InitJoinNack,The following statement contains a magic number: var address = new Address("akka.tcp"' "system"' "some.host.org"' 4711);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_ClusterRouterPool,The following statement contains a magic number: var roundRobinPool = new RoundRobinPool(nrOfInstances: 4);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_ClusterRouterPool,The following statement contains a magic number: var clusterRouterPoolSettings = new ClusterRouterPoolSettings(2' 5' true' "Richard' Duke");
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_ClusterRouterPool,The following statement contains a magic number: var clusterRouterPoolSettings = new ClusterRouterPoolSettings(2' 5' true' "Richard' Duke");
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_ClusterRouterPoolWithEmptyRole,The following statement contains a magic number: var roundRobinPool = new RoundRobinPool(nrOfInstances: 4);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_ClusterRouterPoolWithEmptyRole,The following statement contains a magic number: var clusterRouterPoolSettings = new ClusterRouterPoolSettings(2' 5' true' null);
Magic Number,Akka.Cluster.Tests.Serialization,ClusterMessageSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\Serialization\ClusterMessageSerializerSpec.cs,Can_serialize_ClusterRouterPoolWithEmptyRole,The following statement contains a magic number: var clusterRouterPoolSettings = new ClusterRouterPoolSettings(2' 5' true' null);
Missing Default,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The following switch statement is missing a default case: switch (operation)                      {                          case Add:                              if (node != selfUniqueAddress && !state.Ring.Nodes.Contains(node))                              {                                  var oldUnreachable = state.OldReceiversNowUnreachable;                                  state = state.AddMember(node);                                  //keep unreachable                                  oldUnreachable.Except(state.ActiveReceivers).Should().BeEquivalentTo(ImmutableHashSet<UniqueAddress>.Empty);                                  state.FailureDetector.IsMonitoring(node.Address).Should().BeFalse();                                  state.FailureDetector.IsAvailable(node.Address).Should().BeTrue();                              }                              break;                          case Remove:                              if (node != selfUniqueAddress && state.Ring.Nodes.Contains(node))                              {                                  var oldUnreachable = state.OldReceiversNowUnreachable;                                  state = state.RemoveMember(node);                                  // keep unreachable' unless it was the removed                                  if (oldUnreachable.Contains(node))                                      oldUnreachable.Except(state.ActiveReceivers).Should().BeEquivalentTo(ImmutableHashSet.Create(node));                                  else                                      oldUnreachable.Except(state.ActiveReceivers).Should().BeEquivalentTo(ImmutableHashSet<UniqueAddress>.Empty);                                    state.FailureDetector.IsMonitoring(node.Address).Should().BeFalse();                                  state.FailureDetector.IsAvailable(node.Address).Should().BeTrue();                                  state.ActiveReceivers.Should().NotContain(node);                              }                              break;                          case Unreachable:                              if (node != selfUniqueAddress && state.ActiveReceivers.Contains(node))                              {                                  state.FailureDetector.Heartbeat(node.Address); //make sure the FD is created                                  Fd(state' node).MarkNodeAsUnavailable();                                  state.FailureDetector.IsMonitoring(node.Address).Should().BeTrue();                                  state.FailureDetector.IsAvailable(node.Address).Should().BeFalse();                                  state = state.UnreachableMember(node);                              }                              break;                          case HeartbeatRsp:                              if (node != selfUniqueAddress && state.Ring.Nodes.Contains(node))                              {                                  var oldUnreachable = state.OldReceiversNowUnreachable;                                  var oldReceivers = state.ActiveReceivers;                                  var oldRingReceivers = state.Ring.MyReceivers.Value;                                  state = state.HeartbeatRsp(node);                                    if (oldUnreachable.Contains(node))                                      state.OldReceiversNowUnreachable.Should().NotContain(node);                                    if (oldUnreachable.Contains(node) && !oldRingReceivers.Contains(node))                                      state.FailureDetector.IsMonitoring(node.Address).Should().BeFalse();                                    if (oldRingReceivers.Contains(node))                                      state.FailureDetector.IsMonitoring(node.Address).Should().BeTrue();                                    state.Ring.MyReceivers.Value.Should().BeEquivalentTo(oldRingReceivers);                                  state.FailureDetector.IsAvailable(node.Address).Should().BeTrue();                              }                              break;                      }
