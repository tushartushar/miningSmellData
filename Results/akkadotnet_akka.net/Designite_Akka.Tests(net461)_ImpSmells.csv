Implementation smell,Namespace,Class,File,Method,Description
Long Method,Akka.Tests.Actor,StateMachine,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The method has 159 lines of code.
Complex Method,Akka.Tests.Event,LoggerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Event\LoggerSpec.cs,LoggingAdapter_should_log_all_information,Cyclomatic complexity of the method is 9
Complex Method,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_behave_exactly_as_the_ideal_token_bucket_if_offer_is_called_with_perfect_timing,Cyclomatic complexity of the method is 14
Long Parameter List,Akka.Tests.Actor,TestScheduler,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,ScheduleTellOnce,The method has 5 parameters. Parameters: delay' receiver' message' sender' cancelable
Long Parameter List,Akka.Tests.Actor,TestScheduler,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,ScheduleTellRepeatedly,The method has 5 parameters. Parameters: initialDelay' interval' receiver' message' sender
Long Parameter List,Akka.Tests.Actor,TestScheduler,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,ScheduleTellRepeatedly,The method has 6 parameters. Parameters: initialDelay' interval' receiver' message' sender' cancelable
Long Parameter List,Akka.Tests.Actor,FailedSupervisorStrategy,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,ProcessFailure,The method has 6 parameters. Parameters: context' restart' child' cause' stats' children
Long Parameter List,Akka.Tests.Actor,Failure,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,Failure,The method has 7 parameters. Parameters: directive' stop' depth' failPre' failPost' failConstr' stopKids
Long Parameter List,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,AssertRefDefaultZero,The method has 9 parameters. Parameters: actorRef' dispatcher' suspensions' resumes' registers' unregisters' msgsReceived' msgsProcessed' restarts
Long Parameter List,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,AssertRef,The method has 9 parameters. Parameters: actorRef' suspensions' resumes' registers' unregisters' msgsReceived' msgsProcessed' restarts' dispatcher
Long Parameter List,Akka.Tests.Actor.Dispatch,MessageDispatcherInterceptor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,MessageDispatcherInterceptor,The method has 6 parameters. Parameters: configurator' id' throughput' throughputDeadlineTime' executorServiceFactory' shutdownTimeout
Long Parameter List,Akka.Tests.Actor.Scheduler,ShutdownScheduler,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\SchedulerShutdownSpec.cs,InternalScheduleTellOnce,The method has 5 parameters. Parameters: delay' receiver' message' sender' cancelable
Long Parameter List,Akka.Tests.Actor.Scheduler,ShutdownScheduler,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\SchedulerShutdownSpec.cs,InternalScheduleTellRepeatedly,The method has 6 parameters. Parameters: initialDelay' interval' receiver' message' sender' cancelable
Long Parameter List,Akka.Tests.MatchHandler,DummyCompiler<T>,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchHandlerBuilderTests.cs,CompileToMethod,The method has 6 parameters. Parameters: handlers' capturedArguments' signature' typeBuilder' methodName' methodAttributes
Long Parameter List,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_correctly_calculate_the_delay,The method has 5 parameters. Parameters: restartCount' minBackoff' maxBackoff' randomFactor' expectedResult
Long Identifier,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliable_deny_creation_of_actors_while_shutting_down,The length of the parameter nonTerminatedOrNonstartedActors is 31.
Long Identifier,Akka.Tests.Actor,LocalActorRefProviderSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\LocalActorRefProviderSpec.cs,An_ActorRefFactory_must_throw_suitable_exceptions_for_malformed_actor_names,The length of the parameter expectedExceptionMessageSubstring is 33.
Long Identifier,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,,The length of the parameter InternalConnectionActorMaxQueueSize is 35.
Long Identifier,Akka.Tests.MatchHandler,DummyMatchExpressionBuilder,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\CachedMatchCompilerTests.cs,,The length of the parameter CreateArgumentValuesArrayCalls is 30.
Long Identifier,Akka.Tests.MatchHandler,DummyMatchExpressionBuilder,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\CachedMatchCompilerTests.cs,,The length of the parameter CreateArgumentValuesArrayResult is 31.
Long Identifier,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun,The length of the parameter numberOfCallsToUpdateWhenSignaled is 33.
Long Identifier,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_using_tuples,The length of the parameter numberOfCallsToUpdateWhenSignaled is 33.
Long Identifier,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_but_as_the_break_condition_is_fulfilled_it_do_not_update,The length of the parameter numberOfCallsToUpdateWhenSignaled is 33.
Long Statement,Akka.Tests.Actor,ActorLookupSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLookupSpec.cs,ActorSystem_must_find_temporary_actors,The length of the statement  "            Provider.ResolveActorRef(a.Path.ToString() + "/hello").AsInstanceOf<IInternalActorRef>().IsTerminated.Should().Be(true); " is 120.
Long Statement,Akka.Tests.Actor,ActorPathSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,ActorPath_Parse_HandlesCasing_ForLocal,The length of the statement  "            //In Akka' at least the system name is case-sensitive' see http://doc.akka.io/docs/akka/current/additional/faq.html#what-is-the-name-of-a-remote-actor             " is 150.
Long Statement,Akka.Tests.Actor,ActorPathSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,ActorPath_Parse_HandlesCasing_ForRemote,The length of the statement  "            //In Akka' at least the system name is case-sensitive' see http://doc.akka.io/docs/akka/current/additional/faq.html#what-is-the-name-of-a-remote-actor             " is 150.
Long Statement,Akka.Tests.Actor,ActorPathSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,Have_correct_path_elements,The length of the statement  "            (new RootActorPath(new Address("akka.tcp"' "mysys")) / "user" / "foo" / "bar").Elements.ShouldOnlyContainInOrder(new[] { "user"' "foo"' "bar" }); " is 145.
Long Statement,Akka.Tests.Actor,ActorProducerPipelineTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,Pipeline_should_allow_to_register_multiple_generic_plugins_with_different_generic_types,The length of the statement  "            plugA.Ask<string[]>("plugins"' TimeSpan.FromSeconds(3)).Result.ShouldOnlyContainInOrder("working plugin"' typeof(PlugActorA).ToString()); " is 137.
Long Statement,Akka.Tests.Actor,ActorProducerPipelineTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,Pipeline_should_allow_to_register_multiple_generic_plugins_with_different_generic_types,The length of the statement  "            plugB.Ask<string[]>("plugins"' TimeSpan.FromSeconds(3)).Result.ShouldOnlyContainInOrder("working plugin"' typeof(PlugActorB).ToString()); " is 137.
Long Statement,Akka.Tests.Actor,ActorProducerPipelineTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,Pipeline_application_should_apply_plugins_in_specified_order,The length of the statement  "            actor.Ask<string[]>("plugins"' TimeSpan.FromSeconds(3)).Result.ShouldOnlyContainInOrder("plugin-1"' "plugin-2"' "plugin-3"); " is 124.
Long Statement,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_send_messages_with_correct_sender,The length of the statement  "            //Three messages because the selection includes the TestActor' GetSender -> TestActor + response from c1 and c2 to TestActor " is 124.
Long Statement,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Support_using_a_custom_scheduler,The length of the statement  "            var actorSystem = ActorSystem.Create(Guid.NewGuid().ToString()' DefaultConfig.WithFallback("akka.scheduler.implementation = \"Akka.Tests.Actor.TestScheduler' Akka.Tests\"")); " is 174.
Long Statement,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Allow_configuration_of_guardian_supervisor_strategy,The length of the statement  "            var config = ConfigurationFactory.ParseString("akka.actor.guardian-supervisor-strategy=\"Akka.Actor.StoppingSupervisorStrategy\"") " is 130.
Long Statement,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Shutdown_when_userguardian_escalates,The length of the statement  "            var config = ConfigurationFactory.ParseString("akka.actor.guardian-supervisor-strategy=\"Akka.Tests.Actor.TestStrategy' Akka.Tests\"") " is 134.
Long Statement,Akka.Tests.Actor,AskSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\AskSpec.cs,Can_cancel_when_asking_actor,The length of the statement  "                await Assert.ThrowsAsync<TaskCanceledException>(async () => await actor.Ask<string>("timeout"' Timeout.InfiniteTimeSpan' cts.Token)); " is 133.
Long Statement,Akka.Tests.Actor,AskSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\AskSpec.cs,Cancelled_ask_with_timeout_should_remove_temp_actor,The length of the statement  "                await Assert.ThrowsAsync<TaskCanceledException>(async () => await actor.Ask<string>("cancel"' TimeSpan.FromSeconds(30)' cts.Token)); " is 132.
Long Statement,Akka.Tests.Actor,CoordinatedShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\CoordinatedShutdownSpec.cs,CheckTopologicalSort,The length of the statement  "                        $"phase [{p}] depends on [{depPhase}] but was ordered before it in topological sort result {string.Join("->"' result)}"); " is 121.
Long Statement,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,Bug209_any_user_messages_following_a_Terminate_message_should_be_forwarded_to_DeadLetterMailbox,The length of the statement  "            //The actor should Terminate' exchange the mailbox to a DeadLetterMailbox and forward the user message to the DeadLetterMailbox " is 127.
Long Statement,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_notify_with_current_monitors_with_one_Terminated_message_when_Actor_is_stopped,The length of the statement  "            var monitor2 = Sys.ActorOf(Props.Create(() => new WatchAndUnwatchMonitor(_terminal' TestActor)).WithDeploy(Deploy.Local)); " is 122.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_not_get_confused_between_named_and_state_timers,The length of the statement  "            ExpectMsg(new Transition<FsmState>(fsm' FsmState.TestCancelStateTimerInNamedTimerMessage' FsmState.TestCancelStateTimerInNamedTimerMessage2)' 500.Milliseconds()); " is 162.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_notify_unhandled_messages,The length of the statement  "            //    .Warning("unhandled event Akka.Tests.Actor.FSMTimingSpec+Tick in state TestUnhandled"' source: fsm.Path.ToString()) " is 121.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_notify_unhandled_messages,The length of the statement  "            //    .Warning("unhandled event Akka.Tests.Actor.FSMTimingSpec+Unhandled in state TestUnhandled"' source: fsm.Path.ToString()) " is 126.
Long Statement,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Select_WithClient_should_update_Client_and_copy_the_rest_of_the_properties_BUG_427,The length of the statement  "            var actorRef = new EmptyLocalActorRef(((ActorSystemImpl)Sys).Provider' new RootActorPath(new Address("akka"' "test"))' Sys.EventStream); " is 136.
Long Statement,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Select_WithClient_should_update_Client_and_copy_the_rest_of_the_properties_BUG_427,The length of the statement  "            var updatedActorRef = new EmptyLocalActorRef(((ActorSystemImpl)Sys).Provider' new RootActorPath(new Address("akka2"' "test2"))' Sys.EventStream); " is 145.
Long Statement,Akka.Tests.Actor,LocalActorRefProviderSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\LocalActorRefProviderSpec.cs,An_ActorRefFactory_must_only_create_one_instance_of_an_actor_with_a_specific_address_in_a_concurrent_environment,The length of the statement  "                var actors = Enumerable.Range(0' 4).Select(x => Task.Run(() => Sys.ActorOf(Props.Create(() => new BlackHoleActor())' address))).ToArray(); " is 138.
Long Statement,Akka.Tests.Actor,LocalActorRefProviderSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\LocalActorRefProviderSpec.cs,An_ActorRefFactory_must_only_create_one_instance_of_an_actor_with_a_specific_address_in_a_concurrent_environment,The length of the statement  "                Assert.True(actors.Any(x => x.Status == TaskStatus.RanToCompletion && x.Result != null)' "Failed to create any Actors"); " is 120.
Long Statement,Akka.Tests.Actor,LocalActorRefProviderSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\LocalActorRefProviderSpec.cs,An_ActorRefFactory_must_only_create_one_instance_of_an_actor_with_a_specific_address_in_a_concurrent_environment,The length of the statement  "                Assert.True(actors.Any(x => x.Status == TaskStatus.Faulted && x.Exception.InnerException is InvalidActorNameException)' "Succeeded in creating all Actors. Some should have failed."); " is 182.
Long Statement,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,IpEndPoints,The length of the statement  "            // TODO: Mono does not support IPV6 Uris correctly https://bugzilla.xamarin.com/show_bug.cgi?id=43649 (Aaronontheweb 9/13/2016) " is 127.
Long Statement,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,AllEndpoints,The length of the statement  "            // TODO: Mono does not support IPV6 Uris correctly https://bugzilla.xamarin.com/show_bug.cgi?id=43649 (Aaronontheweb 9/13/2016) " is 127.
Long Statement,Akka.Tests.Actor,RemotePathParsingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,Address_should_parse_from_any_valid_EndPoint,The length of the statement  "            return parsedAddr.Equals(addr).Label($"Should be able to parse endpoint to address and back; expected {addr} but was {parsedAddr}"); " is 132.
Long Statement,Akka.Tests.Actor,RemotePathParsingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,ActorPath_Should_parse_from_any_valid_EndPoint,The length of the statement  "            return actorPath.Equals(reparsedActorPath).Label($"Should be able to parse endpoint to ActorPath and back; expected {actorPath.ToSerializationFormat()} but was {reparsedActorPath.ToSerializationFormat()}"); " is 206.
Long Statement,Akka.Tests.Actor,RepointableActorRefSpecs,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RepointableActorRefSpecs.cs,Fix2128_RepointableActorRef_multiple_enumerations,The length of the statement  "            var actor = Sys.ActorOf(Props.Create(() => new Bug2182Actor()).WithDispatcher("akka.test.calling-thread-dispatcher")' "buggy"); " is 127.
Long Statement,Akka.Tests.Actor,RootGuardianActorRef_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RootGuardianActorRef_Tests.cs,Path_Should_be_the_same_path_as_specified,The length of the statement  "            var rootGuardianActorRef = new RootGuardianActorRef((ActorSystemImpl) Sys' props' _dispatcher' Sys.Mailboxes.GetMailboxType(props' _dispatcher.Configurator.Config)' ActorRefs.Nobody' _rootActorPath' _deadLetters' _emptyExtraNames); " is 231.
Long Statement,Akka.Tests.Actor,RootGuardianActorRef_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RootGuardianActorRef_Tests.cs,Parent_Should_be_itself,The length of the statement  "            var rootGuardianActorRef = new RootGuardianActorRef((ActorSystemImpl) Sys' props' _dispatcher' Sys.Mailboxes.GetMailboxType(props' _dispatcher.Configurator.Config)' ActorRefs.Nobody' _rootActorPath' _deadLetters' _emptyExtraNames); " is 231.
Long Statement,Akka.Tests.Actor,RootGuardianActorRef_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RootGuardianActorRef_Tests.cs,Getting_temp_child_Should_return_tempContainer,The length of the statement  "            var rootGuardianActorRef = new RootGuardianActorRef((ActorSystemImpl)Sys' props' _dispatcher' Sys.Mailboxes.GetMailboxType(props' _dispatcher.Configurator.Config)' ActorRefs.Nobody' _rootActorPath' _deadLetters' _emptyExtraNames); " is 230.
Long Statement,Akka.Tests.Actor,RootGuardianActorRef_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RootGuardianActorRef_Tests.cs,Getting_deadLetters_child_Should_return_tempContainer,The length of the statement  "            var rootGuardianActorRef = new RootGuardianActorRef((ActorSystemImpl)Sys' props' _dispatcher' Sys.Mailboxes.GetMailboxType(props' _dispatcher.Configurator.Config)' ActorRefs.Nobody' _rootActorPath' _deadLetters' _emptyExtraNames); " is 230.
Long Statement,Akka.Tests.Actor,RootGuardianActorRef_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RootGuardianActorRef_Tests.cs,Getting_a_child_that_exists_in_extraNames_Should_return_the_child,The length of the statement  "            var rootGuardianActorRef = new RootGuardianActorRef((ActorSystemImpl)Sys' props' _dispatcher' Sys.Mailboxes.GetMailboxType(props' _dispatcher.Configurator.Config)' ActorRefs.Nobody' _rootActorPath' _deadLetters' extraNames); " is 224.
Long Statement,Akka.Tests.Actor,RootGuardianActorRef_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RootGuardianActorRef_Tests.cs,Getting_an_unknown_child_that_exists_in_extraNames_Should_return_nobody,The length of the statement  "            var rootGuardianActorRef = new RootGuardianActorRef((ActorSystemImpl)Sys' props' _dispatcher' Sys.Mailboxes.GetMailboxType(props' _dispatcher.Configurator.Config)' ActorRefs.Nobody' _rootActorPath' _deadLetters' _emptyExtraNames); " is 230.
Long Statement,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_Restart_Manager_And_Workers_In_AllForOne,The length of the statement  "            var managerProps = new PropsWithName(Props.Create(() => new CountDownActor(countDown' new AllForOneStrategy(decider)))' "manager"); " is 131.
Long Statement,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_must_send_notifications_to_supervisor_when_permanent_failure,The length of the statement  "                var crasher = ctx.ActorOf(Props.Create(() => new CountDownActor(countDownMessages' SupervisorStrategy.DefaultStrategy))' "crasher"); " is 132.
Long Statement,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_handle_failure_in_creation_when_supervision_strategy_returns_Resume_and_Restart,The length of the statement  "                        resumerDsl.Strategy = new OneForOneStrategy(ex => ex is ActorInitializationException ? (createAttempt.Current % 2 == 0 ? Directive.Resume : Directive.Restart) : Directive.Escalate); " is 181.
Long Statement,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The length of the statement  "            var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart)))); " is 143.
Long Statement,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The length of the statement  "            var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart)))); " is 143.
Long Statement,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test3,The length of the statement  "            var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart)))); " is 143.
Long Statement,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,AssertDispatcher,The length of the statement  "                Sys.EventStream.Publish(new Error(ex' dispatcher.ToString()' dispatcher.GetType()' $"actual: stops={dispatcher.Stops.Current}' required: stops={stops}")); " is 154.
Long Statement,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_process_messages_one_at_a_time,The length of the statement  "            AssertCountdown(start' (int)Dilated(TimeSpan.FromSeconds(3.0)).TotalMilliseconds' "Should process first message within 3 seconds"); " is 131.
Long Statement,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_process_messages_one_at_a_time,The length of the statement  "            AssertCountdown(oneAtTime' (int)Dilated(TimeSpan.FromSeconds(1.5)).TotalMilliseconds' "Should process message when allowed"); " is 125.
Long Statement,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_should_not_process_messages_for_a_suspended_actor,The length of the statement  "            AssertCountdown(done' (int)Dilated(TimeSpan.FromSeconds(3.0)).TotalMilliseconds' "Should resume processing of messages when resumed"); " is 134.
Long Statement,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_should_not_process_messages_for_a_suspended_actor,The length of the statement  "            AssertRefDefaultZero(a' dispatcher' registers: 1' unregisters: 1' msgsReceived: 1' msgsProcessed: 1' suspensions: 1' resumes: 1); " is 129.
Long Statement,Akka.Tests.Actor.Dispatch,DispatcherModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_process_messages_in_parallel,The length of the statement  "            AssertCountdown(aStart' (int)Dilated(TimeSpan.FromSeconds(3)).TotalMilliseconds' "Should process first message within 3 seconds"); " is 130.
Long Statement,Akka.Tests.Actor.Dispatch,DispatcherModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_process_messages_in_parallel,The length of the statement  "            AssertCountdown(bParallel' (int)Dilated(TimeSpan.FromSeconds(3)).TotalMilliseconds' "Should process other actors in parallel"); " is 127.
Long Statement,Akka.Tests.Actor.Dispatch,DispatcherModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_process_messages_in_parallel,The length of the statement  "            SpinWait.SpinUntil(() => a.AsInstanceOf<IInternalActorRef>().IsTerminated && b.AsInstanceOf<IInternalActorRef>().IsTerminated); " is 127.
Long Statement,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleRepeatedly_in_milliseconds_Tests_and_verify_the_interval,The length of the statement  "                            "Expected the interval between message {1} and {2} to deviate maximum 10% from {0}. It was {3} ms between the messages. It deviated {4}%"' " is 138.
Long Statement,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellRepeatedly_in_milliseconds_Tests,The length of the statement  "                            "Expected the interval between message {1} and {2} to deviate maximum 10% from {0}. It was {3} ms between the messages. It deviated {4}%"' " is 138.
Long Statement,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_block_ask_message_loop,The length of the statement  "            var asker = Sys.ActorOf(Props.Create(() => new BlockingAsker(actor)).WithDispatcher("akka.actor.task-dispatcher")' "Asker"); " is 124.
Long Statement,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_priority_mailbox,The length of the statement  "            AwaitCondition(() => (((ActorRefWithCell)actor).Underlying is ActorCell) && ((ActorRefWithCell)actor).Underlying.AsInstanceOf<ActorCell>().Mailbox.IsSuspended()); " is 162.
Long Statement,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_stable_priority_mailbox,The length of the statement  "            AwaitCondition(() => (((ActorRefWithCell)actor).Underlying is ActorCell) && ((ActorRefWithCell)actor).Underlying.AsInstanceOf<ActorCell>().Mailbox.IsSuspended()); " is 162.
Long Statement,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Priority_mailbox_keeps_ordering_with_many_priority_values,The length of the statement  "            AwaitCondition(()=> (((ActorRefWithCell)actor).Underlying is ActorCell) && ((ActorRefWithCell)actor).Underlying.AsInstanceOf<ActorCell>().Mailbox.IsSuspended()); " is 161.
Long Statement,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Unbounded_Priority_Mailbox_Supports_Unbounded_Stashing,The length of the statement  "            AwaitCondition(() => (((ActorRefWithCell)actor).Underlying is ActorCell) && ((ActorRefWithCell)actor).Underlying.AsInstanceOf<ActorCell>().Mailbox.IsSuspended()); " is 162.
Long Statement,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Unbounded_Stable_Priority_Mailbox_Supports_Unbounded_Stashing,The length of the statement  "            AwaitCondition(() => (((ActorRefWithCell)actor).Underlying is ActorCell) && ((ActorRefWithCell)actor).Underlying.AsInstanceOf<ActorCell>().Mailbox.IsSuspended()); " is 162.
Long Statement,Akka.Tests.Event,LoggerMailboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Event\LoggerMailboxSpec.cs,CleanUp_drains_queue,The length of the statement  "            loggerMailbox.SetActor((ActorCell)TestActor.AsInstanceOf<ActorRefWithCell>().Underlying); // mailboxes won't cleanup without an actorcell set " is 141.
Long Statement,Akka.Tests.IO,SimpleDnsCacheSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_be_updated_with_the_latest_resolved,The length of the statement  "            var cacheEntryOne = Dns.Resolved.Create("test.local"' System.Net.Dns.GetHostEntryAsync("127.0.0.1").Result.AddressList); " is 120.
Long Statement,Akka.Tests.IO,SimpleDnsCacheSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_be_updated_with_the_latest_resolved,The length of the statement  "            var cacheEntryTwo = Dns.Resolved.Create("test.local"' System.Net.Dns.GetHostEntryAsync("127.0.0.1").Result.AddressList); " is 120.
Long Statement,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_properly_support_connecting_to_DNS_endpoints,The length of the statement  "            bindCommander.Send(Sys.Tcp()' new Tcp.Bind(serverHandler.Ref' new IPEndPoint(family == AddressFamily.InterNetwork ? IPAddress.Loopback  " is 134.
Long Statement,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,Write_before_Register_should_Be_dropped_if_buffer_is_full,The length of the statement  "                var serverMsgs = actors.ServerHandler.ReceiveWhile(o => o as Tcp.Received' RemainingOrDefault' TimeSpan.FromSeconds(2)); " is 120.
Long Statement,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,When_multiple_concurrent_writing_clients_Should_not_lose_messages,The length of the statement  "                var clients = Enumerable.Range(0' clientsCount).Select(i => (Index: i' Probe: CreateTestProbe($"test-client-{i}"))).ToArray(); " is 126.
Long Statement,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,When_multiple_writing_clients_Should_receive_messages_in_order,The length of the statement  "                var clients = Enumerable.Range(0' clientsCount).Select(i => (Index: i' Probe: CreateTestProbe($"test-client-{i}"))).ToArray(); " is 126.
Long Statement,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_properly_complete_one_client_server_request_response_cycle,The length of the statement  "                actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(ByteString.FromString("Captain on the bridge!")' Aye.Instance)); " is 132.
Long Statement,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_properly_complete_one_client_server_request_response_cycle,The length of the statement  "                actors.ServerHandler.Send(actors.ServerConnection' Tcp.Write.Create(ByteString.FromString("For the king!")' Yes.Instance)); " is 123.
Long Statement,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_support_waiting_for_writes_with_backpressure,The length of the statement  "                actors.ServerHandler.Send(actors.ServerConnection' Tcp.Write.Create(ByteString.FromBytes(new byte[100000])' Ack.Instance)); " is 123.
Long Statement,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,ChitChat,The length of the statement  "                actors.ServerHandler.ExpectMsg<Tcp.Received>(x => x.Data.Count == 1 && x.Data[0] == 0' hint: $"server didn't received at {i} round"); " is 133.
Long Statement,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,ChitChat,The length of the statement  "                actors.ClientHandler.ExpectMsg<Tcp.Received>(x => x.Data.Count == 1 && x.Data[0] == 0' hint: $"client didn't received at {i} round"); " is 133.
Long Statement,Akka.Tests.IO,UdpConnectedIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpConnectedIntegrationSpec.cs,ConnectUdp,The length of the statement  "            commander.Send(UdpConnected.Instance.Apply(Sys).Manager' new UdpConnected.Connect(handler' remoteAddress' localAddress)); " is 121.
Long Statement,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_SocketOption_afterConnect_method_after_binding,The length of the statement  "            commander.Send(Udp.Instance.Apply(Sys).Manager' new Udp.Bind(TestActor' _addresses[3]' options: new[] { assertOption })); " is 121.
Long Statement,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_DatagramChannelCreator_create_method_when_opening_channel,The length of the statement  "            commander.Send(Udp.Instance.Apply(Sys).Manager' new Udp.Bind(TestActor' _addresses[4]' options: new[] { assertOption })); " is 121.
Long Statement,Akka.Tests.MatchHandler,CachedMatchCompilerTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\CachedMatchCompilerTests.cs,When_compiling_first_time_correct_calls_are_made_to_MatchExpressionBuilder_and_PartialActionBuilder,The length of the statement  "            AssertOneCall(to: matchExpressionBuilder.BuildLambdaExpressionCalls' withArgument: typeHandlers' description: "BuildLambdaExpression"); " is 135.
Long Statement,Akka.Tests.MatchHandler,CachedMatchCompilerTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\CachedMatchCompilerTests.cs,When_compiling_first_time_correct_calls_are_made_to_MatchExpressionBuilder_and_PartialActionBuilder,The length of the statement  "            AssertOneCall(to: partialActionBuilder.BuildCalls' description: "Build"' check: i => ReferenceEquals(i.CompiledDelegate' deleg) && ReferenceEquals(i.DelegateArguments' argumentValues)); " is 185.
Long Statement,Akka.Tests.MatchHandler,CachedMatchCompilerTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\CachedMatchCompilerTests.cs,When_compiling_second_time_with_same_signature_the_cached_version_should_be_used,The length of the statement  "            AssertOneCall(to: matchExpressionBuilder.CreateArgumentValuesArrayCalls' withArgument: arguments' description: "CreateArgumentValuesArray"); " is 140.
Long Statement,Akka.Tests.MatchHandler,CachedMatchCompilerTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\CachedMatchCompilerTests.cs,When_compiling_second_time_with_same_signature_the_cached_version_should_be_used,The length of the statement  "            AssertOneCall(to: partialActionBuilder.BuildCalls' description: "Build"' check: i => ReferenceEquals(i.CompiledDelegate' deleg) && ReferenceEquals(i.DelegateArguments' argumentValues)); " is 185.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The length of the statement  "            var lambda = (Func<object' Action<String>' Predicate<string>' Action<String>' Predicate<string>' bool>)result.LambdaExpression.Compile(); " is 137.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The length of the statement  "            var lambda = (Func<object' Action<String>' Predicate<string>' Action<int>' Predicate<int>' bool>)result.LambdaExpression.Compile(); " is 131.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_three_funcs_for_two_different_types,The length of the statement  "            var lambda = (Func<object' Func<String' bool>' Func<int' bool>' Func<String' bool>' bool>)result.LambdaExpression.Compile(); " is 124.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_exactly_15_arguments,The length of the statement  "            var lambda = (Func<object' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<int>' bool>) " is 291.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_exactly_15_arguments,The length of the statement  "            lambda("some value"' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionInt); " is 249.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_exactly_15_arguments,The length of the statement  "            lambda(4711' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionInt); " is 241.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The length of the statement  "            var lambda = (Func<object' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' object[]' bool>) " is 288.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The length of the statement  "            lambda("some value"' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' extraParamsArray); " is 256.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The length of the statement  "            lambda(4711' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' extraParamsArray); " is 248.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The length of the statement  "            lambda(42' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' extraParamsArray); " is 246.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_that_expects_base_type,The length of the statement  "            Action<object> action = s => { updatedValue = s is string ? "WasString:" + (string)s : "WasNotString" + s.ToString(); }; " is 120.
Long Statement,Akka.Tests.MatchHandler,MatchHandlerBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchHandlerBuilderTests.cs,Test_that_signatures_are_equal,The length of the statement  "            AssertSameSignatures<object>(bldr => bldr.MatchAny(_ => { })' bldr => bldr.Match<object>(o => { str = o.ToString(); })); " is 120.
Long Statement,Akka.Tests.MatchHandler,MatchHandlerBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchHandlerBuilderTests.cs,Test_that_signatures_are_equal,The length of the statement  "            AssertSameSignatures<object>(bldr => bldr.Match<string>(s => { }' s => true)' bldr => bldr.Match<string>(s => { }' s => false)); " is 128.
Long Statement,Akka.Tests.MatchHandler,MatchHandlerBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchHandlerBuilderTests.cs,Test_that_signatures_differs,The length of the statement  "            AssertDifferentSignatures<object>(bldr => bldr.Match<string>(_ => { })' bldr => bldr.Match<string>(_ => { }' s => s == null)); " is 126.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8) => " is 122.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) => " is 133.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) => " is 146.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) => " is 156.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) => " is 168.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) => " is 181.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) => " is 191.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) => " is 202.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The length of the statement  "            var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" }; " is 123.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The length of the statement  "            Assert.Throws<ArgumentException>(() => ((Action) (() => builder.Build<object>(new CompiledMatchHandlerWithArguments(null' delegateArguments))))()); " is 147.
Long Statement,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_accept_commands_while_child_is_terminating,The length of the statement  "            var options = Backoff.OnFailure(SlowlyFailingActor.Props(postStopLatch)' "someChildName"' 1.Ticks()' 1.Ticks()' 0.0' -1) " is 120.
Long Statement,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_reply_to_sender_if_replyWhileStopped_is_specified,The length of the statement  "                var supervisor = Create(Backoff.OnFailure(Child.Props(TestActor)' "c1"' TimeSpan.FromSeconds(100)' TimeSpan.FromSeconds(300)' 0.2' -1) " is 134.
Long Statement,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_not_reply_to_sender_if_replyWhileStopped_is_not_specified,The length of the statement  "                var supervisor = Create(Backoff.OnFailure(Child.Props(TestActor)' "c1"' TimeSpan.FromSeconds(100)' TimeSpan.FromSeconds(300)' 0.2' -1)); " is 136.
Long Statement,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_stop_restarting_the_child_if_final_stop_message_received_using_BackOff_OnStop,The length of the statement  "            var supervisor = Create(OnStopOptions(maxNrOfRetries: 100).WithFinalStopMessage(message => ReferenceEquals(message' stopMessage))); " is 131.
Long Statement,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_not_stop_when_final_stop_message_has_not_been_received,The length of the statement  "            var supervisor = Create(OnStopOptions(maxNrOfRetries: 100).WithFinalStopMessage(message => ReferenceEquals(message' stopMessage))); " is 131.
Long Statement,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsClosed,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Increment_FailureCount_When_Call_Fails,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithSyncCircuitBreaker( ThrowException ) ) ); " is 121.
Long Statement,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsClosed,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Reset_FailureCount_When_Call_Succeeds,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithSyncCircuitBreaker( ThrowException ) ) ); " is 121.
Long Statement,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsHalfOpen,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Pass_Call_And_Transition_To_Open_On_Exception,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithSyncCircuitBreaker( ThrowException ) ) ); " is 121.
Long Statement,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsHalfOpen,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Pass_Call_And_Transition_To_Open_On_Exception,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithSyncCircuitBreaker( ThrowException ) ) ); " is 121.
Long Statement,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsOpen,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Throw_Exceptions_Before_Reset_Timeout,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithSyncCircuitBreaker( ThrowException ) ) ); " is 121.
Long Statement,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsOpen,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Throw_Exceptions_Before_Reset_Timeout,The length of the statement  "            Assert.True( InterceptExceptionType<OpenCircuitException>( ( ) => breaker.Instance.WithSyncCircuitBreaker( ThrowException ) ) ); " is 128.
Long Statement,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsOpen,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Transition_To_Half_Open_When_Reset_Times_Out,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithSyncCircuitBreaker( ThrowException ) ) ); " is 121.
Long Statement,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsClosed,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Increment_Failure_Count_When_Call_Fails,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithCircuitBreaker( () => Task.Run( ( ) => ThrowException( ) ) ).Wait( AwaitTimeout ) ) ); " is 166.
Long Statement,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsHalfOpen,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Pass_Call_And_Transition_To_Close_On_Success,The length of the statement  "            InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithCircuitBreaker( () => Task.Factory.StartNew( ThrowException ) ) ); " is 133.
Long Statement,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsHalfOpen,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Pass_Call_And_Transition_To_Open_On_Exception,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithCircuitBreaker( () => Task.Factory.StartNew( ThrowException ) ).Wait( ) ) ); " is 156.
Long Statement,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsHalfOpen,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Pass_Call_And_Transition_To_Open_On_Exception,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithCircuitBreaker( () => Task.Factory.StartNew( ThrowException ) ).Wait( ) ) ); " is 156.
Long Statement,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsOpen,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Throw_Exceptions_When_Called_Before_Reset_Timeout,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithCircuitBreaker( () => Task.Factory.StartNew( ThrowException ) ).Wait( ) ) ); " is 156.
Long Statement,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsOpen,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Throw_Exceptions_When_Called_Before_Reset_Timeout,The length of the statement  "            Assert.True( InterceptExceptionType<OpenCircuitException>( ( ) => breaker.Instance.WithCircuitBreaker( () => Task.Factory.StartNew( ThrowException ) ).Wait( ) ) ); " is 163.
Long Statement,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsOpen,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Transition_To_Half_Open_When_Reset_Timeout,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithCircuitBreaker( () => Task.Factory.StartNew( ThrowException ) ).Wait( ) ) ); " is 156.
Long Statement,Akka.Tests.Pattern,CircuitBreakerSpecBase,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,InterceptExceptionType,The length of the statement  "                    foreach ( var temp in aggregate.InnerExceptions.Select( innerException => innerException as T ).Where( temp => temp == null ) ) " is 127.
Long Statement,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_be_overridable_in_explicit_deployment,The length of the statement  "            var actor = Sys.ActorOf(FromConfig.Instance.Props(Props.Create<EchoProps>()).WithDeploy(new Deploy(new RoundRobinPool(12)))' "someOther"); " is 138.
Long Statement,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_be_overridable_in_config_even_with_explicit_deployment,The length of the statement  "            var actor = Sys.ActorOf(FromConfig.Instance.Props(Props.Create<EchoProps>()).WithDeploy(new Deploy(new RoundRobinPool(12)))' "config"); " is 135.
Long Statement,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_not_get_confused_when_trying_to_wildcard_configure_children,The length of the statement  "            var expected = new List<string> { "a"' "b"' "c" }.Select(i => Sys.ActorSelection("/user/weird/$" + i).ResolveOne(RemainingOrDefault).Result).ToList(); " is 150.
Long Statement,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_in_general_must_set_supplied_supervisorStrategy,The length of the statement  "            var router = Sys.ActorOf(new RoundRobinPool(1' null' escalator' Dispatchers.DefaultDispatcherId).Props(Props.Create<BlackHoleActor>())); " is 136.
Long Statement,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_in_general_must_set_supplied_supervisorStrategy,The length of the statement  "            var router2 = Sys.ActorOf(new RoundRobinPool(1).WithSupervisorStrategy(escalator).Props(Props.Create<BlackHoleActor>())); " is 121.
Long Statement,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_in_general_must_set_supplied_supervisorStrategy_for_FromConfig,The length of the statement  "            var router = Sys.ActorOf(FromConfig.Instance.WithSupervisorStrategy(escalator).Props(Props.Create<BlackHoleActor>())' "router1"); " is 129.
Long Statement,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_deliver_a_broadcast_message_using_tell,The length of the statement  "            var routedActor = Sys.ActorOf(new TailChoppingGroup(paths' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(100)).Props()); " is 125.
Long Statement,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_return_response_from_second_actor_after_inactivity_from_first_one,The length of the statement  "            var routedActor = Sys.ActorOf(new TailChoppingGroup(paths' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(50)).Props()); " is 124.
Long Statement,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_throw_exception_if_no_result_will_arrive_within_the_given_time,The length of the statement  "            var routedActor = Sys.ActorOf(new TailChoppingGroup(paths' TimeSpan.FromMilliseconds(300)' TimeSpan.FromMilliseconds(50)).Props()); " is 131.
Long Statement,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_reply_ASAP,The length of the statement  "            var routedActor = Sys.ActorOf(new TailChoppingGroup(paths' TimeSpan.FromSeconds(5)' TimeSpan.FromMilliseconds(100)).Props()); " is 125.
Long Statement,Akka.Tests.Util,ByteStringSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_ByteString_must_behave_as_expected_when_created_from_and_decoding_to_String,The length of the statement  "            Prop.ForAll((string s) => ByteString.FromString(s' Encoding.UTF8).ToString(Encoding.UTF8) == (s ?? "")) // TODO: What should we do with null string? " is 148.
Long Statement,Akka.Tests.Util,ByteStringSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_ByteString_must_behave_as_expected_when_created_from_and_decoding_to_unicode_String,The length of the statement  "            Prop.ForAll((string s) => ByteString.FromString(s' Encoding.Unicode).ToString(Encoding.Unicode) == (s ?? "")) // TODO: What should we do with null string? " is 154.
Long Statement,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_be_accessed_in_parallel,The length of the statement  "            Action removeTask1 = () => index.Remove(ThreadLocalRandom.Current.Next(nrOfKeys/2)' ThreadLocalRandom.Current.Next(nrOfValues)); " is 128.
Long Statement,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun,The length of the statement  "            //                                             Interlocked.CompareExchange will update sharedVariable to "updated" if it still is "" " is 132.
Long Statement,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun,The length of the statement  "            //                                             Interlocked.CompareExchange will update sharedVariable to "updated" if it still is "-" " is 133.
Long Statement,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_using_tuples,The length of the statement  "            //                                             Interlocked.CompareExchange will update sharedVariable to "updated" if it still is "" " is 132.
Long Statement,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_using_tuples,The length of the statement  "            //                                             Interlocked.CompareExchange will update sharedVariable to "updated" if it still is "-" " is 133.
Long Statement,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_but_as_the_break_condition_is_fulfilled_it_do_not_update,The length of the statement  "            //                                             Interlocked.CompareExchange will update sharedVariable to "updated" if it still is "" " is 132.
Virtual Method Call from Constructor,Akka.Tests.Actor,FailingTestExtensionImpl,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,FailingTestExtensionImpl,The constructor "FailingTestExtensionImpl" calls a virtual method "ActorOf".
Virtual Method Call from Constructor,Akka.Tests.Actor,Wave,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Wave,The constructor "Wave" calls a virtual method "ActorOf".
Virtual Method Call from Constructor,Akka.Tests.Actor.Dispatch,MessageDispatcherInterceptorConfigurator,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,MessageDispatcherInterceptorConfigurator,The constructor "MessageDispatcherInterceptorConfigurator" calls a virtual method "GetString".
Virtual Method Call from Constructor,Akka.Tests.Actor.Dispatch,MessageDispatcherInterceptorConfigurator,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,MessageDispatcherInterceptorConfigurator,The constructor "MessageDispatcherInterceptorConfigurator" calls a virtual method "GetInt".
Virtual Method Call from Constructor,Akka.Tests.Actor.Dispatch,MessageDispatcherInterceptorConfigurator,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,MessageDispatcherInterceptorConfigurator,The constructor "MessageDispatcherInterceptorConfigurator" calls a virtual method "GetTimeSpan".
Virtual Method Call from Constructor,Akka.Tests.Actor.Dispatch,MessageDispatcherInterceptorConfigurator,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,MessageDispatcherInterceptorConfigurator,The constructor "MessageDispatcherInterceptorConfigurator" calls a virtual method "GetTimeSpan".
Empty Catch Block,Akka.Tests.Dispatch,AsyncExceptionCatcherActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,AsyncExceptionCatcherActor,The method has an empty catch block.
Magic Number,Akka.Tests.Actor,ActorBecomeTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorBecomeTests.cs,Given_actor_that_calls_become_in_the_become_handler_only_first_become_receive_set_is_used,The following statement contains a magic number: actor.Tell(2' TestActor);
Magic Number,Akka.Tests.Actor,ActorCellSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorCellSpec.cs,Cell_should_clear_current_message_after_receive,The following statement contains a magic number: SpinWait.SpinUntil(() => cell.CurrentMessage == null' TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Actor,ActorCellSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorCellSpec.cs,Cell_should_clear_current_message_after_async_receive,The following statement contains a magic number: Assert.True(autoResetEvent.WaitOne(TimeSpan.FromSeconds(3))' "Timed out while waiting for autoreset event");
Magic Number,Akka.Tests.Actor,ActorCellSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorCellSpec.cs,Cell_should_clear_current_message_after_async_receive,The following statement contains a magic number: SpinWait.SpinUntil(() => cell.CurrentMessage == null' TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Actor,DummyAsyncActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorCellSpec.cs,DummyAsyncActor,The following statement contains a magic number: ReceiveAsync<string>(async m =>                  {                      await Task.Delay(500);                      autoResetEvent.Set();                  });
Magic Number,Akka.Tests.Actor,WhenSerializeAllMessagesIsOff,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorCellTests_SerializationOfUserMessages.cs,Does_not_serializes_user_messages,The following statement contains a magic number: var message = new SomeUserMessage              {                  A = "abc"'                  B = 123'                  C = Guid.Empty              };
Magic Number,Akka.Tests.Actor,WhenSerializeAllMessagesIsOn,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorCellTests_SerializationOfUserMessages.cs,Do_serialize_user_messages,The following statement contains a magic number: var message = new SomeUserMessage              {                  A = "abc"'                  B = 123'                  C = Guid.Empty              };
Magic Number,Akka.Tests.Actor,ActorLookupSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLookupSpec.cs,ActorSystem_must_find_temporary_actors,The following statement contains a magic number: a.Tell(42);
Magic Number,Akka.Tests.Actor,ActorLookupSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLookupSpec.cs,ActorSystem_must_find_temporary_actors,The following statement contains a magic number: AwaitAssert(() => f.Result.Should().Be(42));
Magic Number,Akka.Tests.Actor,ActorPathSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,ActorPath_Parse_HandlesCasing_ForLocal,The following statement contains a magic number: elements.Count.ShouldBe(2'"number of elements in path");
Magic Number,Akka.Tests.Actor,ActorPathSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,ActorPath_Parse_HandlesCasing_ForRemote,The following statement contains a magic number: actorPath.Address.Port.ShouldBe(4711' "port");
Magic Number,Akka.Tests.Actor,ActorPathSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,ActorPath_Parse_HandlesCasing_ForRemote,The following statement contains a magic number: elements.Count.ShouldBe(2' "number of elements in path");
Magic Number,Akka.Tests.Actor,ActorPathSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,Create_correct_ToString_with_address,The following statement contains a magic number: var a = new Address("akka.tcp"' "mysys"' "aaa"' 2552);
Magic Number,Akka.Tests.Actor,ActorPathSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,Create_correct_ToString_with_address,The following statement contains a magic number: var b = new Address("akka.tcp"' "mysys"' "bb"' 2552);
Magic Number,Akka.Tests.Actor,ActorPathSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,Create_correct_ToString_with_address,The following statement contains a magic number: var c = new Address("akka.tcp"' "mysys"' "cccc"' 2552);
Magic Number,Akka.Tests.Actor,ActorPathSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,Create_correct_ToString_with_address,The following statement contains a magic number: var d = new Address("akka.tcp"' "mysys"' "192.168.107.1"' 2552);
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,Pipeline_should_allow_to_register_multiple_generic_plugins_with_different_generic_types,The following statement contains a magic number: plugA.Ask<string[]>("plugins"' TimeSpan.FromSeconds(3)).Result.ShouldOnlyContainInOrder("working plugin"' typeof(PlugActorA).ToString());
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,Pipeline_should_allow_to_register_multiple_generic_plugins_with_different_generic_types,The following statement contains a magic number: plugB.Ask<string[]>("plugins"' TimeSpan.FromSeconds(3)).Result.ShouldOnlyContainInOrder("working plugin"' typeof(PlugActorB).ToString());
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,Pipeline_application_should_apply_plugins_in_specified_order,The following statement contains a magic number: _resolver.Insert(2' new OrderedPlugin3()).ShouldBeTrue();
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,Pipeline_application_should_apply_plugins_in_specified_order,The following statement contains a magic number: actor.Ask<string[]>("plugins"' TimeSpan.FromSeconds(3)).Result.ShouldOnlyContainInOrder("plugin-1"' "plugin-2"' "plugin-3");
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,DefaultPipeline_should_apply_stashing_to_actors_implementing_it,The following statement contains a magic number: actor.Ask<string>(StashStatus.Instance' TimeSpan.FromSeconds(3)).Result.ShouldBe("actor stash is initialized");
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,DefaultPipeline_should_unstash_all_terminated_actors_stashed_messages_on_stop,The following statement contains a magic number: EventFilter.DeadLetter<int>().Expect(3' () =>              {                  var actor = ActorOf<StashingActor>();                  // send some messages to stash                  actor.Tell(1);                  actor.Tell(2);                  actor.Tell(3);                                    // stop actor                  actor.Tell(PoisonPill.Instance);              });
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,DefaultPipeline_should_unstash_all_terminated_actors_stashed_messages_on_stop,The following statement contains a magic number: EventFilter.DeadLetter<int>().Expect(3' () =>              {                  var actor = ActorOf<StashingActor>();                  // send some messages to stash                  actor.Tell(1);                  actor.Tell(2);                  actor.Tell(3);                                    // stop actor                  actor.Tell(PoisonPill.Instance);              });
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,DefaultPipeline_should_unstash_all_terminated_actors_stashed_messages_on_stop,The following statement contains a magic number: EventFilter.DeadLetter<int>().Expect(3' () =>              {                  var actor = ActorOf<StashingActor>();                  // send some messages to stash                  actor.Tell(1);                  actor.Tell(2);                  actor.Tell(3);                                    // stop actor                  actor.Tell(PoisonPill.Instance);              });
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_equal_another_ActorRef_instance_with_same_path,The following statement contains a magic number: var actorPath1 = (new RootActorPath(new Address("akka"' "test")) / "name").WithUid(4711);
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_equal_another_ActorRef_instance_with_same_path,The following statement contains a magic number: var actorPath2 = (new RootActorPath(new Address("akka"' "test")) / "name").WithUid(4711);
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_not_equal_another_ActorRef_when_path_differs,The following statement contains a magic number: var referencePath = (new RootActorPath(new Address("akka"' "test")) / "name").WithUid(4711);
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_not_equal_another_ActorRef_when_path_differs,The following statement contains a magic number: var path1 = (new RootActorPath(new Address("akka"' "test")) / "name").WithUid(42);
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_not_equal_another_ActorRef_when_path_differs,The following statement contains a magic number: var path2 = (new RootActorPath(new Address("akka"' "test")) / "name2").WithUid(4711);
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_not_equal_another_ActorRef_when_path_differs,The following statement contains a magic number: var path3 = (new RootActorPath(new Address("akka"' "test2")) / "name").WithUid(4711);
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_restart_when_Killed,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().ExpectOne(() =>              {                  var latch = CreateTestLatch(2);                  var boss = ActorOf(a =>                  {                      var child = a.ActorOf(c =>                      {                          c.ReceiveAny((msg' ctx) => { });                          c.OnPreRestart = (reason' msg' ctx) =>                          {                              latch.CountDown();                               c.DefaultPreRestart(reason' msg);                          };                          c.OnPostRestart = (reason' ctx) =>                          {                              latch.CountDown();                              c.DefaultPostRestart(reason);                          };                      });                      a.Strategy = new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' r=> Directive.Restart);                      a.Receive<string>((_' ctx) => child.Tell(Kill.Instance));                  });                    boss.Tell("send kill");                  latch.Ready(TimeSpan.FromSeconds(5));              });
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_restart_when_Killed,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().ExpectOne(() =>              {                  var latch = CreateTestLatch(2);                  var boss = ActorOf(a =>                  {                      var child = a.ActorOf(c =>                      {                          c.ReceiveAny((msg' ctx) => { });                          c.OnPreRestart = (reason' msg' ctx) =>                          {                              latch.CountDown();                               c.DefaultPreRestart(reason' msg);                          };                          c.OnPostRestart = (reason' ctx) =>                          {                              latch.CountDown();                              c.DefaultPostRestart(reason);                          };                      });                      a.Strategy = new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' r=> Directive.Restart);                      a.Receive<string>((_' ctx) => child.Tell(Kill.Instance));                  });                    boss.Tell("send kill");                  latch.Ready(TimeSpan.FromSeconds(5));              });
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_restart_when_Killed,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().ExpectOne(() =>              {                  var latch = CreateTestLatch(2);                  var boss = ActorOf(a =>                  {                      var child = a.ActorOf(c =>                      {                          c.ReceiveAny((msg' ctx) => { });                          c.OnPreRestart = (reason' msg' ctx) =>                          {                              latch.CountDown();                               c.DefaultPreRestart(reason' msg);                          };                          c.OnPostRestart = (reason' ctx) =>                          {                              latch.CountDown();                              c.DefaultPostRestart(reason);                          };                      });                      a.Strategy = new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' r=> Directive.Restart);                      a.Receive<string>((_' ctx) => child.Tell(Kill.Instance));                  });                    boss.Tell("send kill");                  latch.Ready(TimeSpan.FromSeconds(5));              });
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_nested_ActorOfs,The following statement contains a magic number: t1.Wait(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_advanced_nested_ActorOfs,The following statement contains a magic number: t1.Wait(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_advanced_nested_ActorOfs,The following statement contains a magic number: t2.Wait(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_advanced_nested_ActorOfs,The following statement contains a magic number: t3.Wait(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_advanced_nested_ActorOfs,The following statement contains a magic number: t4.Wait(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_reply_via_Sender,The following statement contains a magic number: var latch = new TestLatch(4);
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_reply_via_Sender,The following statement contains a magic number: latch.Ready(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_reply_via_Sender,The following statement contains a magic number: latch.Ready(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_stop_when_sent_a_poison_pill,The following statement contains a magic number: var timeout = TimeSpan.FromSeconds(20);
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_stop_when_sent_a_poison_pill,The following statement contains a magic number: var t1 = actorRef.Ask(5' timeout);
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_be_able_to_check_for_existence_of_the_children,The following statement contains a magic number: var timeout = TimeSpan.FromSeconds(3);
Magic Number,Akka.Tests.Actor,ActorRefSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,VerifyActorTermination,The following statement contains a magic number: watcher.ExpectTerminated(actorRef' TimeSpan.FromSeconds(20));
Magic Number,Akka.Tests.Actor,WorkerActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,Work,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,Identify,The following statement contains a magic number: resolved = selection.ResolveOne(TimeSpan.FromSeconds(3)).Result;
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_send_messages_with_correct_sender,The following statement contains a magic number: var actors = ReceiveWhile(_ => LastSender' msgs: 3).Distinct();
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_drop_messages_which_cannot_be_delivered,The following statement contains a magic number: var actors = ReceiveWhile(_ => LastSender' msgs: 2).Distinct();
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: var b1 = top.Ask<IActorRef>(new Create("b1")' TimeSpan.FromSeconds(3)).Result;
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: var b2 = top.Ask<IActorRef>(new Create("b2")' TimeSpan.FromSeconds(3)).Result;
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: var c = b2.Ask<IActorRef>(new Create("c")' TimeSpan.FromSeconds(3)).Result;
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: var d = c.Ask<IActorRef>(new Create("d")' TimeSpan.FromSeconds(3)).Result;
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: probe.ReceiveN(2)                  .Cast<ActorIdentity>()                  .Select(i => i.Subject)                  .ShouldAllBeEquivalentTo(new[] { b1' b2 });
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: probe.ExpectNoMsg(TimeSpan.FromMilliseconds(200));
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: Sys.ActorSelection("/user/a/b1/*").Tell(new Identify(2)' probe.Ref);
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: probe.ExpectMsg<ActorIdentity>().ShouldBeEquivalentTo(new ActorIdentity(2' null));
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: Sys.ActorSelection("/user/a/*/c").Tell(new Identify(3)' probe.Ref);
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: probe.ExpectMsg<ActorIdentity>().ShouldBeEquivalentTo(new ActorIdentity(3' c));
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: probe.ExpectNoMsg(TimeSpan.FromMilliseconds(200));
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: Sys.ActorSelection("/user/a/b2/*/d").Tell(new Identify(4)' probe.Ref);
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: probe.ExpectMsg<ActorIdentity>().ShouldBeEquivalentTo(new ActorIdentity(4' d));
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: probe.ExpectNoMsg(TimeSpan.FromMilliseconds(200));
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: Sys.ActorSelection("/user/a/*/*/d").Tell(new Identify(5)' probe.Ref);
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: probe.ExpectMsg<ActorIdentity>().ShouldBeEquivalentTo(new ActorIdentity(5' d));
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: probe.ExpectNoMsg(TimeSpan.FromMilliseconds(200));
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: Sys.ActorSelection("/user/a/*/c/*").Tell(new Identify(6)' probe.Ref);
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: probe.ExpectMsg<ActorIdentity>().ShouldBeEquivalentTo(new ActorIdentity(6' d));
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: probe.ExpectNoMsg(TimeSpan.FromMilliseconds(200));
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: Sys.ActorSelection("/user/a/b2/*/d/e").Tell(new Identify(7)' probe.Ref);
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: probe.ExpectMsg<ActorIdentity>().ShouldBeEquivalentTo(new ActorIdentity(7' null));
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: probe.ExpectNoMsg(TimeSpan.FromMilliseconds(200));
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: Sys.ActorSelection("/user/a/*/c/d/e").Tell(new Identify(8)' probe.Ref);
Magic Number,Akka.Tests.Actor,ActorSelectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,An_ActorSelection_must_identify_actors_with_wildcard_selection_correctly,The following statement contains a magic number: probe.ExpectNoMsg(TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Block_until_exit,The following statement contains a magic number: actorSystem.WhenTerminated.Wait(TimeSpan.FromSeconds(2)).ShouldBeTrue();
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Block_until_exit,The following statement contains a magic number: Assert.True(st.Elapsed.TotalSeconds >= .9);
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Given_a_system_that_isnt_going_to_shutdown_When_waiting_for_system_shutdown_Then_it_times_out,The following statement contains a magic number: actorSystem.WhenTerminated.Wait(TimeSpan.FromMilliseconds(10)).ShouldBeFalse();
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Run_termination_callbacks_in_order,The following statement contains a magic number: var count = 10;
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Run_termination_callbacks_in_order,The following statement contains a magic number: actorSystem.RegisterOnTermination(() =>                  {                      Task.Delay(Dilated(TimeSpan.FromMilliseconds(value % 3))).Wait();                      result.Add(value);                      latch.CountDown();                  });
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,AwaitTermination_after_termination_callbacks,The following statement contains a magic number: actorSystem.RegisterOnTermination(() =>              {                  Task.Delay(Dilated(TimeSpan.FromMilliseconds(50))).Wait();                  callbackWasRun = true;              });
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,AwaitTermination_after_termination_callbacks,The following statement contains a magic number: new TaskFactory().StartNew(() =>              {                  Task.Delay(Dilated(TimeSpan.FromMilliseconds(200))).Wait();                  actorSystem.Terminate();              });
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,AwaitTermination_after_termination_callbacks,The following statement contains a magic number: actorSystem.WhenTerminated.Wait(TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Throw_exception_when_register_callback_after_shutdown,The following statement contains a magic number: actorSystem.Terminate().Wait(TimeSpan.FromSeconds(10));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliably_create_waves_of_actors,The following statement contains a magic number: var timeout = Dilated(TimeSpan.FromSeconds(20));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliably_create_waves_of_actors,The following statement contains a magic number: var waves = Task.WhenAll(                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000)'                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000)'                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliably_create_waves_of_actors,The following statement contains a magic number: var waves = Task.WhenAll(                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000)'                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000)'                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliably_create_waves_of_actors,The following statement contains a magic number: var waves = Task.WhenAll(                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000)'                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000)'                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliably_create_waves_of_actors,The following statement contains a magic number: waves.Wait(timeout.Duration() + TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliable_deny_creation_of_actors_while_shutting_down,The following statement contains a magic number: sys.Scheduler.Advanced.ScheduleOnce(TimeSpan.FromMilliseconds(100)' () =>              {                  sys.Terminate();              });
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliable_deny_creation_of_actors_while_shutting_down,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliable_deny_creation_of_actors_while_shutting_down,The following statement contains a magic number: created.Count % 1000 == 0
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliable_deny_creation_of_actors_while_shutting_down,The following statement contains a magic number: !failing && sys.Uptime.TotalSeconds >= 10
Magic Number,Akka.Tests.Actor,ActorSystemSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Shutdown_when_userguardian_escalates,The following statement contains a magic number: Assert.True(system.WhenTerminated.Wait(1000));
Magic Number,Akka.Tests.Actor,AskSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\AskSpec.cs,Can_Ask_actor_with_timeout,The following statement contains a magic number: var res = await actor.Ask<string>("answer"' TimeSpan.FromSeconds(10));
Magic Number,Akka.Tests.Actor,AskSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\AskSpec.cs,Can_get_timeout_when_asking_actor,The following statement contains a magic number: await Assert.ThrowsAsync<AskTimeoutException>(async () => await actor.Ask<string>("timeout"' TimeSpan.FromSeconds(3)));
Magic Number,Akka.Tests.Actor,AskSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\AskSpec.cs,Cancelled_ask_with_timeout_should_remove_temp_actor,The following statement contains a magic number: await Assert.ThrowsAsync<TaskCanceledException>(async () => await actor.Ask<string>("cancel"' TimeSpan.FromSeconds(30)' cts.Token));
Magic Number,Akka.Tests.Actor,SomeActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\AskSpec.cs,OnReceive,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,Akka.Tests.Actor,WaitActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\AskSpec.cs,OnReceive,The following statement contains a magic number: result.Wait(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Actor,ContextWatchWithSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ContextWatchWithSpec.cs,Context_WatchWith_Should_not_have_memory_leak,The following statement contains a magic number: Thread.Sleep(60.Seconds());
Magic Number,Akka.Tests.Actor,CoordinatedShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\CoordinatedShutdownSpec.cs,Phase,The following statement contains a magic number: return new Phase(dependsOn?.ToImmutableHashSet() ?? ImmutableHashSet<string>.Empty' TimeSpan.FromSeconds(10)' true);
Magic Number,Akka.Tests.Actor,CoordinatedShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\CoordinatedShutdownSpec.cs,CoordinatedShutdown_must_run_ordered_phases,The following statement contains a magic number: co.AddTask("b"' "b2"' () =>              {                  // to verify that c is not performed before b                  Task.Delay(TimeSpan.FromMilliseconds(100)).Wait();                  TestActor.Tell("B");                  return TaskEx.Completed;              });
Magic Number,Akka.Tests.Actor,CoordinatedShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\CoordinatedShutdownSpec.cs,CoordinatedShutdown_must_run_ordered_phases,The following statement contains a magic number: ReceiveN(4).Should().Equal(new object[] { "A"' "B"' "B"' "C" });
Magic Number,Akka.Tests.Actor,CoordinatedShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\CoordinatedShutdownSpec.cs,CoordinatedShutdown_must_run_from_given_phase,The following statement contains a magic number: ReceiveN(2).Should().Equal(new object[] { "B"' "C" });
Magic Number,Akka.Tests.Actor,CoordinatedShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\CoordinatedShutdownSpec.cs,CoordinatedShutdown_must_continue_after_timeout_or_failure,The following statement contains a magic number: var phases = new Dictionary<string' Phase>()              {                  { "a"' EmptyPhase }'                  { "b"'  new Phase(ImmutableHashSet<string>.Empty.Add("a")' TimeSpan.FromMilliseconds(100)' true)}'                  { "c"' Phase("b"' "a") }              };
Magic Number,Akka.Tests.Actor,CoordinatedShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\CoordinatedShutdownSpec.cs,CoordinatedShutdown_must_continue_after_timeout_or_failure,The following statement contains a magic number: co.AddTask("a"' "a2"' () =>              {                  Task.Delay(TimeSpan.FromMilliseconds(100)).Wait();                  TestActor.Tell("A");                  return TaskEx.Completed;              });
Magic Number,Akka.Tests.Actor,CoordinatedShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\CoordinatedShutdownSpec.cs,CoordinatedShutdown_must_abort_if_recover_is_off,The following statement contains a magic number: var phases = new Dictionary<string' Phase>()              {                  { "b"'  new Phase(ImmutableHashSet<string>.Empty.Add("a")' TimeSpan.FromMilliseconds(100)' false)}'                  { "c"' Phase("b"' "a") }              };
Magic Number,Akka.Tests.Actor,CoordinatedShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\CoordinatedShutdownSpec.cs,CoordinatedShutdown_must_abort_if_recover_is_off,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(200));
Magic Number,Akka.Tests.Actor,CoordinatedShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\CoordinatedShutdownSpec.cs,CoordinatedShutdown_must_be_possible_to_parse_phases_from_config,The following statement contains a magic number: CoordinatedShutdown.PhasesFromConfig(ConfigurationFactory.ParseString(@"              default-phase-timeout = 10s              phases {                a = {}                b {                  depends-on = [a]                  timeout = 15s                }                c {                  depends-on = [a' b]                  recover = off                }              }")).Should()                  .Equal(new Dictionary<string' Phase>()                  {                      { "a"' new Phase(ImmutableHashSet<string>.Empty' TimeSpan.FromSeconds(10)' true)}'                      { "b"' new Phase(ImmutableHashSet<string>.Empty.Add("a")' TimeSpan.FromSeconds(15)' true)}'                      { "c"' new Phase(ImmutableHashSet<string>.Empty.Add("a").Add("b")' TimeSpan.FromSeconds(10)' false)}'                  });
Magic Number,Akka.Tests.Actor,CoordinatedShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\CoordinatedShutdownSpec.cs,CoordinatedShutdown_must_be_possible_to_parse_phases_from_config,The following statement contains a magic number: CoordinatedShutdown.PhasesFromConfig(ConfigurationFactory.ParseString(@"              default-phase-timeout = 10s              phases {                a = {}                b {                  depends-on = [a]                  timeout = 15s                }                c {                  depends-on = [a' b]                  recover = off                }              }")).Should()                  .Equal(new Dictionary<string' Phase>()                  {                      { "a"' new Phase(ImmutableHashSet<string>.Empty' TimeSpan.FromSeconds(10)' true)}'                      { "b"' new Phase(ImmutableHashSet<string>.Empty.Add("a")' TimeSpan.FromSeconds(15)' true)}'                      { "c"' new Phase(ImmutableHashSet<string>.Empty.Add("a").Add("b")' TimeSpan.FromSeconds(10)' false)}'                  });
Magic Number,Akka.Tests.Actor,CoordinatedShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\CoordinatedShutdownSpec.cs,CoordinatedShutdown_must_be_possible_to_parse_phases_from_config,The following statement contains a magic number: CoordinatedShutdown.PhasesFromConfig(ConfigurationFactory.ParseString(@"              default-phase-timeout = 10s              phases {                a = {}                b {                  depends-on = [a]                  timeout = 15s                }                c {                  depends-on = [a' b]                  recover = off                }              }")).Should()                  .Equal(new Dictionary<string' Phase>()                  {                      { "a"' new Phase(ImmutableHashSet<string>.Empty' TimeSpan.FromSeconds(10)' true)}'                      { "b"' new Phase(ImmutableHashSet<string>.Empty.Add("a")' TimeSpan.FromSeconds(15)' true)}'                      { "c"' new Phase(ImmutableHashSet<string>.Empty.Add("a").Add("b")' TimeSpan.FromSeconds(10)' false)}'                  });
Magic Number,Akka.Tests.Actor,CoordinatedShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\CoordinatedShutdownSpec.cs,CoordinatedShutdown_must_terminate_ActorSystem,The following statement contains a magic number: shutdownSystem.Wait(TimeSpan.FromSeconds(10)).Should().BeTrue();
Magic Number,Akka.Tests.Actor,DeadLetterSupressionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeadLetterSupressionSpec.cs,Must_suppress_message_from_default_dead_letters_logging_sent_to_deadActor,The following statement contains a magic number: deadListener.ExpectNoMsg(200.Milliseconds());
Magic Number,Akka.Tests.Actor,DeadLetterSupressionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeadLetterSupressionSpec.cs,Must_suppress_message_from_default_dead_letters_logging_sent_to_deadActor,The following statement contains a magic number: suppressedListener.ExpectNoMsg(200.Milliseconds());
Magic Number,Akka.Tests.Actor,DeadLetterSupressionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeadLetterSupressionSpec.cs,Must_suppress_message_from_default_dead_letters_logging_sent_to_deadActor,The following statement contains a magic number: allListener.ExpectNoMsg(200.Milliseconds());
Magic Number,Akka.Tests.Actor,DeadLetterSupressionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeadLetterSupressionSpec.cs,Must_suppress_message_from_default_dead_letters_logging_sent_to_dead_letters,The following statement contains a magic number: var deadLetter = deadListener.ExpectMsg<DeadLetter>(200.Milliseconds());
Magic Number,Akka.Tests.Actor,DeadLetterSupressionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeadLetterSupressionSpec.cs,Must_suppress_message_from_default_dead_letters_logging_sent_to_dead_letters,The following statement contains a magic number: var suppressedDeadLetter = suppressedListener.ExpectMsg<SuppressedDeadLetter>(200.Milliseconds());
Magic Number,Akka.Tests.Actor,DeadLetterSupressionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeadLetterSupressionSpec.cs,Must_suppress_message_from_default_dead_letters_logging_sent_to_dead_letters,The following statement contains a magic number: var allSuppressedDeadLetter = allListener.ExpectMsg<SuppressedDeadLetter>(200.Milliseconds());
Magic Number,Akka.Tests.Actor,DeadLetterSupressionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeadLetterSupressionSpec.cs,Must_suppress_message_from_default_dead_letters_logging_sent_to_dead_letters,The following statement contains a magic number: var allDeadLetter = allListener.ExpectMsg<DeadLetter>(200.Milliseconds());
Magic Number,Akka.Tests.Actor,DeadLetterSupressionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeadLetterSupressionSpec.cs,Must_suppress_message_from_default_dead_letters_logging_sent_to_dead_letters,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_notify_with_a_Terminated_message_once_when_Actor_is_stopped_but_not_when_restarted,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().Expect(3' () =>              {                  var timeout = TimeSpan.FromSeconds(5);                  var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(                      new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' r => Directive.Restart))));                    var t1 = supervisor.Ask(Props.Create(() => new EchoTestActor()));                  t1.Wait(timeout);                  var terminal = t1.Result as LocalActorRef;                  var t2 = supervisor.Ask(CreateWatchAndForwarderProps(terminal' TestActor)' timeout);                  t2.Wait(timeout);                  var monitor = t2.Result as IActorRef;                    terminal.Tell(Kill.Instance);                  terminal.Tell(Kill.Instance);                    var foo = terminal.Ask("foo"' timeout).Result as string;                  foo.ShouldBe("foo");                    terminal.Tell(Kill.Instance);                    ExpectTerminationOf(terminal);                  terminal.IsTerminated.ShouldBe(true);                    Sys.Stop(supervisor);              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_notify_with_a_Terminated_message_once_when_Actor_is_stopped_but_not_when_restarted,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().Expect(3' () =>              {                  var timeout = TimeSpan.FromSeconds(5);                  var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(                      new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' r => Directive.Restart))));                    var t1 = supervisor.Ask(Props.Create(() => new EchoTestActor()));                  t1.Wait(timeout);                  var terminal = t1.Result as LocalActorRef;                  var t2 = supervisor.Ask(CreateWatchAndForwarderProps(terminal' TestActor)' timeout);                  t2.Wait(timeout);                  var monitor = t2.Result as IActorRef;                    terminal.Tell(Kill.Instance);                  terminal.Tell(Kill.Instance);                    var foo = terminal.Ask("foo"' timeout).Result as string;                  foo.ShouldBe("foo");                    terminal.Tell(Kill.Instance);                    ExpectTerminationOf(terminal);                  terminal.IsTerminated.ShouldBe(true);                    Sys.Stop(supervisor);              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_notify_with_a_Terminated_message_once_when_Actor_is_stopped_but_not_when_restarted,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().Expect(3' () =>              {                  var timeout = TimeSpan.FromSeconds(5);                  var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(                      new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' r => Directive.Restart))));                    var t1 = supervisor.Ask(Props.Create(() => new EchoTestActor()));                  t1.Wait(timeout);                  var terminal = t1.Result as LocalActorRef;                  var t2 = supervisor.Ask(CreateWatchAndForwarderProps(terminal' TestActor)' timeout);                  t2.Wait(timeout);                  var monitor = t2.Result as IActorRef;                    terminal.Tell(Kill.Instance);                  terminal.Tell(Kill.Instance);                    var foo = terminal.Ask("foo"' timeout).Result as string;                  foo.ShouldBe("foo");                    terminal.Tell(Kill.Instance);                    ExpectTerminationOf(terminal);                  terminal.IsTerminated.ShouldBe(true);                    Sys.Stop(supervisor);              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_fail_a_monitor_which_doesnt_handle_Terminated,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().And.Exception<DeathPactException>().Expect(2' () =>              {                  var strategy = new FailedSupervisorStrategy(TestActor);                  _supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(strategy)).WithDeploy(Deploy.Local));                    var failed = _supervisor.Ask(Props.Empty).Result as IActorRef;                  var brother = _supervisor.Ask(Props.Create(() => new BrotherActor(failed))).Result as IActorRef;                    StartWatching(brother);                    failed.Tell(Kill.Instance);                  var result = ReceiveWhile(TimeSpan.FromSeconds(5)' msg =>                  {                      var res = 0;                      msg.Match()                          .With<FF>(ff =>                          {                              if (ff.Fail.Cause is ActorKilledException && ff.Fail.Child == failed) res = 1;                              if (ff.Fail.Cause is DeathPactException && ff.Fail.Child == brother) res = 2;                          })                          .With<WrappedTerminated>(x => res = x.Terminated.ActorRef == brother ? 3 : 0);                      return res.ToString();                  }' 3);                    ((IInternalActorRef)TestActor).IsTerminated.ShouldBe(false);                  result.ShouldOnlyContainInOrder("1"' "2"' "3");              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_fail_a_monitor_which_doesnt_handle_Terminated,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().And.Exception<DeathPactException>().Expect(2' () =>              {                  var strategy = new FailedSupervisorStrategy(TestActor);                  _supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(strategy)).WithDeploy(Deploy.Local));                    var failed = _supervisor.Ask(Props.Empty).Result as IActorRef;                  var brother = _supervisor.Ask(Props.Create(() => new BrotherActor(failed))).Result as IActorRef;                    StartWatching(brother);                    failed.Tell(Kill.Instance);                  var result = ReceiveWhile(TimeSpan.FromSeconds(5)' msg =>                  {                      var res = 0;                      msg.Match()                          .With<FF>(ff =>                          {                              if (ff.Fail.Cause is ActorKilledException && ff.Fail.Child == failed) res = 1;                              if (ff.Fail.Cause is DeathPactException && ff.Fail.Child == brother) res = 2;                          })                          .With<WrappedTerminated>(x => res = x.Terminated.ActorRef == brother ? 3 : 0);                      return res.ToString();                  }' 3);                    ((IInternalActorRef)TestActor).IsTerminated.ShouldBe(false);                  result.ShouldOnlyContainInOrder("1"' "2"' "3");              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_fail_a_monitor_which_doesnt_handle_Terminated,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().And.Exception<DeathPactException>().Expect(2' () =>              {                  var strategy = new FailedSupervisorStrategy(TestActor);                  _supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(strategy)).WithDeploy(Deploy.Local));                    var failed = _supervisor.Ask(Props.Empty).Result as IActorRef;                  var brother = _supervisor.Ask(Props.Create(() => new BrotherActor(failed))).Result as IActorRef;                    StartWatching(brother);                    failed.Tell(Kill.Instance);                  var result = ReceiveWhile(TimeSpan.FromSeconds(5)' msg =>                  {                      var res = 0;                      msg.Match()                          .With<FF>(ff =>                          {                              if (ff.Fail.Cause is ActorKilledException && ff.Fail.Child == failed) res = 1;                              if (ff.Fail.Cause is DeathPactException && ff.Fail.Child == brother) res = 2;                          })                          .With<WrappedTerminated>(x => res = x.Terminated.ActorRef == brother ? 3 : 0);                      return res.ToString();                  }' 3);                    ((IInternalActorRef)TestActor).IsTerminated.ShouldBe(false);                  result.ShouldOnlyContainInOrder("1"' "2"' "3");              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_fail_a_monitor_which_doesnt_handle_Terminated,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().And.Exception<DeathPactException>().Expect(2' () =>              {                  var strategy = new FailedSupervisorStrategy(TestActor);                  _supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(strategy)).WithDeploy(Deploy.Local));                    var failed = _supervisor.Ask(Props.Empty).Result as IActorRef;                  var brother = _supervisor.Ask(Props.Create(() => new BrotherActor(failed))).Result as IActorRef;                    StartWatching(brother);                    failed.Tell(Kill.Instance);                  var result = ReceiveWhile(TimeSpan.FromSeconds(5)' msg =>                  {                      var res = 0;                      msg.Match()                          .With<FF>(ff =>                          {                              if (ff.Fail.Cause is ActorKilledException && ff.Fail.Child == failed) res = 1;                              if (ff.Fail.Cause is DeathPactException && ff.Fail.Child == brother) res = 2;                          })                          .With<WrappedTerminated>(x => res = x.Terminated.ActorRef == brother ? 3 : 0);                      return res.ToString();                  }' 3);                    ((IInternalActorRef)TestActor).IsTerminated.ShouldBe(false);                  result.ShouldOnlyContainInOrder("1"' "2"' "3");              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_fail_a_monitor_which_doesnt_handle_Terminated,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().And.Exception<DeathPactException>().Expect(2' () =>              {                  var strategy = new FailedSupervisorStrategy(TestActor);                  _supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(strategy)).WithDeploy(Deploy.Local));                    var failed = _supervisor.Ask(Props.Empty).Result as IActorRef;                  var brother = _supervisor.Ask(Props.Create(() => new BrotherActor(failed))).Result as IActorRef;                    StartWatching(brother);                    failed.Tell(Kill.Instance);                  var result = ReceiveWhile(TimeSpan.FromSeconds(5)' msg =>                  {                      var res = 0;                      msg.Match()                          .With<FF>(ff =>                          {                              if (ff.Fail.Cause is ActorKilledException && ff.Fail.Child == failed) res = 1;                              if (ff.Fail.Cause is DeathPactException && ff.Fail.Child == brother) res = 2;                          })                          .With<WrappedTerminated>(x => res = x.Terminated.ActorRef == brother ? 3 : 0);                      return res.ToString();                  }' 3);                    ((IInternalActorRef)TestActor).IsTerminated.ShouldBe(false);                  result.ShouldOnlyContainInOrder("1"' "2"' "3");              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_notify_only_when_watching,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_discard_Terminated_when_unwatched_between_sysmsg_and_processing,The following statement contains a magic number: t1.Ready(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,StartWatching,The following statement contains a magic number: var task = _supervisor.Ask(CreateWatchAndForwarderProps(target' TestActor)' TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,StartWatching,The following statement contains a magic number: task.Wait(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,StartWatchingWith,The following statement contains a magic number: var task = _supervisor.Ask(CreateWatchWithAndForwarderProps(target' TestActor' message)' TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,DeathWatchSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,StartWatchingWith,The following statement contains a magic number: task.Wait(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,Watcher,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,Watcher,The following statement contains a magic number: Receive<Latches>(x =>                      {                          x.T1.CountDown();                          x.T2.Ready(TimeSpan.FromSeconds(3));                      });
Magic Number,Akka.Tests.Actor,FSMActorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMActorSpec.cs,FSMActor_must_unlock_the_lock,The following statement contains a magic number: var timeout = 2.Seconds();
Magic Number,Akka.Tests.Actor,FSMActorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMActorSpec.cs,FSMActor_must_run_onTermination_with_updated_state_upon_stop,The following statement contains a magic number: actorRef.Tell(2);
Magic Number,Akka.Tests.Actor,FSMActorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMActorSpec.cs,FSMActor_must_allow_cancelling_stateTimeout_by_issuing_forMax,The following statement contains a magic number: p.ExpectNoMsg(3.Seconds());
Magic Number,Akka.Tests.Actor,ActorLogTermination,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMActorSpec.cs,ActorLogTermination,The following statement contains a magic number: When(1' evt =>                  {                      if (evt.FsmEvent.Equals("go"))                      {                          return GoTo(2);                      }                      return null;                  });
Magic Number,Akka.Tests.Actor,ActorStopReason,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMActorSpec.cs,ActorStopReason,The following statement contains a magic number: When(1' evt =>                  {                      if (evt.FsmEvent.Equals(2))                      {                          return Stop(Normal.Instance' expected);                      }                        return null;                  });
Magic Number,Akka.Tests.Actor,StopTimersFSM,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMActorSpec.cs,StopTimersFSM,The following statement contains a magic number: When("started"' evt =>                  {                      if (evt.FsmEvent.Equals("stop"))                      {                          return Stop();                      }                        return null;                  }' 10.Seconds());
Magic Number,Akka.Tests.Actor,StopTimersFSM,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMActorSpec.cs,StopTimersFSM,The following statement contains a magic number: OnTransition((state1' state2) =>                  {                      if (state1.Equals("not-started") && state2.Equals("started"))                      {                          foreach (var timerName in timerNames)                          {                              SetTimer(timerName' new object()' 10.Seconds()' false);                          }                      }                  });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_StateTimeout,The following statement contains a magic number: Within(1.Seconds()' () =>              {                  Within(500.Milliseconds()' 1.Seconds()' () =>                  {                      fsm.Tell(FsmState.TestStateTimeout);                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.Initial' FsmState.TestStateTimeout));                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.TestStateTimeout' FsmState.Initial));                  });                  ExpectNoMsg(50.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_StateTimeout,The following statement contains a magic number: Within(1.Seconds()' () =>              {                  Within(500.Milliseconds()' 1.Seconds()' () =>                  {                      fsm.Tell(FsmState.TestStateTimeout);                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.Initial' FsmState.TestStateTimeout));                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.TestStateTimeout' FsmState.Initial));                  });                  ExpectNoMsg(50.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_cancel_a_StateTimeout,The following statement contains a magic number: Within(1.Seconds()' () =>              {                  fsm.Tell(FsmState.TestStateTimeout);                  fsm.Tell(Cancel.Instance);                  ExpectMsg(new Transition<FsmState>(fsm' FsmState.Initial' FsmState.TestStateTimeout));                  ExpectMsg<Cancel>();                  ExpectMsg(new Transition<FsmState>(fsm' FsmState.TestStateTimeout' FsmState.Initial));                  ExpectNoMsg(50.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_cancel_a_StateTimeout_when_actor_is_stopped,The following statement contains a magic number: Within(400.Milliseconds()' () =>              {                  ExpectNoMsg(300.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_cancel_a_StateTimeout_when_actor_is_stopped,The following statement contains a magic number: Within(400.Milliseconds()' () =>              {                  ExpectNoMsg(300.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_allow_StateTimeout_override,The following statement contains a magic number: Within(400.Milliseconds()' () =>              {                  fsm.Tell(FsmState.TestStateTimeoutOverride);                  ExpectMsg(new Transition<FsmState>(fsm' FsmState.Initial' FsmState.TestStateTimeout));                  ExpectNoMsg(300.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_allow_StateTimeout_override,The following statement contains a magic number: Within(400.Milliseconds()' () =>              {                  fsm.Tell(FsmState.TestStateTimeoutOverride);                  ExpectMsg(new Transition<FsmState>(fsm' FsmState.Initial' FsmState.TestStateTimeout));                  ExpectNoMsg(300.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_single_shot_timer,The following statement contains a magic number: Within(2.Seconds()' () =>              {                  Within(500.Milliseconds()' 1.Seconds()' () =>                  {                      fsm.Tell(FsmState.TestSingleTimer);                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.Initial' FsmState.TestSingleTimer));                      ExpectMsg<Tick>();                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.TestSingleTimer' FsmState.Initial));                  });                  ExpectNoMsg(500.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_single_shot_timer,The following statement contains a magic number: Within(2.Seconds()' () =>              {                  Within(500.Milliseconds()' 1.Seconds()' () =>                  {                      fsm.Tell(FsmState.TestSingleTimer);                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.Initial' FsmState.TestSingleTimer));                      ExpectMsg<Tick>();                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.TestSingleTimer' FsmState.Initial));                  });                  ExpectNoMsg(500.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_single_shot_timer,The following statement contains a magic number: Within(2.Seconds()' () =>              {                  Within(500.Milliseconds()' 1.Seconds()' () =>                  {                      fsm.Tell(FsmState.TestSingleTimer);                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.Initial' FsmState.TestSingleTimer));                      ExpectMsg<Tick>();                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.TestSingleTimer' FsmState.Initial));                  });                  ExpectNoMsg(500.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_resubmit_single_shot_timer,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2.5)' () =>              {                  Within(500.Milliseconds()' 1.Seconds()' () =>                  {                      fsm.Tell(FsmState.TestSingleTimerResubmit);                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.Initial' FsmState.TestSingleTimerResubmit));                      ExpectMsg<Tick>();                  });                    Within(1.Seconds()' () =>                  {                      ExpectMsg<Tock>();                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.TestSingleTimerResubmit' FsmState.Initial));                  });                  ExpectNoMsg(500.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_resubmit_single_shot_timer,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2.5)' () =>              {                  Within(500.Milliseconds()' 1.Seconds()' () =>                  {                      fsm.Tell(FsmState.TestSingleTimerResubmit);                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.Initial' FsmState.TestSingleTimerResubmit));                      ExpectMsg<Tick>();                  });                    Within(1.Seconds()' () =>                  {                      ExpectMsg<Tock>();                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.TestSingleTimerResubmit' FsmState.Initial));                  });                  ExpectNoMsg(500.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_resubmit_single_shot_timer,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2.5)' () =>              {                  Within(500.Milliseconds()' 1.Seconds()' () =>                  {                      fsm.Tell(FsmState.TestSingleTimerResubmit);                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.Initial' FsmState.TestSingleTimerResubmit));                      ExpectMsg<Tick>();                  });                    Within(1.Seconds()' () =>                  {                      ExpectMsg<Tock>();                      ExpectMsg(new Transition<FsmState>(fsm' FsmState.TestSingleTimerResubmit' FsmState.Initial));                  });                  ExpectNoMsg(500.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_correctly_cancel_a_named_timer,The following statement contains a magic number: Within(500.Milliseconds()' () =>              {                  fsm.Tell(Tick.Instance);                  ExpectMsg<Tick>();              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_correctly_cancel_a_named_timer,The following statement contains a magic number: Within(300.Milliseconds()' 1.Seconds()' () =>              {                  ExpectMsg<Tock>();              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_not_get_confused_between_named_and_state_timers,The following statement contains a magic number: ExpectMsg<Tick>(500.Milliseconds());
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_not_get_confused_between_named_and_state_timers,The following statement contains a magic number: Task.Delay(200.Milliseconds());
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_not_get_confused_between_named_and_state_timers,The following statement contains a magic number: ExpectMsg(new Transition<FsmState>(fsm' FsmState.TestCancelStateTimerInNamedTimerMessage' FsmState.TestCancelStateTimerInNamedTimerMessage2)' 500.Milliseconds());
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_not_get_confused_between_named_and_state_timers,The following statement contains a magic number: Within(500.Milliseconds()' () =>              {                  ExpectMsg<Cancel>();                  ExpectMsg(new Transition<FsmState>(fsm' FsmState.TestCancelStateTimerInNamedTimerMessage2' FsmState.Initial));              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_and_cancel_a_repeated_timer,The following statement contains a magic number: var seq = ReceiveWhile(2.Seconds()' o =>              {                  if (o is Tick)                      return o;                  return null;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_and_cancel_a_repeated_timer,The following statement contains a magic number: seq.Should().HaveCount(5);
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_and_cancel_a_repeated_timer,The following statement contains a magic number: Within(500.Milliseconds()' () =>              {                  ExpectMsg(new Transition<FsmState>(fsm' FsmState.TestRepeatedTimer' FsmState.Initial));              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_notify_unhandled_messages,The following statement contains a magic number: Within(3.Seconds()' () =>                      {                          fsm.Tell(Tick.Instance);                          fsm.Tell(SetHandler.Instance);                          fsm.Tell(Tick.Instance);                          ExpectMsg<Unhandled>().Msg.Should().BeOfType<Tick>();                          fsm.Tell(new Unhandled("test"));                          fsm.Tell(Cancel.Instance);                          var transition = ExpectMsg<Transition<FsmState>>();                          transition.FsmRef.Should().Be(fsm);                          transition.From.Should().Be(FsmState.TestUnhandled);                          transition.To.Should().Be(FsmState.Initial);                      });
Magic Number,Akka.Tests.Actor,StateMachine,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(FsmState.Initial' @event =>                  {                      if (@event.FsmEvent is FsmState)                      {                          var s = (FsmState)@event.FsmEvent;                          switch (s)                          {                              case FsmState.TestSingleTimer:                                  SetTimer("tester"' Tick.Instance' 500.Milliseconds()' false);                                  return GoTo(FsmState.TestSingleTimer);                              case FsmState.TestRepeatedTimer:                                  SetTimer("tester"' Tick.Instance' 100.Milliseconds()' true);                                  return GoTo(FsmState.TestRepeatedTimer).Using(4);                              case FsmState.TestStateTimeoutOverride:                                  return GoTo(FsmState.TestStateTimeout).ForMax(TimeSpan.MaxValue);                              default:                                  return GoTo(s);                          }                      }                      return null;                  });
Magic Number,Akka.Tests.Actor,StateMachine,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(FsmState.Initial' @event =>                  {                      if (@event.FsmEvent is FsmState)                      {                          var s = (FsmState)@event.FsmEvent;                          switch (s)                          {                              case FsmState.TestSingleTimer:                                  SetTimer("tester"' Tick.Instance' 500.Milliseconds()' false);                                  return GoTo(FsmState.TestSingleTimer);                              case FsmState.TestRepeatedTimer:                                  SetTimer("tester"' Tick.Instance' 100.Milliseconds()' true);                                  return GoTo(FsmState.TestRepeatedTimer).Using(4);                              case FsmState.TestStateTimeoutOverride:                                  return GoTo(FsmState.TestStateTimeout).ForMax(TimeSpan.MaxValue);                              default:                                  return GoTo(s);                          }                      }                      return null;                  });
Magic Number,Akka.Tests.Actor,StateMachine,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(FsmState.Initial' @event =>                  {                      if (@event.FsmEvent is FsmState)                      {                          var s = (FsmState)@event.FsmEvent;                          switch (s)                          {                              case FsmState.TestSingleTimer:                                  SetTimer("tester"' Tick.Instance' 500.Milliseconds()' false);                                  return GoTo(FsmState.TestSingleTimer);                              case FsmState.TestRepeatedTimer:                                  SetTimer("tester"' Tick.Instance' 100.Milliseconds()' true);                                  return GoTo(FsmState.TestRepeatedTimer).Using(4);                              case FsmState.TestStateTimeoutOverride:                                  return GoTo(FsmState.TestStateTimeout).ForMax(TimeSpan.MaxValue);                              default:                                  return GoTo(s);                          }                      }                      return null;                  });
Magic Number,Akka.Tests.Actor,StateMachine,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(FsmState.TestStateTimeout' @event =>                  {                      if (@event.FsmEvent is StateTimeout)                      {                          return GoTo(FsmState.Initial);                      }                      else if (@event.FsmEvent is Cancel)                      {                          return GoTo(FsmState.Initial).Replying(Cancel.Instance);                      }                      return null;                  }' 800.Milliseconds());
Magic Number,Akka.Tests.Actor,StateMachine,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: OnTransition((state1' state2) =>                  {                      if (state1 == FsmState.Initial && state2 == FsmState.TestSingleTimerResubmit)                          SetTimer("blah"' Tick.Instance' 500.Milliseconds());                  });
Magic Number,Akka.Tests.Actor,StateMachine,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(FsmState.TestSingleTimerResubmit' @event =>                  {                      if (@event.FsmEvent is Tick)                      {                          Tester.Tell(Tick.Instance);                          SetTimer("blah"' Tock.Instance' 500.Milliseconds());                          return Stay();                      }                      else if (@event.FsmEvent is Tock)                      {                          Tester.Tell(Tock.Instance);                          return GoTo(FsmState.Initial);                      }                      return null;                  });
Magic Number,Akka.Tests.Actor,StateMachine,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(FsmState.TestCancelTimer' @event =>                  {                      if (@event.FsmEvent is Tick)                      {                          var contextLocal = Context.AsInstanceOf<ActorCell>();                          SetTimer("hallo"' Tock.Instance' 1.Milliseconds());                          StaticAwaitCond(() => contextLocal.Mailbox.HasMessages' 1.Seconds()' 50.Milliseconds());                          CancelTimer("hallo");                          Sender.Tell(Tick.Instance);                          SetTimer("hallo"' Tock.Instance' 500.Milliseconds());                          return Stay();                      }                      else if (@event.FsmEvent is Tock)                      {                          Tester.Tell(Tock.Instance);                          return Stay();                      }                      else if (@event.FsmEvent is Cancel)                      {                          CancelTimer("hallo");                          return GoTo(FsmState.Initial);                      }                      return null;                  });
Magic Number,Akka.Tests.Actor,StateMachine,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(FsmState.TestCancelTimer' @event =>                  {                      if (@event.FsmEvent is Tick)                      {                          var contextLocal = Context.AsInstanceOf<ActorCell>();                          SetTimer("hallo"' Tock.Instance' 1.Milliseconds());                          StaticAwaitCond(() => contextLocal.Mailbox.HasMessages' 1.Seconds()' 50.Milliseconds());                          CancelTimer("hallo");                          Sender.Tell(Tick.Instance);                          SetTimer("hallo"' Tock.Instance' 500.Milliseconds());                          return Stay();                      }                      else if (@event.FsmEvent is Tock)                      {                          Tester.Tell(Tock.Instance);                          return Stay();                      }                      else if (@event.FsmEvent is Cancel)                      {                          CancelTimer("hallo");                          return GoTo(FsmState.Initial);                      }                      return null;                  });
Magic Number,Akka.Tests.Actor,StateMachine,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(FsmState.TestCancelStateTimerInNamedTimerMessage' @event =>                  {                      // FSM is suspended after processing this message and resumed 500s later                      if (@event.FsmEvent is Tick)                      {                          Suspend(Self);                          SetTimer("named"' Tock.Instance' 1.Milliseconds());                          var contextLocal = Context.AsInstanceOf<ActorCell>();                          StaticAwaitCond(() => contextLocal.Mailbox.HasMessages' 1.Seconds()' 50.Milliseconds());                          return Stay().ForMax(1.Milliseconds()).Replying(Tick.Instance);                      }                      else if (@event.FsmEvent is Tock)                      {                          return GoTo(FsmState.TestCancelStateTimerInNamedTimerMessage2);                      }                      return null;                  });
Magic Number,Akka.Tests.Actor,StoppingActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StoppingActor,The following statement contains a magic number: When(FsmState.Initial' evt =>                  {                      if (evt.FsmEvent is FsmState)                      {                          var state = (FsmState)evt.FsmEvent;                          if (state == FsmState.TestStoppingActorStateTimeout)                          {                              Context.Stop(Self);                              return Stay();                          }                      }                      return null;                  }' 200.Milliseconds());
Magic Number,Akka.Tests.Actor,FSMTransitionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTransitionSpec.cs,FSMTransitionNotifier_must_not_trigger_onTransition_for_stay,The following statement contains a magic number: ExpectNoMsg(500.Milliseconds());
Magic Number,Akka.Tests.Actor,FSMTransitionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTransitionSpec.cs,FSMTransitionNotifier_must_not_fail_when_listener_goes_away,The following statement contains a magic number: Within(1.Seconds()' () =>              {                  fsm.Tell(new SubscribeTransitionCallBack(forward));                  ExpectMsg(new CurrentState<int>(fsm' 0));                  forward.GracefulStop(5.Seconds()).Wait();                  fsm.Tell("tick");                  ExpectNoMsg(200.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTransitionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTransitionSpec.cs,FSMTransitionNotifier_must_not_fail_when_listener_goes_away,The following statement contains a magic number: Within(1.Seconds()' () =>              {                  fsm.Tell(new SubscribeTransitionCallBack(forward));                  ExpectMsg(new CurrentState<int>(fsm' 0));                  forward.GracefulStop(5.Seconds()).Wait();                  fsm.Tell("tick");                  ExpectNoMsg(200.Milliseconds());              });
Magic Number,Akka.Tests.Actor,FSMTransitionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FSMTransitionSpec.cs,FSM_must_not_trigger_transition_event_on_stay,The following statement contains a magic number: Within(1.Seconds()' () =>              {                  fsm.Tell(new SubscribeTransitionCallBack(forward));                  ExpectMsg(new CurrentState<int>(fsm' 0));                  fsm.Tell("stay");                  ExpectNoMsg(500.Milliseconds());              });
Magic Number,Akka.Tests.Actor,Forwarded,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\FunctionRefSpecs.cs,GetHashCode,The following statement contains a magic number: return ((Message != null ? Message.GetHashCode() : 0) * 397) ^ (Sender != null ? Sender.GetHashCode() : 0);
Magic Number,Akka.Tests.Actor,MultipleConstructorBecomer,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\HotSwapSpec.cs,MultipleConstructorBecomer,The following statement contains a magic number: i <= 4
Magic Number,Akka.Tests.Actor,MultipleStackingConstructorBecomer,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\HotSwapSpec.cs,MultipleStackingConstructorBecomer,The following statement contains a magic number: i <= 4
Magic Number,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_support_queueing_multiple_queries,The following statement contains a magic number: var tasks = new[]                  {                      Task.Factory.StartNew(() => _inbox.Receive())'                      Task.Factory.StartNew(() =>                      {                          Thread.Sleep(100);                          return _inbox.ReceiveWhere(x => x.ToString() == "world");                       })'                       Task.Factory.StartNew(() =>                      {                          Thread.Sleep(200);                          return _inbox.ReceiveWhere(x => x.ToString() == "hello");                       })                   };
Magic Number,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_support_queueing_multiple_queries,The following statement contains a magic number: var tasks = new[]                  {                      Task.Factory.StartNew(() => _inbox.Receive())'                      Task.Factory.StartNew(() =>                      {                          Thread.Sleep(100);                          return _inbox.ReceiveWhere(x => x.ToString() == "world");                       })'                       Task.Factory.StartNew(() =>                      {                          Thread.Sleep(200);                          return _inbox.ReceiveWhere(x => x.ToString() == "hello");                       })                   };
Magic Number,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_support_queueing_multiple_queries,The following statement contains a magic number: _inbox.Receiver.Tell(42);
Magic Number,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_support_queueing_multiple_queries,The following statement contains a magic number: tasks[0].Result.ShouldBe(42);
Magic Number,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_support_queueing_multiple_queries,The following statement contains a magic number: tasks[2].Result.ShouldBe("hello");
Magic Number,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_have_maximum_queue_size,The following statement contains a magic number: Enumerable.Repeat(0' 1000)
Magic Number,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_have_maximum_queue_size,The following statement contains a magic number: EventFilter.Warning(start:"Dropping message").ExpectOne(() => _inbox.Receiver.Tell(42));
Magic Number,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_have_maximum_queue_size,The following statement contains a magic number: _inbox.Receiver.Tell(42);
Magic Number,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_have_maximum_queue_size,The following statement contains a magic number: var gotit = Enumerable.Repeat(0' 1000).Select(_ => _inbox.Receive());
Magic Number,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_have_a_default_and_custom_timeouts,The following statement contains a magic number: Within(TimeSpan.FromSeconds(4)' TimeSpan.FromSeconds(6)' () =>              {                  Intercept<TimeoutException>(() => _inbox.Receive());                  return true;              });
Magic Number,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_have_a_default_and_custom_timeouts,The following statement contains a magic number: Within(TimeSpan.FromSeconds(4)' TimeSpan.FromSeconds(6)' () =>              {                  Intercept<TimeoutException>(() => _inbox.Receive());                  return true;              });
Magic Number,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_have_a_default_and_custom_timeouts,The following statement contains a magic number: Within(TimeSpan.FromSeconds(1)' () =>              {                  Intercept<TimeoutException>(() => _inbox.Receive(TimeSpan.FromMilliseconds(100)));                  return true;              });
Magic Number,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Select_WithClient_should_update_Client_and_copy_the_rest_of_the_properties_BUG_427,The following statement contains a magic number: var deadline = new TimeSpan(Sys.Scheduler.MonotonicClock.Ticks/2);
Magic Number,Akka.Tests.Actor,InboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_Receive_will_timeout_gracefully_if_timeout_is_already_expired,The following statement contains a magic number: Assert.True(task.Wait(1000)' "Receive did not complete in time.");
Magic Number,Akka.Tests.Actor,LocalActorRefProviderSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\LocalActorRefProviderSpec.cs,An_ActorRefFactory_must_only_create_one_instance_of_an_actor_with_a_specific_address_in_a_concurrent_environment,The following statement contains a magic number: var timeout = Dilated(TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Actor,LocalActorRefProviderSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\LocalActorRefProviderSpec.cs,An_ActorRefFactory_must_only_create_one_instance_of_an_actor_with_a_specific_address_in_a_concurrent_environment,The following statement contains a magic number: var actors = Enumerable.Range(0' 4).Select(x => Task.Run(() => Sys.ActorOf(Props.Create(() => new BlackHoleActor())' address))).ToArray();
Magic Number,Akka.Tests.Actor,LocalActorRefProviderSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\LocalActorRefProviderSpec.cs,An_ActorRefFactory_must_only_create_one_instance_of_an_actor_with_a_specific_address_in_a_concurrent_environment,The following statement contains a magic number: i < 100
Magic Number,Akka.Tests.Actor,PatternSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\PatternSpec.cs,GracefulStop_must_provide_Task_for_stopping_an_actor,The following statement contains a magic number: var result = target.GracefulStop(TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Actor,PatternSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\PatternSpec.cs,GracefulStop_must_provide_Task_for_stopping_an_actor,The following statement contains a magic number: result.Wait(TimeSpan.FromSeconds(6));
Magic Number,Akka.Tests.Actor,PatternSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\PatternSpec.cs,GracefulStop_must_complete_Task_when_actor_already_terminated,The following statement contains a magic number: Assert.True(await target.GracefulStop(TimeSpan.FromSeconds(5)));
Magic Number,Akka.Tests.Actor,PatternSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\PatternSpec.cs,GracefulStop_must_complete_Task_when_actor_already_terminated,The following statement contains a magic number: Assert.True(await target.GracefulStop(TimeSpan.FromSeconds(5)));
Magic Number,Akka.Tests.Actor,PatternSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\PatternSpec.cs,GracefulStop_must_complete_Task_with_TaskCanceledException_when_actor_not_terminated_within_timeout,The following statement contains a magic number: target.Tell((latch' TimeSpan.FromSeconds(2)));
Magic Number,Akka.Tests.Actor,PatternSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\PatternSpec.cs,GracefulStop_must_complete_Task_with_TaskCanceledException_when_actor_not_terminated_within_timeout,The following statement contains a magic number: XAssert.Throws<TaskCanceledException>(() =>              {                  var task = target.GracefulStop(TimeSpan.FromMilliseconds(500));                  task.Wait();                  var result = task.Result;              });
Magic Number,Akka.Tests.Actor,PatternSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\PatternSpec.cs,GracefulStop_must_not_send_unnecessary_Deadletter_bug_2157,The following statement contains a magic number: var stopped = await target.GracefulStop(TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Actor,PipeToSupportSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\PipeToSupportSpec.cs,Should_by_default_not_send_a_success_message_if_the_task_does_not_produce_a_result,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Tests.Actor,ReceiveActorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_which_uses_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(5' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_which_uses_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(10' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_which_uses_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(15' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_that_uses_non_generic_and_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(5' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_that_uses_non_generic_and_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(10' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_that_uses_non_generic_and_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(15' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_with_ReceiveAny_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(4711' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_which_overrides_PreStart_When_sending_a_message_Then_the_message_should_be_handled,The following statement contains a magic number: actor.Tell(4711' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_which_overrides_PreStart_When_sending_a_message_Then_the_message_should_be_handled,The following statement contains a magic number: ExpectMsg(4711);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_actor_When_it_calls_Become_Then_it_switches_handler,The following statement contains a magic number: actor.Tell(4711' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_actor_When_it_calls_Become_Then_it_switches_handler,The following statement contains a magic number: ExpectMsg<UnhandledMessage>( m => ((int)m.Message) == 4711 && m.Recipient == actor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_actor_When_it_calls_Become_Then_it_switches_handler,The following statement contains a magic number: actor.Tell(4711' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_actor_When_it_calls_Become_Then_it_switches_handler,The following statement contains a magic number: ExpectMsg<UnhandledMessage>(m => ((int)m.Message) == 4711 && m.Recipient == actor);
Magic Number,Akka.Tests.Actor,IntPredicatesActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,IntPredicatesActor,The following statement contains a magic number: Receive<int>(i => i < 5' i => Sender.Tell("int<5:" + i' Self));
Magic Number,Akka.Tests.Actor,IntPredicatesActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,IntPredicatesActor,The following statement contains a magic number: Receive<int>(i => Sender.Tell("int<10:" + i' Self)' i => i < 10);
Magic Number,Akka.Tests.Actor,IntPredicatesActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,IntPredicatesActor,The following statement contains a magic number: Receive<int>(i =>                  {                      if(i < 15)                      {                          Sender.Tell("int<15:" + i' Self);                          return true;                      }                      return false;                  });
Magic Number,Akka.Tests.Actor,TypePredicatesActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,TypePredicatesActor,The following statement contains a magic number: Receive(typeof(int)' i => (int)i < 5' i => Sender.Tell("int<5:" + i' Self));
Magic Number,Akka.Tests.Actor,TypePredicatesActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,TypePredicatesActor,The following statement contains a magic number: Receive(typeof(int)' i => Sender.Tell("int<10:" + i' Self)' i => (int)i < 10);
Magic Number,Akka.Tests.Actor,TypePredicatesActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,TypePredicatesActor,The following statement contains a magic number: Receive(typeof(int)' o =>                  {                      var i = (int) o;                      if(i < 15)                      {                          Sender.Tell("int<15:" + i' Self);                          return true;                      }                      return false;                  });
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,An_actor_with_receive_timeout_must_get_timeout,The following statement contains a magic number: var timeoutActor = Sys.ActorOf(Props.Create(() => new TimeoutActor(timeoutLatch' TimeSpan.FromMilliseconds(500))));
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,An_actor_with_receive_timeout_must_reschedule_timeout_after_regular_receive,The following statement contains a magic number: var timeoutActor = Sys.ActorOf(Props.Create(() => new TimeoutActor(timeoutLatch' TimeSpan.FromMilliseconds(500))));
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,An_actor_with_receive_timeout_must_get_timeout_while_receiving_NotInfluenceReceiveTimeout_messages,The following statement contains a magic number: Sys.Scheduler.Schedule(                  TimeSpan.FromMilliseconds(100)'                  TimeSpan.FromMilliseconds(100)'                  () =>                  {                      timeoutActor.Tell(new TransparentTick());                      timeoutActor.Tell(new Identify(null));                  }' cancellationToken.Token);
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,An_actor_with_receive_timeout_must_get_timeout_while_receiving_NotInfluenceReceiveTimeout_messages,The following statement contains a magic number: Sys.Scheduler.Schedule(                  TimeSpan.FromMilliseconds(100)'                  TimeSpan.FromMilliseconds(100)'                  () =>                  {                      timeoutActor.Tell(new TransparentTick());                      timeoutActor.Tell(new Identify(null));                  }' cancellationToken.Token);
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,An_actor_with_receive_timeout_must_get_timeout_while_receiving_only_NotInfluenceReceiveTimeout_messages,The following statement contains a magic number: var timeoutLatch = new TestLatch(2);
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,Issue469_An_actor_with_receive_timeout_must_cancel_receive_timeout_when_terminated,The following statement contains a magic number: var timeoutActor = Sys.ActorOf(Props.Create(() => new TimeoutActor(timeoutLatch' TimeSpan.FromMilliseconds(500))));
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,Issue469_An_actor_with_receive_timeout_must_cancel_receive_timeout_when_terminated,The following statement contains a magic number: timeoutLatch.Ready(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,An_actor_with_receive_timeout_must_be_able_to_turn_on_timeout_in_NotInfluenceReceiveTimeout_message_handler,The following statement contains a magic number: Action<IActorDsl> actor = d =>              {                  d.Receive<TransparentTick>((_' c) => c.SetReceiveTimeout(500.Milliseconds()));                  d.Receive<ReceiveTimeout>((_' __) => timeoutLatch.Open());              };
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,An_actor_with_receive_timeout_must_be_able_to_turn_off_timeout_in_NotInfluenceReceiveTimeout_message_handler,The following statement contains a magic number: Action<IActorDsl> actor = d =>              {                  d.OnPreStart = c => c.SetReceiveTimeout(500.Milliseconds());                  d.Receive<TransparentTick>((_' c) => c.SetReceiveTimeout(null));                  d.Receive<ReceiveTimeout>((_' __) => timeoutLatch.Open());              };
Magic Number,Akka.Tests.Actor,TurnOffTimeoutActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,TurnOffTimeoutActor,The following statement contains a magic number: Context.SetReceiveTimeout(TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,IpEndPoints,The following statement contains a magic number: return Arb.From(Gen.Elements<IPEndPoint>(new IPEndPoint(IPAddress.Loopback' 1337)'                 new IPEndPoint(IPAddress.Any' 1337)));
Magic Number,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,IpEndPoints,The following statement contains a magic number: return Arb.From(Gen.Elements<IPEndPoint>(new IPEndPoint(IPAddress.Loopback' 1337)'                 new IPEndPoint(IPAddress.Any' 1337)));
Magic Number,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,IpEndPoints,The following statement contains a magic number: return Arb.From(Gen.Elements<IPEndPoint>(new IPEndPoint(IPAddress.Loopback' 1337)'                new IPEndPoint(IPAddress.IPv6Loopback' 1337)'                new IPEndPoint(IPAddress.Any' 1337)' new IPEndPoint(IPAddress.IPv6Any' 1337)));
Magic Number,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,IpEndPoints,The following statement contains a magic number: return Arb.From(Gen.Elements<IPEndPoint>(new IPEndPoint(IPAddress.Loopback' 1337)'                new IPEndPoint(IPAddress.IPv6Loopback' 1337)'                new IPEndPoint(IPAddress.Any' 1337)' new IPEndPoint(IPAddress.IPv6Any' 1337)));
Magic Number,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,IpEndPoints,The following statement contains a magic number: return Arb.From(Gen.Elements<IPEndPoint>(new IPEndPoint(IPAddress.Loopback' 1337)'                new IPEndPoint(IPAddress.IPv6Loopback' 1337)'                new IPEndPoint(IPAddress.Any' 1337)' new IPEndPoint(IPAddress.IPv6Any' 1337)));
Magic Number,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,IpEndPoints,The following statement contains a magic number: return Arb.From(Gen.Elements<IPEndPoint>(new IPEndPoint(IPAddress.Loopback' 1337)'                new IPEndPoint(IPAddress.IPv6Loopback' 1337)'                new IPEndPoint(IPAddress.Any' 1337)' new IPEndPoint(IPAddress.IPv6Any' 1337)));
Magic Number,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,AllEndpoints,The following statement contains a magic number: return Arb.From(Gen.Elements<EndPoint>(new IPEndPoint(IPAddress.Loopback' 1337)'                 new DnsEndPoint("localhost"' 1337)' new IPEndPoint(IPAddress.Any' 1337)));
Magic Number,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,AllEndpoints,The following statement contains a magic number: return Arb.From(Gen.Elements<EndPoint>(new IPEndPoint(IPAddress.Loopback' 1337)'                 new DnsEndPoint("localhost"' 1337)' new IPEndPoint(IPAddress.Any' 1337)));
Magic Number,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,AllEndpoints,The following statement contains a magic number: return Arb.From(Gen.Elements<EndPoint>(new IPEndPoint(IPAddress.Loopback' 1337)'                 new DnsEndPoint("localhost"' 1337)' new IPEndPoint(IPAddress.Any' 1337)));
Magic Number,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,AllEndpoints,The following statement contains a magic number: return Arb.From(Gen.Elements<EndPoint>(new IPEndPoint(IPAddress.Loopback' 1337)'                 new IPEndPoint(IPAddress.IPv6Loopback' 1337)'                 new DnsEndPoint("localhost"' 1337)' new IPEndPoint(IPAddress.Any' 1337)'                 new IPEndPoint(IPAddress.IPv6Any' 1337)));
Magic Number,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,AllEndpoints,The following statement contains a magic number: return Arb.From(Gen.Elements<EndPoint>(new IPEndPoint(IPAddress.Loopback' 1337)'                 new IPEndPoint(IPAddress.IPv6Loopback' 1337)'                 new DnsEndPoint("localhost"' 1337)' new IPEndPoint(IPAddress.Any' 1337)'                 new IPEndPoint(IPAddress.IPv6Any' 1337)));
Magic Number,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,AllEndpoints,The following statement contains a magic number: return Arb.From(Gen.Elements<EndPoint>(new IPEndPoint(IPAddress.Loopback' 1337)'                 new IPEndPoint(IPAddress.IPv6Loopback' 1337)'                 new DnsEndPoint("localhost"' 1337)' new IPEndPoint(IPAddress.Any' 1337)'                 new IPEndPoint(IPAddress.IPv6Any' 1337)));
Magic Number,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,AllEndpoints,The following statement contains a magic number: return Arb.From(Gen.Elements<EndPoint>(new IPEndPoint(IPAddress.Loopback' 1337)'                 new IPEndPoint(IPAddress.IPv6Loopback' 1337)'                 new DnsEndPoint("localhost"' 1337)' new IPEndPoint(IPAddress.Any' 1337)'                 new IPEndPoint(IPAddress.IPv6Any' 1337)));
Magic Number,Akka.Tests.Actor,EndpointGenerators,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\RemotePathParsingSpec.cs,AllEndpoints,The following statement contains a magic number: return Arb.From(Gen.Elements<EndPoint>(new IPEndPoint(IPAddress.Loopback' 1337)'                 new IPEndPoint(IPAddress.IPv6Loopback' 1337)'                 new DnsEndPoint("localhost"' 1337)' new IPEndPoint(IPAddress.Any' 1337)'                 new IPEndPoint(IPAddress.IPv6Any' 1337)));
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_Restart_Manager_And_Workers_In_AllForOne,The following statement contains a magic number: var countDown = new CountdownEvent(4);
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_Restart_Manager_And_Workers_In_AllForOne,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().ExpectOne(() =>              {                  worker1.Tell(Kill.Instance);                  // manager + all workers should be restarted by only killing a worker                  // manager doesn't trap exits' so boss will restart manager                    countDown.Wait(TimeSpan.FromSeconds(5)).ShouldBe(true);                });
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_must_send_notifications_to_supervisor_when_permanent_failure,The following statement contains a magic number: var boss = ActorOf((cfg' ctx) =>              {                  var crasher = ctx.ActorOf(Props.Create(() => new CountDownActor(countDownMessages' SupervisorStrategy.DefaultStrategy))' "crasher");                  cfg.Receive("killCrasher"' (s' context) => crasher.Tell(Kill.Instance));                  cfg.Receive<Terminated>((terminated' context) => countDownMax.Signal());                  cfg.Strategy = new OneForOneStrategy(1' TimeSpan.FromSeconds(5)' e => Directive.Restart);                  ctx.Watch(crasher);              }' "boss");
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_must_send_notifications_to_supervisor_when_permanent_failure,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().Expect(2' () =>              {                  boss.Tell("killCrasher");                  boss.Tell("killCrasher");              });
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_must_send_notifications_to_supervisor_when_permanent_failure,The following statement contains a magic number: countDownMessages.Wait(TimeSpan.FromSeconds(2)).ShouldBeTrue();
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_must_send_notifications_to_supervisor_when_permanent_failure,The following statement contains a magic number: countDownMax.Wait(TimeSpan.FromSeconds(2)).ShouldBeTrue();
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_suspend_children_while_failing,The following statement contains a magic number: var slowResumer = ActorOf(c =>              {                  c.Strategy = new OneForOneStrategy(e => { latch.Ready(Dilated(TimeSpan.FromSeconds(4))); return Directive.Resume; });                  c.Receive<string>(s => s.StartsWith("spawn:")' (s' ctx) => ctx.Sender.Tell(ctx.ActorOf<Resumer>(s.Substring(6))));                  c.Receive("spawn"' (s' ctx) => ctx.Sender.Tell(ctx.ActorOf<Resumer>()));              }' "slowResumer");
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_suspend_children_while_failing,The following statement contains a magic number: var slowResumer = ActorOf(c =>              {                  c.Strategy = new OneForOneStrategy(e => { latch.Ready(Dilated(TimeSpan.FromSeconds(4))); return Directive.Resume; });                  c.Receive<string>(s => s.StartsWith("spawn:")' (s' ctx) => ctx.Sender.Tell(ctx.ActorOf<Resumer>(s.Substring(6))));                  c.Receive("spawn"' (s' ctx) => ctx.Sender.Tell(ctx.ActorOf<Resumer>()));              }' "slowResumer");
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_suspend_children_while_failing,The following statement contains a magic number: ExpectMsg("pong"' TimeSpan.FromMinutes(10));
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_handle_failure_in_creation_when_supervision_strategy_returns_Resume_and_Restart,The following statement contains a magic number: EventFilter.Exception<Failure>()                  .And.Exception<InvalidOperationException>("OH NO!")                  .And.Error(start: "changing Recreate into Create")                  .And.Error(start: "changing Resume into Create")                  .Mute(() =>                  {                      //Create:                      // failresumer                      //    |                      // failingChild                      //    | (sometimes)                      // workingChild                      var failresumer = ActorOf((resumerDsl' context) =>                      {                          resumerDsl.Strategy = new OneForOneStrategy(ex => ex is ActorInitializationException ? (createAttempt.Current % 2 == 0 ? Directive.Resume : Directive.Restart) : Directive.Escalate);                          var failingChild = context.ActorOf((childDsl' childContext) =>                          {                              var ca = createAttempt.IncrementAndGet();                              if (ca <= 6 && ca % 3 == 0)                                  childContext.ActorOf(BlackHoleActor.Props' "workingChild" + ca);                              if (ca < 6)                                  throw new InvalidOperationException("OH NO!");                              childDsl.OnPreStart = _ => preStartCalled.IncrementAndGet();                              childDsl.OnPostRestart = (e' _) => postRestartCalled.IncrementAndGet();                              childDsl.ReceiveAny((m' actorContext) => actorContext.Sender.Tell(m));                          }' "failingChild");                          resumerDsl.ReceiveAny((m' _) => failingChild.Forward(m));                      }' "failresumer");                        //Send failresumer some meatballs. This message will be forwarded to failingChild                      failresumer.Tell("Köttbullar");                      ExpectMsg("Köttbullar");                  });
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_handle_failure_in_creation_when_supervision_strategy_returns_Resume_and_Restart,The following statement contains a magic number: EventFilter.Exception<Failure>()                  .And.Exception<InvalidOperationException>("OH NO!")                  .And.Error(start: "changing Recreate into Create")                  .And.Error(start: "changing Resume into Create")                  .Mute(() =>                  {                      //Create:                      // failresumer                      //    |                      // failingChild                      //    | (sometimes)                      // workingChild                      var failresumer = ActorOf((resumerDsl' context) =>                      {                          resumerDsl.Strategy = new OneForOneStrategy(ex => ex is ActorInitializationException ? (createAttempt.Current % 2 == 0 ? Directive.Resume : Directive.Restart) : Directive.Escalate);                          var failingChild = context.ActorOf((childDsl' childContext) =>                          {                              var ca = createAttempt.IncrementAndGet();                              if (ca <= 6 && ca % 3 == 0)                                  childContext.ActorOf(BlackHoleActor.Props' "workingChild" + ca);                              if (ca < 6)                                  throw new InvalidOperationException("OH NO!");                              childDsl.OnPreStart = _ => preStartCalled.IncrementAndGet();                              childDsl.OnPostRestart = (e' _) => postRestartCalled.IncrementAndGet();                              childDsl.ReceiveAny((m' actorContext) => actorContext.Sender.Tell(m));                          }' "failingChild");                          resumerDsl.ReceiveAny((m' _) => failingChild.Forward(m));                      }' "failresumer");                        //Send failresumer some meatballs. This message will be forwarded to failingChild                      failresumer.Tell("Köttbullar");                      ExpectMsg("Köttbullar");                  });
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_handle_failure_in_creation_when_supervision_strategy_returns_Resume_and_Restart,The following statement contains a magic number: EventFilter.Exception<Failure>()                  .And.Exception<InvalidOperationException>("OH NO!")                  .And.Error(start: "changing Recreate into Create")                  .And.Error(start: "changing Resume into Create")                  .Mute(() =>                  {                      //Create:                      // failresumer                      //    |                      // failingChild                      //    | (sometimes)                      // workingChild                      var failresumer = ActorOf((resumerDsl' context) =>                      {                          resumerDsl.Strategy = new OneForOneStrategy(ex => ex is ActorInitializationException ? (createAttempt.Current % 2 == 0 ? Directive.Resume : Directive.Restart) : Directive.Escalate);                          var failingChild = context.ActorOf((childDsl' childContext) =>                          {                              var ca = createAttempt.IncrementAndGet();                              if (ca <= 6 && ca % 3 == 0)                                  childContext.ActorOf(BlackHoleActor.Props' "workingChild" + ca);                              if (ca < 6)                                  throw new InvalidOperationException("OH NO!");                              childDsl.OnPreStart = _ => preStartCalled.IncrementAndGet();                              childDsl.OnPostRestart = (e' _) => postRestartCalled.IncrementAndGet();                              childDsl.ReceiveAny((m' actorContext) => actorContext.Sender.Tell(m));                          }' "failingChild");                          resumerDsl.ReceiveAny((m' _) => failingChild.Forward(m));                      }' "failresumer");                        //Send failresumer some meatballs. This message will be forwarded to failingChild                      failresumer.Tell("Köttbullar");                      ExpectMsg("Köttbullar");                  });
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_handle_failure_in_creation_when_supervision_strategy_returns_Resume_and_Restart,The following statement contains a magic number: EventFilter.Exception<Failure>()                  .And.Exception<InvalidOperationException>("OH NO!")                  .And.Error(start: "changing Recreate into Create")                  .And.Error(start: "changing Resume into Create")                  .Mute(() =>                  {                      //Create:                      // failresumer                      //    |                      // failingChild                      //    | (sometimes)                      // workingChild                      var failresumer = ActorOf((resumerDsl' context) =>                      {                          resumerDsl.Strategy = new OneForOneStrategy(ex => ex is ActorInitializationException ? (createAttempt.Current % 2 == 0 ? Directive.Resume : Directive.Restart) : Directive.Escalate);                          var failingChild = context.ActorOf((childDsl' childContext) =>                          {                              var ca = createAttempt.IncrementAndGet();                              if (ca <= 6 && ca % 3 == 0)                                  childContext.ActorOf(BlackHoleActor.Props' "workingChild" + ca);                              if (ca < 6)                                  throw new InvalidOperationException("OH NO!");                              childDsl.OnPreStart = _ => preStartCalled.IncrementAndGet();                              childDsl.OnPostRestart = (e' _) => postRestartCalled.IncrementAndGet();                              childDsl.ReceiveAny((m' actorContext) => actorContext.Sender.Tell(m));                          }' "failingChild");                          resumerDsl.ReceiveAny((m' _) => failingChild.Forward(m));                      }' "failresumer");                        //Send failresumer some meatballs. This message will be forwarded to failingChild                      failresumer.Tell("Köttbullar");                      ExpectMsg("Köttbullar");                  });
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_handle_failure_in_creation_when_supervision_strategy_returns_Resume_and_Restart,The following statement contains a magic number: createAttempt.Current.ShouldBe(6);
Magic Number,Akka.Tests.Actor,Resumer,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,Resumer,The following statement contains a magic number: Receive<string>(s => s.StartsWith("spawn:")' s => Sender.Tell(Context.ActorOf<Resumer>(s.Substring(6))));
Magic Number,Akka.Tests.Actor,ResumerAsync,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,ResumerAsync,The following statement contains a magic number: ReceiveAsync<string>(s => s.StartsWith("spawn:")' async s => Sender.Tell(Context.ActorOf<ResumerAsync>(s.Substring(6))));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart))));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart))));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: ExpectMsg(("postRestart"' id' 2));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: ExpectMsg(("OK"' id' 2));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: ExpectMsg(("preRestart"' id' 2));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: ExpectMsg(("postRestart"' id' 3));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: ExpectMsg(("OK"' id' 3));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: ExpectMsg(("postStop"' id' 3));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart))));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart))));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: ExpectMsg(("preStart"' id' 2));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: ExpectMsg(("OK"' id' 2));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: ExpectMsg(("postStop"' id' 2));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: ExpectMsg(("preStart"' id' 3));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: ExpectMsg(("OK"' id' 3));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: ExpectMsg(("postStop"' id' 3));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test3,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart))));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test3,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart))));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_behavior_stack_upon_restart,The following statement contains a magic number: ExpectMsg(42);
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_behavior_stack_upon_restart,The following statement contains a magic number: ExpectMsg(43);
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_behavior_stack_upon_restart,The following statement contains a magic number: ExpectMsg(42);
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: ExpectMsg(2);
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: Task.Delay(100).Wait();
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: supervisor.Tell(new SupervisorTestActor.Spawn() { Name = names[2] });
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: ExpectMsg(("Created"' names[2]));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: Task.Delay(100).Wait();
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: ExpectMsg(2);
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: supervisor.Tell(new SupervisorTestActor.Stop() { Name = names[2] });
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: ExpectMsg(("Terminated"' names[2]));
Magic Number,Akka.Tests,ActorLifeCycleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: Task.Delay(100).Wait();
Magic Number,Akka.Tests.Actor.Cancellation,CancelableTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Cancellation\CancelableTests.cs,Should_be_possible_to_call_CancelAfterMs,The following statement contains a magic number: c.CancelAfter(50);
Magic Number,Akka.Tests.Actor.Cancellation,CancelableTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Cancellation\CancelableTests.cs,Should_be_possible_to_call_CancelAfterTimespan,The following statement contains a magic number: c.CancelAfter(TimeSpan.FromMilliseconds(50));
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,AssertDispatcher,The following statement contains a magic number: var deadline = MonotonicClock.GetMilliseconds() + (long)(dispatcher.ShutdownTimeout.TotalMilliseconds * 5);
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,AssertRef,The following statement contains a magic number: var deadline = MonotonicClock.GetMilliseconds() + 1000;
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,AwaitStarted,The following statement contains a magic number: AwaitCondition(() =>              {                  if (actorRef is RepointableActorRef)                      return actorRef.AsInstanceOf<RepointableActorRef>().IsStarted;                  return true;              }' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(10));
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_dynamically_handle_its_own_lifecycle,The following statement contains a magic number: AssertDispatcher(dispatcher' 2);
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_process_messages_one_at_a_time,The following statement contains a magic number: AssertCountdown(start' (int)Dilated(TimeSpan.FromSeconds(3.0)).TotalMilliseconds' "Should process first message within 3 seconds");
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_process_messages_one_at_a_time,The following statement contains a magic number: a.Tell(new Wait(1000));
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_process_messages_one_at_a_time,The following statement contains a magic number: AssertCountdown(oneAtTime' (int)Dilated(TimeSpan.FromSeconds(1.5)).TotalMilliseconds' "Should process message when allowed");
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_process_messages_one_at_a_time,The following statement contains a magic number: AssertRefDefaultZero(a' registers: 1' msgsReceived: 3' msgsProcessed: 3' dispatcher: dispatcher);
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_process_messages_one_at_a_time,The following statement contains a magic number: AssertRefDefaultZero(a' registers: 1' msgsReceived: 3' msgsProcessed: 3' dispatcher: dispatcher);
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_process_messages_one_at_a_time,The following statement contains a magic number: AssertRefDefaultZero(a' registers: 1' msgsReceived: 3' msgsProcessed: 3' unregisters: 1' dispatcher: dispatcher);
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_process_messages_one_at_a_time,The following statement contains a magic number: AssertRefDefaultZero(a' registers: 1' msgsReceived: 3' msgsProcessed: 3' unregisters: 1' dispatcher: dispatcher);
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_handle_queuing_from_multiple_threads,The following statement contains a magic number: var counter = new CountdownEvent(200);
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_handle_queuing_from_multiple_threads,The following statement contains a magic number: Task.Run(() =>                  {                      foreach (var c in Enumerable.Range(1' 20))                      {                          a.Tell(new WaitAck(1' counter));                      }                  });
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_handle_queuing_from_multiple_threads,The following statement contains a magic number: Enumerable.Range(1' 10)
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_handle_queuing_from_multiple_threads,The following statement contains a magic number: AssertCountdown(counter' (int)Dilated(TimeSpan.FromSeconds(3.0)).TotalMilliseconds' "Should process 200 messages");
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_handle_queuing_from_multiple_threads,The following statement contains a magic number: AssertRefDefaultZero(a' dispatcher' registers: 1' msgsReceived: 200' msgsProcessed: 200);
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_handle_queuing_from_multiple_threads,The following statement contains a magic number: AssertRefDefaultZero(a' dispatcher' registers: 1' msgsReceived: 200' msgsProcessed: 200);
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_should_not_process_messages_for_a_suspended_actor,The following statement contains a magic number: AssertNoCountdown(done' 1000' "Should not process messages while suspended");
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_should_not_process_messages_for_a_suspended_actor,The following statement contains a magic number: AssertCountdown(done' (int)Dilated(TimeSpan.FromSeconds(3.0)).TotalMilliseconds' "Should resume processing of messages when resumed");
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_handle_waves_of_actors,The following statement contains a magic number: Action<int> flood = num =>              {                  var cachedMessage = new CountDownNStop(new CountdownEvent(num));                  var stopLatch = new CountdownEvent(num);                  var keepAliveLatch = new CountdownEvent(1);                  var waitTime = (int)Dilated(TimeSpan.FromSeconds(20)).TotalMilliseconds;                  Action<IActorDsl> bossActor = c =>                  {                      c.Receive<string>(str => str.Equals("run")' (s' context) =>                      {                          for (var i = 1; i <= num; i++)                          {                              context.Watch(context.ActorOf(props)).Tell(cachedMessage);                          }                      });                        c.Receive<Terminated>((terminated' context) =>                      {                          stopLatch.Signal();                      });                  };                  var boss = Sys.ActorOf(Props.Create(() => new Act(bossActor)).WithDispatcher("boss"));                    try                  {                      // this future is meant to keep the dispatcher alive until the end of the test run even if                      // the boss doesn't create children fast enough to keep the dispatcher from becoming empty                      // and it needs to be on a separate thread to not deadlock the calling thread dispatcher                      dispatcher.Schedule(() =>                      {                          keepAliveLatch.Wait(waitTime);                      });                      boss.Tell("run");                      try                      {                          AssertCountdown(cachedMessage.Latch' waitTime' "Counting down from " + num);                      }                      catch (Exception ex)                      {                          // TODO balancing dispatcher                          throw;                      }                      AssertCountdown(stopLatch' waitTime' "Expected all children to stop.");                  }                  finally                  {                      keepAliveLatch.Signal();                      Sys.Stop(boss);                  }              };
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_handle_waves_of_actors,The following statement contains a magic number: flood(50000);
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_handle_waves_of_actors,The following statement contains a magic number: i <= 3
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_continue_to_process_messages_when_exception_is_thrown,The following statement contains a magic number: EventFilter.Exception<IndexOutOfRangeException>().And.Exception<InvalidComObjectException>().Expect(2'                  () =>                  {                      var dispatcher = InterceptedDispatcher();                      var a = NewTestActor(dispatcher.Id);                      var f1 = a.Ask(new Reply("foo"));                      var f2 = a.Ask(new Reply("bar"));                      var f3 = a.Ask(new ThrowException(new IndexOutOfRangeException("IndexOutOfRangeException")));                      var f4 = a.Ask(new Reply("foo2"));                      var f5 = a.Ask(new ThrowException(new InvalidComObjectException("InvalidComObjectException")));                      var f6 = a.Ask(new Reply("bar2"));                        Assert.True(f1.Wait(GetTimeoutOrDefault(null)));                      f1.Result.ShouldBe("foo");                      Assert.True(f2.Wait(GetTimeoutOrDefault(null)));                      f2.Result.ShouldBe("bar");                      Assert.True(f4.Wait(GetTimeoutOrDefault(null)));                      f4.Result.ShouldBe("foo2");                      Assert.True(f6.Wait(GetTimeoutOrDefault(null)));                      f6.Result.ShouldBe("bar2");                      Assert.False(f3.IsCompleted);                      Assert.False(f5.IsCompleted);                  });
Magic Number,Akka.Tests.Actor.Dispatch,ActorModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_not_double_deregister,The following statement contains a magic number: i <= 1000
Magic Number,Akka.Tests.Actor.Dispatch,DispatcherModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_process_messages_in_parallel,The following statement contains a magic number: AssertCountdown(aStart' (int)Dilated(TimeSpan.FromSeconds(3)).TotalMilliseconds' "Should process first message within 3 seconds");
Magic Number,Akka.Tests.Actor.Dispatch,DispatcherModelSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\ActorModelSpec.cs,A_dispatcher_must_process_messages_in_parallel,The following statement contains a magic number: AssertCountdown(bParallel' (int)Dilated(TimeSpan.FromSeconds(3)).TotalMilliseconds' "Should process other actors in parallel");
Magic Number,Akka.Tests.Actor.Dispatch,Bug2640Spec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\Bug2640Spec.cs,ForkJoinExecutorShouldShutdownUponActorSystemTermination,The following statement contains a magic number: var actor = Sys.ActorOf(Props.Create(() => new ThreadReporterActor())                  .WithDispatcher("myapp.my-fork-join-dispatcher").WithRouter(new RoundRobinPool(4)));
Magic Number,Akka.Tests.Actor.Dispatch,Bug2640Spec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\Bug2640Spec.cs,ForkJoinExecutorShouldShutdownUponActorSystemTermination,The following statement contains a magic number: i < 100
Magic Number,Akka.Tests.Actor.Dispatch,Bug2640Spec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\Bug2640Spec.cs,ForkJoinExecutorShouldShutdownUponActorSystemTermination,The following statement contains a magic number: threads = ReceiveN(100).Cast<Thread>().GroupBy(x => x.ManagedThreadId)                  .ToDictionary(x => x.Key' grouping => grouping.First());
Magic Number,Akka.Tests.Actor.Dispatch,Bug2640Spec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\Bug2640Spec.cs,ForkJoinExecutorShouldShutdownUponAllActorsTerminating,The following statement contains a magic number: var actor = Sys.ActorOf(Props.Create(() => new ThreadReporterActor())                  .WithDispatcher("myapp.my-fork-join-dispatcher").WithRouter(new RoundRobinPool(4)));
Magic Number,Akka.Tests.Actor.Dispatch,Bug2640Spec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\Bug2640Spec.cs,ForkJoinExecutorShouldShutdownUponAllActorsTerminating,The following statement contains a magic number: var msgCount = 100;
Magic Number,Akka.Tests.Actor.Dispatch,Bug2751Spec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\Bug2751Spec.cs,ShouldReceiveSysMsgBeforeUserMsg,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(250));
Magic Number,Akka.Tests.Actor.Dispatch,Bug2751Spec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Dispatch\Bug2751Spec.cs,ShouldReceiveSysMsgBeforeUserMsg,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Tests.Actor.Scheduler,SchedulerShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\SchedulerShutdownSpec.cs,ActorSystem_must_terminate_scheduler_with_queued_work_on_shutdown,The following statement contains a magic number: sys.Scheduler.Advanced.ScheduleRepeatedly(TimeSpan.FromMilliseconds(0)' TimeSpan.FromMilliseconds(10)' () => i++);
Magic Number,Akka.Tests.Actor.Scheduler,SchedulerShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\SchedulerShutdownSpec.cs,ActorSystem_must_terminate_scheduler_with_queued_work_on_shutdown,The following statement contains a magic number: Task.Delay(100).Wait();
Magic Number,Akka.Tests.Actor.Scheduler,SchedulerShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\SchedulerShutdownSpec.cs,ActorSystem_must_terminate_scheduler_with_queued_work_on_shutdown,The following statement contains a magic number: Task.Delay(100).Wait();
Magic Number,Akka.Tests.Actor.Scheduler,SchedulerShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\SchedulerShutdownSpec.cs,ActorSystem_default_scheduler_mustbe_able_to_terminate_on_shutdown,The following statement contains a magic number: sys.Terminate().Wait(TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Actor.Scheduler,SchedulerShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\SchedulerShutdownSpec.cs,ActorSystem_default_scheduler_must_never_accept_more_work_after_shutdown,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Akka.Tests.Actor.Scheduler,SchedulerShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\SchedulerShutdownSpec.cs,ActorSystem_default_scheduler_must_never_accept_more_work_after_shutdown,The following statement contains a magic number: Assert.True(receiver.Ask<bool>("get"' TimeSpan.FromMilliseconds(100)).Result);
Magic Number,Akka.Tests.Actor.Scheduler,SchedulerShutdownSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\SchedulerShutdownSpec.cs,ActorSystem_default_scheduler_must_never_accept_more_work_after_shutdown,The following statement contains a magic number: !sys.Terminate().Wait(TimeSpan.FromSeconds(5))
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleOnce_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(100);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleRepeatedly_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleRepeatedly(0' 100' () => TestActor.Tell("Test1")' canceled);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleRepeatedly_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleRepeatedly(50' 100' () => TestActor.Tell("Test2")' canceled);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleRepeatedly_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleRepeatedly(50' 100' () => TestActor.Tell("Test2")' canceled);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleRepeatedly_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(150);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleOnce_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleOnce(100' () => TestActor.Tell("Test")' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleOnce_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(150);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleRepeatedly_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleRepeatedly(100' 2' () => TestActor.Tell("Test")' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleRepeatedly_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleRepeatedly(100' 2' () => TestActor.Tell("Test")' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleRepeatedly_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(150);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleRepeatedly(0' 150' () => TestActor.Tell("Test")' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(200);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_by_scheduling_the_cancellation_ahead_of_time_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleRepeatedly(1' 150' () => TestActor.Tell("Test")' cancelableOdd);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_by_scheduling_the_cancellation_ahead_of_time_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: cancelableOdd.CancelAfter(50);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_by_scheduling_the_cancellation_ahead_of_time_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(200);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleRepeatedly_in_milliseconds_Tests_and_verify_the_interval,The following statement contains a magic number: var receiver = ActorOf(dsl =>                  {                      //Receive three messages' and store the time when these were received                      //after three messages stop the actor and send the times to TestActor                      var messages = new List<DateTimeOffset>();                      dsl.Receive<string>((s' context) =>                      {                          messages.Add(context.System.Scheduler.Now);                          if (messages.Count == 3)                          {                              TestActor.Tell(messages);                              cancelable.Cancel();                              context.Stop(context.Self);                          }                      });                  });
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleRepeatedly_in_milliseconds_Tests_and_verify_the_interval,The following statement contains a magic number: dateTimeOffsets.ShouldHaveCount(3);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleRepeatedly_in_milliseconds_Tests_and_verify_the_interval,The following statement contains a magic number: Action<int' int> validate = (a' b) =>                  {                      var valA = dateTimeOffsets[a];                      var valB = dateTimeOffsets[b];                      var diffBetweenMessages = Math.Abs((valB - valA).TotalMilliseconds);                      var diffInMs = Math.Abs(diffBetweenMessages - interval);                      var deviate = (diffInMs/interval);                      deviate.Should(val => val < 0.1'                          string.Format(                              "Expected the interval between message {1} and {2} to deviate maximum 10% from {0}. It was {3} ms between the messages. It deviated {4}%"'                              interval' a + 1' b + 1' diffBetweenMessages' deviate*100));                  };
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleRepeatedly_in_milliseconds_Tests_and_verify_the_interval,The following statement contains a magic number: Action<int' int> validate = (a' b) =>                  {                      var valA = dateTimeOffsets[a];                      var valB = dateTimeOffsets[b];                      var diffBetweenMessages = Math.Abs((valB - valA).TotalMilliseconds);                      var diffInMs = Math.Abs(diffBetweenMessages - interval);                      var deviate = (diffInMs/interval);                      deviate.Should(val => val < 0.1'                          string.Format(                              "Expected the interval between message {1} and {2} to deviate maximum 10% from {0}. It was {3} ms between the messages. It deviated {4}%"'                              interval' a + 1' b + 1' diffBetweenMessages' deviate*100));                  };
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleRepeatedly_in_milliseconds_Tests_and_verify_the_interval,The following statement contains a magic number: validate(1' 2);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleOnceTests,The following statement contains a magic number: testScheduler.ScheduleOnce(50' () => TestActor.Tell("Test1"));
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleOnceTests,The following statement contains a magic number: testScheduler.ScheduleOnce(100' () => TestActor.Tell("Test2"));
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleOnceTests,The following statement contains a magic number: ExpectNoMsg(100);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleOnce_many_at_the_same_time_Then_all_fires,The following statement contains a magic number: ExpectNoMsg(50);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleRepeatedly_with_invalid_delay_Then_exception_is_thrown,The following statement contains a magic number: XAssert.Throws<ArgumentOutOfRangeException>(() =>                              testScheduler.ScheduleRepeatedly(invalidTime' 100' () => { })                  );
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleRepeatedly_with_invalid_interval_Then_exception_is_thrown,The following statement contains a magic number: XAssert.Throws<ArgumentOutOfRangeException>(() =>                              testScheduler.ScheduleRepeatedly(42' invalidInterval' () => { })                  );
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleOnce_with_0_delay_Then_action_is_executed_immediately,The following statement contains a magic number: manualResetEvent.Wait(500).ShouldBeTrue();
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleRepeatedly_with_0_delay_Then_action_is_executed_immediately,The following statement contains a magic number: testScheduler.ScheduleRepeatedly(0' 100' () => manualResetEvent.Set());
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleRepeatedly_with_0_delay_Then_action_is_executed_immediately,The following statement contains a magic number: manualResetEvent.Wait(500).ShouldBeTrue();
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleRepeatedly_action_crashes_Then_no_more_calls_will_be_scheduled,The following statement contains a magic number: testScheduler.ScheduleRepeatedly(0' 10' () =>                  {                      Interlocked.Increment(ref timesCalled);                      throw new Exception("Crash");                  });
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_ActionScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleRepeatedly_action_crashes_Then_no_more_calls_will_be_scheduled,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellOnce_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(100);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellRepeatedly_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(0' 2' TestActor' "Test"' ActorRefs.NoSender' canceled);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellRepeatedly_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(1' 2' TestActor' "Test"' ActorRefs.NoSender' canceled);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellRepeatedly_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(100);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellOnce_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleTellOnce(100' TestActor' "Test"' ActorRefs.NoSender' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellOnce_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(150);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellRepeatedly_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(100' 2' TestActor' "Test"' ActorRefs.NoSender' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellRepeatedly_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(100' 2' TestActor' "Test"' ActorRefs.NoSender' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellRepeatedly_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(150);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(0' 150' TestActor' "Test"' ActorRefs.NoSender' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(200);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_by_scheduling_the_cancellation_ahead_of_time_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(1' 150' TestActor' "Test"' ActorRefs.NoSender' cancelableOdd);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_by_scheduling_the_cancellation_ahead_of_time_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: cancelableOdd.CancelAfter(50);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Cancellation_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_by_scheduling_the_cancellation_ahead_of_time_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(200);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellRepeatedly_in_milliseconds_Tests,The following statement contains a magic number: var receiver = ActorOf(dsl =>                  {                      //Receive three messages' and store the time when these were received                      //after three messages stop the actor and send the times to TestActor                      var messages = new List<DateTimeOffset>();                      dsl.Receive<string>((s' context) =>                      {                          messages.Add(context.System.Scheduler.Now);                          if (messages.Count == 3)                          {                              TestActor.Tell(messages);                              cancelable.Cancel();                              context.Stop(context.Self);                          }                      });                  });
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellRepeatedly_in_milliseconds_Tests,The following statement contains a magic number: dateTimeOffsets.ShouldHaveCount(3);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellRepeatedly_in_milliseconds_Tests,The following statement contains a magic number: Action<int' int> validate = (a' b) =>                  {                      var valA = dateTimeOffsets[a];                      var valB = dateTimeOffsets[b];                      var diffBetweenMessages = Math.Abs((valB - valA).TotalMilliseconds);                      var diffInMs = Math.Abs(diffBetweenMessages - interval);                      var deviate = (diffInMs / interval);                      deviate.Should(val => val < 0.1'                          string.Format(                              "Expected the interval between message {1} and {2} to deviate maximum 10% from {0}. It was {3} ms between the messages. It deviated {4}%"'                              interval' a + 1' b + 1' diffBetweenMessages' deviate * 100));                  };
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellRepeatedly_in_milliseconds_Tests,The following statement contains a magic number: Action<int' int> validate = (a' b) =>                  {                      var valA = dateTimeOffsets[a];                      var valB = dateTimeOffsets[b];                      var diffBetweenMessages = Math.Abs((valB - valA).TotalMilliseconds);                      var diffInMs = Math.Abs(diffBetweenMessages - interval);                      var deviate = (diffInMs / interval);                      deviate.Should(val => val < 0.1'                          string.Format(                              "Expected the interval between message {1} and {2} to deviate maximum 10% from {0}. It was {3} ms between the messages. It deviated {4}%"'                              interval' a + 1' b + 1' diffBetweenMessages' deviate * 100));                  };
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellRepeatedly_in_milliseconds_Tests,The following statement contains a magic number: validate(1' 2);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellOnceTests,The following statement contains a magic number: ExpectNoMsg(50);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellOnce_many_at_the_same_time_Then_all_fires,The following statement contains a magic number: ExpectNoMsg(50);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellOnce_with_invalid_delay_Then_exception_is_thrown,The following statement contains a magic number: ExpectNoMsg(50);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellRepeatedly_with_invalid_delay_Then_exception_is_thrown,The following statement contains a magic number: XAssert.Throws<ArgumentOutOfRangeException>(() =>                              scheduler.ScheduleTellRepeatedly(invalidTime' 100' TestActor' "Test"' ActorRefs.NoSender)                  );
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellRepeatedly_with_invalid_delay_Then_exception_is_thrown,The following statement contains a magic number: ExpectNoMsg(50);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellRepeatedly_with_invalid_interval_Then_exception_is_thrown,The following statement contains a magic number: XAssert.Throws<ArgumentOutOfRangeException>(() =>                              scheduler.ScheduleTellRepeatedly(42' invalidInterval' TestActor' "Test"' ActorRefs.NoSender)                  );
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellRepeatedly_with_invalid_interval_Then_exception_is_thrown,The following statement contains a magic number: ExpectNoMsg(50);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellRepeatedly_with_0_delay_Then_action_is_executed_immediately,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(0' 60*1000' TestActor' "Test"' ActorRefs.NoSender);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_TellScheduler_Schedule_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellRepeatedly_with_0_delay_Then_action_is_executed_immediately,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(0' 60*1000' TestActor' "Test"' ActorRefs.NoSender);
Magic Number,Akka.Tests.Actor.Scheduler,DefaultScheduler_Verify_TimeProvider,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_Verify_TimeProvider.cs,Now_Should_be_accurate,The following statement contains a magic number: Math.Abs((timeProvider.Now - DateTimeOffset.Now).TotalMilliseconds).ShouldBeLessThan(20);
Magic Number,Akka.Tests.Actor.Stash,ActorWithStashSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,An_actor_Must_throw_an_exception_if_the_same_message_is_stashed_twice,The following statement contains a magic number: _state.ExpectedException.Ready(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor.Stash,ActorWithStashSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,An_actor_Must_process_stashed_messages_after_restart,The following statement contains a magic number: SupervisorStrategy strategy = new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' e => Directive.Restart);
Magic Number,Akka.Tests.Actor.Stash,ActorWithStashSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,An_actor_Must_process_stashed_messages_after_restart,The following statement contains a magic number: restartLatch.Ready(TimeSpan.FromSeconds(10));
Magic Number,Akka.Tests.Actor.Stash,ActorWithStashSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,An_actor_Must_process_stashed_messages_after_restart,The following statement contains a magic number: hasMsgLatch.Ready(TimeSpan.FromSeconds(10));
Magic Number,Akka.Tests.Actor.Stash,ActorWithStashSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,An_actor_that_clears_the_stash_on_preRestart_Must_not_receive_previously_stashed_messages,The following statement contains a magic number: SupervisorStrategy strategy = new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' e => Directive.Restart);
Magic Number,Akka.Tests.Actor.Stash,ActorWithStashSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,An_actor_that_clears_the_stash_on_preRestart_Must_not_receive_previously_stashed_messages,The following statement contains a magic number: restartLatch.Ready(TimeSpan.FromSeconds(1110));
Magic Number,Akka.Tests.Actor.Stash,StateObj,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,StateObj,The following statement contains a magic number: Finished = testKit.CreateTestBarrier(2);
Magic Number,Akka.Tests.Actor.Stash,CustomMessageOverrideEquals,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,GetHashCode,The following statement contains a magic number: return base.GetHashCode() ^ 314;
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,The_default_configuration_file_contain_all_configuration_properties,The following statement contains a magic number: settings.LoggerStartTimeout.Seconds.ShouldBe(5);
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,The_default_configuration_file_contain_all_configuration_properties,The following statement contains a magic number: settings.LogDeadLetters.ShouldBe(10);
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,The_default_configuration_file_contain_all_configuration_properties,The following statement contains a magic number: settings.CreationTimeout.Seconds.ShouldBe(20);
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,The_default_configuration_file_contain_all_configuration_properties,The following statement contains a magic number: settings.UnstartedPushTimeout.Seconds.ShouldBe(10);
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,The_default_configuration_file_contain_all_configuration_properties,The following statement contains a magic number: settings.DefaultVirtualNodesFactor.ShouldBe(10);
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_create_config_from_source_object,The following statement contains a magic number: var source = new MyObjectConfig              {                  StringProperty = "aaa"'                  BoolProperty = true'                  IntegerArray = new[] {1' 2' 3' 4}              };
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_create_config_from_source_object,The following statement contains a magic number: var source = new MyObjectConfig              {                  StringProperty = "aaa"'                  BoolProperty = true'                  IntegerArray = new[] {1' 2' 3' 4}              };
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_create_config_from_source_object,The following statement contains a magic number: var source = new MyObjectConfig              {                  StringProperty = "aaa"'                  BoolProperty = true'                  IntegerArray = new[] {1' 2' 3' 4}              };
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_create_config_from_source_object,The following statement contains a magic number: Assert.Equal(new[] {1' 2' 3' 4}' config.GetIntList("IntegerArray").ToArray());
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_create_config_from_source_object,The following statement contains a magic number: Assert.Equal(new[] {1' 2' 3' 4}' config.GetIntList("IntegerArray").ToArray());
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_create_config_from_source_object,The following statement contains a magic number: Assert.Equal(new[] {1' 2' 3' 4}' config.GetIntList("IntegerArray").ToArray());
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_merge_objects,The following statement contains a magic number: Assert.Equal(123' config.GetInt("a.b"));
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_merge_objects,The following statement contains a magic number: Assert.Equal(456' config.GetInt("a.c"));
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_merge_objects,The following statement contains a magic number: Assert.Equal(789' config.GetInt("a.d"));
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_merge_objects,The following statement contains a magic number: Assert.Equal(888' config.GetInt("a.e"));
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_merge_objects,The following statement contains a magic number: Assert.Equal(888' config.GetInt("a.e"));
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_merge_objects,The following statement contains a magic number: Assert.Equal(123' config.GetInt("a.sub.aa"));
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_merge_objects,The following statement contains a magic number: Assert.Equal(456' config.GetInt("a.sub.bb"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_substituted_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4' 5' 6}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a.c")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_substituted_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4' 5' 6}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a.c")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_substituted_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4' 5' 6}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a.c")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_substituted_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4' 5' 6}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a.c")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_substituted_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4' 5' 6}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a.c")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_hocon,The following statement contains a magic number: Assert.True(                  new[] {1' 2' 3' 4}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("root.array")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_hocon,The following statement contains a magic number: Assert.True(                  new[] {1' 2' 3' 4}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("root.array")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_hocon,The following statement contains a magic number: Assert.True(                  new[] {1' 2' 3' 4}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("root.array")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_hocon,The following statement contains a magic number: Assert.True(                  new[] {1' 2' 3' 4}.SequenceEqual(                      ConfigurationFactory.ParseString(hocon).GetIntList("root.array-newline-element")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_hocon,The following statement contains a magic number: Assert.True(                  new[] {1' 2' 3' 4}.SequenceEqual(                      ConfigurationFactory.ParseString(hocon).GetIntList("root.array-newline-element")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_hocon,The following statement contains a magic number: Assert.True(                  new[] {1' 2' 3' 4}.SequenceEqual(                      ConfigurationFactory.ParseString(hocon).GetIntList("root.array-newline-element")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_json,The following statement contains a magic number: Assert.True(new[] {1' 2' 3}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("root.array")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_json,The following statement contains a magic number: Assert.True(new[] {1' 2' 3}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("root.array")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_assign_values_to_path_expressions,The following statement contains a magic number: Assert.Equal(2L' config.GetLong("a.b.d"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_assign_values_to_path_expressions,The following statement contains a magic number: Assert.Equal(3L' config.GetLong("a.b.e.f"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_assign_array_to_field,The following statement contains a magic number: Assert.True(new[] {1' 2' 3}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_assign_array_to_field,The following statement contains a magic number: Assert.True(new[] {1' 2' 3}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a")));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_assign_substitution_to_field,The following statement contains a magic number: Assert.Equal(123' ConfigurationFactory.ParseString(hocon).GetInt("a.d"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_assign_double_to_field,The following statement contains a magic number: Assert.Equal(1.1' ConfigurationFactory.ParseString(hocon).GetDouble("a"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fallback,The following statement contains a magic number: Assert.Equal(123' config.GetInt("foo.bar.a"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fallback,The following statement contains a magic number: Assert.Equal(2' config.GetInt("foo.bar.b"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fallback,The following statement contains a magic number: Assert.Equal(3' config.GetInt("foo.bar.c"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fallback_in_sub_config,The following statement contains a magic number: Assert.Equal(123' config.GetInt("a"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fallback_in_sub_config,The following statement contains a magic number: Assert.Equal(2' config.GetInt("b"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fallback_in_sub_config,The following statement contains a magic number: Assert.Equal(3' config.GetInt("c"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.a").ShouldBe(123);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.b").ShouldBe(2);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.c").ShouldBe(3);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.zork").ShouldBe(555);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fluent_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.a").ShouldBe(123);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fluent_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.b").ShouldBe(2);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fluent_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.c").ShouldBe(3);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fluent_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.zork").ShouldBe(555);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Scalar_value_should_not_be_overriden_by_an_object_in_fallback_and_vice_versa,The following statement contains a magic number: Assert.Equal(2' config21.GetInt("a.b.c"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Config_constructed_from_merging_with_fallback_should_not_share_state_with_origin,The following statement contains a magic number: Assert.Equal(2' config12.GetInt("a.c"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_quoted_keys,The following statement contains a magic number: config.GetInt("a.some quoted' key").ShouldBe(123);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_quoted_keys_with_dots,The following statement contains a magic number: config.GetConfig("a").Root.GetObject().GetKey("/abc/d.ev/*").GetInt().ShouldBe(123);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_overwrite_value,The following statement contains a magic number: config.GetInt("test.value").ShouldBe(456);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_substitute_object,The following statement contains a magic number: Assert.Equal(123' ace.GetInt("bar"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_include,The following statement contains a magic number: Assert.Equal(123'config.GetInt("a.b.x"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_resolve_substitutes_in_include,The following statement contains a magic number: Assert.Equal(123' config.GetInt("a.b.x"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_resolve_substitutes_in_include,The following statement contains a magic number: Assert.Equal(123' config.GetInt("a.b.y"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_resolve_substitutes_in_nested_includes,The following statement contains a magic number: Assert.Equal(123' config.GetInt("a.b.c.d.e.x"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_resolve_substitutes_in_nested_includes,The following statement contains a magic number: Assert.Equal(123' config.GetInt("a.b.c.d.e.y"));
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_non_abbreviated_timespan,The following statement contains a magic number: Assert.Equal(10' res.TotalSeconds);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_abbreviated_timespan,The following statement contains a magic number: Assert.Equal(10' res.TotalSeconds);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_abbreviated_timespan2,The following statement contains a magic number: Assert.Equal(50' res.TotalMilliseconds);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_nanoseconds,The following statement contains a magic number: var expected = TimeSpan.FromTicks(12);
Magic Number,Akka.Tests.Configuration,HoconTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_microseconds,The following statement contains a magic number: var expected = TimeSpan.FromTicks((long) Math.Round(TimeSpan.TicksPerMillisecond * 0.123));
Magic Number,Akka.Tests.Dispatch,ActorMailboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\ActorMailboxSpec.cs,Actors_get_unbounded_mailbox_when_configured_with_stash_only,The following statement contains a magic number: CheckMailBoxType(Props.Create<StashMailboxWithParamsReportingActor>(10' "foo")'                  "default-override-from-stash3"' new[] { typeof(UnboundedDequeMessageQueue) });
Magic Number,Akka.Tests.Dispatch,ActorMailboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\ActorMailboxSpec.cs,Actors_get_unbounded_mailbox_when_configured_with_stash_only,The following statement contains a magic number: CheckMailBoxType(Props.Create(() => new StashMailboxWithParamsReportingActor(10' "foo"))'                  "default-override-from-stash4"' new[] { typeof(UnboundedDequeMessageQueue) });
Magic Number,Akka.Tests.Dispatch,ReceiveTimeoutAsyncActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,ReceiveTimeoutAsyncActor,The following statement contains a magic number: ReceiveAsync<string>(async s =>              {                  _replyTo = Sender;                    await Task.Delay(TimeSpan.FromMilliseconds(100));                  SetReceiveTimeout(TimeSpan.FromMilliseconds(100));              });
Magic Number,Akka.Tests.Dispatch,ReceiveTimeoutAsyncActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,ReceiveTimeoutAsyncActor,The following statement contains a magic number: ReceiveAsync<string>(async s =>              {                  _replyTo = Sender;                    await Task.Delay(TimeSpan.FromMilliseconds(100));                  SetReceiveTimeout(TimeSpan.FromMilliseconds(100));              });
Magic Number,Akka.Tests.Dispatch,AsyncActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,AsyncActor,The following statement contains a magic number: ReceiveAsync<string>(async s =>              {                  await Task.Yield();                  await Task.Delay(TimeSpan.FromMilliseconds(100));                  if (s == "stop")                  {                      Sender.Tell("done");                  }              });
Magic Number,Akka.Tests.Dispatch,AsyncAwaitActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,AsyncAwaitActor,The following statement contains a magic number: ReceiveAsync<int>(async msg =>              {                  await Task.Yield();                  Sender.Tell("handled");              }' i => i > 10);
Magic Number,Akka.Tests.Dispatch,BlockingAskSelf,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,BlockingAskSelf,The following statement contains a magic number: Receive<string>(_ =>              {                  //ask and block                  var res = Self.Ask(123).Result;                  Sender.Tell(res);              });
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,UntypedActors_should_be_able_to_async_await_ask_message_loop,The following statement contains a magic number: var task = asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,UntypedActors_should_be_able_to_async_await_ask_message_loop,The following statement contains a magic number: actor.Tell(123' ActorRefs.NoSender);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_async_await_in_message_loop,The following statement contains a magic number: var task = actor.Ask<string>("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_async_await_in_message_loop,The following statement contains a magic number: actor.Tell(123' ActorRefs.NoSender);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_async_await_ask_message_loop,The following statement contains a magic number: var task = asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_async_await_ask_message_loop,The following statement contains a magic number: actor.Tell(123' ActorRefs.NoSender);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_block_ask_message_loop,The following statement contains a magic number: var task = asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_block_ask_message_loop,The following statement contains a magic number: actor.Tell(123' ActorRefs.NoSender);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_block_ask_self_message_loop,The following statement contains a magic number: var task = asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_supervise_async_exceptions,The following statement contains a magic number: ExpectMsg("done"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_use_ContinueWith,The following statement contains a magic number: var res = await asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_supervise_exception_ContinueWith,The following statement contains a magic number: ExpectMsg("done"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_suspend_reentrancy,The following statement contains a magic number: var res = await asker.Ask<int>("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_should_be_able_to_resume_suspend,The following statement contains a magic number: i < 10
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_should_be_able_to_resume_suspend,The following statement contains a magic number: var res = await asker.Ask<string>("stop"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_should_not_restart_if_exception_is_catched,The following statement contains a magic number: var lastMessage = await actor.Ask(123);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,ActorTaskScheduler_reentrancy_should_not_be_possible,The following statement contains a magic number: ExpectNoMsg(1000);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_PipeTo_should_not_be_delayed_by_async_receive,The following statement contains a magic number: ExpectMsg<string>(m => "hello".Equals(m)' TimeSpan.FromMilliseconds(1000));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: actor.Tell(11);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: ExpectMsg<string>(m => "handled".Equals(m)' TimeSpan.FromMilliseconds(1000));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: actor.Tell(9);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: ExpectMsg<string>(m => "receiveany".Equals(m)' TimeSpan.FromMilliseconds(1000));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: ExpectMsg<string>(m => "handled".Equals(m)' TimeSpan.FromMilliseconds(1000));
Magic Number,Akka.Tests.Dispatch,AsyncPipeToDelayActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,AsyncPipeToDelayActor,The following statement contains a magic number: ReceiveAsync<string>(async msg =>                  {                      Task.Run(() =>                      {                          Thread.Sleep(10);                          return msg;                      }).PipeTo(Sender' Self); //LogicalContext is lost?!?                        Thread.Sleep(3000);                  });
Magic Number,Akka.Tests.Dispatch,AsyncPipeToDelayActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,AsyncPipeToDelayActor,The following statement contains a magic number: ReceiveAsync<string>(async msg =>                  {                      Task.Run(() =>                      {                          Thread.Sleep(10);                          return msg;                      }).PipeTo(Sender' Self); //LogicalContext is lost?!?                        Thread.Sleep(3000);                  });
Magic Number,Akka.Tests.Dispatch,AsyncReentrantActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,AsyncReentrantActor,The following statement contains a magic number: ReceiveAsync<string>(async msg =>                  {                      var sender = Sender;                      Task.Run(() =>                      {                          //Sleep to make sure the task is not completed when ContinueWith is called                          Thread.Sleep(100);                          return msg;                      }).ContinueWith(_ => sender.Tell(msg)); // ContinueWith will schedule with the implicit ActorTaskScheduler                        Thread.Sleep(3000);                  });
Magic Number,Akka.Tests.Dispatch,AsyncReentrantActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,AsyncReentrantActor,The following statement contains a magic number: ReceiveAsync<string>(async msg =>                  {                      var sender = Sender;                      Task.Run(() =>                      {                          //Sleep to make sure the task is not completed when ContinueWith is called                          Thread.Sleep(100);                          return msg;                      }).ContinueWith(_ => sender.Tell(msg)); // ContinueWith will schedule with the implicit ActorTaskScheduler                        Thread.Sleep(3000);                  });
Magic Number,Akka.Tests.Dispatch,DispatchersSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\DispatchersSpec.cs,Dispatchers_must_use_defined_properties,The following statement contains a magic number: dispatcher.Throughput.ShouldBe(17);
Magic Number,Akka.Tests.Dispatch,DispatchersSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\DispatchersSpec.cs,Dispatchers_must_be_used_when_configured_in_explicit_deployments,The following statement contains a magic number: var actual = ExpectMsg<string>(TimeSpan.FromMilliseconds(50));
Magic Number,Akka.Tests.Dispatch,DispatchersSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\DispatchersSpec.cs,Dispatchers_must_be_used_in_deployment_configuration,The following statement contains a magic number: var actual = ExpectMsg<string>(TimeSpan.FromMilliseconds(50));
Magic Number,Akka.Tests.Dispatch,DispatchersSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\DispatchersSpec.cs,Dispatchers_must_be_used_in_deployment_configuration_and_trumps_code,The following statement contains a magic number: var actual = ExpectMsg<string>(TimeSpan.FromMilliseconds(50));
Magic Number,Akka.Tests.Dispatch,DispatchersSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\DispatchersSpec.cs,Dispatchers_must_use_pool_dispatcher_router_of_deployment_config,The following statement contains a magic number: var actual = ExpectMsg<string>(TimeSpan.FromMilliseconds(50));
Magic Number,Akka.Tests.Dispatch,TestPriorityMailbox,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,PriorityGenerator,The following statement contains a magic number: return 2;
Magic Number,Akka.Tests.Dispatch,TestPriorityMailbox,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,PriorityGenerator,The following statement contains a magic number: return 3;
Magic Number,Akka.Tests.Dispatch,TestPriorityMailbox,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,PriorityGenerator,The following statement contains a magic number: return 4;
Magic Number,Akka.Tests.Dispatch,TestPriorityMailbox,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,PriorityGenerator,The following statement contains a magic number: return 5;
Magic Number,Akka.Tests.Dispatch,TestStablePriorityMailbox,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,PriorityGenerator,The following statement contains a magic number: return 2;
Magic Number,Akka.Tests.Dispatch,TestStablePriorityMailbox,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,PriorityGenerator,The following statement contains a magic number: return 3;
Magic Number,Akka.Tests.Dispatch,TestStablePriorityMailbox,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,PriorityGenerator,The following statement contains a magic number: return 4;
Magic Number,Akka.Tests.Dispatch,TestStablePriorityMailbox,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,PriorityGenerator,The following statement contains a magic number: return 5;
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_priority_mailbox,The following statement contains a magic number: i < 30
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_priority_mailbox,The following statement contains a magic number: actor.Tell(2.0);
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_priority_mailbox,The following statement contains a magic number: i < 30
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_priority_mailbox,The following statement contains a magic number: i < 60
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_priority_mailbox,The following statement contains a magic number: ExpectMsg(2.0);
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_priority_mailbox,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(0.3));
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_stable_priority_mailbox,The following statement contains a magic number: i < 30
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_stable_priority_mailbox,The following statement contains a magic number: actor.Tell(2.0);
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_stable_priority_mailbox,The following statement contains a magic number: actor.Tell(i + 30);
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_stable_priority_mailbox,The following statement contains a magic number: i < 30
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_stable_priority_mailbox,The following statement contains a magic number: i < 60
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_stable_priority_mailbox,The following statement contains a magic number: ExpectMsg(2.0);
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_stable_priority_mailbox,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(0.3));
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Priority_mailbox_keeps_ordering_with_many_priority_values,The following statement contains a magic number: var values = new int[50];
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Priority_mailbox_keeps_ordering_with_many_priority_values,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(0.3));
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Unbounded_Priority_Mailbox_Supports_Unbounded_Stashing,The following statement contains a magic number: var values = new int[10];
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Unbounded_Priority_Mailbox_Supports_Unbounded_Stashing,The following statement contains a magic number: this.Within(5.Seconds()' () =>              {                  // expect the messages in the correct order                  foreach (var value in values)                  {                      ExpectMsg(value);                      ExpectMsg(value);                      ExpectMsg(value);                  }              });
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Unbounded_Priority_Mailbox_Supports_Unbounded_Stashing,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(0.3));
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Unbounded_Stable_Priority_Mailbox_Supports_Unbounded_Stashing,The following statement contains a magic number: var values = new int[10];
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Unbounded_Stable_Priority_Mailbox_Supports_Unbounded_Stashing,The following statement contains a magic number: this.Within(5.Seconds()' () =>              {                  // expect the messages in the original order                  foreach (var value in values)                  {                      ExpectMsg(value);                      ExpectMsg(value);                      ExpectMsg(value);                  }              });
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Unbounded_Stable_Priority_Mailbox_Supports_Unbounded_Stashing,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(0.3));
Magic Number,Akka.Tests.Dispatch,XUnitAsyncTestsSanityCheck,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\XUnitAsyncTestsSanityCheck.cs,Async_tests_should_not_lose_ambient_context,The following statement contains a magic number: backgroundOps.Add(Task.Factory.StartNew(async () =>  				{  					for (var t = 0; t < 1000; t++)  						await Task.Delay(1);  				}));
Magic Number,Akka.Tests.Dispatch,XUnitAsyncTestsSanityCheck,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\XUnitAsyncTestsSanityCheck.cs,Async_tests_should_not_lose_ambient_context,The following statement contains a magic number: c < 50
Magic Number,Akka.Tests.Dispatch,XUnitAsyncTestsSanityCheck,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\XUnitAsyncTestsSanityCheck.cs,Async_tests_should_not_lose_ambient_context,The following statement contains a magic number: t < 1000
Magic Number,Akka.Tests.Dispatch.SysMsg,SystemMessageListSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\SysMsg\SystemMessageListSpec.cs,SystemMessageList_value_class_must_be_able_to_append_messages,The following statement contains a magic number: var create2 = new Failed(null' null' 2);
Magic Number,Akka.Tests.Dispatch.SysMsg,SystemMessageListSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\SysMsg\SystemMessageListSpec.cs,SystemMessageList_value_class_must_be_able_to_deconstruct_head_and_tail,The following statement contains a magic number: var create2 = new Failed(null' null' 2);
Magic Number,Akka.Tests.Dispatch.SysMsg,SystemMessageListSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\SysMsg\SystemMessageListSpec.cs,SystemMessageList_value_class_must_be_able_to_properly_report_size_and_emptiness,The following statement contains a magic number: var create2 = new Failed(null' null' 2);
Magic Number,Akka.Tests.Dispatch.SysMsg,SystemMessageListSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\SysMsg\SystemMessageListSpec.cs,SystemMessageList_value_class_must_be_able_to_properly_report_size_and_emptiness,The following statement contains a magic number: list.Size.ShouldBe(3);
Magic Number,Akka.Tests.Dispatch.SysMsg,SystemMessageListSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\SysMsg\SystemMessageListSpec.cs,SystemMessageList_value_class_must_be_able_to_properly_report_size_and_emptiness,The following statement contains a magic number: list.Tail.Size.ShouldBe(2);
Magic Number,Akka.Tests.Dispatch.SysMsg,SystemMessageListSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\SysMsg\SystemMessageListSpec.cs,SystemMessageList_value_class_must_be_able_to_properly_reverse_contents,The following statement contains a magic number: var create2 = new Failed(null' null' 2);
Magic Number,Akka.Tests.Dispatch.SysMsg,SystemMessageListSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\SysMsg\SystemMessageListSpec.cs,SystemMessageList_value_class_must_be_able_to_properly_reverse_contents,The following statement contains a magic number: listRev.Size.ShouldBe(3);
Magic Number,Akka.Tests.Dispatch.SysMsg,SystemMessageListSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\SysMsg\SystemMessageListSpec.cs,EarliestFirstSystemMessageList_must_properly_prepend_reversed_message_lists_to_the_front,The following statement contains a magic number: var create2 = new Failed(null' null' 2);
Magic Number,Akka.Tests.Dispatch.SysMsg,SystemMessageListSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\SysMsg\SystemMessageListSpec.cs,EarliestFirstSystemMessageList_must_properly_prepend_reversed_message_lists_to_the_front,The following statement contains a magic number: var create3 = new Failed(null' null' 3);
Magic Number,Akka.Tests.Dispatch.SysMsg,SystemMessageListSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\SysMsg\SystemMessageListSpec.cs,EarliestFirstSystemMessageList_must_properly_prepend_reversed_message_lists_to_the_front,The following statement contains a magic number: var create4 = new Failed(null' null' 4);
Magic Number,Akka.Tests.Dispatch.SysMsg,SystemMessageListSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Dispatch\SysMsg\SystemMessageListSpec.cs,EarliestFirstSystemMessageList_must_properly_prepend_reversed_message_lists_to_the_front,The following statement contains a magic number: var create5 = new Failed(null' null' 5);
Magic Number,Akka.Tests.Event,EventBusSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Event\EventBusSpec.cs,EventBus_allow_to_add_multiple_subscribers,The following statement contains a magic number: const int max = 10;
Magic Number,Akka.Tests.Event,EventStreamSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Event\EventStreamSpec.cs,Manage_subscriptions,The following statement contains a magic number: bus.Publish(new M { Value = 42 });
Magic Number,Akka.Tests.Event,EventStreamSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Event\EventStreamSpec.cs,Manage_subscriptions,The following statement contains a magic number: ExpectMsg(new M { Value = 42 });
Magic Number,Akka.Tests.Event,EventStreamSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Event\EventStreamSpec.cs,Manage_subscriptions,The following statement contains a magic number: bus.Publish(new M { Value = 43 });
Magic Number,Akka.Tests.Event,EventStreamSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Event\EventStreamSpec.cs,Be_able_to_log_unhandled_messages,The following statement contains a magic number: var msg = new UnhandledMessage(42' system.DeadLetters' system.DeadLetters);
Magic Number,Akka.Tests.Event,EventStreamSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Event\EventStreamSpec.cs,Bugfix3267_able_to_log_unhandled_messages_with_nosender,The following statement contains a magic number: var msg = new UnhandledMessage(42' ActorRefs.NoSender' system.DeadLetters);
Magic Number,Akka.Tests.Event,EventStreamSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Event\EventStreamSpec.cs,Manage_log_levels,The following statement contains a magic number: ExpectMsg("OK"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_not_reply_with_expired_but_not_yet_swept_out_entries,The following statement contains a magic number: cache.Put(cacheEntry' 5000);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_not_reply_with_expired_but_not_yet_swept_out_entries,The following statement contains a magic number: localClock.CompareAndSet(0' 4999);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_not_reply_with_expired_but_not_yet_swept_out_entries,The following statement contains a magic number: localClock.CompareAndSet(4999' 5000);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_not_reply_with_expired_but_not_yet_swept_out_entries,The following statement contains a magic number: localClock.CompareAndSet(4999' 5000);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_sweep_out_expired_entries_on_cleanup,The following statement contains a magic number: cache.Put(cacheEntry' 5000);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_sweep_out_expired_entries_on_cleanup,The following statement contains a magic number: localClock.CompareAndSet(0' 5000);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_sweep_out_expired_entries_on_cleanup,The following statement contains a magic number: localClock.CompareAndSet(5000' 0);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_sweep_out_expired_entries_on_cleanup,The following statement contains a magic number: localClock.CompareAndSet(0' 5000);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_sweep_out_expired_entries_on_cleanup,The following statement contains a magic number: localClock.CompareAndSet(5000' 0);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_be_updated_with_the_latest_resolved,The following statement contains a magic number: long ttl = 500;
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_properly_support_connecting_to_DNS_endpoints,The following statement contains a magic number: clientHandler.ExpectMsg<Tcp.Connected>(TimeSpan.FromMinutes(10));
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_properly_support_connecting_to_DNS_endpoints,The following statement contains a magic number: var str = Enumerable.Repeat("f"' 567).Join("");
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_properly_support_connecting_to_DNS_endpoints,The following statement contains a magic number: var received = serverHandler.ReceiveWhile<Tcp.Received>(o =>              {                  return o as Tcp.Received;              }' RemainingOrDefault' TimeSpan.FromSeconds(0.5));
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,BugFix_3021_Tcp_Should_not_drop_large_messages,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  var actors = x.EstablishNewClientConnection();                    // create a large-ish byte string                  var str = Enumerable.Repeat("f"' 567).Join("");                  var testData = ByteString.FromString(str);                    // queue 3 writes                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(testData));                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(testData));                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(testData));                    var serverMsgs = actors.ServerHandler.ReceiveWhile<Tcp.Received>(o =>                  {                      return o as Tcp.Received;                  }' RemainingOrDefault' TimeSpan.FromSeconds(2));                    serverMsgs.Sum(s => s.Data.Count).Should().Be(testData.Count*3);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,BugFix_3021_Tcp_Should_not_drop_large_messages,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  var actors = x.EstablishNewClientConnection();                    // create a large-ish byte string                  var str = Enumerable.Repeat("f"' 567).Join("");                  var testData = ByteString.FromString(str);                    // queue 3 writes                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(testData));                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(testData));                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(testData));                    var serverMsgs = actors.ServerHandler.ReceiveWhile<Tcp.Received>(o =>                  {                      return o as Tcp.Received;                  }' RemainingOrDefault' TimeSpan.FromSeconds(2));                    serverMsgs.Sum(s => s.Data.Count).Should().Be(testData.Count*3);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,BugFix_3021_Tcp_Should_not_drop_large_messages,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  var actors = x.EstablishNewClientConnection();                    // create a large-ish byte string                  var str = Enumerable.Repeat("f"' 567).Join("");                  var testData = ByteString.FromString(str);                    // queue 3 writes                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(testData));                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(testData));                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(testData));                    var serverMsgs = actors.ServerHandler.ReceiveWhile<Tcp.Received>(o =>                  {                      return o as Tcp.Received;                  }' RemainingOrDefault' TimeSpan.FromSeconds(2));                    serverMsgs.Sum(s => s.Data.Count).Should().Be(testData.Count*3);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,Write_before_Register_should_not_be_silently_dropped,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  var actors = x.EstablishNewClientConnection(registerClientHandler: false);                    var msg = ByteString.FromString("msg"); // 3 bytes                    EventFilter.Warning(new Regex("Received Write command before Register[^3]+3 bytes")).ExpectOne(() =>                  {                      actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(msg));                      actors.ClientConnection.Tell(new Tcp.Register(actors.ClientHandler));                  });                                    var serverMsgs = actors.ServerHandler.ReceiveWhile(o =>                  {                      return o as Tcp.Received;                  }' RemainingOrDefault' TimeSpan.FromSeconds(2));                    serverMsgs.Should().HaveCount(1).And.Subject.Should().Contain(m => m.Data.Equals(msg));              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,Write_before_Register_should_Be_dropped_if_buffer_is_full,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  var actors = x.EstablishNewClientConnection(registerClientHandler: false);                    var overflowData = ByteString.FromBytes(new byte[InternalConnectionActorMaxQueueSize + 1]);                    // We do not want message about receiving Write to be logged' if the write was actually discarded                  EventFilter.Warning(new Regex("Received Write command before Register[^3]+3 bytes")).Expect(0' () =>                  {                      actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(overflowData));                  });                                    actors.ClientHandler.ExpectMsg<Tcp.CommandFailed>(TimeSpan.FromSeconds(10));                                    // After failed receive' next "good" writes should be handled with no issues                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(ByteString.FromBytes(new byte[1])));                  actors.ClientHandler.Send(actors.ClientConnection' new Tcp.Register(actors.ClientHandler));                  var serverMsgs = actors.ServerHandler.ReceiveWhile(o => o as Tcp.Received' RemainingOrDefault' TimeSpan.FromSeconds(2));                  serverMsgs.Should().HaveCount(1).And.Subject.Should().Contain(m => m.Data.Count == 1);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,Write_before_Register_should_Be_dropped_if_buffer_is_full,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  var actors = x.EstablishNewClientConnection(registerClientHandler: false);                    var overflowData = ByteString.FromBytes(new byte[InternalConnectionActorMaxQueueSize + 1]);                    // We do not want message about receiving Write to be logged' if the write was actually discarded                  EventFilter.Warning(new Regex("Received Write command before Register[^3]+3 bytes")).Expect(0' () =>                  {                      actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(overflowData));                  });                                    actors.ClientHandler.ExpectMsg<Tcp.CommandFailed>(TimeSpan.FromSeconds(10));                                    // After failed receive' next "good" writes should be handled with no issues                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(ByteString.FromBytes(new byte[1])));                  actors.ClientHandler.Send(actors.ClientConnection' new Tcp.Register(actors.ClientHandler));                  var serverMsgs = actors.ServerHandler.ReceiveWhile(o => o as Tcp.Received' RemainingOrDefault' TimeSpan.FromSeconds(2));                  serverMsgs.Should().HaveCount(1).And.Subject.Should().Contain(m => m.Data.Count == 1);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,When_multiple_concurrent_writing_clients_Should_not_lose_messages,The following statement contains a magic number: const int clientsCount = 50;
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,When_multiple_concurrent_writing_clients_Should_not_lose_messages,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  // Setup multiple clients                  var actors = x.EstablishNewClientConnection();                    // Each client sends his index to server                  var clients = Enumerable.Range(0' clientsCount).Select(i => (Index: i' Probe: CreateTestProbe($"test-client-{i}"))).ToArray();                  var counter = new AtomicCounter(0);                  Parallel.ForEach(clients' client =>                  {                      var msg = ByteString.FromString(client.Index.ToString());                      counter.AddAndGet(msg.Count);                      client.Probe.Send(actors.ClientConnection' Tcp.Write.Create(msg));                  });                                    // All messages data should be received                  var received = actors.ServerHandler.ReceiveWhile(o => o as Tcp.Received' RemainingOrDefault' TimeSpan.FromSeconds(10));                  received.Sum(r => r.Data.Count).ShouldBe(counter.Current);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,When_multiple_concurrent_writing_clients_All_acks_should_be_received,The following statement contains a magic number: const int clientsCount = 50;
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,When_multiple_concurrent_writing_clients_All_acks_should_be_received,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  // Setup multiple clients                  var actors = x.EstablishNewClientConnection();                    // Each client sends his index to server                  var indexRange = Enumerable.Range(0' clientsCount).ToList();                  var clients = indexRange.Select(i => (Index: i' Probe: CreateTestProbe($"test-client-{i}"))).ToArray();                  Parallel.ForEach(clients' client =>                  {                      var msg = ByteString.FromBytes(new byte[1]);                      client.Probe.Send(actors.ClientConnection' Tcp.Write.Create(msg' AckWithValue.Create(client.Index)));                  });                                    // All acks should be received                  clients.ForEach(client =>                  {                      client.Probe.ExpectMsg<AckWithValue>(ack => ack.Value.ShouldBe(client.Index)' TimeSpan.FromSeconds(10));                  });              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,When_multiple_writing_clients_Should_receive_messages_in_order,The following statement contains a magic number: const int clientsCount = 50;
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,When_multiple_writing_clients_Should_receive_messages_in_order,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  // Setup multiple clients                  var actors = x.EstablishNewClientConnection();                    // Each client sends his index to server                  var clients = Enumerable.Range(0' clientsCount).Select(i => (Index: i' Probe: CreateTestProbe($"test-client-{i}"))).ToArray();                  var contentBuilder = new StringBuilder();                  clients.ForEach(client =>                  {                      var msg = client.Index.ToString();                      contentBuilder.Append(msg);                      client.Probe.Send(actors.ClientConnection' Tcp.Write.Create(ByteString.FromString(msg)));                  });                                    // All messages data should be received' and be in the same order as they were sent                  var received = actors.ServerHandler.ReceiveWhile(o => o as Tcp.Received' RemainingOrDefault' TimeSpan.FromSeconds(10));                  var content = string.Join(""' received.Select(r => r.Data.ToString()));                  content.ShouldBe(contentBuilder.ToString());              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,Should_fail_writing_when_buffer_is_filled,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  var actors = x.EstablishNewClientConnection();                    // create a buffer-overflow message                  var overflowData = ByteString.FromBytes(new byte[InternalConnectionActorMaxQueueSize + 1]);                  var goodData = ByteString.FromBytes(new byte[InternalConnectionActorMaxQueueSize]);                    // try sending overflow                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(overflowData)); // this is sent immidiately                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(overflowData)); // this will try to buffer                  actors.ClientHandler.ExpectMsg<Tcp.CommandFailed>(TimeSpan.FromSeconds(10));                    // First overflow data will be received anyway                  actors.ServerHandler.ReceiveWhile(TimeSpan.FromSeconds(1)' m => m as Tcp.Received)                      .Sum(m => m.Data.Count)                      .Should().Be(InternalConnectionActorMaxQueueSize + 1);                                    // Check that almost-overflow size does not cause any problems                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.ResumeWriting.Instance); // Recover after send failure                  actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(goodData));                  actors.ServerHandler.ReceiveWhile(TimeSpan.FromSeconds(1)' m => m as Tcp.Received)                      .Sum(m => m.Data.Count)                      .Should().Be(InternalConnectionActorMaxQueueSize);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_support_waiting_for_writes_with_backpressure,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  x.BindOptions = new[] {new Inet.SO.SendBufferSize(1024)};                  x.ConnectOptions = new[] {new Inet.SO.SendBufferSize(1024)};                    var actors = x.EstablishNewClientConnection();                    actors.ServerHandler.Send(actors.ServerConnection' Tcp.Write.Create(ByteString.FromBytes(new byte[100000])' Ack.Instance));                  actors.ServerHandler.ExpectMsg(Ack.Instance);                    x.ExpectReceivedData(actors.ClientHandler' 100000);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_support_waiting_for_writes_with_backpressure,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  x.BindOptions = new[] {new Inet.SO.SendBufferSize(1024)};                  x.ConnectOptions = new[] {new Inet.SO.SendBufferSize(1024)};                    var actors = x.EstablishNewClientConnection();                    actors.ServerHandler.Send(actors.ServerConnection' Tcp.Write.Create(ByteString.FromBytes(new byte[100000])' Ack.Instance));                  actors.ServerHandler.ExpectMsg(Ack.Instance);                    x.ExpectReceivedData(actors.ClientHandler' 100000);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_support_waiting_for_writes_with_backpressure,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  x.BindOptions = new[] {new Inet.SO.SendBufferSize(1024)};                  x.ConnectOptions = new[] {new Inet.SO.SendBufferSize(1024)};                    var actors = x.EstablishNewClientConnection();                    actors.ServerHandler.Send(actors.ServerConnection' Tcp.Write.Create(ByteString.FromBytes(new byte[100000])' Ack.Instance));                  actors.ServerHandler.ExpectMsg(Ack.Instance);                    x.ExpectReceivedData(actors.ClientHandler' 100000);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_support_waiting_for_writes_with_backpressure,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  x.BindOptions = new[] {new Inet.SO.SendBufferSize(1024)};                  x.ConnectOptions = new[] {new Inet.SO.SendBufferSize(1024)};                    var actors = x.EstablishNewClientConnection();                    actors.ServerHandler.Send(actors.ServerConnection' Tcp.Write.Create(ByteString.FromBytes(new byte[100000])' Ack.Instance));                  actors.ServerHandler.ExpectMsg(Ack.Instance);                    x.ExpectReceivedData(actors.ClientHandler' 100000);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_dont_report_Connected_when_endpoint_isnt_responding,The following statement contains a magic number: var endpoint = new IPEndPoint(IPAddress.Parse("192.0.2.1")' 23825);
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_handle_tcp_connection_actor_death_properly,The following statement contains a magic number: new TestSetup(this' shouldBindServer:false).Run(x =>              {                  var serverSocket = new Socket(SocketType.Stream' ProtocolType.Tcp);                  serverSocket.Bind(x.Endpoint);                  serverSocket.Listen(100);                    var connectCommander = CreateTestProbe();                  connectCommander.Send(Sys.Tcp()' new Tcp.Connect(x.Endpoint));                    var accept = serverSocket.Accept();                  var connected = connectCommander.ExpectMsg<Tcp.Connected>();                  connected.RemoteAddress.AsInstanceOf<IPEndPoint>().Port.ShouldBe(x.Endpoint.Port);                  var connectionActor = connectCommander.LastSender;                  connectCommander.Send(connectionActor' PoisonPill.Instance);                    AwaitConditionNoThrow(() =>                  {                      try                      {                          var buffer = new byte[1024];                          return accept.Receive(buffer) == 0;                      }                      catch (SocketException ex)                      {                          return true;                      }                  }' TimeSpan.FromSeconds(3));                    VerifyActorTermination(connectionActor);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_handle_tcp_connection_actor_death_properly,The following statement contains a magic number: new TestSetup(this' shouldBindServer:false).Run(x =>              {                  var serverSocket = new Socket(SocketType.Stream' ProtocolType.Tcp);                  serverSocket.Bind(x.Endpoint);                  serverSocket.Listen(100);                    var connectCommander = CreateTestProbe();                  connectCommander.Send(Sys.Tcp()' new Tcp.Connect(x.Endpoint));                    var accept = serverSocket.Accept();                  var connected = connectCommander.ExpectMsg<Tcp.Connected>();                  connected.RemoteAddress.AsInstanceOf<IPEndPoint>().Port.ShouldBe(x.Endpoint.Port);                  var connectionActor = connectCommander.LastSender;                  connectCommander.Send(connectionActor' PoisonPill.Instance);                    AwaitConditionNoThrow(() =>                  {                      try                      {                          var buffer = new byte[1024];                          return accept.Receive(buffer) == 0;                      }                      catch (SocketException ex)                      {                          return true;                      }                  }' TimeSpan.FromSeconds(3));                    VerifyActorTermination(connectionActor);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_handle_tcp_connection_actor_death_properly,The following statement contains a magic number: new TestSetup(this' shouldBindServer:false).Run(x =>              {                  var serverSocket = new Socket(SocketType.Stream' ProtocolType.Tcp);                  serverSocket.Bind(x.Endpoint);                  serverSocket.Listen(100);                    var connectCommander = CreateTestProbe();                  connectCommander.Send(Sys.Tcp()' new Tcp.Connect(x.Endpoint));                    var accept = serverSocket.Accept();                  var connected = connectCommander.ExpectMsg<Tcp.Connected>();                  connected.RemoteAddress.AsInstanceOf<IPEndPoint>().Port.ShouldBe(x.Endpoint.Port);                  var connectionActor = connectCommander.LastSender;                  connectCommander.Send(connectionActor' PoisonPill.Instance);                    AwaitConditionNoThrow(() =>                  {                      try                      {                          var buffer = new byte[1024];                          return accept.Receive(buffer) == 0;                      }                      catch (SocketException ex)                      {                          return true;                      }                  }' TimeSpan.FromSeconds(3));                    VerifyActorTermination(connectionActor);              });
Magic Number,Akka.Tests.IO,ListenerParent,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\TcpListenerSpec.cs,ListenerParent,The following statement contains a magic number: _listner = Context.ActorOf(Props.Create(() =>                          new TcpListener(                              Tcp.Instance.Apply(Context.System)'                              test._bindCommander.Ref'                              new Tcp.Bind(_test._handler.Ref' test._endpoint' 100' new Inet.SocketOption[]{}' pullMode)))                                                                .WithDeploy(Deploy.Local));
Magic Number,Akka.Tests.IO,UdpConnectedIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpConnectedIntegrationSpec.cs,UdpConnectedIntegrationSpec,The following statement contains a magic number: _addresses = TestUtils.TemporaryServerAddresses(3' udp: true).ToArray();
Magic Number,Akka.Tests.IO,UdpConnectedIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpConnectedIntegrationSpec.cs,The_UDP_connection_oriented_implementation_must_be_able_to_send_and_receive_without_binding,The following statement contains a magic number: var clientAddress = ExpectMsgPf(TimeSpan.FromSeconds(3)' ""' msg =>              {                  var received = msg as Udp.Received;                  if (received != null)                  {                      received.Data.ShouldBe(data1);                      return received.Sender;                  }                  throw new Exception();              });
Magic Number,Akka.Tests.IO,UdpConnectedIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpConnectedIntegrationSpec.cs,The_UDP_connection_oriented_implementation_must_be_able_to_send_and_receive_with_binding,The following statement contains a magic number: ExpectMsgPf(TimeSpan.FromSeconds(3)' ""' msg =>              {                  var received = msg as Udp.Received;                  if (received != null)                  {                      received.Data.ShouldBe(data1);                      Assert.True(received.Sender.Is(clientAddress));                      return received.Sender;                  }                  throw new Exception();              });
Magic Number,Akka.Tests.IO,UdpConnectedIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpConnectedIntegrationSpec.cs,The_UDP_connection_oriented_implementation_must_to_send_batch_writes_and_reads,The following statement contains a magic number: var raw = server.ReceiveN(3);
Magic Number,Akka.Tests.IO,UdpConnectedIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpConnectedIntegrationSpec.cs,The_UDP_connection_oriented_implementation_must_to_send_batch_writes_and_reads,The following statement contains a magic number: msgs.Sum(x => x.Data.Count).Should().Be(data.Count * 3);
Magic Number,Akka.Tests.IO,UdpConnectedIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpConnectedIntegrationSpec.cs,The_UDP_connection_oriented_implementation_must_to_send_batch_writes_and_reads,The following statement contains a magic number: server.ExpectNoMsg(100.Milliseconds());
Magic Number,Akka.Tests.IO,UdpConnectedIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpConnectedIntegrationSpec.cs,The_UDP_connection_oriented_implementation_must_to_send_batch_writes_and_reads,The following statement contains a magic number: raw = client.ReceiveN(3);
Magic Number,Akka.Tests.IO,UdpConnectedIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpConnectedIntegrationSpec.cs,The_UDP_connection_oriented_implementation_must_to_send_batch_writes_and_reads,The following statement contains a magic number: msgs.Sum(x => x.Data.Count).Should().Be(data.Count * 3);
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,UdpIntegrationSpec,The following statement contains a magic number: _addresses = TestUtils.TemporaryServerAddresses(6' udp: true).ToArray();
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,SimpleSender,The following statement contains a magic number: commander.ExpectMsg<Udp.SimpleSenderReady>(TimeSpan.FromSeconds(10));
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,BugFix_UDP_fire_and_forget_must_handle_batch_writes_when_bound,The following statement contains a magic number: var raw = ReceiveN(3);
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,BugFix_UDP_fire_and_forget_must_handle_batch_writes_when_bound,The following statement contains a magic number: msgs.Sum(x => x.Data.Count).Should().Be(data.Count*3);
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,BugFix_UDP_fire_and_forget_must_handle_batch_writes_when_bound,The following statement contains a magic number: ExpectNoMsg(100.Milliseconds());
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,BugFix_UDP_fire_and_forget_must_handle_batch_writes_when_bound,The following statement contains a magic number: raw = ReceiveN(3);
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,BugFix_UDP_fire_and_forget_must_handle_batch_writes_when_bound,The following statement contains a magic number: msgs.Sum(x => x.Data.Count).Should().Be(data.Count * 3);
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_be_able_to_send_several_packet_back_and_forth_with_binding,The following statement contains a magic number: const int iterations = 20;
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_be_able_to_send_several_packet_back_and_forth_with_binding,The following statement contains a magic number: i % 2 == 0
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_SocketOption_beforeBind_method_before_bind,The following statement contains a magic number: commander.Send(Udp.Instance.Apply(Sys).Manager' new Udp.Bind(TestActor' _addresses[2]' options: new[] {assertOption}));
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_SocketOption_beforeBind_method_before_bind,The following statement contains a magic number: commander.ExpectMsg<Udp.Bound>(x => x.LocalAddress.Is(_addresses[2]));
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_SocketOption_afterConnect_method_after_binding,The following statement contains a magic number: commander.Send(Udp.Instance.Apply(Sys).Manager' new Udp.Bind(TestActor' _addresses[3]' options: new[] { assertOption }));
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_SocketOption_afterConnect_method_after_binding,The following statement contains a magic number: commander.ExpectMsg<Udp.Bound>(x => x.LocalAddress.Is(_addresses[3]));
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_DatagramChannelCreator_create_method_when_opening_channel,The following statement contains a magic number: commander.Send(Udp.Instance.Apply(Sys).Manager' new Udp.Bind(TestActor' _addresses[4]' options: new[] { assertOption }));
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_DatagramChannelCreator_create_method_when_opening_channel,The following statement contains a magic number: commander.ExpectMsg<Udp.Bound>(x => x.LocalAddress.Is(_addresses[4]));
Magic Number,Akka.Tests.MatchHandler,MatchBuilderSignatureTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchBuilderSignatureTests.cs,Equals_with_one_null_element_signature_and_one_element_signature_should_be_false,The following statement contains a magic number: var signature2 = new MatchBuilderSignature(new object[] { 4711 });
Magic Number,Akka.Tests.MatchHandler,MatchBuilderSignatureTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchBuilderSignatureTests.cs,Equals_with_same_elements_in_signature_should_be_true,The following statement contains a magic number: var signature1 = new MatchBuilderSignature(new object[] { 4711' "42"' obj });
Magic Number,Akka.Tests.MatchHandler,MatchBuilderSignatureTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchBuilderSignatureTests.cs,Equals_with_same_elements_in_signature_should_be_true,The following statement contains a magic number: var signature2 = new MatchBuilderSignature(new object[] { 4711' "42"' obj });
Magic Number,Akka.Tests.MatchHandler,MatchBuilderSignatureTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchBuilderSignatureTests.cs,Equals_with_same_elements_in_signature_but_fewer_in_one_should_be_false,The following statement contains a magic number: var signature1 = new MatchBuilderSignature(new object[] { 4711' "42"' new object() });
Magic Number,Akka.Tests.MatchHandler,MatchBuilderSignatureTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchBuilderSignatureTests.cs,Equals_with_same_elements_in_signature_but_fewer_in_one_should_be_false,The following statement contains a magic number: var signature2 = new MatchBuilderSignature(new object[] { 4711' "42" });
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action,The following statement contains a magic number: lambda(4711' action);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_and_predicate,The following statement contains a magic number: Predicate<string> predicate = s => s.Length > 5;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_and_predicate,The following statement contains a magic number: XAssert.Equal(2' result.Arguments.Length' "Should contain the action and predicate delegate");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_and_predicate,The following statement contains a magic number: lambda(4711' action' predicate);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: Predicate<string> predicate1 = s => s.Length > 5 && s.Length < 15;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: Predicate<string> predicate1 = s => s.Length > 5 && s.Length < 15;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: Predicate<string> predicate2 = s => s.Length >= 15 && s.Length < 20;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: Predicate<string> predicate2 = s => s.Length >= 15 && s.Length < 20;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: XAssert.Equal(4' result.Arguments.Length' "Should contain the action and predicate delegate");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: Assert.Same(action2' result.Arguments[2]);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: Assert.Same(predicate2' result.Arguments[3]);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: lambda(4711' action1' predicate1' action2' predicate2);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: Predicate<string> predicate1 = s => s.Length > 5 && s.Length < 15;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: Predicate<string> predicate1 = s => s.Length > 5 && s.Length < 15;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: Predicate<int> predicate2 = i => i < 10;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: XAssert.Equal(4' result.Arguments.Length' "Should contain the action and predicate delegates");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: Assert.Same(action2' result.Arguments[2]);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: Assert.Same(predicate2' result.Arguments[3]);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: lambda(2' action1' predicate1' action2' predicate2);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: lambda(4711' action1' predicate1' action2' predicate2);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_funcs_for_different_types,The following statement contains a magic number: Func<string' bool> func1 = s =>              {                  if(s.Length > 5)                  {                      updatedValue = s;                      return true;                  }                  return false;              };
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_funcs_for_different_types,The following statement contains a magic number: Func<int' bool> func2 = i =>              {                  if(i < 10)                  {                      updatedValue = i.ToString();                      return true;                  }                  return false;              };
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_funcs_for_different_types,The following statement contains a magic number: XAssert.Equal(2' result.Arguments.Length' "Should contain the funcs");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_funcs_for_different_types,The following statement contains a magic number: lambda(2' func1' func2);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_funcs_for_different_types,The following statement contains a magic number: lambda(4711' func1' func2);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_three_funcs_for_two_different_types,The following statement contains a magic number: Func<string' bool> func1 = s =>              {                  if(s.Length > 5)                  {                      updatedValue = s;                      return true;                  }                  return false;              };
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_three_funcs_for_two_different_types,The following statement contains a magic number: Func<int' bool> func2 = i =>              {                  if(i < 10)                  {                      updatedValue = i.ToString();                      return true;                  }                  return false;              };
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_three_funcs_for_two_different_types,The following statement contains a magic number: XAssert.Equal(3' result.Arguments.Length' "Should contain the funcs");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_three_funcs_for_two_different_types,The following statement contains a magic number: Assert.Same(func3' result.Arguments[2]);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_three_funcs_for_two_different_types,The following statement contains a magic number: lambda(2' func1' func2' func3);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_three_funcs_for_two_different_types,The following statement contains a magic number: lambda(4711' func1' func2' func3);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_exactly_15_arguments,The following statement contains a magic number: i < 7
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_exactly_15_arguments,The following statement contains a magic number: XAssert.Equal(15' result.Arguments.Length' "Should contain the action and predicate delegates");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_exactly_15_arguments,The following statement contains a magic number: lambda(4711' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionInt);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The following statement contains a magic number: i < 7
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The following statement contains a magic number: Predicate<int> predicateInt = i => i < 100;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The following statement contains a magic number: XAssert.Equal(15' result.Arguments.Length' "Should contain the action and predicate delegates");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The following statement contains a magic number: Assert.Equal(2' extraParamsArray.Length);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The following statement contains a magic number: lambda(4711' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' extraParamsArray);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The following statement contains a magic number: lambda(42' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' extraParamsArray);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_that_expects_base_type,The following statement contains a magic number: lambda(4711' action);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_and_predicate_that_expects_base_type,The following statement contains a magic number: Predicate<object> predicate = s => ((string) s).Length > 5;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_and_predicate_that_expects_base_type,The following statement contains a magic number: XAssert.Equal(2' result.Arguments.Length' "Should only contain the action delegate");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_and_predicate_that_expects_base_type,The following statement contains a magic number: lambda(4711' action' predicate);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_func_that_expects_base_type,The following statement contains a magic number: Func<object'bool> func = o =>              {                  var s = (string) o;                  if(s.Length > 5)                  {                      updatedValue = s;                      return true;                  }                  return false;              };
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_func_that_expects_base_type,The following statement contains a magic number: lambda(4711' func);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_15_arguments_When_creating_Then_array_with_the_values_are_returned,The following statement contains a magic number: var arguments = Enumerable.Range(1' 15).Select(i => new Argument(null' (Action<int>)(_ => { })' true)).ToList();
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_15_arguments_When_creating_Then_array_with_the_values_are_returned,The following statement contains a magic number: Assert.Equal(15' result.Length);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_15_arguments_When_creating_Then_array_with_the_values_are_returned,The following statement contains a magic number: i < 15
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: var arguments = Enumerable.Range(1' 16).Select(i => new Argument(null' (Action<int>)(_ => { })' true)).ToList();
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: Assert.Equal(15' result.Length);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: i < 14
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: Assert.IsType<object[]>(result[14]);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: var extraArgs = (object[])result[14];
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: Assert.Equal(2' extraArgs.Length);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: XAssert.Same(arguments[14].Value' extraArgs[0]' "Argument 14 did not match");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: XAssert.Same(arguments[15].Value' extraArgs[1]' "Argument 15 did not match");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: var arguments = Enumerable.Range(1' 30).Select(i => new Argument(null' (Action<int>)(_ => { })' true)).ToList();
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: Assert.Equal(15' result.Length);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: i < 14
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: Assert.IsType<object[]>(result[14]);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: var extraArgs = (object[])result[14];
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: Assert.Equal(16' extraArgs.Length);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: XAssert.Same(arguments[i + 14].Value' extraArgs[i]' "Argument " + (i + 14) + " did not match");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: XAssert.Same(arguments[i + 14].Value' extraArgs[i]' "Argument " + (i + 14) + " did not match");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: i < 16
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_3_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_3_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' bool> deleg = (value' a1' a2' a3) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_4_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_4_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_4_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_5_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_5_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_5_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_5_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_5_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_6_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_6_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_6_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_6_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_6_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_6_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_6_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,SupervisorProps,The following statement contains a magic number: var options = Backoff.OnFailure(TestActor.Props(probeRef)' "someChildName"' 200.Milliseconds()' 10.Seconds()' 0.0' -1)                  .WithSupervisorStrategy(new OneForOneStrategy(4' TimeSpan.FromSeconds(30)' ex => ex is StoppingException                       ? Directive.Stop                       : SupervisorStrategy.DefaultStrategy.Decider.Decide(ex)));
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,SupervisorProps,The following statement contains a magic number: var options = Backoff.OnFailure(TestActor.Props(probeRef)' "someChildName"' 200.Milliseconds()' 10.Seconds()' 0.0' -1)                  .WithSupervisorStrategy(new OneForOneStrategy(4' TimeSpan.FromSeconds(30)' ex => ex is StoppingException                       ? Directive.Stop                       : SupervisorStrategy.DefaultStrategy.Decider.Decide(ex)));
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,SupervisorProps,The following statement contains a magic number: var options = Backoff.OnFailure(TestActor.Props(probeRef)' "someChildName"' 200.Milliseconds()' 10.Seconds()' 0.0' -1)                  .WithSupervisorStrategy(new OneForOneStrategy(4' TimeSpan.FromSeconds(30)' ex => ex is StoppingException                       ? Directive.Stop                       : SupervisorStrategy.DefaultStrategy.Decider.Decide(ex)));
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,SupervisorProps,The following statement contains a magic number: var options = Backoff.OnFailure(TestActor.Props(probeRef)' "someChildName"' 200.Milliseconds()' 10.Seconds()' 0.0' -1)                  .WithSupervisorStrategy(new OneForOneStrategy(4' TimeSpan.FromSeconds(30)' ex => ex is StoppingException                       ? Directive.Stop                       : SupervisorStrategy.DefaultStrategy.Decider.Decide(ex)));
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_restart_the_child_with_an_exponential_back_off,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(3' () =>              {                  // Exponential back off restart test                  probe.Within(TimeSpan.FromSeconds(1.4)' 2.Seconds()' () =>                  {                      supervisor.Tell("THROW");                      // numRestart = 0 ~ 200 millis                      probe.ExpectMsg<string>(300.Milliseconds()' "STARTED");                        supervisor.Tell("THROW");                      // numRestart = 1 ~ 400 millis                      probe.ExpectMsg<string>(500.Milliseconds()' "STARTED");                        supervisor.Tell("THROW");                      // numRestart = 2 ~ 800 millis                      probe.ExpectMsg<string>(900.Milliseconds()' "STARTED");                  });              });
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_restart_the_child_with_an_exponential_back_off,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(3' () =>              {                  // Exponential back off restart test                  probe.Within(TimeSpan.FromSeconds(1.4)' 2.Seconds()' () =>                  {                      supervisor.Tell("THROW");                      // numRestart = 0 ~ 200 millis                      probe.ExpectMsg<string>(300.Milliseconds()' "STARTED");                        supervisor.Tell("THROW");                      // numRestart = 1 ~ 400 millis                      probe.ExpectMsg<string>(500.Milliseconds()' "STARTED");                        supervisor.Tell("THROW");                      // numRestart = 2 ~ 800 millis                      probe.ExpectMsg<string>(900.Milliseconds()' "STARTED");                  });              });
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_restart_the_child_with_an_exponential_back_off,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(3' () =>              {                  // Exponential back off restart test                  probe.Within(TimeSpan.FromSeconds(1.4)' 2.Seconds()' () =>                  {                      supervisor.Tell("THROW");                      // numRestart = 0 ~ 200 millis                      probe.ExpectMsg<string>(300.Milliseconds()' "STARTED");                        supervisor.Tell("THROW");                      // numRestart = 1 ~ 400 millis                      probe.ExpectMsg<string>(500.Milliseconds()' "STARTED");                        supervisor.Tell("THROW");                      // numRestart = 2 ~ 800 millis                      probe.ExpectMsg<string>(900.Milliseconds()' "STARTED");                  });              });
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_restart_the_child_with_an_exponential_back_off,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(3' () =>              {                  // Exponential back off restart test                  probe.Within(TimeSpan.FromSeconds(1.4)' 2.Seconds()' () =>                  {                      supervisor.Tell("THROW");                      // numRestart = 0 ~ 200 millis                      probe.ExpectMsg<string>(300.Milliseconds()' "STARTED");                        supervisor.Tell("THROW");                      // numRestart = 1 ~ 400 millis                      probe.ExpectMsg<string>(500.Milliseconds()' "STARTED");                        supervisor.Tell("THROW");                      // numRestart = 2 ~ 800 millis                      probe.ExpectMsg<string>(900.Milliseconds()' "STARTED");                  });              });
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_restart_the_child_with_an_exponential_back_off,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(3' () =>              {                  // Exponential back off restart test                  probe.Within(TimeSpan.FromSeconds(1.4)' 2.Seconds()' () =>                  {                      supervisor.Tell("THROW");                      // numRestart = 0 ~ 200 millis                      probe.ExpectMsg<string>(300.Milliseconds()' "STARTED");                        supervisor.Tell("THROW");                      // numRestart = 1 ~ 400 millis                      probe.ExpectMsg<string>(500.Milliseconds()' "STARTED");                        supervisor.Tell("THROW");                      // numRestart = 2 ~ 800 millis                      probe.ExpectMsg<string>(900.Milliseconds()' "STARTED");                  });              });
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_restart_the_child_with_an_exponential_back_off,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(3' () =>              {                  // Exponential back off restart test                  probe.Within(TimeSpan.FromSeconds(1.4)' 2.Seconds()' () =>                  {                      supervisor.Tell("THROW");                      // numRestart = 0 ~ 200 millis                      probe.ExpectMsg<string>(300.Milliseconds()' "STARTED");                        supervisor.Tell("THROW");                      // numRestart = 1 ~ 400 millis                      probe.ExpectMsg<string>(500.Milliseconds()' "STARTED");                        supervisor.Tell("THROW");                      // numRestart = 2 ~ 800 millis                      probe.ExpectMsg<string>(900.Milliseconds()' "STARTED");                  });              });
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_accept_commands_while_child_is_terminating,The following statement contains a magic number: ExpectNoMsg(100.Milliseconds());
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_respect_maxNrOfRetries_property_of_OneForOneStrategy,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(5' () =>              {                  probe.Watch(supervisor);                  for (int i = 1; i <= 5; i++)                  {                      supervisor.Tell("THROW");                      if (i < 5)                      {                          // Since we should've died on this throw' don't expect to be started.                          // We're not testing timing' so set a reasonably high timeout.                          probe.ExpectMsg("STARTED"' 4.Seconds());                      }                  }                    probe.ExpectTerminated(supervisor);              });
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_respect_maxNrOfRetries_property_of_OneForOneStrategy,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(5' () =>              {                  probe.Watch(supervisor);                  for (int i = 1; i <= 5; i++)                  {                      supervisor.Tell("THROW");                      if (i < 5)                      {                          // Since we should've died on this throw' don't expect to be started.                          // We're not testing timing' so set a reasonably high timeout.                          probe.ExpectMsg("STARTED"' 4.Seconds());                      }                  }                    probe.ExpectTerminated(supervisor);              });
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_respect_maxNrOfRetries_property_of_OneForOneStrategy,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(5' () =>              {                  probe.Watch(supervisor);                  for (int i = 1; i <= 5; i++)                  {                      supervisor.Tell("THROW");                      if (i < 5)                      {                          // Since we should've died on this throw' don't expect to be started.                          // We're not testing timing' so set a reasonably high timeout.                          probe.ExpectMsg("STARTED"' 4.Seconds());                      }                  }                    probe.ExpectTerminated(supervisor);              });
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_respect_maxNrOfRetries_property_of_OneForOneStrategy,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(5' () =>              {                  probe.Watch(supervisor);                  for (int i = 1; i <= 5; i++)                  {                      supervisor.Tell("THROW");                      if (i < 5)                      {                          // Since we should've died on this throw' don't expect to be started.                          // We're not testing timing' so set a reasonably high timeout.                          probe.ExpectMsg("STARTED"' 4.Seconds());                      }                  }                    probe.ExpectTerminated(supervisor);              });
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_respect_withinTimeRange_property_of_OneForOneStrategy,The following statement contains a magic number: var options = Backoff.OnFailure(TestActor.Props(probe.Ref)' "someChildName"' 300.Milliseconds()' 10.Seconds()' 0.0' -1)                  .WithSupervisorStrategy(new OneForOneStrategy(3' 1.Seconds()' ex => ex is StoppingException                       ? Directive.Stop                       : SupervisorStrategy.DefaultStrategy.Decider.Decide(ex)));
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_respect_withinTimeRange_property_of_OneForOneStrategy,The following statement contains a magic number: var options = Backoff.OnFailure(TestActor.Props(probe.Ref)' "someChildName"' 300.Milliseconds()' 10.Seconds()' 0.0' -1)                  .WithSupervisorStrategy(new OneForOneStrategy(3' 1.Seconds()' ex => ex is StoppingException                       ? Directive.Stop                       : SupervisorStrategy.DefaultStrategy.Decider.Decide(ex)));
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_respect_withinTimeRange_property_of_OneForOneStrategy,The following statement contains a magic number: var options = Backoff.OnFailure(TestActor.Props(probe.Ref)' "someChildName"' 300.Milliseconds()' 10.Seconds()' 0.0' -1)                  .WithSupervisorStrategy(new OneForOneStrategy(3' 1.Seconds()' ex => ex is StoppingException                       ? Directive.Stop                       : SupervisorStrategy.DefaultStrategy.Decider.Decide(ex)));
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_respect_withinTimeRange_property_of_OneForOneStrategy,The following statement contains a magic number: i <= 3
Magic Number,Akka.Tests.Pattern,BackoffOnRestartSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,BackoffOnRestartSupervisor_must_respect_withinTimeRange_property_of_OneForOneStrategy,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Akka.Tests.Pattern,SlowlyFailingActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffOnRestartSupervisorSpec.cs,PostStop,The following statement contains a magic number: _latch.Ready(3.Seconds());
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_support_custom_supervision_strategy,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(2' () =>              {                  var stoppingStrategy = new OneForOneStrategy(ex =>                  {                      if (ex is TestException)                      {                          return Directive.Stop;                      }                        return Directive.Escalate;                  });                    var restartingStrategy = new OneForOneStrategy(ex =>                  {                      if (ex is TestException)                      {                          return Directive.Restart;                      }                        return Directive.Escalate;                  });                    assertCustomStrategy(Create(OnStopOptions().WithSupervisorStrategy(stoppingStrategy)));                  assertCustomStrategy(Create(OnFailureOptions().WithSupervisorStrategy(restartingStrategy)));              });
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_support_manual_reset,The following statement contains a magic number: Action<IActorRef> assertManualReset = supervisor =>              {                  supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                  var c1 = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  Watch(c1);                  c1.Tell("boom");                  ExpectTerminated(c1);                    AwaitAssert(() =>                  {                      supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                      ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(1);                  });                    AwaitAssert(() =>                  {                      supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                      // new instance                      ExpectMsg<BackoffSupervisor.CurrentChild>().Ref.Should().NotBeSameAs(c1);                  });                    // TODO: this Thread.Sleep should be removed                  Thread.Sleep(500);                    supervisor.Tell("hello");                  ExpectMsg("hello");                    // making sure the Reset is handled by supervisor                  supervisor.Tell("hello");                  ExpectMsg("hello");                    supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(0);              };
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_support_manual_reset,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(2' () =>              {                  var stoppingStrategy = new OneForOneStrategy(ex =>                  {                      if (ex is TestException)                      {                          return Directive.Stop;                      }                        // TODO: should restart be there?                      return Directive.Restart;                  });                    var restartingStrategy = new OneForOneStrategy(ex =>                  {                      if (ex is TestException)                      {                          return Directive.Restart;                      }                        // TODO: should restart be there?                      return Directive.Restart;                  });                    assertManualReset(                      Create(OnStopOptions(ManualChild.Props(TestActor))                          .WithManualReset()                          .WithSupervisorStrategy(stoppingStrategy)));                    assertManualReset(                      Create(OnFailureOptions(ManualChild.Props(TestActor))                          .WithManualReset()                          .WithSupervisorStrategy(restartingStrategy)));              });
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_reply_to_sender_if_replyWhileStopped_is_specified,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(1' () =>              {                  var supervisor = Create(Backoff.OnFailure(Child.Props(TestActor)' "c1"' TimeSpan.FromSeconds(100)' TimeSpan.FromSeconds(300)' 0.2' -1)                      .WithReplyWhileStopped("child was stopped"));                  supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                    var c1 = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  Watch(c1);                  supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(0);                    c1.Tell("boom");                  ExpectTerminated(c1);                    AwaitAssert(() =>                  {                      supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                      ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(1);                  });                    supervisor.Tell("boom");                  ExpectMsg("child was stopped");              });
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_reply_to_sender_if_replyWhileStopped_is_specified,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(1' () =>              {                  var supervisor = Create(Backoff.OnFailure(Child.Props(TestActor)' "c1"' TimeSpan.FromSeconds(100)' TimeSpan.FromSeconds(300)' 0.2' -1)                      .WithReplyWhileStopped("child was stopped"));                  supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                    var c1 = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  Watch(c1);                  supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(0);                    c1.Tell("boom");                  ExpectTerminated(c1);                    AwaitAssert(() =>                  {                      supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                      ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(1);                  });                    supervisor.Tell("boom");                  ExpectMsg("child was stopped");              });
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_reply_to_sender_if_replyWhileStopped_is_specified,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(1' () =>              {                  var supervisor = Create(Backoff.OnFailure(Child.Props(TestActor)' "c1"' TimeSpan.FromSeconds(100)' TimeSpan.FromSeconds(300)' 0.2' -1)                      .WithReplyWhileStopped("child was stopped"));                  supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                    var c1 = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  Watch(c1);                  supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(0);                    c1.Tell("boom");                  ExpectTerminated(c1);                    AwaitAssert(() =>                  {                      supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                      ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(1);                  });                    supervisor.Tell("boom");                  ExpectMsg("child was stopped");              });
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_not_reply_to_sender_if_replyWhileStopped_is_not_specified,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(1' () =>              {                  var supervisor = Create(Backoff.OnFailure(Child.Props(TestActor)' "c1"' TimeSpan.FromSeconds(100)' TimeSpan.FromSeconds(300)' 0.2' -1));                  supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                    var c1 = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  Watch(c1);                  supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(0);                    c1.Tell("boom");                  ExpectTerminated(c1);                    AwaitAssert(() =>                  {                      supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                      ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(1);                  });                    supervisor.Tell("boom"); //this will be sent to deadLetters                  ExpectNoMsg(500);              });
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_not_reply_to_sender_if_replyWhileStopped_is_not_specified,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(1' () =>              {                  var supervisor = Create(Backoff.OnFailure(Child.Props(TestActor)' "c1"' TimeSpan.FromSeconds(100)' TimeSpan.FromSeconds(300)' 0.2' -1));                  supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                    var c1 = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  Watch(c1);                  supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(0);                    c1.Tell("boom");                  ExpectTerminated(c1);                    AwaitAssert(() =>                  {                      supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                      ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(1);                  });                    supervisor.Tell("boom"); //this will be sent to deadLetters                  ExpectNoMsg(500);              });
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_not_reply_to_sender_if_replyWhileStopped_is_not_specified,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(1' () =>              {                  var supervisor = Create(Backoff.OnFailure(Child.Props(TestActor)' "c1"' TimeSpan.FromSeconds(100)' TimeSpan.FromSeconds(300)' 0.2' -1));                  supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                    var c1 = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  Watch(c1);                  supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(0);                    c1.Tell("boom");                  ExpectTerminated(c1);                    AwaitAssert(() =>                  {                      supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                      ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(1);                  });                    supervisor.Tell("boom"); //this will be sent to deadLetters                  ExpectNoMsg(500);              });
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_not_reply_to_sender_if_replyWhileStopped_is_not_specified,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(1' () =>              {                  var supervisor = Create(Backoff.OnFailure(Child.Props(TestActor)' "c1"' TimeSpan.FromSeconds(100)' TimeSpan.FromSeconds(300)' 0.2' -1));                  supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                    var c1 = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  Watch(c1);                  supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(0);                    c1.Tell("boom");                  ExpectTerminated(c1);                    AwaitAssert(() =>                  {                      supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                      ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(1);                  });                    supervisor.Tell("boom"); //this will be sent to deadLetters                  ExpectNoMsg(500);              });
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_stop_restarting_the_child_after_reaching_maxNrOfRetries_limit_using_BackOff_OnStop,The following statement contains a magic number: var supervisor = Create(OnStopOptions(maxNrOfRetries: 2));
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_stop_restarting_the_child_after_reaching_maxNrOfRetries_limit_using_BackOff_OnStop,The following statement contains a magic number: AwaitCondition(() =>                  {                      supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                      var c = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                      return !c.IsNobody();                  }' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(50));
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_stop_restarting_the_child_after_reaching_maxNrOfRetries_limit_using_BackOff_OnStop,The following statement contains a magic number: ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(2);
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_stop_restarting_the_child_after_reaching_maxNrOfRetries_limit_using_BackOff_OnFailure,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(3' () =>              {                  var supervisor = Create(OnFailureOptions(maxNrOfRetries: 2));                    IActorRef WaitForChild()                  {                      AwaitCondition(() =>                      {                          supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                          var c = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                          return !c.IsNobody();                      }' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(50));                        supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                      return ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  }                    Watch(supervisor);                    supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(0);                    supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                  var c1 = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  Watch(c1);                  c1.Tell("boom");                  ExpectTerminated(c1);                    supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(1);                    var c2 = WaitForChild();                  AwaitAssert(() => c2.ShouldNotBe(c1));                  Watch(c2);                  c2.Tell("boom");                  ExpectTerminated(c2);                    supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(2);                    var c3 = WaitForChild();                  AwaitAssert(() => c3.ShouldNotBe(c2));                  Watch(c3);                  c3.Tell("boom");                  ExpectTerminated(c3);                  ExpectTerminated(supervisor);              });
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_stop_restarting_the_child_after_reaching_maxNrOfRetries_limit_using_BackOff_OnFailure,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(3' () =>              {                  var supervisor = Create(OnFailureOptions(maxNrOfRetries: 2));                    IActorRef WaitForChild()                  {                      AwaitCondition(() =>                      {                          supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                          var c = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                          return !c.IsNobody();                      }' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(50));                        supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                      return ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  }                    Watch(supervisor);                    supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(0);                    supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                  var c1 = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  Watch(c1);                  c1.Tell("boom");                  ExpectTerminated(c1);                    supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(1);                    var c2 = WaitForChild();                  AwaitAssert(() => c2.ShouldNotBe(c1));                  Watch(c2);                  c2.Tell("boom");                  ExpectTerminated(c2);                    supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(2);                    var c3 = WaitForChild();                  AwaitAssert(() => c3.ShouldNotBe(c2));                  Watch(c3);                  c3.Tell("boom");                  ExpectTerminated(c3);                  ExpectTerminated(supervisor);              });
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_stop_restarting_the_child_after_reaching_maxNrOfRetries_limit_using_BackOff_OnFailure,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(3' () =>              {                  var supervisor = Create(OnFailureOptions(maxNrOfRetries: 2));                    IActorRef WaitForChild()                  {                      AwaitCondition(() =>                      {                          supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                          var c = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                          return !c.IsNobody();                      }' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(50));                        supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                      return ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  }                    Watch(supervisor);                    supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(0);                    supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                  var c1 = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  Watch(c1);                  c1.Tell("boom");                  ExpectTerminated(c1);                    supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(1);                    var c2 = WaitForChild();                  AwaitAssert(() => c2.ShouldNotBe(c1));                  Watch(c2);                  c2.Tell("boom");                  ExpectTerminated(c2);                    supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(2);                    var c3 = WaitForChild();                  AwaitAssert(() => c3.ShouldNotBe(c2));                  Watch(c3);                  c3.Tell("boom");                  ExpectTerminated(c3);                  ExpectTerminated(supervisor);              });
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_stop_restarting_the_child_after_reaching_maxNrOfRetries_limit_using_BackOff_OnFailure,The following statement contains a magic number: EventFilter.Exception<TestException>().Expect(3' () =>              {                  var supervisor = Create(OnFailureOptions(maxNrOfRetries: 2));                    IActorRef WaitForChild()                  {                      AwaitCondition(() =>                      {                          supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                          var c = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                          return !c.IsNobody();                      }' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(50));                        supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                      return ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  }                    Watch(supervisor);                    supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(0);                    supervisor.Tell(BackoffSupervisor.GetCurrentChild.Instance);                  var c1 = ExpectMsg<BackoffSupervisor.CurrentChild>().Ref;                  Watch(c1);                  c1.Tell("boom");                  ExpectTerminated(c1);                    supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(1);                    var c2 = WaitForChild();                  AwaitAssert(() => c2.ShouldNotBe(c1));                  Watch(c2);                  c2.Tell("boom");                  ExpectTerminated(c2);                    supervisor.Tell(BackoffSupervisor.GetRestartCount.Instance);                  ExpectMsg<BackoffSupervisor.RestartCount>().Count.Should().Be(2);                    var c3 = WaitForChild();                  AwaitAssert(() => c3.ShouldNotBe(c2));                  Watch(c3);                  c3.Tell("boom");                  ExpectTerminated(c3);                  ExpectTerminated(supervisor);              });
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_stop_restarting_the_child_if_final_stop_message_received_using_BackOff_OnStop,The following statement contains a magic number: var supervisor = Create(OnStopOptions(maxNrOfRetries: 100).WithFinalStopMessage(message => ReferenceEquals(message' stopMessage)));
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_not_stop_when_final_stop_message_has_not_been_received,The following statement contains a magic number: var supervisor = Create(OnStopOptions(maxNrOfRetries: 100).WithFinalStopMessage(message => ReferenceEquals(message' stopMessage)));
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_must_not_stop_when_final_stop_message_has_not_been_received,The following statement contains a magic number: supervisorWatcher.ExpectNoMsg(TimeSpan.FromMilliseconds(20));
Magic Number,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsClosed,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Increment_FailureCount_When_Call_Times_Out,The following statement contains a magic number: breaker.Instance.WithSyncCircuitBreaker( ( ) => Thread.Sleep( 500 ) );
Magic Number,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsClosed,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Reset_Failure_Count_When_Call_Succeeds_After_Failure,The following statement contains a magic number: Assert.Equal(4' breaker.Instance.CurrentFailureCount);
Magic Number,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsClosed,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Increment_Failure_Count_When_Call_Times_Out,The following statement contains a magic number: breaker.Instance.WithCircuitBreaker( () => Task.Factory.StartNew( ( ) =>              {                  Thread.Sleep( 500 );                  return SayTest( );              } ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,ShortCallTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 50 )' TimeSpan.FromMilliseconds( 500 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,ShortCallTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 50 )' TimeSpan.FromMilliseconds( 500 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,ShortResetTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 1000 )' TimeSpan.FromMilliseconds( 50 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,ShortResetTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 1000 )' TimeSpan.FromMilliseconds( 50 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,LongCallTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 5000 )' TimeSpan.FromMilliseconds( 500 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,LongCallTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 5000 )' TimeSpan.FromMilliseconds( 500 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,LongResetTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 100 )' TimeSpan.FromMilliseconds( 5000 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,LongResetTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 100 )' TimeSpan.FromMilliseconds( 5000 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,MultiFailureCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 5' TimeSpan.FromMilliseconds( 200 )' TimeSpan.FromMilliseconds( 500 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,MultiFailureCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 5' TimeSpan.FromMilliseconds( 200 )' TimeSpan.FromMilliseconds( 500 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,MultiFailureCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 5' TimeSpan.FromMilliseconds( 200 )' TimeSpan.FromMilliseconds( 500 ) ) );
Magic Number,Akka.Tests.Routing,BroadcastSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\BroadcastSpec.cs,BroadcastGroup_router_must_broadcast_message_using_Tell,The following statement contains a magic number: var doneLatch = new TestLatch(2);
Magic Number,Akka.Tests.Routing,BroadcastSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\BroadcastSpec.cs,BroadcastGroup_router_must_broadcast_message_using_Ask,The following statement contains a magic number: var doneLatch = new TestLatch(2);
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_be_picked_up_from_Props,The following statement contains a magic number: var actor = Sys.ActorOf(new RoundRobinPool(12).Props(Props.Create<EchoProps>())' "someOther");
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_be_picked_up_from_Props,The following statement contains a magic number: roundRobinPool.NrOfInstances.Should().Be(12);
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_be_picked_up_from_Props,The following statement contains a magic number: var result = await actor.GracefulStop(3.Seconds());
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_be_overridable_in_config,The following statement contains a magic number: var actor = Sys.ActorOf(new RoundRobinPool(12).Props(Props.Create<EchoProps>())' "config");
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_be_overridable_in_config,The following statement contains a magic number: randomPool.NrOfInstances.Should().Be(4);
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_be_overridable_in_config,The following statement contains a magic number: var result = await actor.GracefulStop(3.Seconds());
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_use_routeesPaths_from_config,The following statement contains a magic number: var actor = Sys.ActorOf(new RandomPool(12).Props(Props.Create<EchoProps>())' "paths");
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_use_routeesPaths_from_config,The following statement contains a magic number: var result = await actor.GracefulStop(3.Seconds());
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_be_overridable_in_explicit_deployment,The following statement contains a magic number: var actor = Sys.ActorOf(FromConfig.Instance.Props(Props.Create<EchoProps>()).WithDeploy(new Deploy(new RoundRobinPool(12)))' "someOther");
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_be_overridable_in_explicit_deployment,The following statement contains a magic number: roundRobinPool.NrOfInstances.Should().Be(12);
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_be_overridable_in_explicit_deployment,The following statement contains a magic number: var result = await actor.GracefulStop(3.Seconds());
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_be_overridable_in_config_even_with_explicit_deployment,The following statement contains a magic number: var actor = Sys.ActorOf(FromConfig.Instance.Props(Props.Create<EchoProps>()).WithDeploy(new Deploy(new RoundRobinPool(12)))' "config");
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_be_overridable_in_config_even_with_explicit_deployment,The following statement contains a magic number: randomPool.NrOfInstances.Should().Be(4);
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_be_overridable_in_config_even_with_explicit_deployment,The following statement contains a magic number: var result = await actor.GracefulStop(3.Seconds());
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_not_get_confused_when_trying_to_wildcard_configure_children,The following statement contains a magic number: var received = Enumerable.Range(1' 3).Select(_ => ExpectMsg<IActorRef>()).ToList();
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_load_settings_from_config_for_local_child_router_of_system_actor,The following statement contains a magic number: i < 10
Magic Number,Akka.Tests.Routing,ConfiguredLocalRoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConfiguredLocalRoutingSpec.cs,RouterConfig_must_load_settings_from_config_for_local_child_router_of_system_actor,The following statement contains a magic number: children.Count.ShouldBe(6);
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_pool_router_must_create_routees_from_configuration,The following statement contains a magic number: currentRoutees.Members.Count().Should().Be(3);
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_pool_router_must_select_destination_based_on_consistent_hash_key_of_message,The following statement contains a magic number: _router1.Tell(new Msg(17' "A"));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_pool_router_must_select_destination_based_on_consistent_hash_key_of_message,The following statement contains a magic number: _router1.Tell(new ConsistentHashableEnvelope("BB"' 17));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_pool_router_must_select_destination_with_defined_hash_mapping,The following statement contains a magic number: router2.Tell(new Msg2(17' "A"));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_pool_router_must_select_destination_with_defined_hash_mapping,The following statement contains a magic number: router2.Tell(new ConsistentHashableEnvelope("BB"' 17));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_group_router_must_create_routees_from_configuration,The following statement contains a magic number: currentRoutees.Members.Count().ShouldBe(3);
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_group_router_must_select_destination_based_on_consistent_hash_key_of_message,The following statement contains a magic number: _router3.Tell(new Msg(17' "A"));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_group_router_must_select_destination_based_on_consistent_hash_key_of_message,The following statement contains a magic number: _router3.Tell(new ConsistentHashableEnvelope("BB"' 17));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_group_router_must_select_destination_with_defined_hash_mapping,The following statement contains a magic number: router4.Tell(new Msg2(17' "A"));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_group_router_must_select_destination_with_defined_hash_mapping,The following statement contains a magic number: router4.Tell(new ConsistentHashableEnvelope("BB"' 17));
Magic Number,Akka.Tests.Routing,ListenerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ListenerSpec.cs,Listener_must_listen_in,The following statement contains a magic number: var fooLatch = new TestLatch(2);
Magic Number,Akka.Tests.Routing,ListenerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ListenerSpec.cs,Listener_must_listen_in,The following statement contains a magic number: var barLatch = new TestLatch(2);
Magic Number,Akka.Tests.Routing,ListenerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ListenerSpec.cs,Listener_must_listen_in,The following statement contains a magic number: Assert.Equal(2' barCount.Current);
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_be_able_to_shut_down_its_instance,The following statement contains a magic number: const int routeeCount = 7;
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_be_able_to_shut_down_its_instance,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2)' () => {                  for (int i = 1; i <= 5; i++)                  {                      ExpectMsg("world");                  }              });
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_be_able_to_shut_down_its_instance,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2)' () => {                  for (int i = 1; i <= 5; i++)                  {                      ExpectMsg("world");                  }              });
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_be_able_to_shut_down_its_instance,The following statement contains a magic number: testLatch.Ready(5.Seconds());
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_deliver_messages_in_a_random_fashion,The following statement contains a magic number: const int connectionCount = 10;
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_deliver_messages_in_a_random_fashion,The following statement contains a magic number: const int iterationCount = 100;
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_deliver_messages_in_a_random_fashion,The following statement contains a magic number: doneLatch.Ready(TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_deliver_a_broadcast_message_using_the_Tell,The following statement contains a magic number: const int routeeCount = 6;
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_deliver_a_broadcast_message_using_the_Tell,The following statement contains a magic number: helloLatch.Ready(5.Seconds());
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_deliver_a_broadcast_message_using_the_Tell,The following statement contains a magic number: stopLatch.Ready(5.Seconds());
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: IActorRef actor = Sys.ActorOf(new RandomPool(3)                  .Props(Props.Create<EmptyBehaviorActor>())' "random-managed");
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: RouteeSize(actor).Should().Be(3);
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: actor.Tell(new AdjustPoolSize(4));
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: RouteeSize(actor).Should().Be(7);
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: actor.Tell(new AdjustPoolSize(-2));
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: RouteeSize(actor).Should().Be(5);
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: RouteeSize(actor).Should().Be(6);
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: RouteeSize(actor).Should().Be(5);
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_group_must_deliver_messages_in_a_random_fashion,The following statement contains a magic number: const int connectionCount = 10;
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_group_must_deliver_messages_in_a_random_fashion,The following statement contains a magic number: const int iterationCount = 100;
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_group_must_deliver_messages_in_a_random_fashion,The following statement contains a magic number: doneLatch.Ready(5.Seconds());
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_logic_used_in_actor_must_deliver_messages_in_a_random_fashion,The following statement contains a magic number: const int connectionCount = 10;
Magic Number,Akka.Tests.Routing,RandomSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_logic_used_in_actor_must_deliver_messages_in_a_random_fashion,The following statement contains a magic number: const int iterationCount = 100;
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_capacity,The following statement contains a magic number: var resizer = new DefaultResizer(lower: 2' upper: 3);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_capacity,The following statement contains a magic number: var resizer = new DefaultResizer(lower: 2' upper: 3);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_capacity,The following statement contains a magic number: c1.Should().Be(2);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: var resizer = new DefaultResizer(lower: 2' upper: 10' rampupRate: 0.2);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: var resizer = new DefaultResizer(lower: 2' upper: 10' rampupRate: 0.2);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: var resizer = new DefaultResizer(lower: 2' upper: 10' rampupRate: 0.2);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: resizer.Rampup(pressure: 9' capacity: 10).Should().Be(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: resizer.Rampup(pressure: 9' capacity: 10).Should().Be(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: resizer.Rampup(pressure: 5' capacity: 5).Should().Be(1);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: resizer.Rampup(pressure: 5' capacity: 5).Should().Be(1);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: resizer.Rampup(pressure: 6' capacity: 6).Should().Be(2);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: resizer.Rampup(pressure: 6' capacity: 6).Should().Be(2);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: resizer.Rampup(pressure: 6' capacity: 6).Should().Be(2);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: var resizer = new DefaultResizer(lower: 2' upper: 10' backoffThreshold: 0.3d' backoffRate: 0.1d);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: var resizer = new DefaultResizer(lower: 2' upper: 10' backoffThreshold: 0.3d' backoffRate: 0.1d);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: var resizer = new DefaultResizer(lower: 2' upper: 10' backoffThreshold: 0.3d' backoffRate: 0.1d);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: var resizer = new DefaultResizer(lower: 2' upper: 10' backoffThreshold: 0.3d' backoffRate: 0.1d);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(pressure: 10' capacity: 10).Should().Be(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(pressure: 10' capacity: 10).Should().Be(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(pressure: 4' capacity: 10).Should().Be(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(pressure: 4' capacity: 10).Should().Be(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(pressure: 3' capacity: 10).Should().Be(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(pressure: 3' capacity: 10).Should().Be(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(pressure: 2' capacity: 10).Should().Be(-1);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(pressure: 2' capacity: 10).Should().Be(-1);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(pressure: 0' capacity: 10).Should().Be(-1);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(pressure: 1' capacity: 9).Should().Be(-1);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(pressure: 0' capacity: 9).Should().Be(-1);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_be_possible_to_define_programmatically,The following statement contains a magic number: var latch = new TestLatch(3);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_be_possible_to_define_programmatically,The following statement contains a magic number: var resizer = new DefaultResizer(lower: 2' upper: 3);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_be_possible_to_define_programmatically,The following statement contains a magic number: var resizer = new DefaultResizer(lower: 2' upper: 3);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_be_possible_to_define_programmatically,The following statement contains a magic number: RouteeSize(router).Should().Be(2);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_be_possible_to_define_in_configuration,The following statement contains a magic number: var latch = new TestLatch(3);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_be_possible_to_define_in_configuration,The following statement contains a magic number: RouteeSize(router).Should().Be(2);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: var resizer = new DefaultResizer(                  lower: 3'                  upper: 5'                  rampupRate: 0.1'                  backoffRate: 0.0'                  pressureThreshold: 1'                  messagesPerResize: 1'                  backoffThreshold: 0.0);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: var resizer = new DefaultResizer(                  lower: 3'                  upper: 5'                  rampupRate: 0.1'                  backoffRate: 0.0'                  pressureThreshold: 1'                  messagesPerResize: 1'                  backoffThreshold: 0.0);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: var resizer = new DefaultResizer(                  lower: 3'                  upper: 5'                  rampupRate: 0.1'                  backoffRate: 0.0'                  pressureThreshold: 1'                  messagesPerResize: 1'                  backoffThreshold: 0.0);
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: Action<int' TimeSpan> loop = (loops' d) =>              {                  for (var i = 0; i < loops; i++)                  {                      router.Tell(d);                        //sending too quickly will result in skipped resize due to many ResizeInProgress conflicts                      Thread.Sleep(Dilated(20.Milliseconds()));                  }                    double max = d.TotalMilliseconds * loops / resizer.LowerBound + Dilated(2.Seconds()).TotalMilliseconds;                  Within(TimeSpan.FromMilliseconds(max)' () =>                  {                      for (var i = 0; i < loops; i++)                      {                          ExpectMsg("done");                      }                  });              };
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: Action<int' TimeSpan> loop = (loops' d) =>              {                  for (var i = 0; i < loops; i++)                  {                      router.Tell(d);                        //sending too quickly will result in skipped resize due to many ResizeInProgress conflicts                      Thread.Sleep(Dilated(20.Milliseconds()));                  }                    double max = d.TotalMilliseconds * loops / resizer.LowerBound + Dilated(2.Seconds()).TotalMilliseconds;                  Within(TimeSpan.FromMilliseconds(max)' () =>                  {                      for (var i = 0; i < loops; i++)                      {                          ExpectMsg("done");                      }                  });              };
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: loop(2' 200.Milliseconds());
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: loop(2' 200.Milliseconds());
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: loop(20' 500.Milliseconds());
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: loop(20' 500.Milliseconds());
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  var resizer = new DefaultResizer(                      lower: 2'                      upper: 5'                      rampupRate: 1.0d'                      backoffRate: 1.0d'                      backoffThreshold: 0.40d'                      pressureThreshold: 1'                      messagesPerResize: 2);                    var router = Sys.ActorOf(new RoundRobinPool(nrOfInstances: 0' resizer : resizer)                      .Props(Props.Create(() => new BackoffActor(Dilated))));                    // put some pressure on the router                  for (var i = 0; i < 15; i++)                  {                      router.Tell(150);                        Thread.Sleep(Dilated(20.Milliseconds()));                  }                    var z = RouteeSize(router);                  z.Should().BeGreaterThan(2);                    Thread.Sleep(Dilated(300.Milliseconds()));                    // let it cool down                  AwaitCondition(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(Dilated(20.Milliseconds()));                      return RouteeSize(router) < z;                  }' Dilated(500.Milliseconds()));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  var resizer = new DefaultResizer(                      lower: 2'                      upper: 5'                      rampupRate: 1.0d'                      backoffRate: 1.0d'                      backoffThreshold: 0.40d'                      pressureThreshold: 1'                      messagesPerResize: 2);                    var router = Sys.ActorOf(new RoundRobinPool(nrOfInstances: 0' resizer : resizer)                      .Props(Props.Create(() => new BackoffActor(Dilated))));                    // put some pressure on the router                  for (var i = 0; i < 15; i++)                  {                      router.Tell(150);                        Thread.Sleep(Dilated(20.Milliseconds()));                  }                    var z = RouteeSize(router);                  z.Should().BeGreaterThan(2);                    Thread.Sleep(Dilated(300.Milliseconds()));                    // let it cool down                  AwaitCondition(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(Dilated(20.Milliseconds()));                      return RouteeSize(router) < z;                  }' Dilated(500.Milliseconds()));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  var resizer = new DefaultResizer(                      lower: 2'                      upper: 5'                      rampupRate: 1.0d'                      backoffRate: 1.0d'                      backoffThreshold: 0.40d'                      pressureThreshold: 1'                      messagesPerResize: 2);                    var router = Sys.ActorOf(new RoundRobinPool(nrOfInstances: 0' resizer : resizer)                      .Props(Props.Create(() => new BackoffActor(Dilated))));                    // put some pressure on the router                  for (var i = 0; i < 15; i++)                  {                      router.Tell(150);                        Thread.Sleep(Dilated(20.Milliseconds()));                  }                    var z = RouteeSize(router);                  z.Should().BeGreaterThan(2);                    Thread.Sleep(Dilated(300.Milliseconds()));                    // let it cool down                  AwaitCondition(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(Dilated(20.Milliseconds()));                      return RouteeSize(router) < z;                  }' Dilated(500.Milliseconds()));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  var resizer = new DefaultResizer(                      lower: 2'                      upper: 5'                      rampupRate: 1.0d'                      backoffRate: 1.0d'                      backoffThreshold: 0.40d'                      pressureThreshold: 1'                      messagesPerResize: 2);                    var router = Sys.ActorOf(new RoundRobinPool(nrOfInstances: 0' resizer : resizer)                      .Props(Props.Create(() => new BackoffActor(Dilated))));                    // put some pressure on the router                  for (var i = 0; i < 15; i++)                  {                      router.Tell(150);                        Thread.Sleep(Dilated(20.Milliseconds()));                  }                    var z = RouteeSize(router);                  z.Should().BeGreaterThan(2);                    Thread.Sleep(Dilated(300.Milliseconds()));                    // let it cool down                  AwaitCondition(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(Dilated(20.Milliseconds()));                      return RouteeSize(router) < z;                  }' Dilated(500.Milliseconds()));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  var resizer = new DefaultResizer(                      lower: 2'                      upper: 5'                      rampupRate: 1.0d'                      backoffRate: 1.0d'                      backoffThreshold: 0.40d'                      pressureThreshold: 1'                      messagesPerResize: 2);                    var router = Sys.ActorOf(new RoundRobinPool(nrOfInstances: 0' resizer : resizer)                      .Props(Props.Create(() => new BackoffActor(Dilated))));                    // put some pressure on the router                  for (var i = 0; i < 15; i++)                  {                      router.Tell(150);                        Thread.Sleep(Dilated(20.Milliseconds()));                  }                    var z = RouteeSize(router);                  z.Should().BeGreaterThan(2);                    Thread.Sleep(Dilated(300.Milliseconds()));                    // let it cool down                  AwaitCondition(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(Dilated(20.Milliseconds()));                      return RouteeSize(router) < z;                  }' Dilated(500.Milliseconds()));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  var resizer = new DefaultResizer(                      lower: 2'                      upper: 5'                      rampupRate: 1.0d'                      backoffRate: 1.0d'                      backoffThreshold: 0.40d'                      pressureThreshold: 1'                      messagesPerResize: 2);                    var router = Sys.ActorOf(new RoundRobinPool(nrOfInstances: 0' resizer : resizer)                      .Props(Props.Create(() => new BackoffActor(Dilated))));                    // put some pressure on the router                  for (var i = 0; i < 15; i++)                  {                      router.Tell(150);                        Thread.Sleep(Dilated(20.Milliseconds()));                  }                    var z = RouteeSize(router);                  z.Should().BeGreaterThan(2);                    Thread.Sleep(Dilated(300.Milliseconds()));                    // let it cool down                  AwaitCondition(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(Dilated(20.Milliseconds()));                      return RouteeSize(router) < z;                  }' Dilated(500.Milliseconds()));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  var resizer = new DefaultResizer(                      lower: 2'                      upper: 5'                      rampupRate: 1.0d'                      backoffRate: 1.0d'                      backoffThreshold: 0.40d'                      pressureThreshold: 1'                      messagesPerResize: 2);                    var router = Sys.ActorOf(new RoundRobinPool(nrOfInstances: 0' resizer : resizer)                      .Props(Props.Create(() => new BackoffActor(Dilated))));                    // put some pressure on the router                  for (var i = 0; i < 15; i++)                  {                      router.Tell(150);                        Thread.Sleep(Dilated(20.Milliseconds()));                  }                    var z = RouteeSize(router);                  z.Should().BeGreaterThan(2);                    Thread.Sleep(Dilated(300.Milliseconds()));                    // let it cool down                  AwaitCondition(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(Dilated(20.Milliseconds()));                      return RouteeSize(router) < z;                  }' Dilated(500.Milliseconds()));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  var resizer = new DefaultResizer(                      lower: 2'                      upper: 5'                      rampupRate: 1.0d'                      backoffRate: 1.0d'                      backoffThreshold: 0.40d'                      pressureThreshold: 1'                      messagesPerResize: 2);                    var router = Sys.ActorOf(new RoundRobinPool(nrOfInstances: 0' resizer : resizer)                      .Props(Props.Create(() => new BackoffActor(Dilated))));                    // put some pressure on the router                  for (var i = 0; i < 15; i++)                  {                      router.Tell(150);                        Thread.Sleep(Dilated(20.Milliseconds()));                  }                    var z = RouteeSize(router);                  z.Should().BeGreaterThan(2);                    Thread.Sleep(Dilated(300.Milliseconds()));                    // let it cool down                  AwaitCondition(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(Dilated(20.Milliseconds()));                      return RouteeSize(router) < z;                  }' Dilated(500.Milliseconds()));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  var resizer = new DefaultResizer(                      lower: 2'                      upper: 5'                      rampupRate: 1.0d'                      backoffRate: 1.0d'                      backoffThreshold: 0.40d'                      pressureThreshold: 1'                      messagesPerResize: 2);                    var router = Sys.ActorOf(new RoundRobinPool(nrOfInstances: 0' resizer : resizer)                      .Props(Props.Create(() => new BackoffActor(Dilated))));                    // put some pressure on the router                  for (var i = 0; i < 15; i++)                  {                      router.Tell(150);                        Thread.Sleep(Dilated(20.Milliseconds()));                  }                    var z = RouteeSize(router);                  z.Should().BeGreaterThan(2);                    Thread.Sleep(Dilated(300.Milliseconds()));                    // let it cool down                  AwaitCondition(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(Dilated(20.Milliseconds()));                      return RouteeSize(router) < z;                  }' Dilated(500.Milliseconds()));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  var resizer = new DefaultResizer(                      lower: 2'                      upper: 5'                      rampupRate: 1.0d'                      backoffRate: 1.0d'                      backoffThreshold: 0.40d'                      pressureThreshold: 1'                      messagesPerResize: 2);                    var router = Sys.ActorOf(new RoundRobinPool(nrOfInstances: 0' resizer : resizer)                      .Props(Props.Create(() => new BackoffActor(Dilated))));                    // put some pressure on the router                  for (var i = 0; i < 15; i++)                  {                      router.Tell(150);                        Thread.Sleep(Dilated(20.Milliseconds()));                  }                    var z = RouteeSize(router);                  z.Should().BeGreaterThan(2);                    Thread.Sleep(Dilated(300.Milliseconds()));                    // let it cool down                  AwaitCondition(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(Dilated(20.Milliseconds()));                      return RouteeSize(router) < z;                  }' Dilated(500.Milliseconds()));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  var resizer = new DefaultResizer(                      lower: 2'                      upper: 5'                      rampupRate: 1.0d'                      backoffRate: 1.0d'                      backoffThreshold: 0.40d'                      pressureThreshold: 1'                      messagesPerResize: 2);                    var router = Sys.ActorOf(new RoundRobinPool(nrOfInstances: 0' resizer : resizer)                      .Props(Props.Create(() => new BackoffActor(Dilated))));                    // put some pressure on the router                  for (var i = 0; i < 15; i++)                  {                      router.Tell(150);                        Thread.Sleep(Dilated(20.Milliseconds()));                  }                    var z = RouteeSize(router);                  z.Should().BeGreaterThan(2);                    Thread.Sleep(Dilated(300.Milliseconds()));                    // let it cool down                  AwaitCondition(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(Dilated(20.Milliseconds()));                      return RouteeSize(router) < z;                  }' Dilated(500.Milliseconds()));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  var resizer = new DefaultResizer(                      lower: 2'                      upper: 5'                      rampupRate: 1.0d'                      backoffRate: 1.0d'                      backoffThreshold: 0.40d'                      pressureThreshold: 1'                      messagesPerResize: 2);                    var router = Sys.ActorOf(new RoundRobinPool(nrOfInstances: 0' resizer : resizer)                      .Props(Props.Create(() => new BackoffActor(Dilated))));                    // put some pressure on the router                  for (var i = 0; i < 15; i++)                  {                      router.Tell(150);                        Thread.Sleep(Dilated(20.Milliseconds()));                  }                    var z = RouteeSize(router);                  z.Should().BeGreaterThan(2);                    Thread.Sleep(Dilated(300.Milliseconds()));                    // let it cool down                  AwaitCondition(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(Dilated(20.Milliseconds()));                      return RouteeSize(router) < z;                  }' Dilated(500.Milliseconds()));              });
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_be_able_to_shut_down_its_instance,The following statement contains a magic number: const int routeeCount = 5;
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_be_able_to_shut_down_its_instance,The following statement contains a magic number: helloLatch.Ready(5.Seconds());
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_be_able_to_shut_down_its_instance,The following statement contains a magic number: stopLatch.Ready(5.Seconds());
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_deliver_messages_in_a_round_robin_fashion,The following statement contains a magic number: const int connectionCount = 10;
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_deliver_messages_in_a_round_robin_fashion,The following statement contains a magic number: const int iterationCount = 10;
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_deliver_messages_in_a_round_robin_fashion,The following statement contains a magic number: doneLatch.Ready(5.Seconds());
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_deliver_deliver_a_broadcast_message_using_Tell,The following statement contains a magic number: const int routeeCount = 5;
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_deliver_deliver_a_broadcast_message_using_Tell,The following statement contains a magic number: helloLatch.Ready(5.Seconds());
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_deliver_deliver_a_broadcast_message_using_Tell,The following statement contains a magic number: stopLatch.Ready(5.Seconds());
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: IActorRef actor = Sys.ActorOf(new RoundRobinPool(3)                  .Props(Props.Create<EmptyBehaviorActor>())' "round-robin-managed");
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: RouteeSize(actor).Should().Be(3);
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: actor.Tell(new AdjustPoolSize(4));
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: RouteeSize(actor).Should().Be(7);
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: actor.Tell(new AdjustPoolSize(-2));
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: RouteeSize(actor).Should().Be(5);
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: RouteeSize(actor).Should().Be(6);
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_pool_must_be_controlled_with_management_messages,The following statement contains a magic number: RouteeSize(actor).Should().Be(5);
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_group_must_deliver_messages_in_a_round_robin_fashion,The following statement contains a magic number: const int connectionCount = 10;
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_group_must_deliver_messages_in_a_round_robin_fashion,The following statement contains a magic number: const int iterationCount = 10;
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_group_must_deliver_messages_in_a_round_robin_fashion,The following statement contains a magic number: doneLatch.Ready(5.Seconds());
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_logic_used_in_actor_must_deliver_messages_in_a_round_robin_fashion,The following statement contains a magic number: const int connectionCount = 10;
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,Round_robin_logic_used_in_actor_must_deliver_messages_in_a_round_robin_fashion,The following statement contains a magic number: const int iterationCount = 10;
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,RoundRobinRoutingLogic_must_not_throw_IndexOutOfRangeException_when_counter_wraps_to_be_negative,The following statement contains a magic number: var routingLogic = new RoundRobinRoutingLogic(int.MaxValue - 5);
Magic Number,Akka.Tests.Routing,RoundRobinSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,RoundRobinRoutingLogic_must_not_throw_IndexOutOfRangeException_when_counter_wraps_to_be_negative,The following statement contains a magic number: i < 10
Magic Number,Akka.Tests.Routing,RouteeCreationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RouteeCreationSpec.cs,Creating_routees_must_result_in_visible_routees,The following statement contains a magic number: int n = 100;
Magic Number,Akka.Tests.Routing,RouteeCreationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RouteeCreationSpec.cs,Creating_routees_must_allow_sending_to_context_parent,The following statement contains a magic number: int n = 100;
Magic Number,Akka.Tests.Routing,RouteeCreationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RouteeCreationSpec.cs,Creating_routees_must_allow_sending_to_context_parent,The following statement contains a magic number: ExpectNoMsg(100.Milliseconds());
Magic Number,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_in_general_must_evict_terminated_routees,The following statement contains a magic number: var router = Sys.ActorOf(new RoundRobinPool(2).Props(Props.Create<Echo>()));
Magic Number,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_in_general_must_evict_terminated_routees,The following statement contains a magic number: AwaitCondition(() =>              {                  router.Tell("");                  router.Tell("");                    var res = ReceiveWhile(100.Milliseconds()' x =>                  {                      if (x is IActorRef)                          return x.AsInstanceOf<IActorRef>();                        return null;                  }' msgs: 2);                    return res.Count == 2 && res.All(c => c.Equals(c1));              });
Magic Number,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_in_general_must_evict_terminated_routees,The following statement contains a magic number: AwaitCondition(() =>              {                  router.Tell("");                  router.Tell("");                    var res = ReceiveWhile(100.Milliseconds()' x =>                  {                      if (x is IActorRef)                          return x.AsInstanceOf<IActorRef>();                        return null;                  }' msgs: 2);                    return res.Count == 2 && res.All(c => c.Equals(c1));              });
Magic Number,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_in_general_must_evict_terminated_routees,The following statement contains a magic number: AwaitCondition(() =>              {                  router.Tell("");                  router.Tell("");                    var res = ReceiveWhile(100.Milliseconds()' x =>                  {                      if (x is IActorRef)                          return x.AsInstanceOf<IActorRef>();                        return null;                  }' msgs: 2);                    return res.Count == 2 && res.All(c => c.Equals(c1));              });
Magic Number,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_in_general_must_not_terminate_when_resizer_is_used,The following statement contains a magic number: routees.Count.Should().Be(2);
Magic Number,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_in_general_must_not_terminate_when_resizer_is_used,The following statement contains a magic number: ExpectNoMsg(2.Seconds());
Magic Number,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_in_general_must_use_configured_nr_of_instances_when_FromConfig,The following statement contains a magic number: ExpectMsg<Routees>().Members.Count().Should().Be(3);
Magic Number,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_in_general_must_use_configured_nr_of_instances_when_router_is_specified,The following statement contains a magic number: ExpectMsg<Routees>().Members.Count().Should().Be(3);
Magic Number,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_in_general_must_use_specified_resizer_when_resizer_not_configured,The following statement contains a magic number: ExpectMsg<Routees>().Members.Count().Should().Be(3);
Magic Number,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_in_general_must_default_to_all_for_one_always_escalate_strategy,The following statement contains a magic number: supervisor.Tell(new RoundRobinPool(3).Props(Props.Create(() => new RestartActor(TestActor))));
Magic Number,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_must_be_able_to_send_their_routees,The following statement contains a magic number: var router = Sys.ActorOf(new BroadcastPool(5).Props(Props.Create<Echo>()));
Magic Number,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_AddRoute_should_add_new_routee,The following statement contains a magic number: updatedRouter.Routees.Count().Should().Be(2);
Magic Number,Akka.Tests.Routing,RoutingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_RemoveRoute_should_remove_existing_routee_and_leave_the_rest,The following statement contains a magic number: updatedRouter.Routees.Count().Should().Be(2);
Magic Number,Akka.Tests.Routing,TestResizer,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Resize,The following statement contains a magic number: return 2;
Magic Number,Akka.Tests.Routing,TestResizer2,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Resize,The following statement contains a magic number: return 3;
Magic Number,Akka.Tests.Routing,InlineRouterActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,InlineRouterActor,The following statement contains a magic number: Receive<string>(s => s == "start"' c =>                  {                      var actor = Context.ActorOf(new RoundRobinPool(2).Props(Props.Create<InlineReceiverActor>()));                      actor.Ask("hello").PipeTo(Sender);                  });
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_group_must_deliver_a_broadcast_message_using_tell,The following statement contains a magic number: var doneLatch = new TestLatch(2);
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_group_must_return_response_even_if_one_of_the_actors_has_stopped,The following statement contains a magic number: var actor2 = Sys.ActorOf(Props.Create(() => new StopActor(14' shutdownLatch)));
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_group_must_return_response_even_if_one_of_the_actors_has_stopped,The following statement contains a magic number: var routedActor = Sys.ActorOf(new ScatterGatherFirstCompletedGroup(paths' TimeSpan.FromSeconds(3)).Props());
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_group_must_return_response_even_if_one_of_the_actors_has_stopped,The following statement contains a magic number: var res = await routedActor.Ask<int>(0' TimeSpan.FromSeconds(10));
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_group_must_return_response_even_if_one_of_the_actors_has_stopped,The following statement contains a magic number: res.Should().Be(14);
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_pool_must_without_routees_should_reply_immediately,The following statement contains a magic number: var routedActor = Sys.ActorOf(new ScatterGatherFirstCompletedPool(0' TimeSpan.FromSeconds(5)).Props(Props.Empty));
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_pool_must_without_routees_should_reply_immediately,The following statement contains a magic number: var message = probe.ExpectMsg<Status.Failure>(2.Seconds());
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_group_must_only_return_one_response,The following statement contains a magic number: var actor2 = Sys.ActorOf(Props.Create(() => new StopActor(14' null)));
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_group_must_only_return_one_response,The following statement contains a magic number: var routedActor = Sys.ActorOf(new ScatterGatherFirstCompletedGroup(paths' TimeSpan.FromSeconds(3)).Props());
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_group_must_handle_failing_timeouts,The following statement contains a magic number: var actor1 = Sys.ActorOf(Props.Create(() => new StopActor(50' null)));
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_group_must_handle_failing_timeouts,The following statement contains a magic number: var routedActor = Sys.ActorOf(new ScatterGatherFirstCompletedGroup(paths' TimeSpan.FromSeconds(3)).Props());
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_group_must_handle_failing_timeouts,The following statement contains a magic number: var exception = await routedActor.Ask<Status.Failure>(0' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Routing,StopActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,StopActor,The following statement contains a magic number: ReceiveAny(x =>                  {                      Thread.Sleep(100 * _id);                      Sender.Tell(_id);                  });
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,Smallest_mailbox_pool_must_deliver_messages_to_idle_actor,The following statement contains a magic number: var router = Sys.ActorOf(new SmallestMailboxPool(3).Props(Props.Create(() => new SmallestMailboxActor(usedActors))));
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,Smallest_mailbox_pool_must_deliver_messages_to_idle_actor,The following statement contains a magic number: router.Tell((2' received2));
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,Smallest_mailbox_pool_must_deliver_messages_to_idle_actor,The following statement contains a magic number: router.Tell((3' received3));
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,Smallest_mailbox_pool_must_deliver_messages_to_idle_actor,The following statement contains a magic number: var path2 = usedActors[2];
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,Smallest_mailbox_pool_must_deliver_messages_to_idle_actor,The following statement contains a magic number: var path3 = usedActors[3];
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,SmallestMailboxRoutingLogic_must_not_throw_IndexOutOfRangeException_when_counter_wraps_to_be_negative,The following statement contains a magic number: var routingLogic = new SmallestMailboxRoutingLogic(int.MaxValue - 5);
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,SmallestMailboxRoutingLogic_must_not_throw_IndexOutOfRangeException_when_counter_wraps_to_be_negative,The following statement contains a magic number: i < 10
Magic Number,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_deliver_a_broadcast_message_using_tell,The following statement contains a magic number: var doneLatch = new TestLatch(2);
Magic Number,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_deliver_a_broadcast_message_using_tell,The following statement contains a magic number: var routedActor = Sys.ActorOf(new TailChoppingGroup(paths' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(100)).Props());
Magic Number,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_return_response_from_second_actor_after_inactivity_from_first_one,The following statement contains a magic number: var routedActor = Sys.ActorOf(new TailChoppingGroup(paths' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(50)).Props());
Magic Number,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_throw_exception_if_no_result_will_arrive_within_the_given_time,The following statement contains a magic number: var actor1 = Sys.ActorOf(Props.Create(() => new TailChopTestActor(1500.Milliseconds()))' "Actor3");
Magic Number,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_throw_exception_if_no_result_will_arrive_within_the_given_time,The following statement contains a magic number: var actor2 = Sys.ActorOf(Props.Create(() => new TailChopTestActor(1500.Milliseconds()))' "Actor4");
Magic Number,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_throw_exception_if_no_result_will_arrive_within_the_given_time,The following statement contains a magic number: var routedActor = Sys.ActorOf(new TailChoppingGroup(paths' TimeSpan.FromMilliseconds(300)' TimeSpan.FromMilliseconds(50)).Props());
Magic Number,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_throw_exception_if_no_result_will_arrive_within_the_given_time,The following statement contains a magic number: var routedActor = Sys.ActorOf(new TailChoppingGroup(paths' TimeSpan.FromMilliseconds(300)' TimeSpan.FromMilliseconds(50)).Props());
Magic Number,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_reply_ASAP,The following statement contains a magic number: var actor1 = Sys.ActorOf(Props.Create(() => new TailChopTestActor(1000.Milliseconds()))' "Actor5");
Magic Number,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_reply_ASAP,The following statement contains a magic number: var actor2 = Sys.ActorOf(Props.Create(() => new TailChopTestActor(4000.Milliseconds()))' "Actor6");
Magic Number,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_reply_ASAP,The following statement contains a magic number: var routedActor = Sys.ActorOf(new TailChoppingGroup(paths' TimeSpan.FromSeconds(5)' TimeSpan.FromMilliseconds(100)).Props());
Magic Number,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_reply_ASAP,The following statement contains a magic number: var routedActor = Sys.ActorOf(new TailChoppingGroup(paths' TimeSpan.FromSeconds(5)' TimeSpan.FromMilliseconds(100)).Props());
Magic Number,Akka.Tests.Routing,TailChoppingSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_group_router_must_reply_ASAP,The following statement contains a magic number: probe.ExpectMsg("ack"' 2.Seconds());
Magic Number,Akka.Tests.Serialization,CustomSerializerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\CustomSerializerSpec.cs,Custom_serializer_must_be_owner_of_its_serializerId,The following statement contains a magic number: Assert.Equal(666' serializer.Identifier);
Magic Number,Akka.Tests.Serialization,NewtonsoftJsonConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\NewtonsoftJsonConfigSpec.cs,Json_serializer_should_have_correct_defaults,The following statement contains a magic number: Assert.Equal(2' serializer.Settings.Converters.Count);
Magic Number,Akka.Tests.Serialization,NewtonsoftJsonConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\NewtonsoftJsonConfigSpec.cs,Json_serializer_should_allow_to_setup_custom_flags,The following statement contains a magic number: Assert.Equal(2' serializer.Settings.Converters.Count);
Magic Number,Akka.Tests.Serialization,NewtonsoftJsonConfigSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\NewtonsoftJsonConfigSpec.cs,Json_serializer_should_allow_to_setup_custom_converters,The following statement contains a magic number: Assert.Equal(4' serializer.Settings.Converters.Count);
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_decimal,The following statement contains a magic number: var message = 123.456m;
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_decimal_message,The following statement contains a magic number: var message = new UntypedContainerMessage { Contents = 123.456m };
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_float_message,The following statement contains a magic number: var message = new UntypedContainerMessage {Contents = 123.456f};
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_long_message,The following statement contains a magic number: var message = new UntypedContainerMessage { Contents = 123L };
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_double_message,The following statement contains a magic number: var message = new UntypedContainerMessage { Contents = 123.456d };
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_int_message,The following statement contains a magic number: var message = new UntypedContainerMessage { Contents = 123};
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_long,The following statement contains a magic number: var message = 123L;
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_double,The following statement contains a magic number: var message = 123.456d;
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_int,The following statement contains a magic number: var message = 123;
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_float,The following statement contains a magic number: var message = 123.456f;
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_address,The following statement contains a magic number: var message = new Address("abc"' "def"' "ghi"' 123);
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_RemoteScope,The following statement contains a magic number: var message = new RemoteScope(new Address("akka.tcp"' "foo"' "localhost"' 8080));
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_RoundRobinPool,The following statement contains a magic number: var message = new RoundRobinPool(10' new DefaultResizer(0'1)'supervisor'"abc");
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_RandomPool,The following statement contains a magic number: var message = new RandomPool(10' new DefaultResizer(0' 1)'supervisor'"abc");
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_ConsistentHashPool,The following statement contains a magic number: var message = new ConsistentHashingPool(10'null'supervisor'"abc");
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_TailChoppingPool,The following statement contains a magic number: var message = new TailChoppingPool(10' null' supervisor' "abc"' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_TailChoppingPool,The following statement contains a magic number: var message = new TailChoppingPool(10' null' supervisor' "abc"' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_TailChoppingPool,The following statement contains a magic number: var message = new TailChoppingPool(10' null' supervisor' "abc"' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_ScatterGatherFirstCompletedPool,The following statement contains a magic number: var message = new ScatterGatherFirstCompletedPool(10' null' TimeSpan.MaxValue' supervisor' "abc");
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_SmallestMailboxPool,The following statement contains a magic number: var message = new SmallestMailboxPool(10'null'supervisor'"abc");
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_Resizer,The following statement contains a magic number: var message = new DefaultResizer(1' 20);
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_get_serializer_by_binding,The following statement contains a magic number: Sys.Serialization.FindSerializerFor(new byte[]{1'2'3}).GetType().ShouldBe(typeof(ByteArraySerializer));
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_get_serializer_by_binding,The following statement contains a magic number: Sys.Serialization.FindSerializerFor(new byte[]{1'2'3}).GetType().ShouldBe(typeof(ByteArraySerializer));
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_get_serializer_by_binding,The following statement contains a magic number: Sys.Serialization.FindSerializerFor(123).GetType().ShouldBe(typeof(NewtonSoftJsonSerializer));
Magic Number,Akka.Tests.Serialization,SerializationSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_apply_a_config_based_serializer_by_the_binding,The following statement contains a magic number: var dummy2 = (DummyConfigurableSerializer) Sys.Serialization.GetSerializerById(-7);
Magic Number,Akka.Tests.Serialization,ImmutableMessageWithPrivateCtor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,GetHashCode,The following statement contains a magic number: return ((Bar != null ? Bar.GetHashCode() : 0)*397) ^ (Foo != null ? Foo.GetHashCode() : 0);
Magic Number,Akka.Tests.Serialization,ImmutableMessage,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,GetHashCode,The following statement contains a magic number: return ((Bar != null ? Bar.GetHashCode() : 0)*397) ^ (Foo != null ? Foo.GetHashCode() : 0);
Magic Number,Akka.Tests.Util,ByteStringSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_concatenated_bytestring_must_return_correct_index_of_elements_in_string,The following statement contains a magic number: var b = ByteString.FromBytes(new byte[] { 1 }) + ByteString.FromBytes(new byte[] { 2 });
Magic Number,Akka.Tests.Util,ByteStringSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_concatenated_bytestring_must_return_correct_index_of_elements_in_string,The following statement contains a magic number: int offset = b.IndexOf(2);
Magic Number,Akka.Tests.Util,ByteStringSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_concatenated_bytestring_must_return_negative_one_when_an_element_was_not_found,The following statement contains a magic number: var b = ByteString.FromBytes(new byte[] { 1 }) + ByteString.FromBytes(new byte[] { 2 });
Magic Number,Akka.Tests.Util,ByteStringSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_concatenated_bytestring_must_return_negative_one_when_an_element_was_not_found,The following statement contains a magic number: int offset = b.IndexOf(3);
Magic Number,Akka.Tests.Util,ByteStringSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_concatenated_ByteString_with_partial_characters_must_return_correct_string_for_ToString_Unicode,The following statement contains a magic number: data += ByteString.CopyFrom(rawData' 0' 3);
Magic Number,Akka.Tests.Util,ByteStringSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_concatenated_ByteString_with_partial_characters_must_return_correct_string_for_ToString_Unicode,The following statement contains a magic number: data += ByteString.CopyFrom(rawData' 3' 3);
Magic Number,Akka.Tests.Util,ByteStringSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_concatenated_ByteString_with_partial_characters_must_return_correct_string_for_ToString_Unicode,The following statement contains a magic number: data += ByteString.CopyFrom(rawData' 3' 3);
Magic Number,Akka.Tests.Util,ByteStringSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_concatenated_ByteString_with_partial_characters_must_return_correct_string_for_ToString_UTF8,The following statement contains a magic number: data += ByteString.CopyFrom(rawData' 1' 3);
Magic Number,Akka.Tests.Util,ByteStringSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_sliced_ByteString_must_return_correct_string_for_ToString,The following statement contains a magic number: int halfExpected = expected.Length / 2;
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: var items = new List<int>() { 1' 2' 3' 4' 5' 6 };
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: var items = new List<int>() { 1' 2' 3' 4' 5' 6 };
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: var items = new List<int>() { 1' 2' 3' 4' 5' 6 };
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: var items = new List<int>() { 1' 2' 3' 4' 5' 6 };
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: var items = new List<int>() { 1' 2' 3' 4' 5' 6 };
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: var slice = items.Slice(2' 4);
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: var slice = items.Slice(2' 4);
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: Assert.True(slice.SequenceEqual(new[] { 3' 4' 5' 6 }));
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: Assert.True(slice.SequenceEqual(new[] { 3' 4' 5' 6 }));
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: Assert.True(slice.SequenceEqual(new[] { 3' 4' 5' 6 }));
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: Assert.True(slice.SequenceEqual(new[] { 3' 4' 5' 6 }));
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,From_should_return_empty_set_when_item_not_found,The following statement contains a magic number: var items = new List<int>() {1' 2' 3' 4' 5' 6};
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,From_should_return_empty_set_when_item_not_found,The following statement contains a magic number: var items = new List<int>() {1' 2' 3' 4' 5' 6};
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,From_should_return_empty_set_when_item_not_found,The following statement contains a magic number: var items = new List<int>() {1' 2' 3' 4' 5' 6};
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,From_should_return_empty_set_when_item_not_found,The following statement contains a magic number: var items = new List<int>() {1' 2' 3' 4' 5' 6};
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,From_should_return_empty_set_when_item_not_found,The following statement contains a magic number: var items = new List<int>() {1' 2' 3' 4' 5' 6};
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,From_should_return_empty_set_when_item_not_found,The following statement contains a magic number: var from7 = items.From(7).Take(2);
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,From_should_return_empty_set_when_item_not_found,The following statement contains a magic number: var from7 = items.From(7).Take(2);
Magic Number,Akka.Tests.Util,ContinuousEnumeratorSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\ContinuousEnumeratorSpec.cs,ContinuousEnumerator_should_iterate_list_overlapping,The following statement contains a magic number: var testList = Enumerable.Range(0' 10).ToList();
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_take_and_return_several_values,The following statement contains a magic number: index.Put("s1"' 2);
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_take_and_return_several_values,The following statement contains a magic number: index.Put("s1"' 3);
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_take_and_return_several_values,The following statement contains a magic number: index.Put("s2"' 4);
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_take_and_return_several_values,The following statement contains a magic number: new HashSet<int>(index["s1"]).SetEquals(new HashSet<int>(new[] {1' 2' 3})).ShouldBeTrue();
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_take_and_return_several_values,The following statement contains a magic number: new HashSet<int>(index["s1"]).SetEquals(new HashSet<int>(new[] {1' 2' 3})).ShouldBeTrue();
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_take_and_return_several_values,The following statement contains a magic number: new HashSet<int>(index["s2"]).SetEquals(new HashSet<int>(new[] {4})).ShouldBeTrue();
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_remove_values,The following statement contains a magic number: index.Put("s1"' 2);
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_remove_values,The following statement contains a magic number: index.Put("s2"' 2);
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_remove_values,The following statement contains a magic number: new HashSet<int>(index["s1"]).SetEquals(new HashSet<int>(new[] { 2 })).ShouldBeTrue();
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_remove_values,The following statement contains a magic number: new HashSet<int>(index.Remove("s2")).SetEquals(new HashSet<int>(new[] {1' 2})).ShouldBeTrue();
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_remove_specified_values,The following statement contains a magic number: index.Put("s1"' 2);
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_remove_specified_values,The following statement contains a magic number: index.Put("s1"' 3);
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_remove_specified_values,The following statement contains a magic number: index.Put("s2"' 2);
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_remove_specified_values,The following statement contains a magic number: index.Put("s3"' 2);
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_remove_specified_values,The following statement contains a magic number: new HashSet<int>(index["s1"]).SetEquals(new HashSet<int>(new[] { 2'3 })).ShouldBeTrue();
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_remove_specified_values,The following statement contains a magic number: new HashSet<int>(index["s1"]).SetEquals(new HashSet<int>(new[] { 2'3 })).ShouldBeTrue();
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_remove_specified_values,The following statement contains a magic number: new HashSet<int>(index["s2"]).SetEquals(new HashSet<int>(new[] { 2 })).ShouldBeTrue();
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_remove_specified_values,The following statement contains a magic number: new HashSet<int>(index["s3"]).SetEquals(new HashSet<int>(new[] { 2 })).ShouldBeTrue();
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_apply_a_function_for_all_key_value_pairs_and_find_every_value,The following statement contains a magic number: valueCount.ShouldBe(6);
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_be_accessed_in_parallel,The following statement contains a magic number: var nrOfTasks = 10000;
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_be_accessed_in_parallel,The following statement contains a magic number: var nrOfKeys = 10;
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_be_accessed_in_parallel,The following statement contains a magic number: var nrOfValues = 10;
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_be_accessed_in_parallel,The following statement contains a magic number: Action removeTask1 = () => index.Remove(ThreadLocalRandom.Current.Next(nrOfKeys/2)' ThreadLocalRandom.Current.Next(nrOfValues));
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_be_accessed_in_parallel,The following statement contains a magic number: Action removeTask2 = () => index.Remove(ThreadLocalRandom.Current.Next(nrOfKeys / 2));
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_be_accessed_in_parallel,The following statement contains a magic number: Action readTask = () =>              {                  var key = ThreadLocalRandom.Current.Next(nrOfKeys);                  var values = index[key];                  if (key >= nrOfKeys/2)                  {                      values.Any().ShouldBeTrue();                  }              };
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_be_accessed_in_parallel,The following statement contains a magic number: Func<Action> randomTask = () =>              {                  var next = ThreadLocalRandom.Current.Next(4);                  switch (next)                  {                      case 0:                          return putTask;                      case 1:                          return removeTask1;                      case 2:                          return removeTask2;                      default:                          return readTask;                  }              };
Magic Number,Akka.Tests.Util,IndexSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\IndexSpec.cs,Index_must_be_accessed_in_parallel,The following statement contains a magic number: Func<Action> randomTask = () =>              {                  var next = ThreadLocalRandom.Current.Next(4);                  switch (next)                  {                      case 0:                          return putTask;                      case 1:                          return removeTask1;                      case 2:                          return removeTask2;                      default:                          return readTask;                  }              };
Magic Number,Akka.Tests.Util,StableListPriorityQueueSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\StableListPriorityQueueSpec.cs,StableListPriorityQueue_must_be_stable,The following statement contains a magic number: var pq = new StableListPriorityQueue(10' Priority);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_start_full,The following statement contains a magic number: var bucket = new TestBucket(10'1);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_start_full,The following statement contains a magic number: bucket.Offer(7).ShouldBe(0);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_start_full,The following statement contains a magic number: bucket.Offer(3).ShouldBe(3);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_start_full,The following statement contains a magic number: bucket.Offer(3).ShouldBe(3);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_calculate_correctly_with_different_rates_and_capacities,The following statement contains a magic number: var bucketRate2 = new TestBucket(10' 2);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_calculate_correctly_with_different_rates_and_capacities,The following statement contains a magic number: var bucketRate2 = new TestBucket(10' 2);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_calculate_correctly_with_different_rates_and_capacities,The following statement contains a magic number: bucketRate2.Offer(5).ShouldBe(0);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_calculate_correctly_with_different_rates_and_capacities,The following statement contains a magic number: bucketRate2.Offer(5).ShouldBe(0);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_calculate_correctly_with_different_rates_and_capacities,The following statement contains a magic number: bucketRate2.Offer(5).ShouldBe(10);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_calculate_correctly_with_different_rates_and_capacities,The following statement contains a magic number: bucketRate2.Offer(5).ShouldBe(10);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_calculate_correctly_with_different_rates_and_capacities,The following statement contains a magic number: var bucketRate3 = new TestBucket(8' 3);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_calculate_correctly_with_different_rates_and_capacities,The following statement contains a magic number: var bucketRate3 = new TestBucket(8' 3);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_calculate_correctly_with_different_rates_and_capacities,The following statement contains a magic number: bucketRate3.Offer(5).ShouldBe(0);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_calculate_correctly_with_different_rates_and_capacities,The following statement contains a magic number: bucketRate3.Offer(5).ShouldBe(6);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_calculate_correctly_with_different_rates_and_capacities,The following statement contains a magic number: bucketRate3.Offer(5).ShouldBe(6);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_calculate_correctly_with_different_rates_and_capacities,The following statement contains a magic number: bucketRate3.SetCurrentTime(6);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_calculate_correctly_with_different_rates_and_capacities,The following statement contains a magic number: bucketRate3.Offer(3).ShouldBe(9);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_calculate_correctly_with_different_rates_and_capacities,The following statement contains a magic number: bucketRate3.Offer(3).ShouldBe(9);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_allow_sending_elements_larger_than_capacity,The following statement contains a magic number: var bucket = new TestBucket(10' 2);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_allow_sending_elements_larger_than_capacity,The following statement contains a magic number: var bucket = new TestBucket(10' 2);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_allow_sending_elements_larger_than_capacity,The following statement contains a magic number: bucket.Offer(5).ShouldBe(0);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_allow_sending_elements_larger_than_capacity,The following statement contains a magic number: bucket.Offer(20).ShouldBe(30);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_allow_sending_elements_larger_than_capacity,The following statement contains a magic number: bucket.Offer(20).ShouldBe(30);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_allow_sending_elements_larger_than_capacity,The following statement contains a magic number: bucket.SetCurrentTime(30);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_allow_sending_elements_larger_than_capacity,The following statement contains a magic number: bucket.Offer(1).ShouldBe(2);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_allow_sending_elements_larger_than_capacity,The following statement contains a magic number: bucket.SetCurrentTime(34);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_allow_sending_elements_larger_than_capacity,The following statement contains a magic number: bucket.Offer(1).ShouldBe(2);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_zero_capacity,The following statement contains a magic number: var bucket = new TestBucket(0' 2);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_zero_capacity,The following statement contains a magic number: bucket.Offer(10).ShouldBe(20);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_zero_capacity,The following statement contains a magic number: bucket.Offer(10).ShouldBe(20);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_zero_capacity,The following statement contains a magic number: bucket.SetCurrentTime(40);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_zero_capacity,The following statement contains a magic number: bucket.Offer(10).ShouldBe(20);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_zero_capacity,The following statement contains a magic number: bucket.Offer(10).ShouldBe(20);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_not_delay_if_rate_is_higher_than_production,The following statement contains a magic number: var bucket = new TestBucket(1' 10);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_not_delay_if_rate_is_higher_than_production,The following statement contains a magic number: time <= 100
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_maximum_capacity,The following statement contains a magic number: var bucket = new TestBucket(10' 1);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_maximum_capacity,The following statement contains a magic number: bucket.Offer(10).ShouldBe(0);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_maximum_capacity,The following statement contains a magic number: bucket.SetCurrentTime(100000);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_maximum_capacity,The following statement contains a magic number: bucket.Offer(20).ShouldBe(10);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_maximum_capacity,The following statement contains a magic number: bucket.Offer(20).ShouldBe(10);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_if_CurrentTime_is_negative,The following statement contains a magic number: var bucket = new TestBucket(10' 1);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_if_CurrentTime_is_negative,The following statement contains a magic number: bucket.SetCurrentTime(-100);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_if_CurrentTime_is_negative,The following statement contains a magic number: bucket.Offer(5).ShouldBe(0);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_if_CurrentTime_is_negative,The following statement contains a magic number: bucket.Offer(10).ShouldBe(5);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_if_CurrentTime_is_negative,The following statement contains a magic number: bucket.Offer(10).ShouldBe(5);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_if_CurrentTime_is_negative,The following statement contains a magic number: bucket.SetCurrentTime(bucket.CurrentTime + 10);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_if_CurrentTime_is_negative,The following statement contains a magic number: bucket.Offer(5).ShouldBe(0);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_if_CurrentTime_wraps_over,The following statement contains a magic number: var bucket = new TestBucket(10' 1);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_if_CurrentTime_wraps_over,The following statement contains a magic number: bucket.SetCurrentTime(long.MaxValue - 5);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_if_CurrentTime_wraps_over,The following statement contains a magic number: bucket.Offer(5).ShouldBe(0);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_if_CurrentTime_wraps_over,The following statement contains a magic number: bucket.Offer(10).ShouldBe(5);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_if_CurrentTime_wraps_over,The following statement contains a magic number: bucket.Offer(10).ShouldBe(5);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_if_CurrentTime_wraps_over,The following statement contains a magic number: bucket.SetCurrentTime(bucket.CurrentTime + 10);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_if_CurrentTime_wraps_over,The following statement contains a magic number: bucket.Offer(5).ShouldBe(0);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: var bucket = new TestBucket(5' 3);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: var bucket = new TestBucket(5' 3);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: bucket.Offer(10).ShouldBe(15);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: bucket.Offer(10).ShouldBe(15);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: bucket.SetCurrentTime(16);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: bucket.Offer(1).ShouldBe(2);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: bucket.SetCurrentTime(19);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: bucket.Offer(2).ShouldBe(5);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: bucket.Offer(2).ShouldBe(5);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: var bucket2 = new TestBucket(10' 3);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: var bucket2 = new TestBucket(10' 3);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: bucket2.SetCurrentTime(4);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: bucket2.Offer(6).ShouldBe(0);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: bucket2.SetCurrentTime(10);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: bucket2.Offer(7).ShouldBe(2);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_maintain_equal_time_between_token_renewal_intervals,The following statement contains a magic number: bucket2.Offer(7).ShouldBe(2);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_cost_of_zero,The following statement contains a magic number: var bucket = new TestBucket(10' 1);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_cost_of_zero,The following statement contains a magic number: bucket.Offer(10).ShouldBe(0);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_very_slow_rates,The following statement contains a magic number: const long t = long.MaxValue >> 10;
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_very_slow_rates,The following statement contains a magic number: var bucket = new TestBucket(10' t);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_very_slow_rates,The following statement contains a magic number: bucket.Offer(20).ShouldBe(10*t);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_very_slow_rates,The following statement contains a magic number: bucket.Offer(20).ShouldBe(10*t);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_very_slow_rates,The following statement contains a magic number: bucket.SetCurrentTime(bucket.CurrentTime + 10*t);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_very_slow_rates,The following statement contains a magic number: bucket.SetCurrentTime(bucket.CurrentTime + 5 * t);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_very_slow_rates,The following statement contains a magic number: bucket.Offer(4).ShouldBe(0);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_work_with_very_slow_rates,The following statement contains a magic number: bucket.Offer(2).ShouldBe(t);
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_behave_exactly_as_the_ideal_token_bucket_if_offer_is_called_with_perfect_timing,The following statement contains a magic number: time <= 1000
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_behave_exactly_as_the_ideal_token_bucket_if_offer_is_called_with_perfect_timing,The following statement contains a magic number: new[] { 1' 5' 10 }
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_behave_exactly_as_the_ideal_token_bucket_if_offer_is_called_with_perfect_timing,The following statement contains a magic number: new[] { 1' 5' 10 }
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_behave_exactly_as_the_ideal_token_bucket_if_offer_is_called_with_perfect_timing,The following statement contains a magic number: new[] { 1' 3' 5 }
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_behave_exactly_as_the_ideal_token_bucket_if_offer_is_called_with_perfect_timing,The following statement contains a magic number: new[] { 1' 3' 5 }
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_behave_exactly_as_the_ideal_token_bucket_if_offer_is_called_with_perfect_timing,The following statement contains a magic number: new[] { 1' 3' 5 }
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_behave_exactly_as_the_ideal_token_bucket_if_offer_is_called_with_perfect_timing,The following statement contains a magic number: new[] { 1' 3' 5 }
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_behave_exactly_as_the_ideal_token_bucket_if_offer_is_called_with_perfect_timing,The following statement contains a magic number: new[] {0' 1' 5' 10}
Magic Number,Akka.Tests.Util,TokenBucketSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\TokenBucketSpec.cs,A_TokenBucket_must_behave_exactly_as_the_ideal_token_bucket_if_offer_is_called_with_perfect_timing,The following statement contains a magic number: new[] {0' 1' 5' 10}
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_next_for_elements,The following statement contains a magic number: var iter = new[] {8' 2' 5}.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_next_for_elements,The following statement contains a magic number: var iter = new[] {8' 2' 5}.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_next_for_elements,The following statement contains a magic number: var iter = new[] {8' 2' 5}.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_next_for_elements,The following statement contains a magic number: iter.Next().Should().Be(8);
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_next_for_elements,The following statement contains a magic number: iter.Next().Should().Be(2);
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_next_for_elements,The following statement contains a magic number: iter.Next().Should().Be(5);
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_isempty,The following statement contains a magic number: var iter = new[] { 8' 2}.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_isempty,The following statement contains a magic number: var iter = new[] { 8' 2}.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_isempty,The following statement contains a magic number: iter.Next().Should().Be(8);
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_isempty,The following statement contains a magic number: iter.Next().Should().Be(2);
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: var iter = new[] { 8' 2' 8' 5' 23 }.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: var iter = new[] { 8' 2' 8' 5' 23 }.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: var iter = new[] { 8' 2' 8' 5' 23 }.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: var iter = new[] { 8' 2' 8' 5' 23 }.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: var iter = new[] { 8' 2' 8' 5' 23 }.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: iter.Next().Should().Be(8);
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: iter.Next().Should().Be(2);
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: vector.ShouldBeEquivalentTo(new[] { 8' 5' 23 });
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: vector.ShouldBeEquivalentTo(new[] { 8' 5' 23 });
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: vector.ShouldBeEquivalentTo(new[] { 8' 5' 23 });
Magic Number,Akka.Tests.Util.Internal,ExtensionsTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\ExtensionsTests.cs,TestAlternateSelectMany,The following statement contains a magic number: var input = new[] {0' 0' 1' 1' 2' 2' 1};
Magic Number,Akka.Tests.Util.Internal,ExtensionsTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\ExtensionsTests.cs,TestAlternateSelectMany,The following statement contains a magic number: var input = new[] {0' 0' 1' 1' 2' 2' 1};
Magic Number,Akka.Tests.Util.Internal,ExtensionsTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\ExtensionsTests.cs,AlternateSelectMany,The following statement contains a magic number: return self.SelectMany((val' i) => i % 2 == 0 ? evenSelector(val) : oddSelector(val));
Magic Number,Akka.Tests.Util.Internal,ConfigStringsGen,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\ExtensionsTests.cs,ConfigStrings,The following statement contains a magic number: var z =                      from size in Gen.Choose(1' 50)                      let letters = Arb.toGen(Arb.Default.Char().Filter(c => (c >= 'A' && c <= 'z') || c == '.'))                      let len = Gen.Choose(1' 200)                      let words = len                          .SelectMany(i => Gen.ArrayOf(i' letters)                              .SelectMany(ls => Arb.Generate<bool>()                                  .Select(b => ls.Contains('.') || b ? "\"" + new string(ls) + "\"" : new string(ls))))                      from wx in Gen.ArrayOf(size' words).Select(ww => String.Join("."' ww))                      select wx;
Magic Number,Akka.Tests.Util.Internal,ConfigStringsGen,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\ExtensionsTests.cs,ConfigStrings,The following statement contains a magic number: var z =                      from size in Gen.Choose(1' 50)                      let letters = Arb.toGen(Arb.Default.Char().Filter(c => (c >= 'A' && c <= 'z') || c == '.'))                      let len = Gen.Choose(1' 200)                      let words = len                          .SelectMany(i => Gen.ArrayOf(i' letters)                              .SelectMany(ls => Arb.Generate<bool>()                                  .Select(b => ls.Contains('.') || b ? "\"" + new string(ls) + "\"" : new string(ls))))                      from wx in Gen.ArrayOf(size' words).Select(ww => String.Join("."' ww))                      select wx;
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun,The following statement contains a magic number: Func<string' string> updateWhenSignaled = i =>              {                  numberOfCallsToUpdateWhenSignaled++;                  hasEnteredUpdateMethod.Set();	//Signal THREAD 1 to update sharedVariable                  okToContinue.WaitOne(TimeSpan.FromSeconds(2));	//Wait for THREAD 1                  return "updated";              };
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun,The following statement contains a magic number: hasEnteredUpdateMethod.WaitOne(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun,The following statement contains a magic number: task.Wait(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun,The following statement contains a magic number: numberOfCallsToUpdateWhenSignaled.ShouldBe(2);
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_using_tuples,The following statement contains a magic number: Func<string' (bool' string' string)> updateWhenSignaled = i =>              {                  numberOfCallsToUpdateWhenSignaled++;                  hasEnteredUpdateMethod.Set();	//Signal THREAD 1 to update sharedVariable                  okToContinue.WaitOne(TimeSpan.FromSeconds(2));	//Wait for THREAD 1                  return (true' "updated"' "returnValue");              };
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_using_tuples,The following statement contains a magic number: hasEnteredUpdateMethod.WaitOne(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_using_tuples,The following statement contains a magic number: task.Wait(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_using_tuples,The following statement contains a magic number: numberOfCallsToUpdateWhenSignaled.ShouldBe(2);
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_but_as_the_break_condition_is_fulfilled_it_do_not_update,The following statement contains a magic number: Func<string' (bool' string' string)> updateWhenSignaled = s =>              {                  numberOfCallsToUpdateWhenSignaled++;                  hasEnteredUpdateMethod.Set();	//Signal to start-thread that we have entered the update method (it will chang                  okToContinue.WaitOne(TimeSpan.FromSeconds(2));	//Wait to be signalled                  var shouldUpdate = s == "";                  return (shouldUpdate' "updated"' shouldUpdate ? "update" : "break");              };
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_but_as_the_break_condition_is_fulfilled_it_do_not_update,The following statement contains a magic number: hasEnteredUpdateMethod.WaitOne(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_but_as_the_break_condition_is_fulfilled_it_do_not_update,The following statement contains a magic number: task.Wait(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_but_as_the_break_condition_is_fulfilled_it_do_not_update,The following statement contains a magic number: numberOfCallsToUpdateWhenSignaled.ShouldBe(2);
Missing Default,Akka.Tests.Actor,ReplyActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,Receive,The following switch statement is missing a default case: switch (type)                  {                      case "complexRequest":                          {                              _replyTo = Sender;                              var worker = Context.ActorOf(Props.Create<WorkerActor>());                              worker.Tell("work");                              break;                          }                      case "complexRequest2":                          {                              var worker = Context.ActorOf(Props.Create<WorkerActor>());                              worker.Tell(new ReplyTo(Sender));                              break;                          }                      case "workDone":                          _replyTo.Tell("complexReply");                          break;                      case "simpleRequest":                          Sender.Tell("simpleReply");                          break;                  }
Missing Default,Akka.Tests.Actor,SenderActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,Receive,The following switch statement is missing a default case: switch (msg)                  {                      case "complex": _replyTo.Tell("complexRequest"); break;                      case "complex2": _replyTo.Tell("complexRequest2"); break;                      case "simple": _replyTo.Tell("simpleRequest"); break;                      case "complexReply": _latch.CountDown(); break;                      case "simpleReply": _latch.CountDown(); break;                  }
Missing Default,Akka.Tests.Event,LoggerSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests\Event\LoggerSpec.cs,LoggingAdapter_should_log_all_information,The following switch statement is missing a default case: switch (logLevel)              {                  case LogLevel.DebugLevel when includeException:                      Log.Debug(ex' formatStr' args);                      break;                  case LogLevel.DebugLevel:                      Log.Debug(formatStr' args);                      break;                  case LogLevel.InfoLevel when includeException:                      Log.Info(ex' formatStr' args);                      break;                  case LogLevel.InfoLevel:                      Log.Info(formatStr' args);                      break;                  case LogLevel.WarningLevel when includeException:                      Log.Warning(ex' formatStr' args);                      break;                  case LogLevel.WarningLevel:                      Log.Warning(formatStr' args);                      break;                  case LogLevel.ErrorLevel when includeException:                      Log.Error(ex' formatStr' args);                      break;                  case LogLevel.ErrorLevel:                      Log.Error(formatStr' args);                      break;              }
