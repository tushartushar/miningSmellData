Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Akka.Tests.Performance.Actor,ActorPathEqualitySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorPathEqualitySpec.cs,,The length of the parameter MinimumAcceptableOperationsPerSecond is 36.
Long Identifier,Akka.Tests.Performance.Actor,ActorPathSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorPathSpec.cs,,The length of the parameter MinimumAcceptableOperationsPerSecond is 36.
Long Identifier,Akka.Tests.Performance.Actor,ActorThroughputSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorThroughputSpec.cs,,The length of the parameter _actorBasePatternMatchActorRef is 30.
Long Identifier,Akka.Tests.Performance.Actor,AddressSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\AddressSpec.cs,,The length of the parameter MinimumAcceptableOperationsPerSecond is 36.
Long Identifier,Akka.Tests.Performance.Dispatch,MailboxMemoryFootprintSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Dispatch\MailboxMemoryFootprintSpec.cs,,The length of the parameter _unboundedDequeBasedMailboxType is 31.
Long Identifier,Akka.Tests.Performance.Util,SerializationBenchmarks,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Util\SerializationBenchmarks.cs,,The length of the parameter _findSerializerForTypeThroughput is 32.
Long Identifier,Akka.Tests.Performance.Util,StandardOutWriterMemoryBenchmark,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Util\StandardOutWriterMemoryBenchmark.cs,,The length of the parameter _consoleWriteThroughputCounter is 30.
Long Identifier,Akka.Tests.Performance.Util,StandardOutWriterMemoryBenchmark,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Util\StandardOutWriterMemoryBenchmark.cs,,The length of the parameter ConsoleWriteThroughputCounterName is 33.
Long Statement,Akka.Tests.Performance.Actor,ActorSelectionSpecs,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorSelectionSpecs.cs,ActorSelection_ResolveOne_throughput,The length of the statement  "            var actorRef= System.ActorSelection(_receiverActorPath).ResolveOne(TimeSpan.FromSeconds(2)).Result; // send that actor a message via selection " is 142.
Long Statement,Akka.Tests.Performance.Actor,ActorSelectionSpecs,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorSelectionSpecs.cs,ActorSelection_ResolveOne_stress_test,The length of the statement  "            var actorRef2 = System.ActorSelection(actorRef.Path).ResolveOne(TimeSpan.FromSeconds(2)).Result; // send that actor a message via selection " is 139.
Long Statement,Akka.Tests.Performance.Actor,ActorThroughputSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorThroughputSpec.cs,Setup,The length of the statement  "            _actorBasePatternMatchActorRef = System.ActorOf(BenchmarkActorBasePatternMatchActor.Props(_mailboxThroughput' MailboxMessageCount * 3' _resetEvent)); " is 149.
Long Statement,Akka.Tests.Performance.Actor,ActorThroughputSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorThroughputSpec.cs,Setup,The length of the statement  "            _untypedActorRef = System.ActorOf(BenchmarkUntypedActor.Props(_mailboxThroughput' MailboxMessageCount * 3' _resetEvent)); " is 121.
Long Statement,Akka.Tests.Performance.Actor,ActorThroughputSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorThroughputSpec.cs,Setup,The length of the statement  "            _receiveActorRef = System.ActorOf(BenchmarkReceiveActor.Props(_mailboxThroughput' MailboxMessageCount * 3' _resetEvent)); " is 121.
Long Statement,Akka.Tests.Performance.Dispatch,MessageDispatchAndReceiveBenchmark,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Dispatch\MessageDispatchAndReceiveBenchmark.cs,Setup,The length of the statement  "            TestActor = System.ActorOf(Props.Create(() => new Act(actor)).WithDispatcher("calling-thread-dispatcher")' "testactor"); " is 120.
Long Statement,Akka.Tests.Performance.Dispatch,ReceiveOnlyBenchmark,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Dispatch\ReceiveOnlyBenchmark.cs,Setup,The length of the statement  "            TestActor = System.ActorOf(Props.Create(() => new Act(actor)).WithDispatcher("calling-thread-dispatcher")' "testactor"); " is 120.
Long Statement,Akka.Tests.Performance.Dispatch,ReceiveOnlyBenchmark,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Dispatch\ReceiveOnlyBenchmark.cs,Setup,The length of the statement  "                TestActor.AsInstanceOf<RepointableActorRef>().Underlying.AsInstanceOf<ActorCell>().Mailbox.MessageQueue.Enqueue(TestActor' new Envelope("hit"' ActorRefs.Nobody)); // queue all of the messages into the actor " is 206.
Long Statement,Akka.Tests.Performance.IO,TcpHorizontalScaleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\IO\TcpHorizontalScaleSpec.cs,Tcp_horizontal_scale_test,The length of the statement  "                var client = _system.ActorOf(Props.Create(() => new TestClient(TestEndPoint' _outboundThroughputCounter' _errorCounter' _bytes))); " is 130.
Long Statement,Akka.Tests.Performance.IO,TcpHorizontalScaleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\IO\TcpHorizontalScaleSpec.cs,Setup,The length of the statement  "            _listener = _system.ActorOf(Props.Create(() => new TestListener(TestEndPoint' _clientConnectedCounter' _inboundThroughputCounter' _errorCounter))' "listener"); " is 159.
Long Statement,Akka.Tests.Performance.IO,TcpHorizontalScaleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\IO\TcpHorizontalScaleSpec.cs,Setup,The length of the statement  "            var client = _system.ActorOf(Props.Create(() => new TestClient(TestEndPoint' _outboundThroughputCounter' _errorCounter' _bytes))); " is 130.
Long Statement,Akka.Tests.Performance.IO,TcpSingleConnectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\IO\TcpSingleConnectionSpec.cs,Setup,The length of the statement  "            client = system.ActorOf(Props.Create(() => new TestClient(TestEndpoint' outboundThroughputCounter' resetEvent' completion))); " is 125.
Magic Number,Akka.Tests.Performance.Actor,ActorMemoryFootprintSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorMemoryFootprintSpec.cs,Teardown,The following statement contains a magic number: _system.Terminate().Wait(TimeSpan.FromSeconds(2.0d));
Magic Number,Akka.Tests.Performance.Actor,ActorPathSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorPathSpec.cs,Memory_footprint,The following statement contains a magic number: var actorPaths = new ActorPath[100000];
Magic Number,Akka.Tests.Performance.Actor,ActorPathSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorPathSpec.cs,Memory_footprint,The following statement contains a magic number: i < 100000
Magic Number,Akka.Tests.Performance.Actor,ActorSelectionSpecs,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorSelectionSpecs.cs,ActorSelection_ResolveOne_throughput,The following statement contains a magic number: var actorRef= System.ActorSelection(_receiverActorPath).ResolveOne(TimeSpan.FromSeconds(2)).Result;
Magic Number,Akka.Tests.Performance.Actor,ActorSelectionSpecs,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorSelectionSpecs.cs,ActorSelection_ResolveOne_stress_test,The following statement contains a magic number: var actorRef2 = System.ActorSelection(actorRef.Path).ResolveOne(TimeSpan.FromSeconds(2)).Result;
Magic Number,Akka.Tests.Performance.Actor,ActorThroughputSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorThroughputSpec.cs,Setup,The following statement contains a magic number: _actorBasePatternMatchActorRef = System.ActorOf(BenchmarkActorBasePatternMatchActor.Props(_mailboxThroughput' MailboxMessageCount * 3' _resetEvent));
Magic Number,Akka.Tests.Performance.Actor,ActorThroughputSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorThroughputSpec.cs,Setup,The following statement contains a magic number: _untypedActorRef = System.ActorOf(BenchmarkUntypedActor.Props(_mailboxThroughput' MailboxMessageCount * 3' _resetEvent));
Magic Number,Akka.Tests.Performance.Actor,ActorThroughputSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorThroughputSpec.cs,Setup,The following statement contains a magic number: _receiveActorRef = System.ActorOf(BenchmarkReceiveActor.Props(_mailboxThroughput' MailboxMessageCount * 3' _resetEvent));
Magic Number,Akka.Tests.Performance.Actor,ActorThroughputSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorThroughputSpec.cs,Cleanup,The following statement contains a magic number: System.Terminate().Wait(TimeSpan.FromSeconds(2.0d));
Magic Number,Akka.Tests.Performance.Actor,BenchmarkActorBasePatternMatchActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorThroughputSpec.cs,Receive,The following statement contains a magic number: return message.Match()                      .With<string>(IncrementAndCheck)                      .With<int>(IncrementAndCheck)                      .With<SimpleData>(simpleDataMessage =>                      {                          if (simpleDataMessage.Age > 20)                          {                              IncrementAndCheck();                          }                          else                          {                              IncrementAndCheck();                          }                      })                      .Default(o => IncrementAndCheck())                      .WasHandled;
Magic Number,Akka.Tests.Performance.Actor,BenchmarkReceiveActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorThroughputSpec.cs,BenchmarkReceiveActor,The following statement contains a magic number: Receive<SimpleData>(simpleDataMessage => simpleDataMessage.Age > 20' simpleDataMessage => IncrementAndCheck());
Magic Number,Akka.Tests.Performance.Actor,BenchmarkReceiveActor,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\ActorThroughputSpec.cs,BenchmarkReceiveActor,The following statement contains a magic number: Receive<SimpleData>(simpleDataMessage => simpleDataMessage.Age <= 20' simpleDataMessage => IncrementAndCheck());
Magic Number,Akka.Tests.Performance.Actor,AddressSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\AddressSpec.cs,Memory_footprint,The following statement contains a magic number: var actorPaths = new Address[100000];
Magic Number,Akka.Tests.Performance.Actor,AddressSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\AddressSpec.cs,Memory_footprint,The following statement contains a magic number: actorPaths[i] = new Address("akka"' "foo"' "localhost"' 9091);
Magic Number,Akka.Tests.Performance.Actor,AddressSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\AddressSpec.cs,Memory_footprint,The following statement contains a magic number: i < 100000
Magic Number,Akka.Tests.Performance.Actor.Pattern,AskSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\Pattern\AskSpec.cs,TearDown,The following statement contains a magic number: var shutdownTimeout = TimeSpan.FromSeconds(5);
Magic Number,Akka.Tests.Performance.Actor.Scheduler,DefaultSchedulerPerformanceTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\Scheduler\DefaultSchedulerPerformanceTests.cs,SetUp,The following statement contains a magic number: _eventLoop = () =>              {                  while (!_cancelSignal.IsCancellationRequested)                  {                      for (var i = 0; i < SchedulePerBatch; i++)                      {                          _actorSystem.Scheduler.Advanced.ScheduleRepeatedly(0' 10' _counterIncrement' _cancelSignal);                          _jobsScheduled.Increment();                      }                      Thread.Sleep(40); // wait a bit' then keep going                  }              };
Magic Number,Akka.Tests.Performance.Actor.Scheduler,DefaultSchedulerPerformanceTests,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Actor\Scheduler\DefaultSchedulerPerformanceTests.cs,SetUp,The following statement contains a magic number: _eventLoop = () =>              {                  while (!_cancelSignal.IsCancellationRequested)                  {                      for (var i = 0; i < SchedulePerBatch; i++)                      {                          _actorSystem.Scheduler.Advanced.ScheduleRepeatedly(0' 10' _counterIncrement' _cancelSignal);                          _jobsScheduled.Increment();                      }                      Thread.Sleep(40); // wait a bit' then keep going                  }              };
Magic Number,Akka.Tests.Performance.Dispatch,WarmDispatcherThroughputSpecBase,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Dispatch\DispatcherThroughputSpecBase.cs,Warmup,The following statement contains a magic number: var warmupCount = 10L;
Magic Number,Akka.Tests.Performance.Dispatch,GetMailboxTypeSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Dispatch\GetMailboxTypeSpec.cs,Teardown,The following statement contains a magic number: _system.Terminate().Wait(TimeSpan.FromSeconds(2.0d));
Magic Number,Akka.Tests.Performance.Dispatch,MailboxBenchmarks,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Dispatch\MailboxBenchmarks.cs,Setup,The following statement contains a magic number: var id = TestActor.Ask<ActorIdentity>(new Identify(null)' TimeSpan.FromSeconds(3)).Result;
Magic Number,Akka.Tests.Performance.IO,TcpHorizontalScaleSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\IO\TcpHorizontalScaleSpec.cs,Tcp_horizontal_scale_test,The following statement contains a magic number: _clients.Count % 50 == 0
Magic Number,Akka.Tests.Performance.IO,TcpInboundOnlySpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\IO\TcpInboundOnlySpec.cs,Setup,The following statement contains a magic number: message = new byte[50];
Magic Number,Akka.Tests.Performance.IO,TcpSingleConnectionSpec,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\IO\TcpSingleConnectionSpec.cs,Setup,The following statement contains a magic number: message = new byte[50];
Magic Number,Akka.Tests.Performance.Util,SerializationBenchmarks,D:\research\architectureSmells\repos\akkadotnet_akka.net\src\core\Akka.Tests.Performance\Util\SerializationBenchmarks.cs,FindSerializerForTypePerf,The following statement contains a magic number: i < 1000000
