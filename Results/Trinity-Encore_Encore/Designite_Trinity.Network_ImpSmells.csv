Implementation smell,Namespace,Class,File,Method,Description
Long Method,Trinity.Network.Connectivity.Sockets,TcpClient,C:\repos\Trinity-Encore_Encore\Trinity.Network\Connectivity\Sockets\TcpClient.cs,OnReceiveHeader,The method has 112 lines of code.
Complex Method,Trinity.Network.Connectivity.Sockets,TcpClient,C:\repos\Trinity-Encore_Encore\Trinity.Network\Connectivity\Sockets\TcpClient.cs,OnReceiveHeader,Cyclomatic complexity of the method is 11
Long Parameter List,Trinity.Network.Connectivity.Sockets,TcpServer,C:\repos\Trinity-Encore_Encore\Trinity.Network\Connectivity\Sockets\TcpServer.cs,TcpServer,The method has 5 parameters. Parameters: propagator' backlog' multipleConnections' nagleAlgo' partialReceives
Long Statement,Trinity.Network,IPAddressRange,C:\repos\Trinity-Encore_Encore\Trinity.Network\IPAddressRange.cs,Equals,The length of the statement  "            return other.Family == Family && other._lowerBoundary.SequenceEqual(_lowerBoundary) && other._upperBoundary.SequenceEqual(_upperBoundary); " is 138.
Complex Conditional,Trinity.Network,IPAddressRange,C:\repos\Trinity-Encore_Encore\Trinity.Network\IPAddressRange.cs,IsInRange,The conditional expression  "(lowerBoundary && currentByte < lowerByte) || (upperBoundary && currentByte > upperByte)"  is complex.
Empty Catch Block,Trinity.Network.Connectivity.Sockets,TcpClient,C:\repos\Trinity-Encore_Encore\Trinity.Network\Connectivity\Sockets\TcpClient.cs,Disconnect,The method has an empty catch block.
Magic Number,Trinity.Network,IPAddressRange,C:\repos\Trinity-Encore_Encore\Trinity.Network\IPAddressRange.cs,Invariant,The following statement contains a magic number: Contract.Invariant(_lowerBoundary.Length >= 4);
Magic Number,Trinity.Network,IPAddressRange,C:\repos\Trinity-Encore_Encore\Trinity.Network\IPAddressRange.cs,Invariant,The following statement contains a magic number: Contract.Invariant(_upperBoundary.Length >= 4);
Magic Number,Trinity.Network,IPAddressRange,C:\repos\Trinity-Encore_Encore\Trinity.Network\IPAddressRange.cs,IPAddressRange,The following statement contains a magic number: Contract.Assume(_lowerBoundary.Length >= 4);
Magic Number,Trinity.Network,IPAddressRange,C:\repos\Trinity-Encore_Encore\Trinity.Network\IPAddressRange.cs,IPAddressRange,The following statement contains a magic number: Contract.Assert(_upperBoundary.Length >= 4);
