Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SecuiredPrint,App,F:\newReposMay17\Esri_developer-support\runtime-net\how-to-submit-async-print-task-with-hybrid-security-settings\SecuiredPrint\App.xaml.cs,Application_Startup,The length of the statement  "		// 1. Allow the app user to authenticate with ArcGIS Online or Portal for ArcGIS then call the set license method with their license info. " is 138.
Long Statement,SecuiredPrint,App,F:\newReposMay17\Esri_developer-support\runtime-net\how-to-submit-async-print-task-with-hybrid-security-settings\SecuiredPrint\App.xaml.cs,Application_Startup,The length of the statement  "		// 2. Call the set license method with a license string obtained from Esri Customer Service or your local Esri distributor. " is 123.
Long Statement,SecuiredPrint,MainWindow,F:\newReposMay17\Esri_developer-support\runtime-net\how-to-submit-async-print-task-with-hybrid-security-settings\SecuiredPrint\MainWindow.xaml.cs,ExportMap_Click,The length of the statement  "		while (result.JobStatus != GPJobStatus.Cancelled && result.JobStatus != GPJobStatus.Deleted && result.JobStatus != GPJobStatus.Succeeded && result.JobStatus != GPJobStatus.TimedOut) { " is 183.
Magic Number,SecuiredPrint,MainWindow,F:\newReposMay17\Esri_developer-support\runtime-net\how-to-submit-async-print-task-with-hybrid-security-settings\SecuiredPrint\MainWindow.xaml.cs,ExportMap_Click,The following statement contains a magic number: try {  	progress.Visibility = Visibility.Visible;  	PrintParameters printParameters = new PrintParameters (MyMapView) {  		ExportOptions = new ExportOptions () {  			Dpi = 96'  			OutputSize = new Size (MyMapView.ActualWidth' MyMapView.ActualHeight)  		}'  		LayoutTemplate = (string)comboLayout.SelectedItem ?? string.Empty'  		Format = (string)comboFormat.SelectedItem'  	};  	var result = await _printTask.SubmitPrintJobAsync (printParameters);  	while (result.JobStatus != GPJobStatus.Cancelled && result.JobStatus != GPJobStatus.Deleted && result.JobStatus != GPJobStatus.Succeeded && result.JobStatus != GPJobStatus.TimedOut) {  		result = await _printTask.CheckPrintJobStatusAsync (result.JobID);  		Console.WriteLine (string.Join (Environment.NewLine' result.Messages.Select (x => x.Description)));  		await Task.Delay (2000);  	}  	if (result.JobStatus == GPJobStatus.Succeeded) {  		MessageBox.Show (result.JobStatus.ToString () + " Job ID:" + result.JobID);  		var outParam = await _printTask.GetPrintJobResultAsync (result.JobID);  		if (outParam != null) {  			Process.Start (outParam.PrintResult.Uri.AbsoluteUri);  		}  	}  } catch (Exception ex) {  	MessageBox.Show (ex.Message' "Sample Error");  } finally {  	progress.Visibility = Visibility.Collapsed;  }  
Magic Number,SecuiredPrint,MainWindow,F:\newReposMay17\Esri_developer-support\runtime-net\how-to-submit-async-print-task-with-hybrid-security-settings\SecuiredPrint\MainWindow.xaml.cs,ExportMap_Click,The following statement contains a magic number: try {  	progress.Visibility = Visibility.Visible;  	PrintParameters printParameters = new PrintParameters (MyMapView) {  		ExportOptions = new ExportOptions () {  			Dpi = 96'  			OutputSize = new Size (MyMapView.ActualWidth' MyMapView.ActualHeight)  		}'  		LayoutTemplate = (string)comboLayout.SelectedItem ?? string.Empty'  		Format = (string)comboFormat.SelectedItem'  	};  	var result = await _printTask.SubmitPrintJobAsync (printParameters);  	while (result.JobStatus != GPJobStatus.Cancelled && result.JobStatus != GPJobStatus.Deleted && result.JobStatus != GPJobStatus.Succeeded && result.JobStatus != GPJobStatus.TimedOut) {  		result = await _printTask.CheckPrintJobStatusAsync (result.JobID);  		Console.WriteLine (string.Join (Environment.NewLine' result.Messages.Select (x => x.Description)));  		await Task.Delay (2000);  	}  	if (result.JobStatus == GPJobStatus.Succeeded) {  		MessageBox.Show (result.JobStatus.ToString () + " Job ID:" + result.JobID);  		var outParam = await _printTask.GetPrintJobResultAsync (result.JobID);  		if (outParam != null) {  			Process.Start (outParam.PrintResult.Uri.AbsoluteUri);  		}  	}  } catch (Exception ex) {  	MessageBox.Show (ex.Message' "Sample Error");  } finally {  	progress.Visibility = Visibility.Collapsed;  }  
Magic Number,SecuiredPrint,MainWindow,F:\newReposMay17\Esri_developer-support\runtime-net\how-to-submit-async-print-task-with-hybrid-security-settings\SecuiredPrint\MainWindow.xaml.cs,ExportMap_Click,The following statement contains a magic number: while (result.JobStatus != GPJobStatus.Cancelled && result.JobStatus != GPJobStatus.Deleted && result.JobStatus != GPJobStatus.Succeeded && result.JobStatus != GPJobStatus.TimedOut) {  	result = await _printTask.CheckPrintJobStatusAsync (result.JobID);  	Console.WriteLine (string.Join (Environment.NewLine' result.Messages.Select (x => x.Description)));  	await Task.Delay (2000);  }  
Magic Number,SecuiredPrint,MainWindow,F:\newReposMay17\Esri_developer-support\runtime-net\how-to-submit-async-print-task-with-hybrid-security-settings\SecuiredPrint\MainWindow.xaml.cs,ExportMap_Click,The following statement contains a magic number: await Task.Delay (2000);  
Magic Number,SecuiredPrint,MainWindow,F:\newReposMay17\Esri_developer-support\runtime-net\how-to-submit-async-print-task-with-hybrid-security-settings\SecuiredPrint\MainWindow.xaml.cs,btnLogin_Click,The following statement contains a magic number: try {  	Credential credential = null;  	try {  		// Showing a new window with login UI (username/password) must occur on the UI thread  		credential = this.Dispatcher.Invoke (new Func<Credential> (() => {  			Credential cred = null;  			var username = loginInfo.UserName;  			var password = loginInfo.Password;  			var domain = "AVWORLD";  			// Create a new network credential using the user input and the URI of the resource  			cred = new ArcGISNetworkCredential () {  				Credentials = new NetworkCredential (username' password' domain)'  				ServiceUri = loginInfo.ServiceUrl  			};  			//}  			// Return the credential  			return cred;  		}));  	} catch (Exception ex) {  		Debug.WriteLine ("Exception: " + ex.Message);  	}  	// Add the credential to the IdentityManager  	IdentityManager.Current.AddCredential (credential);  	//var credentials = await IdentityManager.Current.GenerateCredentialAsync(loginInfo.ServiceUrl'  	//    loginInfo.UserName' loginInfo.Password' loginInfo.RequestInfo.GenerateTokenOptions);  	_loginTCS.TrySetResult (credential);  } catch (Exception ex) {  	loginInfo.ErrorMessage = ex.Message;  	loginInfo.AttemptCount++;  	if (loginInfo.AttemptCount >= 3) {  		_loginTCS.TrySetException (ex);  	}  }  
Magic Number,SecuiredPrint,MainWindow,F:\newReposMay17\Esri_developer-support\runtime-net\how-to-submit-async-print-task-with-hybrid-security-settings\SecuiredPrint\MainWindow.xaml.cs,btnLogin_Click,The following statement contains a magic number: if (loginInfo.AttemptCount >= 3) {  	_loginTCS.TrySetException (ex);  }  
