Implementation smell,Namespace,Class,File,Method,Description
Long Method,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,DownloadManifestEntry,The method has 102 lines of code.
Long Method,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Initialize,The method has 129 lines of code.
Long Method,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The method has 213 lines of code.
Long Method,Launchpad.Launcher.Handlers,ConfigHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\ConfigHandler.cs,Initialize,The method has 162 lines of code.
Complex Method,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,UpdateModule,Cyclomatic complexity of the method is 9
Complex Method,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,DownloadManifestEntry,Cyclomatic complexity of the method is 9
Long Parameter List,Launchpad.Launcher.Handlers.Protocols.Manifest,FTPProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\FTPProtocolHandler.cs,DownloadRemoteFile,The method has 5 parameters. Parameters: url' localPath' totalSize' contentOffset' useAnonymousLogin
Long Parameter List,Launchpad.Launcher.Handlers.Protocols.Manifest,HTTPProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\HTTPProtocolHandler.cs,DownloadRemoteFile,The method has 5 parameters. Parameters: url' localPath' totalSize' contentOffset' useAnonymousLogin
Long Parameter List,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,DownloadRemoteFile,The method has 5 parameters. Parameters: url' localPath' totalSize' contentOffset' useAnonymousLogin
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,FTPProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\FTPProtocolHandler.cs,DoesRemoteFileExist,The length of the statement  "			FtpWebRequest request = CreateFtpWebRequest(remotePath' this.Config.GetRemoteUsername()' this.Config.GetRemotePassword()); " is 122.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,HTTPProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\HTTPProtocolHandler.cs,CanPatch,The length of the statement  "				HttpWebRequest plainRequest = CreateHttpWebRequest(this.Config.GetBaseHTTPUrl()' this.Config.GetRemoteUsername()' this.Config.GetRemotePassword()); " is 147.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,HTTPProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\HTTPProtocolHandler.cs,ReadRemoteFile,The length of the statement  "				Log.Error("Failed to establish a network connection' or the connection was interrupted during the download (NullReferenceException): " + nex.Message); " is 150.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,HTTPProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\HTTPProtocolHandler.cs,DoesRemoteDirectoryOrFileExist,The length of the statement  "			HttpWebRequest request = CreateHttpWebRequest(cleanURL' this.Config.GetRemoteUsername()' this.Config.GetRemotePassword()); " is 122.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,UpdateModule,The length of the statement  "				Log.Error($"No manifest was found when updating the module \"{module}\". The server files may be inaccessible or missing."); " is 124.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,UpdateModule,The length of the statement  "					this.ModuleUpdateProgressArgs.IndicatorLabelMessage = GetUpdateIndicatorLabelMessage(Path.GetFileName(fileEntry.RelativePath)' " is 126.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,VerifyModule,The length of the statement  "				Log.Error($"No manifest was found when verifying the module \"{module}\". The server files may be inaccessible or missing."); " is 125.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,VerifyModule,The length of the statement  "					this.ModuleVerifyProgressArgs.IndicatorLabelMessage = GetVerifyIndicatorLabelMessage(Path.GetFileName(fileEntry.RelativePath)' " is 126.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,VerifyModule,The length of the statement  "						Log.Info($"File \"{Path.GetFileName(fileEntry.RelativePath)}\" failed its integrity check and was queued for redownload."); " is 123.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,VerifyModule,The length of the statement  "					this.ModuleDownloadProgressArgs.IndicatorLabelMessage = GetDownloadIndicatorLabelMessage(Path.GetFileName(fileEntry.RelativePath)' " is 130.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,VerifyModule,The length of the statement  "							Log.Info($"File \"{Path.GetFileName(fileEntry.RelativePath)}\" failed its integrity check again after redownloading. ({i} retries)"); " is 133.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,DownloadModule,The length of the statement  "				Log.Error($"No manifest was found when installing the module \"{module}\". The server files may be inaccessible or missing."); " is 126.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,DownloadModule,The length of the statement  "				this.ModuleDownloadProgressArgs.IndicatorLabelMessage = GetDownloadIndicatorLabelMessage(Path.GetFileName(fileEntry.RelativePath)' " is 130.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,DownloadManifestEntry,The length of the statement  "						Log.Info($"Resuming interrupted file \"{Path.GetFileNameWithoutExtension(fileEntry.RelativePath)}\" at byte {fileInfo.Length}."); " is 129.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,DownloadManifestEntry,The length of the statement  "						Log.Info($"Restarting interrupted file \"{Path.GetFileNameWithoutExtension(fileEntry.RelativePath)}\": File bigger than expected."); " is 132.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,GetRemoteGameVersion,The length of the statement  "			string remoteVersionPath = $"{this.Config.GetBaseProtocolURL()}/game/{this.Config.GetSystemTarget()}/bin/GameVersion.txt"; " is 122.
Long Statement,Launchpad.Launcher.Handlers.Protocols.Manifest,ManifestBasedProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\ManifestBasedProtocolHandler.cs,GetDownloadIndicatorLabelMessage,The length of the statement  "			return LocalizationCatalog.GetString("Downloading file {0} ({1} of {2})"' currentFilename' downloadedFiles' totalFiles); " is 120.
Long Statement,Launchpad.Launcher,Program,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Program.cs,Main,The length of the statement  "			Log.Info($"Current platform: {ConfigHandler.GetCurrentPlatform()} ({(Environment.Is64BitOperatingSystem ? "x64" : "x86")})"); " is 125.
Long Statement,Launchpad.Launcher.Handlers,ConfigHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\ConfigHandler.cs,GetCurrentPlatform,The length of the statement  "						if (Directory.Exists("/Applications") && Directory.Exists("/System") && Directory.Exists("/Users") && Directory.Exists("/Volumes")) " is 131.
Complex Conditional,Launchpad.Launcher.Handlers,ConfigHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\ConfigHandler.cs,GetCurrentPlatform,The conditional expression  "Directory.Exists("/Applications") && Directory.Exists("/System") && Directory.Exists("/Users") && Directory.Exists("/Volumes")"  is complex.
Magic Number,Launchpad.Launcher.Handlers.Protocols.Manifest,FTPProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\FTPProtocolHandler.cs,CanPatch,The following statement contains a magic number: try  			{  				FtpWebRequest plainRequest = CreateFtpWebRequest(url' username' password);    				if (plainRequest == null)  				{  					return false;  				}    				plainRequest.Method = WebRequestMethods.Ftp.ListDirectoryDetails;  				plainRequest.Timeout = 4000;    				try  				{  					using (FtpWebResponse response = (FtpWebResponse) plainRequest.GetResponse())  					{  						if (response.StatusCode == FtpStatusCode.OpeningData)  						{  							bCanConnectToServer = true;  						}  					}  				}  				catch (WebException wex)  				{  					Log.Warn("Unable to connect to remote patch server (WebException): " + wex.Message);  					bCanConnectToServer = false;  				}  			}  			catch (WebException wex)  			{  				Log.Warn("Unable to connect due a malformed url in the configuration (WebException): " + wex.Message);  				bCanConnectToServer = false;  			}
Magic Number,Launchpad.Launcher.Handlers.Protocols.Manifest,HTTPProtocolHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\Protocols\Manifest\HTTPProtocolHandler.cs,CanPatch,The following statement contains a magic number: try  			{  				HttpWebRequest plainRequest = CreateHttpWebRequest(this.Config.GetBaseHTTPUrl()' this.Config.GetRemoteUsername()' this.Config.GetRemotePassword());    				if (plainRequest == null)  				{  					return false;  				}    				plainRequest.Method = WebRequestMethods.Http.Head;  				plainRequest.Timeout = 4000;    				try  				{  					using (HttpWebResponse response = (HttpWebResponse) plainRequest.GetResponse())  					{  						if (response.StatusCode == HttpStatusCode.OK)  						{  							bCanConnectToServer = true;  						}  					}  				}  				catch (WebException wex)  				{  					Log.Warn("Unable to connect to remote patch server (WebException): " + wex.Message);  					bCanConnectToServer = false;  				}  			}  			catch (WebException wex)  			{  				Log.Warn("Unable to connect due a malformed url in the configuration (WebException): " + wex.Message);  				bCanConnectToServer = false;  			}
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Initialize,The following statement contains a magic number: if (!this.Checks.CanPatch())  			{  				MessageDialog dialog = new MessageDialog  				(  					this'  					DialogFlags.Modal'  					MessageType.Warning'  					ButtonsType.Ok'  					LocalizationCatalog.GetString("Failed to connect to the patch server. Please check your settings.")  				);    				dialog.Run();    				dialog.Destroy();  				this.IndicatorLabel.Text = LocalizationCatalog.GetString("Could not connect to server.");  				this.RepairGameAction.Sensitive = false;  			}  			else  			{  				// TODO: Load this asynchronously  				// Load the game banner (if there is one)  				if (this.Config.GetPatchProtocol().CanProvideBanner())  				{  					using (MemoryStream bannerStream = new MemoryStream())  					{  						// Fetch the banner from the server  						this.Config.GetPatchProtocol().GetBanner().Save(bannerStream' ImageFormat.Png);    						// Load the image into a pixel buffer  						bannerStream.Position = 0;  						this.GameBanner.Pixbuf = new Pixbuf(bannerStream);  					}  				}    				// If we can connect' proceed with the rest of our checks.  				if (ChecksHandler.IsInitialStartup())  				{  					Log.Info("This instance is the first start of the application in this folder.");    					MessageDialog shouldInstallHereDialog = new MessageDialog  					(  						this'  						DialogFlags.Modal'  						MessageType.Question'  						ButtonsType.OkCancel'  						LocalizationCatalog.GetString  						(  							"This appears to be the first time you're starting the launcher.\n" +  							"Is this the location where you would like to install the game?"  						) + $"\n\n{ConfigHandler.GetLocalDir()}"  					);    					if (shouldInstallHereDialog.Run() == (int) ResponseType.Ok)  					{  						shouldInstallHereDialog.Destroy();    						// Yes' install here  						Log.Info("User accepted installation in this directory. Installing in current directory.");    						ConfigHandler.CreateLauncherCookie();  					}  					else  					{  						shouldInstallHereDialog.Destroy();    						// No' don't install here  						Log.Info("User declined installation in this directory. Exiting...");  						Environment.Exit(2);  					}  				}    				if (this.Config.ShouldAllowAnonymousStats())  				{  					StatsHandler.SendUsageStats();  				}    				// Load the changelog. Try a direct URL first' and a protocol-specific  				// implementation after.  				if (LauncherHandler.CanAccessStandardChangelog())  				{  					this.Browser.Navigate(this.Config.GetChangelogURL());  				}  				else  				{  					this.Launcher.LoadFallbackChangelog();  				}    				// If the launcher does not need an update at this point' we can continue checks for the game  				if (!this.Checks.IsLauncherOutdated())  				{  					if (!this.Checks.IsPlatformAvailable(this.Config.GetSystemTarget()))  					{  						Log.Info($"The server does not provide files for platform \"{ConfigHandler.GetCurrentPlatform()}\". " +  						         "A .provides file must be present in the platforms' root directory.");    						SetLauncherMode(ELauncherMode.Inactive' false);  					}  					else  					{  						if (!this.Checks.IsGameInstalled())  						{  							// If the game is not installed' offer to install it  							Log.Info("The game has not yet been installed.");  							SetLauncherMode(ELauncherMode.Install' false);    							// Since the game has not yet been installed' disallow manual repairs  							this.RepairGameAction.Sensitive = false;    							// and reinstalls  							this.ReinstallGameAction.Sensitive = false;  						}  						else  						{  							// If the game is installed (which it should be at this point)' check if it needs to be updated  							if (this.Checks.IsGameOutdated())  							{  								// If it does' offer to update it  								Log.Info($"The game is outdated. \n\tLocal version: {this.Config.GetLocalGameVersion()}");  								SetLauncherMode(ELauncherMode.Update' false);  							}  							else  							{  								// All checks passed' so we can offer to launch the game.  								Log.Info("All checks passed. Game can be launched.");  								SetLauncherMode(ELauncherMode.Launch' false);  							}  						}  					}  				}  				else  				{  					// The launcher was outdated.  					Log.Info($"The launcher is outdated. \n\tLocal version: {this.Config.GetLocalLauncherVersion()}");  					SetLauncherMode(ELauncherMode.Update' false);  				}  			}
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.WindowPosition = (WindowPosition)4;
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.DefaultWidth = 745;
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.DefaultHeight = 415;
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.VBox1 = new VBox  			{  				Name = "VBox1"'  				Spacing = 6  			};
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.HBox2 = new HBox  			{  				Name = "HBox2"'  				Spacing = 6'  				BorderWidth = 4  			};
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.HBox2 = new HBox  			{  				Name = "HBox2"'  				Spacing = 6'  				BorderWidth = 4  			};
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.BrowserContainer = new VBox  			{  				Name = "browserContainer"'  				Spacing = 6  			};
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.Alignment2 = new Alignment(0.5F' 0.5F' 1F' 1F)  			{  				WidthRequest = 310'  				Name = "alignment2"  			};
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.GameBanner = new Image  			{  				WidthRequest = 450'  				HeightRequest = 300'  				Name = "gameBanner"'  				Pixbuf = Pixbuf.LoadFromResource("Launchpad.Launcher.Resources.RocketIcon.ico")  			};
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.GameBanner = new Image  			{  				WidthRequest = 450'  				HeightRequest = 300'  				Name = "gameBanner"'  				Pixbuf = Pixbuf.LoadFromResource("Launchpad.Launcher.Resources.RocketIcon.ico")  			};
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.Alignment1 = new Alignment(0.5F' 0.5F' 1F' 1F)  			{  				Name = "alignment1"'  				LeftPadding = 6  			};
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: w10.Position = 2;
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.HBox3 = new HBox  			{  				Name = "HBox3"'  				Spacing = 6'  				BorderWidth = 4  			};
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.HBox3 = new HBox  			{  				Name = "HBox3"'  				Spacing = 6'  				BorderWidth = 4  			};
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.HBox4 = new HBox  			{  				Name = "HBox4"'  				Spacing = 6  			};
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: this.Alignment3 = new Alignment(0.5F' 0.5F' 1F' 1F)  			{  				WidthRequest = 100'  				Name = "alignment3"  			};
Magic Number,Launchpad.Launcher.Interface,MainWindow,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Interface\MainWindow.cs,Build,The following statement contains a magic number: w16.Position = 3;
Magic Number,Launchpad.Launcher.Handlers,GameHandler,C:\repos\Nihlus_Launchpad\Launchpad.Launcher\Handlers\GameHandler.cs,LaunchGame,The following statement contains a magic number: try  			{  				// Do not move the argument assignment inside the gameStartInfo initializer.  				// It causes a TargetInvocationException crash through black magic.  				string gameArguments = string.Join(" "' ConfigHandler.GetGameArguments());  				ProcessStartInfo gameStartInfo = new ProcessStartInfo  				{  					UseShellExecute = false'  					FileName = Config.GetGameExecutable()'  					Arguments = gameArguments  				};    				this.GameExitArgs.GameName = Config.GetGameName();    				Log.Info($"Launching game. \n\tExecutable path: {gameStartInfo.FileName}");    				Process gameProcess = new Process  				{  					StartInfo = gameStartInfo'  					EnableRaisingEvents = true  				};    				gameProcess.Exited += delegate  				{  					if (gameProcess.ExitCode != 0)  					{  						Log.Info($"The game exited with an exit code of {gameProcess.ExitCode}. " +  						         "There may have been issues during runtime' or the game may not have started at all.");  					}  					this.GameExitArgs.ExitCode = gameProcess.ExitCode;  					OnGameExited();    					// Manual disposing  					gameProcess.Dispose();  				};    				// Make sure the game executable is flagged as such on Unix  				if (SystemInformation.IsRunningOnUnix())  				{  					Process.Start("chmod"' $"+x {Config.GetGameExecutable()}");  				}    				gameProcess.Start();  			}  			catch (FileNotFoundException fex)  			{  				Log.Warn($"Game launch failed (FileNotFoundException): {fex.Message}");  				Log.Warn("If the game executable is there' try overriding the executable name in the configuration file.");    				this.GameExitArgs.ExitCode = 2;  				OnGameLaunchFailed();  			}  			catch (IOException ioex)  			{  				Log.Warn($"Game launch failed (IOException): {ioex.Message}");  				this.GameExitArgs.ExitCode = 1;    				OnGameLaunchFailed();  			}
