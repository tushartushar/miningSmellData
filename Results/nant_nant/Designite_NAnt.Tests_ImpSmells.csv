Implementation smell,Namespace,Class,File,Method,Description
Long Method,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestRelationOperators,The method has 254 lines of code.
Long Method,Tests.NAnt.Core.Tasks,DeleteTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\DeleteTest.cs,Test_DeleteFileSet4,The method has 109 lines of code.
Long Method,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,File_Message_Whitespace,The method has 112 lines of code.
Long Method,Tests.NAnt.DotNet.Tasks,CscTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\CscTaskTest.cs,PerformDependentResxTests,The method has 130 lines of code.
Long Method,Tests.NAnt.DotNet.Tasks,VbcTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\VbcTaskTest.cs,PerformDependentResxTests,The method has 130 lines of code.
Long Method,Tests.NAnt.VSNet.Tasks,VCProjectExcludeTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.VSNet\Tasks\VCProjectTest.cs,SetUp,The method has 108 lines of code.
Long Parameter List,Tests.NAnt.VSNet.Tasks,SolutionTestBase,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.VSNet\Tasks\SolutionTestBase.cs,CheckoutFiles,The method has 5 parameters. Parameters: cvsroot' module' destination' password' date
Long Identifier,Tests.NAnt.Core.Tasks,StyleTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\StyleTaskTest.cs,,The length of the parameter _xslPassthroughSrcFileNameFull is 30.
Long Statement,Tests.NAnt.Console,NAntTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Console\NAntTest.cs,Test_BuildFileOption,The length of the statement  "                    Assert.IsTrue(0 == ConsoleDriver.Main(new string[] {@"-buildfile:" + build1FileName})' "Using absolute filepath failed");" is 121.
Long Statement,Tests.NAnt.Console,NAntTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Console\NAntTest.cs,Test_BuildFileOption,The length of the statement  "                    Assert.IsTrue(0 == ConsoleDriver.Main(new string[] {string.Format("-buildfile:.{0}{1}"' Path.DirectorySeparatorChar' filename)})' "Using relative filepath failed #1");" is 167.
Long Statement,Tests.NAnt.Console,NAntTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Console\NAntTest.cs,Test_BuildFileOption,The length of the statement  "                    Assert.IsTrue(0 == ConsoleDriver.Main(new string[] {string.Format("-buildfile:..{0}foo{0}{1}"' Path.DirectorySeparatorChar' filename)})' "Using relative filepath failed #2");" is 174.
Long Statement,Tests.NAnt.Console,NAntTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Console\NAntTest.cs,Test_DefineProperty,The length of the statement  "            Assert.IsTrue(match.Success' "Property 'project.name' appears to have been overridden by <property> task." + Environment.NewLine + result);" is 139.
Long Statement,Tests.NAnt.Console,NAntTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Console\NAntTest.cs,DoTestShowProjectHelp,The length of the statement  "            string expression = @"Default Target:[\s]*(?<default>build)\s*compiles the source code[\s]*Main Targets:[\s]*(?<main1>build)\s*compiles the source code[\s]*(?<main2>clean)\s*cleans build directory[\s]*(?<main3>test)\s*run the program[\s]*Sub Targets:[\s]*(?<subtarget1>init)";" is 276.
Long Statement,Tests.NAnt.Core,DirectoryScannerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\DirectoryScannerTest.cs,Test_WildcardMatching4,The length of the statement  "            if (!_scanner.BaseDirectory.FullName.EndsWith("/") &&  !_scanner.BaseDirectory.FullName.EndsWith(Path.DirectorySeparatorChar.ToString(CultureInfo.InvariantCulture))) {" is 167.
Long Statement,Tests.NAnt.Core,ExceptionTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExceptionTest.cs,CheckPublicConstructor,The length of the statement  "            ConstructorInfo ci = t.GetConstructor(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance' null' parameters' null);" is 132.
Long Statement,Tests.NAnt.Core,ExceptionTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExceptionTest.cs,CheckProtectedConstructor,The length of the statement  "            ConstructorInfo ci = t.GetConstructor(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance' null' parameters' null);" is 132.
Long Statement,Tests.NAnt.Core,ExceptionTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExceptionTest.cs,CheckPrivateConstructor,The length of the statement  "            ConstructorInfo ci = t.GetConstructor(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance' null' parameters' null);" is 132.
Long Statement,Tests.NAnt.Core,ExceptionTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExceptionTest.cs,CheckException,The length of the statement  "            FieldInfo[] fields = t.GetFields(BindingFlags.DeclaredOnly | BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);" is 131.
Long Statement,Tests.NAnt.Core,ExceptionTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExceptionTest.cs,CheckException,The length of the statement  "                //Assert.IsTrue(t.GetProperty("Message"' BindingFlags.DeclaredOnly | BindingFlags.Public | BindingFlags.Instance) != null' t.Name + " does not override the Message property.");" is 176.
Long Statement,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,AssertFailure,The length of the statement  "                Assert.Fail("Expected BuildException while evaluating ${" + expression + "}' nothing was thrown. The returned value was " + value);" is 131.
Long Statement,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,AssertFailure,The length of the statement  "                _project.Log(Level.Debug' "Got expected failure on ${" + expression + "}: " + ((ex.InnerException != null) ? ex.InnerException.Message : ""));" is 142.
Long Statement,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,AssertFailure,The length of the statement  "                Assert.Fail("Expected BuildException while evaluating ${" + expression + "}' but " + ex.GetType().FullName + " was thrown.");" is 125.
Long Statement,Tests.NAnt.Core,ProjectTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ProjectTest.cs,Test_Initialization_FSBuildFile,The length of the statement  "            Assert.AreEqual("The value is " + Boolean.TrueString + "."' p.ExpandProperties("The value is ${task::exists('fail')}."' null));" is 127.
Long Statement,Tests.NAnt.Core,ProjectTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ProjectTest.cs,Test_Initialization_DOMBuildFile,The length of the statement  "            Assert.AreEqual("The value is " + Boolean.TrueString + "."' p.ExpandProperties("The value is ${task::exists('fail')}."' null));" is 127.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Normal,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Target1")' "Target1 should have executed once." + Environment.NewLine + result);" is 133.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Normal,The length of the statement  "            Assert.AreEqual(0' listener.GetTargetExecutionCount("Target2")' "Target2 should not have executed." + Environment.NewLine + result);" is 132.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Normal,The length of the statement  "            Assert.AreEqual(0' listener.GetTargetExecutionCount("Target3")' "Target3 should not have executed." + Environment.NewLine + result);" is 132.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_If,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Target1")' "Target1 should have executed once." + Environment.NewLine + result);" is 133.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_If,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Target2")' "Target2 should have executed once." + Environment.NewLine + result);" is 133.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_If,The length of the statement  "            Assert.AreEqual(0' listener.GetTargetExecutionCount("Target3")' "Target3 should not have executed." + Environment.NewLine + result);" is 132.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Unless,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Target1")' "Target1 should have executed once." + Environment.NewLine + result);" is 133.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Unless,The length of the statement  "            Assert.AreEqual(0' listener.GetTargetExecutionCount("Target2")' "Target2 should not have executed." + Environment.NewLine + result);" is 132.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Unless,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Target3")' "Target3 should have executed once." + Environment.NewLine + result);" is 133.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Depends,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Target1")' "Target1 should have executed once." + Environment.NewLine + result);" is 133.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Depends,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Target2")' "Target2 should have executed once." + Environment.NewLine + result);" is 133.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Depends,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Target3")' "Target3 should have executed once." + Environment.NewLine + result);" is 133.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Depends2,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Target1")' "Target1 should have executed once." + Environment.NewLine + result);" is 133.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Depends2,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Target2")' "Target2 should have executed once." + Environment.NewLine + result);" is 133.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Depends2,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Target3")' "Target3 should have executed once." + Environment.NewLine + result);" is 133.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Depends3,The length of the statement  "            Assert.AreEqual(0' listener.GetTargetExecutionCount("Target1")' "Target1 should not have executed." + Environment.NewLine + result);" is 132.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Depends3,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Target2")' "Target2 should have executed once." + Environment.NewLine + result);" is 133.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Depends3,The length of the statement  "            Assert.AreEqual(0' listener.GetTargetExecutionCount("Target3")' "Target3 should not have executed." + Environment.NewLine + result);" is 132.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Wild,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("WildTarget")' "WildTarget should have executed once." + Environment.NewLine + result);" is 139.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_Wild,The length of the statement  "            Assert.AreEqual(0' listener.GetTargetExecutionCount("Target")' "Target should not have executed." + Environment.NewLine + result);" is 130.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_CommandLineTargets,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Init")' "'Init' target should have executed once." + Environment.NewLine + result);" is 136.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_CommandLineTargets,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Release")' "'Release' target should have executed once." + Environment.NewLine + result);" is 142.
Long Statement,Tests.NAnt.Core,TargetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TargetTest.cs,Test_CommandLineTargets,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("Build")' "'Build' target should have executed once." + Environment.NewLine + result);" is 138.
Long Statement,Tests.NAnt.Core,TaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TaskTest.cs,Test_Verbose,The length of the statement  "            Assert.IsTrue(result.IndexOf("Verbose message") != -1' "Verbose message should have been displayed." + Environment.NewLine + result);" is 133.
Long Statement,Tests.NAnt.Core,TaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TaskTest.cs,Test_FailOnError,The length of the statement  "            string result = RunBuild(FormatBuildFile("required=\"ok\" requirednotempty=\"ok\" fail=\"true\" failonerror=\"false\""));" is 121.
Long Statement,Tests.NAnt.Core,TaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TaskTest.cs,Test_NoFailOnError,The length of the statement  "            string result = RunBuild(FormatBuildFile("required=\"ok\" requirednotempty=\"ok\" fail=\"false\" failonerror=\"false\""));" is 122.
Long Statement,Tests.NAnt.Core,TaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TaskTest.cs,Test_If_False,The length of the statement  "            Assert.IsTrue(result.IndexOf("TestTask executed") == -1' "Task should not have executed." + Environment.NewLine + result);" is 122.
Long Statement,Tests.NAnt.Core,TaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TaskTest.cs,Test_Unless_True,The length of the statement  "            Assert.IsTrue(result.IndexOf("TestTask executed") == -1' "Task should not have executed." + Environment.NewLine + result);" is 122.
Long Statement,Tests.NAnt.Core,TaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\TaskTest.cs,Test_Mixture,The length of the statement  "            string result = RunBuild(FormatBuildFile("required=\"ok\" requirednotempty=\"ok\" verbose=\"true\" if=\"true\" unless=\"false\""));" is 131.
Long Statement,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Test_NewestFile,The length of the statement  "            Assert.IsTrue(f1.FullName == newestfile.FullName' "Most Recent File should be '{0}'' but was '{1}'"' f1.Name' newestfile.Name);" is 127.
Long Statement,Tests.NAnt.Core.Filters,ExpandPropertiesTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Filters\ExpandPropertiesTest.cs,MaxSafeExpressionTest,The length of the statement  "            base.FilterTest(@"<" + _tagName + @" />"' GetString(4090) + GetStringExpression(2048)' GetString(4090) + GetString(2048 - _minStringExpressionLength));" is 151.
Long Statement,Tests.NAnt.Core.Filters,ReplaceTokensTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Filters\ReplaceTokensTest.cs,InstantiationTest,The length of the statement  "            base.FilterTest(@"<" + _tagName + @" endtoken=""@""><token key=""FALA"" value=""falalalalalalalala"" /></" + _tagName + @">"' " "' " ");" is 136.
Long Statement,Tests.NAnt.Core.Filters,ReplaceTokensTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Filters\ReplaceTokensTest.cs,EmptyFileTest,The length of the statement  "            base.FilterTest(@"<" + _tagName + @" endtoken=""@""><token key=""FALA"" value=""falalalalalalalala"" /></" + _tagName + @">"' ""' "");" is 134.
Long Statement,Tests.NAnt.Core.Filters,ReplaceTokensTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Filters\ReplaceTokensTest.cs,ComplexTest,The length of the statement  "                        @@13 May 200413 May 200413 May 200413 May 200413 May 200413 May 200413 May 2004   @ @ @ 13 May 200413 May 200413 May 200413 May 200413 May 200413 May 200413 May 200413 May 200413 May 200413 May 2004" is 198.
Long Statement,Tests.NAnt.Core.Filters,ReplaceTokensTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Filters\ReplaceTokensTest.cs,ComplexTest,The length of the statement  "                        @@@DATE^@DATE^^DATE@13 May 2004^DATE@@DATE^13 May 2004   @ @ @ #@DATE^13 May 2004^DATE@^DATE^13 May 200413 May 200413 May 200413 May 200413 May 200413 May 2004" is 159.
Long Statement,Tests.NAnt.Core.Filters,ReplaceTokensTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Filters\ReplaceTokensTest.cs,ComplexTest1,The length of the statement  "                            @@13 May 200413 May 2004^DATE@@DATE@^DATE@13 May 2004@DATE@   @ @ @ #13 May 2004@DATE@^DATE@^DATE^@DATE@@DATE@@DATE@@DATE@@DATE@@DATE@" is 134.
Long Statement,Tests.NAnt.Core.Filters,ReplaceTokensTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Filters\ReplaceTokensTest.cs,ComplexTestCase,The length of the statement  "                            @@13 May 200413 May 2004^DATE@@DATE@^DATE@13 May 2004@DATE@   @ @ @ #13 May 2004@DATE@^DATE@^DATE^@DATE@@DATE@@DATE@@DATE@@DATE@@DATE@" is 134.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_Archive,The length of the statement  "                Assert.IsTrue((File.GetAttributes(_tempFileName) & FileAttributes.Archive) == 0' _tempFileName + " should not have Archive file attribute.");" is 141.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_Archive,The length of the statement  "                Assert.IsTrue((File.GetAttributes(_tempFileName) & FileAttributes.Archive) != 0' _tempFileName + " should have Archive file attribute.");" is 137.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_Hidden,The length of the statement  "                Assert.IsTrue((File.GetAttributes(_tempFileName) & FileAttributes.Hidden) == 0' _tempFileName + " should not have Hidden file attribute.");" is 139.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_Hidden,The length of the statement  "                Assert.IsTrue((File.GetAttributes(_tempFileName) & FileAttributes.Hidden) != 0' _tempFileName + " should have Hidden file attribute.");" is 135.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_ReadOnly,The length of the statement  "            Assert.IsTrue((File.GetAttributes(_tempFileName) & FileAttributes.ReadOnly) == 0' _tempFileName + " should not have ReadOnly file attribute.");" is 143.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_ReadOnly,The length of the statement  "            Assert.IsTrue((File.GetAttributes(_tempFileName) & FileAttributes.ReadOnly) != 0' _tempFileName + " should have ReadOnly file attribute.");" is 139.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_System,The length of the statement  "                Assert.IsTrue((File.GetAttributes(_tempFileName) & FileAttributes.System) == 0' _tempFileName + " should not have System file attribute.");" is 139.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_System,The length of the statement  "                Assert.IsTrue((File.GetAttributes(_tempFileName) & FileAttributes.System) != 0' _tempFileName + " should have System file attribute.");" is 135.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_Multiple,The length of the statement  "            Assert.IsTrue((File.GetAttributes(testFileName) & FileAttributes.ReadOnly) == 0' testFileName + " should not have ReadOnly file attribute.");" is 141.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_Multiple,The length of the statement  "            string result = RunBuild(FormatBuildFile("verbose='true' readonly='true'"' "<fileset basedir='" + TempDirName + "'><include name='**/*.txt'/></fileset>"));" is 155.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_Multiple,The length of the statement  "            Assert.IsTrue((File.GetAttributes(testFileName) & FileAttributes.ReadOnly) != 0' testFileName + " should have ReadOnly file attribute.");" is 137.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_Multiple,The length of the statement  "            Assert.IsTrue(result.IndexOf("myfile8.txt") != 0' "Build output should include names of all files changed." + Environment.NewLine + result);" is 140.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_Multiple,The length of the statement  "            Assert.IsTrue(result.IndexOf("11 files") != 0' "Build output should include count of all files changed." + Environment.NewLine + result);" is 137.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_Multiple,The length of the statement  "            Assert.IsTrue(result.IndexOf("ReadOnly") != 0' "Build output should include file attributes set." + Environment.NewLine + result);" is 130.
Long Statement,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_Multiple,The length of the statement  "            Assert.IsTrue(result.IndexOf("myfile.txt") != 0' "Build output should name specified in file attribute." + Environment.NewLine + result);" is 137.
Long Statement,Tests.NAnt.Core.Tasks,CallTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CallTest.cs,Test_Call,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("one")' "'one' target was not called." + Environment.NewLine + result);" is 123.
Long Statement,Tests.NAnt.Core.Tasks,CallTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CallTest.cs,Test_CallDependencies,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("one")' "'one' target was not called." + Environment.NewLine + result);" is 123.
Long Statement,Tests.NAnt.Core.Tasks,CallTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CallTest.cs,Test_CallDependencies,The length of the statement  "            Assert.AreEqual(1' listener.GetTargetExecutionCount("two")' "'two' target was not called." + Environment.NewLine + result);" is 123.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Only_Directory,The length of the statement  "            Assert.IsFalse(File.Exists(GetPath(dest'tempDir1'tempDir2'tempFile3))' "File should not have been created:" + tempFile3);" is 121.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Only_Directory,The length of the statement  "            Assert.IsFalse(File.Exists(GetPath(dest'tempDir1'tempDir3'tempDir4'tempFile4))' "File should not have been created:" + tempFile4);" is 130.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Only_Directory,The length of the statement  "            Assert.IsFalse(File.Exists(GetPath(dest'tempDir1'tempDir3'tempFile5))' "File should not have been created:" + tempFile5);" is 121.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Only_Directory,The length of the statement  "            Assert.IsFalse(File.Exists(GetPath(dest'tempDir1'tempDir3'tempFile6))' "File should not have been created:" + tempFile6);" is 121.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Only_Directory,The length of the statement  "            Assert.IsFalse(File.Exists(GetPath(dest'tempDir1'tempDir3'tempFile7))' "File should not have been created:" + tempFile7);" is 121.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Only_Directory,The length of the statement  "            Assert.IsFalse(Directory.Exists(GetPath(dest'tempDir1'tempDir3'tempDir4))' "Dir should not have been created:" + tempDir4);" is 123.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Only_SubDirectory,The length of the statement  "            Assert.IsFalse(File.Exists(GetPath(dest'tempDir1'tempDir2'tempFile3))' "File should not have been created:" + tempFile3);" is 121.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Only_SubDirectory,The length of the statement  "            Assert.IsTrue(File.Exists(GetPath(dest'tempDir1'tempDir3'tempDir4'tempFile4))' "File should have been created:" + tempFile4);" is 125.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Unspecified_Fileset_Basedir,The length of the statement  "            Assert.IsFalse(File.Exists(GetPath(dest'tempDir1'tempDir2'tempFile3))' "File should not have been created:" + tempFile3);" is 121.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Unspecified_Fileset_Basedir,The length of the statement  "            Assert.IsFalse(File.Exists(GetPath(dest'tempDir1'tempDir3'tempDir4'tempFile4))' "File should not have been created:" + tempFile4);" is 130.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Unspecified_Fileset_Basedir,The length of the statement  "            Assert.IsFalse(File.Exists(GetPath(dest'tempDir1'tempDir3'tempFile7))' "File should not have been created:" + tempFile7);" is 121.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure,The length of the statement  "            Assert.IsTrue(File.Exists(GetPath(dest'tempDir1'tempDir3'tempDir4'tempFile4))' "File should have been created:" + tempFile4);" is 125.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure_IncludeEmptyDirs,The length of the statement  "            RunBuild(string.Format(CultureInfo.InvariantCulture' _xmlProjectTemplate' dest' tempDir1 + "\\**\\*"' " includeemptydirs='true' "));" is 132.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure_IncludeEmptyDirs,The length of the statement  "            Assert.IsTrue(File.Exists(GetPath(dest'tempDir1'tempDir3'tempDir4'tempFile4))' "File should have been created:" + tempFile4);" is 125.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure_ExcludeEmptyDirs,The length of the statement  "            RunBuild(string.Format(CultureInfo.InvariantCulture' _xmlProjectTemplate' dest' tempDir1 + "\\**\\*"' " includeemptydirs='false' "));" is 133.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure_ExcludeEmptyDirs,The length of the statement  "            Assert.IsTrue(File.Exists(GetPath(dest'tempDir1'tempDir3'tempDir4'tempFile4))' "File should have been created:" + tempFile4);" is 125.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure_Overwrite,The length of the statement  "            Assert.IsTrue(File.Exists(GetPath(dest'tempDir1'tempDir3'tempDir4'tempFile4))' "File should have been created:" + tempFile4);" is 125.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure_Overwrite,The length of the statement  "            Assert.IsTrue(File.Exists(GetPath(dest'tempDir1'tempDir3'tempDir4'tempFile4))' "File should have been created:" + tempFile4);" is 125.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure_Overwrite,The length of the statement  "            Assert.IsTrue((File.GetAttributes(GetPath(dest'tempDir1'tempDir3'tempFile5)) & FileAttributes.ReadOnly) != FileAttributes.ReadOnly);" is 132.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Files_Flatten,The length of the statement  "            RunBuild(String.Format(CultureInfo.InvariantCulture' _xmlProjectTemplate' dest' tempDir1 + "/**/*"' "flatten=\"true\""));" is 121.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure_Directories,The length of the statement  "            Assert.IsTrue(Directory.Exists(GetPath(tempDir1' "destination"))' "Dir should have been created:" + GetPath(tempDir1' "destination"));" is 134.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure_Directories,The length of the statement  "            Assert.IsTrue(Directory.Exists(GetPath(tempDir1' "source"' "test"))' "Dir should have been created:" + GetPath(tempDir1' "source"' "test"));" is 140.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure_Directories,The length of the statement  "            Assert.IsTrue(Directory.Exists(GetPath(tempDir1' "destination"' "source"' "test"))' "Dir should have been created:" + GetPath(tempDir1' "destination"' "source"'"test"));" is 169.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure_Directories_ExcludeEmptyDirs,The length of the statement  "            Assert.IsTrue(Directory.Exists(GetPath(tempDir1' "destination"))' "Dir should have been created:" + GetPath(tempDir1' "destination"));" is 134.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure_Directories_ExcludeEmptyDirs,The length of the statement  "            Assert.IsTrue(Directory.Exists(GetPath(tempDir1' "source"' "test"))' "Dir should have been created:" + GetPath(tempDir1' "source"' "test"));" is 140.
Long Statement,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure_Directories_ExcludeEmptyDirs,The length of the statement  "            Assert.IsFalse(Directory.Exists(GetPath(tempDir1' "destination"' "source"' "test"))' "Dir should not have been created:" + GetPath(tempDir1' "destination"' "source"'"test"));" is 174.
Long Statement,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,Test_EchoIfAttribute,The length of the statement  "                "<project><echo message='This should not output: ${does.not.exist}' if=\"${property::exists(\'does.not.exist\')}\"/></project>";" is 128.
Long Statement,Tests.NAnt.Core.Tasks,ExecTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\ExecTaskTest.cs,Test_ArgOption,The length of the statement  "            Assert.IsTrue(result.IndexOf("Hello' World!") != -1' "Could not find expected text from external program' <arg> element is not working correctly.");" is 148.
Long Statement,Tests.NAnt.Core.Tasks,IfTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\IfTest.cs,Test_IFNot_NewerFilesUptodateFilesWithWildcard,The length of the statement  "            string result = RunBuild(String.Format(CultureInfo.InvariantCulture' _xml' (new FileInfo(_newFile)).Directory.FullName + "\\*"' _oldFile));" is 139.
Long Statement,Tests.NAnt.Core.Tasks,IncludeTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\IncludeTaskTest.cs,Test_Simple,The length of the statement  "            Assert.IsTrue(result.IndexOf("Task executed") != -1' "Global task should have executed." + Environment.NewLine + result);" is 121.
Long Statement,Tests.NAnt.Core.Tasks,IncludeTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\IncludeTaskTest.cs,Test_BuildXmlns,The length of the statement  "            Assert.IsTrue(result.IndexOf("Target executed") != -1' "Include target without xmlns did not execute." + Environment.NewLine + result);" is 135.
Long Statement,Tests.NAnt.Core.Tasks,IncludeTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\IncludeTaskTest.cs,Test_IncludeXmlns,The length of the statement  "            Assert.IsTrue(result.IndexOf("Target executed") != -1' "Include target with xmlns did not execute." + Environment.NewLine + result);" is 132.
Long Statement,Tests.NAnt.Core.Tasks,IncludeTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\IncludeTaskTest.cs,Test_IncludeDuplicateFile,The length of the statement  "            Assert.IsTrue(result.IndexOf("Message from targets") != -1' "Include target with duplicate include did not execute." + Environment.NewLine + result);" is 149.
Long Statement,Tests.NAnt.Core.Tasks,LoadTasksTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\LoadTasksTest.cs,Test_AssemblyNotExists,The length of the statement  "                    Assert.Fail("Wrong type of exception; does not contain words 'does not exist'! " + Environment.NewLine + be.ToString()); " is 120.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_Simple,The length of the statement  "            Assert.IsTrue(result.IndexOf("External build file executed") != -1' "External build should have executed." + Environment.NewLine + result);" is 139.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_Simple,The length of the statement  "            Assert.IsTrue(result.IndexOf("External target executed") == -1' "External target should not have executed." + Environment.NewLine + result);" is 140.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_SingleTarget,The length of the statement  "            Assert.IsTrue(result.IndexOf("External build file executed") != -1' "External build should have executed." + Environment.NewLine + result);" is 139.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_SingleTarget,The length of the statement  "            Assert.IsTrue(result.IndexOf("External target executed") != -1' "External target should have executed." + Environment.NewLine + result);" is 136.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_MultipleTargets,The length of the statement  "            Assert.IsTrue(result.IndexOf("External build file executed") != -1' "External build should have executed." + Environment.NewLine + result);" is 139.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_MultipleTargets,The length of the statement  "            Assert.IsTrue(result.IndexOf("External target executed") != -1' "External target should have executed." + Environment.NewLine + result);" is 136.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_MultipleTargets,The length of the statement  "            Assert.IsTrue(result.IndexOf("Second target executed") != -1' "Second target should have executed." + Environment.NewLine + result);" is 132.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_MultipleTargets,The length of the statement  "            Assert.IsTrue(result.IndexOf("Third target executed") != -1' "Third target should have executed." + Environment.NewLine + result);" is 130.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_PropertyInherit,The length of the statement  "            result = RunBuild(String.Format(CultureInfo.InvariantCulture' _xml' _externalBuildFileName' "inheritall='true'"'"${test}"));" is 124.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_PropertyInherit,The length of the statement  "            Assert.IsTrue(result.IndexOf("testprop=1st") != -1' "Property should be inherited into nant project." + Environment.NewLine + result);" is 134.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_PropertyInherit,The length of the statement  "            Assert.IsTrue(result.IndexOf("testprop=2nd") != -1' "Property should be inherited' and updatable." + Environment.NewLine + result);" is 131.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_PropertyInherit,The length of the statement  "            Assert.IsTrue(result.IndexOf("after=1st") != -1' "Property should not be changed by inherited nant project." + Environment.NewLine + result);" is 141.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_PropertyInherit,The length of the statement  "            result = RunBuild(String.Format(CultureInfo.InvariantCulture' _xml' _externalBuildFileName' "inheritall='false'"'"${test}"));" is 125.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_PropertyInherit,The length of the statement  "            Assert.IsTrue(result.IndexOf("testprop=1st") == -1' "Property should not be inherited into nant project." + Environment.NewLine + result);" is 138.
Long Statement,Tests.NAnt.Core.Tasks,NAntTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\NAntTaskTest.cs,Test_PropertyInherit,The length of the statement  "            Assert.IsTrue(result.IndexOf("after=1st") != -1' "Property defined in called project should not affect the caller." + Environment.NewLine + result);" is 148.
Long Statement,Tests.NAnt.Core.Tasks,PropertyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\PropertyTest.cs,Test_NoOverwriteProperty,The length of the statement  "            Assert.IsTrue(result.IndexOf("I Love me") == -1' "Property value should not have been overwritten." + Environment.NewLine + result);" is 132.
Long Statement,Tests.NAnt.Core.Tasks,PropertyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\PropertyTest.cs,Test_OverwriteProperty,The length of the statement  "            Assert.IsTrue(result.IndexOf("I Love me") != -1' "Property value should have been overwritten." + Environment.NewLine + result);" is 128.
Long Statement,Tests.NAnt.Core.Tasks,PropertyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\PropertyTest.cs,Test_DynamicProperty,The length of the statement  "            Assert.IsTrue(result.IndexOf("I Love you") != -1' "Value of dynamic property should have reflected change in referenced property." + Environment.NewLine + result);" is 163.
Long Statement,Tests.NAnt.Core.Tasks,PropertyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\PropertyTest.cs,Test_ChangeStaticPropertyToDynamic,The length of the statement  "            Assert.IsTrue(result.IndexOf("I Love you") != -1' "Static property should be upgraded to dynamic property." + Environment.NewLine + result);" is 140.
Long Statement,Tests.NAnt.Core.Tasks,PropertyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\PropertyTest.cs,Test_ReadOnlyDynamicProperty,The length of the statement  "            Assert.IsTrue(result.IndexOf("I Love you") != -1' "Value of read-only dynamic property should have reflected change in referenced property." + Environment.NewLine + result);" is 173.
Long Statement,Tests.NAnt.Core.Tasks,StyleTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\StyleTaskTest.cs,Test_OutWithInfiles,The length of the statement  "            RunBuild(String.Format(CultureInfo.InvariantCulture' _xml' _xslSrcFileNameFull' _xmlSrcFileNameFull' Path.Combine(TempDirName' _xmlSrcFileName + "." + _outputFileExtension)));" is 175.
Long Statement,Tests.NAnt.Core.Tasks,StyleTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\StyleTaskTest.cs,Test_XslFileMissing,The length of the statement  "            RunBuild(String.Format(CultureInfo.InvariantCulture' _xml' _xslSrcFileNameFull' _xmlSrcFileNameFull' Path.Combine(TempDirName' _xmlSrcFileName + "." + _outputFileExtension)));" is 175.
Long Statement,Tests.NAnt.Core.Tasks,StyleTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\StyleTaskTest.cs,Test_SourceFileMissing,The length of the statement  "            RunBuild(String.Format(CultureInfo.InvariantCulture' _xml' _xslSrcFileNameFull' _xmlSrcFileNameFull' Path.Combine(TempDirName' _xmlSrcFileName + "." + _outputFileExtension)));" is 175.
Long Statement,Tests.NAnt.Core.Tasks,StyleTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\StyleTaskTest.cs,TransformEngineTests,The length of the statement  "            RunBuild(String.Format(CultureInfo.InvariantCulture' _projectXml' _xmlSingletonSrcFileNameFull' outputFile' _xslPassthroughSrcFileNameFull));" is 141.
Long Statement,Tests.NAnt.Core.Tasks,SysInfoTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\SysInfoTaskTest.cs,Test_FixEnvironmentVariablesThatWouldBeMappedToIllegalPropertyNames,The length of the statement  "                Assert.IsTrue(result.Contains(expression)' "SysInfo should have fixed an environment variable name that is not a valid property name!" + Environment.NewLine + result);" is 167.
Long Statement,Tests.NAnt.Core.Tasks,TouchTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TouchTaskTest.cs,Test_File_DateTime,The length of the statement  "            RunBuild(FormatBuildFile("file='" + fileName + "' datetime='" + newTouchDate.ToString(CultureInfo.InvariantCulture) + "'"));" is 124.
Long Statement,Tests.NAnt.Core.Tasks,TouchTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TouchTaskTest.cs,Test_File_Millis,The length of the statement  "            long milliSeconds = ((DateTime.Parse("01/01/1980").Ticks - DateTime.Parse("01/01/1970").Ticks) / TICKS_PER_MILLISECOND);" is 120.
Long Statement,Tests.NAnt.Core.Tasks,TouchTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TouchTaskTest.cs,Test_FileSet_DateTime,The length of the statement  "            RunBuild(FormatBuildFile("datetime='" + newTouchDate.ToString(CultureInfo.InvariantCulture) + "'"'"<fileset basedir='" + TempDirName + "'><include name='**' /></fileset>"));" is 173.
Long Statement,Tests.NAnt.Core.Tasks,TouchTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TouchTaskTest.cs,Test_FileSet_Millis,The length of the statement  "            long milliSeconds = ((DateTime.Parse("01/01/1980").Ticks - DateTime.Parse("01/01/1970").Ticks) / TICKS_PER_MILLISECOND);" is 120.
Long Statement,Tests.NAnt.Core.Tasks,TouchTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TouchTaskTest.cs,Test_FileSet_Millis,The length of the statement  "            RunBuild(FormatBuildFile("millis='" + milliSeconds.ToString(CultureInfo.InvariantCulture) + "'"'"<fileset basedir='" + TempDirName + "'><include name='**' /></fileset>"));" is 171.
Long Statement,Tests.NAnt.Core.Tasks,TStampTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TStampTaskTest.cs,Test_Custom,The length of the statement  "            string result = RunBuild(String.Format(CultureInfo.InvariantCulture' _format' " verbose='true' property='build.date' pattern='yyyy-MM-DDTHH:mm:ss zzz'"' ""));" is 158.
Long Statement,Tests.NAnt.Core.Tasks,TStampTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TStampTaskTest.cs,Test_Custom,The length of the statement  "            Assert.IsTrue(result.IndexOf("build.date") != -1' "build.date property should have been set." + Environment.NewLine + result);" is 126.
Long Statement,Tests.NAnt.Core.Tasks,TStampTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TStampTaskTest.cs,Test_NoVerbose,The length of the statement  "            string result = RunBuild(String.Format(CultureInfo.InvariantCulture' _format' "property='build.date' pattern='yyyy-MM-DDTHH:mm:ss zzz'"' ""));" is 142.
Long Statement,Tests.NAnt.Core.Tasks,TStampTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TStampTaskTest.cs,Test_NoVerbose,The length of the statement  "            Assert.IsTrue(result.IndexOf("build.date") == -1' "build.date property should not have been printed to log." + Environment.NewLine + result);" is 141.
Long Statement,Tests.NAnt.Core.Tasks,TStampTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TStampTaskTest.cs,Test_Formatter,The length of the statement  "            string result = RunBuild(String.Format(CultureInfo.InvariantCulture' _format' "verbose='true'"' "<formatter property='TODAY' pattern='dd MMM yyyy'/><formatter property='DSTAMP' pattern='yyyyMMdd'/><formatter property='TSTAMP' pattern='HHmm'/>"));" is 246.
Long Statement,Tests.NAnt.Core.Tasks,XmlPeekTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\XmlPeekTest.cs,Test_PeekEmptyFile,The length of the statement  "                Assert.IsTrue((ex.InnerException.InnerException != null && ex.InnerException.InnerException.GetType() == typeof(XmlException)));" is 128.
Long Statement,Tests.NAnt.Core.Tasks,XmlPokeTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\XmlPokeTest.cs,Test_PokeEmptyFile,The length of the statement  "                Assert.IsTrue((ex.InnerException.InnerException != null && ex.InnerException.InnerException.GetType() == typeof(XmlException)));" is 128.
Long Statement,Tests.NAnt.Core.Tasks,ScriptTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\ScriptTest.cs,Test_CSharp,The length of the statement  "            Assert.IsTrue(result.IndexOf("script.me") != -1' "CSharp script should have updated prop." + Environment.NewLine + result);" is 123.
Long Statement,Tests.NAnt.Core.Tasks,ScriptTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\ScriptTest.cs,NamespaceImports,The length of the statement  "                Assert.Ignore("Skip this to make mono-1.0 on tc@codebetter.com happy. Should be removed when 1.x runtime support is dropped");" is 126.
Long Statement,Tests.NAnt.Core.Tasks,TryCatchTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TryCatchTaskTest.cs,Test_CatchExceptionWithMessage,The length of the statement  "            Assert.IsTrue(result.IndexOf("Catch: Exception text") != -1' "Exception message should have been caught and displayed");" is 120.
Long Statement,Tests.NAnt.Core.Tasks,TryCatchTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TryCatchTaskTest.cs,Test_PropertyScopePreset,The length of the statement  "            Assert.IsTrue(result.IndexOf("Catch: Exception text") != -1' "Exception message should have been caught and displayed");" is 120.
Long Statement,Tests.NAnt.Core.Util,FileUtilsTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\FileUtilsTest.cs,Test_GetFullPath,The length of the statement  "            Assert.AreEqual(Directory.GetCurrentDirectory().Substring(0'2) + @"\abc\def"' FileUtils.GetFullPath("/abc/def")' "#10");" is 120.
Long Statement,Tests.NAnt.Core.Util,FileUtilsTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\FileUtilsTest.cs,Test_CombinePaths,The length of the statement  "            Assert.AreEqual(@"c:\test\whatever\test.txt"' FileUtils.CombinePaths(@"c:\test\whatever"' @"..\whatever\test.txt")' "#3");" is 122.
Long Statement,Tests.NAnt.Core.Util,FileUtilsTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\FileUtilsTest.cs,Test_CombinePaths,The length of the statement  "            Assert.AreEqual(@"c:\test\whatever\test.txt"' FileUtils.CombinePaths(@"c:\test\whatever"' "../whatever/test.txt")' "#4");" is 121.
Long Statement,Tests.NAnt.Core.Util,FileUtilsTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\FileUtilsTest.cs,Test_CombinePaths,The length of the statement  "            Assert.AreEqual(@"c:\test\whatever\test.txt"' FileUtils.CombinePaths(@"c:\test\whatever\"' @"..\whatever\test.txt")' "#16");" is 124.
Long Statement,Tests.NAnt.Core.Util,TempFileTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\TempFileTest.cs,Test_Create_WithContents,The length of the statement  "            string expected = string.Format(CultureInfo.InvariantCulture' "Line 1{0}Line Two{0}{0}Line Three"' Environment.NewLine);" is 120.
Long Statement,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,WriteLine,The length of the statement  "            string expected = string.Format(CultureInfo.InvariantCulture' "<message level=\"Info\"><![CDATA[{0}]]></message>"' baseMessage);" is 128.
Long Statement,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,Write,The length of the statement  "            string expected = string.Format(CultureInfo.InvariantCulture' "<message level=\"Info\"><![CDATA[{0}]]></message>"' baseMessage);" is 128.
Long Statement,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,Write,The length of the statement  "            expected = string.Format(CultureInfo.InvariantCulture' "<message level=\"Info\"><![CDATA[{0}]]></message>"' unformattedMessage);" is 128.
Long Statement,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,Write,The length of the statement  "            expected = string.Format(CultureInfo.InvariantCulture' "<message level=\"Info\"><![CDATA[{0}]]></message>"' unformattedMessage);" is 128.
Long Statement,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,Write,The length of the statement  "            expected = string.Format(CultureInfo.InvariantCulture' "<message level=\"Info\"><![CDATA[{0}]]></message>"' unformattedMessage);" is 128.
Long Statement,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,WriteStrangeCharacters,The length of the statement  "            string expected = string.Format(CultureInfo.InvariantCulture' "<message level=\"Info\"><![CDATA[{0}]]></message>"' baseMessage);" is 128.
Long Statement,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,WriteEmbeddedMathFormulas,The length of the statement  "            string expected = string.Format(CultureInfo.InvariantCulture' "<message level=\"Info\"><![CDATA[{0}]]></message>"' baseMessage);" is 128.
Long Statement,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,WriteXmlWithLeadingWhitespace,The length of the statement  "            string message = @"            <?xml version=""1.0"" encoding=""utf-16""?><testsuite name=""tw.ccnet.acceptance Tests"" tests=""14"" time=""19.367"" errors=""0"" failures=""0""/>";" is 180.
Long Statement,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,WriteXmlWithLeadingWhitespace,The length of the statement  "            string expected = @"<message level=""Info""><testsuite name=""tw.ccnet.acceptance Tests"" tests=""14"" time=""19.367"" errors=""0"" failures=""0""/></message>";" is 160.
Long Statement,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,WriteEmbeddedMalformedXml,The length of the statement  "            string expected = string.Format(CultureInfo.InvariantCulture' "<message level=\"Info\"><![CDATA[{0}]]></message>"' baseMessage);" is 128.
Long Statement,Tests.NAnt.DotNet.Tasks,CscTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\CscTaskTest.cs,Test_DebugBuild,The length of the statement  "            // Comment this for now as its hard to know which framework was used to compile and it was mono there will be no pdb file." is 122.
Long Statement,Tests.NAnt.DotNet.Tasks,CscTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\CscTaskTest.cs,Test_DebugBuild,The length of the statement  "            //Assert.IsTrue(File.Exists(_sourceFileName + ".pdb")' _sourceFileName + ".pdb does not exists' program did compile with debug switch.");" is 137.
Long Statement,Tests.NAnt.DotNet.Tasks,CscTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\CscTaskTest.cs,Test_CreateParentDirectory,The length of the statement  "            // Comment this for now as its hard to know which framework was used to compile and it was mono there will be no pdb file." is 122.
Long Statement,Tests.NAnt.DotNet.Tasks,CscTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\CscTaskTest.cs,Test_CreateParentDirectory,The length of the statement  "            //Assert.IsTrue(File.Exists(_sourceFileName + ".pdb")' _sourceFileName + ".pdb does not exists' program did compile with debug switch.");" is 137.
Long Statement,Tests.NAnt.DotNet.Tasks,TestResourceLinkage,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\CscTaskTest.cs,TestFindClassname,The length of the statement  "                VerifyFindClassname( "public sealed class FrameworkInfoDictionary : IDictionary' ICollection' IEnumerable' ICloneable {\r\n}"' "FrameworkInfoDictionary" );" is 155.
Long Statement,Tests.NAnt.DotNet.Tasks,JscTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\JscTaskTest.cs,Test_DebugBuild,The length of the statement  "            Assert.IsTrue(File.Exists(_sourceFileName + ".pdb")' _sourceFileName + ".pdb does not exists' program did compile with debug switch.");" is 135.
Long Statement,Tests.NAnt.DotNet.Tasks,JscTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\JscTaskTest.cs,Test_ReleaseBuild,The length of the statement  "            Assert.IsFalse(File.Exists(_sourceFileName + ".pdb")' _sourceFileName + ".pdb does exists' program did compiled with debug switch.");" is 133.
Long Statement,Tests.NAnt.DotNet.Tasks,JscTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\JscTaskTest.cs,Test_CreateParentDirectory,The length of the statement  "            Assert.IsTrue(File.Exists(_sourceFileName + ".exe")' _sourceFileName + ".exe does not exists' program did compile.");            // Comment this for now as its hard to know which framework was used to compile and it was mono there will be no pdb file." is 251.
Long Statement,Tests.NAnt.DotNet.Tasks,VbcTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\VbcTaskTest.cs,Test_DebugBuild,The length of the statement  "            // Comment this for now as its hard to know which framework was used to compile and it was mono there will be no pdb file." is 122.
Long Statement,Tests.NAnt.DotNet.Tasks,VbcTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\VbcTaskTest.cs,Test_DebugBuild,The length of the statement  "            //Assert.IsTrue(File.Exists(_sourceFileName + ".pdb")' _sourceFileName + ".pdb does not exists' program did compile with debug switch.");" is 137.
Long Statement,Tests.NAnt.DotNet.Tasks,VbcTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.DotNet\Tasks\VbcTaskTest.cs,Test_ReleaseBuild,The length of the statement  "            Assert.IsFalse(File.Exists(_sourceFileName + ".pdb")' _sourceFileName + ".pdb does exists' program did compiled with debug switch.");" is 133.
Empty Catch Block,Tests.NAnt.Console,NAntTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Console\NAntTest.cs,Test_GetBuildFileName,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.Console,NAntTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Console\NAntTest.cs,Test_GetBuildFileName,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.Console,NAntTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Console\NAntTest.cs,Test_GetBuildFileName,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.Console,NAntTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Console\NAntTest.cs,Test_FindInParentOption,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.Console,NAntTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Console\NAntTest.cs,Test_FindInParentOption,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.Console,NAntTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Console\NAntTest.cs,Test_FindInParentOption,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.Core,ExpressionTokenizerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionTokenizerTest.cs,Keyword_ShouldNotEndWithDash,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.Core,ExpressionTokenizerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionTokenizerTest.cs,Keyword_ShouldNotEndWithDot,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,Test_EchoMessageAndInlineContent,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,Test_EchoMessageAndInlineContent,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,Test_EchoMessageAndInlineContent,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.Core.Tasks,MoveTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MoveTest.cs,NoOverwrite_Source_DoesNotExist,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.Core.Tasks,MoveTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MoveTest.cs,Overwrite_Source_DoesNotExist,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.Core.Util,TempFileTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\TempFileTest.cs,Test_Create_NullArgument,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.VisualCpp.Tasks,ClTaskTest_CompileOnDemand,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.VisualCpp\Tasks\ClTaskTest.cs,CleanAllObjs,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.VisualCpp.Tasks,LinkTaskTest_CompileOnDemand,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.VisualCpp\Tasks\LinkTaskTest.cs,CleanAllObjs,The method has an empty catch block.
Empty Catch Block,Tests.NAnt.VisualCpp.Tasks,LinkTaskTest_CompileOnDemand,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.VisualCpp\Tasks\LinkTaskTest.cs,CleanAllBins,The method has an empty catch block.
Magic Number,Tests.NAnt.Core,BuildFilesInResourcesTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\BuildFilesInResourcesTest.cs,Test_FilesInResources,The following statement contains a magic number: byte[] buffer = new byte[8192];
Magic Number,Tests.NAnt.Core,DirectoryScannerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\DirectoryScannerTest.cs,Matching_CaseInsensitive,The following statement contains a magic number: Assert.AreEqual (2' _scanner.FileNames.Count' "#1");
Magic Number,Tests.NAnt.Core,DirectoryScannerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\DirectoryScannerTest.cs,Matching_CaseInsensitive,The following statement contains a magic number: Assert.AreEqual (2' _scanner.FileNames.Count' "#2");
Magic Number,Tests.NAnt.Core,DirectoryScannerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\DirectoryScannerTest.cs,Matching_CaseSensitive,The following statement contains a magic number: Assert.AreEqual (2' _scanner.FileNames.Count' "#1");
Magic Number,Tests.NAnt.Core,DirectoryScannerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\DirectoryScannerTest.cs,Matching_CaseSensitive,The following statement contains a magic number: Assert.AreEqual (2' _scanner.FileNames.Count' "#2");
Magic Number,Tests.NAnt.Core,DirectoryScannerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\DirectoryScannerTest.cs,IncludeNames_Unix,The following statement contains a magic number: Assert.AreEqual (2' _scanner.FileNames.Count' "#4");
Magic Number,Tests.NAnt.Core,DirectoryScannerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\DirectoryScannerTest.cs,IncludeNames_Windows,The following statement contains a magic number: Assert.AreEqual (2' _scanner.FileNames.Count' "#1");
Magic Number,Tests.NAnt.Core,DirectoryScannerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\DirectoryScannerTest.cs,IncludeNames_Windows,The following statement contains a magic number: Assert.AreEqual (2' _scanner.FileNames.Count' "#3");
Magic Number,Tests.NAnt.Core,DirectoryScannerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\DirectoryScannerTest.cs,IncludeNames_Windows,The following statement contains a magic number: Assert.AreEqual (2' _scanner.FileNames.Count' "#5");
Magic Number,Tests.NAnt.Core,DirectoryScannerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\DirectoryScannerTest.cs,IncludeNames_Windows,The following statement contains a magic number: Assert.AreEqual (2' _scanner.FileNames.Count' "#6");
Magic Number,Tests.NAnt.Core,DirectoryScannerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\DirectoryScannerTest.cs,Test_Dont_Match_BaseDir_2,The following statement contains a magic number: Assert.AreEqual(2' _scanner.FileNames.Count);
Magic Number,Tests.NAnt.Core,DirectoryScannerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\DirectoryScannerTest.cs,Test_BaseDir_CaseInSensitive,The following statement contains a magic number: Assert.AreEqual(2' _scanner.FileNames.Count' "#2");
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestCoreOperations,The following statement contains a magic number: AssertExpression("1 + 2"' 3);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestCoreOperations,The following statement contains a magic number: AssertExpression("1 + 2 + 3"' 6);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestCoreOperations,The following statement contains a magic number: AssertExpression("1 + 2 * 3"' 7);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestCoreOperations,The following statement contains a magic number: AssertExpression("2 * 1 * 3"' 6);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestCoreOperations,The following statement contains a magic number: AssertExpression("1 / 2 + 3"' 3);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestCoreOperations,The following statement contains a magic number: AssertExpression("5.0 / (2 + 8)"' 0.5);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestCoreOperations,The following statement contains a magic number: AssertExpression("((((1 + 2))))"' 3);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestCoreOperations,The following statement contains a magic number: AssertExpression("((((1 + 2)+(2 + 1))))"' 6);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestConversionFunctions,The following statement contains a magic number: AssertExpression("int::parse('123' + '45')"' 12345);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestConversionFunctions,The following statement contains a magic number: AssertExpression("long::parse('6667778888' + '666777')"' 6667778888666777);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestConversionFunctions,The following statement contains a magic number: AssertExpression("double::parse('5') / (2 + 8)"' 0.5);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestConversionFunctions,The following statement contains a magic number: AssertExpression("double::parse('1') / 2 + 3"' 3.5);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestConversionFunctions,The following statement contains a magic number: AssertExpression("datetime::parse('12/31/1999 01:23:34')"' new DateTime(1999'12'31'1'23'34));
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestConversionFunctions,The following statement contains a magic number: AssertExpression("datetime::parse('12/31/1999 01:23:34')"' new DateTime(1999'12'31'1'23'34));
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestConversionFunctions,The following statement contains a magic number: AssertExpression("datetime::parse('12/31/1999 01:23:34')"' new DateTime(1999'12'31'1'23'34));
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestConversionFunctions,The following statement contains a magic number: AssertExpression("datetime::parse('12/31/1999 01:23:34')"' new DateTime(1999'12'31'1'23'34));
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestConversionFunctions,The following statement contains a magic number: AssertExpression("datetime::parse('12/31/1999 01:23:34')"' new DateTime(1999'12'31'1'23'34));
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestStringFunctions,The following statement contains a magic number: AssertExpression("string::get-length('test')"' 4);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestStringFunctions,The following statement contains a magic number: AssertExpression("string::get-length(prop1)"' 4);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestStringFunctions,The following statement contains a magic number: AssertExpression("string::get-length('d''Artagnan')"' 10);
Magic Number,Tests.NAnt.Core,ExpressionEvaluatorTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\ExpressionEvaluatorTest.cs,TestStandaloneEvaluator,The following statement contains a magic number: Assert.AreEqual(eval.Evaluate("1 + 2 * 3")' 7);
Magic Number,Tests.NAnt.Core,LocationTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\LocationTest.cs,Test_Constructor_FileNameLineColumn,The following statement contains a magic number: Location l = new Location(_tempFileName' 2' 5);
Magic Number,Tests.NAnt.Core,LocationTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\LocationTest.cs,Test_Constructor_FileNameLineColumn,The following statement contains a magic number: Location l = new Location(_tempFileName' 2' 5);
Magic Number,Tests.NAnt.Core,LocationTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\LocationTest.cs,Test_Constructor_FileNameLineColumn,The following statement contains a magic number: Assert.AreEqual(2' l.LineNumber);
Magic Number,Tests.NAnt.Core,LocationTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\LocationTest.cs,Test_Constructor_FileNameLineColumn,The following statement contains a magic number: Assert.AreEqual(5' l.ColumnNumber);
Magic Number,Tests.NAnt.Core,LocationTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\LocationTest.cs,Test_Constructor_UriFileName,The following statement contains a magic number: Location l = new Location(uri.ToString()' 3' 6);
Magic Number,Tests.NAnt.Core,LocationTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\LocationTest.cs,Test_Constructor_UriFileName,The following statement contains a magic number: Location l = new Location(uri.ToString()' 3' 6);
Magic Number,Tests.NAnt.Core,LocationTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\LocationTest.cs,Test_Constructor_UriFileName,The following statement contains a magic number: Assert.AreEqual(3' l.LineNumber);
Magic Number,Tests.NAnt.Core,LocationTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\LocationTest.cs,Test_Constructor_UriFileName,The following statement contains a magic number: Assert.AreEqual(6' l.ColumnNumber);
Magic Number,Tests.NAnt.Core,LocationTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\LocationTest.cs,Test_ToString,The following statement contains a magic number: Location location = new Location(_tempFileName' 2' 5);
Magic Number,Tests.NAnt.Core,LocationTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\LocationTest.cs,Test_ToString,The following statement contains a magic number: Location location = new Location(_tempFileName' 2' 5);
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Test_AsIs,The following statement contains a magic number: Assert.AreEqual(2' _fileSet.FileNames.Count);
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Test_IncludesAndAsIs,The following statement contains a magic number: Assert.AreEqual(2' _fileSet.FileNames.Count);
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Test_Includes_All,The following statement contains a magic number: Assert.AreEqual(6' _fileSet.FileNames.Count);
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Test_Includes_All,The following statement contains a magic number: Assert.AreEqual(2' _fileSet.DirectoryNames.Count);
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Test_Includes_All_Excludes_Some,The following statement contains a magic number: Assert.AreEqual(4' _fileSet.FileNames.Count);
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Test_Includes_All_Excludes_Some,The following statement contains a magic number: Assert.AreEqual(2' _fileSet.DirectoryNames.Count);
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Test_Includes_Wildcards1,The following statement contains a magic number: Assert.AreEqual(2' _fileSet.FileNames.Count);
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Test_Includes_Wildcards2,The following statement contains a magic number: Assert.AreEqual(2' _fileSet.FileNames.Count);
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Test_Includes_List,The following statement contains a magic number: Assert.AreEqual(3' _fileSet.FileNames.Count);
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Test_Includes_File,The following statement contains a magic number: Assert.AreEqual(3' _fileSet.FileNames.Count);
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Test_NewestFile,The following statement contains a magic number: f1.LastWriteTime = DateTime.Now.AddDays(2);
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Matching_CaseInsensitive,The following statement contains a magic number: Assert.AreEqual(3' _fileSet.FileNames.Count' "#1");
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Matching_CaseInsensitive,The following statement contains a magic number: Assert.AreEqual(2' _fileSet.FileNames.Count' "#2");
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Matching_CaseSensitive,The following statement contains a magic number: Assert.AreEqual(3' _fileSet.FileNames.Count' "#2");
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Matching_CaseSensitive,The following statement contains a magic number: Assert.AreEqual(3' _fileSet.FileNames.Count' "#3");
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Matching_CaseSensitive,The following statement contains a magic number: Assert.AreEqual(3' _fileSet.FileNames.Count' "#4");
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Matching_Unix,The following statement contains a magic number: Assert.AreEqual(3' _fileSet.FileNames.Count' "#2");
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Matching_Unix,The following statement contains a magic number: Assert.AreEqual(3' _fileSet.FileNames.Count' "#3");
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Matching_Unix,The following statement contains a magic number: Assert.AreEqual(3' _fileSet.FileNames.Count' "#4");
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Matching_Unix,The following statement contains a magic number: Assert.AreEqual (3' _fileSet.FileNames.Count' "#5");
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Matching_Unix,The following statement contains a magic number: Assert.AreEqual (2' _fileSet.FileNames.Count' "#7");
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Matching_Windows,The following statement contains a magic number: Assert.AreEqual(3' _fileSet.FileNames.Count' "#1");
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Matching_Windows,The following statement contains a magic number: Assert.AreEqual(3' _fileSet.FileNames.Count' "#2");
Magic Number,Tests.NAnt.Core,FileSetTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Types\FileSetTest.cs,Matching_Windows,The following statement contains a magic number: Assert.AreEqual(2' _fileSet.FileNames.Count' "#3");
Magic Number,Tests.NAnt.Core.Filters,ExpandPropertiesTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Filters\ExpandPropertiesTest.cs,MaxSafeExpressionTest,The following statement contains a magic number: base.FilterTest(@"<" + _tagName + @" />"' GetString(4090) + GetStringExpression(2048)' GetString(4090) + GetString(2048 - _minStringExpressionLength));
Magic Number,Tests.NAnt.Core.Filters,ExpandPropertiesTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Filters\ExpandPropertiesTest.cs,MaxSafeExpressionTest,The following statement contains a magic number: base.FilterTest(@"<" + _tagName + @" />"' GetString(4090) + GetStringExpression(2048)' GetString(4090) + GetString(2048 - _minStringExpressionLength));
Magic Number,Tests.NAnt.Core.Filters,ExpandPropertiesTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Filters\ExpandPropertiesTest.cs,MaxSafeExpressionTest,The following statement contains a magic number: base.FilterTest(@"<" + _tagName + @" />"' GetString(4090) + GetStringExpression(2048)' GetString(4090) + GetString(2048 - _minStringExpressionLength));
Magic Number,Tests.NAnt.Core.Filters,ExpandPropertiesTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Filters\ExpandPropertiesTest.cs,MaxSafeExpressionTest,The following statement contains a magic number: base.FilterTest(@"<" + _tagName + @" />"' GetString(4090) + GetStringExpression(2048)' GetString(4090) + GetString(2048 - _minStringExpressionLength));
Magic Number,Tests.NAnt.Core.Filters,ExpandPropertiesTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Filters\ExpandPropertiesTest.cs,UnsafeButExpandedExpressionTest,The following statement contains a magic number: base.FilterTest(@"<" + _tagName + @" />"' GetStringExpression(4095)' GetString(4095 - _minStringExpressionLength));
Magic Number,Tests.NAnt.Core.Filters,ExpandPropertiesTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Filters\ExpandPropertiesTest.cs,UnsafeButExpandedExpressionTest,The following statement contains a magic number: base.FilterTest(@"<" + _tagName + @" />"' GetStringExpression(4095)' GetString(4095 - _minStringExpressionLength));
Magic Number,Tests.NAnt.Core.Filters,ExpandPropertiesTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Filters\ExpandPropertiesTest.cs,UnsafeAndIgnoredExpressionTest,The following statement contains a magic number: string temp = GetString(1) + GetStringExpression(4095);
Magic Number,Tests.NAnt.Core.Tasks,AttribTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\AttribTaskTest.cs,Test_Multiple,The following statement contains a magic number: i < 10
Magic Number,Tests.NAnt.Core.Tasks,CallTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CallTest.cs,Test_Cascade,The following statement contains a magic number: Assert.AreEqual(2' listener.GetTargetExecutionCount("compile")' "#A1");
Magic Number,Tests.NAnt.Core.Tasks,CallTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CallTest.cs,Test_Cascade,The following statement contains a magic number: Assert.AreEqual(2' listener.GetTargetExecutionCount("init")' "#A4");
Magic Number,Tests.NAnt.Core.Tasks,CallTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CallTest.cs,Test_Cascade,The following statement contains a magic number: Assert.AreEqual(2' listener.GetTaskExecutionCount("call")' "#A5");
Magic Number,Tests.NAnt.Core.Tasks,CallTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CallTest.cs,Test_Cascade,The following statement contains a magic number: Assert.AreEqual(2' listener.GetTargetExecutionCount("compile")' "#B1");
Magic Number,Tests.NAnt.Core.Tasks,CallTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CallTest.cs,Test_Cascade,The following statement contains a magic number: Assert.AreEqual(2' listener.GetTaskExecutionCount("call")' "#B5");
Magic Number,Tests.NAnt.Core.Tasks,CopyTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\CopyTest.cs,Test_Copy_Structure_Overwrite,The following statement contains a magic number: File.SetLastWriteTime(GetPath(dest'tempDir1'tempDir3'tempFile5)' new DateTime(2000' 1'1));
Magic Number,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,EncodingTest,The following statement contains a magic number: Assert.AreEqual (65001' echo.Encoding.CodePage' "#1");
Magic Number,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,EncodingTest,The following statement contains a magic number: Assert.AreEqual (65001' echo.Encoding.CodePage' "#4");
Magic Number,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,ExistingFile_Append_Default,The following statement contains a magic number: Assert.AreEqual (12' fs.Length' "#A4");
Magic Number,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,ExistingFile_Append_Default,The following statement contains a magic number: Assert.AreEqual (12' fs.Length' "#B4");
Magic Number,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,ExistingFile_Append_False,The following statement contains a magic number: Assert.AreEqual (11' fs.Length' "#A4");
Magic Number,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,ExistingFile_Append_False,The following statement contains a magic number: Assert.AreEqual (11' fs.Length' "#B4");
Magic Number,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,ExistingFile_Append_True,The following statement contains a magic number: Assert.AreEqual (13' fs.Length' "#A4");
Magic Number,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,ExistingFile_Append_True,The following statement contains a magic number: Assert.AreEqual (13' fs.Length' "#B4");
Magic Number,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,File_Level_Ignored,The following statement contains a magic number: Assert.AreEqual (11' fs.Length' "#A4");
Magic Number,Tests.NAnt.Core.Tasks,EchoTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\EchoTest.cs,File_Level_Ignored,The following statement contains a magic number: Assert.AreEqual (11' fs.Length' "#B4");
Magic Number,Tests.NAnt.Core.Tasks,ExecTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\ExecTaskTest.cs,Test_ReadLargeAmountFromStdout,The following statement contains a magic number: i < 250
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,Init,The following statement contains a magic number: _port = _portRand.Next(50000' 60000);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,Init,The following statement contains a magic number: _port = _portRand.Next(50000' 60000);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,Init,The following statement contains a magic number: _files = new List<string>(3);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoToEmailAddressesTest,The following statement contains a magic number: Assert.AreEqual(2' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyToEmailAddressesTest,The following statement contains a magic number: Assert.AreEqual(6' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoToNamesAndEmailAddressesInParenthesisTest,The following statement contains a magic number: Assert.AreEqual(2' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyToNamesAndEmailAddressesInParenthesisTest,The following statement contains a magic number: Assert.AreEqual(6' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoToNamesAndEmailAddressesInAngleBracketsTest,The following statement contains a magic number: Assert.AreEqual(2' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyToNamesAndEmailAddressesInAngleBracketsTest,The following statement contains a magic number: Assert.AreEqual(6' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoToEmailAddressesAndNamesInParenthesisTest,The following statement contains a magic number: Assert.AreEqual(2' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyToEmailAddressesAndNamesInParenthesisTest,The following statement contains a magic number: Assert.AreEqual(6' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoToEmailAddressesAndNamesInAngleBracketsTest,The following statement contains a magic number: Assert.AreEqual(2' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyToEmailAddressesAndNamesInAngleBracketsTest,The following statement contains a magic number: Assert.AreEqual(6' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoCcEmailAddressesTest,The following statement contains a magic number: Assert.AreEqual(2' ccEmails.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyCcEmailAddressesTest,The following statement contains a magic number: Assert.AreEqual(6' ccEmails.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoCcNamesAndEmailAddressesInParenthesisTest,The following statement contains a magic number: Assert.AreEqual(2' ccEmails.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyCcNamesAndEmailAddressesInParenthesisTest,The following statement contains a magic number: Assert.AreEqual(6' ccEmails.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoCcNamesAndEmailAddressesInAngleBracketsTest,The following statement contains a magic number: Assert.AreEqual(2' ccEmails.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyCcNamesAndEmailAddressesInAngleBracketsTest,The following statement contains a magic number: Assert.AreEqual(6' ccEmails.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoCcEmailAddressesAndNamesInParenthesisTest,The following statement contains a magic number: Assert.AreEqual(2' ccEmails.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyCcEmailAddressesAndNamesInParenthesisTest,The following statement contains a magic number: Assert.AreEqual(6' ccEmails.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoCcEmailAddressesAndNamesInAngleBracketsTest,The following statement contains a magic number: Assert.AreEqual(2' ccEmails.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyCcEmailAddressesAndNamesInAngleBracketsTest,The following statement contains a magic number: Assert.AreEqual(6' ccEmails.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoBccEmailAddressesTest,The following statement contains a magic number: Assert.AreEqual(2' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyBccEmailAddressesTest,The following statement contains a magic number: Assert.AreEqual(6' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoBccNamesAndEmailAddressesInParenthesisTest,The following statement contains a magic number: Assert.AreEqual(2' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyBccNamesAndEmailAddressesInParenthesisTest,The following statement contains a magic number: Assert.AreEqual(6' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoBccNamesAndEmailAddressesInAngleBracketsTest,The following statement contains a magic number: Assert.AreEqual(2' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyBccNamesAndEmailAddressesInAngleBracketsTest,The following statement contains a magic number: Assert.AreEqual(6' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoBccEmailAddressesAndNamesInParenthesisTest,The following statement contains a magic number: Assert.AreEqual(2' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyBccEmailAddressesAndNamesInParenthesisTest,The following statement contains a magic number: Assert.AreEqual(6' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,TwoBccEmailAddressesAndNamesInAngleBracketsTest,The following statement contains a magic number: Assert.AreEqual(2' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,ManyBccEmailAddressesAndNamesInAngleBracketsTest,The following statement contains a magic number: Assert.AreEqual(6' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,AllRecipientListsTest,The following statement contains a magic number: Assert.AreEqual(6' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,AllRecipientListsTest,The following statement contains a magic number: Assert.AreEqual(2' GetCcAddressesFromSentMail().Length);
Magic Number,Tests.NAnt.Core.Tasks,MailTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\MailTaskTest.cs,MixedEmailFormatTest,The following statement contains a magic number: Assert.AreEqual(10' _smtpServer.ReceivedEmail[0].ToAddresses.Length);
Magic Number,Tests.NAnt.Core.Tasks,TouchTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TouchTaskTest.cs,Test_File_Default,The following statement contains a magic number: System.Threading.Thread.Sleep(1000);
Magic Number,Tests.NAnt.Core.Tasks,TouchTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TouchTaskTest.cs,Test_File_Default,The following statement contains a magic number: System.Threading.Thread.Sleep(1000);
Magic Number,Tests.NAnt.Core.Tasks,TouchTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Tasks\TouchTaskTest.cs,Test_FileSet_Default,The following statement contains a magic number: System.Threading.Thread.Sleep(1000);
Magic Number,Tests.NAnt.Core.Util,FileUtilsTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\FileUtilsTest.cs,Test_GetFullPath,The following statement contains a magic number: Assert.AreEqual(Directory.GetCurrentDirectory().Substring(0'2) + @"\abc\def"' FileUtils.GetFullPath("/abc/def")' "#10");
Magic Number,Tests.NAnt.Core.Util,FileUtilsTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\FileUtilsTest.cs,Test_GetFullPath,The following statement contains a magic number: sb.Length < 260
Magic Number,Tests.NAnt.Core.Util,StopWatchStackTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\StopWatchStackTest.cs,CreateStopWatchStackAndSetUpMocks,The following statement contains a magic number: startTime = new DateTime(2004' 12' 1' 12' 0' 0);
Magic Number,Tests.NAnt.Core.Util,StopWatchStackTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\StopWatchStackTest.cs,CreateStopWatchStackAndSetUpMocks,The following statement contains a magic number: startTime = new DateTime(2004' 12' 1' 12' 0' 0);
Magic Number,Tests.NAnt.Core.Util,StopWatchStackTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\StopWatchStackTest.cs,CreateStopWatchStackAndSetUpMocks,The following statement contains a magic number: startTime = new DateTime(2004' 12' 1' 12' 0' 0);
Magic Number,Tests.NAnt.Core.Util,StopWatchStackTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\StopWatchStackTest.cs,ShouldPushAndPopSingleStopWatch,The following statement contains a magic number: mockDateTimeProvider.SetExpectedNow(startTime.AddMilliseconds(2));
Magic Number,Tests.NAnt.Core.Util,StopWatchStackTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\StopWatchStackTest.cs,ShouldPushAndPopSingleStopWatch,The following statement contains a magic number: Assert.AreEqual(2' elapsed.Milliseconds' "two milliseconds should have elapsed");
Magic Number,Tests.NAnt.Core.Util,StopWatchStackTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\StopWatchStackTest.cs,ShouldPushAndPopMultipleStopWatches,The following statement contains a magic number: mockDateTimeProvider.SetExpectedNow(startTime.AddMilliseconds(2));
Magic Number,Tests.NAnt.Core.Util,StopWatchStackTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\StopWatchStackTest.cs,ShouldPushAndPopMultipleStopWatches,The following statement contains a magic number: mockDateTimeProvider.SetExpectedNow(startTime.AddMilliseconds(4));
Magic Number,Tests.NAnt.Core.Util,StopWatchStackTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\StopWatchStackTest.cs,ShouldPushAndPopMultipleStopWatches,The following statement contains a magic number: mockDateTimeProvider.SetExpectedNow(startTime.AddMilliseconds(4));
Magic Number,Tests.NAnt.Core.Util,StopWatchStackTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\StopWatchStackTest.cs,ShouldPushAndPopMultipleStopWatches,The following statement contains a magic number: Assert.AreEqual(2' stack.PopStop().Milliseconds' "two milliseconds should have elapsed for the second stopwatch");
Magic Number,Tests.NAnt.Core.Util,StopWatchStackTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\StopWatchStackTest.cs,ShouldPushAndPopMultipleStopWatches,The following statement contains a magic number: Assert.AreEqual(4' stack.PopStop().Milliseconds' "four milliseconds should have elapsed for the first stopwatch");
Magic Number,Tests.NAnt.Core.Util,TempFileTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\TempFileTest.cs,Test_Create,The following statement contains a magic number: Assert.IsTrue(diff.TotalSeconds < 10.0' "Creation time should be less than 10 seconds ago.");
Magic Number,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,BuildStartedAndBuildFinished,The following statement contains a magic number: _log = CreateXmlLogger(CreateDateTimeProvider(123));
Magic Number,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,TargetStartedAndTargetFinished,The following statement contains a magic number: _log = CreateXmlLogger(CreateDateTimeProvider(123));
Magic Number,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,TaskStartedAndTaskFinished,The following statement contains a magic number: _log = CreateXmlLogger(CreateDateTimeProvider(321));
Magic Number,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,CreateDateTimeProvider,The following statement contains a magic number: mockDateTimeProvider.SetExpectedNow(new DateTime(2004' 12' 1' 1' 0' 0));
Magic Number,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,CreateDateTimeProvider,The following statement contains a magic number: mockDateTimeProvider.SetExpectedNow(new DateTime(2004' 12' 1' 1' 0' 0));
Magic Number,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,CreateDateTimeProvider,The following statement contains a magic number: mockDateTimeProvider.SetExpectedNow(new DateTime(2004' 12' 1' 1' 0' 0' duration));
Magic Number,Tests.NAnt.Core.Util,XmlLoggerTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.Core\Util\XmlLoggerTest.cs,CreateDateTimeProvider,The following statement contains a magic number: mockDateTimeProvider.SetExpectedNow(new DateTime(2004' 12' 1' 1' 0' 0' duration));
Magic Number,Tests.NAnt.VisualCpp,VisualCppTestBase,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.VisualCpp\VisualCppTestBase.cs,CheckSupportedCompiler,The following statement contains a magic number: majorVersion < 7
Magic Number,Tests.NAnt.VisualCpp.Tasks,RcTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.VisualCpp\Tasks\RcTaskTest.cs,Test_Output_UpToDate,The following statement contains a magic number: System.Threading.Thread.Sleep(1000);
Magic Number,Tests.NAnt.VisualCpp.Tasks,RcTaskTest,C:\research\architectureSmells\repos\nant_nant\tests\NAnt.VisualCpp\Tasks\RcTaskTest.cs,Test_External_Files,The following statement contains a magic number: System.Threading.Thread.Sleep(1000);
