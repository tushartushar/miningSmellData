Implementation smell,Namespace,Class,File,Method,Description
Magic Number,BufferManager.Tests,when_creating_a_buffer_manager,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_creating_a_buffer_manager.cs,a_zero_chunk_size_causes_an_argumentexception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new global::BufferManager.BufferManager(1024' 0' 1024));
Magic Number,BufferManager.Tests,when_creating_a_buffer_manager,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_creating_a_buffer_manager.cs,a_zero_chunk_size_causes_an_argumentexception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new global::BufferManager.BufferManager(1024' 0' 1024));
Magic Number,BufferManager.Tests,when_creating_a_buffer_manager,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_creating_a_buffer_manager.cs,a_negative_chunk_size_causes_an_argumentexception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new global::BufferManager.BufferManager(200' -1' 200));
Magic Number,BufferManager.Tests,when_creating_a_buffer_manager,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_creating_a_buffer_manager.cs,a_negative_chunk_size_causes_an_argumentexception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new global::BufferManager.BufferManager(200' -1' 200));
Magic Number,BufferManager.Tests,when_creating_a_buffer_manager,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_creating_a_buffer_manager.cs,a_negative_chunks_per_segment_causes_an_argumentexception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new global::BufferManager.BufferManager(-1' 1024' 8));
Magic Number,BufferManager.Tests,when_creating_a_buffer_manager,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_creating_a_buffer_manager.cs,a_negative_chunks_per_segment_causes_an_argumentexception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new global::BufferManager.BufferManager(-1' 1024' 8));
Magic Number,BufferManager.Tests,when_creating_a_buffer_manager,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_creating_a_buffer_manager.cs,a_zero_chunks_per_segment_causes_an_argumentexception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new global::BufferManager.BufferManager(0' 1024' 8));
Magic Number,BufferManager.Tests,when_creating_a_buffer_manager,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_creating_a_buffer_manager.cs,a_zero_chunks_per_segment_causes_an_argumentexception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new global::BufferManager.BufferManager(0' 1024' 8));
Magic Number,BufferManager.Tests,when_creating_a_buffer_manager,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_creating_a_buffer_manager.cs,a_negative_number_of_segments_causes_an_argumentexception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new global::BufferManager.BufferManager(1024' 1024' -1));
Magic Number,BufferManager.Tests,when_creating_a_buffer_manager,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_creating_a_buffer_manager.cs,a_negative_number_of_segments_causes_an_argumentexception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new global::BufferManager.BufferManager(1024' 1024' -1));
Magic Number,BufferManager.Tests,when_creating_a_buffer_manager,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_creating_a_buffer_manager.cs,can_create_a_manager_with_zero_inital_segments,The following statement contains a magic number: Assert.DoesNotThrow(() => new global::BufferManager.BufferManager(1024' 1024' 0));
Magic Number,BufferManager.Tests,when_creating_a_buffer_manager,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_creating_a_buffer_manager.cs,can_create_a_manager_with_zero_inital_segments,The following statement contains a magic number: Assert.DoesNotThrow(() => new global::BufferManager.BufferManager(1024' 1024' 0));
Magic Number,BufferManager.Tests,has_buffer_pool_fixture,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\has_buffer_pool_fixture.cs,Setup,The following statement contains a magic number: BufferPool = new BufferPool(10' BufferManager);
Magic Number,BufferManager.Tests,has_buffer_manager_fixture,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\has_buffer_manager_fixture.cs,Setup,The following statement contains a magic number: BufferManager = new BufferManager(128' 1024' 1);
Magic Number,BufferManager.Tests,has_buffer_manager_fixture,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\has_buffer_manager_fixture.cs,Setup,The following statement contains a magic number: BufferManager = new BufferManager(128' 1024' 1);
Magic Number,BufferManager.Tests,when_a_buffer_pool_has_been_disposed,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_a_buffer_pool_has_been_disposed.cs,Setup,The following statement contains a magic number: m_DisposedPool = new BufferPool(10' BufferManager);
Magic Number,BufferManager.Tests,when_a_buffer_pool_has_been_disposed,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_a_buffer_pool_has_been_disposed.cs,writing_indexer_throws_objectdisposedexception,The following statement contains a magic number: m_DisposedPool[0] = 5;
Magic Number,BufferManager.Tests,when_a_buffer_pool_has_been_disposed,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_a_buffer_pool_has_been_disposed.cs,writing_multiple_bytes_throws_objectdisposedexception,The following statement contains a magic number: m_DisposedPool.Append(new byte[] { 1' 2' 3' 4 });
Magic Number,BufferManager.Tests,when_a_buffer_pool_has_been_disposed,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_a_buffer_pool_has_been_disposed.cs,writing_multiple_bytes_throws_objectdisposedexception,The following statement contains a magic number: m_DisposedPool.Append(new byte[] { 1' 2' 3' 4 });
Magic Number,BufferManager.Tests,when_a_buffer_pool_has_been_disposed,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_a_buffer_pool_has_been_disposed.cs,writing_multiple_bytes_throws_objectdisposedexception,The following statement contains a magic number: m_DisposedPool.Append(new byte[] { 1' 2' 3' 4 });
Magic Number,BufferManager.Tests,when_a_buffer_pool_has_been_disposed,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_a_buffer_pool_has_been_disposed.cs,setting_length_throws_objectdisposedexception,The following statement contains a magic number: m_DisposedPool.SetLength(200);
Magic Number,BufferManager.Tests,when_changing_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_changing_data_in_a_bufferpool_via_indexer.cs,an_index_under_zero_throws_an_argument_exception,The following statement contains a magic number: BufferPool pool = new BufferPool(12' BufferManager);
Magic Number,BufferManager.Tests,when_changing_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_changing_data_in_a_bufferpool_via_indexer.cs,an_index_under_zero_throws_an_argument_exception,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => pool[-1] = 4);
Magic Number,BufferManager.Tests,when_changing_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_changing_data_in_a_bufferpool_via_indexer.cs,data_that_has_been_set_can_read,The following statement contains a magic number: pool[3] = 5;
Magic Number,BufferManager.Tests,when_changing_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_changing_data_in_a_bufferpool_via_indexer.cs,data_that_has_been_set_can_read,The following statement contains a magic number: pool[3] = 5;
Magic Number,BufferManager.Tests,when_changing_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_changing_data_in_a_bufferpool_via_indexer.cs,data_that_has_been_set_can_read,The following statement contains a magic number: Assert.AreEqual(5' pool[3]);
Magic Number,BufferManager.Tests,when_changing_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_changing_data_in_a_bufferpool_via_indexer.cs,data_that_has_been_set_can_read,The following statement contains a magic number: Assert.AreEqual(5' pool[3]);
Magic Number,BufferManager.Tests,when_changing_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_changing_data_in_a_bufferpool_via_indexer.cs,length_is_updated_when_index_higher_than_count_set,The following statement contains a magic number: pool[3] = 5;
Magic Number,BufferManager.Tests,when_changing_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_changing_data_in_a_bufferpool_via_indexer.cs,length_is_updated_when_index_higher_than_count_set,The following statement contains a magic number: pool[3] = 5;
Magic Number,BufferManager.Tests,when_changing_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_changing_data_in_a_bufferpool_via_indexer.cs,length_is_updated_when_index_higher_than_count_set,The following statement contains a magic number: Assert.AreEqual(4' pool.Length);
Magic Number,BufferManager.Tests,when_changing_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_changing_data_in_a_bufferpool_via_indexer.cs,a_write_will_automatically_grow_the_buffer_pool,The following statement contains a magic number: pool[initialCapacity + 14] = 5;
Magic Number,BufferManager.Tests,when_changing_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_changing_data_in_a_bufferpool_via_indexer.cs,a_write_will_automatically_grow_the_buffer_pool,The following statement contains a magic number: pool[initialCapacity + 14] = 5;
Magic Number,BufferManager.Tests,when_changing_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_changing_data_in_a_bufferpool_via_indexer.cs,a_write_will_automatically_grow_the_buffer_pool,The following statement contains a magic number: Assert.AreEqual(initialCapacity * 2' pool.Capacity);
Magic Number,BufferManager.Tests,when_changing_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_changing_data_in_a_bufferpool_via_indexer.cs,a_write_past_end_will_check_out_a_buffer_from_the_buffer_pool,The following statement contains a magic number: pool[pool.Capacity + 14] = 5;
Magic Number,BufferManager.Tests,when_changing_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_changing_data_in_a_bufferpool_via_indexer.cs,a_write_past_end_will_check_out_a_buffer_from_the_buffer_pool,The following statement contains a magic number: pool[pool.Capacity + 14] = 5;
Magic Number,BufferManager.Tests,when_checking_in_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_in_a_buffer.cs,should_accept_a_checked_out_buffer,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 0);
Magic Number,BufferManager.Tests,when_checking_in_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_in_a_buffer.cs,should_accept_a_checked_out_buffer,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 0);
Magic Number,BufferManager.Tests,when_checking_in_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_in_a_buffer.cs,should_increment_available_buffers,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 0);
Magic Number,BufferManager.Tests,when_checking_in_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_in_a_buffer.cs,should_increment_available_buffers,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 0);
Magic Number,BufferManager.Tests,when_checking_in_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_in_a_buffer.cs,should_increment_available_buffers,The following statement contains a magic number: Assert.AreEqual(10' manager.AvailableBuffers);
Magic Number,BufferManager.Tests,when_checking_in_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_in_a_buffer.cs,should_throw_argumentnullexception_if_null_buffer,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 0);
Magic Number,BufferManager.Tests,when_checking_in_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_in_a_buffer.cs,should_throw_argumentnullexception_if_null_buffer,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 0);
Magic Number,BufferManager.Tests,when_checking_in_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_in_a_buffer.cs,should_throw_argumentexception_if_buffer_wrong_size,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 0);
Magic Number,BufferManager.Tests,when_checking_in_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_in_a_buffer.cs,should_throw_argumentexception_if_buffer_wrong_size,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 0);
Magic Number,BufferManager.Tests,when_checking_in_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_in_a_buffer.cs,should_throw_argumentexception_if_buffer_wrong_size,The following statement contains a magic number: byte[] data = new byte[10000];
Magic Number,BufferManager.Tests,when_checking_out_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_out_a_buffer.cs,should_return_a_valid_buffer_when_available,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(1' 1000' 1);
Magic Number,BufferManager.Tests,when_checking_out_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_out_a_buffer.cs,should_return_a_valid_buffer_when_available,The following statement contains a magic number: Assert.AreEqual(1000' buffer.Count);
Magic Number,BufferManager.Tests,when_checking_out_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_out_a_buffer.cs,should_decrement_available_buffers,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(1' 1000' 1);
Magic Number,BufferManager.Tests,when_checking_out_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_out_a_buffer.cs,should_create_a_segment_if_none_are_availabke,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 0);
Magic Number,BufferManager.Tests,when_checking_out_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_out_a_buffer.cs,should_create_a_segment_if_none_are_availabke,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 0);
Magic Number,BufferManager.Tests,when_checking_out_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_out_a_buffer.cs,should_create_a_segment_if_none_are_availabke,The following statement contains a magic number: Assert.AreEqual(9' manager.AvailableBuffers);
Magic Number,BufferManager.Tests,when_checking_out_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_out_a_buffer.cs,should_throw_an_unabletocreatememoryexception_if_acquiring_memory_is_disabled_and_out_of_memory,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(1' 1000' 1' false);
Magic Number,BufferManager.Tests,when_checking_out_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_out_a_buffer.cs,should_release_acquired_buffers_if_size_requirement_cant_be_satisfied,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(1' 1000' 1' false);
Magic Number,BufferManager.Tests,when_checking_out_a_buffer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_checking_out_a_buffer.cs,should_release_acquired_buffers_if_size_requirement_cant_be_satisfied,The following statement contains a magic number: Assert.Throws(Is.InstanceOf(typeof(Exception))' () => manager.CheckOut(2));
Magic Number,BufferManager.Tests,when_converting_to_an_effective_IEnumerable_of_arraysegments,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_an_effective_IEnumerable_of_arraysegments.cs,empty_returns_no_results,The following statement contains a magic number: BufferPool pool = new BufferPool(10' BufferManager);
Magic Number,BufferManager.Tests,when_converting_to_an_effective_IEnumerable_of_arraysegments,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_an_effective_IEnumerable_of_arraysegments.cs,a_single_partial_segment_can_be_returned,The following statement contains a magic number: i < 10
Magic Number,BufferManager.Tests,when_converting_to_an_effective_IEnumerable_of_arraysegments,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_an_effective_IEnumerable_of_arraysegments.cs,a_single_partial_segment_can_be_returned,The following statement contains a magic number: i < 10
Magic Number,BufferManager.Tests,when_converting_to_an_effective_IEnumerable_of_arraysegments,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_an_effective_IEnumerable_of_arraysegments.cs,multiple_segments_can_be_returned,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(3' 1000' 1);
Magic Number,BufferManager.Tests,when_converting_to_an_effective_IEnumerable_of_arraysegments,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_an_effective_IEnumerable_of_arraysegments.cs,multiple_segments_can_be_returned,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(3' 1000' 1);
Magic Number,BufferManager.Tests,when_converting_to_an_effective_IEnumerable_of_arraysegments,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_an_effective_IEnumerable_of_arraysegments.cs,multiple_segments_can_be_returned,The following statement contains a magic number: BufferPool pool = new BufferPool(10' manager);
Magic Number,BufferManager.Tests,when_converting_to_an_effective_IEnumerable_of_arraysegments,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_an_effective_IEnumerable_of_arraysegments.cs,multiple_segments_can_be_returned,The following statement contains a magic number: pool[i] = (byte)(i % 255);
Magic Number,BufferManager.Tests,when_converting_to_an_effective_IEnumerable_of_arraysegments,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_an_effective_IEnumerable_of_arraysegments.cs,multiple_segments_can_be_returned,The following statement contains a magic number: i < 2500
Magic Number,BufferManager.Tests,when_converting_to_an_effective_IEnumerable_of_arraysegments,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_an_effective_IEnumerable_of_arraysegments.cs,multiple_segments_can_be_returned,The following statement contains a magic number: Assert.IsTrue(buffers.Count == 3);
Magic Number,BufferManager.Tests,when_converting_to_an_effective_IEnumerable_of_arraysegments,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_an_effective_IEnumerable_of_arraysegments.cs,multiple_segments_can_be_returned,The following statement contains a magic number: Assert.IsTrue(buffers[0].Count == 1000);
Magic Number,BufferManager.Tests,when_converting_to_an_effective_IEnumerable_of_arraysegments,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_an_effective_IEnumerable_of_arraysegments.cs,multiple_segments_can_be_returned,The following statement contains a magic number: Assert.IsTrue(buffers[1].Count == 1000);
Magic Number,BufferManager.Tests,when_converting_to_an_effective_IEnumerable_of_arraysegments,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_an_effective_IEnumerable_of_arraysegments.cs,multiple_segments_can_be_returned,The following statement contains a magic number: Assert.IsTrue(buffers[2].Count == 500);
Magic Number,BufferManager.Tests,when_converting_to_an_effective_IEnumerable_of_arraysegments,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_an_effective_IEnumerable_of_arraysegments.cs,multiple_segments_can_be_returned,The following statement contains a magic number: Assert.IsTrue(buffers[2].Count == 500);
Magic Number,BufferManager.Tests,when_converting_to_a_byte_array,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_a_byte_array.cs,the_byte_array_should_be_the_same_length_as_the_pool_with_data,The following statement contains a magic number: BufferPool pool = new BufferPool(5' BufferManager);
Magic Number,BufferManager.Tests,when_converting_to_a_byte_array,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_a_byte_array.cs,the_byte_array_should_be_the_same_length_as_the_pool_with_data,The following statement contains a magic number: pool[i] = 12;
Magic Number,BufferManager.Tests,when_converting_to_a_byte_array,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_a_byte_array.cs,the_byte_array_should_be_the_same_length_as_the_pool_with_data,The following statement contains a magic number: i < 500
Magic Number,BufferManager.Tests,when_converting_to_a_byte_array,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_a_byte_array.cs,the_byte_array_should_be_the_same_length_as_the_pool_with_data,The following statement contains a magic number: Assert.AreEqual(500' pool.ToByteArray().Length);
Magic Number,BufferManager.Tests,when_converting_to_a_byte_array,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_a_byte_array.cs,the_byte_array_should_have_the_same_data_as_the_pool_with_multiple_buffers,The following statement contains a magic number: BufferPool pool = new BufferPool(5' BufferManager);
Magic Number,BufferManager.Tests,when_converting_to_a_byte_array,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_a_byte_array.cs,the_byte_array_should_have_the_same_data_as_the_pool_with_multiple_buffers,The following statement contains a magic number: pool[i] = (byte)(i % 255);
Magic Number,BufferManager.Tests,when_converting_to_a_byte_array,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_a_byte_array.cs,the_byte_array_should_have_the_same_data_as_the_pool_with_multiple_buffers,The following statement contains a magic number: i < 5000
Magic Number,BufferManager.Tests,when_converting_to_a_byte_array,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_a_byte_array.cs,the_byte_array_should_have_the_same_data_as_the_pool_with_multiple_buffers,The following statement contains a magic number: Assert.AreEqual((byte)(i % 255)' data[i]);
Magic Number,BufferManager.Tests,when_converting_to_a_byte_array,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_a_byte_array.cs,the_byte_array_should_have_the_same_data_as_the_pool_with_multiple_buffers,The following statement contains a magic number: i < 5000
Magic Number,BufferManager.Tests,when_converting_to_a_byte_array,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_a_byte_array.cs,the_byte_array_should_have_the_same_data_as_the_pool_with_a_single_buffer,The following statement contains a magic number: BufferPool pool = new BufferPool(5' BufferManager);
Magic Number,BufferManager.Tests,when_converting_to_a_byte_array,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_a_byte_array.cs,the_byte_array_should_have_the_same_data_as_the_pool_with_a_single_buffer,The following statement contains a magic number: pool[i] = (byte)(i % 255);
Magic Number,BufferManager.Tests,when_converting_to_a_byte_array,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_a_byte_array.cs,the_byte_array_should_have_the_same_data_as_the_pool_with_a_single_buffer,The following statement contains a magic number: i < 5
Magic Number,BufferManager.Tests,when_converting_to_a_byte_array,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_a_byte_array.cs,the_byte_array_should_have_the_same_data_as_the_pool_with_a_single_buffer,The following statement contains a magic number: Assert.AreEqual((byte)(i % 255)' data[i]);
Magic Number,BufferManager.Tests,when_converting_to_a_byte_array,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_converting_to_a_byte_array.cs,the_byte_array_should_have_the_same_data_as_the_pool_with_a_single_buffer,The following statement contains a magic number: i < 5
Magic Number,BufferManager.Tests,when_disposing_a_buffer_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_disposing_a_buffer_pool.cs,buffers_are_released_back_to_the_buffer_pool,The following statement contains a magic number: Assert.AreEqual(initial - 20' BufferManager.AvailableBuffers);
Magic Number,BufferManager.Tests,when_instantiating_a_bufferpool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_instantiating_a_bufferpool.cs,a_null_buffer_manager_throws_an_argumentnullexception,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => new BufferPool(12' null));
Magic Number,BufferManager.Tests,when_instantiating_a_bufferpool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_instantiating_a_bufferpool.cs,the_requested_buffers_should_be_removed_from_the_buffer_manager,The following statement contains a magic number: new BufferPool(10' BufferManager);
Magic Number,BufferManager.Tests,when_instantiating_a_bufferpool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_instantiating_a_bufferpool.cs,the_requested_buffers_should_be_removed_from_the_buffer_manager,The following statement contains a magic number: Assert.AreEqual(initialBuffers - 10' BufferManager.AvailableBuffers);
Magic Number,BufferManager.Tests,when_reading_data_in_a_bufferpool_via_indexer,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_data_in_a_bufferpool_via_indexer.cs,if_the_index_is_past_the_length_an_argumentoutofrangeexception_is_thrown,The following statement contains a magic number: var b = pool[3];
Magic Number,BufferManager.Tests,when_reading_from_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_from_the_stream.cs,position_is_incremented,The following statement contains a magic number: stream.Write(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_reading_from_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_from_the_stream.cs,position_is_incremented,The following statement contains a magic number: stream.Write(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_reading_from_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_from_the_stream.cs,position_is_incremented,The following statement contains a magic number: stream.Read(new byte[50]' 0' 50);
Magic Number,BufferManager.Tests,when_reading_from_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_from_the_stream.cs,position_is_incremented,The following statement contains a magic number: stream.Read(new byte[50]' 0' 50);
Magic Number,BufferManager.Tests,when_reading_from_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_from_the_stream.cs,position_is_incremented,The following statement contains a magic number: Assert.AreEqual(50' stream.Position);
Magic Number,BufferManager.Tests,when_reading_from_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_from_the_stream.cs,a_read_past_the_end_of_the_stream_returns_zero,The following statement contains a magic number: stream.Write(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_reading_from_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_from_the_stream.cs,a_read_past_the_end_of_the_stream_returns_zero,The following statement contains a magic number: stream.Write(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_reading_from_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_from_the_stream.cs,a_read_past_the_end_of_the_stream_returns_zero,The following statement contains a magic number: int read = stream.Read(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_reading_from_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_from_the_stream.cs,a_read_past_the_end_of_the_stream_returns_zero,The following statement contains a magic number: int read = stream.Read(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_reading_from_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_from_the_stream.cs,a_read_past_the_end_of_the_stream_returns_zero,The following statement contains a magic number: Assert.AreEqual(500' read);
Magic Number,BufferManager.Tests,when_reading_from_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_from_the_stream.cs,a_read_past_the_end_of_the_stream_returns_zero,The following statement contains a magic number: read = stream.Read(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_reading_from_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_from_the_stream.cs,a_read_past_the_end_of_the_stream_returns_zero,The following statement contains a magic number: read = stream.Read(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_reading_from_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_from_the_stream.cs,reading_from_the_stream_with_StreamCopyTo_returns_all_data,The following statement contains a magic number: int size = 20123;
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,an_offset_larger_than_the_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.ReadFrom(0' new byte[5]' 8' 3);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,an_offset_larger_than_the_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.ReadFrom(0' new byte[5]' 8' 3);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,an_offset_larger_than_the_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.ReadFrom(0' new byte[5]' 8' 3);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,a_count_larger_than_the_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.ReadFrom(0' new byte[5]' 3' 5);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,a_count_larger_than_the_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.ReadFrom(0' new byte[5]' 3' 5);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,a_count_larger_than_the_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.ReadFrom(0' new byte[5]' 3' 5);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,a_negative_count_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.ReadFrom(0' new byte[5]' 3' -1);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,a_negative_count_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.ReadFrom(0' new byte[5]' 3' -1);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,a_negative_offset_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.ReadFrom(0' new byte[5]' -1' 1);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,count_and_offset_together_lerger_than_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.ReadFrom(0' new byte[5]' 4' 2);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,count_and_offset_together_lerger_than_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.ReadFrom(0' new byte[5]' 4' 2);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,count_and_offset_together_lerger_than_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.ReadFrom(0' new byte[5]' 4' 2);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,reading_from_a_position_bigger_than_buffer_length_reads_nothing,The following statement contains a magic number: pool[0] = 12;
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,reading_from_a_position_bigger_than_buffer_length_reads_nothing,The following statement contains a magic number: pool[1] = 13;
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,reading_from_a_position_bigger_than_buffer_length_reads_nothing,The following statement contains a magic number: int read = pool.ReadFrom(3' new byte[5]' 0' 5);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,reading_from_a_position_bigger_than_buffer_length_reads_nothing,The following statement contains a magic number: int read = pool.ReadFrom(3' new byte[5]' 0' 5);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,reading_from_a_position_bigger_than_buffer_length_reads_nothing,The following statement contains a magic number: int read = pool.ReadFrom(3' new byte[5]' 0' 5);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,reading_from_a_position_plus_count_bigger_than_buffer_length_reads_the_right_amount,The following statement contains a magic number: pool[0] = 12;
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,reading_from_a_position_plus_count_bigger_than_buffer_length_reads_the_right_amount,The following statement contains a magic number: pool[1] = 13;
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,reading_from_a_position_plus_count_bigger_than_buffer_length_reads_the_right_amount,The following statement contains a magic number: int read = pool.ReadFrom(0' new byte[5]' 0' 5);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,reading_from_a_position_plus_count_bigger_than_buffer_length_reads_the_right_amount,The following statement contains a magic number: int read = pool.ReadFrom(0' new byte[5]' 0' 5);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,reading_from_a_position_plus_count_bigger_than_buffer_length_reads_the_right_amount,The following statement contains a magic number: Assert.AreEqual(read' 2);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_within_a_single_buffer_with_no_offset,The following statement contains a magic number: i < 255
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_within_a_single_buffer_with_no_offset,The following statement contains a magic number: byte[] buffer = new byte[255];
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_within_a_single_buffer_with_no_offset,The following statement contains a magic number: pool.ReadFrom(0' buffer' 0' 255);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_within_a_single_buffer_with_no_offset,The following statement contains a magic number: i < 255
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_from_multiple_buffers,The following statement contains a magic number: pool[i] = (byte)(i % 255);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_from_multiple_buffers,The following statement contains a magic number: i < 5000
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_from_multiple_buffers,The following statement contains a magic number: byte[] buffer = new byte[5000];
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_from_multiple_buffers,The following statement contains a magic number: pool.ReadFrom(0' buffer' 0' 5000);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_from_multiple_buffers,The following statement contains a magic number: Assert.AreEqual((byte)(i % 255)' buffer[i]);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_from_multiple_buffers,The following statement contains a magic number: i < 5000
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_using_an_offset,The following statement contains a magic number: pool[i] = (byte)(i - 5);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_using_an_offset,The following statement contains a magic number: i < 260
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_using_an_offset,The following statement contains a magic number: byte[] buffer = new byte[255];
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_using_an_offset,The following statement contains a magic number: pool.ReadFrom(5' buffer' 0' 255);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_using_an_offset,The following statement contains a magic number: pool.ReadFrom(5' buffer' 0' 255);
Magic Number,BufferManager.Tests,when_reading_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_reading_multiple_bytes.cs,can_read_using_an_offset,The following statement contains a magic number: i < 255
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,from_begin_sets_relative_to_beginning,The following statement contains a magic number: stream.Write(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,from_begin_sets_relative_to_beginning,The following statement contains a magic number: stream.Write(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,from_begin_sets_relative_to_beginning,The following statement contains a magic number: stream.Seek(22' SeekOrigin.Begin);
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,from_begin_sets_relative_to_beginning,The following statement contains a magic number: Assert.AreEqual(22' stream.Position);
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,from_end_sets_relative_to_end,The following statement contains a magic number: stream.Write(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,from_end_sets_relative_to_end,The following statement contains a magic number: stream.Write(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,from_end_sets_relative_to_end,The following statement contains a magic number: stream.Seek(-100' SeekOrigin.End);
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,from_end_sets_relative_to_end,The following statement contains a magic number: Assert.AreEqual(400' stream.Position);
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,from_current_sets_relative_to_current,The following statement contains a magic number: stream.Write(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,from_current_sets_relative_to_current,The following statement contains a magic number: stream.Write(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,from_current_sets_relative_to_current,The following statement contains a magic number: stream.Seek(-2' SeekOrigin.Current);
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,from_current_sets_relative_to_current,The following statement contains a magic number: Assert.AreEqual(499' stream.Position);
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,seeking_past_end_of_stream_throws_an_argumentexception,The following statement contains a magic number: stream.Write(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,seeking_past_end_of_stream_throws_an_argumentexception,The following statement contains a magic number: stream.Write(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_seeking_in_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_seeking_in_the_stream.cs,seeking_past_end_of_stream_throws_an_argumentexception,The following statement contains a magic number: stream.Seek(501' SeekOrigin.Begin);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_larger_length_makes_capacity_larger,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 1);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_larger_length_makes_capacity_larger,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 1);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_larger_length_makes_capacity_larger,The following statement contains a magic number: pool.SetLength(5000);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_larger_length_makes_capacity_larger,The following statement contains a magic number: Assert.AreNotEqual(5000' pool.Capacity);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,length_is_set_when_setting_length,The following statement contains a magic number: pool.SetLength(5000' false);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,length_is_set_when_setting_length,The following statement contains a magic number: Assert.AreEqual(5000' pool.Length);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_smaller_length_lowers_capacity,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 1);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_smaller_length_lowers_capacity,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 1);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_smaller_length_lowers_capacity,The following statement contains a magic number: BufferPool pool = new BufferPool(5' manager);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_smaller_length_lowers_capacity,The following statement contains a magic number: Assert.AreEqual(9' manager.AvailableBuffers);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_smaller_length_checks_buffers_back_in_when_allowed,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 1);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_smaller_length_checks_buffers_back_in_when_allowed,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 1);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_smaller_length_checks_buffers_back_in_when_allowed,The following statement contains a magic number: BufferPool pool = new BufferPool(5' manager);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_smaller_length_checks_buffers_back_in_when_allowed,The following statement contains a magic number: Assert.AreEqual(9' manager.AvailableBuffers);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_smaller_length_checks_buffers_back_in_when_not_allowed,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 1);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_smaller_length_checks_buffers_back_in_when_not_allowed,The following statement contains a magic number: global::BufferManager.BufferManager manager = new global::BufferManager.BufferManager(10' 1000' 1);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_smaller_length_checks_buffers_back_in_when_not_allowed,The following statement contains a magic number: BufferPool pool = new BufferPool(5' manager);
Magic Number,BufferManager.Tests,when_setting_the_length_of_the_pool,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_setting_the_length_of_the_pool.cs,a_smaller_length_checks_buffers_back_in_when_not_allowed,The following statement contains a magic number: Assert.AreEqual(5' manager.AvailableBuffers);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,an_offset_larger_than_the_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.Write(0' new byte[5]' 8' 3);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,an_offset_larger_than_the_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.Write(0' new byte[5]' 8' 3);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,an_offset_larger_than_the_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.Write(0' new byte[5]' 8' 3);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,a_count_larger_than_the_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.Write(0' new byte[5]' 3' 5);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,a_count_larger_than_the_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.Write(0' new byte[5]' 3' 5);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,a_count_larger_than_the_buffer_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.Write(0' new byte[5]' 3' 5);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,a_negative_count_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.Write(0' new byte[5]' 3' -1);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,a_negative_count_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.Write(0' new byte[5]' 3' -1);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,a_negative_offset_throws_an_argumentoutofrangeexception,The following statement contains a magic number: pool.Write(0' new byte[5]' -1' 1);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,length_is_updated_to_include_bytes_written,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,length_is_updated_to_include_bytes_written,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,length_is_updated_to_include_bytes_written,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,length_is_updated_to_include_bytes_written,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,length_is_updated_to_include_bytes_written,The following statement contains a magic number: Assert.IsTrue(pool.Length == 5);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,data_is_written_to_the_internal_buffer,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,data_is_written_to_the_internal_buffer,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,data_is_written_to_the_internal_buffer,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,data_is_written_to_the_internal_buffer,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,data_is_written_to_the_internal_buffer,The following statement contains a magic number: i < 5
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,pool_can_expand_capacity,The following statement contains a magic number: byte[] data = new byte[initialCapacity + 25];
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,pool_can_expand_capacity,The following statement contains a magic number: Assert.AreEqual(initialCapacity * 2' pool.Capacity);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_self_offset,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_self_offset,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_self_offset,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_self_offset,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_self_offset,The following statement contains a magic number: pool.Write(4' data' 0' 5);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_self_offset,The following statement contains a magic number: pool.Write(4' data' 0' 5);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_self_offset,The following statement contains a magic number: Assert.AreEqual(i - 3' pool[i]);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_self_offset,The following statement contains a magic number: i < 9
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_source_offset,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_source_offset,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_source_offset,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_source_offset,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5 };
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_source_offset,The following statement contains a magic number: pool.Write(0' data' 3' 2);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_source_offset,The following statement contains a magic number: pool.Write(0' data' 3' 2);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_source_offset,The following statement contains a magic number: Assert.AreEqual(pool[0]' 4);
Magic Number,BufferManager.Tests,when_writing_multiple_bytes,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_multiple_bytes.cs,can_write_given_a_source_offset,The following statement contains a magic number: Assert.AreEqual(pool[1]' 5);
Magic Number,BufferManager.Tests,when_writing_to_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_to_the_stream.cs,position_is_incremented,The following statement contains a magic number: stream.Write(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_writing_to_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_to_the_stream.cs,position_is_incremented,The following statement contains a magic number: stream.Write(new byte[500]' 0' 500);
Magic Number,BufferManager.Tests,when_writing_to_the_stream,D:\research\architectureSmells\repos\EventStore_buffer-manager\src\BufferManager.Tests\when_writing_to_the_stream.cs,position_is_incremented,The following statement contains a magic number: Assert.AreEqual(500' stream.Position);
