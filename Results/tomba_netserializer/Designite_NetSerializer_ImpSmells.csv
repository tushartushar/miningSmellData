Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NetSerializer,GenericSerializer,C:\repos\tomba_netserializer\NetSerializer\TypeSerializers\GenericSerializer.cs,GenerateWriterMethod,Cyclomatic complexity of the method is 8
Complex Method,NetSerializer,GenericSerializer,C:\repos\tomba_netserializer\NetSerializer\TypeSerializers\GenericSerializer.cs,GenerateReaderMethod,Cyclomatic complexity of the method is 11
Complex Method,NetSerializer,Serializer,C:\repos\tomba_netserializer\NetSerializer\Serializer.cs,AddTypesInternal,Cyclomatic complexity of the method is 8
Complex Method,NetSerializer,Serializer,C:\repos\tomba_netserializer\NetSerializer\Serializer.cs,AddTypesInternal,Cyclomatic complexity of the method is 9
Long Identifier,NetSerializer,Settings,C:\repos\tomba_netserializer\NetSerializer\Settings.cs,,The length of the parameter SupportIDeserializationCallback is 31.
Long Statement,NetSerializer,GenericSerializer,C:\repos\tomba_netserializer\NetSerializer\TypeSerializers\GenericSerializer.cs,GenerateReaderMethod,The length of the statement  "				var guo = typeof(System.Runtime.Serialization.FormatterServices).GetMethod("GetUninitializedObject"' BindingFlags.Public | BindingFlags.Static); " is 144.
Long Statement,NetSerializer,Helpers,C:\repos\tomba_netserializer\NetSerializer\Helpers.cs,GetFieldInfos,The length of the statement  "			var fields = type.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly) " is 125.
Magic Number,NetSerializer,TypeIDList,C:\repos\tomba_netserializer\NetSerializer\TypeIDList.cs,NextPowOf2,The following statement contains a magic number: v |= v >> 2;
Magic Number,NetSerializer,TypeIDList,C:\repos\tomba_netserializer\NetSerializer\TypeIDList.cs,NextPowOf2,The following statement contains a magic number: v |= v >> 4;
Magic Number,NetSerializer,TypeIDList,C:\repos\tomba_netserializer\NetSerializer\TypeIDList.cs,NextPowOf2,The following statement contains a magic number: v |= v >> 8;
Magic Number,NetSerializer,TypeIDList,C:\repos\tomba_netserializer\NetSerializer\TypeIDList.cs,NextPowOf2,The following statement contains a magic number: v |= v >> 16;
Magic Number,NetSerializer,NullableSerializer,C:\repos\tomba_netserializer\NetSerializer\TypeSerializers\NullableSerializer.cs,GenerateWriterMethod,The following statement contains a magic number: il.Emit(OpCodes.Ldarga_S' 2);
Magic Number,NetSerializer,NullableSerializer,C:\repos\tomba_netserializer\NetSerializer\TypeSerializers\NullableSerializer.cs,GenerateWriterMethod,The following statement contains a magic number: il.Emit(OpCodes.Ldarga_S' 2);
Magic Number,NetSerializer,NullableSerializer,C:\repos\tomba_netserializer\NetSerializer\TypeSerializers\NullableSerializer.cs,GenerateWriterMethod,The following statement contains a magic number: il.Emit(OpCodes.Ldarga_S' 2);
Magic Number,NetSerializer,DictionarySerializer,C:\repos\tomba_netserializer\NetSerializer\TypeSerializers\DictionarySerializer.cs,GetGenWriter,The following statement contains a magic number: foreach (var mi in mis)  			{  				var p = mi.GetParameters();    				if (p.Length != 3)  					continue;    				if (p[1].ParameterType != typeof(Stream))  					continue;    				var paramType = p[2].ParameterType;    				if (paramType.IsGenericType == false)  					continue;    				var genParamType = paramType.GetGenericTypeDefinition();    				if (genType == genParamType)  					return mi;  			}
Magic Number,NetSerializer,DictionarySerializer,C:\repos\tomba_netserializer\NetSerializer\TypeSerializers\DictionarySerializer.cs,GetGenWriter,The following statement contains a magic number: foreach (var mi in mis)  			{  				var p = mi.GetParameters();    				if (p.Length != 3)  					continue;    				if (p[1].ParameterType != typeof(Stream))  					continue;    				var paramType = p[2].ParameterType;    				if (paramType.IsGenericType == false)  					continue;    				var genParamType = paramType.GetGenericTypeDefinition();    				if (genType == genParamType)  					return mi;  			}
Magic Number,NetSerializer,DictionarySerializer,C:\repos\tomba_netserializer\NetSerializer\TypeSerializers\DictionarySerializer.cs,GetGenReader,The following statement contains a magic number: foreach (var mi in mis)  			{  				var p = mi.GetParameters();    				if (p.Length != 3)  					continue;    				if (p[1].ParameterType != typeof(Stream))  					continue;    				var paramType = p[2].ParameterType;    				if (paramType.IsByRef == false)  					continue;    				paramType = paramType.GetElementType();    				if (paramType.IsGenericType == false)  					continue;    				var genParamType = paramType.GetGenericTypeDefinition();    				if (genType == genParamType)  					return mi;  			}
Magic Number,NetSerializer,DictionarySerializer,C:\repos\tomba_netserializer\NetSerializer\TypeSerializers\DictionarySerializer.cs,GetGenReader,The following statement contains a magic number: foreach (var mi in mis)  			{  				var p = mi.GetParameters();    				if (p.Length != 3)  					continue;    				if (p[1].ParameterType != typeof(Stream))  					continue;    				var paramType = p[2].ParameterType;    				if (paramType.IsByRef == false)  					continue;    				paramType = paramType.GetElementType();    				if (paramType.IsGenericType == false)  					continue;    				var genParamType = paramType.GetGenericTypeDefinition();    				if (genType == genParamType)  					return mi;  			}
Magic Number,NetSerializer,GenericSerializer,C:\repos\tomba_netserializer\NetSerializer\TypeSerializers\GenericSerializer.cs,EmitCallToSerializingCallback,The following statement contains a magic number: if (type.IsValueType)  				il.Emit(OpCodes.Ldarga_S' 2);  			else  				il.Emit(OpCodes.Ldarg_2);
Magic Number,NetSerializer,GenericSerializer,C:\repos\tomba_netserializer\NetSerializer\TypeSerializers\GenericSerializer.cs,GenerateWriterMethod,The following statement contains a magic number: foreach (var field in fields)  			{  				// Note: the user defined value type is not passed as reference. could cause perf problems with big structs    				var fieldType = field.FieldType;    				var data = serializer.GetIndirectData(fieldType);    				if (data.WriterNeedsInstance)  					il.Emit(OpCodes.Ldarg_0);    				il.Emit(OpCodes.Ldarg_1);  				if (type.IsValueType)  					il.Emit(OpCodes.Ldarga_S' 2);  				else  					il.Emit(OpCodes.Ldarg_2);  				il.Emit(OpCodes.Ldfld' field);    				il.Emit(OpCodes.Call' data.WriterMethodInfo);  			}
Magic Number,NetSerializer,TypeDictionary,C:\repos\tomba_netserializer\NetSerializer\TypeDictionary.cs,Add,The following statement contains a magic number: var newArr = new Pair[arr.Length * 2];
Magic Number,NetSerializer,Helpers,C:\repos\tomba_netserializer\NetSerializer\Helpers.cs,GenerateDynamicSerializerStub,The following statement contains a magic number: dm.DefineParameter(2' ParameterAttributes.None' "stream");
Magic Number,NetSerializer,Helpers,C:\repos\tomba_netserializer\NetSerializer\Helpers.cs,GenerateDynamicSerializerStub,The following statement contains a magic number: dm.DefineParameter(3' ParameterAttributes.None' "value");
Magic Number,NetSerializer,Helpers,C:\repos\tomba_netserializer\NetSerializer\Helpers.cs,GenerateDynamicDeserializerStub,The following statement contains a magic number: dm.DefineParameter(2' ParameterAttributes.None' "stream");
Magic Number,NetSerializer,Helpers,C:\repos\tomba_netserializer\NetSerializer\Helpers.cs,GenerateDynamicDeserializerStub,The following statement contains a magic number: dm.DefineParameter(3' ParameterAttributes.Out' "value");
Magic Number,NetSerializer,Helpers,C:\repos\tomba_netserializer\NetSerializer\Helpers.cs,GenerateStaticSerializerStub,The following statement contains a magic number: mb.DefineParameter(2' ParameterAttributes.None' "stream");
Magic Number,NetSerializer,Helpers,C:\repos\tomba_netserializer\NetSerializer\Helpers.cs,GenerateStaticSerializerStub,The following statement contains a magic number: mb.DefineParameter(3' ParameterAttributes.None' "value");
Magic Number,NetSerializer,Helpers,C:\repos\tomba_netserializer\NetSerializer\Helpers.cs,GenerateStaticDeserializerStub,The following statement contains a magic number: mb.DefineParameter(2' ParameterAttributes.None' "stream");
Magic Number,NetSerializer,Helpers,C:\repos\tomba_netserializer\NetSerializer\Helpers.cs,GenerateStaticDeserializerStub,The following statement contains a magic number: mb.DefineParameter(3' ParameterAttributes.Out' "value");
Magic Number,NetSerializer,Serializer,C:\repos\tomba_netserializer\NetSerializer\Serializer.cs,GenerateDebugStubs,The following statement contains a magic number: if (serializer is IStaticTypeSerializer)  			{  				var sts = (IStaticTypeSerializer)serializer;    				writer = sts.GetStaticWriter(type);  				reader = sts.GetStaticReader(type);    				writerNeedsInstance = writer.GetParameters().Length == 3;  				readerNeedsInstance = reader.GetParameters().Length == 3;  			}  			else if (serializer is IDynamicTypeSerializer)  			{  				writer = Helpers.GenerateStaticSerializerStub(tb' type);  				reader = Helpers.GenerateStaticDeserializerStub(tb' type);    				writerNeedsInstance = readerNeedsInstance = true;  			}  			else  			{  				throw new Exception();  			}
Magic Number,NetSerializer,Serializer,C:\repos\tomba_netserializer\NetSerializer\Serializer.cs,GenerateDebugStubs,The following statement contains a magic number: if (serializer is IStaticTypeSerializer)  			{  				var sts = (IStaticTypeSerializer)serializer;    				writer = sts.GetStaticWriter(type);  				reader = sts.GetStaticReader(type);    				writerNeedsInstance = writer.GetParameters().Length == 3;  				readerNeedsInstance = reader.GetParameters().Length == 3;  			}  			else if (serializer is IDynamicTypeSerializer)  			{  				writer = Helpers.GenerateStaticSerializerStub(tb' type);  				reader = Helpers.GenerateStaticDeserializerStub(tb' type);    				writerNeedsInstance = readerNeedsInstance = true;  			}  			else  			{  				throw new Exception();  			}
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,EncodeZigZag32,The following statement contains a magic number: return (uint)((n << 1) ^ (n >> 31));
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,EncodeZigZag64,The following statement contains a magic number: return (ulong)((n << 1) ^ (n >> 63));
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,ReadVarint32,The following statement contains a magic number: for (; offset < 32; offset += 7)  			{  				int b = stream.ReadByte();  				if (b == -1)  					throw new EndOfStreamException();    				result |= (b & 0x7f) << offset;    				if ((b & 0x80) == 0)  					return (uint)result;  			}
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,ReadVarint32,The following statement contains a magic number: for (; offset < 32; offset += 7)  			{  				int b = stream.ReadByte();  				if (b == -1)  					throw new EndOfStreamException();    				result |= (b & 0x7f) << offset;    				if ((b & 0x80) == 0)  					return (uint)result;  			}
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,WriteVarint32,The following statement contains a magic number: for (; value >= 0x80u; value >>= 7)  				stream.WriteByte((byte)(value | 0x80u));
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,ReadVarint64,The following statement contains a magic number: for (; offset < 64; offset += 7)  			{  				int b = stream.ReadByte();  				if (b == -1)  					throw new EndOfStreamException();    				result |= ((long)(b & 0x7f)) << offset;    				if ((b & 0x80) == 0)  					return (ulong)result;  			}
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,ReadVarint64,The following statement contains a magic number: for (; offset < 64; offset += 7)  			{  				int b = stream.ReadByte();  				if (b == -1)  					throw new EndOfStreamException();    				result |= ((long)(b & 0x7f)) << offset;    				if ((b & 0x80) == 0)  					return (ulong)result;  			}
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,WriteVarint64,The following statement contains a magic number: for (; value >= 0x80u; value >>= 7)  				stream.WriteByte((byte)(value | 0x80u));
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,WritePrimitive,The following statement contains a magic number: ulong mid = ((ulong)(uint)bits[1]) << 32;
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,WritePrimitive,The following statement contains a magic number: uint high = (uint)bits[2];
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,WritePrimitive,The following statement contains a magic number: uint scale = ((uint)bits[3] >> 15) & 0x01fe;
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,WritePrimitive,The following statement contains a magic number: uint scale = ((uint)bits[3] >> 15) & 0x01fe;
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,WritePrimitive,The following statement contains a magic number: uint sign = ((uint)bits[3]) >> 31;
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,WritePrimitive,The following statement contains a magic number: uint sign = ((uint)bits[3]) >> 31;
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,ReadPrimitive,The following statement contains a magic number: int scale = (int)((scaleSign & ~1) << 15);
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,ReadPrimitive,The following statement contains a magic number: int sign = (int)((scaleSign & 1) << 31);
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,ReadPrimitive,The following statement contains a magic number: if (arr == null)  				arr = s_decimalBitsArray = new int[4];
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,ReadPrimitive,The following statement contains a magic number: arr[1] = (int)(lowmid >> 32);
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,ReadPrimitive,The following statement contains a magic number: arr[2] = (int)high;
Magic Number,NetSerializer,Primitives,C:\repos\tomba_netserializer\NetSerializer\Primitives.cs,ReadPrimitive,The following statement contains a magic number: arr[3] = scale | sign;
