Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,EApp.Repositories.MongoDB,MongoDBRepository,D:\newReposJune17\TwoMaKing_EApp\EApp.Repositories.MongoDB\MongoDBRepository.cs,DoFindAll,The method has 5 parameters.
Long Statement,EApp.Repositories.MongoDB,MongoDBRepository,D:\newReposJune17\TwoMaKing_EApp\EApp.Repositories.MongoDB\MongoDBRepository.cs,DoFind,The length of the statement  "	return this.MongoDBRespositoryContext.MongoDatabase.GetCollection<TAggregateRoot> ().FindOne (specification.GetExpression ()); " is 126.
Long Statement,EApp.Repositories.MongoDB,MongoDBRepository,D:\newReposJune17\TwoMaKing_EApp\EApp.Repositories.MongoDB\MongoDBRepository.cs,DoFindAll,The length of the statement  "	IEnumerable<TAggregateRoot> aggregateRoots = this.MongoDBRespositoryContext.MongoDatabase.GetCollection<TAggregateRoot> ().Find (expression).Documents; " is 151.
Long Statement,EApp.Repositories.MongoDB,MongoDBRepository,D:\newReposJune17\TwoMaKing_EApp\EApp.Repositories.MongoDB\MongoDBRepository.cs,DoFindAll,The length of the statement  "		throw new ArgumentOutOfRangeException ("pageNumber"' pageNumber' "The pageNumber is one-based and should be larger than zero."); " is 128.
Long Statement,EApp.Repositories.MongoDB,MongoDBRepository,D:\newReposJune17\TwoMaKing_EApp\EApp.Repositories.MongoDB\MongoDBRepository.cs,DoFindAll,The length of the statement  "		throw new ArgumentOutOfRangeException ("pageSize"' pageSize' "The pageSize is one-based and should be larger than zero."); " is 122.
Long Statement,EApp.Repositories.MongoDB,MongoDBRepository,D:\newReposJune17\TwoMaKing_EApp\EApp.Repositories.MongoDB\MongoDBRepository.cs,DoFindAll,The length of the statement  "	IEnumerable<TAggregateRoot> aggregateRoots = this.MongoDBRespositoryContext.MongoDatabase.GetCollection<TAggregateRoot> ().Find (expression).Documents; " is 151.
Long Statement,EApp.Repositories.MongoDB,MongoDBRepository,D:\newReposJune17\TwoMaKing_EApp\EApp.Repositories.MongoDB\MongoDBRepository.cs,DoFindAll,The length of the statement  "	IOrderedEnumerable<TAggregateRoot> orderedAggregateRoots = aggregateRoots.SortBy<TAggregateRoot' dynamic> (sortPredicate.Compile ()' sortOrder); " is 144.
Long Statement,EApp.Repositories.MongoDB,MongoDBRepository,D:\newReposJune17\TwoMaKing_EApp\EApp.Repositories.MongoDB\MongoDBRepository.cs,DoFindAll,The length of the statement  "	return new PagingResult<TAggregateRoot> (totalRecords' totalPages' pageNumber' pageSize' pagedAggregateRoots.Select (aggregateRoot => aggregateRoot).ToList ()); " is 160.
Long Statement,EApp.Repositories.MongoDB,MongoDBRepositoryContext,D:\newReposJune17\TwoMaKing_EApp\EApp.Repositories.MongoDB\MongoDBRepositoryContext.cs,CreateRepository,The length of the statement  "	IEnumerable<Type> repositoryTypesMapTo = EAppRuntime.Instance.CurrentApp.ObjectContainer.TypesMapTo.Where (t => typeof(MongoDBRepository<TAggregateRoot>).IsAssignableFrom (t)); " is 176.
Long Statement,EApp.Repositories.MongoDB,MongoDBRepositoryContext,D:\newReposJune17\TwoMaKing_EApp\EApp.Repositories.MongoDB\MongoDBRepositoryContext.cs,CreateRepository,The length of the statement  "	IUnityContainer unityContainer = EAppRuntime.Instance.CurrentApp.ObjectContainer.GetWrapperContainer<IUnityContainer> (); " is 121.
Long Statement,EApp.Repositories.MongoDB,MongoDBRepositoryContext,D:\newReposJune17\TwoMaKing_EApp\EApp.Repositories.MongoDB\MongoDBRepositoryContext.cs,CreateRepository,The length of the statement  "	return (IRepository<TAggregateRoot>)unityContainer.Resolve (repositoryType' new DependencyOverride<IRepositoryContext> (this)); " is 127.
