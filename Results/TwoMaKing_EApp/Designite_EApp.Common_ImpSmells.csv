Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EApp.Common.IO,FileSeracher,C:\repos\TwoMaKing_EApp\EApp.Common\IO\FileSeracher.cs,SearchFiles,Cyclomatic complexity of the method is 14
Complex Method,EApp.Common.Reflection,ReflectionHelper,C:\repos\TwoMaKing_EApp\EApp.Common\Reflection\ReflectionHelper.cs,FindIEnumerable,Cyclomatic complexity of the method is 10
Complex Method,EApp.Common.Util,ArrayUtils,C:\repos\TwoMaKing_EApp\EApp.Common\Util\ArrayUtils.cs,EqualsStringArray,Cyclomatic complexity of the method is 8
Complex Method,EApp.Common.Util,CommonUtils,C:\repos\TwoMaKing_EApp\EApp.Common\Util\CommonUtils.cs,GetType,Cyclomatic complexity of the method is 8
Long Parameter List,EApp.Common.Query,QueryBuilderExtension,C:\repos\TwoMaKing_EApp\EApp.Common\Query\QueryBuilderExtension.cs,IfThenElse,The method has 5 parameters. Parameters: queryBuilder' test' ifTrue' ifFalse' isOr
Long Parameter List,EApp.Common.Query,QueryBuilderExtension,C:\repos\TwoMaKing_EApp\EApp.Common\Query\QueryBuilderExtension.cs,IfThenElse,The method has 5 parameters. Parameters: queryBuilder' test' ifTrue' ifFalse' isOr
Long Parameter List,EApp.Common.Win32API,Win32API,C:\repos\TwoMaKing_EApp\EApp.Common\Win32API\Win32API.cs,CreateRoundRectRgn,The method has 6 parameters. Parameters: x1' y1' x2' y2' x3' y3
Long Statement,EApp.Common.IO,FileSeracher,C:\repos\TwoMaKing_EApp\EApp.Common\IO\FileSeracher.cs,SearchFiles,The length of the statement  "            string[] files = Directory.GetFiles(this.searchCriteria.DirectoryPath' this.searchCriteria.SearchPatternName' SearchOption.AllDirectories); " is 139.
Long Statement,EApp.Common.Query,QueryBuilder<T>,C:\repos\TwoMaKing_EApp\EApp.Common\Query\QueryBuilder.cs,Filter,The length of the statement  "            Expression leftExpression = expressionBuilder.Create<TPropertyType>(propertyExpression' Operator.GreaterThanEqual' minValue); " is 125.
Long Statement,EApp.Common.Query,QueryBuilder<T>,C:\repos\TwoMaKing_EApp\EApp.Common\Query\QueryBuilder.cs,Filter,The length of the statement  "            Expression rightExpression = expressionBuilder.Create<TPropertyType>(propertyExpression' Operator.LessThanEqual' maxValue); " is 123.
Long Statement,EApp.Common.Query,QueryBuilderExtension,C:\repos\TwoMaKing_EApp\EApp.Common\Query\QueryBuilderExtension.cs,Switch,The length of the statement  "                SwitchCase switchCaseExpression = Expression.SwitchCase(Expression.Constant(switchCaseTestValuePair.Value.QueryPredicate)' " is 122.
Long Statement,EApp.Common.Query,QueryBuilderExtension,C:\repos\TwoMaKing_EApp\EApp.Common\Query\QueryBuilderExtension.cs,Switch,The length of the statement  "                SwitchCase switchCaseExpression = Expression.SwitchCase(Expression.Constant(switchCaseTestValuePair.Value.QueryPredicate)' " is 122.
Long Statement,EApp.Common.Query,QueryBuilderExtension,C:\repos\TwoMaKing_EApp\EApp.Common\Query\QueryBuilderExtension.cs,SwitchOrderBy,The length of the statement  "            foreach (KeyValuePair<TSwitchValueType' Expression<Func<T' dynamic>>> switchCaseTestValuePair in orderingPredicateCases) " is 120.
Long Statement,EApp.Common.Reflection,Reflector,C:\repos\TwoMaKing_EApp\EApp.Common\Reflection\Reflector.cs,InitializeProperties,The length of the statement  "                foreach (MemberInfo member in this.objectType.GetMembers(BindingFlags.Instance | BindingFlags.Public | BindingFlags.GetField | BindingFlags.SetField)) " is 150.
Long Statement,EApp.Common.Reflection,Reflector,C:\repos\TwoMaKing_EApp\EApp.Common\Reflection\Reflector.cs,InitializeFields,The length of the statement  "                foreach (MemberInfo member in this.objectType.GetMembers(BindingFlags.Instance | BindingFlags.Public | BindingFlags.GetField | BindingFlags.SetField)) " is 150.
Long Statement,EApp.Common.Serialization,ObjectSerializerFactory,C:\repos\TwoMaKing_EApp\EApp.Common\Serialization\ObjectSerializerFactory.cs,GetObjectSerializer,The length of the statement  "            string objectSerializerTypeName = EAppRuntime.Instance.CurrentApp.ConfigSource.Config.SerializationFormats[serializerName].Type; " is 128.
Long Statement,EApp.Common.Serialization,SerializationManager,C:\repos\TwoMaKing_EApp\EApp.Common\Serialization\SerializationManager.cs,RegisterSerializeHandler,The length of the statement  "                handlers.Add(type' new KeyValuePair<TypeSerializeHandler' TypeDeserializeHandler>(serializeHandler' deserializeHandler)); " is 121.
Long Statement,EApp.Common.Serialization,SerializationManager,C:\repos\TwoMaKing_EApp\EApp.Common\Serialization\SerializationManager.cs,InitDefaultSerializeHandlers,The length of the statement  "            RegisterSerializeHandler(typeof(byte[])' new TypeSerializeHandler(ByteArrayToString)' new TypeDeserializeHandler(LoadByteArray)); " is 129.
Long Statement,EApp.Common.Serialization,SerializationManager,C:\repos\TwoMaKing_EApp\EApp.Common\Serialization\SerializationManager.cs,InitDefaultSerializeHandlers,The length of the statement  "            RegisterSerializeHandler(typeof(DateTime)' new TypeSerializeHandler(ToString)' new TypeDeserializeHandler(LoadDateTime)); " is 121.
Empty Catch Block,EApp.Common.Serialization,SerializationManager,C:\repos\TwoMaKing_EApp\EApp.Common\Serialization\SerializationManager.cs,Deserialize,The method has an empty catch block.
Empty Catch Block,EApp.Common.Serialization,SerializationManager,C:\repos\TwoMaKing_EApp\EApp.Common\Serialization\SerializationManager.cs,Deserialize,The method has an empty catch block.
Empty Catch Block,EApp.Common.Util,CommonUtils,C:\repos\TwoMaKing_EApp\EApp.Common\Util\CommonUtils.cs,GetType,The method has an empty catch block.
Empty Catch Block,EApp.Common.Util,CommonUtils,C:\repos\TwoMaKing_EApp\EApp.Common\Util\CommonUtils.cs,GetType,The method has an empty catch block.
Empty Catch Block,EApp.Common.Util,CommonUtils,C:\repos\TwoMaKing_EApp\EApp.Common\Util\CommonUtils.cs,GetType,The method has an empty catch block.
Magic Number,EApp.Common.AsynComponent,AsyncTask,C:\repos\TwoMaKing_EApp\EApp.Common\AsynComponent\AsyncTask.cs,ReportProgress,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,EApp.Common.IO,FileUtil,C:\repos\TwoMaKing_EApp\EApp.Common\IO\FileUtil.cs,WriteBytesToFile,The following statement contains a magic number: try              {                  byte[] buffer = new byte[BUFFER_SIZE * 4];                    fileStream = new FileStream(path' FileMode.OpenOrCreate' FileAccess.Write' FileShare.ReadWrite);                    memStream.Seek(0' SeekOrigin.Begin);                    int position = memStream.Read(buffer' 0' BUFFER_SIZE);                    while (position > 0)                  {                      fileStream.Write(buffer' 0' position);                        position = memStream.Read(buffer' 0' BUFFER_SIZE);                  }                    fileStream.Flush();              }              catch              {                  throw;              }              finally              {                  if (memStream != null)                  {                      memStream.Close();                  }                    if (fileStream != null)                  {                      fileStream.Close();                  }              }
Magic Number,EApp.Common.IO,FileUtil,C:\repos\TwoMaKing_EApp\EApp.Common\IO\FileUtil.cs,ReadStreamToBytes,The following statement contains a magic number: try              {                  byte[] buffer = new byte[BUFFER_SIZE * 4];                    memStream = new MemoryStream();                    int position = stream.Read(buffer' 0' BUFFER_SIZE);                    while (position > 0)                  {                      memStream.Write(buffer' 0' position);                        position = stream.Read(buffer' 0' BUFFER_SIZE);                  }                    memStream.Flush();                    return memStream.ToArray();              }              catch              {                  throw;              }              finally              {                  if (memStream != null)                  {                      memStream.Close();                  }                    if (stream != null)                  {                      stream.Close();                  }              }
Magic Number,EApp.Common.IO,FileUtil,C:\repos\TwoMaKing_EApp\EApp.Common\IO\FileUtil.cs,ReadFileToBytes,The following statement contains a magic number: try              {                  byte[] buffer = new byte[BUFFER_SIZE * 4];                    memStream = new MemoryStream();                    fileStream = new FileStream(path' FileMode.OpenOrCreate' FileAccess.Read' FileShare.ReadWrite);                    int position = fileStream.Read(buffer' 0' BUFFER_SIZE);                    while (position > 0)                  {                      memStream.Write(buffer' 0' position);                        position = fileStream.Read(buffer' 0' BUFFER_SIZE);                  }                    memStream.Flush();                    return memStream.ToArray();              }              catch              {                  throw;              }              finally              {                  if (memStream != null)                  {                      memStream.Close();                  }                    if (fileStream != null)                  {                      fileStream.Close();                  }              }
Magic Number,EApp.Common.IO,FileUtil,C:\repos\TwoMaKing_EApp\EApp.Common\IO\FileUtil.cs,ReadFileToFile,The following statement contains a magic number: try              {                  byte[] buffer = new byte[BUFFER_SIZE * 4];                    sourceFileStream = new FileStream(sourceFilePath' FileMode.OpenOrCreate' FileAccess.Read' FileShare.ReadWrite);                    targetFileStream = new FileStream(targetFilePath' FileMode.OpenOrCreate' FileAccess.Write' FileShare.ReadWrite);                    sourceFileStream.Seek(0' SeekOrigin.Begin);                    int position = sourceFileStream.Read(buffer' 0' BUFFER_SIZE);                    while (position > 0)                  {                      targetFileStream.Write(buffer' 0' position);                        position = sourceFileStream.Read(buffer' 0' BUFFER_SIZE);                  }                    targetFileStream.Flush();              }              catch              {                  throw;              }              finally              {                  if (targetFileStream != null)                  {                      targetFileStream.Close();                  }                    if (targetFileStream != null)                  {                      targetFileStream.Close();                  }              }
Magic Number,EApp.Common.Util,LocalizationUtils,C:\repos\TwoMaKing_EApp\EApp.Common\Util\LocalizationUtils.cs,FormatRateToString,The following statement contains a magic number: decimal tempRateValue = rateValue.Value * 100;
Magic Number,EApp.Common.Util,LocalizationUtils,C:\repos\TwoMaKing_EApp\EApp.Common\Util\LocalizationUtils.cs,FormatStringToRate,The following statement contains a magic number: lock (lockObj)              {                  numberFormat.NumberDecimalDigits = 2;                    retDecimal = decimal.Parse(rateString.Trim()' numberFormat);              }
Magic Number,EApp.Common.Util,LocalizationUtils,C:\repos\TwoMaKing_EApp\EApp.Common\Util\LocalizationUtils.cs,FormatStringToRate,The following statement contains a magic number: return FormatTo4Decimals(retDecimal / 100);
Magic Number,EApp.Common.Util,LocalizationUtils,C:\repos\TwoMaKing_EApp\EApp.Common\Util\LocalizationUtils.cs,FormatTo2Decimals,The following statement contains a magic number: return FormatToDecimals(originalValue' 2);
Magic Number,EApp.Common.Util,LocalizationUtils,C:\repos\TwoMaKing_EApp\EApp.Common\Util\LocalizationUtils.cs,FormatTo4Decimals,The following statement contains a magic number: return FormatToDecimals(originalValue' 4);
Magic Number,EApp.Common.Util,LocalizationUtils,C:\repos\TwoMaKing_EApp\EApp.Common\Util\LocalizationUtils.cs,FormatStringTo2Decimal,The following statement contains a magic number: return FormatStringToDecimal(decimalString' 2);
Magic Number,EApp.Common.Util,LocalizationUtils,C:\repos\TwoMaKing_EApp\EApp.Common\Util\LocalizationUtils.cs,FormatStringTo4Decimal,The following statement contains a magic number: return FormatStringToDecimal(decimalString' 4);
Magic Number,EApp.Common.Util,LocalizationUtils,C:\repos\TwoMaKing_EApp\EApp.Common\Util\LocalizationUtils.cs,FormatStringTo6Decimal,The following statement contains a magic number: return FormatStringToDecimal(decimalString' 6);
Magic Number,EApp.Common.Encrypt,DESEncrypt,C:\repos\TwoMaKing_EApp\EApp.Common\Encrypt\DESEncrypt.cs,Encrypt,The following statement contains a magic number: try              {                  byte[] rgbKey = Encoding.UTF8.GetBytes(encryptKey.Substring(0' 8));                  byte[] rgbIV = rgbKey;                  byte[] inputByteArray = Encoding.UTF8.GetBytes(encryptString);                  DESCryptoServiceProvider dCSP = new DESCryptoServiceProvider();                  MemoryStream memStream = new MemoryStream();                  CryptoStream cryptoStream = new CryptoStream(memStream' dCSP.CreateEncryptor(rgbKey' rgbIV)' CryptoStreamMode.Write);                  cryptoStream.Write(inputByteArray' 0' inputByteArray.Length);                  cryptoStream.FlushFinalBlock();                  return Convert.ToBase64String(memStream.ToArray());              }              catch              {                  return encryptString;              }
Magic Number,EApp.Common.Encrypt,DESEncrypt,C:\repos\TwoMaKing_EApp\EApp.Common\Encrypt\DESEncrypt.cs,Decrypt,The following statement contains a magic number: try              {                  byte[] rgbKey = Encoding.UTF8.GetBytes(encryptKey.Substring(0' 8));                  byte[] rgbIV = rgbKey;                  byte[] inputByteArray = Convert.FromBase64String(decryptString);                  DESCryptoServiceProvider DCSP = new DESCryptoServiceProvider();                  MemoryStream memStream = new MemoryStream();                  CryptoStream cryptoStream = new CryptoStream(memStream' DCSP.CreateDecryptor(rgbKey' rgbIV)' CryptoStreamMode.Write);                  cryptoStream.Write(inputByteArray' 0' inputByteArray.Length);                  cryptoStream.FlushFinalBlock();                  return Encoding.UTF8.GetString(memStream.ToArray());              }              catch              {                  return decryptString;              }
Magic Number,EApp.Common.Win32API,Win32WindowHandler,C:\repos\TwoMaKing_EApp\EApp.Common\Win32API\Win32WindowHandler.cs,SetFormRoundRectRgn,The following statement contains a magic number: hRgn = Win32API.CreateRoundRectRgn(-1' -1' control.Width + 2' control.Height + 2' radius' radius);
Magic Number,EApp.Common.Win32API,Win32WindowHandler,C:\repos\TwoMaKing_EApp\EApp.Common\Win32API\Win32WindowHandler.cs,SetFormRoundRectRgn,The following statement contains a magic number: hRgn = Win32API.CreateRoundRectRgn(-1' -1' control.Width + 2' control.Height + 2' radius' radius);
Missing Default,EApp.Common.Reflection,ReflectionService,C:\repos\TwoMaKing_EApp\EApp.Common\Reflection\ReflectionService.cs,GetMemberType,The following switch statement is missing a default case: switch (member.MemberType)              {                  case MemberTypes.Field: return (member as FieldInfo).FieldType;                  case MemberTypes.Property: return (member as PropertyInfo).PropertyType;                  case MemberTypes.Method: return (member as MethodInfo).ReturnType;              }
