Implementation smell,Namespace,Class,File,Method,Description
Long Method,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The method has 119 lines of code.
Long Method,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The method has 118 lines of code.
Long Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The method has 122 lines of code.
Long Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,NextToken,The method has 200 lines of code.
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseComparison,Cyclomatic complexity of the method is 15
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseIntegerLiteral,Cyclomatic complexity of the method is 8
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseIdentifier,Cyclomatic complexity of the method is 10
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseMemberAccess,Cyclomatic complexity of the method is 10
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,PromoteExpression,Cyclomatic complexity of the method is 12
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseNumber,Cyclomatic complexity of the method is 22
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,Cyclomatic complexity of the method is 14
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,CompareConversions,Cyclomatic complexity of the method is 8
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,NextToken,Cyclomatic complexity of the method is 36
Long Parameter List,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,CheckAndPromoteOperands,The method has 5 parameters. Parameters: signatures' opName' left' right' errorPos
Long Parameter List,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,FindMethod,The method has 5 parameters. Parameters: type' methodName' staticAccess' args' method
Long Identifier,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The length of the parameter annualPriceOrderPredicateCases is 30.
Long Identifier,System.Linq.Dynamic,Res,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,,The length of the parameter AmbiguousConstructorInvocation is 30.
Long Statement,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The length of the statement  "            //Create Instance 3: DbGateway db = new DbGateway(DatabaseType.SqlServer' "server=localhost\OSPTTESTDEV;database=TESTDB;User ID=sa;Password=sa"); " is 145.
Long Statement,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,GetOrderByQueryRequest,The length of the statement  "            //// ExpandoObject implements the IDictionary<string' object> interface so it can be casted to IDictionary<string' object> " is 122.
Long Statement,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,GetOrderByQueryRequest,The length of the statement  "            //System.Reflection.PropertyInfo[] properties = typeof(OrderQueryRequest).GetProperties(System.Reflection.BindingFlags.Public |  " is 127.
Long Statement,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,GetOrderByQueryRequest,The length of the statement  "            //Expression pe = Expression.Call(instance' orderQueryRequestType.GetProperty("Id").GetSetMethod()' Expression.Constant(1000)); " is 127.
Complex Conditional,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseComparison,The conditional expression  "token.id == TokenId.Equal || token.id == TokenId.DoubleEqual ||                  token.id == TokenId.ExclamationEqual || token.id == TokenId.LessGreater ||                  token.id == TokenId.GreaterThan || token.id == TokenId.GreaterThanEqual ||                  token.id == TokenId.LessThan || token.id == TokenId.LessThanEqual"  is complex.
Complex Conditional,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseMultiplicative,The conditional expression  "token.id == TokenId.Asterisk || token.id == TokenId.Slash ||                  token.id == TokenId.Percent || TokenIdentifierIs("mod")"  is complex.
Complex Conditional,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GenerateConversion,The conditional expression  "(IsNumericType(exprType) || IsEnumType(exprType)) &&                      (IsNumericType(type)) || IsEnumType(type)"  is complex.
Complex Conditional,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GenerateConversion,The conditional expression  "exprType.IsAssignableFrom(type) || type.IsAssignableFrom(exprType) ||                  exprType.IsInterface || type.IsInterface"  is complex.
Magic Number,Xpress.Mvc.Controllers,CostController,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Controllers\CostController.cs,AddCost,The following statement contains a magic number: i <5
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: line.Id = i + 1000;
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: line.Type = (i % 2 == 0) ? "Annual" : "Non-Annual";
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: i < 10
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: DbGateway.Default.Delete("user"'                       "user_id > @user_id and user_email = @user_email"'                      new object[] { 1000' "airsoft_ft@126.com" }' trans);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: index < 10
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: DbGateway.Default.Update("user"'                                           new string[] { "user_nick_name" }'                                           new object[] { "卡洛斯" }'                                           "user_id=@id"'                                           new object[] { 1000 }'                                           trans);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: DbGateway.Default.ExecuteNonQuery("update [user] set [user_email]=@email where [user_id]=@id"'                                                    new object[] {"119075838@qq.com"' 1000 }'                                                     trans);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: DataSet ds = DbGateway.Default.ExecuteDataSet(userQuerySql' new object[] { 1000 });
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: product.Id = i + 1000;
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: product.Quotation.StartingPrice = 1000 + i;
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: product.AnnualQuotation.StartingPrice = 5000 + i;
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: product.Type = (i % 2 == 0) ? productType.Annual :                                                productType.NonAnnual;
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: i < 10
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: annualPriceOrderPredicateCases.Add(2' (p)=>p.RecommandLevel);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: annualPriceSortOrderCases.Add(2' SortOrder.Descending);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: nonAnnualOrderPredicateCases.Add(2' p => p.Quotation != null ? p.Quotation.StartingPrice : p.Id);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: nonAnnualOrderPredicateCases.Add(3' p => p.RecommandLevel);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: nonAnnualPriceSortOrderCases.Add(2' SortOrder.Descending);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: annualPriceCases.Add(1' p => p.Quotation.StartingPrice > 1003);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: annualPriceCases.Add(2' p => p.Quotation.StartingPrice > 1004);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: annualPriceCases.Add(2' p => p.Quotation.StartingPrice > 1004);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: IList<Product> pList2 = qb.Filter(p => p.Id > 1000).                                     And(p => p.Quotation.StartingPrice > 1002).                                     OrderBy(p=>p.AnnualQuotation.StartingPrice).                                     ToList(productList.AsQueryable());
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: IList<Product> pList2 = qb.Filter(p => p.Id > 1000).                                     And(p => p.Quotation.StartingPrice > 1002).                                     OrderBy(p=>p.AnnualQuotation.StartingPrice).                                     ToList(productList.AsQueryable());
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The following statement contains a magic number: IDataReader reader = sqlQuery.From("post")                   .Equals("post_id"' 1000)                   .GreaterThan("post_id"' 1005' true)                   .Contains("post_content "' "AAAAAA")                   .OrderBy("post_id"' SortOrder.Descending)                   .OrderBy("post_creation_datetime"' SortOrder.Descending)                   .GroupBy(new string[] { "post_id"' "post_author_id"' "post_content"' "post_creation_datetime" })                   .Select("post_id"' "post_author_id"' "post_content").ExecuteReader(DbGateway.Default);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The following statement contains a magic number: IDataReader reader = sqlQuery.From("post")                   .Equals("post_id"' 1000)                   .GreaterThan("post_id"' 1005' true)                   .Contains("post_content "' "AAAAAA")                   .OrderBy("post_id"' SortOrder.Descending)                   .OrderBy("post_creation_datetime"' SortOrder.Descending)                   .GroupBy(new string[] { "post_id"' "post_author_id"' "post_content"' "post_creation_datetime" })                   .Select("post_id"' "post_author_id"' "post_content").ExecuteReader(DbGateway.Default);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The following statement contains a magic number: IDataReader reader = sqlQuery.From("post")                                      .Max("post_topic_id")                                      .Min("post_id")                                      .Sum("post_author_id")                                      .Count("*")                                      .Distinct()                                      .Top(3).GroupBy(new string[] { "post_id" }).ExecuteReader(DbGateway.Default);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The following statement contains a magic number: string postAuthorId = reader[2].ToString();
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The following statement contains a magic number: IDataReader reader = sqlQuery.From("post")                                      .InnerJoin("topic"' "post_topic_id"' "topic_id")                                      .LeftOuterJoin("[user]"' "post_author_id"' "user_id")                                      .LessThanEquals("post_id"' 1008)                                      .Select("post_id"' "topic_name"' "user_name")                                      .OrderBy("post_id"' SortOrder.Descending)                                      .GroupBy(new string[] { "post_id"' "topic_name"' "user_name" })                                      .ExecuteReader(DbGateway.Default);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The following statement contains a magic number: string postAuthorId = reader[2].ToString();
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQueryPaging_Click,The following statement contains a magic number: IDataReader pagingReader = DbGateway.Default.SelectReader("post"'                                                     new string[] { "post_id"' "post_topic_id"' "post_author_id"' "post_content"' "post_creation_datetime" }'                                                     "post_topic_id=@post_topic_id and post_creation_datetime<@post_creation_datetime"'                                                      new object[] { 1000' "2015-1-22" }'                                                     "post_creation_datetime desc"'                                                      null'                                                      3'                                                      3'                                                     "post_creation_datetime");
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQueryPaging_Click,The following statement contains a magic number: IDataReader pagingReader = DbGateway.Default.SelectReader("post"'                                                     new string[] { "post_id"' "post_topic_id"' "post_author_id"' "post_content"' "post_creation_datetime" }'                                                     "post_topic_id=@post_topic_id and post_creation_datetime<@post_creation_datetime"'                                                      new object[] { 1000' "2015-1-22" }'                                                     "post_creation_datetime desc"'                                                      null'                                                      3'                                                      3'                                                     "post_creation_datetime");
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQueryPaging_Click,The following statement contains a magic number: IDataReader pagingReader = DbGateway.Default.SelectReader("post"'                                                     new string[] { "post_id"' "post_topic_id"' "post_author_id"' "post_content"' "post_creation_datetime" }'                                                     "post_topic_id=@post_topic_id and post_creation_datetime<@post_creation_datetime"'                                                      new object[] { 1000' "2015-1-22" }'                                                     "post_creation_datetime desc"'                                                      null'                                                      3'                                                      3'                                                     "post_creation_datetime");
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQueryPaging_Click,The following statement contains a magic number: string postAuthorId = pagingReader[2].ToString();
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point(12' 12);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point(12' 12);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(780' 186);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(780' 186);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnAddNew.Location = new System.Drawing.Point(12' 215);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnAddNew.Location = new System.Drawing.Point(12' 215);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnAddNew.Size = new System.Drawing.Size(75' 23);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnAddNew.Size = new System.Drawing.Size(75' 23);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnExport.Location = new System.Drawing.Point(12' 268);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnExport.Location = new System.Drawing.Point(12' 268);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnExport.Size = new System.Drawing.Size(163' 23);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnExport.Size = new System.Drawing.Size(163' 23);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnExport.TabIndex = 2;
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.rbMessage.Location = new System.Drawing.Point(12' 297);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.rbMessage.Location = new System.Drawing.Point(12' 297);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.rbMessage.Size = new System.Drawing.Size(780' 241);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.rbMessage.Size = new System.Drawing.Size(780' 241);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.rbMessage.TabIndex = 3;
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(181' 268);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(181' 268);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(143' 23);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(143' 23);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.TabIndex = 4;
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQuery.Location = new System.Drawing.Point(93' 215);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQuery.Location = new System.Drawing.Point(93' 215);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQuery.Size = new System.Drawing.Size(136' 23);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQuery.Size = new System.Drawing.Size(136' 23);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQuery.TabIndex = 6;
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderQuery.Location = new System.Drawing.Point(236' 215);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderQuery.Location = new System.Drawing.Point(236' 215);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderQuery.Size = new System.Drawing.Size(122' 23);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderQuery.Size = new System.Drawing.Size(122' 23);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderQuery.TabIndex = 7;
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQueryPaging.Location = new System.Drawing.Point(364' 215);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQueryPaging.Location = new System.Drawing.Point(364' 215);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQueryPaging.Size = new System.Drawing.Size(135' 23);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQueryPaging.Size = new System.Drawing.Size(135' 23);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQueryPaging.TabIndex = 8;
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderEntityMappingXml.Location = new System.Drawing.Point(364' 253);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderEntityMappingXml.Location = new System.Drawing.Point(364' 253);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderEntityMappingXml.Size = new System.Drawing.Size(202' 23);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderEntityMappingXml.Size = new System.Drawing.Size(202' 23);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderEntityMappingXml.TabIndex = 9;
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(804' 550);
Magic Number,Xpress.Mvc,Cost,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(804' 550);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(12' 12);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(12' 12);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(691' 356);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(691' 356);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.txtName.Location = new System.Drawing.Point(123' 31);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.txtName.Location = new System.Drawing.Point(123' 31);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.txtName.Size = new System.Drawing.Size(287' 20);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.txtName.Size = new System.Drawing.Size(287' 20);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.cmbType.Location = new System.Drawing.Point(123' 70);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.cmbType.Location = new System.Drawing.Point(123' 70);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.cmbType.Size = new System.Drawing.Size(287' 21);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.cmbType.Size = new System.Drawing.Size(287' 21);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.checkedListBox1.Location = new System.Drawing.Point(123' 116);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.checkedListBox1.Location = new System.Drawing.Point(123' 116);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.checkedListBox1.Size = new System.Drawing.Size(287' 169);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.checkedListBox1.Size = new System.Drawing.Size(287' 169);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.checkedListBox1.TabIndex = 2;
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(715' 483);
Magic Number,Xpress.Mvc,MainMvvm,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(715' 483);
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseStringLiteral,The following statement contains a magic number: string s = token.text.Substring(1' token.text.Length - 2);
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseIif,The following statement contains a magic number: args.Length != 3
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseIif,The following statement contains a magic number: return GenerateConditional(args[0]' args[1]' args[2]' errorPos);
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsSignedIntegralType,The following statement contains a magic number: return GetNumericTypeKind(type) == 2;
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsUnsignedIntegralType,The following statement contains a magic number: return GetNumericTypeKind(type) == 3;
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GetNumericTypeKind,The following statement contains a magic number: switch (Type.GetTypeCode(type))              {                  case TypeCode.Char:                  case TypeCode.Single:                  case TypeCode.Double:                  case TypeCode.Decimal:                      return 1;                  case TypeCode.SByte:                  case TypeCode.Int16:                  case TypeCode.Int32:                  case TypeCode.Int64:                      return 2;                  case TypeCode.Byte:                  case TypeCode.UInt16:                  case TypeCode.UInt32:                  case TypeCode.UInt64:                      return 3;                  default:                      return 0;              }
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GetNumericTypeKind,The following statement contains a magic number: switch (Type.GetTypeCode(type))              {                  case TypeCode.Char:                  case TypeCode.Single:                  case TypeCode.Double:                  case TypeCode.Decimal:                      return 1;                  case TypeCode.SByte:                  case TypeCode.Int16:                  case TypeCode.Int32:                  case TypeCode.Int64:                      return 2;                  case TypeCode.Byte:                  case TypeCode.UInt16:                  case TypeCode.UInt32:                  case TypeCode.UInt64:                      return 3;                  default:                      return 0;              }
Magic Number,Xpress.Mvc.Logic,DataExporter,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\Logic\DataExporter.cs,ExportUsersToFile,The following statement contains a magic number: userPassword = reader[2].ToString();
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseComparison,The following switch statement is missing a default case: switch (op.id)                  {                      case TokenId.Equal:                      case TokenId.DoubleEqual:                          left = GenerateEqual(left' right);                          break;                      case TokenId.ExclamationEqual:                      case TokenId.LessGreater:                          left = GenerateNotEqual(left' right);                          break;                      case TokenId.GreaterThan:                          left = GenerateGreaterThan(left' right);                          break;                      case TokenId.GreaterThanEqual:                          left = GenerateGreaterThanEqual(left' right);                          break;                      case TokenId.LessThan:                          left = GenerateLessThan(left' right);                          break;                      case TokenId.LessThanEqual:                          left = GenerateLessThanEqual(left' right);                          break;                  }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseAdditive,The following switch statement is missing a default case: switch (op.id)                  {                      case TokenId.Plus:                          if (left.Type == typeof(string) || right.Type == typeof(string))                              goto case TokenId.Amphersand;                          CheckAndPromoteOperands(typeof(IAddSignatures)' op.text' ref left' ref right' op.pos);                          left = GenerateAdd(left' right);                          break;                      case TokenId.Minus:                          CheckAndPromoteOperands(typeof(ISubtractSignatures)' op.text' ref left' ref right' op.pos);                          left = GenerateSubtract(left' right);                          break;                      case TokenId.Amphersand:                          left = GenerateStringConcat(left' right);                          break;                  }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseMultiplicative,The following switch statement is missing a default case: switch (op.id)                  {                      case TokenId.Asterisk:                          left = Expression.Multiply(left' right);                          break;                      case TokenId.Slash:                          left = Expression.Divide(left' right);                          break;                      case TokenId.Percent:                      case TokenId.Identifier:                          left = Expression.Modulo(left' right);                          break;                  }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,PromoteExpression,The following switch statement is missing a default case: switch (Type.GetTypeCode(ce.Type))                          {                              case TypeCode.Int32:                              case TypeCode.UInt32:                              case TypeCode.Int64:                              case TypeCode.UInt64:                                  value = ParseNumber(text' target);                                  break;                              case TypeCode.Double:                                  if (target == typeof(decimal)) value = ParseNumber(text' target);                                  break;                              case TypeCode.String:                                  value = ParseEnum(text' target);                                  break;                          }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseNumber,The following switch statement is missing a default case: switch (Type.GetTypeCode(GetNonNullableType(type)))              {                  case TypeCode.SByte:                      sbyte sb;                      if (sbyte.TryParse(text' out sb)) return sb;                      break;                  case TypeCode.Byte:                      byte b;                      if (byte.TryParse(text' out b)) return b;                      break;                  case TypeCode.Int16:                      short s;                      if (short.TryParse(text' out s)) return s;                      break;                  case TypeCode.UInt16:                      ushort us;                      if (ushort.TryParse(text' out us)) return us;                      break;                  case TypeCode.Int32:                      int i;                      if (int.TryParse(text' out i)) return i;                      break;                  case TypeCode.UInt32:                      uint ui;                      if (uint.TryParse(text' out ui)) return ui;                      break;                  case TypeCode.Int64:                      long l;                      if (long.TryParse(text' out l)) return l;                      break;                  case TypeCode.UInt64:                      ulong ul;                      if (ulong.TryParse(text' out ul)) return ul;                      break;                  case TypeCode.Single:                      float f;                      if (float.TryParse(text' out f)) return f;                      break;                  case TypeCode.Double:                      double d;                      if (double.TryParse(text' out d)) return d;                      break;                  case TypeCode.Decimal:                      decimal e;                      if (decimal.TryParse(text' out e)) return e;                      break;              }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.SByte:                          case TypeCode.Int16:                          case TypeCode.Int32:                          case TypeCode.Int64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.Byte:                          case TypeCode.Int16:                          case TypeCode.UInt16:                          case TypeCode.Int32:                          case TypeCode.UInt32:                          case TypeCode.Int64:                          case TypeCode.UInt64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.Int16:                          case TypeCode.Int32:                          case TypeCode.Int64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.UInt16:                          case TypeCode.Int32:                          case TypeCode.UInt32:                          case TypeCode.Int64:                          case TypeCode.UInt64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.Int32:                          case TypeCode.Int64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.UInt32:                          case TypeCode.Int64:                          case TypeCode.UInt64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.Int64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.UInt64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos1\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.Single:                          case TypeCode.Double:                              return true;                      }
