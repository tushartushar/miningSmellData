Implementation smell,Namespace,Class,File,Method,Description
Long Method,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The method has 122 lines of code.
Long Method,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The method has 60 lines of code.
Long Method,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The method has 118 lines of code.
Long Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseNumber,The method has 60 lines of code.
Long Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The method has 116 lines of code.
Long Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,NextToken,The method has 173 lines of code.
Complex Method,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,Cyclomatic complexity of the method is 9
Complex Method,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,Cyclomatic complexity of the method is 13
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseComparison,Cyclomatic complexity of the method is 29
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseAdditive,Cyclomatic complexity of the method is 14
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseMultiplicative,Cyclomatic complexity of the method is 11
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParsePrimaryStart,Cyclomatic complexity of the method is 7
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseNew,Cyclomatic complexity of the method is 7
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseTypeAccess,Cyclomatic complexity of the method is 9
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseMemberAccess,Cyclomatic complexity of the method is 15
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseElementAccess,Cyclomatic complexity of the method is 8
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GetNumericTypeKind,Cyclomatic complexity of the method is 13
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,PromoteExpression,Cyclomatic complexity of the method is 17
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseNumber,Cyclomatic complexity of the method is 44
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,Cyclomatic complexity of the method is 30
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,NextToken,Cyclomatic complexity of the method is 111
Long Parameter List,System.Linq.Dynamic,DynamicQueryable,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GroupBy,The method has 4 parameters.
Long Parameter List,System.Linq.Dynamic,DynamicExpression,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseLambda,The method has 4 parameters.
Long Parameter List,System.Linq.Dynamic,DynamicExpression,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseLambda,The method has 4 parameters.
Long Parameter List,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GenerateConditional,The method has 4 parameters.
Long Parameter List,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseAggregate,The method has 4 parameters.
Long Parameter List,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,CheckAndPromoteOperand,The method has 4 parameters.
Long Parameter List,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,CheckAndPromoteOperands,The method has 5 parameters.
Long Parameter List,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IncompatibleOperandsError,The method has 4 parameters.
Long Parameter List,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,FindMethod,The method has 5 parameters.
Long Identifier,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The length of the parameter annualPriceOrderPredicateCases is 30.
Long Statement,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The length of the statement  "	//Create Instance 3: DbGateway db = new DbGateway(DatabaseType.SqlServer' "server=localhost\OSPTTESTDEV;database=TESTDB;User ID=sa;Password=sa"); " is 145.
Long Statement,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,GetOrderByQueryRequest,The length of the statement  "	//// ExpandoObject implements the IDictionary<string' object> interface so it can be casted to IDictionary<string' object> " is 122.
Long Statement,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,GetOrderByQueryRequest,The length of the statement  "	//System.Reflection.PropertyInfo[] properties = typeof(OrderQueryRequest).GetProperties(System.Reflection.BindingFlags.Public |  " is 127.
Long Statement,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,GetOrderByQueryRequest,The length of the statement  "	//Expression pe = Expression.Call(instance' orderQueryRequestType.GetProperty("Id").GetSetMethod()' Expression.Constant(1000)); " is 127.
Long Statement,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The length of the statement  "	IList<Product> pListOrdered = qb.IfThenElse (() => request.IsAnnualCover' () => qb.SwitchOrderBy (() => request.OrderType' annualPriceOrderPredicateCases' annualPriceSortOrderCases)' () => qb.SwitchOrderBy (() => request.OrderType' nonAnnualOrderPredicateCases' nonAnnualPriceSortOrderCases)).ToList (productList); " is 314.
Long Statement,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The length of the statement  "	IList<Product> pList2 = qb.Filter (p => p.Id > 1000).And (p => p.Quotation.StartingPrice > 1002).OrderBy (p => p.AnnualQuotation.StartingPrice).ToList (productList.AsQueryable ()); " is 180.
Long Statement,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The length of the statement  "		IDataReader reader = sqlQuery.From ("post").Equals ("post_id"' 1000).GreaterThan ("post_id"' 1005' true).Contains ("post_content "' "AAAAAA").OrderBy ("post_id"' SortOrder.Descending).OrderBy ("post_creation_datetime"' SortOrder.Descending).GroupBy (new string[] { " is 264.
Long Statement,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The length of the statement  "		IDataReader reader = sqlQuery.From ("post").Max ("post_topic_id").Min ("post_id").Sum ("post_author_id").Count ("*").Distinct ().Top (3).GroupBy (new string[] { " is 160.
Long Statement,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The length of the statement  "		IDataReader reader = sqlQuery.From ("post").InnerJoin ("topic"' "post_topic_id"' "topic_id").LeftOuterJoin ("[user]"' "post_author_id"' "user_id").LessThanEquals ("post_id"' 1008).Select ("post_id"' "topic_name"' "user_name").OrderBy ("post_id"' SortOrder.Descending).GroupBy (new string[] { " is 291.
Long Statement,System.Linq.Dynamic,ClassFactory,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GenerateProperties,The length of the statement  "		MethodBuilder mbGet = tb.DefineMethod ("get_" + dp.Name' MethodAttributes.Public | MethodAttributes.SpecialName | MethodAttributes.HideBySig' dp.Type' Type.EmptyTypes); " is 168.
Long Statement,System.Linq.Dynamic,ClassFactory,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GenerateProperties,The length of the statement  "		MethodBuilder mbSet = tb.DefineMethod ("set_" + dp.Name' MethodAttributes.Public | MethodAttributes.SpecialName | MethodAttributes.HideBySig' null' new Type[] { " is 160.
Long Statement,System.Linq.Dynamic,ClassFactory,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GenerateEquals,The length of the statement  "	MethodBuilder mb = tb.DefineMethod ("Equals"' MethodAttributes.Public | MethodAttributes.ReuseSlot | MethodAttributes.Virtual | MethodAttributes.HideBySig' typeof(bool)' new Type[] { " is 182.
Long Statement,System.Linq.Dynamic,ClassFactory,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GenerateGetHashCode,The length of the statement  "	MethodBuilder mb = tb.DefineMethod ("GetHashCode"' MethodAttributes.Public | MethodAttributes.ReuseSlot | MethodAttributes.Virtual | MethodAttributes.HideBySig' typeof(int)' Type.EmptyTypes); " is 191.
Long Statement,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseComparison,The length of the statement  "	while (token.id == TokenId.Equal || token.id == TokenId.DoubleEqual || token.id == TokenId.ExclamationEqual || token.id == TokenId.LessGreater || token.id == TokenId.GreaterThan || token.id == TokenId.GreaterThanEqual || token.id == TokenId.LessThan || token.id == TokenId.LessThanEqual) { " is 289.
Long Statement,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseComparison,The length of the statement  "		bool isEquality = op.id == TokenId.Equal || op.id == TokenId.DoubleEqual || op.id == TokenId.ExclamationEqual || op.id == TokenId.LessGreater; " is 142.
Long Statement,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseComparison,The length of the statement  "			CheckAndPromoteOperands (isEquality ? typeof(IEqualitySignatures) : typeof(IRelationalSignatures)' op.text' ref left' ref right' op.pos); " is 137.
Long Statement,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseMultiplicative,The length of the statement  "	while (token.id == TokenId.Asterisk || token.id == TokenId.Slash || token.id == TokenId.Percent || TokenIdentifierIs ("mod")) { " is 127.
Long Statement,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseIdentifier,The length of the statement  "	if (symbols.TryGetValue (token.text' out value) || externals != null && externals.TryGetValue (token.text' out value)) { " is 120.
Long Statement,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseMemberAccess,The length of the statement  "		return member is PropertyInfo ? Expression.Property (instance' (PropertyInfo)member) : Expression.Field (instance' (FieldInfo)member); " is 134.
Long Statement,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,FindPropertyOrField,The length of the statement  "	BindingFlags flags = BindingFlags.Public | BindingFlags.DeclaredOnly | (staticAccess ? BindingFlags.Static : BindingFlags.Instance); " is 132.
Long Statement,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,FindPropertyOrField,The length of the statement  "		MemberInfo[] members = t.FindMembers (MemberTypes.Property | MemberTypes.Field' flags' Type.FilterNameIgnoreCase' memberName); " is 126.
Long Statement,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,FindMethod,The length of the statement  "	BindingFlags flags = BindingFlags.Public | BindingFlags.DeclaredOnly | (staticAccess ? BindingFlags.Static : BindingFlags.Instance); " is 132.
Long Statement,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,FindIndexer,The length of the statement  "			IEnumerable<MethodBase> methods = members.OfType<PropertyInfo> ().Select (p => (MethodBase)p.GetGetMethod ()).Where (m => m != null); " is 133.
Long Statement,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseEnum,The length of the statement  "		MemberInfo[] memberInfos = type.FindMembers (MemberTypes.Field' BindingFlags.Public | BindingFlags.DeclaredOnly | BindingFlags.Static' Type.FilterNameIgnoreCase' name); " is 168.
Complex Conditional,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GenerateConversion,The conditional expression  "(IsNumericType (exprType) || IsEnumType (exprType)) && (IsNumericType (type)) || IsEnumType (type)"  is complex.
Complex Conditional,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GenerateConversion,The conditional expression  "exprType.IsAssignableFrom (type) || type.IsAssignableFrom (exprType) || exprType.IsInterface || type.IsInterface"  is complex.
Magic Number,Xpress.Mvc.Controllers,CostController,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Controllers\CostController.cs,AddCost,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	CostLine costLine = new CostLine ();  	costLines.Add (costLine);  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	CostLine line = new CostLine ();  	line.Id = i + 1000;  	line.Name = "Cost " + i.ToString ();  	Random random = new Random (i);  	line.Price = random.Next ();  	Random random1 = new Random (i);  	line.Popularity = random.Next ();  	line.Type = (i % 2 == 0) ? "Annual" : "Non-Annual";  	costLines.Add (line);  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	CostLine line = new CostLine ();  	line.Id = i + 1000;  	line.Name = "Cost " + i.ToString ();  	Random random = new Random (i);  	line.Price = random.Next ();  	Random random1 = new Random (i);  	line.Popularity = random.Next ();  	line.Type = (i % 2 == 0) ? "Annual" : "Non-Annual";  	costLines.Add (line);  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	CostLine line = new CostLine ();  	line.Id = i + 1000;  	line.Name = "Cost " + i.ToString ();  	Random random = new Random (i);  	line.Price = random.Next ();  	Random random1 = new Random (i);  	line.Popularity = random.Next ();  	line.Type = (i % 2 == 0) ? "Annual" : "Non-Annual";  	costLines.Add (line);  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: line.Id = i + 1000;  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: line.Type = (i % 2 == 0) ? "Annual" : "Non-Annual";  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: try {  	// Delete  	DbGateway.Default.Delete ("user"' "user_id > @user_id and user_email = @user_email"' new object[] {  		1000'  		"airsoft_ft@126.com"  	}' trans);  	string userName;  	string email = "airsoft_ft@126.com";  	string password;  	string topicName;  	string topicDesc;  	// Insert  	for (int index = 0; index < 10; index++) {  		userName = "Admin " + (index + 1).ToString ();  		password = "change_2014121" + index.ToString ();  		topicName = "Topic " + (index + 1).ToString ();  		topicDesc = "Description " + (index + 1).ToString ();  		DbGateway.Default.Insert ("user"' new object[] {  			userName'  			null'  			email'  			password  		}' trans);  		DbGateway.Default.Insert ("topic"' new object[] {  			topicName'  			topicDesc  		}' trans);  		//DbGateway.Default.Insert("user"'  		//    new string[] { "user_name"' "user_email"' "user_password" }'  		//    new object[] { userName' email' password }' trans);  	}  	// Update  	DbGateway.Default.Update ("user"' new string[] {  		"user_nick_name"  	}' new object[] {  		"卡洛斯"  	}' "user_id=@id"' new object[] {  		1000  	}' trans);  	// customized Non Query SQL scripts.  	DbGateway.Default.ExecuteNonQuery ("update [user] set [user_email]=@email where [user_id]=@id"' new object[] {  		"119075838@qq.com"'  		1000  	}' trans);  	trans.Commit ();  } catch (Exception ex) {  	trans.Rollback ();  	throw ex;  } finally {  	DbGateway.Default.CloseConnection (connection);  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: try {  	// Delete  	DbGateway.Default.Delete ("user"' "user_id > @user_id and user_email = @user_email"' new object[] {  		1000'  		"airsoft_ft@126.com"  	}' trans);  	string userName;  	string email = "airsoft_ft@126.com";  	string password;  	string topicName;  	string topicDesc;  	// Insert  	for (int index = 0; index < 10; index++) {  		userName = "Admin " + (index + 1).ToString ();  		password = "change_2014121" + index.ToString ();  		topicName = "Topic " + (index + 1).ToString ();  		topicDesc = "Description " + (index + 1).ToString ();  		DbGateway.Default.Insert ("user"' new object[] {  			userName'  			null'  			email'  			password  		}' trans);  		DbGateway.Default.Insert ("topic"' new object[] {  			topicName'  			topicDesc  		}' trans);  		//DbGateway.Default.Insert("user"'  		//    new string[] { "user_name"' "user_email"' "user_password" }'  		//    new object[] { userName' email' password }' trans);  	}  	// Update  	DbGateway.Default.Update ("user"' new string[] {  		"user_nick_name"  	}' new object[] {  		"卡洛斯"  	}' "user_id=@id"' new object[] {  		1000  	}' trans);  	// customized Non Query SQL scripts.  	DbGateway.Default.ExecuteNonQuery ("update [user] set [user_email]=@email where [user_id]=@id"' new object[] {  		"119075838@qq.com"'  		1000  	}' trans);  	trans.Commit ();  } catch (Exception ex) {  	trans.Rollback ();  	throw ex;  } finally {  	DbGateway.Default.CloseConnection (connection);  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: try {  	// Delete  	DbGateway.Default.Delete ("user"' "user_id > @user_id and user_email = @user_email"' new object[] {  		1000'  		"airsoft_ft@126.com"  	}' trans);  	string userName;  	string email = "airsoft_ft@126.com";  	string password;  	string topicName;  	string topicDesc;  	// Insert  	for (int index = 0; index < 10; index++) {  		userName = "Admin " + (index + 1).ToString ();  		password = "change_2014121" + index.ToString ();  		topicName = "Topic " + (index + 1).ToString ();  		topicDesc = "Description " + (index + 1).ToString ();  		DbGateway.Default.Insert ("user"' new object[] {  			userName'  			null'  			email'  			password  		}' trans);  		DbGateway.Default.Insert ("topic"' new object[] {  			topicName'  			topicDesc  		}' trans);  		//DbGateway.Default.Insert("user"'  		//    new string[] { "user_name"' "user_email"' "user_password" }'  		//    new object[] { userName' email' password }' trans);  	}  	// Update  	DbGateway.Default.Update ("user"' new string[] {  		"user_nick_name"  	}' new object[] {  		"卡洛斯"  	}' "user_id=@id"' new object[] {  		1000  	}' trans);  	// customized Non Query SQL scripts.  	DbGateway.Default.ExecuteNonQuery ("update [user] set [user_email]=@email where [user_id]=@id"' new object[] {  		"119075838@qq.com"'  		1000  	}' trans);  	trans.Commit ();  } catch (Exception ex) {  	trans.Rollback ();  	throw ex;  } finally {  	DbGateway.Default.CloseConnection (connection);  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: try {  	// Delete  	DbGateway.Default.Delete ("user"' "user_id > @user_id and user_email = @user_email"' new object[] {  		1000'  		"airsoft_ft@126.com"  	}' trans);  	string userName;  	string email = "airsoft_ft@126.com";  	string password;  	string topicName;  	string topicDesc;  	// Insert  	for (int index = 0; index < 10; index++) {  		userName = "Admin " + (index + 1).ToString ();  		password = "change_2014121" + index.ToString ();  		topicName = "Topic " + (index + 1).ToString ();  		topicDesc = "Description " + (index + 1).ToString ();  		DbGateway.Default.Insert ("user"' new object[] {  			userName'  			null'  			email'  			password  		}' trans);  		DbGateway.Default.Insert ("topic"' new object[] {  			topicName'  			topicDesc  		}' trans);  		//DbGateway.Default.Insert("user"'  		//    new string[] { "user_name"' "user_email"' "user_password" }'  		//    new object[] { userName' email' password }' trans);  	}  	// Update  	DbGateway.Default.Update ("user"' new string[] {  		"user_nick_name"  	}' new object[] {  		"卡洛斯"  	}' "user_id=@id"' new object[] {  		1000  	}' trans);  	// customized Non Query SQL scripts.  	DbGateway.Default.ExecuteNonQuery ("update [user] set [user_email]=@email where [user_id]=@id"' new object[] {  		"119075838@qq.com"'  		1000  	}' trans);  	trans.Commit ();  } catch (Exception ex) {  	trans.Rollback ();  	throw ex;  } finally {  	DbGateway.Default.CloseConnection (connection);  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: DbGateway.Default.Delete ("user"' "user_id > @user_id and user_email = @user_email"' new object[] {  	1000'  	"airsoft_ft@126.com"  }' trans);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: for (int index = 0; index < 10; index++) {  	userName = "Admin " + (index + 1).ToString ();  	password = "change_2014121" + index.ToString ();  	topicName = "Topic " + (index + 1).ToString ();  	topicDesc = "Description " + (index + 1).ToString ();  	DbGateway.Default.Insert ("user"' new object[] {  		userName'  		null'  		email'  		password  	}' trans);  	DbGateway.Default.Insert ("topic"' new object[] {  		topicName'  		topicDesc  	}' trans);  	//DbGateway.Default.Insert("user"'  	//    new string[] { "user_name"' "user_email"' "user_password" }'  	//    new object[] { userName' email' password }' trans);  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: DbGateway.Default.Update ("user"' new string[] {  	"user_nick_name"  }' new object[] {  	"卡洛斯"  }' "user_id=@id"' new object[] {  	1000  }' trans);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: DbGateway.Default.ExecuteNonQuery ("update [user] set [user_email]=@email where [user_id]=@id"' new object[] {  	"119075838@qq.com"'  	1000  }' trans);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnAddNew_Click,The following statement contains a magic number: using (IDataReader dr = DbGateway.Default.ExecuteReader (userQuerySql' new object[] {  	1000  })) {  	dr.Read ();  	string userPassword = dr ["user_password"].ToString ();  	if (!dr.IsClosed) {  		dr.Close ();  		dr.Dispose ();  	}  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	Product product = new Product ();  	product.Id = i + 1000;  	product.Name = "Cost " + i.ToString ();  	Random random = new Random (i);  	product.Quotation = new Quotation ();  	product.Quotation.Info = new Information ();  	product.Quotation.StartingPrice = 1000 + i;  	product.Quotation.Info.Number = product.Id;  	product.AnnualQuotation = new AnnualQuotation ();  	product.AnnualQuotation.StartingPrice = 5000 + i;  	product.RecommandLevel = i;  	product.Type = (i % 2 == 0) ? productType.Annual : productType.NonAnnual;  	productList.Add (product);  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	Product product = new Product ();  	product.Id = i + 1000;  	product.Name = "Cost " + i.ToString ();  	Random random = new Random (i);  	product.Quotation = new Quotation ();  	product.Quotation.Info = new Information ();  	product.Quotation.StartingPrice = 1000 + i;  	product.Quotation.Info.Number = product.Id;  	product.AnnualQuotation = new AnnualQuotation ();  	product.AnnualQuotation.StartingPrice = 5000 + i;  	product.RecommandLevel = i;  	product.Type = (i % 2 == 0) ? productType.Annual : productType.NonAnnual;  	productList.Add (product);  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	Product product = new Product ();  	product.Id = i + 1000;  	product.Name = "Cost " + i.ToString ();  	Random random = new Random (i);  	product.Quotation = new Quotation ();  	product.Quotation.Info = new Information ();  	product.Quotation.StartingPrice = 1000 + i;  	product.Quotation.Info.Number = product.Id;  	product.AnnualQuotation = new AnnualQuotation ();  	product.AnnualQuotation.StartingPrice = 5000 + i;  	product.RecommandLevel = i;  	product.Type = (i % 2 == 0) ? productType.Annual : productType.NonAnnual;  	productList.Add (product);  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	Product product = new Product ();  	product.Id = i + 1000;  	product.Name = "Cost " + i.ToString ();  	Random random = new Random (i);  	product.Quotation = new Quotation ();  	product.Quotation.Info = new Information ();  	product.Quotation.StartingPrice = 1000 + i;  	product.Quotation.Info.Number = product.Id;  	product.AnnualQuotation = new AnnualQuotation ();  	product.AnnualQuotation.StartingPrice = 5000 + i;  	product.RecommandLevel = i;  	product.Type = (i % 2 == 0) ? productType.Annual : productType.NonAnnual;  	productList.Add (product);  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	Product product = new Product ();  	product.Id = i + 1000;  	product.Name = "Cost " + i.ToString ();  	Random random = new Random (i);  	product.Quotation = new Quotation ();  	product.Quotation.Info = new Information ();  	product.Quotation.StartingPrice = 1000 + i;  	product.Quotation.Info.Number = product.Id;  	product.AnnualQuotation = new AnnualQuotation ();  	product.AnnualQuotation.StartingPrice = 5000 + i;  	product.RecommandLevel = i;  	product.Type = (i % 2 == 0) ? productType.Annual : productType.NonAnnual;  	productList.Add (product);  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: product.Id = i + 1000;  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: product.Quotation.StartingPrice = 1000 + i;  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: product.AnnualQuotation.StartingPrice = 5000 + i;  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: product.Type = (i % 2 == 0) ? productType.Annual : productType.NonAnnual;  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: annualPriceOrderPredicateCases.Add (2' p => p.RecommandLevel);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: annualPriceSortOrderCases.Add (2' SortOrder.Descending);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: nonAnnualOrderPredicateCases.Add (2' p => p.Quotation != null ? p.Quotation.StartingPrice : p.Id);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: nonAnnualOrderPredicateCases.Add (3' p => p.RecommandLevel);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: nonAnnualPriceSortOrderCases.Add (2' SortOrder.Descending);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: annualPriceCases.Add (1' p => p.Quotation.StartingPrice > 1003);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: annualPriceCases.Add (2' p => p.Quotation.StartingPrice > 1004);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQuery_Click,The following statement contains a magic number: annualPriceCases.Add (2' p => p.Quotation.StartingPrice > 1004);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The following statement contains a magic number: using (ISqlQuery sqlQuery = new SqlQuery ()) {  	IDataReader reader = sqlQuery.From ("post").Equals ("post_id"' 1000).GreaterThan ("post_id"' 1005' true).Contains ("post_content "' "AAAAAA").OrderBy ("post_id"' SortOrder.Descending).OrderBy ("post_creation_datetime"' SortOrder.Descending).GroupBy (new string[] {  		"post_id"'  		"post_author_id"'  		"post_content"'  		"post_creation_datetime"  	}).Select ("post_id"' "post_author_id"' "post_content").ExecuteReader (DbGateway.Default);  	while (reader.Read ()) {  		string postId = reader ["post_id"].ToString ();  		string postAuthorId = reader ["post_author_id"].ToString ();  		string content = reader ["post_content"].ToString ();  	}  	if (!reader.IsClosed) {  		reader.Close ();  	}  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The following statement contains a magic number: using (ISqlQuery sqlQuery = new SqlQuery ()) {  	IDataReader reader = sqlQuery.From ("post").Equals ("post_id"' 1000).GreaterThan ("post_id"' 1005' true).Contains ("post_content "' "AAAAAA").OrderBy ("post_id"' SortOrder.Descending).OrderBy ("post_creation_datetime"' SortOrder.Descending).GroupBy (new string[] {  		"post_id"'  		"post_author_id"'  		"post_content"'  		"post_creation_datetime"  	}).Select ("post_id"' "post_author_id"' "post_content").ExecuteReader (DbGateway.Default);  	while (reader.Read ()) {  		string postId = reader ["post_id"].ToString ();  		string postAuthorId = reader ["post_author_id"].ToString ();  		string content = reader ["post_content"].ToString ();  	}  	if (!reader.IsClosed) {  		reader.Close ();  	}  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The following statement contains a magic number: using (ISqlQuery sqlQuery = new SqlQuery ()) {  	IDataReader reader = sqlQuery.From ("post").Max ("post_topic_id").Min ("post_id").Sum ("post_author_id").Count ("*").Distinct ().Top (3).GroupBy (new string[] {  		"post_id"  	}).ExecuteReader (DbGateway.Default);  	while (reader.Read ()) {  		string postTopicId = reader [0].ToString ();  		string postId = reader [1].ToString ();  		string postAuthorId = reader [2].ToString ();  	}  	if (!reader.IsClosed) {  		reader.Close ();  	}  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The following statement contains a magic number: using (ISqlQuery sqlQuery = new SqlQuery ()) {  	IDataReader reader = sqlQuery.From ("post").Max ("post_topic_id").Min ("post_id").Sum ("post_author_id").Count ("*").Distinct ().Top (3).GroupBy (new string[] {  		"post_id"  	}).ExecuteReader (DbGateway.Default);  	while (reader.Read ()) {  		string postTopicId = reader [0].ToString ();  		string postId = reader [1].ToString ();  		string postAuthorId = reader [2].ToString ();  	}  	if (!reader.IsClosed) {  		reader.Close ();  	}  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The following statement contains a magic number: while (reader.Read ()) {  	string postTopicId = reader [0].ToString ();  	string postId = reader [1].ToString ();  	string postAuthorId = reader [2].ToString ();  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The following statement contains a magic number: using (ISqlQuery sqlQuery = new SqlQuery ()) {  	IDataReader reader = sqlQuery.From ("post").InnerJoin ("topic"' "post_topic_id"' "topic_id").LeftOuterJoin ("[user]"' "post_author_id"' "user_id").LessThanEquals ("post_id"' 1008).Select ("post_id"' "topic_name"' "user_name").OrderBy ("post_id"' SortOrder.Descending).GroupBy (new string[] {  		"post_id"'  		"topic_name"'  		"user_name"  	}).ExecuteReader (DbGateway.Default);  	while (reader.Read ()) {  		string postTopicId = reader [0].ToString ();  		string postId = reader [1].ToString ();  		string postAuthorId = reader [2].ToString ();  	}  	if (!reader.IsClosed) {  		reader.Close ();  	}  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The following statement contains a magic number: using (ISqlQuery sqlQuery = new SqlQuery ()) {  	IDataReader reader = sqlQuery.From ("post").InnerJoin ("topic"' "post_topic_id"' "topic_id").LeftOuterJoin ("[user]"' "post_author_id"' "user_id").LessThanEquals ("post_id"' 1008).Select ("post_id"' "topic_name"' "user_name").OrderBy ("post_id"' SortOrder.Descending).GroupBy (new string[] {  		"post_id"'  		"topic_name"'  		"user_name"  	}).ExecuteReader (DbGateway.Default);  	while (reader.Read ()) {  		string postTopicId = reader [0].ToString ();  		string postId = reader [1].ToString ();  		string postAuthorId = reader [2].ToString ();  	}  	if (!reader.IsClosed) {  		reader.Close ();  	}  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnBuilderQuery_Click,The following statement contains a magic number: while (reader.Read ()) {  	string postTopicId = reader [0].ToString ();  	string postId = reader [1].ToString ();  	string postAuthorId = reader [2].ToString ();  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,btnQueryPaging_Click,The following statement contains a magic number: while (pagingReader.Read ()) {  	string postTopicId = pagingReader [0].ToString ();  	string postId = pagingReader [1].ToString ();  	string postAuthorId = pagingReader [2].ToString ();  }  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point (12' 12);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point (12' 12);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size (780' 186);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size (780' 186);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnAddNew.Location = new System.Drawing.Point (12' 215);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnAddNew.Location = new System.Drawing.Point (12' 215);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnAddNew.Size = new System.Drawing.Size (75' 23);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnAddNew.Size = new System.Drawing.Size (75' 23);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnExport.Location = new System.Drawing.Point (12' 268);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnExport.Location = new System.Drawing.Point (12' 268);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnExport.Size = new System.Drawing.Size (163' 23);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnExport.Size = new System.Drawing.Size (163' 23);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnExport.TabIndex = 2;  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.rbMessage.Location = new System.Drawing.Point (12' 297);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.rbMessage.Location = new System.Drawing.Point (12' 297);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.rbMessage.Size = new System.Drawing.Size (780' 241);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.rbMessage.Size = new System.Drawing.Size (780' 241);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.rbMessage.TabIndex = 3;  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point (181' 268);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point (181' 268);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size (143' 23);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size (143' 23);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.TabIndex = 4;  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQuery.Location = new System.Drawing.Point (93' 215);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQuery.Location = new System.Drawing.Point (93' 215);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQuery.Size = new System.Drawing.Size (136' 23);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQuery.Size = new System.Drawing.Size (136' 23);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQuery.TabIndex = 6;  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderQuery.Location = new System.Drawing.Point (236' 215);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderQuery.Location = new System.Drawing.Point (236' 215);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderQuery.Size = new System.Drawing.Size (122' 23);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderQuery.Size = new System.Drawing.Size (122' 23);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderQuery.TabIndex = 7;  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQueryPaging.Location = new System.Drawing.Point (364' 215);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQueryPaging.Location = new System.Drawing.Point (364' 215);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQueryPaging.Size = new System.Drawing.Size (135' 23);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQueryPaging.Size = new System.Drawing.Size (135' 23);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnQueryPaging.TabIndex = 8;  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderEntityMappingXml.Location = new System.Drawing.Point (364' 253);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderEntityMappingXml.Location = new System.Drawing.Point (364' 253);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderEntityMappingXml.Size = new System.Drawing.Size (202' 23);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderEntityMappingXml.Size = new System.Drawing.Size (202' 23);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.btnBuilderEntityMappingXml.TabIndex = 9;  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (804' 550);  
Magic Number,Xpress.Mvc,Cost,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Cost.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (804' 550);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point (12' 12);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point (12' 12);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size (691' 356);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size (691' 356);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.txtName.Location = new System.Drawing.Point (123' 31);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.txtName.Location = new System.Drawing.Point (123' 31);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.txtName.Size = new System.Drawing.Size (287' 20);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.txtName.Size = new System.Drawing.Size (287' 20);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.cmbType.Location = new System.Drawing.Point (123' 70);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.cmbType.Location = new System.Drawing.Point (123' 70);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.cmbType.Size = new System.Drawing.Size (287' 21);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.cmbType.Size = new System.Drawing.Size (287' 21);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.checkedListBox1.Location = new System.Drawing.Point (123' 116);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.checkedListBox1.Location = new System.Drawing.Point (123' 116);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.checkedListBox1.Size = new System.Drawing.Size (287' 169);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.checkedListBox1.Size = new System.Drawing.Size (287' 169);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.checkedListBox1.TabIndex = 2;  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (715' 483);  
Magic Number,Xpress.Mvc,MainMvvm,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\MainMvvm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (715' 483);  
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseIif,The following statement contains a magic number: if (args.Length != 3)  	throw ParseError (errorPos' Res.IifRequiresThreeArgs);  
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseIif,The following statement contains a magic number: return GenerateConditional (args [0]' args [1]' args [2]' errorPos);  
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsSignedIntegralType,The following statement contains a magic number: return GetNumericTypeKind (type) == 2;  
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsUnsignedIntegralType,The following statement contains a magic number: return GetNumericTypeKind (type) == 3;  
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GetNumericTypeKind,The following statement contains a magic number: switch (Type.GetTypeCode (type)) {  case TypeCode.Char:  case TypeCode.Single:  case TypeCode.Double:  case TypeCode.Decimal:  	return 1;  case TypeCode.SByte:  case TypeCode.Int16:  case TypeCode.Int32:  case TypeCode.Int64:  	return 2;  case TypeCode.Byte:  case TypeCode.UInt16:  case TypeCode.UInt32:  case TypeCode.UInt64:  	return 3;  default:  	return 0;  }  
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GetNumericTypeKind,The following statement contains a magic number: switch (Type.GetTypeCode (type)) {  case TypeCode.Char:  case TypeCode.Single:  case TypeCode.Double:  case TypeCode.Decimal:  	return 1;  case TypeCode.SByte:  case TypeCode.Int16:  case TypeCode.Int32:  case TypeCode.Int64:  	return 2;  case TypeCode.Byte:  case TypeCode.UInt16:  case TypeCode.UInt32:  case TypeCode.UInt64:  	return 3;  default:  	return 0;  }  
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GetNumericTypeKind,The following statement contains a magic number: return 2;  
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,GetNumericTypeKind,The following statement contains a magic number: return 3;  
Magic Number,Xpress.Mvc.Logic,DataExporter,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Logic\DataExporter.cs,ExportUsersToFile,The following statement contains a magic number: using (IDataReader reader = DbGateway.Default.ExecuteReader (userQuerySql)) {  	string userName = string.Empty;  	string userEmail = string.Empty;  	string userPassword = string.Empty;  	string content = string.Empty;  	byte[] contentByte = null;  	while (reader.Read ()) {  		if (this.CancellationPending) {  			if (!reader.IsClosed) {  				reader.Close ();  				reader.Dispose ();  			}  			return;  		}  		userName = reader [0].ToString ();  		userEmail = reader [1].ToString ();  		userPassword = reader [2].ToString ();  		content = userName + "'" + userName + "'" + userPassword + Environment.NewLine;  		contentByte = Encoding.Default.GetBytes (content);  		stream.Write (contentByte' 0' contentByte.Length);  		exportStep++;  		this.ReportProgress (exportStep' "[User]: " + userName + Environment.NewLine);  	}  }  
Magic Number,Xpress.Mvc.Logic,DataExporter,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Logic\DataExporter.cs,ExportUsersToFile,The following statement contains a magic number: while (reader.Read ()) {  	if (this.CancellationPending) {  		if (!reader.IsClosed) {  			reader.Close ();  			reader.Dispose ();  		}  		return;  	}  	userName = reader [0].ToString ();  	userEmail = reader [1].ToString ();  	userPassword = reader [2].ToString ();  	content = userName + "'" + userName + "'" + userPassword + Environment.NewLine;  	contentByte = Encoding.Default.GetBytes (content);  	stream.Write (contentByte' 0' contentByte.Length);  	exportStep++;  	this.ReportProgress (exportStep' "[User]: " + userName + Environment.NewLine);  }  
Magic Number,Xpress.Mvc.Logic,DataExporter,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\Logic\DataExporter.cs,ExportUsersToFile,The following statement contains a magic number: userPassword = reader [2].ToString ();  
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseComparison,The following switch statement is missing a default case: switch (op.id) {  case TokenId.Equal:  case TokenId.DoubleEqual:  	left = GenerateEqual (left' right);  	break;  case TokenId.ExclamationEqual:  case TokenId.LessGreater:  	left = GenerateNotEqual (left' right);  	break;  case TokenId.GreaterThan:  	left = GenerateGreaterThan (left' right);  	break;  case TokenId.GreaterThanEqual:  	left = GenerateGreaterThanEqual (left' right);  	break;  case TokenId.LessThan:  	left = GenerateLessThan (left' right);  	break;  case TokenId.LessThanEqual:  	left = GenerateLessThanEqual (left' right);  	break;  }  
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseAdditive,The following switch statement is missing a default case: switch (op.id) {  case TokenId.Plus:  	if (left.Type == typeof(string) || right.Type == typeof(string))  		goto case TokenId.Amphersand;  	CheckAndPromoteOperands (typeof(IAddSignatures)' op.text' ref left' ref right' op.pos);  	left = GenerateAdd (left' right);  	break;  case TokenId.Minus:  	CheckAndPromoteOperands (typeof(ISubtractSignatures)' op.text' ref left' ref right' op.pos);  	left = GenerateSubtract (left' right);  	break;  case TokenId.Amphersand:  	left = GenerateStringConcat (left' right);  	break;  }  
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseMultiplicative,The following switch statement is missing a default case: switch (op.id) {  case TokenId.Asterisk:  	left = Expression.Multiply (left' right);  	break;  case TokenId.Slash:  	left = Expression.Divide (left' right);  	break;  case TokenId.Percent:  case TokenId.Identifier:  	left = Expression.Modulo (left' right);  	break;  }  
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,PromoteExpression,The following switch statement is missing a default case: switch (Type.GetTypeCode (ce.Type)) {  case TypeCode.Int32:  case TypeCode.UInt32:  case TypeCode.Int64:  case TypeCode.UInt64:  	value = ParseNumber (text' target);  	break;  case TypeCode.Double:  	if (target == typeof(decimal))  		value = ParseNumber (text' target);  	break;  case TypeCode.String:  	value = ParseEnum (text' target);  	break;  }  
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,ParseNumber,The following switch statement is missing a default case: switch (Type.GetTypeCode (GetNonNullableType (type))) {  case TypeCode.SByte:  	sbyte sb;  	if (sbyte.TryParse (text' out sb))  		return sb;  	break;  case TypeCode.Byte:  	byte b;  	if (byte.TryParse (text' out b))  		return b;  	break;  case TypeCode.Int16:  	short s;  	if (short.TryParse (text' out s))  		return s;  	break;  case TypeCode.UInt16:  	ushort us;  	if (ushort.TryParse (text' out us))  		return us;  	break;  case TypeCode.Int32:  	int i;  	if (int.TryParse (text' out i))  		return i;  	break;  case TypeCode.UInt32:  	uint ui;  	if (uint.TryParse (text' out ui))  		return ui;  	break;  case TypeCode.Int64:  	long l;  	if (long.TryParse (text' out l))  		return l;  	break;  case TypeCode.UInt64:  	ulong ul;  	if (ulong.TryParse (text' out ul))  		return ul;  	break;  case TypeCode.Single:  	float f;  	if (float.TryParse (text' out f))  		return f;  	break;  case TypeCode.Double:  	double d;  	if (double.TryParse (text' out d))  		return d;  	break;  case TypeCode.Decimal:  	decimal e;  	if (decimal.TryParse (text' out e))  		return e;  	break;  }  
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {  case TypeCode.SByte:  case TypeCode.Int16:  case TypeCode.Int32:  case TypeCode.Int64:  case TypeCode.Single:  case TypeCode.Double:  case TypeCode.Decimal:  	return true;  }  
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {  case TypeCode.Byte:  case TypeCode.Int16:  case TypeCode.UInt16:  case TypeCode.Int32:  case TypeCode.UInt32:  case TypeCode.Int64:  case TypeCode.UInt64:  case TypeCode.Single:  case TypeCode.Double:  case TypeCode.Decimal:  	return true;  }  
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {  case TypeCode.Int16:  case TypeCode.Int32:  case TypeCode.Int64:  case TypeCode.Single:  case TypeCode.Double:  case TypeCode.Decimal:  	return true;  }  
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {  case TypeCode.UInt16:  case TypeCode.Int32:  case TypeCode.UInt32:  case TypeCode.Int64:  case TypeCode.UInt64:  case TypeCode.Single:  case TypeCode.Double:  case TypeCode.Decimal:  	return true;  }  
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {  case TypeCode.Int32:  case TypeCode.Int64:  case TypeCode.Single:  case TypeCode.Double:  case TypeCode.Decimal:  	return true;  }  
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {  case TypeCode.UInt32:  case TypeCode.Int64:  case TypeCode.UInt64:  case TypeCode.Single:  case TypeCode.Double:  case TypeCode.Decimal:  	return true;  }  
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {  case TypeCode.Int64:  case TypeCode.Single:  case TypeCode.Double:  case TypeCode.Decimal:  	return true;  }  
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {  case TypeCode.UInt64:  case TypeCode.Single:  case TypeCode.Double:  case TypeCode.Decimal:  	return true;  }  
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\newReposJune17\TwoMaKing_EApp\Xpress.Mvc\DynamicQueryable.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {  case TypeCode.Single:  case TypeCode.Double:  	return true;  }  
