Implementation smell,Namespace,Class,File,Method,Description
Long Method,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The method has 324 lines of code.
Long Method,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetTypeDeserializer,The method has 281 lines of code.
Long Method,Dappers,DynamicParameters,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,AddParameters,The method has 118 lines of code.
Long Method,Dappers,DynamicParameters,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Output,The method has 124 lines of code.
Complex Method,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,AddTypeHandlerImpl,Cyclomatic complexity of the method is 9
Complex Method,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,LookupDbType,Cyclomatic complexity of the method is 10
Complex Method,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,QueryImpl,Cyclomatic complexity of the method is 8
Complex Method,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMapImpl,Cyclomatic complexity of the method is 9
Complex Method,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMapImpl,Cyclomatic complexity of the method is 9
Complex Method,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateDeserializers,Cyclomatic complexity of the method is 9
Complex Method,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Format,Cyclomatic complexity of the method is 19
Complex Method,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,Cyclomatic complexity of the method is 45
Complex Method,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetTypeDeserializer,Cyclomatic complexity of the method is 37
Complex Method,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,FlexibleConvertBoxedFromHeadOfStack,Cyclomatic complexity of the method is 15
Complex Method,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,EmitInt32,Cyclomatic complexity of the method is 12
Complex Method,Dappers,DynamicParameters,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,AddDynamicParams,Cyclomatic complexity of the method is 9
Complex Method,Dappers,DynamicParameters,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,AddParameters,Cyclomatic complexity of the method is 23
Complex Method,Dappers,DefaultTypeMap,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,FindConstructor,Cyclomatic complexity of the method is 9
Long Parameter List,EApp.Respositories.Dapper,DapperRepository<TAggregateRoot>,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\DapperRepository.cs,DoFindAll,The method has 5 parameters. Parameters: expression' sortPredicate' sortOrder' pageNumber' pageSize
Long Parameter List,Dappers,CommandDefinition,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CommandDefinition,The method has 6 parameters. Parameters: commandText' parameters' transaction' commandTimeout' commandType' flags
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Execute,The method has 6 parameters. Parameters: cnn' sql' param' transaction' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,ExecuteScalar,The method has 6 parameters. Parameters: cnn' sql' param' transaction' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,ExecuteScalar,The method has 6 parameters. Parameters: cnn' sql' param' transaction' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,ExecuteReader,The method has 6 parameters. Parameters: cnn' sql' param' transaction' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The method has 7 parameters. Parameters: cnn' sql' param' transaction' buffered' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The method has 7 parameters. Parameters: cnn' sql' param' transaction' buffered' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The method has 8 parameters. Parameters: cnn' type' sql' param' transaction' buffered' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,QueryMultiple,The method has 6 parameters. Parameters: cnn' sql' param' transaction' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The method has 10 parameters. Parameters: cnn' sql' types' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMap,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMapImpl,The method has 7 parameters. Parameters: cnn' command' map' splitOn' reader' identity' finalize
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMapImpl,The method has 8 parameters. Parameters: cnn' command' types' map' splitOn' reader' identity' finalize
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetDeserializer,The method has 5 parameters. Parameters: type' reader' startBound' length' returnNullIfFirstMissing
Long Parameter List,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetTypeDeserializer,The method has 5 parameters. Parameters: type' reader' startBound' length' returnNullIfFirstMissing
Long Parameter List,Dappers,Identity,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Identity,The method has 6 parameters. Parameters: sql' commandType' connection' type' parametersType' otherTypes
Long Parameter List,Dappers,Identity,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Identity,The method has 7 parameters. Parameters: sql' commandType' connectionString' type' parametersType' otherTypes' gridIndex
Long Parameter List,Dappers,DynamicParameters,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Add,The method has 5 parameters. Parameters: name' value' dbType' direction' size
Long Parameter List,Dappers,WrappedReader,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,Dappers,WrappedReader,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Statement,EApp.Respositories.Dapper,DapperRepositoryContext,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\DapperRepositoryContext.cs,CreateRepository,The length of the statement  "                EAppRuntime.Instance.CurrentApp.ObjectContainer.TypesMapTo.Where(t => typeof(DapperRepository<TAggregateRoot>).IsAssignableFrom(t)); " is 132.
Long Statement,EApp.Respositories.Dapper,DapperRepositoryContext,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\DapperRepositoryContext.cs,CreateRepository,The length of the statement  "            IUnityContainer unityContainer = EAppRuntime.Instance.CurrentApp.ObjectContainer.GetWrapperContainer<IUnityContainer>(); " is 120.
Long Statement,EApp.Respositories.Dapper,DapperRepositoryContext,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\DapperRepositoryContext.cs,CreateRepository,The length of the statement  "            return (IRepository<TAggregateRoot>)unityContainer.Resolve(repositoryType' new DependencyOverride<IRepositoryContext>(this)); " is 125.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,AddTypeHandlerImpl,The length of the statement  "            typeof(TypeHandlerCache<>).MakeGenericType(type).GetMethod("SetHandler"' BindingFlags.Static | BindingFlags.NonPublic).Invoke(null' new object[] { handler }); " is 158.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,AddTypeHandlerImpl,The length of the statement  "                typeof(TypeHandlerCache<>).MakeGenericType(secondary).GetMethod("SetHandler"' BindingFlags.Static | BindingFlags.NonPublic).Invoke(null' new object[] { handler }); " is 163.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,LookupDbType,The length of the statement  "                throw new NotSupportedException(string.Format("The member {0} of type {1} cannot be used as a parameter value"' name' type.FullName)); " is 134.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Execute,The length of the statement  "            var command = new CommandDefinition(sql' (object)param' transaction' commandTimeout' commandType' CommandFlags.Buffered); " is 121.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,ExecuteScalar,The length of the statement  "            var command = new CommandDefinition(sql' (object)param' transaction' commandTimeout' commandType' CommandFlags.Buffered); " is 121.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,ExecuteScalar,The length of the statement  "            var command = new CommandDefinition(sql' (object)param' transaction' commandTimeout' commandType' CommandFlags.Buffered); " is 121.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,ExecuteReader,The length of the statement  "            var command = new CommandDefinition(sql' (object)param' transaction' commandTimeout' commandType' CommandFlags.Buffered); " is 121.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The length of the statement  "            var command = new CommandDefinition(sql' (object)param' transaction' commandTimeout' commandType' buffered ? CommandFlags.Buffered : CommandFlags.None); " is 152.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The length of the statement  "            var command = new CommandDefinition(sql' (object)param' transaction' commandTimeout' commandType' buffered ? CommandFlags.Buffered : CommandFlags.None); " is 152.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,QueryMultiple,The length of the statement  "            var command = new CommandDefinition(sql' (object)param' transaction' commandTimeout' commandType' CommandFlags.Buffered); " is 121.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,QueryMultipleImpl,The length of the statement  "            Identity identity = new Identity(command.CommandText' command.CommandType' cnn' typeof(GridReader)' param == null ? null : param.GetType()' null); " is 146.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,QueryMultipleImpl,The length of the statement  "                reader = cmd.ExecuteReader(wasClosed ? CommandBehavior.CloseConnection | CommandBehavior.SequentialAccess : CommandBehavior.SequentialAccess); " is 142.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,QueryImpl,The length of the statement  "            var identity = new Identity(command.CommandText' command.CommandType' cnn' effectiveType' param == null ? null : param.GetType()' null); " is 136.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,QueryImpl,The length of the statement  "                reader = cmd.ExecuteReader(wasClosed ? CommandBehavior.CloseConnection | CommandBehavior.SequentialAccess : CommandBehavior.SequentialAccess); " is 142.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The length of the statement  "            return MultiMap<TFirst' TSecond' DontMap' DontMap' DontMap' DontMap' DontMap' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 180.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The length of the statement  "            return MultiMap<TFirst' TSecond' TThird' DontMap' DontMap' DontMap' DontMap' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 179.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The length of the statement  "            return MultiMap<TFirst' TSecond' TThird' TFourth' DontMap' DontMap' DontMap' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 179.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The length of the statement  "            return MultiMap<TFirst' TSecond' TThird' TFourth' TFifth' DontMap' DontMap' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 178.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The length of the statement  "            return MultiMap<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' DontMap' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 177.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The length of the statement  "            return MultiMap<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 178.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Query,The length of the statement  "            var command = new CommandDefinition(sql' (object)param' transaction' commandTimeout' commandType' buffered ? CommandFlags.Buffered : CommandFlags.None); " is 152.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMap,The length of the statement  "            var command = new CommandDefinition(sql' (object)param' transaction' commandTimeout' commandType' buffered ? CommandFlags.Buffered : CommandFlags.None); " is 152.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMap,The length of the statement  "            var results = MultiMapImpl<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>(cnn' command' map' splitOn' null' null' true); " is 142.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMapImpl,The length of the statement  "            identity = identity ?? new Identity(command.CommandText' command.CommandType' cnn' typeof(TFirst)' param == null ? null : param.GetType()' new[] { typeof(TFirst)' typeof(TSecond)' typeof(TThird)' typeof(TFourth)' typeof(TFifth)' typeof(TSixth)' typeof(TSeventh) }); " is 265.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMapImpl,The length of the statement  "                    ownedReader = ownedCommand.ExecuteReader(wasClosed ? CommandBehavior.CloseConnection | CommandBehavior.SequentialAccess : CommandBehavior.SequentialAccess); " is 156.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMapImpl,The length of the statement  "                if ((deserializer = cinfo.Deserializer).Func == null || (otherDeserializers = cinfo.OtherDeserializers) == null || hash != deserializer.Hash) " is 141.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMapImpl,The length of the statement  "                    var deserializers = GenerateDeserializers(new Type[] { typeof(TFirst)' typeof(TSecond)' typeof(TThird)' typeof(TFourth)' typeof(TFifth)' typeof(TSixth)' typeof(TSeventh) }' splitOn' reader); " is 190.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMapImpl,The length of the statement  "                Func<IDataReader' TReturn> mapIt = GenerateMapper<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>(deserializer.Func' otherDeserializers' map); " is 163.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMapImpl,The length of the statement  "            identity = identity ?? new Identity(command.CommandText' command.CommandType' cnn' types[0]' param == null ? null : param.GetType()' types); " is 140.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMapImpl,The length of the statement  "                if ((deserializer = cinfo.Deserializer).Func == null || (otherDeserializers = cinfo.OtherDeserializers) == null || hash != deserializer.Hash) " is 141.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The length of the statement  "                    return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)); " is 152.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The length of the statement  "                    return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)); " is 196.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The length of the statement  "                    return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)); " is 238.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The length of the statement  "                    return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)); " is 280.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The length of the statement  "                    return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r)); " is 326.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,PassByPosition,The length of the statement  "            Dictionary<string' IDbDataParameter> parameters = new Dictionary<string' IDbDataParameter>(StringComparer.InvariantCulture); " is 124.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMapException,The length of the statement  "                return new ArgumentException("When using the multi-mapping APIs ensure you set the splitOn param if you have keys other than Id"' "splitOn"); " is 141.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,FilterParameters,The length of the statement  "            return parameters.Where(p => Regex.IsMatch(sql' @"[?@:]" + p.Name + "([^a-z0-9_]+|$)"' RegexOptions.IgnoreCase | RegexOptions.Multiline | RegexOptions.CultureInvariant)); " is 170.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "            var dm = new DynamicMethod(string.Format("ParamInfo{0}"' Guid.NewGuid())' null' new[] { typeof(IDbCommand)' typeof(object) }' type' true); " is 138.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "            il.EmitCall(OpCodes.Callvirt' typeof(IDbCommand).GetProperty("Parameters").GetGetMethod()' null); // stack is now [parameters] " is 126.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                    il.EmitCall(OpCodes.Call' typeof(SqlMapper).GetMethod("FindOrAddParameter")' null); // stack is [parameters] [parameter] " is 120.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                    il.EmitCall(OpCodes.Callvirt' typeof(IDbCommand).GetMethod("CreateParameter")' null);// stack is now [parameters] [parameters] [parameter] " is 138.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                    il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("ParameterName").GetSetMethod()' null);// stack is now [parameters] [parameters] [parameter] " is 157.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                if (dbType != DbType.Time && handler == null) // https://connect.microsoft.com/VisualStudio/feedback/details/381934/sqlparameter-dbtype-dbtype-time-sets-the-parameter-to-sqldbtype-datetime-instead-of-sqldbtype-time " is 214.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                        il.Emit(callOpCode' prop.GetGetMethod()); // stack is [parameters] [[parameters]] [parameter] [parameter] [object-value] " is 120.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                        il.Emit(OpCodes.Call' typeof(SqlMapper).GetMethod("GetDbType"' BindingFlags.Static | BindingFlags.Public)); // stack is now [parameters] [[parameters]] [parameter] [parameter] [db-type] " is 185.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                    il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("DbType").GetSetMethod()' null);// stack is now [parameters] [[parameters]] [parameter] " is 152.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("Direction").GetSetMethod()' null);// stack is now [parameters] [[parameters]] [parameter] " is 155.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                        il.EmitCall(OpCodes.Callvirt' prop.PropertyType.GetMethod("ToArray"' BindingFlags.Public | BindingFlags.Instance)' null); " is 121.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                    il.Emit(OpCodes.Call' typeof(TypeHandlerCache<>).MakeGenericType(prop.PropertyType).GetMethod("SetValue")); // stack is now [parameters] [[parameters]] [parameter] " is 163.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                    il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("Value").GetSetMethod()' null);// stack is now [parameters] [[parameters]] [parameter] " is 151.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "                    il.EmitCall(OpCodes.Callvirt' typeof(IDbDataParameter).GetProperty("Size").GetSetMethod()' null); // stack is now [parameters] [[parameters]] [parameter] " is 153.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetStructDeserializer,The length of the statement  "            // no point using special per-type handling here; it boils down to the same' plus not all are supported anyway (see: SqlDataReader.GetChar - not supported!) " is 156.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "            var dm = new DynamicMethod(string.Format("Deserialize{0}"' Guid.NewGuid())' typeof(object)' new[] { typeof(IDataReader) }' true); " is 129.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                        throw new InvalidOperationException(string.Format("A parameterless default constructor or one matching signature {0} is required for {1} materialization"' proposedTypes' type.FullName)); " is 186.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                            memberType == typeof(char) ? "ReadChar" : "ReadNullableChar"' BindingFlags.Static | BindingFlags.Public)' null); // stack is now [target][target][typed-value] " is 158.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                                il.EmitCall(OpCodes.Call' typeof(Type).GetMethod("GetTypeFromHandle")' null);// stack is now [target][target][enum-type] " is 120.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                                il.Emit(OpCodes.Newobj' memberType.GetConstructor(new[] { nullUnderlyingType })); // stack is now [target][target][typed-value] " is 127.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                            il.Emit(OpCodes.Newobj' memberType.GetConstructor(new Type[] { typeof(byte[]) }));// stack is now [target][target][binary] " is 122.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                            if ((hasTypeHandler = typeHandlers.ContainsKey(unboxType)) || colType == unboxType || dataTypeCode == unboxTypeCode || dataTypeCode == Type.GetTypeCode(nullUnderlyingType)) " is 172.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                                    il.EmitCall(OpCodes.Call' typeof(TypeHandlerCache<>).MakeGenericType(unboxType).GetMethod("Parse")' null); // stack is now [target][target][typed-value] " is 152.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "                                    il.Emit(OpCodes.Newobj' unboxType.GetConstructor(new[] { nullUnderlyingType })); // stack is now [target][target][typed-value] " is 126.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,FlexibleConvertBoxedFromHeadOfStack,The length of the statement  "                    il.EmitCall(OpCodes.Call' typeof(Type).GetMethod("GetTypeFromHandle")' null); // stack is now [target][target][value][member-type] " is 130.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,FlexibleConvertBoxedFromHeadOfStack,The length of the statement  "                    il.EmitCall(OpCodes.Call' typeof(Convert).GetMethod("ChangeType"' new Type[] { typeof(object)' typeof(Type) })' null); // stack is now [target][target][boxed-member-type-value] " is 176.
Long Statement,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetOperator,The length of the statement  "            return ResolveOperator(fromMethods = from.GetMethods(BindingFlags.Static | BindingFlags.Public)' from' to' "op_Implicit") " is 121.
Long Statement,Dappers,GridReader,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,ReadImpl,The length of the statement  "                if (reader == null) throw new ObjectDisposedException(GetType().FullName' "The reader has been disposed; this can happen after all data has been consumed"); " is 156.
Long Statement,Dappers,GridReader,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,ReadImpl,The length of the statement  "                if (consumed) throw new InvalidOperationException("Query results must be consumed in the correct order' and each result can only be consumed once"); " is 148.
Long Statement,Dappers,GridReader,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiReadInternal,The length of the statement  "                    foreach (var r in SqlMapper.MultiMapImpl<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>(null' default(CommandDefinition)' func' splitOn' reader' identity' false)) " is 184.
Long Statement,Dappers,DynamicParameters,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Add,The length of the statement  "            parameters[Clean(name)] = new ParamInfo() { Name = name' Value = value' ParameterDirection = direction ?? ParameterDirection.Input' DbType = dbType' Size = size }; " is 163.
Long Statement,Dappers,DynamicParameters,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,AddParameters,The length of the statement  "                if (dbType == null && val != null && !isCustomQueryParameter) dbType = SqlMapper.LookupDbType(val.GetType()' name' true' out handler); " is 134.
Long Statement,Dappers,DynamicParameters,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Output,The length of the statement  "            var dm = new DynamicMethod(string.Format("ExpressionParam{0}"' Guid.NewGuid())' null' new[] { typeof(object)' this.GetType() }' true); " is 134.
Long Statement,Dappers,DynamicParameters,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Output,The length of the statement  "            var paramGetter = this.GetType().GetMethod("Get"' new Type[] { typeof(string) }).MakeGenericMethod(lastMemberAccess.Type); " is 122.
Long Statement,Dappers,DynamicParameters,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Output,The length of the statement  "                    dbType = (!dbType.HasValue) ? SqlMapper.LookupDbType(targetMemberType' targetMemberType.Name' true' out handler) : dbType; " is 122.
Long Statement,Dappers,DbString,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,AddParameter,The length of the statement  "            param.DbType = IsAnsi ? (IsFixedLength ? DbType.AnsiStringFixedLength : DbType.AnsiString) : (IsFixedLength ? DbType.StringFixedLength : DbType.String); " is 152.
Long Statement,Dappers,DefaultTypeMap,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,FindConstructor,The length of the statement  "            foreach (ConstructorInfo ctor in constructors.OrderBy(c => c.IsPublic ? 0 : (c.IsPrivate ? 2 : 1)).ThenBy(c => c.GetParameters().Length)) " is 137.
Long Statement,Dappers,DefaultTypeMap,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,FindExplicitConstructor,The length of the statement  "            var withAttr = constructors.Where(c => c.GetCustomAttributes(typeof(ExplicitConstructorAttribute)' true).Length > 0).ToList(); " is 126.
Long Statement,Dappers,DefaultTypeMap,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetConstructorParameter,The length of the statement  "            return new SimpleMemberMap(columnName' parameters.FirstOrDefault(p => string.Equals(p.Name' columnName' StringComparison.OrdinalIgnoreCase))); " is 142.
Long Statement,Dappers,DefaultTypeMap,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetMember,The length of the statement  "                property = _properties.FirstOrDefault(p => string.Equals(p.Name' columnName.Replace("_"' "")' StringComparison.Ordinal)) " is 120.
Long Statement,Dappers,DefaultTypeMap,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetMember,The length of the statement  "                    ?? _properties.FirstOrDefault(p => string.Equals(p.Name' columnName.Replace("_"' "")' StringComparison.OrdinalIgnoreCase)); " is 123.
Complex Conditional,Dappers,CommandDefinition,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetBasicPropertySetter,The conditional expression  "prop != null && prop.CanWrite && prop.PropertyType == expectedType                  && ((indexers = prop.GetIndexParameters()) == null || indexers.Length == 0)"  is complex.
Complex Conditional,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetDeserializer,The conditional expression  "!(typeMap.ContainsKey(type) || type.IsEnum || type.FullName == LinqBinary ||                  (type.IsValueType && (underlyingType = Nullable.GetUnderlyingType(type)) != null && underlyingType.IsEnum))"  is complex.
Complex Conditional,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetTypeDeserializer,The conditional expression  "(hasTypeHandler = typeHandlers.ContainsKey(unboxType)) || colType == unboxType || dataTypeCode == unboxTypeCode || dataTypeCode == Type.GetTypeCode(nullUnderlyingType)"  is complex.
Complex Conditional,Dappers,DefaultTypeMap,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,FindConstructor,The conditional expression  "unboxedType != types[i]                          && !(unboxedType.IsEnum && Enum.GetUnderlyingType(unboxedType) == types[i])                          && !(unboxedType == typeof(char) && types[i] == typeof(string))"  is complex.
Empty Catch Block,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,QueryMultipleImpl,The method has an empty catch block.
Empty Catch Block,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,QueryImpl,The method has an empty catch block.
Empty Catch Block,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,MultiMapException,The method has an empty catch block.
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GetColumnHash,The following statement contains a magic number: hash = (hash * 31) + (tmp == null ? 0 : tmp.GetHashCode());
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)              {                  case 1:                      return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));                  case 2:                      return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));                  case 3:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30                  case 4:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));                  case 5:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r));                  case 6:                      return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TSixth' TSeventh' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)' (TSixth)otherDeserializers[4](r)' (TSeventh)otherDeserializers[5](r));  #endif                  default:                      throw new NotSupportedException();              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,LoadLocal,The following statement contains a magic number: switch (index)              {                  case 0: il.Emit(OpCodes.Ldloc_0); break;                  case 1: il.Emit(OpCodes.Ldloc_1); break;                  case 2: il.Emit(OpCodes.Ldloc_2); break;                  case 3: il.Emit(OpCodes.Ldloc_3); break;                  default:                      if (index <= 255)                      {                          il.Emit(OpCodes.Ldloc_S' (byte)index);                      }                      else                      {                          il.Emit(OpCodes.Ldloc' (short)index);                      }                      break;              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,LoadLocal,The following statement contains a magic number: switch (index)              {                  case 0: il.Emit(OpCodes.Ldloc_0); break;                  case 1: il.Emit(OpCodes.Ldloc_1); break;                  case 2: il.Emit(OpCodes.Ldloc_2); break;                  case 3: il.Emit(OpCodes.Ldloc_3); break;                  default:                      if (index <= 255)                      {                          il.Emit(OpCodes.Ldloc_S' (byte)index);                      }                      else                      {                          il.Emit(OpCodes.Ldloc' (short)index);                      }                      break;              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,LoadLocal,The following statement contains a magic number: switch (index)              {                  case 0: il.Emit(OpCodes.Ldloc_0); break;                  case 1: il.Emit(OpCodes.Ldloc_1); break;                  case 2: il.Emit(OpCodes.Ldloc_2); break;                  case 3: il.Emit(OpCodes.Ldloc_3); break;                  default:                      if (index <= 255)                      {                          il.Emit(OpCodes.Ldloc_S' (byte)index);                      }                      else                      {                          il.Emit(OpCodes.Ldloc' (short)index);                      }                      break;              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,StoreLocal,The following statement contains a magic number: switch (index)              {                  case 0: il.Emit(OpCodes.Stloc_0); break;                  case 1: il.Emit(OpCodes.Stloc_1); break;                  case 2: il.Emit(OpCodes.Stloc_2); break;                  case 3: il.Emit(OpCodes.Stloc_3); break;                  default:                      if (index <= 255)                      {                          il.Emit(OpCodes.Stloc_S' (byte)index);                      }                      else                      {                          il.Emit(OpCodes.Stloc' (short)index);                      }                      break;              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,StoreLocal,The following statement contains a magic number: switch (index)              {                  case 0: il.Emit(OpCodes.Stloc_0); break;                  case 1: il.Emit(OpCodes.Stloc_1); break;                  case 2: il.Emit(OpCodes.Stloc_2); break;                  case 3: il.Emit(OpCodes.Stloc_3); break;                  default:                      if (index <= 255)                      {                          il.Emit(OpCodes.Stloc_S' (byte)index);                      }                      else                      {                          il.Emit(OpCodes.Stloc' (short)index);                      }                      break;              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,StoreLocal,The following statement contains a magic number: switch (index)              {                  case 0: il.Emit(OpCodes.Stloc_0); break;                  case 1: il.Emit(OpCodes.Stloc_1); break;                  case 2: il.Emit(OpCodes.Stloc_2); break;                  case 3: il.Emit(OpCodes.Stloc_3); break;                  default:                      if (index <= 255)                      {                          il.Emit(OpCodes.Stloc_S' (byte)index);                      }                      else                      {                          il.Emit(OpCodes.Stloc' (short)index);                      }                      break;              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,LoadLocalAddress,The following statement contains a magic number: index <= 255
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)              {                  case -1: il.Emit(OpCodes.Ldc_I4_M1); break;                  case 0: il.Emit(OpCodes.Ldc_I4_0); break;                  case 1: il.Emit(OpCodes.Ldc_I4_1); break;                  case 2: il.Emit(OpCodes.Ldc_I4_2); break;                  case 3: il.Emit(OpCodes.Ldc_I4_3); break;                  case 4: il.Emit(OpCodes.Ldc_I4_4); break;                  case 5: il.Emit(OpCodes.Ldc_I4_5); break;                  case 6: il.Emit(OpCodes.Ldc_I4_6); break;                  case 7: il.Emit(OpCodes.Ldc_I4_7); break;                  case 8: il.Emit(OpCodes.Ldc_I4_8); break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Dappers,Identity,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = 17;
Magic Number,Dappers,Identity,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = hashCode * 23 + commandType.GetHashCode();
Magic Number,Dappers,Identity,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = hashCode * 23 + gridIndex.GetHashCode();
Magic Number,Dappers,Identity,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = hashCode * 23 + (sql == null ? 0 : sql.GetHashCode());
Magic Number,Dappers,Identity,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = hashCode * 23 + (type == null ? 0 : type.GetHashCode());
Magic Number,Dappers,Identity,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = hashCode * 23 + (t == null ? 0 : t.GetHashCode());
Magic Number,Dappers,Identity,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = hashCode * 23 + (connectionString == null ? 0 : SqlMapper.connectionStringComparer.GetHashCode(connectionString));
Magic Number,Dappers,Identity,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = hashCode * 23 + (parametersType == null ? 0 : parametersType.GetHashCode());
Magic Number,Dappers,DefaultTypeMap,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,FindConstructor,The following statement contains a magic number: constructors.OrderBy(c => c.IsPublic ? 0 : (c.IsPrivate ? 2 : 1)).ThenBy(c => c.GetParameters().Length)
Missing Default,Dappers,SqlMapper,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,LookupDbType,The following switch statement is missing a default case: switch (type.FullName)              {                  case "Microsoft.SqlServer.Types.SqlGeography":                      AddTypeHandler(type' handler = new UdtTypeHandler("GEOGRAPHY"));                      return DbType.Object;                  case "Microsoft.SqlServer.Types.SqlGeometry":                      AddTypeHandler(type' handler = new UdtTypeHandler("GEOMETRY"));                      return DbType.Object;                  case "Microsoft.SqlServer.Types.SqlHierarchyId":                      AddTypeHandler(type' handler = new UdtTypeHandler("HIERARCHYID"));                      return DbType.Object;              }
Missing Default,Dappers,DynamicParameters,D:\research\architectureSmells\repos1\TwoMaKing_EApp\EApp.Respositories.Dapper\SqlMapper.cs,Clean,The following switch statement is missing a default case: switch (name[0])                  {                      case '@':                      case ':':                      case '?':                          return name.Substring(1);                  }
