Implementation smell,Namespace,Class,File,Method,Description
Long Method,SpecBind.Selenium,SeleniumPage,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumPage.cs,WaitForElement,The method has 67 lines of code.
Complex Method,SpecBind.Selenium,NativeAttributeBuilder,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\NativeAttributeBuilder.cs,GetLocator,Cyclomatic complexity of the method is 9
Complex Method,SpecBind.Selenium,SeleniumBrowser,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowser.cs,DismissAlert,Cyclomatic complexity of the method is 12
Complex Method,SpecBind.Selenium,SeleniumBrowserFactory,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowserFactory.cs,CreateWebDriver,Cyclomatic complexity of the method is 26
Complex Method,SpecBind.Selenium,SeleniumBrowserFactory,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowserFactory.cs,RemoteDriverExists,Cyclomatic complexity of the method is 35
Complex Method,SpecBind.Selenium,SeleniumPage,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumPage.cs,GetElementText,Cyclomatic complexity of the method is 7
Complex Method,SpecBind.Selenium,SeleniumPage,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumPage.cs,WaitForElement,Cyclomatic complexity of the method is 25
Complex Method,SpecBind.Selenium,SeleniumPage,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumPage.cs,FillPage,Cyclomatic complexity of the method is 20
Long Parameter List,SpecBind.Selenium,LocatorBuilder,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\LocatorBuilder.cs,SetProperty,The method has 4 parameters.
Long Parameter List,SpecBind.Selenium,LocatorBuilder,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\LocatorBuilder.cs,SetAttribute,The method has 4 parameters.
Long Parameter List,SpecBind.Selenium,SeleniumBrowser,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowser.cs,AddCookie,The method has 6 parameters.
Long Statement,SpecBind.Selenium,LocatorBuilder,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\LocatorBuilder.cs,GetElementLocators,The length of the statement  "	SetAttribute (xpathTag' "href"' attribute.Url' () => attribute.NormalizedTagName == "a" || attribute.NormalizedTagName == "area"); " is 130.
Long Statement,SpecBind.Selenium,LocatorBuilder,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\LocatorBuilder.cs,GetElementLocators,The length of the statement  "			throw new ElementExecuteException ("Element Locator contains a locator but is missing a TagName property: {0}"' xpathTag.CreateLocator ()); " is 139.
Long Statement,SpecBind.Selenium,SeleniumBrowserFactory,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowserFactory.cs,CreateWebDriver,The length of the statement  "			throw new InvalidOperationException (string.Format ("Browser type '{0}' is not supported in Selenium local mode. Did you mean to configure a remote driver?"' browserType)); " is 172.
Long Statement,SpecBind.Selenium,SeleniumBrowserFactory,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowserFactory.cs,CreateWebDriver,The length of the statement  "	managementSettings.Timeouts ().ImplicitlyWait (browserFactoryConfiguration.ElementLocateTimeout).SetPageLoadTimeout (browserFactoryConfiguration.PageLoadTimeout); " is 162.
Long Statement,SpecBind.Selenium,SeleniumBrowserFactory,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowserFactory.cs,DownloadIeDriver,The length of the statement  "	var fileName = string.Format ("IEDriverServer_{0}_2.50.0.zip"' /* Environment.Is64BitOperatingSystem ? "x64" : */"Win32"); " is 122.
Long Statement,SpecBind.Selenium,SeleniumBrowserFactory,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowserFactory.cs,GetFireFoxDriver,The length of the statement  "			// Debug.WriteLine("SpecBind.Selenium.SeleniumBrowserFactory.GetFireFoxDriver: Setting firefox profile setting:{0} with value: {1}"' configurationElement.Name' configurationElement.Value); " is 188.
Long Statement,SpecBind.Selenium,SeleniumBrowserFactory,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowserFactory.cs,GetFireFoxDriver,The length of the statement  "				// Debug.WriteLine("SpecBind.Selenium.SeleniumBrowserFactory.GetFireFoxDriver: Setting firefox profile setting with int value: '{0}'"' configurationElement.Name); " is 162.
Long Statement,SpecBind.Selenium,SeleniumBrowserFactory,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowserFactory.cs,GetFireFoxDriver,The length of the statement  "				// Debug.WriteLine("SpecBind.Selenium.SeleniumBrowserFactory.GetFireFoxDriver: Setting firefox profile setting with bool value: '{0}'"' configurationElement.Name); " is 163.
Long Statement,SpecBind.Selenium,SeleniumBrowserFactory,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowserFactory.cs,GetFireFoxDriver,The length of the statement  "				// Debug.WriteLine("SpecBind.Selenium.SeleniumBrowserFactory.GetFireFoxDriver: Setting firefox profile setting with string value: '{0}'"' configurationElement.Name); " is 165.
Long Statement,SpecBind.Selenium,SeleniumBrowserFactory,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowserFactory.cs,GetRemoteDriverUri,The length of the statement  "		throw new ConfigurationErrorsException (string.Format ("The {0} setting is not a valid URI: {1}"' RemoteUrlSetting' remoteSetting.Value)); " is 138.
Long Statement,SpecBind.Selenium,SeleniumBrowserFactory,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowserFactory.cs,RemoteDriverExists,The length of the statement  "		throw new InvalidOperationException (string.Format ("Browser Type '{0}' is not supported as a remote driver."' browserType)); " is 125.
Long Statement,SpecBind.Selenium,SeleniumBrowserFactory,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowserFactory.cs,RemoteDriverExists,The length of the statement  "	foreach (var setting in settings.OfType<NameValueConfigurationElement> ().Where (s => reservedSettings.All (r => !string.Equals (r' s.Name' StringComparison.OrdinalIgnoreCase)))) { " is 180.
Long Statement,SpecBind.Selenium,SeleniumTableDriver,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumTableDriver.cs,BuildItemCollection,The length of the statement  "		return list.Count > 1 ? list.Skip (1).ToList ().AsReadOnly () : new ReadOnlyCollection<IWebElement> (new List<IWebElement> (0)); " is 128.
Long Statement,SpecBind.Selenium,SeleniumListElementWrapper,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumListElementWrapper.cs,GetElementLocator,The length of the statement  "	return typeof(TChildElement).TryGetAttribute (out attribute) ? LocatorBuilder.GetElementLocators (attribute).FirstOrDefault () : null; " is 134.
Long Statement,SpecBind.Selenium,SeleniumPage,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumPage.cs,ElementNotExistsCheck,The length of the statement  "	return this.EvaluateWithElementLocateTimeout (new TimeSpan ()' () => CheckElementState (e => !e.Displayed' element' stateIfNotFound: true)); " is 140.
Long Statement,SpecBind.Selenium,SeleniumPageBuilder,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumPageBuilder.cs,AssignElementAttributes,The length of the statement  "		locators.AddRange (nativeItems.Where (a => a.Using != null).OrderBy (n => n.Priority).Select (NativeAttributeBuilder.GetLocator).Where (l => l != null && !localLocators.Any (c => Equals (c' l)))); " is 196.
Long Statement,SpecBind.Selenium,SeleniumPageBuilder,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumPageBuilder.cs,FillConstructorParameter,The length of the statement  "		var parentArg = (rootLocator != null && !typeof(ISearchContext).IsAssignableFrom (parentArgument.Type)) ? rootLocator.Expression : parentArgument.Expression; " is 157.
Magic Number,SpecBind.Selenium,WebElement,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\WebElement.cs,SendKeys,The following statement contains a magic number: for (int tries = 0; tries < 3; tries++) {  	this.WrappedElement.Clear ();  	this.WrappedElement.SendKeys (text);  	actual = this.WrappedElement.GetAttribute ("value");  	if (string.Equals (text' actual' StringComparison.InvariantCultureIgnoreCase)) {  		return;  	}  	System.Threading.Thread.Sleep (500);  }  
Magic Number,SpecBind.Selenium,WebElement,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\WebElement.cs,SendKeys,The following statement contains a magic number: for (int tries = 0; tries < 3; tries++) {  	this.WrappedElement.Clear ();  	this.WrappedElement.SendKeys (text);  	actual = this.WrappedElement.GetAttribute ("value");  	if (string.Equals (text' actual' StringComparison.InvariantCultureIgnoreCase)) {  		return;  	}  	System.Threading.Thread.Sleep (500);  }  
Magic Number,SpecBind.Selenium,WebElement,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\WebElement.cs,SendKeys,The following statement contains a magic number: System.Threading.Thread.Sleep (500);  
Magic Number,SpecBind.Selenium,SeleniumPage,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumPage.cs,Moving,The following statement contains a magic number: Thread.Sleep (200);  
Magic Number,SpecBind.Selenium,SeleniumPage,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumPage.cs,FillPage,The following statement contains a magic number: switch (tagName) {  case "select":  	var selectElement = new SelectElement (element);  	if (selectElement.IsMultiple) {  		selectElement.DeselectAll ();  	}  	selectElement.SelectByText (data);  	break;  case "input":  	// Special case for a checkbox control  	var inputType = element.GetAttribute ("type");  	if (string.Equals ("checkbox"' inputType' StringComparison.OrdinalIgnoreCase)) {  		bool checkValue;  		if (bool.TryParse (data' out checkValue) && element.Selected != checkValue) {  			new SeleniumPage (element).ClickElement (element);  		}  		return;  	}  	if (string.Equals ("radio"' inputType' StringComparison.OrdinalIgnoreCase)) {  		// Need to click twice to select the element.  		new SeleniumPage (element).ClickElement (element' times: 2);  		return;  	}  	if (string.Equals ("file"' inputType' StringComparison.OrdinalIgnoreCase)) {  		FileUploadHelper.UploadFile (data' element.SendKeys);  		return;  	}  	goto default;  default:  	element.SendKeys (data);  	break;  }  
Magic Number,SpecBind.Selenium,SeleniumPage,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumPage.cs,FillPage,The following statement contains a magic number: if (string.Equals ("radio"' inputType' StringComparison.OrdinalIgnoreCase)) {  	// Need to click twice to select the element.  	new SeleniumPage (element).ClickElement (element' times: 2);  	return;  }  
Magic Number,SpecBind.Selenium,SeleniumPage,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumPage.cs,FillPage,The following statement contains a magic number: new SeleniumPage (element).ClickElement (element' times: 2);  
Missing Default,SpecBind.Selenium,SeleniumBrowser,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumBrowser.cs,DismissAlert,The following switch statement is missing a default case: switch (action) {  case AlertBoxAction.Cancel:  case AlertBoxAction.Close:  case AlertBoxAction.Ignore:  case AlertBoxAction.No:  	alert.Dismiss ();  	break;  case AlertBoxAction.Ok:  case AlertBoxAction.Retry:  case AlertBoxAction.Yes:  	alert.Accept ();  	break;  }  
Missing Default,SpecBind.Selenium,SeleniumPage,D:\newReposJune17\dpiessens_specbind\src\SpecBind.Selenium\SeleniumPage.cs,WaitForElement,The following switch statement is missing a default case: switch (waitCondition) {  case WaitConditions.BecomesNonExistent:  	// AKA NotExists  	this.ExecuteWithElementLocateTimeout (new TimeSpan ()' () => {  		try {  			waiter.Until (e => !e.Displayed);  		} catch (NoSuchElementException) {  			return;  		} catch (NotFoundException) {  			return;  		} catch (ElementNotVisibleException) {  			return;  		} catch (StaleElementReferenceException) {  			return;  		}  	});  	break;  case WaitConditions.RemainsNonExistent:  	return this.EvaluateWithElementLocateTimeout (waiter.Timeout' () => {  		try {  			return this.DoesFullTimeoutElapse (waiter' e => e.Displayed);  		} catch (NoSuchElementException) {  			return true;  		} catch (NotFoundException) {  			return true;  		} catch (ElementNotVisibleException) {  			return true;  		} catch (StaleElementReferenceException) {  			return true;  		}  	});  case WaitConditions.BecomesEnabled:  	// AKA Enabled  	waiter.IgnoreExceptionTypes (typeof(ElementNotVisibleException)' typeof(NotFoundException));  	waiter.Until (e => e.Enabled);  	break;  case WaitConditions.BecomesDisabled:  	// AKA NotEnabled  	waiter.IgnoreExceptionTypes (typeof(ElementNotVisibleException)' typeof(NotFoundException));  	waiter.Until (e => !e.Enabled);  	break;  case WaitConditions.BecomesExistent:  	// AKA Exists  	waiter.IgnoreExceptionTypes (typeof(ElementNotVisibleException)' typeof(NotFoundException));  	waiter.Until (e => e.Displayed);  	break;  case WaitConditions.NotMoving:  	waiter.IgnoreExceptionTypes (typeof(ElementNotVisibleException)' typeof(NotFoundException));  	waiter.Until (e => e.Displayed);  	waiter.Until (e => !this.Moving (e));  	break;  case WaitConditions.RemainsEnabled:  	return this.DoesFullTimeoutElapse (waiter' e => !e.Enabled);  case WaitConditions.RemainsDisabled:  	return this.DoesFullTimeoutElapse (waiter' e => e.Enabled);  case WaitConditions.RemainsExistent:  	return this.DoesFullTimeoutElapse (waiter' e => !e.Displayed);  }  
