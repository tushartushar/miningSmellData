Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Hangfire.PostgreSql,PostgreSqlFetchedJob,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlFetchedJob.cs,PostgreSqlFetchedJob,The method has 5 parameters. Parameters: connection' options' id' jobId' queue
Long Parameter List,Hangfire.PostgreSql,PostgreSqlMonitoringApi,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlMonitoringApi.cs,GetJobs,The method has 5 parameters. Parameters: connection' from' count' stateName' selector
Long Identifier,Hangfire.PostgreSql,PostgreSqlStorageOptions,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlStorageOptions.cs,,The length of the parameter _transactionSerializationTimeout is 32.
Long Statement,Hangfire.PostgreSql,PostgreSqlConnection,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlConnection.cs,FetchNextJob,The length of the statement  "					$"Multiple provider instances registered for queues: {String.Join("' "' queues)}. You should choose only one type of persistent queues per server instance."); " is 158.
Long Statement,Hangfire.PostgreSql,PostgreSqlConnection,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlConnection.cs,GetStateData,The length of the statement  "			var sqlState = _connection.Query<SqlState>(sql' new { jobId = Convert.ToInt32(jobId' CultureInfo.InvariantCulture) }).SingleOrDefault(); " is 136.
Long Statement,Hangfire.PostgreSql,PostgreSqlConnection,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlConnection.cs,GetJobParameter,The length of the statement  "			string query = $@"SELECT ""value"" FROM ""{_options.SchemaName}"".""jobparameter"" WHERE ""jobid"" = @id AND ""name"" = @name; " is 126.
Long Statement,Hangfire.PostgreSql,PostgreSqlConnection,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlConnection.cs,GetFirstByLowestScoreFromSet,The length of the statement  "			if (toScore < fromScore) throw new ArgumentException("The `toScore` value must be higher or equal to the `fromScore` value."); " is 126.
Long Statement,Hangfire.PostgreSql,PostgreSqlConnection,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlConnection.cs,GetCounter,The length of the statement  "			string query = $@"select sum(s.""Value"") from (select sum(""value"") as ""Value"" from ""{_options.SchemaName}"".""counter"" where ""key"" = @key) s"; " is 151.
Long Statement,Hangfire.PostgreSql,PostgreSqlConnection,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlConnection.cs,GetRangeFromSet,The length of the statement  "			return _connection.Query<string>(query' new { key' startingFrom = startingFrom + 1' endingAt = endingAt + 1 }).ToList(); " is 120.
Long Statement,Hangfire.PostgreSql,PostgreSqlConnection,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlConnection.cs,GetValueFromHash,The length of the statement  "			string query = $@"select ""value"" from ""{_options.SchemaName}"".""hash"" where ""key"" = @key and ""field"" = @field"; " is 120.
Long Statement,Hangfire.PostgreSql,PostgreSqlDistributedLock,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlDistributedLock.cs,TryRemoveDeadlock,The length of the statement  "                    affected = connection.Execute($@"DELETE FROM ""{options.SchemaName}"".""lock"" WHERE ""resource"" = @resource AND ""acquired"" < @timeout"' " is 139.
Long Statement,Hangfire.PostgreSql,PostgreSqlDistributedLock,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlDistributedLock.cs,PostgreSqlDistributedLock_Init_UpdateCount,The length of the statement  "                    $@"UPDATE ""{options.SchemaName}"".""lock"" SET ""updatecount"" = 1 WHERE ""updatecount"" = 0 AND ""resource"" = @resource"' " is 124.
Long Statement,Hangfire.PostgreSql,PostgreSqlJobQueue,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlJobQueue.cs,Dequeue_UpdateCount,The length of the statement  "SELECT ""id"" AS ""Id""' ""jobid"" AS ""JobId""' ""queue"" AS ""Queue""' ""fetchedat"" AS ""FetchedAt""' ""updatecount"" AS ""UpdateCount"" " is 139.
Long Statement,Hangfire.PostgreSql,PostgreSqlMonitoringApi,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlMonitoringApi.cs,JobDetails,The length of the statement  "SELECT ""id"" ""Id""' ""invocationdata"" ""InvocationData""' ""arguments"" ""Arguments""' ""createdat"" ""CreatedAt""' ""expireat"" ""ExpireAt""  " is 144.
Long Statement,Hangfire.PostgreSql,PostgreSqlMonitoringApi,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlMonitoringApi.cs,JobDetails,The length of the statement  "SELECT ""jobid"" ""JobId""' ""name"" ""Name""' ""value"" ""Value"" from """ + _options.SchemaName + @""".""jobparameter""  " is 121.
Long Statement,Hangfire.PostgreSql,PostgreSqlMonitoringApi,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlMonitoringApi.cs,EnqueuedJobs,The length of the statement  "SELECT j.""id"" ""Id""' j.""invocationdata"" ""InvocationData""' j.""arguments"" ""Arguments""' j.""createdat"" ""CreatedAt""' j.""expireat"" ""ExpireAt""' s.""name"" ""StateName""' s.""reason"" ""StateReason""' s.""data"" ""StateData"" " is 236.
Long Statement,Hangfire.PostgreSql,PostgreSqlMonitoringApi,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlMonitoringApi.cs,GetJobs,The length of the statement  "SELECT j.""id"" ""Id""' j.""invocationdata"" ""InvocationData""' j.""arguments"" ""Arguments""' j.""createdat"" ""CreatedAt""'  " is 126.
Long Statement,Hangfire.PostgreSql,PostgreSqlMonitoringApi,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlMonitoringApi.cs,GetJobs,The length of the statement  "    j.""expireat"" ""ExpireAt""' NULL ""FetchedAt""' j.""statename"" ""StateName""' s.""reason"" ""StateReason""' s.""data"" ""StateData"" " is 134.
Long Statement,Hangfire.PostgreSql,PostgreSqlMonitoringApi,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlMonitoringApi.cs,FetchedJobs,The length of the statement  "SELECT j.""id"" ""Id""' j.""invocationdata"" ""InvocationData""' j.""arguments"" ""Arguments""' j.""createdat"" ""CreatedAt""'  " is 126.
Long Statement,Hangfire.PostgreSql,PostgreSqlMonitoringApi,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlMonitoringApi.cs,FetchedJobs,The length of the statement  "    j.""expireat"" ""ExpireAt""' jq.""fetchedat"" ""FetchedAt""' j.""statename"" ""StateName""' s.""reason"" ""StateReason""' s.""data"" ""StateData"" " is 146.
Long Statement,Hangfire.PostgreSql,PostgreSqlObjectsInstaller,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlObjectsInstaller.cs,Install,The length of the statement  "                            connection.Execute($@"UPDATE ""{schemaName}"".""schema"" SET ""version"" = @version WHERE ""version"" = @previousVersion"' new { version' previousVersion }' transaction); " is 170.
Long Statement,Hangfire.PostgreSql,PostgreSqlObjectsInstaller,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlObjectsInstaller.cs,GetStringResource,The length of the statement  "                    throw new MissingManifestResourceException($"Requested resource `{resourceName}` was not found in the assembly `{assembly}`."); " is 127.
Empty Catch Block,Hangfire.PostgreSql,PostgreSqlDistributedLock,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlDistributedLock.cs,PostgreSqlDistributedLock_Init_Transaction,The method has an empty catch block.
Empty Catch Block,Hangfire.PostgreSql,PostgreSqlDistributedLock,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlDistributedLock.cs,TryRemoveDeadlock,The method has an empty catch block.
Empty Catch Block,Hangfire.PostgreSql,PostgreSqlDistributedLock,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlDistributedLock.cs,PostgreSqlDistributedLock_Init_UpdateCount,The method has an empty catch block.
Magic Number,Hangfire.PostgreSql,PostgreSqlMonitoringApi,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlMonitoringApi.cs,Queues,The following statement contains a magic number: return UseConnection<IList<QueueWithTopEnqueuedJobsDto>>(connection =>              {                  var tuples = _queueProviders                      .Select(x => x.GetJobQueueMonitoringApi(connection))                      .SelectMany(x => x.GetQueues()' (monitoring' queue) => new { Monitoring = monitoring' Queue = queue })                      .OrderBy(x => x.Queue)                      .ToArray();                    var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length);                    foreach (var tuple in tuples)                  {                      var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue' 0' 5);                      var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue);                        result.Add(new QueueWithTopEnqueuedJobsDto                      {                          Name = tuple.Queue'                          Length = counters.EnqueuedCount ?? 0'                          Fetched = counters.FetchedCount'                          FirstJobs = EnqueuedJobs(connection' enqueuedJobIds)                      });                  }                    return result;              });
Magic Number,Hangfire.PostgreSql,PostgreSqlMonitoringApi,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlMonitoringApi.cs,GetHourlyTimelineStats,The following statement contains a magic number: i < 24
Magic Number,Hangfire.PostgreSql,PostgreSqlMonitoringApi,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlMonitoringApi.cs,GetTimelineStats,The following statement contains a magic number: i < 7
Magic Number,Hangfire.PostgreSql,PostgreSqlObjectsInstaller,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlObjectsInstaller.cs,Install,The following statement contains a magic number: int version = 3;
Magic Number,Hangfire.PostgreSql,PostgreSqlObjectsInstaller,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlObjectsInstaller.cs,Install,The following statement contains a magic number: command.CommandTimeout = 120;
Magic Number,Hangfire.PostgreSql,PostgreSqlStorageOptions,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlStorageOptions.cs,PostgreSqlStorageOptions,The following statement contains a magic number: QueuePollInterval = TimeSpan.FromSeconds(15);
Magic Number,Hangfire.PostgreSql,PostgreSqlStorageOptions,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlStorageOptions.cs,PostgreSqlStorageOptions,The following statement contains a magic number: InvisibilityTimeout = TimeSpan.FromMinutes(30);
Magic Number,Hangfire.PostgreSql,PostgreSqlStorageOptions,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlStorageOptions.cs,PostgreSqlStorageOptions,The following statement contains a magic number: DistributedLockTimeout = TimeSpan.FromMinutes(10);
Magic Number,Hangfire.PostgreSql,PostgreSqlStorageOptions,D:\research\architectureSmells\repos\frankhommers_Hangfire.PostgreSql\src\Hangfire.PostgreSql\PostgreSqlStorageOptions.cs,PostgreSqlStorageOptions,The following statement contains a magic number: TransactionSynchronisationTimeout = TimeSpan.FromMilliseconds(500);
