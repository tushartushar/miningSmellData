Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,AccessTokenValidation.Tests,InMemoryClaimsCacheTests,D:\research\architectureSmells\repos\IdentityServer_IdentityServer3.AccessTokenValidation\source\AccessTokenValidation.Tests\InMemoryClaimsCacheTests.cs,DebugToConsole,The method has 5 parameters. Parameters: now' expiryClaimSaysTokenExpiresAt' options' cacheExpiryEvictsTokenAt' expectedCacheExpiry
Long Parameter List,AccessTokenValidation.Tests.Util,TokenFactory,D:\research\architectureSmells\repos\IdentityServer_IdentityServer3.AccessTokenValidation\source\AccessTokenValidation.Tests\Util\TokenFactory.cs,CreateToken,The method has 6 parameters. Parameters: issuer' audience' scope' ttl' additionalClaims' signingCertificate
Long Identifier,AccessTokenValidation.Tests,InMemoryClaimsCacheTests,D:\research\architectureSmells\repos\IdentityServer_IdentityServer3.AccessTokenValidation\source\AccessTokenValidation.Tests\InMemoryClaimsCacheTests.cs,,The length of the parameter ExpiryClaimSaysTokenExpiresInMinutes is 36.
Long Statement,AccessTokenValidation.Tests,InMemoryClaimsCacheTests,D:\research\architectureSmells\repos\IdentityServer_IdentityServer3.AccessTokenValidation\source\AccessTokenValidation.Tests\InMemoryClaimsCacheTests.cs,Arrange,The length of the statement  "			Claims = new[] {new Claim("bar"'"baz")' new Claim(ClaimTypes.Expiration'ExpiryClaimSaysTokenExpiresAt.ToEpochTime().ToString()) }; " is 130.
Long Statement,AccessTokenValidation.Tests.Integration_Tests,Introspection,D:\research\architectureSmells\repos\IdentityServer_IdentityServer3.AccessTokenValidation\source\AccessTokenValidation.Tests\Integration Tests\Introspection.cs,Unauthorized_Client,The length of the statement  "            _options.IntrospectionHttpHandler = new IntrospectionEndpointHandler(IntrospectionEndpointHandler.Behavior.Unauthorized); " is 121.
Magic Number,AccessTokenValidation.Tests,InMemoryClaimsCacheTests,D:\research\architectureSmells\repos\IdentityServer_IdentityServer3.AccessTokenValidation\source\AccessTokenValidation.Tests\InMemoryClaimsCacheTests.cs,WhenTokenExpiryClaimExpiresBeforeClaimsCacheDuration_CacheExpiry_ShouldUseTokenExpiryClaim,The following statement contains a magic number: CacheEvictsTokensAfterMinutes = 5;
Magic Number,AccessTokenValidation.Tests,InMemoryClaimsCacheTests,D:\research\architectureSmells\repos\IdentityServer_IdentityServer3.AccessTokenValidation\source\AccessTokenValidation.Tests\InMemoryClaimsCacheTests.cs,WhenTokenExpiryClaimExpiresAfterClaimsCacheDuration_CacheExpiry_ShouldUseClaimsCacheDuration,The following statement contains a magic number: ExpiryClaimSaysTokenExpiresInMinutes = 10;
Magic Number,AccessTokenValidation.Tests,InMemoryClaimsCacheTests,D:\research\architectureSmells\repos\IdentityServer_IdentityServer3.AccessTokenValidation\source\AccessTokenValidation.Tests\InMemoryClaimsCacheTests.cs,WhenTokenExpiryClaimExpiresAfterClaimsCacheDuration_CacheExpiry_ShouldUseClaimsCacheDuration,The following statement contains a magic number: CacheEvictsTokensAfterMinutes = 5;
Magic Number,AccessTokenValidation.Tests.Util,SuccessValidationEndointHandler,D:\research\architectureSmells\repos\IdentityServer_IdentityServer3.AccessTokenValidation\source\AccessTokenValidation.Tests\Util\SuccessValidationEndointHandler.cs,SendAsync,The following statement contains a magic number: var responseObject = new Dictionary<object' object>              {                   { "sub"' 123 }              };
Magic Number,AccessTokenValidation.Tests.Util,PipelineFactory,D:\research\architectureSmells\repos\IdentityServer_IdentityServer3.AccessTokenValidation\source\AccessTokenValidation.Tests\Util\PipelineFactory.cs,Create,The following statement contains a magic number: app.Use((context' next) =>              {                  var user = context.Authentication.User;                    if (user == null ||                      user.Identity == null ||                      !user.Identity.IsAuthenticated)                  {                      context.Response.StatusCode = 401;                  }                  else                  {                      context.Response.StatusCode = 200;                  }                    return Task.FromResult(0);              });
Magic Number,AccessTokenValidation.Tests.Util,PipelineFactory,D:\research\architectureSmells\repos\IdentityServer_IdentityServer3.AccessTokenValidation\source\AccessTokenValidation.Tests\Util\PipelineFactory.cs,Create,The following statement contains a magic number: app.Use((context' next) =>              {                  var user = context.Authentication.User;                    if (user == null ||                      user.Identity == null ||                      !user.Identity.IsAuthenticated)                  {                      context.Response.StatusCode = 401;                  }                  else                  {                      context.Response.StatusCode = 200;                  }                    return Task.FromResult(0);              });
Magic Number,AccessTokenValidation.Tests.Util,Cert,D:\research\architectureSmells\repos\IdentityServer_IdentityServer3.AccessTokenValidation\source\AccessTokenValidation.Tests\Util\Cert.cs,ReadStream,The following statement contains a magic number: var buffer = new byte[16 * 1024];
Magic Number,AccessTokenValidation.Tests.Util,Cert,D:\research\architectureSmells\repos\IdentityServer_IdentityServer3.AccessTokenValidation\source\AccessTokenValidation.Tests\Util\Cert.cs,ReadStream,The following statement contains a magic number: var buffer = new byte[16 * 1024];
