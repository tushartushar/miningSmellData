Implementation smell,Namespace,Class,File,Method,Description
Long Method,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The method has 155 lines of code.
Long Method,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,doqueues,The method has 111 lines of code.
Long Method,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The method has 289 lines of code.
Long Method,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,PositionCache_CacheEvent,The method has 113 lines of code.
Long Method,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,VBRediCache_CacheEvent,The method has 145 lines of code.
Complex Method,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,getpricetype,Cyclomatic complexity of the method is 8
Complex Method,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,doqueues,Cyclomatic complexity of the method is 17
Complex Method,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,Cyclomatic complexity of the method is 49
Complex Method,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,PositionCache_CacheEvent,Cyclomatic complexity of the method is 20
Complex Method,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,VBRediCache_CacheEvent,Cyclomatic complexity of the method is 29
Long Statement,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,_report_Click,The length of the statement  "            CrashReport.Report(PROGRAM' string.Empty' string.Empty' _msgs.ToString()' null' new AssemblaTicketWindow.LoginSucceedDel(success)' false); " is 138.
Long Statement,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(RediMain)); " is 128.
Long Statement,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The length of the statement  "            this._user.DataBindings.Add(new System.Windows.Forms.Binding("Text"' global::ServerRedi.Properties.Settings.Default' "un"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 191.
Long Statement,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The length of the statement  "            this._pass.DataBindings.Add(new System.Windows.Forms.Binding("Text"' global::ServerRedi.Properties.Settings.Default' "pw"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 191.
Long Statement,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The length of the statement  "            this.txtAcronym.DataBindings.Add(new System.Windows.Forms.Binding("Text"' global::ServerRedi.Properties.Settings.Default' "acronym"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 201.
Long Statement,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The length of the statement  "            this.txtAccount.DataBindings.Add(new System.Windows.Forms.Binding("Text"' global::ServerRedi.Properties.Settings.Default' "accnt"' true' System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged)); " is 199.
Empty Catch Block,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,Stop,The method has an empty catch block.
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(9' 8);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(9' 8);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.label1.Margin = new System.Windows.Forms.Padding(2' 0' 2' 0);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.label1.Margin = new System.Windows.Forms.Padding(2' 0' 2' 0);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(32' 13);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(32' 13);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(8' 31);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(8' 31);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.label2.Margin = new System.Windows.Forms.Padding(2' 0' 2' 0);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.label2.Margin = new System.Windows.Forms.Padding(2' 0' 2' 0);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(33' 13);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(33' 13);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._user.Location = new System.Drawing.Point(64' 8);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._user.Location = new System.Drawing.Point(64' 8);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._user.Margin = new System.Windows.Forms.Padding(2);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._user.Size = new System.Drawing.Size(77' 20);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._user.Size = new System.Drawing.Size(77' 20);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._user.TabIndex = 2;
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.Location = new System.Drawing.Point(64' 31);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.Location = new System.Drawing.Point(64' 31);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.Margin = new System.Windows.Forms.Padding(2);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.Size = new System.Drawing.Size(77' 20);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.Size = new System.Drawing.Size(77' 20);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._pass.TabIndex = 3;
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._login.Location = new System.Drawing.Point(12' 105);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._login.Location = new System.Drawing.Point(12' 105);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._login.Margin = new System.Windows.Forms.Padding(2);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._login.Size = new System.Drawing.Size(50' 19);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._login.Size = new System.Drawing.Size(50' 19);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._login.TabIndex = 4;
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._msg.Location = new System.Drawing.Point(67' 105);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._msg.Location = new System.Drawing.Point(67' 105);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._msg.Margin = new System.Windows.Forms.Padding(2);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._msg.Size = new System.Drawing.Size(20' 19);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._msg.Size = new System.Drawing.Size(20' 19);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._msg.TabIndex = 5;
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._report.Location = new System.Drawing.Point(91' 105);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._report.Location = new System.Drawing.Point(91' 105);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._report.Margin = new System.Windows.Forms.Padding(2);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._report.Size = new System.Drawing.Size(17' 19);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._report.Size = new System.Drawing.Size(17' 19);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this._report.TabIndex = 6;
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.lblAccount.Location = new System.Drawing.Point(9' 78);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.lblAccount.Location = new System.Drawing.Point(9' 78);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.lblAccount.Margin = new System.Windows.Forms.Padding(2' 0' 2' 0);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.lblAccount.Margin = new System.Windows.Forms.Padding(2' 0' 2' 0);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.lblAccount.Size = new System.Drawing.Size(50' 13);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.lblAccount.Size = new System.Drawing.Size(50' 13);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.lblAccount.TabIndex = 7;
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.lblAcr.Location = new System.Drawing.Point(9' 55);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.lblAcr.Location = new System.Drawing.Point(9' 55);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.lblAcr.Margin = new System.Windows.Forms.Padding(2' 0' 2' 0);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.lblAcr.Margin = new System.Windows.Forms.Padding(2' 0' 2' 0);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.lblAcr.Size = new System.Drawing.Size(51' 13);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.lblAcr.Size = new System.Drawing.Size(51' 13);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.lblAcr.TabIndex = 9;
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.txtAcronym.Location = new System.Drawing.Point(64' 56);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.txtAcronym.Location = new System.Drawing.Point(64' 56);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.txtAcronym.Size = new System.Drawing.Size(77' 20);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.txtAcronym.Size = new System.Drawing.Size(77' 20);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.txtAcronym.TabIndex = 10;
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.txtAccount.Location = new System.Drawing.Point(64' 78);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.txtAccount.Location = new System.Drawing.Point(64' 78);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.txtAccount.Size = new System.Drawing.Size(77' 20);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.txtAccount.Size = new System.Drawing.Size(77' 20);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.txtAccount.TabIndex = 11;
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(228' 134);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(228' 134);
Magic Number,ServerRedi,RediMain,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\RediMain.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(2);
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Magic Number,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,VBRediCache_CacheEvent,The following statement contains a magic number: switch (action)              {                  case 1: //CN_SUBMIT                      {                          try                          {                              v("for submit row: " + row.ToString() + " action: " + action.ToString());                              int i = row != 0 ? row - 1 : row;                              Tick k = new TickImpl();                              _cc.VBGetCell(i' "SYMBOL"' ref cv' ref err);                              v("getcellerr: " + err.ToString());                              if (!(cv == null))                              {                                  k.symbol = cv.ToString();                              }                              _cc.VBGetCell(i' "LastPrice"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (decimal.TryParse(cv.ToString()' out dv))                                      k.trade = dv;                              }                              _cc.VBGetCell(i' "BidPrice"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (decimal.TryParse(cv.ToString()' out dv))                                      k.bid = dv;                              }                              _cc.VBGetCell(i' "AskPrice"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (decimal.TryParse(cv.ToString()' out dv))                                      k.ask = dv;                              }                              _cc.VBGetCell(i' "LastSize"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (int.TryParse(cv.ToString()' out iv))                                      k.size = iv;                              }                              _cc.VBGetCell(i' "BidSize"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (int.TryParse(cv.ToString()' out iv))                                      k.bs = iv;                              }                              _cc.VBGetCell(i' "AskSize"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (int.TryParse(cv.ToString()' out iv))                                      k.os = iv;                              }                                                          k.date = Util.ToTLDate(DateTime.Now);                              k.time = Util.DT2FT(DateTime.Now);                              // fill papertrade orders first                              if (isPaperTradeEnabled)                                  ptt.newTick(k);                              tl.newTick(k);                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                      /*                  case 4 : //CN_INSERT                      break;                       * */                  case 5: // CN_UPDATE                      {                          try                          {                              if (TickDebugVerbose)                                  v("for update row: " + row.ToString() + " action: " + action.ToString());                              int i = row;                                                          Tick k = new TickImpl();                              _cc.VBGetCell(i' "SYMBOL"' ref cv' ref err);                              if (TickDebugVerbose)                                  v("getcellerr: " + err.ToString());                                                          if (!(cv == null))                              {                                  k.symbol = cv.ToString();                              }                              _cc.VBGetCell(i' "LastPrice"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (decimal.TryParse(cv.ToString()' out dv))                                  {                                      k.trade = dv;                                      k.size = 1; // this code is just to make everything else working' i.e. Last' High and Low.                                  }                              }                              _cc.VBGetCell(i' "BidPrice"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (decimal.TryParse(cv.ToString()' out dv))                                      k.bid = dv;                              }                              _cc.VBGetCell(i' "AskPrice"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (decimal.TryParse(cv.ToString()' out dv))                                      k.ask = dv;                              }                              //_cc.VBGetCell(i' "LastSize"' ref cv' ref err);                              //if (!(cv == null))                              //{                              //    if (int.TryParse(cv.ToString()' out iv))                              //        k.size = iv;                              //}                              _cc.VBGetCell(i' "BidSize"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (int.TryParse(cv.ToString()' out iv))                                      k.bs = iv;                              }                              _cc.VBGetCell(i' "AskSize"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (int.TryParse(cv.ToString()' out iv))                                      k.os = iv;                              }                              k.date = Util.ToTLDate(DateTime.Now);                              k.time = Util.DT2FT(DateTime.Now);                                                          tl.newTick(k);                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                      /*                  case 7: // CN_REMOVING                      break;                  case 8 : // CN_REMOVED                      break;                       */              }
Duplicate Code,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The method contains a code clone-set at the following line numbers (starting from the method definition): ((87' 108)' (214' 235))
Duplicate Code,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,PositionCache_CacheEvent,The method contains a code clone-set at the following line numbers (starting from the method definition): ((16' 50)' (68' 102))
Missing Default,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,gettiftype,The following switch statement is missing a default case: switch (o.ValidInstruct)              {                  case OrderInstructionType.DAY:                      type = "Day";                      break;                  case OrderInstructionType.GTC:                      type = "Gtc";                      break;                  case OrderInstructionType.OPG:                      type = "OPG";                      break;                  case OrderInstructionType.MOC:                      type = "MOC";                      break;              }
Missing Default,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,MessageCache_CacheEvent,The following switch statement is missing a default case: switch (action)              {                  case 1: //CN_Submit                                          break;                  case 4: //CN_Insert                      {                          try                           {                              int i = row;                              int err = 0;                              object cv = null;                                                          string orderReferenceNumber = String.Empty;                              Order o = new OrderImpl();                              _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.symbol = cv.ToString();                              }                              _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                              if (!(cv == null))                              {                                  v("order side: "+cv.ToString());                                  if (cv.ToString() == "BUY")                                  {                                      o.side = true;                                  }                                  else if (cv.ToString() == "SELL")                                  {                                      o.side = false;                                  }                                  else if (cv.ToString().Contains("SHORT"))                                  {                                      o.side = false;                                  }                              }                              _messageCache.VBGetCell(row' "QUANTITY"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.size = int.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "PRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.price = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "STOPPRICE"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.stopp = decimal.Parse(cv.ToString());                              }                              _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                              if (!(cv == null))                              {                                  o.Account = cv.ToString();                              }                              _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderReferenceNumber = cv.ToString();                              }                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                                                          if (!(cv == null))                              {                                  if (cv.ToString() == "Open")                                  {                                      o.id = row;                                                                          long now = Util.ToTLDate(DateTime.Now);                                      int xsec = (int)(now % 100);                                      long rem = (now - xsec) / 100;                                      o.time = ((int)(rem % 10000)) * 100 + xsec;                                      o.date = (int)((rem - o.time) / 10000);                                      o.size = o.side ? o.UnsignedSize : o.UnsignedSize * -1;                                      OrderIdDict.Add(orderReferenceNumber' (long)row);                                      if (_onotified.Contains((int)row)) return;                                      _onotified.Add(o.id);                                      tl.newOrder(o);                                      v("order ack received and sent: " + o.ToString());                                  }                                  else if (cv.ToString() == "Canceled")                                  {                                      long id = OrderIdDict[orderReferenceNumber];                                      tl.newCancel(id);                                      v("order cancel ack received and sent: " + id);                                  }                                  else if (cv.ToString() == "Complete")                                  {                                      Trade f = new TradeImpl();                                      _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.symbol = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.Account = cv.ToString();                                      }                                      _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          long id = 0;                                          if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                              f.id = id;                                          else                                              f.id = _idt.AssignId;                                          f.id = id;                                      }                                      _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.xsize = int.Parse(cv.ToString());                                      }                                      _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                      if (cv != null)                                      {                                          f.xprice = decimal.Parse(cv.ToString());                                      }                                      else                                      {                                          v(f.symbol + " error getting EXECPRICE' err: " + err+" retrying...");                                          _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                          if (cv != null)                                          {                                              f.xprice = decimal.Parse(cv.ToString());                                          }                                          else                                          {                                              v(f.symbol + " error getting EXECPRICE' err: " + err + " retrying new method...");                                              _messageCache.VBGetCell(row' "EXECVALUE"' ref cv' ref err);                                              bool ok = false;                                              decimal val = 0;                                              int usize = Math.Abs(f.xsize);                                              if (cv != null)                                              {                                                                                                    if (decimal.TryParse(cv.ToString()' out val))                                                  {                                                                                                            if ((val != 0) && (usize != 0))                                                      {                                                          ok = true;                                                          f.xprice = val / usize;                                                      }                                                      else                                                      {                                                        }                                                  }                                              }                                              if (!ok)                                                  v(f.symbol + " error inferring EXECPRICE' usize: " + usize + " execval: " + val);                                            }                                      }                                          _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          f.ex = cv.ToString();                                      }                                      else                                      _messageCache.VBGetCell(row' "EXECSIDE"' ref cv' ref err);                                      if (!(cv == null))                                      {                                          if (cv.ToString().Contains("BUY"))                                          {                                              f.side = true;                                          }                                          else if (cv.ToString().Contains("SELL")                                               || cv.ToString().Contains("SHORT"))                                          {                                              f.side = false;                                          }                                          else                                              v("invalid fill side: " + cv.ToString());                                      }                                      f.xtime = Util.ToTLDate();                                      f.xdate = Util.ToTLTime();                                      Object objErr = null;                                      _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                      if (f.isValid)                                      {                                          pt.Adjust(f);                                          tl.newFill(f);                                          v("fill ack received and sent: " + f.ToString());                                      }                                      else                                          debug("ignoring invalid fill: " + f.ToString());                                  }                              }                                                      }                          catch (Exception ex)                          {                              debug(ex.Message+ex.StackTrace);                          }                      }                      break;                  case 5: //CN_Update                      {                          try                          {                              int i = row;                              int err = 0;                              object cv = null;                              string orderStatus = null;                              _messageCache.VBGetCell(row' "Status"' ref cv' ref err);                              if (!(cv == null))                              {                                  orderStatus = cv.ToString();                              }                              if (orderStatus == "Complete")                              {                                  Trade f = new TradeImpl();                                  _messageCache.VBGetCell(row' "SYMBOL"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.symbol = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "ACCOUNT"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.Account = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "BRSEQ"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      long id = 0;                                      if (OrderIdDict.TryGetValue(cv.ToString()' out id))                                          f.id = id;                                      else                                          f.id = _idt.AssignId;                                      f.id = id;                                  }                                  _messageCache.VBGetCell(row' "EXECPRICE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xprice = decimal.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXECQUANTITY"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.xsize = int.Parse(cv.ToString());                                  }                                  _messageCache.VBGetCell(row' "EXCHANGE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      f.ex = cv.ToString();                                  }                                  _messageCache.VBGetCell(row' "SIDE"' ref cv' ref err);                                  if (!(cv == null))                                  {                                      if (cv.ToString() == "BUY")                                      {                                          f.side = true;                                      }                                      else if (cv.ToString() == "SELL")                                      {                                          f.side = false;                                      }                                  }                                                                  long now = Util.ToTLDate(DateTime.Now);                                  int xsec = (int)(now % 100);                                  long rem = (now - xsec) / 100;                                                                  f.xtime = ((int)(rem % 10000)) * 100 + xsec;                                  f.xdate = (int)((now - f.xtime) / 1000000);                                  Object objErr = null;                                  _positionCache.VBRediCache.AddWatch(2' string.Empty' f.Account' ref objErr);                                  if (f.isValid)                                  {                                      pt.Adjust(f);                                      tl.newFill(f);                                      v("fill ack received and sent: " + f.ToString());                                  }                                  else                                      debug("ignoring invalid fill: " + f.ToString());                              }                              if (orderStatus == "Partial")                              {                              }                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                  case 8: //CN_Remove                      break;              }
Missing Default,ServerRedi,ServerRedi,D:\research\architectureSmells\repos\brotchie_tradelink\ServerRedi\ServerRedi.cs,VBRediCache_CacheEvent,The following switch statement is missing a default case: switch (action)              {                  case 1: //CN_SUBMIT                      {                          try                          {                              v("for submit row: " + row.ToString() + " action: " + action.ToString());                              int i = row != 0 ? row - 1 : row;                              Tick k = new TickImpl();                              _cc.VBGetCell(i' "SYMBOL"' ref cv' ref err);                              v("getcellerr: " + err.ToString());                              if (!(cv == null))                              {                                  k.symbol = cv.ToString();                              }                              _cc.VBGetCell(i' "LastPrice"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (decimal.TryParse(cv.ToString()' out dv))                                      k.trade = dv;                              }                              _cc.VBGetCell(i' "BidPrice"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (decimal.TryParse(cv.ToString()' out dv))                                      k.bid = dv;                              }                              _cc.VBGetCell(i' "AskPrice"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (decimal.TryParse(cv.ToString()' out dv))                                      k.ask = dv;                              }                              _cc.VBGetCell(i' "LastSize"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (int.TryParse(cv.ToString()' out iv))                                      k.size = iv;                              }                              _cc.VBGetCell(i' "BidSize"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (int.TryParse(cv.ToString()' out iv))                                      k.bs = iv;                              }                              _cc.VBGetCell(i' "AskSize"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (int.TryParse(cv.ToString()' out iv))                                      k.os = iv;                              }                                                          k.date = Util.ToTLDate(DateTime.Now);                              k.time = Util.DT2FT(DateTime.Now);                              // fill papertrade orders first                              if (isPaperTradeEnabled)                                  ptt.newTick(k);                              tl.newTick(k);                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                      /*                  case 4 : //CN_INSERT                      break;                       * */                  case 5: // CN_UPDATE                      {                          try                          {                              if (TickDebugVerbose)                                  v("for update row: " + row.ToString() + " action: " + action.ToString());                              int i = row;                                                          Tick k = new TickImpl();                              _cc.VBGetCell(i' "SYMBOL"' ref cv' ref err);                              if (TickDebugVerbose)                                  v("getcellerr: " + err.ToString());                                                          if (!(cv == null))                              {                                  k.symbol = cv.ToString();                              }                              _cc.VBGetCell(i' "LastPrice"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (decimal.TryParse(cv.ToString()' out dv))                                  {                                      k.trade = dv;                                      k.size = 1; // this code is just to make everything else working' i.e. Last' High and Low.                                  }                              }                              _cc.VBGetCell(i' "BidPrice"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (decimal.TryParse(cv.ToString()' out dv))                                      k.bid = dv;                              }                              _cc.VBGetCell(i' "AskPrice"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (decimal.TryParse(cv.ToString()' out dv))                                      k.ask = dv;                              }                              //_cc.VBGetCell(i' "LastSize"' ref cv' ref err);                              //if (!(cv == null))                              //{                              //    if (int.TryParse(cv.ToString()' out iv))                              //        k.size = iv;                              //}                              _cc.VBGetCell(i' "BidSize"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (int.TryParse(cv.ToString()' out iv))                                      k.bs = iv;                              }                              _cc.VBGetCell(i' "AskSize"' ref cv' ref err);                              if (!(cv == null))                              {                                  if (int.TryParse(cv.ToString()' out iv))                                      k.os = iv;                              }                              k.date = Util.ToTLDate(DateTime.Now);                              k.time = Util.DT2FT(DateTime.Now);                                                          tl.newTick(k);                          }                          catch (Exception exc)                          {                              debug(exc.Message);                          }                      }                      break;                      /*                  case 7: // CN_REMOVING                      break;                  case 8 : // CN_REMOVED                      break;                       */              }
