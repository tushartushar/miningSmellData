Implementation smell,Namespace,Class,File,Method,Description
Complex Method,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,SetDisplay,Cyclomatic complexity of the method is 17
Complex Method,GaliNeo.Framework.GaliNeoSettings,GaliNeoSettingsProvider,C:\repos\nrother_fast-view\QuickLookWindows\SettingsProvider.cs,SerializeToXmlElement,Cyclomatic complexity of the method is 8
Long Statement,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,einstellungenToolStripMenuItem_Click,The length of the statement  "		MessageBox.Show ("FastView muss neugestartet werden' um die Änderungen zu übernehmen."' "FastView"' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 146.
Long Statement,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,Form1_MouseMove,The length of the statement  "		this.Location = new Point (this.Left - (this.LastCursorPosition.X - e.X)' this.Top - (this.LastCursorPosition.Y - e.Y)); " is 120.
Empty Catch Block,GaliNeo.Framework.GaliNeoSettings,GaliNeoSettingsProvider,C:\repos\nrother_fast-view\QuickLookWindows\SettingsProvider.cs,LoadSettings,The method has an empty catch block.
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,Form1_Load,The following statement contains a magic number: Region = GetRoundedRect (new RectangleF (0' 0' ClientRectangle.Width' ClientRectangle.Height)' 20);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetRoundedRect,The following statement contains a magic number: if (Radius >= (Math.Min (BaseRect.Width' BaseRect.Height) / 2.0))  	return GetCapsule (BaseRect);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetRoundedRect,The following statement contains a magic number: RR.AddArc (ArcRect' 180' 90);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetRoundedRect,The following statement contains a magic number: RR.AddArc (ArcRect' 180' 90);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetRoundedRect,The following statement contains a magic number: RR.AddArc (ArcRect' 270' 90);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetRoundedRect,The following statement contains a magic number: RR.AddArc (ArcRect' 270' 90);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetRoundedRect,The following statement contains a magic number: RR.AddArc (ArcRect' 0' 90);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetRoundedRect,The following statement contains a magic number: RR.AddArc (ArcRect' 90' 90);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetRoundedRect,The following statement contains a magic number: RR.AddArc (ArcRect' 90' 90);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: try {  	if (BaseRect.Width > BaseRect.Height) {  		//return Horizonal capsule  		Diameter = BaseRect.Height;  		ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  		RR.AddArc (ArcRect' 90' 180);  		ArcRect.X = BaseRect.Right - Diameter;  		RR.AddArc (ArcRect' 270' 180);  	}  	else if (BaseRect.Height > BaseRect.Width) {  		// Return vertical capsule  		Diameter = BaseRect.Width;  		ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  		RR.AddArc (ArcRect' 180' 180);  		ArcRect.Y = BaseRect.Bottom - Diameter;  		RR.AddArc (ArcRect' 0' 180);  	}  	else {  		//return circle  		RR.AddEllipse (BaseRect);  	}  }  catch (Exception e) {  	string sLastError = e.Message;  	RR.AddEllipse (BaseRect);  }  finally {  	RR.CloseFigure ();  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: try {  	if (BaseRect.Width > BaseRect.Height) {  		//return Horizonal capsule  		Diameter = BaseRect.Height;  		ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  		RR.AddArc (ArcRect' 90' 180);  		ArcRect.X = BaseRect.Right - Diameter;  		RR.AddArc (ArcRect' 270' 180);  	}  	else if (BaseRect.Height > BaseRect.Width) {  		// Return vertical capsule  		Diameter = BaseRect.Width;  		ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  		RR.AddArc (ArcRect' 180' 180);  		ArcRect.Y = BaseRect.Bottom - Diameter;  		RR.AddArc (ArcRect' 0' 180);  	}  	else {  		//return circle  		RR.AddEllipse (BaseRect);  	}  }  catch (Exception e) {  	string sLastError = e.Message;  	RR.AddEllipse (BaseRect);  }  finally {  	RR.CloseFigure ();  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: try {  	if (BaseRect.Width > BaseRect.Height) {  		//return Horizonal capsule  		Diameter = BaseRect.Height;  		ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  		RR.AddArc (ArcRect' 90' 180);  		ArcRect.X = BaseRect.Right - Diameter;  		RR.AddArc (ArcRect' 270' 180);  	}  	else if (BaseRect.Height > BaseRect.Width) {  		// Return vertical capsule  		Diameter = BaseRect.Width;  		ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  		RR.AddArc (ArcRect' 180' 180);  		ArcRect.Y = BaseRect.Bottom - Diameter;  		RR.AddArc (ArcRect' 0' 180);  	}  	else {  		//return circle  		RR.AddEllipse (BaseRect);  	}  }  catch (Exception e) {  	string sLastError = e.Message;  	RR.AddEllipse (BaseRect);  }  finally {  	RR.CloseFigure ();  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: try {  	if (BaseRect.Width > BaseRect.Height) {  		//return Horizonal capsule  		Diameter = BaseRect.Height;  		ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  		RR.AddArc (ArcRect' 90' 180);  		ArcRect.X = BaseRect.Right - Diameter;  		RR.AddArc (ArcRect' 270' 180);  	}  	else if (BaseRect.Height > BaseRect.Width) {  		// Return vertical capsule  		Diameter = BaseRect.Width;  		ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  		RR.AddArc (ArcRect' 180' 180);  		ArcRect.Y = BaseRect.Bottom - Diameter;  		RR.AddArc (ArcRect' 0' 180);  	}  	else {  		//return circle  		RR.AddEllipse (BaseRect);  	}  }  catch (Exception e) {  	string sLastError = e.Message;  	RR.AddEllipse (BaseRect);  }  finally {  	RR.CloseFigure ();  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: try {  	if (BaseRect.Width > BaseRect.Height) {  		//return Horizonal capsule  		Diameter = BaseRect.Height;  		ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  		RR.AddArc (ArcRect' 90' 180);  		ArcRect.X = BaseRect.Right - Diameter;  		RR.AddArc (ArcRect' 270' 180);  	}  	else if (BaseRect.Height > BaseRect.Width) {  		// Return vertical capsule  		Diameter = BaseRect.Width;  		ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  		RR.AddArc (ArcRect' 180' 180);  		ArcRect.Y = BaseRect.Bottom - Diameter;  		RR.AddArc (ArcRect' 0' 180);  	}  	else {  		//return circle  		RR.AddEllipse (BaseRect);  	}  }  catch (Exception e) {  	string sLastError = e.Message;  	RR.AddEllipse (BaseRect);  }  finally {  	RR.CloseFigure ();  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: try {  	if (BaseRect.Width > BaseRect.Height) {  		//return Horizonal capsule  		Diameter = BaseRect.Height;  		ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  		RR.AddArc (ArcRect' 90' 180);  		ArcRect.X = BaseRect.Right - Diameter;  		RR.AddArc (ArcRect' 270' 180);  	}  	else if (BaseRect.Height > BaseRect.Width) {  		// Return vertical capsule  		Diameter = BaseRect.Width;  		ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  		RR.AddArc (ArcRect' 180' 180);  		ArcRect.Y = BaseRect.Bottom - Diameter;  		RR.AddArc (ArcRect' 0' 180);  	}  	else {  		//return circle  		RR.AddEllipse (BaseRect);  	}  }  catch (Exception e) {  	string sLastError = e.Message;  	RR.AddEllipse (BaseRect);  }  finally {  	RR.CloseFigure ();  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: try {  	if (BaseRect.Width > BaseRect.Height) {  		//return Horizonal capsule  		Diameter = BaseRect.Height;  		ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  		RR.AddArc (ArcRect' 90' 180);  		ArcRect.X = BaseRect.Right - Diameter;  		RR.AddArc (ArcRect' 270' 180);  	}  	else if (BaseRect.Height > BaseRect.Width) {  		// Return vertical capsule  		Diameter = BaseRect.Width;  		ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  		RR.AddArc (ArcRect' 180' 180);  		ArcRect.Y = BaseRect.Bottom - Diameter;  		RR.AddArc (ArcRect' 0' 180);  	}  	else {  		//return circle  		RR.AddEllipse (BaseRect);  	}  }  catch (Exception e) {  	string sLastError = e.Message;  	RR.AddEllipse (BaseRect);  }  finally {  	RR.CloseFigure ();  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: if (BaseRect.Width > BaseRect.Height) {  	//return Horizonal capsule  	Diameter = BaseRect.Height;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 90' 180);  	ArcRect.X = BaseRect.Right - Diameter;  	RR.AddArc (ArcRect' 270' 180);  }  else if (BaseRect.Height > BaseRect.Width) {  	// Return vertical capsule  	Diameter = BaseRect.Width;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 180' 180);  	ArcRect.Y = BaseRect.Bottom - Diameter;  	RR.AddArc (ArcRect' 0' 180);  }  else {  	//return circle  	RR.AddEllipse (BaseRect);  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: if (BaseRect.Width > BaseRect.Height) {  	//return Horizonal capsule  	Diameter = BaseRect.Height;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 90' 180);  	ArcRect.X = BaseRect.Right - Diameter;  	RR.AddArc (ArcRect' 270' 180);  }  else if (BaseRect.Height > BaseRect.Width) {  	// Return vertical capsule  	Diameter = BaseRect.Width;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 180' 180);  	ArcRect.Y = BaseRect.Bottom - Diameter;  	RR.AddArc (ArcRect' 0' 180);  }  else {  	//return circle  	RR.AddEllipse (BaseRect);  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: if (BaseRect.Width > BaseRect.Height) {  	//return Horizonal capsule  	Diameter = BaseRect.Height;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 90' 180);  	ArcRect.X = BaseRect.Right - Diameter;  	RR.AddArc (ArcRect' 270' 180);  }  else if (BaseRect.Height > BaseRect.Width) {  	// Return vertical capsule  	Diameter = BaseRect.Width;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 180' 180);  	ArcRect.Y = BaseRect.Bottom - Diameter;  	RR.AddArc (ArcRect' 0' 180);  }  else {  	//return circle  	RR.AddEllipse (BaseRect);  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: if (BaseRect.Width > BaseRect.Height) {  	//return Horizonal capsule  	Diameter = BaseRect.Height;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 90' 180);  	ArcRect.X = BaseRect.Right - Diameter;  	RR.AddArc (ArcRect' 270' 180);  }  else if (BaseRect.Height > BaseRect.Width) {  	// Return vertical capsule  	Diameter = BaseRect.Width;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 180' 180);  	ArcRect.Y = BaseRect.Bottom - Diameter;  	RR.AddArc (ArcRect' 0' 180);  }  else {  	//return circle  	RR.AddEllipse (BaseRect);  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: if (BaseRect.Width > BaseRect.Height) {  	//return Horizonal capsule  	Diameter = BaseRect.Height;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 90' 180);  	ArcRect.X = BaseRect.Right - Diameter;  	RR.AddArc (ArcRect' 270' 180);  }  else if (BaseRect.Height > BaseRect.Width) {  	// Return vertical capsule  	Diameter = BaseRect.Width;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 180' 180);  	ArcRect.Y = BaseRect.Bottom - Diameter;  	RR.AddArc (ArcRect' 0' 180);  }  else {  	//return circle  	RR.AddEllipse (BaseRect);  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: if (BaseRect.Width > BaseRect.Height) {  	//return Horizonal capsule  	Diameter = BaseRect.Height;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 90' 180);  	ArcRect.X = BaseRect.Right - Diameter;  	RR.AddArc (ArcRect' 270' 180);  }  else if (BaseRect.Height > BaseRect.Width) {  	// Return vertical capsule  	Diameter = BaseRect.Width;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 180' 180);  	ArcRect.Y = BaseRect.Bottom - Diameter;  	RR.AddArc (ArcRect' 0' 180);  }  else {  	//return circle  	RR.AddEllipse (BaseRect);  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: if (BaseRect.Width > BaseRect.Height) {  	//return Horizonal capsule  	Diameter = BaseRect.Height;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 90' 180);  	ArcRect.X = BaseRect.Right - Diameter;  	RR.AddArc (ArcRect' 270' 180);  }  else if (BaseRect.Height > BaseRect.Width) {  	// Return vertical capsule  	Diameter = BaseRect.Width;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 180' 180);  	ArcRect.Y = BaseRect.Bottom - Diameter;  	RR.AddArc (ArcRect' 0' 180);  }  else {  	//return circle  	RR.AddEllipse (BaseRect);  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: RR.AddArc (ArcRect' 90' 180);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: RR.AddArc (ArcRect' 90' 180);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: RR.AddArc (ArcRect' 270' 180);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: RR.AddArc (ArcRect' 270' 180);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: if (BaseRect.Height > BaseRect.Width) {  	// Return vertical capsule  	Diameter = BaseRect.Width;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 180' 180);  	ArcRect.Y = BaseRect.Bottom - Diameter;  	RR.AddArc (ArcRect' 0' 180);  }  else {  	//return circle  	RR.AddEllipse (BaseRect);  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: if (BaseRect.Height > BaseRect.Width) {  	// Return vertical capsule  	Diameter = BaseRect.Width;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 180' 180);  	ArcRect.Y = BaseRect.Bottom - Diameter;  	RR.AddArc (ArcRect' 0' 180);  }  else {  	//return circle  	RR.AddEllipse (BaseRect);  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: if (BaseRect.Height > BaseRect.Width) {  	// Return vertical capsule  	Diameter = BaseRect.Width;  	ArcRect = new RectangleF (BaseRect.Location' new SizeF (Diameter' Diameter));  	RR.AddArc (ArcRect' 180' 180);  	ArcRect.Y = BaseRect.Bottom - Diameter;  	RR.AddArc (ArcRect' 0' 180);  }  else {  	//return circle  	RR.AddEllipse (BaseRect);  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: RR.AddArc (ArcRect' 180' 180);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: RR.AddArc (ArcRect' 180' 180);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,GetCapsule,The following statement contains a magic number: RR.AddArc (ArcRect' 0' 180);  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,SetMaximized,The following statement contains a magic number: if (mazimized) {  	WindowState = FormWindowState.Maximized;  	Region = null;  }  else {  	WindowState = FormWindowState.Normal;  	Region = GetRoundedRect (new RectangleF (0' 0' ClientRectangle.Width' ClientRectangle.Height)' 20);  }  
Magic Number,QuickLookWindows,Form1,C:\repos\nrother_fast-view\QuickLookWindows\Form1.cs,SetMaximized,The following statement contains a magic number: Region = GetRoundedRect (new RectangleF (0' 0' ClientRectangle.Width' ClientRectangle.Height)' 20);  
