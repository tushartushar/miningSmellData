Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MemorySharpTests.Assembly,AssemblyFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Assembly\AssemblyFactoryTests.cs,Inject,The length of the statement  "                CollectionAssert.AreEqual(new byte[] { 0x6A' 00' 0x83' 0xC4' 04' 0xC3 }' sharp.Read<byte>(memory.BaseAddress' 6' false)); " is 121.
Long Statement,MemorySharpTests.Assembly,AssemblyFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Assembly\AssemblyFactoryTests.cs,TransactionInject,The length of the statement  "                CollectionAssert.AreEqual(new byte[] { 0x6A' 00' 0x83' 0xC4' 04' 0xC3 }' sharp.Read<byte>(memory.BaseAddress' 6' false)); " is 121.
Long Statement,MemorySharpTests.Memory,RemoteRegionTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\RemoteRegionTests.cs,ChangeProtection,The length of the statement  "            Assert.AreEqual(MemoryProtectionFlags.ReadOnly' sharp.Modules.MainModule.Information.Protect' "The main module is not in readonly."); " is 133.
Long Statement,MemorySharpTests.Memory,RemoteRegionTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\RemoteRegionTests.cs,ChangeProtection,The length of the statement  "                Assert.AreEqual(MemoryProtectionFlags.ExecuteRead' sharp.Modules.MainModule.Information.Protect' "The main module protection couldn't be changed."); " is 148.
Long Statement,MemorySharpTests.Memory,RemoteRegionTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\RemoteRegionTests.cs,ChangeProtection,The length of the statement  "            Assert.AreEqual(MemoryProtectionFlags.ReadOnly' sharp.Modules.MainModule.Information.Protect' "The main module is not in readonly (2)."); " is 137.
Long Statement,MemorySharpTests.Memory,MemoryFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\MemoryFactoryTests.cs,Allocate_Allocate1MBMemoryRegion,The length of the statement  "            Assert.IsTrue(size - 4096 < allocated.Information.RegionSize && allocated.Information.RegionSize < size + 4096' "The allocated memory is wrong."); // 4096 = size of a page " is 171.
Long Statement,MemorySharpTests.Memory,MemoryFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\MemoryFactoryTests.cs,Allocate_Allocate1MBMemoryRegion,The length of the statement  "            Assert.AreEqual(MemoryProtectionFlags.ExecuteReadWrite' allocated.Information.Protect' "The protection of the memory is incorrect."); " is 133.
Long Statement,MemorySharpTests.Memory,MemoryFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\MemoryFactoryTests.cs,Allocate_WithUsingStatement,The length of the statement  "                Assert.AreEqual(4096' remoteAllocation.Information.RegionSize' "The chunk of memory doesn't have the default size of a page."); " is 127.
Long Statement,MemorySharpTests.Modules,ModuleCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Modules\ModuleCoreTests.cs,LoadFreeLibrary,The length of the statement  "            Assert.IsTrue(Resources.ProcessSelf.Modules.Cast<ProcessModule>().Any(m => m.FileName == dllPath)' "The module cannot be found."); " is 130.
Long Statement,MemorySharpTests.Modules,ModuleCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Modules\ModuleCoreTests.cs,LoadFreeLibrary,The length of the statement  "            Assert.IsFalse(Resources.ProcessSelf.Modules.Cast<ProcessModule>().Any(m => m.FileName == dllPath)' "The module cannot be freed."); " is 131.
Long Statement,MemorySharpTests.Modules,ModuleFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Modules\ModuleFactoryTests.cs,InjectEjectLibrary,The length of the statement  "                Assert.IsTrue(sharp.Modules.InjectedModules.Any(m => m == lib)' "The collection of injected modules doesn't contain the module."); " is 130.
Long Statement,MemorySharpTests.Modules,ModuleFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Modules\ModuleFactoryTests.cs,InjectEjectLibrary,The length of the statement  "                Assert.IsTrue(Resources.ProcessTest.Modules.Cast<ProcessModule>().Any(m => m.FileName.ToLower() == dllPath.ToLower())' "Cannot find the module using native API."); " is 163.
Long Statement,MemorySharpTests,MemorySharpTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\MemorySharpTests.cs,AssessSpeedMakeAbsolute100K,The length of the statement  "            Assert.IsTrue(watch.Elapsed.TotalSeconds < 1' $"The method to make an absolute address is too slow ({watch.Elapsed.TotalSeconds}s)."); " is 134.
Long Statement,MemorySharpTests.Threading,ThreadCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Threading\ThreadCoreTests.cs,GetExitCodeThread,The length of the statement  "            var handle = ThreadCore.OpenThread(ThreadAccessFlags.QueryInformation | ThreadAccessFlags.Terminate' Resources.ProcessTest.Threads[0].Id); " is 138.
Long Statement,MemorySharpTests.Windows,WindowCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\WindowCoreTests.cs,EnumChildWindows_CheckIfScintillaPresent,The length of the statement  "            Assert.IsTrue(handles.Any(h => WindowCore.GetClassName(h) == "Scintilla")' "Cannot find Scientilla in the enumerated windows."); " is 128.
Long Statement,MemorySharpTests.Windows,WindowCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\WindowCoreTests.cs,GetWindowThreadId,The length of the statement  "            Assert.AreEqual(Resources.ProcessTest.Threads[0].Id' threadId' "Thread id are not equal."); // This is the case for Notepad++ " is 125.
Long Statement,MemorySharpTests.Windows,WindowCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\WindowCoreTests.cs,SetGetWindowPlacement,The length of the statement  "            Assert.AreEqual(400' (placement.NormalPosition.Top + placement.NormalPosition.Left + placement.NormalPosition.Height + placement.NormalPosition.Width) / 4); " is 156.
Empty Catch Block,MemorySharpTests.Memory,RemotePointerTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\RemotePointerTests.cs,ChangeProtection,The method has an empty catch block.
Magic Number,MemorySharpTests.Assembly,AssemblyFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Assembly\AssemblyFactoryTests.cs,Inject,The following statement contains a magic number: CollectionAssert.AreEqual(new byte[] { 0x6A' 00' 0x83' 0xC4' 04' 0xC3 }' sharp.Read<byte>(memory.BaseAddress' 6' false));
Magic Number,MemorySharpTests.Assembly,AssemblyFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Assembly\AssemblyFactoryTests.cs,Inject,The following statement contains a magic number: CollectionAssert.AreEqual(new byte[] { 0x6A' 00' 0x83' 0xC4' 04' 0xC3 }' sharp.Read<byte>(memory.BaseAddress' 6' false));
Magic Number,MemorySharpTests.Assembly,AssemblyFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Assembly\AssemblyFactoryTests.cs,TransactionInject,The following statement contains a magic number: CollectionAssert.AreEqual(new byte[] { 0x6A' 00' 0x83' 0xC4' 04' 0xC3 }' sharp.Read<byte>(memory.BaseAddress' 6' false));
Magic Number,MemorySharpTests.Assembly,AssemblyFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Assembly\AssemblyFactoryTests.cs,TransactionInject,The following statement contains a magic number: CollectionAssert.AreEqual(new byte[] { 0x6A' 00' 0x83' 0xC4' 04' 0xC3 }' sharp.Read<byte>(memory.BaseAddress' 6' false));
Magic Number,MemorySharpTests.Assembly,AssemblyFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Assembly\AssemblyFactoryTests.cs,InjectAndExecute,The following statement contains a magic number: Assert.AreEqual(66' ret' "The return value is incorrect.");
Magic Number,MemorySharpTests.Assembly,AssemblyFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Assembly\AssemblyFactoryTests.cs,InjectAndExecuteWithTransaction,The following statement contains a magic number: Assert.AreEqual(66' t.GetExitCode<int>()' "The return value is incorrect.");
Magic Number,MemorySharpTests.Assembly,AssemblyFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Assembly\AssemblyFactoryTests.cs,Execute,The following statement contains a magic number: Assert.AreEqual(66' ret' "The return value is incorrect.");
Magic Number,MemorySharpTests.Internals,MarshalTypeTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Internals\MarshalTypeTests.cs,ToByteArrayDoubleType,The following statement contains a magic number: const double originalValue = 3.141592;
Magic Number,MemorySharpTests.Internals,MarshalTypeTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Internals\MarshalTypeTests.cs,PtrToObjectLong,The following statement contains a magic number: var ptr = new IntPtr(32);
Magic Number,MemorySharpTests.Internals,MarshalTypeTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Internals\MarshalTypeTests.cs,PtrToObjectLong,The following statement contains a magic number: Assert.AreEqual(32' value);
Magic Number,MemorySharpTests.Internals,MarshalValueTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Internals\MarshalValueTests.cs,MarshalInteger,The following statement contains a magic number: const int value = 1024;
Magic Number,MemorySharpTests.Internals,MarshalValueTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Internals\MarshalValueTests.cs,MarshalFloat,The following statement contains a magic number: const float value = 1024f;
Magic Number,MemorySharpTests.Internals,MarshalValueTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Internals\MarshalValueTests.cs,Marshal_CustomStruct,The following statement contains a magic number: Assert.AreEqual(Resources.CustomStruct.Y' pointer.Allocated.Read<int>(4));
Magic Number,MemorySharpTests.Internals,MarshalValueTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Internals\MarshalValueTests.cs,Marshal_CustomStruct,The following statement contains a magic number: Assert.AreEqual(Resources.CustomStruct.Z' pointer.Allocated.Read<int>(8));
Magic Number,MemorySharpTests.Internals,MarshalValueTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Internals\MarshalValueTests.cs,MarshalShort,The following statement contains a magic number: const short value = 1024;
Magic Number,MemorySharpTests.Memory,RemotePointerTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\RemotePointerTests.cs,WriteAndReadInteger,The following statement contains a magic number: memory.Write(66);
Magic Number,MemorySharpTests.Memory,RemotePointerTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\RemotePointerTests.cs,WriteAndReadInteger,The following statement contains a magic number: Assert.AreEqual(66' memory.Read<int>()' "Error when the memory was writen/read.");
Magic Number,MemorySharpTests.Memory,LocalUnmanagedMemoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\LocalUnmanagedMemoryTests.cs,WriteAndReadDouble,The following statement contains a magic number: const double originalValue = 3.141592;
Magic Number,MemorySharpTests.Memory,MemoryCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\MemoryCoreTests.cs,VirtualProtectExWriteReadBytes,The following statement contains a magic number: MemoryCore.ChangeProtection(handle' memory' 5' MemoryProtectionFlags.ExecuteReadWrite);
Magic Number,MemorySharpTests.Memory,MemoryCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\MemoryCoreTests.cs,VirtualProtectExWriteReadBytes,The following statement contains a magic number: var actual = MemoryCore.ReadBytes(handle' memory' 5);
Magic Number,MemorySharpTests.Memory,MemoryFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\MemoryFactoryTests.cs,Allocate_Allocate1MBMemoryRegion,The following statement contains a magic number: const int size = 1024*1024;
Magic Number,MemorySharpTests.Memory,MemoryFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\MemoryFactoryTests.cs,Allocate_Allocate1MBMemoryRegion,The following statement contains a magic number: const int size = 1024*1024;
Magic Number,MemorySharpTests.Memory,MemoryFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\MemoryFactoryTests.cs,Allocate_Allocate1MBMemoryRegion,The following statement contains a magic number: Assert.IsTrue(size - 4096 < allocated.Information.RegionSize && allocated.Information.RegionSize < size + 4096' "The allocated memory is wrong.");
Magic Number,MemorySharpTests.Memory,MemoryFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\MemoryFactoryTests.cs,Allocate_Allocate1MBMemoryRegion,The following statement contains a magic number: Assert.IsTrue(size - 4096 < allocated.Information.RegionSize && allocated.Information.RegionSize < size + 4096' "The allocated memory is wrong.");
Magic Number,MemorySharpTests.Memory,MemoryFactoryTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Memory\MemoryFactoryTests.cs,Allocate_WithUsingStatement,The following statement contains a magic number: Assert.AreEqual(4096' remoteAllocation.Information.RegionSize' "The chunk of memory doesn't have the default size of a page.");
Magic Number,MemorySharpTests,Resources,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Resources.cs,Restart,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,MemorySharpTests,MemorySharpTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\MemorySharpTests.cs,AssessSpeedMakeAbsolute100K,The following statement contains a magic number: i < 100000
Magic Number,MemorySharpTests,MemorySharpTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\MemorySharpTests.cs,IsRunning,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,MemorySharpTests.Threading,ThreadCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Threading\ThreadCoreTests.cs,GetExitCodeThread,The following statement contains a magic number: ThreadCore.TerminateThread(handle' 1337);
Magic Number,MemorySharpTests.Threading,ThreadCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Threading\ThreadCoreTests.cs,GetExitCodeThread,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,MemorySharpTests.Threading,ThreadCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Threading\ThreadCoreTests.cs,GetExitCodeThread,The following statement contains a magic number: Assert.AreEqual((IntPtr)1337' exitCodeAfter' "The exit code didn't match to the expected value.");
Magic Number,MemorySharpTests.Threading,RemoteThreadTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Threading\RemoteThreadTests.cs,TerminateMainThread,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,MemorySharpTests.Threading,RemoteThreadTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Threading\RemoteThreadTests.cs,Join3SecMainThread,The following statement contains a magic number: var ret = sharp.Threads.MainThread.Join(TimeSpan.FromSeconds(3));
Magic Number,MemorySharpTests.Windows,RemoteWindowTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\RemoteWindowTests.cs,GetSetHeightWidthPosition,The following statement contains a magic number: const int size = 200;
Magic Number,MemorySharpTests.Windows,RemoteWindowTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\RemoteWindowTests.cs,ActivateAndIsActivated,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,MemorySharpTests.Windows,RemoteWindowTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\RemoteWindowTests.cs,Close,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,MemorySharpTests.Windows,KeyboardTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\KeyboardTests.cs,ArrowBottom3Sec,The following statement contains a magic number: scintilla.Keyboard.Press(Keys.Down' TimeSpan.FromMilliseconds(20));
Magic Number,MemorySharpTests.Windows,KeyboardTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\KeyboardTests.cs,ArrowBottom3Sec,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,MemorySharpTests.Windows,WindowCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\WindowCoreTests.cs,PostMessageCloseWindow,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,MemorySharpTests.Windows,WindowCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\WindowCoreTests.cs,SendMessageCloseWindow,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,MemorySharpTests.Windows,WindowCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\WindowCoreTests.cs,SetGetWindowPlacement,The following statement contains a magic number: WindowCore.SetWindowPlacement(handle' 400' 400' 400' 400);
Magic Number,MemorySharpTests.Windows,WindowCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\WindowCoreTests.cs,SetGetWindowPlacement,The following statement contains a magic number: WindowCore.SetWindowPlacement(handle' 400' 400' 400' 400);
Magic Number,MemorySharpTests.Windows,WindowCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\WindowCoreTests.cs,SetGetWindowPlacement,The following statement contains a magic number: WindowCore.SetWindowPlacement(handle' 400' 400' 400' 400);
Magic Number,MemorySharpTests.Windows,WindowCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\WindowCoreTests.cs,SetGetWindowPlacement,The following statement contains a magic number: WindowCore.SetWindowPlacement(handle' 400' 400' 400' 400);
Magic Number,MemorySharpTests.Windows,WindowCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\WindowCoreTests.cs,SetGetWindowPlacement,The following statement contains a magic number: Assert.AreEqual(400' (placement.NormalPosition.Top + placement.NormalPosition.Left + placement.NormalPosition.Height + placement.NormalPosition.Width) / 4);
Magic Number,MemorySharpTests.Windows,WindowCoreTests,D:\research\architectureSmells\repos\ZenLulz_MemorySharp\test\IntegrationTests\Windows\WindowCoreTests.cs,SetGetWindowPlacement,The following statement contains a magic number: Assert.AreEqual(400' (placement.NormalPosition.Top + placement.NormalPosition.Left + placement.NormalPosition.Height + placement.NormalPosition.Width) / 4);
