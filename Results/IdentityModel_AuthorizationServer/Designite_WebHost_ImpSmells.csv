Implementation smell,Namespace,Class,File,Method,Description
Long Method,Thinktecture.AuthorizationServer.WebHost,TestData,D:\research\architectureSmells\repos\IdentityModel_AuthorizationServer\source\WebHost\Areas\InitialConfiguration\TestData.cs,Populate,The method has 183 lines of code.
Long Identifier,Thinktecture.AuthorizationServer.WebHost.Areas.InitialConfiguration.Controllers,HomeController,D:\research\architectureSmells\repos\IdentityModel_AuthorizationServer\source\WebHost\Areas\InitialConfiguration\Controllers\HomeController.cs,HomeController,The length of the parameter authorizationServerAdministration is 33.
Long Identifier,Thinktecture.AuthorizationServer.WebHost.Areas.InitialConfiguration.Controllers,HomeController,D:\research\architectureSmells\repos\IdentityModel_AuthorizationServer\source\WebHost\Areas\InitialConfiguration\Controllers\HomeController.cs,,The length of the parameter authorizationServerAdministration is 33.
Long Statement,Thinktecture.AuthorizationServer.WebHost.Areas.Admin.Api,SymmetricKeysController,D:\research\architectureSmells\repos\IdentityModel_AuthorizationServer\source\WebHost\Areas\Admin\Api\SymmetricKeysController.cs,Get,The length of the statement  "            return Request.CreateResponse(HttpStatusCode.OK' new { item.ID' item.Name' Value=Convert.ToBase64String(item.GetValue()) }); " is 124.
Long Statement,Thinktecture.AuthorizationServer.WebHost.Areas.Admin.Api,TokensController,D:\research\architectureSmells\repos\IdentityModel_AuthorizationServer\source\WebHost\Areas\Admin\Api\TokensController.cs,Get,The length of the statement  "                    type = item.Type == StoredGrantType.AuthorizationCode ? "authorization" : (item.Type == StoredGrantType.RefreshTokenIdentifier ? "refresh":"consent")' " is 150.
Long Statement,Thinktecture.AuthorizationServer.WebHost.Security,DataProtectionConfigurationFilter,D:\research\architectureSmells\repos\IdentityModel_AuthorizationServer\source\WebHost\Security\DataProtectionConfigurationFilter.cs,OnActionExecuting,The length of the statement  "                vr.ViewData["ErrorDetails"] = "DataProtectection has not been configured. This means that either the DataProtectection implementation has not been assigned or the symmetricProtectionKeys configuration file has not been configured. This is required and must be done by an administrator."; " is 287.
Magic Number,Thinktecture.AuthorizationServer.WebHost,ValidateHttpAntiForgeryTokenAttribute,D:\research\architectureSmells\repos\IdentityModel_AuthorizationServer\source\WebHost\Security\ValidateHttpAntiForgeryTokenAttribute.cs,ValidateRequestHeader,The following statement contains a magic number: tokens.Length == 2
Magic Number,Thinktecture.AuthorizationServer.WebHost,TestData,D:\research\architectureSmells\repos\IdentityModel_AuthorizationServer\source\WebHost\Areas\InitialConfiguration\TestData.cs,Populate,The following statement contains a magic number: var application = new Application                      {                          Enabled = true'                          Name = "User management"'                          Namespace = "users"'                          Audience = "users"'                          Description = "This app manages your users"'                          LogoUrl = "http://en.opensuse.org/images/0/0b/Icon-user.png"'                          Scopes = new List<Scope> { readScope' searchScope' writeScope }'                          RequireConsent = true'                          TokenLifetime = 60'                          AllowRefreshToken = true'                          AllowRememberConsentDecision = true'                          SigningKey = key                      };
Magic Number,Thinktecture.AuthorizationServer.WebHost.Areas.Admin.Api,SymmetricKeysController,D:\research\architectureSmells\repos\IdentityModel_AuthorizationServer\source\WebHost\Areas\Admin\Api\SymmetricKeysController.cs,Get,The following statement contains a magic number: string key = IdentityModel.CryptoRandom.CreateRandomKeyString(32);
Missing Default,Thinktecture.AuthorizationServer.WebHost,AuthorizationManager,D:\research\architectureSmells\repos\IdentityModel_AuthorizationServer\source\WebHost\Security\AuthorizationManager.cs,CheckAccess,The following switch statement is missing a default case: switch (action)              {                  case Constants.Actions.Configure:                      return AuthorizeAdminArea(context);              }
