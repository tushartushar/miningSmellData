Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Thinktecture.AuthorizationServer.Interfaces,IStoredGrantManager,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\Interfaces\IStoredGrantManager.cs,Find,The method has 5 parameters.
Long Parameter List,Thinktecture.AuthorizationServer.Models,StoredGrant,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\Models\StoredGrant.cs,CreateRefreshTokenHandle,The method has 6 parameters.
Long Parameter List,Thinktecture.AuthorizationServer.Models,StoredGrant,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\Models\StoredGrant.cs,CreateAuthorizationCode,The method has 8 parameters.
Long Identifier,Thinktecture.AuthorizationServer,TokenService,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\TokenService.cs,TokenService,The length of the parameter authorizationServerConfiguration is 32.
Long Statement,Thinktecture.AuthorizationServer,KeyProtection,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\DataProtectection\KeyProtection.cs,Encrypt,The length of the statement  "		using (var cs = new System.Security.Cryptography.CryptoStream (ms' cipher.CreateEncryptor ()' System.Security.Cryptography.CryptoStreamMode.Write)) { " is 149.
Long Statement,Thinktecture.AuthorizationServer,KeyProtection,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\DataProtectection\KeyProtection.cs,Decrypt,The length of the statement  "		using (var cs = new System.Security.Cryptography.CryptoStream (ms' cipher.CreateDecryptor ()' System.Security.Cryptography.CryptoStreamMode.Write)) { " is 149.
Long Statement,Thinktecture.AuthorizationServer,TokenService,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\TokenService.cs,CreateTokenResponseFromAuthorizationCode,The length of the statement  "		var refreshTokenHandle = StoredGrant.CreateRefreshTokenHandle (resourceOwner.GetSubject ()' handle.Client' handle.Application' resourceOwner.Claims' handle.Scopes' handle.RefreshTokenExpiration.Value); " is 201.
Long Statement,Thinktecture.AuthorizationServer,TokenService,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\TokenService.cs,CreateToken,The length of the statement  "	var token = new JwtSecurityToken (issuer: globalConfiguration.Issuer' audience: request.Application.Audience' claims: claims' lifetime: new Lifetime (DateTime.UtcNow' DateTime.UtcNow.AddMinutes (request.Application.TokenLifetime))' signingCredentials: request.Application.SigningCredentials); " is 292.
Long Statement,Thinktecture.AuthorizationServer,Tracing,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\Tracing.cs,ErrorVerbose,The length of the statement  "	TraceEventFormat (TraceEventType.Error' "{0}\n\nMethod: {1}\nFilename: {2}\nLine number: {3}"' message' memberName' filePath' lineNumber); " is 138.
Magic Number,Thinktecture.AuthorizationServer,KeyProtection,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\DataProtectection\KeyProtection.cs,SetKeys,The following statement contains a magic number: if (confidentialityKey.Length != RequiredEncryptionKeyByteLength * 2)  	throw new ArgumentException ("Invalid Confidentiality Key. It must be 256 bits or 64 hex characters.");  
Magic Number,Thinktecture.AuthorizationServer,KeyProtection,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\DataProtectection\KeyProtection.cs,SetKeys,The following statement contains a magic number: if (validationKey.Length != RequiredSigningKeyByteLength * 2)  	throw new ArgumentException ("Invalid Confidentiality Key. It must be 128 bytes or 256 hex characters.");  
Magic Number,Thinktecture.AuthorizationServer,KeyProtection,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\DataProtectection\KeyProtection.cs,BytesFromHexString,The following statement contains a magic number: if ((data == null) || ((data.Length % 2) != 0)) {  	return null;  }  
Magic Number,Thinktecture.AuthorizationServer,KeyProtection,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\DataProtectection\KeyProtection.cs,BytesFromHexString,The following statement contains a magic number: for (int i = 0; i < buffer.Length; i++) {  	int num2 = HexToInt (data [2 * i]);  	int num3 = HexToInt (data [(2 * i) + 1]);  	if ((num2 == -1) || (num3 == -1)) {  		return null;  	}  	buffer [i] = (byte)((num2 << 4) | num3);  }  
Magic Number,Thinktecture.AuthorizationServer,KeyProtection,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\DataProtectection\KeyProtection.cs,BytesFromHexString,The following statement contains a magic number: for (int i = 0; i < buffer.Length; i++) {  	int num2 = HexToInt (data [2 * i]);  	int num3 = HexToInt (data [(2 * i) + 1]);  	if ((num2 == -1) || (num3 == -1)) {  		return null;  	}  	buffer [i] = (byte)((num2 << 4) | num3);  }  
Magic Number,Thinktecture.AuthorizationServer,KeyProtection,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\DataProtectection\KeyProtection.cs,BytesFromHexString,The following statement contains a magic number: for (int i = 0; i < buffer.Length; i++) {  	int num2 = HexToInt (data [2 * i]);  	int num3 = HexToInt (data [(2 * i) + 1]);  	if ((num2 == -1) || (num3 == -1)) {  		return null;  	}  	buffer [i] = (byte)((num2 << 4) | num3);  }  
Magic Number,Thinktecture.AuthorizationServer,KeyProtection,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\DataProtectection\KeyProtection.cs,BytesFromHexString,The following statement contains a magic number: buffer [i] = (byte)((num2 << 4) | num3);  
Magic Number,Thinktecture.AuthorizationServer,KeyProtection,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\DataProtectection\KeyProtection.cs,HexToInt,The following statement contains a magic number: if ((h >= 'a') && (h <= 'f')) {  	return ((h - 'a') + 10);  }  
Magic Number,Thinktecture.AuthorizationServer,KeyProtection,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\DataProtectection\KeyProtection.cs,HexToInt,The following statement contains a magic number: return ((h - 'a') + 10);  
Magic Number,Thinktecture.AuthorizationServer,KeyProtection,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\DataProtectection\KeyProtection.cs,HexToInt,The following statement contains a magic number: if ((h >= 'A') && (h <= 'F')) {  	return ((h - 'A') + 10);  }  
Magic Number,Thinktecture.AuthorizationServer,KeyProtection,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\DataProtectection\KeyProtection.cs,HexToInt,The following statement contains a magic number: return ((h - 'A') + 10);  
Magic Number,Thinktecture.AuthorizationServer,TokenService,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\TokenService.cs,CreateTokenResponse,The following statement contains a magic number: try {  	var claims = CreateClaims (request' resourceOwner);  	var token = CreateToken (request' claims);  	return new TokenResponse {  		AccessToken = WriteToken (token)'  		ExpiresIn = request.Application.TokenLifetime * 60'  		TokenType = "Bearer"  	};  } catch (Exception ex) {  	Tracing.Error (ex.ToString ());  	throw;  }  
Magic Number,Thinktecture.AuthorizationServer,TokenService,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\TokenService.cs,CreateTokenResponse,The following statement contains a magic number: return new TokenResponse {  	AccessToken = WriteToken (token)'  	ExpiresIn = request.Application.TokenLifetime * 60'  	TokenType = "Bearer"  };  
Magic Number,Thinktecture.AuthorizationServer.Models,StoredGrant,F:\newReposMay17\IdentityModel_AuthorizationServer\source\Libraries\Thinktecture.AuthorizationServer.Core\Models\StoredGrant.cs,CreateConsentDecision,The following statement contains a magic number: return new StoredGrant {  	Type = StoredGrantType.ConsentDecision'  	Subject = subject'  	Client = client'  	Application = application'  	Scopes = scopes.ToList ()'  	Created = DateTime.UtcNow'  	Expiration = DateTime.UtcNow.AddYears (5)  };  
