Implementation smell,Namespace,Class,File,Method,Description
Long Method,GTFS.Filters,GTFSFeedRoutesFilter,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Filters\GTFSFeedRoutesFilter.cs,Filter,The method has 130 lines of code.
Long Method,GTFS.Filters,GTFSFeedStopsFilter,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Filters\GTFSFeedStopsFilter.cs,Filter,The method has 158 lines of code.
Long Method,GTFS.Validation,GTFSFeedValidation,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Validation\GTFSFeedValidation.cs,Validate,The method has 114 lines of code.
Complex Method,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,TryMerge,Cyclomatic complexity of the method is 8
Complex Method,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,ContainsDay,Cyclomatic complexity of the method is 8
Complex Method,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,ToString,Cyclomatic complexity of the method is 10
Complex Method,GTFS.Entities.Enumerations,RouteTypeExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Enumerations\RouteType.cs,ToExtended,Cyclomatic complexity of the method is 8
Complex Method,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,FastParse,Cyclomatic complexity of the method is 10
Complex Method,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,Merge,Cyclomatic complexity of the method is 16
Complex Method,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,Read,Cyclomatic complexity of the method is 10
Complex Method,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,Read,Cyclomatic complexity of the method is 13
Complex Method,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParsePathwayField,Cyclomatic complexity of the method is 12
Complex Method,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseCalendarField,Cyclomatic complexity of the method is 10
Complex Method,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseRouteField,Cyclomatic complexity of the method is 9
Complex Method,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseStopField,Cyclomatic complexity of the method is 16
Complex Method,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseStopTimeField,Cyclomatic complexity of the method is 10
Complex Method,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseTripField,Cyclomatic complexity of the method is 9
Complex Method,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldRouteType,Cyclomatic complexity of the method is 9
Complex Method,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldPathwayMode,Cyclomatic complexity of the method is 8
Complex Method,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,WriteFieldPathwayMode,Cyclomatic complexity of the method is 8
Complex Method,GTFS.Filters,GTFSFeedRoutesFilter,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Filters\GTFSFeedRoutesFilter.cs,Filter,Cyclomatic complexity of the method is 24
Complex Method,GTFS.Filters,GTFSFeedStopsFilter,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Filters\GTFSFeedStopsFilter.cs,Filter,Cyclomatic complexity of the method is 32
Complex Method,GTFS.IO.CSV,CSVLineEnumerableReader,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\IO\CSV\CSVLineEnumerableReader.cs,MoveNext,Cyclomatic complexity of the method is 11
Complex Method,GTFS.IO.CSV,CSVStreamReader,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\IO\CSV\CSVStreamReader.cs,MoveNext,Cyclomatic complexity of the method is 10
Complex Method,GTFS.StopsToShape,StopAtShapesFinder,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\StopsToShape\StopAtShapesFinder.cs,Find,Cyclomatic complexity of the method is 13
Complex Method,GTFS.Validation,GTFSFeedValidation,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Validation\GTFSFeedValidation.cs,Validate,Cyclomatic complexity of the method is 20
Long Parameter List,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseCalendarField,The method has 5 parameters. Parameters: feed' header' calendar' fieldName' value
Long Parameter List,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseCalendarDateField,The method has 5 parameters. Parameters: feed' header' calendarDate' fieldName' value
Long Parameter List,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFareAttributeField,The method has 5 parameters. Parameters: feed' header' fareAttribute' fieldName' value
Long Parameter List,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFareRuleField,The method has 5 parameters. Parameters: feed' header' fareRule' fieldName' value
Long Parameter List,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFeedInfoField,The method has 5 parameters. Parameters: feed' header' feedInfo' fieldName' value
Long Parameter List,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFrequencyField,The method has 5 parameters. Parameters: feed' header' frequency' fieldName' value
Long Parameter List,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseRouteField,The method has 5 parameters. Parameters: feed' header' route' fieldName' value
Long Parameter List,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseShapeField,The method has 5 parameters. Parameters: feed' header' shape' fieldName' value
Long Parameter List,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseStopField,The method has 5 parameters. Parameters: feed' header' stop' fieldName' value
Long Parameter List,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseStopTimeField,The method has 5 parameters. Parameters: feed' header' stopTime' fieldName' value
Long Parameter List,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseTransferField,The method has 5 parameters. Parameters: feed' header' transfer' fieldName' value
Long Parameter List,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseTripField,The method has 5 parameters. Parameters: feed' header' trip' fieldName' value
Long Statement,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,Set,The length of the statement  "                throw new InvalidOperationException("Cannot set mask for a specific day if the day is not within the calendar's range.");" is 121.
Long Statement,GTFS.Entities,GTFSEntity,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\GTFSEntity.cs,OnEntityChanged,The length of the statement  "                    throw new NotImplementedException($"Entity change events are only implemented for Calendar and CalendarDate at this time.");" is 124.
Long Statement,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldTransferType,The length of the statement  "            // - 1 - This is a timed transfer point between two routes. The departing vehicle is expected to wait for the arriving one' with sufficient time for a passenger to transfer between routes." is 188.
Long Statement,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldTransferType,The length of the statement  "            // - 2 - This transfer requires a minimum amount of time between arrival and departure to ensure a connection. The time required to transfer is specified by min_transfer_time." is 175.
Long Statement,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The length of the statement  "            var calendarDatesToWrite = feed.CalendarDates.OrderBy(x => x.ServiceId).OrderBy(y => y.ExceptionType).OrderBy(z => z.Date).ToList();" is 132.
Long Statement,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,WriteFieldPathwayMode,The length of the statement  "                //6 - fare gate (or payment gate): A pathway that crosses into an area of the station where a proof of payment is required (usually via a physical payment gate)." is 161.
Long Statement,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,WriteFieldPathwayMode,The length of the statement  "                //7 - exit gate: Indicates a pathway exiting an area where proof-of-payment is required into an area where proof-of-payment is no longer required." is 146.
Long Statement,GTFS.IO.CSV,CSVStreamReader,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\IO\CSV\CSVStreamReader.cs,Reset,The length of the statement  "            if (!_stream.BaseStream.CanSeek) { throw new NotSupportedException("Resetting a CSVStreamReader encapsulating an unseekable stream is not supported! Make sure the stream is seekable."); }" is 187.
Complex Conditional,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,GetServicesForDayOfWeek,The conditional expression  "(checkForDate && calendar.StartDate <= dt && calendar.EndDate >= dt) || !checkForDate"  is complex.
Magic Number,GTFS.Entities,Agency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Agency.cs,GetHashCode,The following statement contains a magic number: int hash = 83;
Magic Number,GTFS.Entities,Agency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Agency.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.Email.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Agency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Agency.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.FareURL.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Agency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Agency.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.Id.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Agency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Agency.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.LanguageCode.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Agency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Agency.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.Name.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Agency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Agency.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.Phone.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Agency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Agency.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.Timezone.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Agency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Agency.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.URL.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Agency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Agency.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.Email.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Calendar,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Calendar.cs,GetHashCode,The following statement contains a magic number: int hash = 17;
Magic Number,GTFS.Entities,Calendar,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Calendar.cs,GetHashCode,The following statement contains a magic number: hash = hash * 23 + this.EndDate.GetHashCode();
Magic Number,GTFS.Entities,Calendar,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Calendar.cs,GetHashCode,The following statement contains a magic number: hash = hash * 23 + this.Mask.GetHashCode();
Magic Number,GTFS.Entities,Calendar,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Calendar.cs,GetHashCode,The following statement contains a magic number: hash = hash * 23 + (this.ServiceId ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,Calendar,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Calendar.cs,GetHashCode,The following statement contains a magic number: hash = hash * 23 + this.StartDate.GetHashCode();
Magic Number,GTFS.Entities,CalendarDate,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarDate.cs,GetHashCode,The following statement contains a magic number: int hash = 29;
Magic Number,GTFS.Entities,CalendarDate,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarDate.cs,GetHashCode,The following statement contains a magic number: hash = hash * 31 + this.Date.GetHashCode();
Magic Number,GTFS.Entities,CalendarDate,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarDate.cs,GetHashCode,The following statement contains a magic number: hash = hash * 31 + this.ExceptionType.GetHashCode();
Magic Number,GTFS.Entities,CalendarDate,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarDate.cs,GetHashCode,The following statement contains a magic number: hash = hash * 31 + (this.ServiceId ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,Add,The following statement contains a magic number: (calendar.EndDate - calendar.StartDate).Days <= 7 &&                 calendar.StartDate <= day &&                 calendar.EndDate >= day
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,Set,The following statement contains a magic number: (calendar.EndDate - calendar.StartDate).Days > 7
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,FirstDayOfWeek,The following statement contains a magic number: switch(day.DayOfWeek)             {                 case DayOfWeek.Monday:                     return day;                 case DayOfWeek.Tuesday:                     return day.AddDays(-1);                 case DayOfWeek.Wednesday:                     return day.AddDays(-2);                 case DayOfWeek.Thursday:                     return day.AddDays(-3);                 case DayOfWeek.Friday:                     return day.AddDays(-4);                 case DayOfWeek.Saturday:                     return day.AddDays(-5);                 case DayOfWeek.Sunday:                     return day.AddDays(-6);             }
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,FirstDayOfWeek,The following statement contains a magic number: switch(day.DayOfWeek)             {                 case DayOfWeek.Monday:                     return day;                 case DayOfWeek.Tuesday:                     return day.AddDays(-1);                 case DayOfWeek.Wednesday:                     return day.AddDays(-2);                 case DayOfWeek.Thursday:                     return day.AddDays(-3);                 case DayOfWeek.Friday:                     return day.AddDays(-4);                 case DayOfWeek.Saturday:                     return day.AddDays(-5);                 case DayOfWeek.Sunday:                     return day.AddDays(-6);             }
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,FirstDayOfWeek,The following statement contains a magic number: switch(day.DayOfWeek)             {                 case DayOfWeek.Monday:                     return day;                 case DayOfWeek.Tuesday:                     return day.AddDays(-1);                 case DayOfWeek.Wednesday:                     return day.AddDays(-2);                 case DayOfWeek.Thursday:                     return day.AddDays(-3);                 case DayOfWeek.Friday:                     return day.AddDays(-4);                 case DayOfWeek.Saturday:                     return day.AddDays(-5);                 case DayOfWeek.Sunday:                     return day.AddDays(-6);             }
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,FirstDayOfWeek,The following statement contains a magic number: switch(day.DayOfWeek)             {                 case DayOfWeek.Monday:                     return day;                 case DayOfWeek.Tuesday:                     return day.AddDays(-1);                 case DayOfWeek.Wednesday:                     return day.AddDays(-2);                 case DayOfWeek.Thursday:                     return day.AddDays(-3);                 case DayOfWeek.Friday:                     return day.AddDays(-4);                 case DayOfWeek.Saturday:                     return day.AddDays(-5);                 case DayOfWeek.Sunday:                     return day.AddDays(-6);             }
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,FirstDayOfWeek,The following statement contains a magic number: switch(day.DayOfWeek)             {                 case DayOfWeek.Monday:                     return day;                 case DayOfWeek.Tuesday:                     return day.AddDays(-1);                 case DayOfWeek.Wednesday:                     return day.AddDays(-2);                 case DayOfWeek.Thursday:                     return day.AddDays(-3);                 case DayOfWeek.Friday:                     return day.AddDays(-4);                 case DayOfWeek.Saturday:                     return day.AddDays(-5);                 case DayOfWeek.Sunday:                     return day.AddDays(-6);             }
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,LastDayOfWeek,The following statement contains a magic number: switch (day.DayOfWeek)             {                 case DayOfWeek.Monday:                     return day.AddDays(6);                 case DayOfWeek.Tuesday:                     return day.AddDays(5);                 case DayOfWeek.Wednesday:                     return day.AddDays(4);                 case DayOfWeek.Thursday:                     return day.AddDays(3);                 case DayOfWeek.Friday:                     return day.AddDays(2);                 case DayOfWeek.Saturday:                     return day.AddDays(1);                 case DayOfWeek.Sunday:                     return day;             }
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,LastDayOfWeek,The following statement contains a magic number: switch (day.DayOfWeek)             {                 case DayOfWeek.Monday:                     return day.AddDays(6);                 case DayOfWeek.Tuesday:                     return day.AddDays(5);                 case DayOfWeek.Wednesday:                     return day.AddDays(4);                 case DayOfWeek.Thursday:                     return day.AddDays(3);                 case DayOfWeek.Friday:                     return day.AddDays(2);                 case DayOfWeek.Saturday:                     return day.AddDays(1);                 case DayOfWeek.Sunday:                     return day;             }
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,LastDayOfWeek,The following statement contains a magic number: switch (day.DayOfWeek)             {                 case DayOfWeek.Monday:                     return day.AddDays(6);                 case DayOfWeek.Tuesday:                     return day.AddDays(5);                 case DayOfWeek.Wednesday:                     return day.AddDays(4);                 case DayOfWeek.Thursday:                     return day.AddDays(3);                 case DayOfWeek.Friday:                     return day.AddDays(2);                 case DayOfWeek.Saturday:                     return day.AddDays(1);                 case DayOfWeek.Sunday:                     return day;             }
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,LastDayOfWeek,The following statement contains a magic number: switch (day.DayOfWeek)             {                 case DayOfWeek.Monday:                     return day.AddDays(6);                 case DayOfWeek.Tuesday:                     return day.AddDays(5);                 case DayOfWeek.Wednesday:                     return day.AddDays(4);                 case DayOfWeek.Thursday:                     return day.AddDays(3);                 case DayOfWeek.Friday:                     return day.AddDays(2);                 case DayOfWeek.Saturday:                     return day.AddDays(1);                 case DayOfWeek.Sunday:                     return day;             }
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,LastDayOfWeek,The following statement contains a magic number: switch (day.DayOfWeek)             {                 case DayOfWeek.Monday:                     return day.AddDays(6);                 case DayOfWeek.Tuesday:                     return day.AddDays(5);                 case DayOfWeek.Wednesday:                     return day.AddDays(4);                 case DayOfWeek.Thursday:                     return day.AddDays(3);                 case DayOfWeek.Friday:                     return day.AddDays(2);                 case DayOfWeek.Saturday:                     return day.AddDays(1);                 case DayOfWeek.Sunday:                     return day;             }
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,TryMerge,The following statement contains a magic number: var mergedMask = new bool[7];
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,TryMerge,The following statement contains a magic number: i < 7
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,TryMerge,The following statement contains a magic number: merge = new Calendar()             {                 StartDate = calendar.StartDate < other.StartDate ?  calendar.StartDate : other.StartDate'                 EndDate = other.EndDate > calendar.EndDate ? other.EndDate : calendar.EndDate'                 ServiceId = calendar.ServiceId'                 Monday = mergedMask[0]'                 Tuesday = mergedMask[1]'                 Wednesday = mergedMask[2]'                 Thursday = mergedMask[3]'                 Friday = mergedMask[4]'                 Saturday = mergedMask[5]'                 Sunday = mergedMask[6]'             };
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,TryMerge,The following statement contains a magic number: merge = new Calendar()             {                 StartDate = calendar.StartDate < other.StartDate ?  calendar.StartDate : other.StartDate'                 EndDate = other.EndDate > calendar.EndDate ? other.EndDate : calendar.EndDate'                 ServiceId = calendar.ServiceId'                 Monday = mergedMask[0]'                 Tuesday = mergedMask[1]'                 Wednesday = mergedMask[2]'                 Thursday = mergedMask[3]'                 Friday = mergedMask[4]'                 Saturday = mergedMask[5]'                 Sunday = mergedMask[6]'             };
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,TryMerge,The following statement contains a magic number: merge = new Calendar()             {                 StartDate = calendar.StartDate < other.StartDate ?  calendar.StartDate : other.StartDate'                 EndDate = other.EndDate > calendar.EndDate ? other.EndDate : calendar.EndDate'                 ServiceId = calendar.ServiceId'                 Monday = mergedMask[0]'                 Tuesday = mergedMask[1]'                 Wednesday = mergedMask[2]'                 Thursday = mergedMask[3]'                 Friday = mergedMask[4]'                 Saturday = mergedMask[5]'                 Sunday = mergedMask[6]'             };
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,TryMerge,The following statement contains a magic number: merge = new Calendar()             {                 StartDate = calendar.StartDate < other.StartDate ?  calendar.StartDate : other.StartDate'                 EndDate = other.EndDate > calendar.EndDate ? other.EndDate : calendar.EndDate'                 ServiceId = calendar.ServiceId'                 Monday = mergedMask[0]'                 Tuesday = mergedMask[1]'                 Wednesday = mergedMask[2]'                 Thursday = mergedMask[3]'                 Friday = mergedMask[4]'                 Saturday = mergedMask[5]'                 Sunday = mergedMask[6]'             };
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,TryMerge,The following statement contains a magic number: merge = new Calendar()             {                 StartDate = calendar.StartDate < other.StartDate ?  calendar.StartDate : other.StartDate'                 EndDate = other.EndDate > calendar.EndDate ? other.EndDate : calendar.EndDate'                 ServiceId = calendar.ServiceId'                 Monday = mergedMask[0]'                 Tuesday = mergedMask[1]'                 Wednesday = mergedMask[2]'                 Thursday = mergedMask[3]'                 Friday = mergedMask[4]'                 Saturday = mergedMask[5]'                 Sunday = mergedMask[6]'             };
Magic Number,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,MaskForWeek,The following statement contains a magic number: diff >= 7
Magic Number,GTFS.Entities,FareAttribute,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FareAttribute.cs,GetHashCode,The following statement contains a magic number: int hash = 23;
Magic Number,GTFS.Entities,FareAttribute,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FareAttribute.cs,GetHashCode,The following statement contains a magic number: hash = hash * 29 + (this.CurrencyType ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FareAttribute,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FareAttribute.cs,GetHashCode,The following statement contains a magic number: hash = hash * 29 + (this.FareId ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FareAttribute,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FareAttribute.cs,GetHashCode,The following statement contains a magic number: hash = hash * 29 + this.PaymentMethod.GetHashCode();
Magic Number,GTFS.Entities,FareAttribute,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FareAttribute.cs,GetHashCode,The following statement contains a magic number: hash = hash * 29 + (this.Price ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FareAttribute,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FareAttribute.cs,GetHashCode,The following statement contains a magic number: hash = hash * 29 + (this.TransferDuration ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FareAttribute,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FareAttribute.cs,GetHashCode,The following statement contains a magic number: hash = hash * 29 + this.Transfers.GetHashCode();
Magic Number,GTFS.Entities,FareAttribute,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FareAttribute.cs,GetHashCode,The following statement contains a magic number: hash = hash * 29 + (this.AgencyId ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FareRule,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FareRule.cs,GetHashCode,The following statement contains a magic number: int hash = 31;
Magic Number,GTFS.Entities,FareRule,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FareRule.cs,GetHashCode,The following statement contains a magic number: hash = hash * 37 + (this.ContainsId ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FareRule,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FareRule.cs,GetHashCode,The following statement contains a magic number: hash = hash * 37 + (this.DestinationId ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FareRule,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FareRule.cs,GetHashCode,The following statement contains a magic number: hash = hash * 37 + (this.FareId ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FareRule,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FareRule.cs,GetHashCode,The following statement contains a magic number: hash = hash * 37 + (this.OriginId ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FareRule,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FareRule.cs,GetHashCode,The following statement contains a magic number: hash = hash * 37 + (this.RouteId ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FeedInfo,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FeedInfo.cs,GetHashCode,The following statement contains a magic number: int hash = 37;
Magic Number,GTFS.Entities,FeedInfo,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FeedInfo.cs,GetHashCode,The following statement contains a magic number: hash = hash * 41 + (this.EndDate ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FeedInfo,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FeedInfo.cs,GetHashCode,The following statement contains a magic number: hash = hash * 41 + (this.Lang ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FeedInfo,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FeedInfo.cs,GetHashCode,The following statement contains a magic number: hash = hash * 41 + (this.PublisherName ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FeedInfo,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FeedInfo.cs,GetHashCode,The following statement contains a magic number: hash = hash * 41 + (this.PublisherUrl ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FeedInfo,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FeedInfo.cs,GetHashCode,The following statement contains a magic number: hash = hash * 41 + (this.StartDate ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,FeedInfo,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\FeedInfo.cs,GetHashCode,The following statement contains a magic number: hash = hash * 41 + (this.Version ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,Frequency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Frequency.cs,GetHashCode,The following statement contains a magic number: int hash = 37;
Magic Number,GTFS.Entities,Frequency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Frequency.cs,GetHashCode,The following statement contains a magic number: hash = hash * 41 + (this.EndTime ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,Frequency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Frequency.cs,GetHashCode,The following statement contains a magic number: hash = hash * 41 + this.ExactTimes.GetHashCode();
Magic Number,GTFS.Entities,Frequency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Frequency.cs,GetHashCode,The following statement contains a magic number: hash = hash * 41 + (this.HeadwaySecs ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,Frequency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Frequency.cs,GetHashCode,The following statement contains a magic number: hash = hash * 41 + (this.StartTime ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,Frequency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Frequency.cs,GetHashCode,The following statement contains a magic number: hash = hash * 41 + (this.TripId ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,Frequency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Frequency.cs,IsOverlapping,The following statement contains a magic number: var startTime = new TimeOfDay()             {                 Hours = int.Parse(StartTime.Split(':')[0])'                 Minutes = int.Parse(StartTime.Split(':')[1])'                 Seconds = int.Parse(StartTime.Split(':')[2])             };
Magic Number,GTFS.Entities,Frequency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Frequency.cs,IsOverlapping,The following statement contains a magic number: var endTime = new TimeOfDay()             {                 Hours = int.Parse(EndTime.Split(':')[0])'                 Minutes = int.Parse(EndTime.Split(':')[1])'                 Seconds = int.Parse(EndTime.Split(':')[2])             };
Magic Number,GTFS.Entities,Frequency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Frequency.cs,IsOverlapping,The following statement contains a magic number: var otherStartTime = new TimeOfDay()             {                 Hours = int.Parse(other.StartTime.Split(':')[0])'                 Minutes = int.Parse(other.StartTime.Split(':')[1])'                 Seconds = int.Parse(other.StartTime.Split(':')[2])             };
Magic Number,GTFS.Entities,Frequency,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Frequency.cs,IsOverlapping,The following statement contains a magic number: var otherEndTime = new TimeOfDay()             {                 Hours = int.Parse(other.EndTime.Split(':')[0])'                 Minutes = int.Parse(other.EndTime.Split(':')[1])'                 Seconds = int.Parse(other.EndTime.Split(':')[2])             };
Magic Number,GTFS.Entities,Level,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Level.cs,GetHashCode,The following statement contains a magic number: int hash = 83;
Magic Number,GTFS.Entities,Level,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Level.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.Id.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Level,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Level.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.Index.GetHashCode();
Magic Number,GTFS.Entities,Level,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Level.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.Name.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Pathway,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Pathway.cs,GetHashCode,The following statement contains a magic number: int hash = 83;
Magic Number,GTFS.Entities,Pathway,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Pathway.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.Id.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Pathway,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Pathway.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.FromStopId.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Pathway,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Pathway.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.ToStopId.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Pathway,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Pathway.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.PathwayMode.GetHashCode();
Magic Number,GTFS.Entities,Pathway,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Pathway.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.IsBidirectional.GetHashCode();
Magic Number,GTFS.Entities,Pathway,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Pathway.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.Length.GetHashCode();
Magic Number,GTFS.Entities,Pathway,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Pathway.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.TraversalTime.GetHashCode();
Magic Number,GTFS.Entities,Pathway,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Pathway.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.StairCount.GetHashCode();
Magic Number,GTFS.Entities,Pathway,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Pathway.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.MaxSlope.GetHashCode();
Magic Number,GTFS.Entities,Pathway,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Pathway.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.MinWidth.GetHashCode();
Magic Number,GTFS.Entities,Pathway,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Pathway.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.SignpostedAs.GetHashCode();
Magic Number,GTFS.Entities,Pathway,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Pathway.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.ReversedSignpostedAs.GetHashCode();
Magic Number,GTFS.Entities,Route,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Route.cs,GetHashCode,The following statement contains a magic number: int hash = 41;
Magic Number,GTFS.Entities,Route,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Route.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + (this.AgencyId ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,Route,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Route.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.Color.GetHashCode();
Magic Number,GTFS.Entities,Route,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Route.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + (this.Description ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,Route,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Route.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + (this.Id ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,Route,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Route.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + (this.LongName ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,Route,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Route.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + (this.ShortName ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,Route,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Route.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + (this.TextColor ?? -1).GetHashCode();
Magic Number,GTFS.Entities,Route,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Route.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.Type.GetHashCode();
Magic Number,GTFS.Entities,Route,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Route.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + (this.Url ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,Shape,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Shape.cs,GetHashCode,The following statement contains a magic number: int hash = 43;
Magic Number,GTFS.Entities,Shape,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Shape.cs,GetHashCode,The following statement contains a magic number: hash = hash * 47 + this.DistanceTravelled.GetHashCode();
Magic Number,GTFS.Entities,Shape,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Shape.cs,GetHashCode,The following statement contains a magic number: hash = hash * 47 + (this.Id ?? string.Empty).GetHashCode();
Magic Number,GTFS.Entities,Shape,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Shape.cs,GetHashCode,The following statement contains a magic number: hash = hash * 47 + this.Latitude.GetHashCode();
Magic Number,GTFS.Entities,Shape,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Shape.cs,GetHashCode,The following statement contains a magic number: hash = hash * 47 + this.Longitude.GetHashCode();
Magic Number,GTFS.Entities,Shape,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Shape.cs,GetHashCode,The following statement contains a magic number: hash = hash * 47 + this.Sequence.GetHashCode();
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: int hash = 41;
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.Code.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.Description.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.Id.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.Latitude.GetHashCode();
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.LocationType.GetHashCode();
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.Longitude.GetHashCode();
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.Name.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.ParentStation.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.Timezone.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.Url.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.WheelchairBoarding.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.Zone.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.LevelId.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Stop,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Stop.cs,GetHashCode,The following statement contains a magic number: hash = hash * 43 + this.PlatformCode.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,StopTime,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\StopTime.cs,GetHashCode,The following statement contains a magic number: int hash = 53;
Magic Number,GTFS.Entities,StopTime,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\StopTime.cs,GetHashCode,The following statement contains a magic number: hash = hash * 59 + this.ArrivalTime.GetHashCode();
Magic Number,GTFS.Entities,StopTime,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\StopTime.cs,GetHashCode,The following statement contains a magic number: hash = hash * 59 + this.DepartureTime.GetHashCode();
Magic Number,GTFS.Entities,StopTime,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\StopTime.cs,GetHashCode,The following statement contains a magic number: hash = hash * 59 + this.DropOffType.GetHashCode();
Magic Number,GTFS.Entities,StopTime,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\StopTime.cs,GetHashCode,The following statement contains a magic number: hash = hash * 59 + this.PickupType.GetHashCode();
Magic Number,GTFS.Entities,StopTime,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\StopTime.cs,GetHashCode,The following statement contains a magic number: hash = hash * 59 + this.ShapeDistTravelled.GetHashCode();
Magic Number,GTFS.Entities,StopTime,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\StopTime.cs,GetHashCode,The following statement contains a magic number: hash = hash * 59 + this.StopHeadsign.GetHashCode();
Magic Number,GTFS.Entities,StopTime,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\StopTime.cs,GetHashCode,The following statement contains a magic number: hash = hash * 59 + this.StopId.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,StopTime,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\StopTime.cs,GetHashCode,The following statement contains a magic number: hash = hash * 59 + this.StopSequence.GetHashCode();
Magic Number,GTFS.Entities,StopTime,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\StopTime.cs,GetHashCode,The following statement contains a magic number: hash = hash * 59 + this.TripId.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,StopTime,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\StopTime.cs,GetHashCode,The following statement contains a magic number: hash = hash * 59 + this.TimepointType.GetHashCode();
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,FromTotalSeconds,The following statement contains a magic number: var hours = (int)Math.Floor(totalSeconds / 3600.0);
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,FromTotalSeconds,The following statement contains a magic number: var minutes = (int)Math.Floor((totalSeconds - hours * 3600.0) / 60.0);
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,FromTotalSeconds,The following statement contains a magic number: var minutes = (int)Math.Floor((totalSeconds - hours * 3600.0) / 60.0);
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,FromTotalSeconds,The following statement contains a magic number: var seconds = (int)(totalSeconds - hours * 3600.0 - minutes * 60.0);
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,FromTotalSeconds,The following statement contains a magic number: var seconds = (int)(totalSeconds - hours * 3600.0 - minutes * 60.0);
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,FromString,The following statement contains a magic number: tod.Seconds = tokens.Length > 2 ? int.Parse(tokens[2]) : 0;
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,FromString,The following statement contains a magic number: tod.Seconds = tokens.Length > 2 ? int.Parse(tokens[2]) : 0;
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,FromString,The following statement contains a magic number: tod.Minutes += (tod.Seconds / 60);
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,FromString,The following statement contains a magic number: tod.Seconds = tod.Seconds % 60;
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,FromString,The following statement contains a magic number: tod.Seconds >= 60
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,FromString,The following statement contains a magic number: tod.Hours += (tod.Minutes / 60);
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,FromString,The following statement contains a magic number: tod.Minutes = tod.Minutes % 60;
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,FromString,The following statement contains a magic number: tod.Minutes >= 60
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,GetHashCode,The following statement contains a magic number: int hash = 61;
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,GetHashCode,The following statement contains a magic number: hash = hash * 67 + this.Hours.GetHashCode();
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,GetHashCode,The following statement contains a magic number: hash = hash * 67 + this.Minutes.GetHashCode();
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,GetHashCode,The following statement contains a magic number: hash = hash * 67 + this.Seconds.GetHashCode();
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,CompareTo,The following statement contains a magic number: return (Hours - other.Hours) * 3600 + (Minutes - other.Minutes) * 60 + (Seconds - other.Seconds);
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,CompareTo,The following statement contains a magic number: return (Hours - other.Hours) * 3600 + (Minutes - other.Minutes) * 60 + (Seconds - other.Seconds);
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,ToString,The following statement contains a magic number: int d = (int)Math.Floor((double)Hours / 24);
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,ToString,The following statement contains a magic number: int h = Hours % 24;
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,ToString,The following statement contains a magic number: result = result.Replace("HH"' (h < 10 ? "0" : "") + h);
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,ToString,The following statement contains a magic number: result = result.Replace("MM"' (Minutes < 10 ? "0" : "") + Minutes);
Magic Number,GTFS.Entities,TimeOfDay,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\TimeOfDay.cs,ToString,The following statement contains a magic number: result = result.Replace("SS"' (Seconds < 10 ? "0" : "") + Seconds);
Magic Number,GTFS.Entities,Transfer,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Transfer.cs,GetHashCode,The following statement contains a magic number: int hash = 71;
Magic Number,GTFS.Entities,Transfer,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Transfer.cs,GetHashCode,The following statement contains a magic number: hash = hash * 73 + this.FromStopId.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Transfer,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Transfer.cs,GetHashCode,The following statement contains a magic number: hash = hash * 73 + this.MinimumTransferTime.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Transfer,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Transfer.cs,GetHashCode,The following statement contains a magic number: hash = hash * 73 + this.ToStopId.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Transfer,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Transfer.cs,GetHashCode,The following statement contains a magic number: hash = hash * 73 + this.TransferType.GetHashCode();
Magic Number,GTFS.Entities,Trip,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Trip.cs,GetHashCode,The following statement contains a magic number: int hash = 83;
Magic Number,GTFS.Entities,Trip,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Trip.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.AccessibilityType.GetHashCode();
Magic Number,GTFS.Entities,Trip,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Trip.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.BlockId.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Trip,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Trip.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.Direction.GetHashCode();
Magic Number,GTFS.Entities,Trip,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Trip.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.Headsign.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Trip,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Trip.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.Id.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Trip,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Trip.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.RouteId.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Trip,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Trip.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.ServiceId.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Trip,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Trip.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.ShapeId.GetHashCodeEmptyWhenNull();
Magic Number,GTFS.Entities,Trip,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Trip.cs,GetHashCode,The following statement contains a magic number: hash = hash * 89 + this.ShortName.GetHashCodeEmptyWhenNull();
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,FastParse,The following statement contains a magic number: switch(value)             {                 case '0':                     return 0;                 case '1':                     return 1;                 case '2':                     return 2;                 case '3':                     return 3;                 case '4':                     return 4;                 case '5':                     return 5;                 case '6':                     return 6;                 case '7':                     return 7;                 case '8':                     return 8;                 case '9':                     return 9;             }
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,FastParse,The following statement contains a magic number: switch(value)             {                 case '0':                     return 0;                 case '1':                     return 1;                 case '2':                     return 2;                 case '3':                     return 3;                 case '4':                     return 4;                 case '5':                     return 5;                 case '6':                     return 6;                 case '7':                     return 7;                 case '8':                     return 8;                 case '9':                     return 9;             }
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,FastParse,The following statement contains a magic number: switch(value)             {                 case '0':                     return 0;                 case '1':                     return 1;                 case '2':                     return 2;                 case '3':                     return 3;                 case '4':                     return 4;                 case '5':                     return 5;                 case '6':                     return 6;                 case '7':                     return 7;                 case '8':                     return 8;                 case '9':                     return 9;             }
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,FastParse,The following statement contains a magic number: switch(value)             {                 case '0':                     return 0;                 case '1':                     return 1;                 case '2':                     return 2;                 case '3':                     return 3;                 case '4':                     return 4;                 case '5':                     return 5;                 case '6':                     return 6;                 case '7':                     return 7;                 case '8':                     return 8;                 case '9':                     return 9;             }
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,FastParse,The following statement contains a magic number: switch(value)             {                 case '0':                     return 0;                 case '1':                     return 1;                 case '2':                     return 2;                 case '3':                     return 3;                 case '4':                     return 4;                 case '5':                     return 5;                 case '6':                     return 6;                 case '7':                     return 7;                 case '8':                     return 8;                 case '9':                     return 9;             }
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,FastParse,The following statement contains a magic number: switch(value)             {                 case '0':                     return 0;                 case '1':                     return 1;                 case '2':                     return 2;                 case '3':                     return 3;                 case '4':                     return 4;                 case '5':                     return 5;                 case '6':                     return 6;                 case '7':                     return 7;                 case '8':                     return 8;                 case '9':                     return 9;             }
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,FastParse,The following statement contains a magic number: switch(value)             {                 case '0':                     return 0;                 case '1':                     return 1;                 case '2':                     return 2;                 case '3':                     return 3;                 case '4':                     return 4;                 case '5':                     return 5;                 case '6':                     return 6;                 case '7':                     return 7;                 case '8':                     return 8;                 case '9':                     return 9;             }
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,FastParse,The following statement contains a magic number: switch(value)             {                 case '0':                     return 0;                 case '1':                     return 1;                 case '2':                     return 2;                 case '3':                     return 3;                 case '4':                     return 4;                 case '5':                     return 5;                 case '6':                     return 6;                 case '7':                     return 7;                 case '8':                     return 8;                 case '9':                     return 9;             }
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,FromUnixTime,The following statement contains a magic number: var epoch = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,ToUnixTime,The following statement contains a magic number: var epoch = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,DistanceInMeter,The following statement contains a magic number: var radius_earth = 6371000;
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,DistanceInMeter,The following statement contains a magic number: var degToRandian = Math.PI / 180;
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,DistanceInMeter,The following statement contains a magic number: var a = Math.Pow(Math.Sin(dLat / 2)' 2) +                 Math.Cos(lat1_rad) * Math.Cos(lat2_rad) *                 Math.Pow(Math.Sin(dLon / 2)' 2);
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,DistanceInMeter,The following statement contains a magic number: var a = Math.Pow(Math.Sin(dLat / 2)' 2) +                 Math.Cos(lat1_rad) * Math.Cos(lat2_rad) *                 Math.Pow(Math.Sin(dLon / 2)' 2);
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,DistanceInMeter,The following statement contains a magic number: var a = Math.Pow(Math.Sin(dLat / 2)' 2) +                 Math.Cos(lat1_rad) * Math.Cos(lat2_rad) *                 Math.Pow(Math.Sin(dLon / 2)' 2);
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,DistanceInMeter,The following statement contains a magic number: var a = Math.Pow(Math.Sin(dLat / 2)' 2) +                 Math.Cos(lat1_rad) * Math.Cos(lat2_rad) *                 Math.Pow(Math.Sin(dLon / 2)' 2);
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,DistanceInMeter,The following statement contains a magic number: var c = 2 * Math.Atan2(Math.Sqrt(a)' Math.Sqrt(1 - a));
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,ToHexColorString,The following statement contains a magic number: var r = (short)(((uint)value.Value >> 16) % 256);
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,ToHexColorString,The following statement contains a magic number: var r = (short)(((uint)value.Value >> 16) % 256);
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,ToHexColorString,The following statement contains a magic number: var g = (short)(((uint)value.Value >> 8) % 256);
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,ToHexColorString,The following statement contains a magic number: var g = (short)(((uint)value.Value >> 8) % 256);
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,ToHexColorString,The following statement contains a magic number: var b = (short)((uint)value.Value % 256);
Magic Number,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,ToArgbInt,The following statement contains a magic number: value.Length == 6
Magic Number,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,GTFSReader,The following statement contains a magic number: this.TimeOfDayReader = (timeOfDayString) =>             {                 if (string.IsNullOrWhiteSpace(timeOfDayString))                 {                     return new TimeOfDay()                     {                         Hours = 0'                         Minutes = 0'                         Seconds = 0                     };                 }                 else if (!(timeOfDayString.Length == 8 || timeOfDayString.Length == 7))                 {                     throw new ArgumentException($"Invalid timeOfDayString: {timeOfDayString}");                 }                  var timeOfDay = new TimeOfDay();                 if (timeOfDayString.Length == 8)                 {                     timeOfDay.Hours = timeOfDayString.FastParse(0' 2);                     timeOfDay.Minutes = timeOfDayString.FastParse(3' 2);                     timeOfDay.Seconds = timeOfDayString.FastParse(6' 2);                     return timeOfDay;                 }                  timeOfDay.Hours = timeOfDayString.FastParse(0' 1);                 timeOfDay.Minutes = timeOfDayString.FastParse(2' 2);                 timeOfDay.Seconds = timeOfDayString.FastParse(5' 2);                 return timeOfDay;             };
Magic Number,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,GTFSReader,The following statement contains a magic number: this.TimeOfDayReader = (timeOfDayString) =>             {                 if (string.IsNullOrWhiteSpace(timeOfDayString))                 {                     return new TimeOfDay()                     {                         Hours = 0'                         Minutes = 0'                         Seconds = 0                     };                 }                 else if (!(timeOfDayString.Length == 8 || timeOfDayString.Length == 7))                 {                     throw new ArgumentException($"Invalid timeOfDayString: {timeOfDayString}");                 }                  var timeOfDay = new TimeOfDay();                 if (timeOfDayString.Length == 8)                 {                     timeOfDay.Hours = timeOfDayString.FastParse(0' 2);                     timeOfDay.Minutes = timeOfDayString.FastParse(3' 2);                     timeOfDay.Seconds = timeOfDayString.FastParse(6' 2);                     return timeOfDay;                 }                  timeOfDay.Hours = timeOfDayString.FastParse(0' 1);                 timeOfDay.Minutes = timeOfDayString.FastParse(2' 2);                 timeOfDay.Seconds = timeOfDayString.FastParse(5' 2);                 return timeOfDay;             };
Magic Number,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,GTFSReader,The following statement contains a magic number: this.TimeOfDayReader = (timeOfDayString) =>             {                 if (string.IsNullOrWhiteSpace(timeOfDayString))                 {                     return new TimeOfDay()                     {                         Hours = 0'                         Minutes = 0'                         Seconds = 0                     };                 }                 else if (!(timeOfDayString.Length == 8 || timeOfDayString.Length == 7))                 {                     throw new ArgumentException($"Invalid timeOfDayString: {timeOfDayString}");                 }                  var timeOfDay = new TimeOfDay();                 if (timeOfDayString.Length == 8)                 {                     timeOfDay.Hours = timeOfDayString.FastParse(0' 2);                     timeOfDay.Minutes = timeOfDayString.FastParse(3' 2);                     timeOfDay.Seconds = timeOfDayString.FastParse(6' 2);                     return timeOfDay;                 }                  timeOfDay.Hours = timeOfDayString.FastParse(0' 1);                 timeOfDay.Minutes = timeOfDayString.FastParse(2' 2);                 timeOfDay.Seconds = timeOfDayString.FastParse(5' 2);                 return timeOfDay;             };
Magic Number,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,GTFSReader,The following statement contains a magic number: this.TimeOfDayReader = (timeOfDayString) =>             {                 if (string.IsNullOrWhiteSpace(timeOfDayString))                 {                     return new TimeOfDay()                     {                         Hours = 0'                         Minutes = 0'                         Seconds = 0                     };                 }                 else if (!(timeOfDayString.Length == 8 || timeOfDayString.Length == 7))                 {                     throw new ArgumentException($"Invalid timeOfDayString: {timeOfDayString}");                 }                  var timeOfDay = new TimeOfDay();                 if (timeOfDayString.Length == 8)                 {                     timeOfDay.Hours = timeOfDayString.FastParse(0' 2);                     timeOfDay.Minutes = timeOfDayString.FastParse(3' 2);                     timeOfDay.Seconds = timeOfDayString.FastParse(6' 2);                     return timeOfDay;                 }                  timeOfDay.Hours = timeOfDayString.FastParse(0' 1);                 timeOfDay.Minutes = timeOfDayString.FastParse(2' 2);                 timeOfDay.Seconds = timeOfDayString.FastParse(5' 2);                 return timeOfDay;             };
Magic Number,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,GTFSReader,The following statement contains a magic number: this.TimeOfDayReader = (timeOfDayString) =>             {                 if (string.IsNullOrWhiteSpace(timeOfDayString))                 {                     return new TimeOfDay()                     {                         Hours = 0'                         Minutes = 0'                         Seconds = 0                     };                 }                 else if (!(timeOfDayString.Length == 8 || timeOfDayString.Length == 7))                 {                     throw new ArgumentException($"Invalid timeOfDayString: {timeOfDayString}");                 }                  var timeOfDay = new TimeOfDay();                 if (timeOfDayString.Length == 8)                 {                     timeOfDay.Hours = timeOfDayString.FastParse(0' 2);                     timeOfDay.Minutes = timeOfDayString.FastParse(3' 2);                     timeOfDay.Seconds = timeOfDayString.FastParse(6' 2);                     return timeOfDay;                 }                  timeOfDay.Hours = timeOfDayString.FastParse(0' 1);                 timeOfDay.Minutes = timeOfDayString.FastParse(2' 2);                 timeOfDay.Seconds = timeOfDayString.FastParse(5' 2);                 return timeOfDay;             };
Magic Number,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,GTFSReader,The following statement contains a magic number: this.TimeOfDayReader = (timeOfDayString) =>             {                 if (string.IsNullOrWhiteSpace(timeOfDayString))                 {                     return new TimeOfDay()                     {                         Hours = 0'                         Minutes = 0'                         Seconds = 0                     };                 }                 else if (!(timeOfDayString.Length == 8 || timeOfDayString.Length == 7))                 {                     throw new ArgumentException($"Invalid timeOfDayString: {timeOfDayString}");                 }                  var timeOfDay = new TimeOfDay();                 if (timeOfDayString.Length == 8)                 {                     timeOfDay.Hours = timeOfDayString.FastParse(0' 2);                     timeOfDay.Minutes = timeOfDayString.FastParse(3' 2);                     timeOfDay.Seconds = timeOfDayString.FastParse(6' 2);                     return timeOfDay;                 }                  timeOfDay.Hours = timeOfDayString.FastParse(0' 1);                 timeOfDay.Minutes = timeOfDayString.FastParse(2' 2);                 timeOfDay.Seconds = timeOfDayString.FastParse(5' 2);                 return timeOfDay;             };
Magic Number,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,GTFSReader,The following statement contains a magic number: this.TimeOfDayReader = (timeOfDayString) =>             {                 if (string.IsNullOrWhiteSpace(timeOfDayString))                 {                     return new TimeOfDay()                     {                         Hours = 0'                         Minutes = 0'                         Seconds = 0                     };                 }                 else if (!(timeOfDayString.Length == 8 || timeOfDayString.Length == 7))                 {                     throw new ArgumentException($"Invalid timeOfDayString: {timeOfDayString}");                 }                  var timeOfDay = new TimeOfDay();                 if (timeOfDayString.Length == 8)                 {                     timeOfDay.Hours = timeOfDayString.FastParse(0' 2);                     timeOfDay.Minutes = timeOfDayString.FastParse(3' 2);                     timeOfDay.Seconds = timeOfDayString.FastParse(6' 2);                     return timeOfDay;                 }                  timeOfDay.Hours = timeOfDayString.FastParse(0' 1);                 timeOfDay.Minutes = timeOfDayString.FastParse(2' 2);                 timeOfDay.Seconds = timeOfDayString.FastParse(5' 2);                 return timeOfDay;             };
Magic Number,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,GTFSReader,The following statement contains a magic number: this.TimeOfDayReader = (timeOfDayString) =>             {                 if (string.IsNullOrWhiteSpace(timeOfDayString))                 {                     return new TimeOfDay()                     {                         Hours = 0'                         Minutes = 0'                         Seconds = 0                     };                 }                 else if (!(timeOfDayString.Length == 8 || timeOfDayString.Length == 7))                 {                     throw new ArgumentException($"Invalid timeOfDayString: {timeOfDayString}");                 }                  var timeOfDay = new TimeOfDay();                 if (timeOfDayString.Length == 8)                 {                     timeOfDay.Hours = timeOfDayString.FastParse(0' 2);                     timeOfDay.Minutes = timeOfDayString.FastParse(3' 2);                     timeOfDay.Seconds = timeOfDayString.FastParse(6' 2);                     return timeOfDay;                 }                  timeOfDay.Hours = timeOfDayString.FastParse(0' 1);                 timeOfDay.Minutes = timeOfDayString.FastParse(2' 2);                 timeOfDay.Seconds = timeOfDayString.FastParse(5' 2);                 return timeOfDay;             };
Magic Number,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,GTFSReader,The following statement contains a magic number: this.TimeOfDayReader = (timeOfDayString) =>             {                 if (string.IsNullOrWhiteSpace(timeOfDayString))                 {                     return new TimeOfDay()                     {                         Hours = 0'                         Minutes = 0'                         Seconds = 0                     };                 }                 else if (!(timeOfDayString.Length == 8 || timeOfDayString.Length == 7))                 {                     throw new ArgumentException($"Invalid timeOfDayString: {timeOfDayString}");                 }                  var timeOfDay = new TimeOfDay();                 if (timeOfDayString.Length == 8)                 {                     timeOfDay.Hours = timeOfDayString.FastParse(0' 2);                     timeOfDay.Minutes = timeOfDayString.FastParse(3' 2);                     timeOfDay.Seconds = timeOfDayString.FastParse(6' 2);                     return timeOfDay;                 }                  timeOfDay.Hours = timeOfDayString.FastParse(0' 1);                 timeOfDay.Minutes = timeOfDayString.FastParse(2' 2);                 timeOfDay.Seconds = timeOfDayString.FastParse(5' 2);                 return timeOfDay;             };
Magic Number,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,GTFSReader,The following statement contains a magic number: this.TimeOfDayReader = (timeOfDayString) =>             {                 if (string.IsNullOrWhiteSpace(timeOfDayString))                 {                     return new TimeOfDay()                     {                         Hours = 0'                         Minutes = 0'                         Seconds = 0                     };                 }                 else if (!(timeOfDayString.Length == 8 || timeOfDayString.Length == 7))                 {                     throw new ArgumentException($"Invalid timeOfDayString: {timeOfDayString}");                 }                  var timeOfDay = new TimeOfDay();                 if (timeOfDayString.Length == 8)                 {                     timeOfDay.Hours = timeOfDayString.FastParse(0' 2);                     timeOfDay.Minutes = timeOfDayString.FastParse(3' 2);                     timeOfDay.Seconds = timeOfDayString.FastParse(6' 2);                     return timeOfDay;                 }                  timeOfDay.Hours = timeOfDayString.FastParse(0' 1);                 timeOfDay.Minutes = timeOfDayString.FastParse(2' 2);                 timeOfDay.Seconds = timeOfDayString.FastParse(5' 2);                 return timeOfDay;             };
Magic Number,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,GTFSReader,The following statement contains a magic number: this.TimeOfDayReader = (timeOfDayString) =>             {                 if (string.IsNullOrWhiteSpace(timeOfDayString))                 {                     return new TimeOfDay()                     {                         Hours = 0'                         Minutes = 0'                         Seconds = 0                     };                 }                 else if (!(timeOfDayString.Length == 8 || timeOfDayString.Length == 7))                 {                     throw new ArgumentException($"Invalid timeOfDayString: {timeOfDayString}");                 }                  var timeOfDay = new TimeOfDay();                 if (timeOfDayString.Length == 8)                 {                     timeOfDay.Hours = timeOfDayString.FastParse(0' 2);                     timeOfDay.Minutes = timeOfDayString.FastParse(3' 2);                     timeOfDay.Seconds = timeOfDayString.FastParse(6' 2);                     return timeOfDay;                 }                  timeOfDay.Hours = timeOfDayString.FastParse(0' 1);                 timeOfDay.Minutes = timeOfDayString.FastParse(2' 2);                 timeOfDay.Seconds = timeOfDayString.FastParse(5' 2);                 return timeOfDay;             };
Magic Number,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,GTFSReader,The following statement contains a magic number: this.TimeOfDayReader = (timeOfDayString) =>             {                 if (string.IsNullOrWhiteSpace(timeOfDayString))                 {                     return new TimeOfDay()                     {                         Hours = 0'                         Minutes = 0'                         Seconds = 0                     };                 }                 else if (!(timeOfDayString.Length == 8 || timeOfDayString.Length == 7))                 {                     throw new ArgumentException($"Invalid timeOfDayString: {timeOfDayString}");                 }                  var timeOfDay = new TimeOfDay();                 if (timeOfDayString.Length == 8)                 {                     timeOfDay.Hours = timeOfDayString.FastParse(0' 2);                     timeOfDay.Minutes = timeOfDayString.FastParse(3' 2);                     timeOfDay.Seconds = timeOfDayString.FastParse(6' 2);                     return timeOfDay;                 }                  timeOfDay.Hours = timeOfDayString.FastParse(0' 1);                 timeOfDay.Minutes = timeOfDayString.FastParse(2' 2);                 timeOfDay.Seconds = timeOfDayString.FastParse(5' 2);                 return timeOfDay;             };
Magic Number,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,CleanFieldValue,The following statement contains a magic number: return value.Substring(1' value.Length - 2);
Magic Number,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,CleanFieldValue,The following statement contains a magic number: value.Length >= 2
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[3];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "level_name";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldString("level"' "level_name"' level.Name' true);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[12];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "to_stop_id";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = "pathway_mode";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = "is_bidirectional";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = "length";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = "traversal_time";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[7] = "stair_count";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[8] = "max_slope";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[9] = "min_width";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[10] = "signposted_as";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[11] = "reversed_signposted_as";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldString("pathway"' "to_stop_id"' pathway.ToStopId);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = this.WriteFieldPathwayMode("pathway"' "pathway_mode"' pathway.PathwayMode);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = this.WriteFieldIsBidirectional("pathway"' "is_bidirectional"' pathway.IsBidirectional);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = this.WriteFieldDouble("pathway"' "length"' pathway.Length);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = this.WriteFieldInt("pathway"' "traversal_time"' pathway.TraversalTime);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[7] = this.WriteFieldInt("pathway"' "stair_count"' pathway.StairCount);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[8] = this.WriteFieldDouble("pathway"' "max_slope"' pathway.MaxSlope);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[9] = this.WriteFieldDouble("pathway"' "min_width"' pathway.MinWidth);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[10] = this.WriteFieldString("pathway"' "signposted_as"' pathway.SignpostedAs);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[11] = this.WriteFieldString("pathway"' "reversed_signposted_as"' pathway.ReversedSignpostedAs);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[8];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "agency_url";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = "agency_timezone";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = "agency_lang";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = "agency_phone";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = "agency_fare_url";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[7] = "agency_email";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldString("agency"' "agency_url"' agency.URL);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = this.WriteFieldString("agency"' "agency_timezone"' agency.Timezone);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = this.WriteFieldString("agency"' "agency_lang"' agency.LanguageCode);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = this.WriteFieldString("agency"' "agency_phone"' agency.Phone);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = this.WriteFieldString("agency"' "agency_fare_url"' agency.FareURL);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[7] = this.WriteFieldString("agency"' "agency_email"' agency.Email);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[3];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "exception_type";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldExceptionType("calendar_dates"' "exception_type"' entity.ExceptionType);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[10];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "tuesday";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = "wednesday";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = "thursday";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = "friday";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = "saturday";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[7] = "sunday";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[8] = "start_date";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[9] = "end_date";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldBool("calendar"' "tuesday"' entity.Tuesday);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = this.WriteFieldBool("calendar"' "wednesday"' entity.Wednesday);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = this.WriteFieldBool("calendar"' "thursday"' entity.Thursday);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = this.WriteFieldBool("calendar"' "friday"' entity.Friday);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = this.WriteFieldBool("calendar"' "saturday"' entity.Saturday);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[7] = this.WriteFieldBool("calendar"' "sunday"' entity.Sunday);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[8] = this.WriteFieldDate("calendar"' "start_date"' entity.StartDate);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[9] = this.WriteFieldDate("calendar"' "end_date"' entity.EndDate);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[7];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "currency_type";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = "payment_method";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = "transfers";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = "agency_id";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = "transfer_duration";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldString("fare_attributes"' "currency_type"' entity.CurrencyType);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = this.WriteFieldPaymentMethod("fare_attributes"' "payment_method"' entity.PaymentMethod);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = this.WriteFieldUint("fare_attributes"' "transfers"' entity.Transfers);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = this.WriteFieldString("fare_attributes"' "agency_id"' entity.AgencyId);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = this.WriteFieldString("fare_attributes"' "transfer_duration"' entity.TransferDuration);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[5];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "origin_id";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = "destination_id";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = "contains_id";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldString("fare_rules"' "origin_id"' entity.OriginId);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = this.WriteFieldString("fare_rules"' "destination_id"' entity.DestinationId);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = this.WriteFieldString("fare_rules"' "contains_id"' entity.ContainsId);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[6];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "feed_lang";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = "feed_start_date";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = "feed_end_date";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = "feed_version";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldString("feed_info"' "feed_lang"' entity.Lang);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = this.WriteFieldString("feed_info"' "feed_start_date"' entity.StartDate);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = this.WriteFieldString("feed_info"' "feed_end_date"' entity.EndDate);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = this.WriteFieldString("feed_info"' "feed_version"' entity.Version);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[5];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "end_time";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = "headway_secs";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = "exact_times";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldString("frequency"' "end_time"' entity.EndTime);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = this.WriteFieldString("frequency"' "headway_secs"' entity.HeadwaySecs);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = this.WriteFieldBool("frequency"' "exact_times"' entity.ExactTimes);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[9];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "route_short_name";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = "route_long_name";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = "route_desc";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = "route_type";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = "route_url";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[7] = "route_color";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[8] = "route_text_color";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldString("routes"' "route_short_name"' entity.ShortName' true);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = this.WriteFieldString("routes"' "route_long_name"' entity.LongName' true);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = this.WriteFieldString("routes"' "route_desc"' entity.Description);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = this.WriteFieldRouteType("routes"' "route_type"' entity.Type);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = this.WriteFieldString("routes"' "route_url"' entity.Url);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[7] = this.WriteFieldColor("routes"' "route_color"' entity.Color);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[8] = this.WriteFieldColor("routes"' "route_text_color"' entity.TextColor);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[5];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "shape_pt_lon";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = "shape_pt_sequence";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = "shape_dist_traveled";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldDouble("shapes"' "shape_pt_lon"' entity.Longitude);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = this.WriteFieldUint("shapes"' "shape_pt_sequence"' entity.Sequence);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = this.WriteFieldDouble("shapes"' "shape_dist_traveled"' entity.DistanceTravelled);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[14];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "stop_name";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = "stop_desc";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = "stop_lat";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = "stop_lon";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = "zone_id";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[7] = "stop_url";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[8] = "location_type";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[9] = "parent_station";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[10] = "stop_timezone";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[11] = "wheelchair_boarding";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[12] = "level_id";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[13] = "platform_code";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldString("stops"' "stop_name"' entity.Name' true);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = this.WriteFieldString("stops"' "stop_desc"' entity.Description' true);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = this.WriteFieldDouble("stops"' "stop_lat"' entity.Latitude);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = this.WriteFieldDouble("stops"' "stop_lon"' entity.Longitude);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = this.WriteFieldString("stops"' "zone_id"' entity.Zone);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[7] = this.WriteFieldString("stops"' "stop_url"' entity.Url);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[8] = this.WriteFieldLocationType("stops"' "location_type"' entity.LocationType);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[9] = this.WriteFieldString("stops"' "parent_station"' entity.ParentStation);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[10] = this.WriteFieldString("stops"' "stop_timezone"' entity.Timezone);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[11] = this.WriteFieldString("stops"' "wheelchair_boarding"' entity.WheelchairBoarding);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[12] = this.WriteFieldString("stops"' "level_id"' entity.LevelId);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[13] = this.WriteFieldString("stops"' "platform_code"' entity.PlatformCode);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[10];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "departure_time";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = "stop_id";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = "stop_sequence";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = "stop_headsign";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = "pickup_type";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[7] = "drop_off_type";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[8] = "shape_dist_traveled";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[9] = "timepoint";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldTimeOfDay("stop_times"' "departure_time"' entity.DepartureTime);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = this.WriteFieldString("stop_times"' "stop_id"' entity.StopId);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = this.WriteFieldUint("stop_times"' "stop_sequence"' entity.StopSequence);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = this.WriteFieldString("stop_times"' "stop_headsign"' entity.StopHeadsign' true);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = this.WriteFieldPickupType("stop_times"' "pickup_type"' entity.PickupType);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[7] = this.WriteFieldDropOffType("stop_times"' "drop_off_type"' entity.DropOffType);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[8] = this.WriteFieldDouble("stop_times"' "shape_dist_traveled"' entity.ShapeDistTravelled);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[9] = this.WriteFieldTimepointType("stop_times"' "timepoint"' entity.TimepointType);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[4];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "transfer_type";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = "min_transfer_time";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldTransferType("transfers"' "transfer_type"' entity.TransferType);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = this.WriteFieldString("transfers"' "min_transfer_time"' entity.MinimumTransferTime);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: var data = new string[9];
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = "service_id";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = "trip_headsign";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = "trip_short_name";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = "direction_id";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = "block_id";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[7] = "shape_id";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[8] = "wheelchair_accessible";
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[2] = this.WriteFieldString("trips"' "service_id"' entity.ServiceId);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[3] = this.WriteFieldString("trips"' "trip_headsign"' entity.Headsign);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[4] = this.WriteFieldString("trips"' "trip_short_name"' entity.ShortName' true);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[5] = this.WriteFieldDirectionType("trips"' "direction_id"' entity.Direction);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[6] = this.WriteFieldString("trips"' "block_id"' entity.BlockId);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[7] = this.WriteFieldString("trips"' "shape_id"' entity.ShapeId);
Magic Number,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,Write,The following statement contains a magic number: data[8] = this.WriteFieldAccessibilityType("trips"' "wheelchair_accessible"' entity.AccessibilityType);
Magic Number,GTFS.IO.Compression,GTFSArchiveSource,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\IO\Compression\GTFSArchiveSource.cs,BuildSource,The following statement contains a magic number: _sourceFiles = new List<IGTFSSourceFile>(10);
Magic Number,GTFS.IO.CSV,CSVLineEnumerableReader,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\IO\CSV\CSVLineEnumerableReader.cs,MoveNext,The following statement contains a magic number: _current = new string[20];
Magic Number,GTFS.IO.CSV,CSVStreamReader,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\IO\CSV\CSVStreamReader.cs,MoveNext,The following statement contains a magic number: _current = new string[20];
Magic Number,GTFS.StopsToShape,StopAtShapesFinder,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\StopsToShape\StopAtShapesFinder.cs,Find,The following statement contains a magic number: return this.Find(feed' tripId' 20);
Magic Number,GTFS.StopsToShape,StopAtShapesFinder,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\StopsToShape\StopAtShapesFinder.cs,Find,The following statement contains a magic number: shapeDistanceTolerance = shapeDistanceTolerance * 2;
Missing Default,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,FirstDayOfWeek,The following switch statement is missing a default case: switch(day.DayOfWeek)             {                 case DayOfWeek.Monday:                     return day;                 case DayOfWeek.Tuesday:                     return day.AddDays(-1);                 case DayOfWeek.Wednesday:                     return day.AddDays(-2);                 case DayOfWeek.Thursday:                     return day.AddDays(-3);                 case DayOfWeek.Friday:                     return day.AddDays(-4);                 case DayOfWeek.Saturday:                     return day.AddDays(-5);                 case DayOfWeek.Sunday:                     return day.AddDays(-6);             }
Missing Default,GTFS.Entities,CalendarExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\CalendarExtensions.cs,LastDayOfWeek,The following switch statement is missing a default case: switch (day.DayOfWeek)             {                 case DayOfWeek.Monday:                     return day.AddDays(6);                 case DayOfWeek.Tuesday:                     return day.AddDays(5);                 case DayOfWeek.Wednesday:                     return day.AddDays(4);                 case DayOfWeek.Thursday:                     return day.AddDays(3);                 case DayOfWeek.Friday:                     return day.AddDays(2);                 case DayOfWeek.Saturday:                     return day.AddDays(1);                 case DayOfWeek.Sunday:                     return day;             }
Missing Default,GTFS.Entities.Enumerations,RouteTypeExtensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Entities\Enumerations\RouteType.cs,ToExtended,The following switch statement is missing a default case: switch(routeType)             {                 case RouteType.Bus:                     return RouteTypeExtended.BusService;                 case RouteType.CableCar:                     return RouteTypeExtended.CableCarService;                 case RouteType.Rail:                     return RouteTypeExtended.RailwayService;                 case RouteType.Tram:                     return RouteTypeExtended.TramService;                 case RouteType.SubwayMetro:                     return RouteTypeExtended.UrbanRailwayService;                 case RouteType.Ferry:                     return RouteTypeExtended.WaterTransportService;                 case RouteType.Gondola:                     return RouteTypeExtended.TelecabinService;                 case RouteType.Funicular:                     return RouteTypeExtended.FunicularService;             }
Missing Default,GTFS,Extensions,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\Extensions.cs,FastParse,The following switch statement is missing a default case: switch(value)             {                 case '0':                     return 0;                 case '1':                     return 1;                 case '2':                     return 2;                 case '3':                     return 3;                 case '4':                     return 4;                 case '5':                     return 5;                 case '6':                     return 6;                 case '7':                     return 7;                 case '8':                     return 8;                 case '9':                     return 9;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,Read,The following switch statement is missing a default case: switch (file.Name.ToLower())             {                 case "agency":                     this.Read<Agency>(file' feed' this.ParseAgency' feed.Agencies.Add);                     break;                 case "calendar":                     this.Read<Calendar>(file' feed' this.ParseCalender' feed.Calendars.Add);                     break;                 case "calendar_dates":                     this.Read<CalendarDate>(file' feed' this.ParseCalendarDate' feed.CalendarDates.Add);                     break;                 case "fare_attributes":                     this.Read<FareAttribute>(file' feed' this.ParseFareAttribute' feed.FareAttributes.Add);                     break;                 case "fare_rules":                     this.Read<FareRule>(file' feed' this.ParseFareRule' feed.FareRules.Add);                     break;                 case "feed_info":                     this.Read<FeedInfo>(file' feed' this.ParseFeedInfo' feed.SetFeedInfo);                     break;                 case "routes":                     this.Read<Route>(file' feed' this.ParseRoute' feed.Routes.Add);                     break;                 case "shapes":                     this.Read<Shape>(file' feed' this.ParseShape' feed.Shapes.Add);                     break;                 case "stops":                     this.Read<Stop>(file' feed' this.ParseStop' feed.Stops.Add);                     break;                 case "stop_times":                     this.Read<StopTime>(file' feed' this.ParseStopTime' feed.StopTimes.Add);                     break;                 case "trips":                     this.Read<Trip>(file' feed' this.ParseTrip' feed.Trips.Add);                     break;                 case "transfers":                     this.Read<Transfer>(file' feed' this.ParseTransfer' feed.Transfers.Add);                     break;                 case "frequencies":                     this.Read<Frequency>(file' feed' this.ParseFrequency' feed.Frequencies.Add);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParsePathwayField,The following switch statement is missing a default case: switch (fieldName)             {                 case "pathway_id":                     pathway.Id = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "from_stop_id":                     pathway.FromStopId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "to_stop_id":                     pathway.ToStopId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "pathway_mode":                     pathway.PathwayMode = (PathwayMode) this.ParseFieldPathwayMode(header.Name' fieldName' value);                     break;                 case "is_bidirectional":                     pathway.IsBidirectional =                         (IsBidirectional) this.ParseFieldIsBidirectional(header.Name' fieldName' value);                     break;                 case "length":                     pathway.Length = this.ParseFieldDouble(header.Name' fieldName' value);                     break;                 case "traversal_time":                     pathway.TraversalTime = this.ParseFieldInt(header.Name' fieldName' value);                     break;                 case "stair_count":                     pathway.StairCount = this.ParseFieldInt(header.Name' fieldName' value);                     break;                 case "max_slope":                     pathway.MaxSlope = this.ParseFieldDouble(header.Name' fieldName' value);                     break;                 case "min_width":                     pathway.MinWidth = this.ParseFieldDouble(header.Name' fieldName' value);                     break;                 case "signposted_as":                     pathway.SignpostedAs = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "reversed_signposted_as":                     pathway.ReversedSignpostedAs = this.ParseFieldString(header.Name' fieldName' value);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseLevelField,The following switch statement is missing a default case: switch (fieldName)             {                 case "level_id":                     level.Id = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "level_index":                     level.Index = (double) this.ParseFieldDouble(header.Name' fieldName' value);                     break;                 case "level_name":                     level.Name = this.ParseFieldString(header.Name' fieldName' value);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseAgencyField,The following switch statement is missing a default case: switch (fieldName)             {                 case "agency_id":                     agency.Id = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "agency_name":                     agency.Name = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "agency_lang":                     agency.LanguageCode = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "agency_phone":                     agency.Phone = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "agency_timezone":                     agency.Timezone = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "agency_url":                     agency.URL = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "agency_email":                     agency.Email = this.ParseFieldString(header.Name' fieldName' value);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseCalendarField,The following switch statement is missing a default case: switch (fieldName)             {                 case "service_id":                     calendar.ServiceId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "monday":                     calendar.Monday = this.ParseFieldBool(header.Name' fieldName' value).Value;                     break;                 case "tuesday":                     calendar.Tuesday = this.ParseFieldBool(header.Name' fieldName' value).Value;                     break;                 case "wednesday":                     calendar.Wednesday = this.ParseFieldBool(header.Name' fieldName' value).Value;                     break;                 case "thursday":                     calendar.Thursday = this.ParseFieldBool(header.Name' fieldName' value).Value;                     break;                 case "friday":                     calendar.Friday = this.ParseFieldBool(header.Name' fieldName' value).Value;                     break;                 case "saturday":                     calendar.Saturday = this.ParseFieldBool(header.Name' fieldName' value).Value;                     break;                 case "sunday":                     calendar.Sunday = this.ParseFieldBool(header.Name' fieldName' value).Value;                     break;                 case "start_date":                     calendar.StartDate = this.ReadDateTime(header.Name' fieldName'                         this.ParseFieldString(header.Name' fieldName' value));                     break;                 case "end_date":                     calendar.EndDate = this.ReadDateTime(header.Name' fieldName'                         this.ParseFieldString(header.Name' fieldName' value));                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseCalendarDateField,The following switch statement is missing a default case: switch (fieldName)             {                 case "service_id":                     calendarDate.ServiceId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "date":                     calendarDate.Date = this.ReadDateTime(header.Name' fieldName'                         this.ParseFieldString(header.Name' fieldName' value));                     break;                 case "exception_type":                     calendarDate.ExceptionType = this.ParseFieldExceptionType(header.Name' fieldName' value);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFareAttributeField,The following switch statement is missing a default case: switch (fieldName)             {                 case "fare_id":                     fareAttribute.FareId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "price":                     fareAttribute.Price = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "currency_type":                     fareAttribute.CurrencyType = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "payment_method":                     fareAttribute.PaymentMethod = this.ParseFieldPaymentMethodType(header.Name' fieldName' value);                     break;                 case "transfers":                     fareAttribute.Transfers = this.ParseFieldUInt(header.Name' fieldName' value);                     break;                 case "agency_id":                     fareAttribute.AgencyId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "transfer_duration":                     fareAttribute.TransferDuration = this.ParseFieldString(header.Name' fieldName' value);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFareRuleField,The following switch statement is missing a default case: switch (fieldName)             {                 case "fare_id":                     fareRule.FareId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "route_id":                     fareRule.RouteId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "origin_id":                     fareRule.OriginId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "destination_id":                     fareRule.DestinationId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "contains_id":                     fareRule.ContainsId = this.ParseFieldString(header.Name' fieldName' value);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFeedInfoField,The following switch statement is missing a default case: switch (fieldName)             {                 case "feed_publisher_name":                     feedInfo.PublisherName = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "feed_publisher_url":                     feedInfo.PublisherUrl = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "feed_lang":                     feedInfo.Lang = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "feed_start_date":                     feedInfo.StartDate = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "feed_end_date":                     feedInfo.EndDate = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "feed_version":                     feedInfo.Version = this.ParseFieldString(header.Name' fieldName' value);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFrequencyField,The following switch statement is missing a default case: switch (fieldName)             {                 case "trip_id":                     frequency.TripId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "start_time":                     frequency.StartTime = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "end_time":                     frequency.EndTime = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "headway_secs":                     frequency.HeadwaySecs = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "exact_times":                     frequency.ExactTimes = this.ParseFieldBool(header.Name' fieldName' value);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseRouteField,The following switch statement is missing a default case: switch (fieldName)             {                 case "route_id":                     route.Id = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "agency_id":                     route.AgencyId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "route_short_name":                     route.ShortName = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "route_long_name":                     route.LongName = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "route_desc":                     route.Description = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "route_type":                     route.Type = this.ParseFieldRouteType(header.Name' fieldName' value);                     break;                 case "route_url":                     route.Url = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "route_color":                     route.Color = this.ParseFieldColor(header.Name' fieldName' value);                     break;                 case "route_text_color":                     route.TextColor = this.ParseFieldColor(header.Name' fieldName' value);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseShapeField,The following switch statement is missing a default case: switch (fieldName)             {                 case "shape_id":                     shape.Id = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "shape_pt_lat":                     shape.Latitude = this.ParseFieldDouble(header.Name' fieldName' value).Value;                     break;                 case "shape_pt_lon":                     shape.Longitude = this.ParseFieldDouble(header.Name' fieldName' value).Value;                     break;                 case "shape_pt_sequence":                     shape.Sequence = this.ParseFieldUInt(header.Name' fieldName' value).Value;                     break;                 case "shape_dist_traveled":                     shape.DistanceTravelled = this.ParseFieldDouble(header.Name' fieldName' value);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseStopField,The following switch statement is missing a default case: switch (fieldName.Trim())             {                 case "stop_id":                     stop.Id = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "stop_code":                     stop.Code = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "stop_name":                     stop.Name = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "stop_desc":                     stop.Description = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "stop_lat":                     var lat = this.ParseFieldDouble(header.Name' fieldName' value);                      if (this._strict && !lat.HasValue)                     {                         throw new GTFSParseException(header.Name' fieldName' value);                     }                      stop.Latitude = lat.HasValue ? lat.Value : 0d;                     break;                 case "stop_lon":                     var lon = this.ParseFieldDouble(header.Name' fieldName' value);                      if (this._strict && !lon.HasValue)                     {                         throw new GTFSParseException(header.Name' fieldName' value);                     }                      stop.Longitude = lon.HasValue ? lon.Value : 0d;                     break;                 case "zone_id":                     stop.Zone = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "stop_url":                     stop.Url = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "location_type":                     stop.LocationType = this.ParseFieldLocationType(header.Name' fieldName' value);                     break;                 case "parent_station":                     stop.ParentStation = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "stop_timezone":                     stop.Timezone = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "wheelchair_boarding":                     stop.WheelchairBoarding = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "level_id":                     stop.LevelId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "platform_code":                     stop.PlatformCode = this.ParseFieldString(header.Name' fieldName' value);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseStopTimeField,The following switch statement is missing a default case: switch (fieldName)             {                 case "trip_id":                     stopTime.TripId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "arrival_time":                     stopTime.ArrivalTime = this.ReadTimeOfDay(header.Name' fieldName'                         this.ParseFieldString(header.Name' fieldName' value));                     break;                 case "departure_time":                     stopTime.DepartureTime = this.ReadTimeOfDay(header.Name' fieldName'                         this.ParseFieldString(header.Name' fieldName' value));                     break;                 case "stop_id":                     stopTime.StopId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "stop_sequence":                     stopTime.StopSequence = this.ParseFieldUInt(header.Name' fieldName' value).Value;                     break;                 case "stop_headsign":                     stopTime.StopHeadsign = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "pickup_type":                     stopTime.PickupType = this.ParseFieldPickupType(header.Name' fieldName' value);                     break;                 case "drop_off_type":                     stopTime.DropOffType = this.ParseFieldDropOffType(header.Name' fieldName' value);                     break;                 case "shape_dist_traveled":                     stopTime.ShapeDistTravelled = this.ParseFieldDouble(header.Name' fieldName' value);                     break;                 case "timepoint":                     stopTime.TimepointType = this.ParseFieldTimepointType(header.Name' fieldName' value);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseTransferField,The following switch statement is missing a default case: switch (fieldName)             {                 case "from_stop_id":                     transfer.FromStopId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "to_stop_id":                     transfer.ToStopId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "transfer_type":                     transfer.TransferType = this.ParseFieldTransferType(header.Name' fieldName' value);                     break;                 case "min_transfer_time":                     transfer.MinimumTransferTime = this.ParseFieldString(header.Name' fieldName' value);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseTripField,The following switch statement is missing a default case: switch (fieldName)             {                 case "trip_id":                     trip.Id = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "route_id":                     trip.RouteId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "service_id":                     trip.ServiceId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "trip_headsign":                     trip.Headsign = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "trip_short_name":                     trip.ShortName = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "direction_id":                     trip.Direction = this.ParseFieldDirectionType(header.Name' fieldName' value);                     break;                 case "block_id":                     trip.BlockId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "shape_id":                     trip.ShapeId = this.ParseFieldString(header.Name' fieldName' value);                     break;                 case "wheelchair_accessible":                     trip.AccessibilityType = this.ParseFieldAccessibilityType(header.Name' fieldName' value);                     break;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldRouteType,The following switch statement is missing a default case: switch (value)             {                 case "0":                     return RouteType.Tram.ToExtended();                 case "1":                     return RouteType.SubwayMetro.ToExtended();                 case "2":                     return RouteType.Rail.ToExtended();                 case "3":                     return RouteType.Bus.ToExtended();                 case "4":                     return RouteType.Ferry.ToExtended();                 case "5":                     return RouteType.CableCar.ToExtended();                 case "6":                     return RouteType.Gondola.ToExtended();                 case "7":                     return RouteType.Funicular.ToExtended();             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldExceptionType,The following switch statement is missing a default case: switch (value)             {                 case "1":                     return ExceptionType.Added;                 case "2":                     return ExceptionType.Removed;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldPaymentMethodType,The following switch statement is missing a default case: switch (value)             {                 case "0":                     return PaymentMethodType.OnBoard;                 case "1":                     return PaymentMethodType.BeforeBoarding;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldTransferType,The following switch statement is missing a default case: switch (value)             {                 case "0":                 case "":                     return TransferType.Recommended;                 case "1":                     return TransferType.TimedTransfer;                 case "2":                     return TransferType.MinimumTime;                 case "3":                     return TransferType.NotPossible;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldAccessibilityType,The following switch statement is missing a default case: switch (value)             {                 case "0":                     return WheelchairAccessibilityType.NoInformation;                 case "1":                     return WheelchairAccessibilityType.SomeAccessibility;                 case "2":                     return WheelchairAccessibilityType.NoAccessibility;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldDropOffType,The following switch statement is missing a default case: switch (value)             {                 case "0":                     return DropOffType.Regular;                 case "1":                     return DropOffType.NoPickup;                 case "2":                     return DropOffType.PhoneForPickup;                 case "3":                     return DropOffType.DriverForPickup;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldTimepointType,The following switch statement is missing a default case: switch (value)             {                 case "0":                     return TimePointType.Approximate;                 case "1":                     return TimePointType.Exact;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldPickupType,The following switch statement is missing a default case: switch (value)             {                 case "0":                     return PickupType.Regular;                 case "1":                     return PickupType.NoPickup;                 case "2":                     return PickupType.PhoneForPickup;                 case "3":                     return PickupType.DriverForPickup;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldLocationType,The following switch statement is missing a default case: switch (value)             {                 case "0":                     return LocationType.Stop;                 case "1":                     return LocationType.Station;                 case "2":                     return LocationType.EntranceExit;                 case "3":                     return LocationType.GenericNode;                 case "4":                     return LocationType.BoardingArea;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldDirectionType,The following switch statement is missing a default case: switch (value)             {                 case "0":                     return DirectionType.OneDirection;                 case "1":                     return DirectionType.OppositeDirection;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldPathwayMode,The following switch statement is missing a default case: switch (value)             {                 case "1":                     return PathwayMode.Walkway;                 case "2":                     return PathwayMode.Stairs;                 case "3":                     return PathwayMode.Travelator;                 case "4":                     return PathwayMode.Escalator;                 case "5":                     return PathwayMode.Elevator;                 case "6":                     return PathwayMode.FareGate;                 case "7":                     return PathwayMode.ExitGate;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldIsBidirectional,The following switch statement is missing a default case: switch (value)             {                 case "0":                     return IsBidirectional.Unidirectional;                 case "1":                     return IsBidirectional.Bidirectional;             }
Missing Default,GTFS,GTFSReader<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSReader.cs,ParseFieldBool,The following switch statement is missing a default case: switch (value)             {                 case "0":                     return false;                 case "1":                     return true;             }
Missing Default,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,WriteFieldExceptionType,The following switch statement is missing a default case: switch (value)             {                 case ExceptionType.Added:                     return "1";                 case ExceptionType.Removed:                     return "2";             }
Missing Default,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,WriteFieldPaymentMethod,The following switch statement is missing a default case: switch (value)             {                 case PaymentMethodType.OnBoard:                     return "0";                 case PaymentMethodType.BeforeBoarding:                     return "1";             }
Missing Default,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,WriteFieldLocationType,The following switch statement is missing a default case: switch (value.Value)                 {                     case LocationType.Stop:                         return "0";                     case LocationType.Station:                         return "1";                 }
Missing Default,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,WriteFieldDropOffType,The following switch statement is missing a default case: switch (value.Value)                 {                     case DropOffType.Regular:                         return "0";                     case DropOffType.NoPickup:                         return "1";                     case DropOffType.PhoneForPickup:                         return "2";                     case DropOffType.DriverForPickup:                         return "3";                 }
Missing Default,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,WriteFieldTimepointType,The following switch statement is missing a default case: switch (value)             {                 case TimePointType.Approximate:                     return "0";                 case TimePointType.Exact:                     return "1";             }
Missing Default,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,WriteFieldPickupType,The following switch statement is missing a default case: switch (value.Value)                 {                     case PickupType.Regular:                         return "0";                     case PickupType.NoPickup:                         return "1";                     case PickupType.PhoneForPickup:                         return "2";                     case PickupType.DriverForPickup:                         return "3";                 }
Missing Default,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,WriteFieldAccessibilityType,The following switch statement is missing a default case: switch (value.Value)                 {                     case WheelchairAccessibilityType.NoInformation:                         return "0";                     case WheelchairAccessibilityType.SomeAccessibility:                         return "1";                     case WheelchairAccessibilityType.NoAccessibility:                         return "2";                 }
Missing Default,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,WriteFieldIsBidirectional,The following switch statement is missing a default case: switch (value.Value)                 {                     case IsBidirectional.Unidirectional:                         return "0";                     case IsBidirectional.Bidirectional:                         return "1";                 }
Missing Default,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,WriteFieldPathwayMode,The following switch statement is missing a default case: switch (value.Value)                 {                     case PathwayMode.Walkway:                         return "1";                     case PathwayMode.Stairs:                         return "2";                     case PathwayMode.Travelator:                         return "3";                     case PathwayMode.Escalator:                         return "4";                     case PathwayMode.Elevator:                         return "5";                     case PathwayMode.FareGate:                         return "6";                     case PathwayMode.ExitGate:                         return "7";                 }
Missing Default,GTFS,GTFSWriter<T>,C:\research\architectureSmells\repos\OsmSharp_GTFS\src\GTFS\GTFSWriter.cs,WriteFieldDirectionType,The following switch statement is missing a default case: switch (value.Value)                 {                     case DirectionType.OneDirection:                         return "0";                     case DirectionType.OppositeDirection:                         return "1";                 }
