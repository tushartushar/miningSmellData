Implementation smell,Namespace,Class,File,Method,Description
Complex Method,QtSharp.CLI,Program,C:\repos\ddobrev_QtSharp\QtSharp.CLI\Program.cs,QueryQt,Cyclomatic complexity of the method is 9
Complex Method,QtSharp.CLI,Program,C:\repos\ddobrev_QtSharp\QtSharp.CLI\Program.cs,Main,Cyclomatic complexity of the method is 9
Long Statement,QtSharp.CLI,Program,C:\repos\ddobrev_QtSharp\QtSharp.CLI\Program.cs,GetLibFiles,The length of the statement  "                modules = libsInfo.EnumerateDirectories("*.framework").Select(dir => Path.GetFileNameWithoutExtension(dir.Name)).ToList(); " is 122.
Magic Number,QtSharp.CLI,Program,C:\repos\ddobrev_QtSharp\QtSharp.CLI\Program.cs,ParseArgs,The following statement contains a magic number: if (args.Length < 2)              {                 Console.WriteLine("Please enter the paths to qmake and make.");                 return 1;              }
Magic Number,QtSharp.CLI,Program,C:\repos\ddobrev_QtSharp\QtSharp.CLI\Program.cs,ParseArgs,The following statement contains a magic number: debug = args.Length > 2 && (args[2] == "d" || args[2] == "debug");
Magic Number,QtSharp.CLI,Program,C:\repos\ddobrev_QtSharp\QtSharp.CLI\Program.cs,ParseArgs,The following statement contains a magic number: debug = args.Length > 2 && (args[2] == "d" || args[2] == "debug");
Magic Number,QtSharp.CLI,Program,C:\repos\ddobrev_QtSharp\QtSharp.CLI\Program.cs,ParseArgs,The following statement contains a magic number: debug = args.Length > 2 && (args[2] == "d" || args[2] == "debug");
Magic Number,QtSharp.CLI,Program,C:\repos\ddobrev_QtSharp\QtSharp.CLI\Program.cs,FindQt,The following statement contains a magic number: foreach (var path in Directory.EnumerateDirectories(qtPath))              {                  var dir = Path.GetFileName(path);                  bool isNumber = dir.All(c => char.IsDigit(c) || c == '.');                  if (!isNumber)                      continue;                  var qt = new QtInfo { Path = path };                  var match = Regex.Match(dir' @"([0-9]+)\.([0-9]+)");                  if (!match.Success)                      continue;                  qt.MajorVersion = int.Parse(match.Groups[1].Value);                  qt.MinorVersion = int.Parse(match.Groups[2].Value);                  qts.Add(qt);              }
