Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Softwarekueche.MimeTypeDetective,Urlmon,C:\repos\ThomasMentzel_MimeTypeDetective\Softwarekueche.MimeTypeDetective\Urlmon.cs,FindMimeFromData,The method has 8 parameters.
Long Statement,Softwarekueche.MimeTypeDetective,UriExtensions,C:\repos\ThomasMentzel_MimeTypeDetective\Softwarekueche.MimeTypeDetective\UriExtensions.cs,GetMimeType,The length of the statement  "	return uri.IsFile ? new MimeTypeByExtension ().GetMimeTypeFor (uri) : new MimeTypeByResponseHeader ().GetMimeTypeFor (uri); " is 123.
Magic Number,Softwarekueche.MimeTypeDetective,MimeTypeByResponseHeader,C:\repos\ThomasMentzel_MimeTypeDetective\Softwarekueche.MimeTypeDetective\MimeTypeByResponseHeader.cs,MimeTypeByResponseHeader,The following statement contains a magic number: TimeOut = TimeSpan.FromSeconds (15);  
Magic Number,Softwarekueche.MimeTypeDetective,Urlmon,C:\repos\ThomasMentzel_MimeTypeDetective\Softwarekueche.MimeTypeDetective\Urlmon.cs,GetMimeTypeFor,The following statement contains a magic number: using (var fs = new FileStream (fileInfo.FullName' FileMode.Open)) {  	if (fs.Length >= 256)  		fs.Read (buffer' 0' 256);  	else  		fs.Read (buffer' 0' (int)fs.Length);  }  
Magic Number,Softwarekueche.MimeTypeDetective,Urlmon,C:\repos\ThomasMentzel_MimeTypeDetective\Softwarekueche.MimeTypeDetective\Urlmon.cs,GetMimeTypeFor,The following statement contains a magic number: using (var fs = new FileStream (fileInfo.FullName' FileMode.Open)) {  	if (fs.Length >= 256)  		fs.Read (buffer' 0' 256);  	else  		fs.Read (buffer' 0' (int)fs.Length);  }  
Magic Number,Softwarekueche.MimeTypeDetective,Urlmon,C:\repos\ThomasMentzel_MimeTypeDetective\Softwarekueche.MimeTypeDetective\Urlmon.cs,GetMimeTypeFor,The following statement contains a magic number: if (fs.Length >= 256)  	fs.Read (buffer' 0' 256);  else  	fs.Read (buffer' 0' (int)fs.Length);  
Magic Number,Softwarekueche.MimeTypeDetective,Urlmon,C:\repos\ThomasMentzel_MimeTypeDetective\Softwarekueche.MimeTypeDetective\Urlmon.cs,GetMimeTypeFor,The following statement contains a magic number: if (fs.Length >= 256)  	fs.Read (buffer' 0' 256);  else  	fs.Read (buffer' 0' (int)fs.Length);  
Magic Number,Softwarekueche.MimeTypeDetective,Urlmon,C:\repos\ThomasMentzel_MimeTypeDetective\Softwarekueche.MimeTypeDetective\Urlmon.cs,GetMimeTypeFor,The following statement contains a magic number: fs.Read (buffer' 0' 256);  
Magic Number,Softwarekueche.MimeTypeDetective,Urlmon,C:\repos\ThomasMentzel_MimeTypeDetective\Softwarekueche.MimeTypeDetective\Urlmon.cs,GetMimeTypeFor,The following statement contains a magic number: try {  	UInt32 mimetype;  	FindMimeFromData (0' null' buffer' 256' null' 0' out mimetype' 0);  	var mimeTypePtr = new IntPtr (mimetype);  	var mime = Marshal.PtrToStringUni (mimeTypePtr);  	Marshal.FreeCoTaskMem (mimeTypePtr);  	return mime;  }  catch (Exception ex) {  	Trace.WriteLine (string.Format ("cannot find mime type for file '{0}' because '{1}'"' fileInfo.FullName' ex.Message));  	return UriExtensions.UnresolvedMimeType;  }  
Magic Number,Softwarekueche.MimeTypeDetective,Urlmon,C:\repos\ThomasMentzel_MimeTypeDetective\Softwarekueche.MimeTypeDetective\Urlmon.cs,GetMimeTypeFor,The following statement contains a magic number: FindMimeFromData (0' null' buffer' 256' null' 0' out mimetype' 0);  
