Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Wintellect.Sterling.Test.Database,TestActivation,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestActivation.cs,TestDuplicateActivation,The length of the statement  "            Assert.AreNotSame(engine1.SterlingDatabase' engine2.SterlingDatabase' "Sterling returned the same database instance from two separate engine instances."); " is 154.
Long Statement,Wintellect.Sterling.Test.Database,TestAggregateList,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestAggregateList.cs,TestInit,The length of the statement  "            _databaseInstance = _engine.SterlingDatabase.RegisterDatabase<TestDatabaseInstance>( TestContext.TestName' GetDriver() ); " is 121.
Long Statement,Wintellect.Sterling.Test.Database,TestAggregateList,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestAggregateList.cs,TestList,The length of the statement  "                Assert.AreEqual(expected.Children[x].BaseProperty' actual.Children[x].BaseProperty' "Save/load failed: data mismatch."); " is 120.
Long Statement,Wintellect.Sterling.Test.Database,TestArrays,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestArrays.cs,TestArray,The length of the statement  "            Assert.AreEqual(expected.BaseClassArray.Length' actual.BaseClassArray.Length' "Save/load failed: array size mismatch."); " is 120.
Long Statement,Wintellect.Sterling.Test.Database,TestArrays,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestArrays.cs,TestArray,The length of the statement  "            Assert.AreEqual(expected.ValueTypeArray.Length' actual.ValueTypeArray.Length' "Save/load failed: array size mismatch."); " is 120.
Long Statement,Wintellect.Sterling.Test.Database,TestArrays,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestArrays.cs,TestArray,The length of the statement  "                Assert.AreEqual(expected.BaseClassArray[x].BaseProperty' actual.BaseClassArray[x].BaseProperty' "Save/load failed: data mismatch."); " is 132.
Long Statement,Wintellect.Sterling.Test.Database,TestByteStreamInterceptor,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestByteStreamInterceptor.cs,TestInit,The length of the statement  "            _databaseInstance = _engine.SterlingDatabase.RegisterDatabase<TestByteStreamInterceptorDatabase>(TestContext.TestName' GetDriver()); " is 132.
Long Statement,Wintellect.Sterling.Test.Database,TestCycle,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestCycle.cs,TestCycleNegativeCase,The length of the statement  "            Assert.AreEqual(child.Value' actual.Value' "Failed to load cycle with non-null child: value mismatch on direct child load.");             " is 125.
Long Statement,Wintellect.Sterling.Test.Database,TestCycle,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestCycle.cs,TestCyclePositiveCase,The length of the statement  "            Assert.AreEqual(child.Value' actual.Value' "Failed to load cycle with non-null child: value mismatch on direct child load."); " is 125.
Long Statement,Wintellect.Sterling.Test.Database,TestDelete,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestDelete.cs,TestInit,The length of the statement  "            _databaseInstance = _engine.SterlingDatabase.RegisterDatabase<TestDatabaseInstance>( TestContext.TestName' GetDriver() ); " is 121.
Long Statement,Wintellect.Sterling.Test.Database,TestDictionary,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestDictionary.cs,TestInit,The length of the statement  "            _databaseInstance = _engine.SterlingDatabase.RegisterDatabase<TestDatabaseInstance>( TestContext.TestName' GetDriver() ); " is 121.
Long Statement,Wintellect.Sterling.Test.Database,TestField,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestField.cs,TestInit,The length of the statement  "            _databaseInstance = _engine.SterlingDatabase.RegisterDatabase<TestObjectFieldDatabase>( TestContext.TestName' GetDriver() ); " is 124.
Long Statement,Wintellect.Sterling.Test.Database,TestIndexQuery,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestIndexQuery.cs,TestInit,The length of the statement  "            _databaseInstance = _engine.SterlingDatabase.RegisterDatabase<TestDatabaseInstance>( TestContext.TestName' GetDriver() ); " is 121.
Long Statement,Wintellect.Sterling.Test.Database,TestIndexQuery,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestIndexQuery.cs,TestSequentialQuery,The length of the statement  "            var sequential = from k in _databaseInstance.Query<TestModel' string' int>(TestDatabaseInstance.DATAINDEX) orderby k.Index select k.Key; " is 136.
Long Statement,Wintellect.Sterling.Test.Database,TestIndexQuery,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestIndexQuery.cs,TestDescendingQuery,The length of the statement  "            var descending = from k in _databaseInstance.Query<TestModel' string' int>(TestDatabaseInstance.DATAINDEX) orderby k.Index descending select k.Key; " is 147.
Long Statement,Wintellect.Sterling.Test.Database,TestInterfaceProperty,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestInterfaceProperty.cs,TestInterface,The length of the statement  "            Assert.AreEqual(test.SubInterface.Id' actual.SubInterface.Id' "Failed to load class with interface property: interface id mismatch."); " is 134.
Long Statement,Wintellect.Sterling.Test.Database,TestInterfaceProperty,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestInterfaceProperty.cs,TestInterface,The length of the statement  "            Assert.AreEqual(test.SubInterface.Value' actual.SubInterface.Value' "Failed to load class with interface property: value mismatch.");             " is 133.
Long Statement,Wintellect.Sterling.Test.Database,TestLists,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestLists.cs,TestInit,The length of the statement  "            _databaseInstance = _engine.SterlingDatabase.RegisterDatabase<TestDatabaseInstance>( TestContext.TestName' GetDriver() ); " is 121.
Long Statement,Wintellect.Sterling.Test.Database,TestPurge,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestPurge.cs,TestInit,The length of the statement  "            _databaseInstance = _engine.SterlingDatabase.RegisterDatabase<TestDatabaseInstance>( TestContext.TestName' GetDriver() ); " is 121.
Long Statement,Wintellect.Sterling.Test.Database,TestQuery,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestQuery.cs,TestInit,The length of the statement  "            _databaseInstance = _engine.SterlingDatabase.RegisterDatabase<TestDatabaseInstance>( TestContext.TestName' GetDriver() ); " is 121.
Long Statement,Wintellect.Sterling.Test.Database,TestQuery,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestQuery.cs,TestUnrolledQuery,The length of the statement  "            var unrolled = from k in _databaseInstance.Query<TestModel' int>() orderby k.LazyValue.Value.Data select k.LazyValue.Value; " is 123.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSave,The length of the statement  "            Assert.AreEqual(expected.SubStruct.NestedString' actual.SubStruct.NestedString' "Load failed: sub class string mismtach."); " is 123.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveLateBoundTable,The length of the statement  "            _databaseInstance.RegisterTableDefinition(_databaseInstance.CreateTableDefinition<TestSecondLateBoundTable'int>(t=>t.Id)); " is 122.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveShutdownReInitialize,The length of the statement  "            Assert.AreEqual(expected1.SubClass.NestedText' actual1.SubClass.NestedText' "Load failed (1): sub class text mismtach."); " is 121.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveShutdownReInitialize,The length of the statement  "            Assert.AreEqual(expected2.SubClass.NestedText' actual2.SubClass.NestedText' "Load failed (2): sub class text mismatch."); " is 121.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveShutdownReInitialize,The length of the statement  "            Assert.AreEqual(expected1.SubClass.NestedText' actual1.SubClass.NestedText' "Load failed (1): sub class text mismtach."); " is 121.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveShutdownReInitialize,The length of the statement  "            Assert.AreEqual(expected2.SubClass.NestedText' actual2.SubClass.NestedText' "Load failed (2): sub class text mismtach."); " is 121.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveShutdownReInitialize,The length of the statement  "            Assert.AreEqual(expected3.SubClass.NestedText' actual3.SubClass.NestedText' "Load failed (3): sub class text mismtach."); " is 121.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveShutdownReInitialize,The length of the statement  "                Assert.AreEqual(model.SubClass.NestedText' targetModel.SubClass.NestedText' "Load failed for nested model: sub class text mismtach."); " is 134.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveForeign,The length of the statement  "            var actualDerivedModel = _databaseInstance.LoadAsync<TestDerivedClassAModel>( expected.TestBaseClassInstance.Key ).Result; " is 122.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveForeign,The length of the statement  "            Assert.AreEqual(expected.TestForeignInstance.Key' actual.TestForeignInstance.Key' "Load failed: foreign key mismatch."); " is 120.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveForeign,The length of the statement  "            Assert.AreEqual(expected.TestForeignInstance.Data' actual.TestForeignInstance.Data' "Load failed: foreign data mismatch."); " is 123.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveForeign,The length of the statement  "            Assert.AreEqual(expected.TestModelInstance.Data' actual.TestModelInstance.Data' "Load failed: test model data mismatch."); " is 122.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveForeign,The length of the statement  "            Assert.AreEqual(expected.TestForeignInstance.Key' actualForeignModel.Key' "Load failed: foreign key mismatch on direct load."); " is 127.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveForeign,The length of the statement  "            Assert.AreEqual(expected.TestForeignInstance.Data' actualForeignModel.Data' "Load failed: foreign data mismatch on direct load."); " is 130.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveForeign,The length of the statement  "            Assert.AreEqual(expected.TestModelInstance.Key' actualTestModel.Key' "Load failed: test model key mismatch on direct load."); " is 125.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveForeign,The length of the statement  "            Assert.AreEqual(expected.TestModelInstance.Data' actualTestModel.Data' "Load failed: test model data mismatch on direct load."); " is 128.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveForeign,The length of the statement  "            Assert.AreEqual(expected.TestBaseClassInstance.Key' actual.TestBaseClassInstance.Key' "Load failed: base class key mismatch."); " is 127.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveForeign,The length of the statement  "            Assert.AreEqual(expected.TestBaseClassInstance.BaseProperty' actual.TestBaseClassInstance.BaseProperty' "Load failed: base class data mismatch."); " is 146.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveForeign,The length of the statement  "            Assert.AreEqual(expected.TestBaseClassInstance.GetType()' actual.TestBaseClassInstance.GetType()' "Load failed: base class type mismatch."); " is 140.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveForeignNull,The length of the statement  "            Assert.AreEqual(expected.TestModelInstance.Data' actual.TestModelInstance.Data' "Load failed: test model data mismatch."); " is 122.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveForeignNull,The length of the statement  "            Assert.AreEqual(expected.TestModelInstance.Key' actualTestModel.Key' "Load failed: test model key mismatch on direct load."); " is 125.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveForeignNull,The length of the statement  "            Assert.AreEqual(expected.TestModelInstance.Data' actualTestModel.Data' "Load failed: test model data mismatch on direct load."); " is 128.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveAsWithSubclass,The length of the statement  "            Assert.AreEqual(expected.SubclassProperty' actualSubclass.SubclassProperty' "Save As failed: Subclass property mismatch. "); " is 124.
Long Statement,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveAsWithInvalidSubclass,The length of the statement  "            var expectedErrorMessage = string.Format("{0} is not of type {1}"' expected.GetType().Name' typeof(TestIndexedSubclassBase).Name); " is 130.
Long Statement,Wintellect.Sterling.Test.Database,TestSerializers,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSerializers.cs,TestInit,The length of the statement  "            _databaseInstance = _engine.SterlingDatabase.RegisterDatabase<TestDatabaseInstance>( TestContext.TestName' GetDriver() ); " is 121.
Long Statement,Wintellect.Sterling.Test.Database,TestTableDefinitionAltDriver,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestTableDefinition.cs,GetDriver,The length of the statement  "            return new Wintellect.Sterling.Server.Azure.TableStorage.Driver() { DatabaseInstanceName = test' DatabaseSerializer = serializer }; " is 131.
Long Statement,Wintellect.Sterling.Test.Database,TestTriggers,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestTriggers.cs,TestTriggerBeforeSaveWithSuccess,The length of the statement  "            var key1 = _databaseInstance.SaveAsync<TriggerClass' int>( new TriggerClass { Data = Guid.NewGuid().ToString() } ).Result; " is 122.
Long Statement,Wintellect.Sterling.Test.Database,TestTriggers,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestTriggers.cs,TestTriggerBeforeSaveWithSuccess,The length of the statement  "            var key2 = _databaseInstance.SaveAsync<TriggerClass' int>( new TriggerClass { Data = Guid.NewGuid().ToString() } ).Result; " is 122.
Long Statement,Wintellect.Sterling.Test.Database,TestTriggers,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestTriggers.cs,TestTriggerBeforeSaveWithFailure,The length of the statement  "                _databaseInstance.SaveAsync<TriggerClass' int>( new TriggerClass { Id = TriggerClassTestTrigger.BADSAVE' Data = Guid.NewGuid().ToString() } ).Wait(); " is 149.
Long Statement,Wintellect.Sterling.Test.Database,TestTriggers,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestTriggers.cs,TestTriggerBeforeDelete,The length of the statement  "            var key2 = _databaseInstance.SaveAsync<TriggerClass' int>( new TriggerClass { Id = TriggerClassTestTrigger.BADDELETE' Data = Guid.NewGuid().ToString() } ).Result; " is 162.
Long Statement,Wintellect.Sterling.Test.Database,TestTruncate,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestTruncate.cs,TestInit,The length of the statement  "            _databaseInstance = _engine.SterlingDatabase.RegisterDatabase<TestDatabaseInstance>( TestContext.TestName' GetDriver() ); " is 121.
Long Statement,Wintellect.Sterling.Test.Helpers,TestModel,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Helpers\TestModel.cs,MakeTestModel,The length of the statement  "            return new TestModel { Data = Guid.NewGuid().ToString()' Data2 = Guid.NewGuid().ToString()' Date = DateTime.Now.AddSeconds(_random.Next())' Key = _idx++' SubClass = new TestSubclass { NestedText = Guid.NewGuid().ToString() }' " is 225.
Long Statement,Wintellect.Sterling.Test.Helpers,TestModel,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Helpers\TestModel.cs,MakeTestModel,The length of the statement  "            return new TestModel { Data = Guid.NewGuid().ToString()' Data2 = Guid.NewGuid().ToString()' Date = DateTime.Now.AddSeconds(_random.Next())' Key = _idx++' SubClass = new TestSubclass { NestedText = Guid.NewGuid().ToString() }'  " is 225.
Long Statement,Wintellect.Sterling.Test.Helpers,TestModelAsListModel,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Helpers\TestModelAsList.cs,MakeTestModelAsListWithParentReference,The length of the statement  "            model.AddRange(new[] { TestModel.MakeTestModel(model)' TestModel.MakeTestModel(model)' TestModel.MakeTestModel(model) }); " is 121.
Long Statement,Wintellect.Sterling.Test.Keys,TestCompositeKey,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Keys\TestCompositeKey.cs,TestInit,The length of the statement  "            _databaseInstance = _engine.SterlingDatabase.RegisterDatabase<TestDatabaseInstance>( TestContext.TestName' GetDriver() );     " is 121.
Long Statement,Wintellect.Sterling.Test.Keys,TestCompositeKeyWithKeyClass,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Keys\TestCompositeKeyWithKeyClass.cs,TestInit,The length of the statement  "            _databaseInstance = _engine.SterlingDatabase.RegisterDatabase<TestDatabaseInstanceComposite>( TestContext.TestName' GetDriver() ); " is 130.
Long Statement,Wintellect.Sterling.Test.Serializer,TestCustomSerializer,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Serializer\TestCustomSerializer.cs,TestInit,The length of the statement  "            DatabaseInstance = _engine.SterlingDatabase.RegisterDatabase<CustomSerializerDatabase>( TestContext.TestName' GetDriver() ); " is 124.
Long Statement,Wintellect.Sterling.Test.Serializer,TestCustomSerializer,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Serializer\TestCustomSerializer.cs,TestCustomSaveAndLoad,The length of the statement  "                expectedList.Select(item => (from i in actualList where i.Key.Equals(item.Key) select i.Key).FirstOrDefault()).Where(matchingItem => matchingItem < 1)) " is 151.
Magic Number,Wintellect.Sterling.Test.Database,TestAsync,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestAsync.cs,TestConcurrentSaveAndLoad,The following statement contains a magic number: saveEvent.WaitOne(60000);
Magic Number,Wintellect.Sterling.Test.Database,TestAsync,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestAsync.cs,TestConcurrentSaveAndLoad,The following statement contains a magic number: loadEvent.WaitOne(60000);
Magic Number,Wintellect.Sterling.Test.Database,TestAsync,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestAsync.cs,TestConcurrentSaveAndLoadWithIndex,The following statement contains a magic number: saveEvent.WaitOne(60000);
Magic Number,Wintellect.Sterling.Test.Database,TestAsync,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestAsync.cs,TestConcurrentSaveAndLoadWithIndex,The following statement contains a magic number: loadEvent.WaitOne(60000);
Magic Number,Wintellect.Sterling.Test.Database,TestCycle,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestCycle.cs,TestCycleNegativeCase,The following statement contains a magic number: var child = new CycleClass {Id = 2' Value = 5 };
Magic Number,Wintellect.Sterling.Test.Database,TestCycle,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestCycle.cs,TestCycleNegativeCase,The following statement contains a magic number: var child = new CycleClass {Id = 2' Value = 5 };
Magic Number,Wintellect.Sterling.Test.Database,TestCycle,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestCycle.cs,TestCycleNegativeCase,The following statement contains a magic number: actual = _databaseInstance.LoadAsync<CycleClass>( 2 ).Result;
Magic Number,Wintellect.Sterling.Test.Database,TestCycle,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestCycle.cs,TestCyclePositiveCase,The following statement contains a magic number: var child = new CycleClass { Id = 2' Value = 5 };
Magic Number,Wintellect.Sterling.Test.Database,TestCycle,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestCycle.cs,TestCyclePositiveCase,The following statement contains a magic number: var child = new CycleClass { Id = 2' Value = 5 };
Magic Number,Wintellect.Sterling.Test.Database,TestCycle,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestCycle.cs,TestCyclePositiveCase,The following statement contains a magic number: actual = _databaseInstance.LoadAsync<CycleClass>( 2 ).Result;
Magic Number,Wintellect.Sterling.Test.Database,TestEnum,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestEnum.cs,TestMultipleEnumSaveAndLoad,The following statement contains a magic number: var test2 = new EnumClass { Id = 2' Value = TestEnums.Value2' ValueLong = TestEnumsLong.LongerValue };
Magic Number,Wintellect.Sterling.Test.Database,TestEnum,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestEnum.cs,TestMultipleEnumSaveAndLoad,The following statement contains a magic number: var actual2 = _databaseInstance.LoadAsync<EnumClass>( 2 ).Result;
Magic Number,Wintellect.Sterling.Test.Database,TestIndexQuery,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestIndexQuery.cs,TestInit,The following statement contains a magic number: i < 10
Magic Number,Wintellect.Sterling.Test.Database,TestInterfaceProperty,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestInterfaceProperty.cs,TestInterface,The following statement contains a magic number: var test = new TargetClass { Id = 1' SubInterface = new InterfaceClass { Id = 5' Value = 6 }};
Magic Number,Wintellect.Sterling.Test.Database,TestInterfaceProperty,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestInterfaceProperty.cs,TestInterface,The following statement contains a magic number: var test = new TargetClass { Id = 1' SubInterface = new InterfaceClass { Id = 5' Value = 6 }};
Magic Number,Wintellect.Sterling.Test.Database,TestNestedInstance,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestNestedInstance.cs,TestAddBill,The following statement contains a magic number: var partaker1 = new Partaker                                  {                  Id = Guid.NewGuid()'                  Paid = 42'                  Person = person1              };
Magic Number,Wintellect.Sterling.Test.Database,TestNestedInstance,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestNestedInstance.cs,TestAddBill,The following statement contains a magic number: Assert.IsTrue(freshBill.Partakers.Count == 3' "Bill should have exactly 3 partakers.");
Magic Number,Wintellect.Sterling.Test.Database,TestNestedInstance,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestNestedInstance.cs,TestAddBill,The following statement contains a magic number: Assert.IsTrue(personKeys.Count == 2' "Failed to save exactly 2 persons.");
Magic Number,Wintellect.Sterling.Test.Database,TestNestedInstance,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestNestedInstance.cs,TestAddBill,The following statement contains a magic number: Assert.AreEqual(2' persons.Count' "Failed to grab two instances of the same person.");
Magic Number,Wintellect.Sterling.Test.Database,TestQuery,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestQuery.cs,TestInit,The following statement contains a magic number: i < 10
Magic Number,Wintellect.Sterling.Test.Database,TestQuery,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestQuery.cs,TestRangeQuery,The following statement contains a magic number: var range = from k in _databaseInstance.Query<TestModel' int>()                          where k.Key > _modelList[2].Key && k.Key < _modelList[5].Key                          orderby k.Key                          select k.Key;
Magic Number,Wintellect.Sterling.Test.Database,TestQuery,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestQuery.cs,TestRangeQuery,The following statement contains a magic number: var range = from k in _databaseInstance.Query<TestModel' int>()                          where k.Key > _modelList[2].Key && k.Key < _modelList[5].Key                          orderby k.Key                          select k.Key;
Magic Number,Wintellect.Sterling.Test.Database,TestQuery,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestQuery.cs,TestRangeQuery,The following statement contains a magic number: var idx = 3;
Magic Number,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveShutdownReInitialize,The following statement contains a magic number: var expectedComplex = new TestComplexModel                                        {                                            Id = 5'                                            Dict = new Dictionary<string' string>()'                                            Models = new ObservableCollection<TestModel>()                                        };
Magic Number,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveShutdownReInitialize,The following statement contains a magic number: x < 10
Magic Number,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveShutdownReInitialize,The following statement contains a magic number: var actualComplex = _databaseInstance.LoadAsync<TestComplexModel>( 5 ).Result;
Magic Number,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveShutdownReInitialize,The following statement contains a magic number: Assert.AreEqual(5' actualComplex.Id' "Load failed: id mismatch.");
Magic Number,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveAsWithSubclass,The following statement contains a magic number: expected.Id = 2;
Magic Number,Wintellect.Sterling.Test.Database,TestSaveAndLoad,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestSaveAndLoad.cs,TestSaveAsWithInvalidSubclass,The following statement contains a magic number: expected.Id = 2;
Magic Number,Wintellect.Sterling.Test.Database,TestTriggers,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Database\TestTriggers.cs,TestTriggerOnChildren,The following statement contains a magic number: var trigger = new TriggerListTestTrigger(100);
Magic Number,Wintellect.Sterling.Test.Helpers,TestClassWithArray,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Helpers\TestClassWithArray.cs,MakeTestClassWithArray,The following statement contains a magic number: return new TestClassWithArray()              {                  ID = _id++'                  ValueTypeArray = new int[] { 1' 2' 3 }'                  BaseClassArray = new TestBaseClassModel[] { new TestDerivedClassAModel()' new TestDerivedClassBModel() }'                  ClassArray = new TestModel[] { TestModel.MakeTestModel() }              };
Magic Number,Wintellect.Sterling.Test.Helpers,TestClassWithArray,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Helpers\TestClassWithArray.cs,MakeTestClassWithArray,The following statement contains a magic number: return new TestClassWithArray()              {                  ID = _id++'                  ValueTypeArray = new int[] { 1' 2' 3 }'                  BaseClassArray = new TestBaseClassModel[] { new TestDerivedClassAModel()' new TestDerivedClassBModel() }'                  ClassArray = new TestModel[] { TestModel.MakeTestModel() }              };
Magic Number,Wintellect.Sterling.Test.Helpers,TestClassWithDictionary,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Helpers\TestClassWithDictionary.cs,MakeTestClassWithDictionary,The following statement contains a magic number: return new TestClassWithDictionary()              {                  ID = _id++'                  BaseDictionary = new Dictionary<int' int>()                  {                      { 1' 2 }'                      { 2' 3 }                  }'                  DictionaryWithBaseClassAsValue = new Dictionary<int' TestBaseClassModel>()                  {                      { 1' new TestDerivedClassAModel() }'                      { 2' new TestDerivedClassBModel() }                  }'                  DictionaryWithClassAsValue = new Dictionary<int' TestModel>()                  {                      { 1' TestModel.MakeTestModel() }'                      { 2' TestModel.MakeTestModel() }                  }'                  DictionaryWithListAsValue = new Dictionary<int' List<TestModel>>()                  {                      { 1' new List<TestModel>() { TestModel.MakeTestModel()' TestModel.MakeTestModel() } }                  }              };
Magic Number,Wintellect.Sterling.Test.Helpers,TestClassWithDictionary,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Helpers\TestClassWithDictionary.cs,MakeTestClassWithDictionary,The following statement contains a magic number: return new TestClassWithDictionary()              {                  ID = _id++'                  BaseDictionary = new Dictionary<int' int>()                  {                      { 1' 2 }'                      { 2' 3 }                  }'                  DictionaryWithBaseClassAsValue = new Dictionary<int' TestBaseClassModel>()                  {                      { 1' new TestDerivedClassAModel() }'                      { 2' new TestDerivedClassBModel() }                  }'                  DictionaryWithClassAsValue = new Dictionary<int' TestModel>()                  {                      { 1' TestModel.MakeTestModel() }'                      { 2' TestModel.MakeTestModel() }                  }'                  DictionaryWithListAsValue = new Dictionary<int' List<TestModel>>()                  {                      { 1' new List<TestModel>() { TestModel.MakeTestModel()' TestModel.MakeTestModel() } }                  }              };
Magic Number,Wintellect.Sterling.Test.Helpers,TestClassWithDictionary,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Helpers\TestClassWithDictionary.cs,MakeTestClassWithDictionary,The following statement contains a magic number: return new TestClassWithDictionary()              {                  ID = _id++'                  BaseDictionary = new Dictionary<int' int>()                  {                      { 1' 2 }'                      { 2' 3 }                  }'                  DictionaryWithBaseClassAsValue = new Dictionary<int' TestBaseClassModel>()                  {                      { 1' new TestDerivedClassAModel() }'                      { 2' new TestDerivedClassBModel() }                  }'                  DictionaryWithClassAsValue = new Dictionary<int' TestModel>()                  {                      { 1' TestModel.MakeTestModel() }'                      { 2' TestModel.MakeTestModel() }                  }'                  DictionaryWithListAsValue = new Dictionary<int' List<TestModel>>()                  {                      { 1' new List<TestModel>() { TestModel.MakeTestModel()' TestModel.MakeTestModel() } }                  }              };
Magic Number,Wintellect.Sterling.Test.Helpers,TestClassWithDictionary,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Helpers\TestClassWithDictionary.cs,MakeTestClassWithDictionary,The following statement contains a magic number: return new TestClassWithDictionary()              {                  ID = _id++'                  BaseDictionary = new Dictionary<int' int>()                  {                      { 1' 2 }'                      { 2' 3 }                  }'                  DictionaryWithBaseClassAsValue = new Dictionary<int' TestBaseClassModel>()                  {                      { 1' new TestDerivedClassAModel() }'                      { 2' new TestDerivedClassBModel() }                  }'                  DictionaryWithClassAsValue = new Dictionary<int' TestModel>()                  {                      { 1' TestModel.MakeTestModel() }'                      { 2' TestModel.MakeTestModel() }                  }'                  DictionaryWithListAsValue = new Dictionary<int' List<TestModel>>()                  {                      { 1' new List<TestModel>() { TestModel.MakeTestModel()' TestModel.MakeTestModel() } }                  }              };
Magic Number,Wintellect.Sterling.Test.Helpers,TestClassWithDictionary,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Helpers\TestClassWithDictionary.cs,MakeTestClassWithDictionary,The following statement contains a magic number: return new TestClassWithDictionary()              {                  ID = _id++'                  BaseDictionary = new Dictionary<int' int>()                  {                      { 1' 2 }'                      { 2' 3 }                  }'                  DictionaryWithBaseClassAsValue = new Dictionary<int' TestBaseClassModel>()                  {                      { 1' new TestDerivedClassAModel() }'                      { 2' new TestDerivedClassBModel() }                  }'                  DictionaryWithClassAsValue = new Dictionary<int' TestModel>()                  {                      { 1' TestModel.MakeTestModel() }'                      { 2' TestModel.MakeTestModel() }                  }'                  DictionaryWithListAsValue = new Dictionary<int' List<TestModel>>()                  {                      { 1' new List<TestModel>() { TestModel.MakeTestModel()' TestModel.MakeTestModel() } }                  }              };
Magic Number,Wintellect.Sterling.Test.Helpers,TestCompositeSerializer,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Helpers\TestCompositeSerializer.cs,Deserialize,The following statement contains a magic number: return new TestCompositeKeyClass(                  reader.ReadInt32()'                  reader.ReadString()'                  new Guid(reader.ReadBytes(16))'                  DateTime.FromFileTimeUtc(reader.ReadInt64()).ToLocalTime());
Magic Number,Wintellect.Sterling.Test.Indexes,TestSingleIndex,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Indexes\TestSingleIndex.cs,Init,The following statement contains a magic number: _testModels = new List<TestModel>(3);
Magic Number,Wintellect.Sterling.Test.Indexes,TestSingleIndex,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Indexes\TestSingleIndex.cs,Init,The following statement contains a magic number: x < 3
Magic Number,Wintellect.Sterling.Test.Indexes,TestSingleIndex,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Indexes\TestSingleIndex.cs,TestQueryable,The following statement contains a magic number: _target.AddIndexAsync(_testModels[2]' _testModels[2].Key).Wait();
Magic Number,Wintellect.Sterling.Test.Indexes,TestSingleIndex,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Indexes\TestSingleIndex.cs,TestQueryable,The following statement contains a magic number: _target.AddIndexAsync(_testModels[2]' _testModels[2].Key).Wait();
Magic Number,Wintellect.Sterling.Test.Indexes,TestSingleIndex,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Indexes\TestSingleIndex.cs,TestQueryable,The following statement contains a magic number: Assert.AreEqual(3' _target.Query.Count()' "Key count is incorrect.");
Magic Number,Wintellect.Sterling.Test.Indexes,TestSingleIndex,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Indexes\TestSingleIndex.cs,TestSerialization,The following statement contains a magic number: Assert.AreEqual(2' secondTarget.Query.Count()' "Key count is incorrect.");
Magic Number,Wintellect.Sterling.Test.Indexes,TestSingleIndex,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Indexes\TestSingleIndex.cs,TestSerialization,The following statement contains a magic number: secondTarget.AddIndexAsync(_testModels[2]'_testModels[2].Key).Wait();
Magic Number,Wintellect.Sterling.Test.Indexes,TestSingleIndex,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Indexes\TestSingleIndex.cs,TestSerialization,The following statement contains a magic number: secondTarget.AddIndexAsync(_testModels[2]'_testModels[2].Key).Wait();
Magic Number,Wintellect.Sterling.Test.Indexes,TestSingleIndex,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Indexes\TestSingleIndex.cs,TestSerialization,The following statement contains a magic number: Assert.AreEqual(2' _target.Query.Count()' "Unexpected key count in original collection.");
Magic Number,Wintellect.Sterling.Test.Indexes,TestSingleIndex,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Indexes\TestSingleIndex.cs,TestSerialization,The following statement contains a magic number: Assert.AreEqual(3' _target.Query.Count()' "Refresh failed.");
Magic Number,Wintellect.Sterling.Test.Keys,TestCompositeKey,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Keys\TestCompositeKey.cs,TestSave,The following statement contains a magic number: const int LISTSIZE = 20;
Magic Number,Wintellect.Sterling.Test.Keys,TestCompositeKey,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Keys\TestCompositeKey.cs,TestSave,The following statement contains a magic number: var testClass = new TestCompositeClass                                      {                                          Key1 = random.Next()'                                          Key2 = random.Next().ToString()'                                          Key3 = Guid.NewGuid()'                                          Key4 = DateTime.Now.AddMinutes(-1*random.Next(100))'                                          Data = Guid.NewGuid().ToString()                                      };
Magic Number,Wintellect.Sterling.Test.Keys,TestCompositeKeyWithKeyClass,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Keys\TestCompositeKeyWithKeyClass.cs,TestSave,The following statement contains a magic number: var testClass = new TestCompositeClass                  {                      Key1 = random.Next()'                      Key2 = random.Next().ToString()'                      Key3 = Guid.NewGuid()'                      Key4 = DateTime.Now.AddMinutes(-1 * random.Next(100))'                      Data = Guid.NewGuid().ToString()                  };
Magic Number,Wintellect.Sterling.Test.Keys,TestCompositeKeyWithKeyClass,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Keys\TestCompositeKeyWithKeyClass.cs,TestSave,The following statement contains a magic number: x < 100
Magic Number,Wintellect.Sterling.Test.Keys,TestCompositeKeyWithKeyClass,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Keys\TestCompositeKeyWithKeyClass.cs,TestSave,The following statement contains a magic number: x < 100
Magic Number,Wintellect.Sterling.Test.Keys,TestKeyCollection,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Keys\TestKeyCollection.cs,TestQueryable,The following statement contains a magic number: _target.AddKeyAsync(_models[2].Key).Wait();
Magic Number,Wintellect.Sterling.Test.Keys,TestKeyCollection,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Keys\TestKeyCollection.cs,TestQueryable,The following statement contains a magic number: Assert.AreEqual(3' _target.Query.Count()' "Key count is incorrect.");
Magic Number,Wintellect.Sterling.Test.Keys,TestKeyCollection,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Keys\TestKeyCollection.cs,TestSerialization,The following statement contains a magic number: Assert.AreEqual(2' secondTarget.Query.Count()' "Key count is incorrect.");
Magic Number,Wintellect.Sterling.Test.Keys,TestKeyCollection,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Keys\TestKeyCollection.cs,TestSerialization,The following statement contains a magic number: secondTarget.AddKeyAsync(_models[2].Key).Wait();
Magic Number,Wintellect.Sterling.Test.Keys,TestKeyCollection,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Keys\TestKeyCollection.cs,TestSerialization,The following statement contains a magic number: Assert.AreEqual(2' _target.Query.Count()' "Unexpected key count in original collection.");
Magic Number,Wintellect.Sterling.Test.Keys,TestKeyCollection,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.Server.Test\Keys\TestKeyCollection.cs,TestSerialization,The following statement contains a magic number: Assert.AreEqual(3' _target.Query.Count()' "Refresh failed.");
Magic Number,Wintellect.Sterling.Test.WindowsStorage,TestStorageHelper,D:\research\architectureSmells\repos\Wintellect_SterlingDB\Wintellect.Sterling.WinRT.Test\WindowsStorage\TestStorageHelper.cs,TestReadWriteBinaryFile,The following statement contains a magic number: var obj = new MyClass { Name = "Joe"' Age = 87 };
