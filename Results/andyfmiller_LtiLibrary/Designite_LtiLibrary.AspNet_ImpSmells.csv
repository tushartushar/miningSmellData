Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LtiLibrary.AspNet.Extensions,HtmlDocumentExtensions,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Extensions\HtmlDocumentExtensions.cs,ConvertTo,Cyclomatic complexity of the method is 20
Long Parameter List,LtiLibrary.AspNet.ContentItems,ContentItemsClient,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\ContentItems\ContentItemsClient.cs,CreateContentItemSelectionViewModel,The method has 5 parameters.
Long Parameter List,LtiLibrary.AspNet.ContentItems,ContentItemsClient,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\ContentItems\ContentItemsClient.cs,CreateContentItemSelectionViewModel,The method has 9 parameters.
Long Parameter List,LtiLibrary.AspNet.Outcomes.v1,ImsxXmlMediaTypeFormatter,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Outcomes\v1\ImsxXmlMediaTypeFormatter.cs,WriteToStreamAsync,The method has 5 parameters.
Long Parameter List,LtiLibrary.AspNet.Outcomes.v2,LineItemsControllerBase,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Outcomes\v2\LineItemsControllerBase.cs,GetAsync,The method has 6 parameters.
Long Parameter List,LtiLibrary.AspNet.Outcomes.v2,ResultsControllerBase,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Outcomes\v2\ResultsControllerBase.cs,GetAsync,The method has 6 parameters.
Long Statement,LtiLibrary.AspNet.ContentItems,ContentItemsClient,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\ContentItems\ContentItemsClient.cs,CreateContentItemSelectionViewModel,The length of the statement  "	return CreateContentItemSelectionViewModel (url' consumerKey' consumerSecret' contentItems' data' null' null' null' null); " is 122.
Long Statement,LtiLibrary.AspNet.Extensions,HttpRequestBaseExtensions,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Extensions\HttpRequestBaseExtensions.cs,GenerateOAuthSignature,The length of the statement  "	return OAuthUtility.GenerateSignature (request.HttpMethod' request.Url' request.UnvalidatedParameters ()' consumerSecret); " is 122.
Long Statement,LtiLibrary.AspNet.Extensions,HttpRequestBaseExtensions,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Extensions\HttpRequestBaseExtensions.cs,IsAuthenticatedWithLti,The length of the statement  "	return request.HttpMethod.Equals (WebRequestMethods.Http.Post) && (messageType.Equals (LtiConstants.BasicLaunchLtiMessageType' StringComparison.OrdinalIgnoreCase) || messageType.Equals (LtiConstants.ContentItemSelectionRequestLtiMessageType' StringComparison.OrdinalIgnoreCase) || messageType.Equals (LtiConstants.ContentItemSelectionLtiMessageType' StringComparison.OrdinalIgnoreCase)); " is 387.
Long Statement,LtiLibrary.AspNet.Outcomes.v1,OutcomesControllerBase,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Outcomes\v1\OutcomesControllerBase.cs,Post,The length of the statement  "				response = CreateCustomResponse (requestHeader.imsx_messageIdentifier' "Request is not supported"' imsx_CodeMajorType.unsupported); " is 131.
Long Statement,LtiLibrary.AspNet.Outcomes.v2,LineItemsControllerBase,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Outcomes\v2\LineItemsControllerBase.cs,GetAsync,The length of the statement  "					return Request.CreateErrorResponse (HttpStatusCode.BadRequest' new ArgumentException ("Request cannot specify both firstPage and a page number > 1")); " is 150.
Long Statement,LtiLibrary.AspNet.Outcomes.v2,LineItemsControllerBase,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Outcomes\v2\LineItemsControllerBase.cs,GetAsync,The length of the statement  "			return context.StatusCode == HttpStatusCode.OK ? Request.CreateResponse (context.StatusCode' context.LineItemContainerPage' new LineItemContainerPageFormatter ()) : Request.CreateResponse (context.StatusCode); " is 209.
Long Statement,LtiLibrary.AspNet.Outcomes.v2,LineItemsControllerBase,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Outcomes\v2\LineItemsControllerBase.cs,GetAsync,The length of the statement  "			var mediaType = Request.Headers.Accept.Contains (new MediaTypeWithQualityHeaderValue (LtiConstants.LineItemResultsMediaType)) ? LtiConstants.LineItemResultsMediaType : LtiConstants.LineItemMediaType; " is 199.
Long Statement,LtiLibrary.AspNet.Outcomes.v2,LineItemsControllerBase,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Outcomes\v2\LineItemsControllerBase.cs,GetAsync,The length of the statement  "			return context.StatusCode == HttpStatusCode.OK ? Request.CreateResponse (context.StatusCode' context.LineItem' new LineItemFormatter ()' mediaType) : Request.CreateResponse (context.StatusCode); " is 194.
Long Statement,LtiLibrary.AspNet.Outcomes.v2,LineItemsControllerBase,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Outcomes\v2\LineItemsControllerBase.cs,PostAsync,The length of the statement  "		return context.StatusCode == HttpStatusCode.Created ? Request.CreateResponse (context.StatusCode' context.LineItem' new LineItemFormatter ()' LtiConstants.LineItemMediaType) : Request.CreateResponse (context.StatusCode); " is 220.
Long Statement,LtiLibrary.AspNet.Outcomes.v2,LineItemsControllerBase,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Outcomes\v2\LineItemsControllerBase.cs,PutAsync,The length of the statement  "		var mediaType = Request.Headers.Accept.Contains (new MediaTypeWithQualityHeaderValue (LtiConstants.LineItemResultsMediaType)) ? LtiConstants.LineItemResultsMediaType : LtiConstants.LineItemMediaType; " is 199.
Long Statement,LtiLibrary.AspNet.Outcomes.v2,ResultsControllerBase,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Outcomes\v2\ResultsControllerBase.cs,GetAsync,The length of the statement  "					return Request.CreateErrorResponse (HttpStatusCode.BadRequest' new ArgumentException ("Request cannot specify both firstPage and a page number > 1")); " is 150.
Long Statement,LtiLibrary.AspNet.Outcomes.v2,ResultsControllerBase,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Outcomes\v2\ResultsControllerBase.cs,GetAsync,The length of the statement  "			return context.StatusCode == HttpStatusCode.OK ? Request.CreateResponse (context.StatusCode' context.ResultContainerPage' new ResultContainerPageFormatter ()) : Request.CreateResponse (context.StatusCode); " is 205.
Long Statement,LtiLibrary.AspNet.Outcomes.v2,ResultsControllerBase,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Outcomes\v2\ResultsControllerBase.cs,GetAsync,The length of the statement  "			return context.StatusCode == HttpStatusCode.OK ? Request.CreateResponse (context.StatusCode' context.Result' new ResultFormatter ()) : Request.CreateResponse (context.StatusCode); " is 179.
Long Statement,LtiLibrary.AspNet.Outcomes.v2,ResultsControllerBase,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Outcomes\v2\ResultsControllerBase.cs,PostAsync,The length of the statement  "		return context.StatusCode == HttpStatusCode.Created ? Request.CreateResponse (context.StatusCode' context.Result' new ResultFormatter ()) : Request.CreateResponse (context.StatusCode); " is 184.
Long Statement,LtiLibrary.AspNet.Profiles,ToolConsumerProfileControllerBase,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Profiles\ToolConsumerProfileControllerBase.cs,GetAsync,The length of the statement  "		return context.StatusCode == HttpStatusCode.OK ? Request.CreateResponse (context.StatusCode' context.ToolConsumerProfile' LtiConstants.ToolConsumerProfileMediaType) : Request.CreateResponse (context.StatusCode); " is 211.
Missing Default,LtiLibrary.AspNet.Extensions,HtmlDocumentExtensions,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Extensions\HtmlDocumentExtensions.cs,ConvertTo,The following switch statement is missing a default case: switch (node.NodeType) {  case HtmlNodeType.Comment:  	// don't output comments  	break;  case HtmlNodeType.Document:  	ConvertContentTo (node' outText);  	break;  case HtmlNodeType.Text:  	// script and style must not be output  	string parentName = node.ParentNode.Name;  	if ((parentName == "script") || (parentName == "style"))  		break;  	// get text  	string html = ((HtmlTextNode)node).Text;  	// is it in fact a special closing node output as text?  	if (HtmlNode.IsOverlappedClosingElement (html))  		break;  	// check the text is meaningful and not a bunch of whitespaces  	if (html.Trim ().Length > 0) {  		outText.Write (HtmlEntity.DeEntitize (html));  	}  	break;  case HtmlNodeType.Element:  	switch (node.Name) {  	case "p":  	case "li":  		// treat paragraphs and lists as crlf  		outText.Write ("\r\n");  		break;  	}  	if (node.HasChildNodes) {  		ConvertContentTo (node' outText);  	}  	break;  }  
Missing Default,LtiLibrary.AspNet.Extensions,HtmlDocumentExtensions,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Extensions\HtmlDocumentExtensions.cs,ConvertTo,The following switch statement is missing a default case: switch (node.Name) {  case "p":  case "li":  	// treat paragraphs and lists as crlf  	outText.Write ("\r\n");  	break;  }  
Missing Default,LtiLibrary.AspNet.Extensions,HttpRequestBaseExtensions,F:\newReposMay17\andyfmiller_LtiLibrary\LtiLibrary.AspNet\Extensions\HttpRequestBaseExtensions.cs,CheckForRequiredLtiParameters,The following switch statement is missing a default case: switch (request [LtiConstants.LtiMessageTypeParameter]) {  case LtiConstants.BasicLaunchLtiMessageType: {  	request.RequireAllOf (RequiredBasicLaunchParameters);  	break;  }  case LtiConstants.ContentItemSelectionRequestLtiMessageType: {  	request.RequireAllOf (RequiredContentItemLaunchParameters);  	break;  }  case LtiConstants.ContentItemSelectionLtiMessageType: {  	request.RequireAllOf (RequiredContentItemResponseParameters);  	break;  }  }  
