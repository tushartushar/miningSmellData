Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LtiLibrary.AspNetCore.Extensions,HtmlDocumentExtensions,D:\research\architectureSmells\repos\andyfmiller_LtiLibrary\src\LtiLibrary.AspNetCore\Extensions\HtmlDocumentExtensions.cs,ConvertTo,Cyclomatic complexity of the method is 8
Complex Method,LtiLibrary.AspNetCore.Extensions,HttpRequestExtensions,D:\research\architectureSmells\repos\andyfmiller_LtiLibrary\src\LtiLibrary.AspNetCore\Extensions\HttpRequestExtensions.cs,ParseLtiRequestAsync,Cyclomatic complexity of the method is 8
Complex Method,LtiLibrary.AspNetCore.Outcomes.v1,OutcomesControllerBase,D:\research\architectureSmells\repos\andyfmiller_LtiLibrary\src\LtiLibrary.AspNetCore\Outcomes\v1\OutcomesControllerBase.cs,Post,Cyclomatic complexity of the method is 9
Complex Method,LtiLibrary.AspNetCore.Outcomes.v2,LineItemsControllerBase,D:\research\architectureSmells\repos\andyfmiller_LtiLibrary\src\LtiLibrary.AspNetCore\Outcomes\v2\LineItemsControllerBase.cs,GetAsync,Cyclomatic complexity of the method is 8
Long Parameter List,LtiLibrary.AspNetCore.Outcomes.v2,LineItemsControllerBase,D:\research\architectureSmells\repos\andyfmiller_LtiLibrary\src\LtiLibrary.AspNetCore\Outcomes\v2\LineItemsControllerBase.cs,GetAsync,The method has 6 parameters. Parameters: contextId' id' limit' activityId' firstPage' p
Long Parameter List,LtiLibrary.AspNetCore.Outcomes.v2,ResultsControllerBase,D:\research\architectureSmells\repos\andyfmiller_LtiLibrary\src\LtiLibrary.AspNetCore\Outcomes\v2\ResultsControllerBase.cs,GetAsync,The method has 6 parameters. Parameters: contextId' lineItemId' id' limit' firstPage' p
Long Statement,LtiLibrary.AspNetCore.Extensions,HttpResponseExtensions,D:\research\architectureSmells\repos\andyfmiller_LtiLibrary\src\LtiLibrary.AspNetCore\Extensions\HttpResponseExtensions.cs,WriteLtiRequest,The length of the statement  "                form.AppendFormat("<input type='hidden' name='{0}' value='{1}' />"' pair.Key' System.Net.WebUtility.HtmlEncode(pair.Value)) " is 123.
Long Statement,LtiLibrary.AspNetCore.Outcomes.v1,ImsxXmlMediaTypeModelBinder,D:\research\architectureSmells\repos\andyfmiller_LtiLibrary\src\LtiLibrary.AspNetCore\Outcomes\v1\ImsxXmlMediaTypeModelBinder.cs,BindModelAsync,The length of the statement  "            if (bindingContext.HttpContext?.Request == null || !bindingContext.HttpContext.Request.ContentType.Contains("application/xml")) " is 127.
Long Statement,LtiLibrary.AspNetCore.Outcomes.v1,OutcomesControllerBase,D:\research\architectureSmells\repos\andyfmiller_LtiLibrary\src\LtiLibrary.AspNetCore\Outcomes\v1\OutcomesControllerBase.cs,HandleReplaceResultRequest,The length of the statement  "            // The TC must check the incoming grade for validity and must fail when a grade is outside the range 0.0-1.0 or if the grade is not a valid number.    " is 147.
Long Statement,LtiLibrary.AspNetCore.Outcomes.v1,OutcomesControllerBase,D:\research\architectureSmells\repos\andyfmiller_LtiLibrary\src\LtiLibrary.AspNetCore\Outcomes\v1\OutcomesControllerBase.cs,HandleReplaceResultRequest,The length of the statement  "                    ?? $"Score for {replaceRequest.resultRecord.sourcedGUID.sourcedId} is now {replaceRequest.resultRecord.result.resultScore.textString}"); " is 136.
Magic Number,LtiLibrary.AspNetCore.Extensions,HttpRequestExtensions,D:\research\architectureSmells\repos\andyfmiller_LtiLibrary\src\LtiLibrary.AspNetCore\Extensions\HttpRequestExtensions.cs,GetUri,The following statement contains a magic number: hostComponents.Length == 2
Missing Default,LtiLibrary.AspNetCore.Extensions,HtmlDocumentExtensions,D:\research\architectureSmells\repos\andyfmiller_LtiLibrary\src\LtiLibrary.AspNetCore\Extensions\HtmlDocumentExtensions.cs,ConvertTo,The following switch statement is missing a default case: switch (node.NodeType)              {                  case HtmlNodeType.Comment:                      // don't output comments                      break;                    case HtmlNodeType.Document:                      ConvertContentTo(node' outText);                      break;                    case HtmlNodeType.Text:                      // script and style must not be output                      var parentName = node.ParentNode.Name;                      if (parentName == "script" || parentName == "style")                          break;                        // get text                      var html = ((HtmlTextNode)node).Text;                        // is it in fact a special closing node output as text?                      if (HtmlNode.IsOverlappedClosingElement(html))                          break;                        // check the text is meaningful and not a bunch of whitespaces                      if (html.Trim().Length > 0)                      {                          outText.Write(HtmlEntity.DeEntitize(html));                      }                      break;                    case HtmlNodeType.Element:                      switch (node.Name)                      {                          case "p":                          case "li":                              // treat paragraphs and lists as crlf                              outText.Write("\r\n");                              break;                      }                        if (node.HasChildNodes)                      {                          ConvertContentTo(node' outText);                      }                      break;              }
Missing Default,LtiLibrary.AspNetCore.Extensions,HtmlDocumentExtensions,D:\research\architectureSmells\repos\andyfmiller_LtiLibrary\src\LtiLibrary.AspNetCore\Extensions\HtmlDocumentExtensions.cs,ConvertTo,The following switch statement is missing a default case: switch (node.Name)                      {                          case "p":                          case "li":                              // treat paragraphs and lists as crlf                              outText.Write("\r\n");                              break;                      }
Missing Default,LtiLibrary.AspNetCore.Outcomes.v1,OutcomesControllerBase,D:\research\architectureSmells\repos\andyfmiller_LtiLibrary\src\LtiLibrary.AspNetCore\Outcomes\v1\OutcomesControllerBase.cs,Post,The following switch statement is missing a default case: switch (requestBody.Item)              {                  case deleteResultRequest _:                      if (OnDeleteResultAsync == null)                      {                          return StatusCode(StatusCodes.Status404NotFound);                      }                      return await HandleDeleteResultRequest(requestHeader' requestBody)                          .ConfigureAwait(false);                  case readResultRequest _:                      if (OnReadResultAsync == null)                      {                          return StatusCode(StatusCodes.Status404NotFound);                      }                      return await HandleReadResultRequest(requestHeader' requestBody)                          .ConfigureAwait(false);                  case replaceResultRequest _:                      if (OnReplaceResultAsync == null)                      {                          return StatusCode(StatusCodes.Status404NotFound);                      }                      return await HandleReplaceResultRequest(requestHeader' requestBody)                          .ConfigureAwait(false);              }
