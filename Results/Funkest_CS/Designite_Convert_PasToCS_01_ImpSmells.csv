Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Convert_PasToCS_01,Convert,C:\repos\Funkest_CS\Itrex\Convert_PasToCS_01\Convert_PasToCS_01\Convert.cs,DoConvert,Cyclomatic complexity of the method is 24
Long Parameter List,Convert_PasToCS_01,Convert,C:\repos\Funkest_CS\Itrex\Convert_PasToCS_01\Convert_PasToCS_01\Convert.cs,DoConvert,The method has 17 parameters.
Long Parameter List,Convert_PasToCS_01,MainWindow,C:\repos\Funkest_CS\Itrex\Convert_PasToCS_01\Convert_PasToCS_01\MainWindow.xaml.cs,MainWindow,The method has 6 parameters.
Long Parameter List,Convert_PasToCS_01,MainWindow,C:\repos\Funkest_CS\Itrex\Convert_PasToCS_01\Convert_PasToCS_01\MainWindow.xaml.cs,HwndSourceHook,The method has 5 parameters.
Long Statement,Convert_PasToCS_01,Convert,C:\repos\Funkest_CS\Itrex\Convert_PasToCS_01\Convert_PasToCS_01\Convert.cs,DoConvert,The length of the statement  "	root.ClassName = root.NameInXml.Split ('-').Select (x => char.ToUpper (x [0]) + x.Substring (1)).Aggregate ((x' y) => x + y); " is 125.
Magic Number,Convert_PasToCS_01,Convert,C:\repos\Funkest_CS\Itrex\Convert_PasToCS_01\Convert_PasToCS_01\Convert.cs,DoConvert,The following statement contains a magic number: x.PropName = string.Join (""' x.PropName.Skip (2));  
Magic Number,Convert_PasToCS_01,Convert,C:\repos\Funkest_CS\Itrex\Convert_PasToCS_01\Convert_PasToCS_01\Convert.cs,DoConvert,The following statement contains a magic number: fs.SetLength (fs.Length - 10);  
Magic Number,Convert_PasToCS_01,MainWindow,C:\repos\Funkest_CS\Itrex\Convert_PasToCS_01\Convert_PasToCS_01\MainWindow.xaml.cs,HwndSourceHook,The following statement contains a magic number: if (msg == WM_NCHITTEST) {  	// これ以上処理させない（完全に処理を横取りする）  	handled = true;  	// クライアント座標のマウス位置を取得  	Point ptScreen = new Point ((int)lParam & 0xFFFF' ((int)lParam >> 16) & 0xFFFF);  	Point ptClient = PointFromScreen (ptScreen);  	// リサイズ可能と判断するサイズ  	double bh = SystemParameters.ResizeFrameHorizontalBorderHeight;  	double bw = SystemParameters.ResizeFrameVerticalBorderWidth;  	double captionH = SystemParameters.CaptionHeight;  	// 四隅の斜め方向リサイズが優先  	if (new Rect (0' 0' bw' bh).Contains (ptClient))  		return new IntPtr (HTTOPLEFT);  	if (new Rect (Width - bw' 0' bw' bh).Contains (ptClient))  		return new IntPtr (HTTOPRIGHT);  	if (new Rect (0' Height - bh' bw' bh).Contains (ptClient))  		return new IntPtr (HTBOTTOMLEFT);  	if (new Rect (Width - bw' Height - bh' bw' bh).Contains (ptClient))  		return new IntPtr (HTBOTTOMRIGHT);  	// 四辺の直交方向リサイズ  	if (new Rect (0' 0' Width' bw).Contains (ptClient))  		return new IntPtr (HTTOP);  	if (new Rect (0' 0' bw' Height).Contains (ptClient))  		return new IntPtr (HTLEFT);  	if (new Rect (Width - bw' 0' bw' Height).Contains (ptClient))  		return new IntPtr (HTRIGHT);  	if (new Rect (0' Height - bh' Width' bh).Contains (ptClient))  		return new IntPtr (HTBOTTOM);  	// ドラッグ移動可能な領域を指定  	if (new Rect (0' 0' Width' captionH).Contains (ptClient))  		return new IntPtr (HTCAPTION);  	// 上記以外はクライアント領域と判断  	return new IntPtr (HTCLIENT);  }  
