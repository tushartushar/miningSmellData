Implementation smell,Namespace,Class,File,Method,Description
Long Method,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,AddHiddenOrRemovedElements,The method has 113 lines of code.
Long Method,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetLODiffs,The method has 191 lines of code.
Long Method,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The method has 223 lines of code.
Long Method,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The method has 428 lines of code.
Long Method,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The method has 103 lines of code.
Long Method,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetIllstHis,The method has 170 lines of code.
Long Method,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetLOHis,The method has 123 lines of code.
Long Method,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The method has 329 lines of code.
Long Method,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The method has 116 lines of code.
Long Method,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The method has 179 lines of code.
Long Method,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The method has 108 lines of code.
Complex Method,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,KeepEntityXmlTextWriter,Cyclomatic complexity of the method is 20
Complex Method,Utils,FnEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Utilities\Utils.cs,_DelphiQuickSort,Cyclomatic complexity of the method is 11
Complex Method,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,Cyclomatic complexity of the method is 28
Complex Method,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotAttrsAndDescendantsBGC,Cyclomatic complexity of the method is 10
Complex Method,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,ConvToDiffItem,Cyclomatic complexity of the method is 8
Complex Method,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,Cyclomatic complexity of the method is 8
Complex Method,AddAnnotationToFoFile,RDB,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDB.cs,GetItemsInBook,Cyclomatic complexity of the method is 8
Complex Method,AddAnnotationToFoFile.Classes,Id,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Classes\Id.cs,Id,Cyclomatic complexity of the method is 14
Long Parameter List,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,KeepEntityXmlTextWriter,The method has 14 parameters.
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Utilities\Utils.cs,CopyDirectory,The method has 7 parameters.
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Utilities\Utils.cs,WritePOSTData,The method has 7 parameters.
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Utilities\Utils.cs,TempSort,The method has 5 parameters.
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Utilities\Utils.cs,GetArguments,The method has 5 parameters.
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Utilities\Utils.cs,GetArguments,The method has 7 parameters.
Long Parameter List,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,AddHiddenOrRemovedElements,The method has 45 parameters.
Long Parameter List,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,GetExistingFamily,The method has 17 parameters.
Long Parameter List,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetMSDiffs,The method has 28 parameters.
Long Parameter List,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetLODiffs,The method has 91 parameters.
Long Parameter List,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The method has 69 parameters.
Long Parameter List,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,PaintDescendantsBGC,The method has 8 parameters.
Long Parameter List,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotAttrsAndDescendantsBGC,The method has 6 parameters.
Long Parameter List,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotAttrsAndDescendantsBGCForce,The method has 6 parameters.
Long Parameter List,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The method has 162 parameters.
Long Parameter List,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,GetLinkTags,The method has 7 parameters.
Long Parameter List,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,GetTocNameByStoryId,The method has 5 parameters.
Long Parameter List,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,GetTextByMSIdAndLangCode,The method has 6 parameters.
Long Parameter List,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,GetTocIdByMSId,The method has 6 parameters.
Long Parameter List,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The method has 39 parameters.
Long Parameter List,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,CreateMSIdList,The method has 12 parameters.
Long Parameter List,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetIllustIds,The method has 7 parameters.
Long Parameter List,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetIllstHis,The method has 37 parameters.
Long Parameter List,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetMSHis,The method has 11 parameters.
Long Parameter List,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetLOHis,The method has 12 parameters.
Long Parameter List,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetAddedStoryHis,The method has 10 parameters.
Long Parameter List,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetAddedMSIdsHis,The method has 10 parameters.
Long Parameter List,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetAddedMSIdHis,The method has 10 parameters.
Long Parameter List,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The method has 54 parameters.
Long Parameter List,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The method has 18 parameters.
Long Parameter List,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,ExtendTextDiffs,The method has 31 parameters.
Long Parameter List,AddAnnotationToFoFile,DelphiParams,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,DelphiParams,The method has 6 parameters.
Long Parameter List,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetGroups,The method has 6 parameters.
Long Parameter List,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The method has 13 parameters.
Long Parameter List,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The method has 40 parameters.
Long Parameter List,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIds,The method has 32 parameters.
Long Parameter List,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The method has 64 parameters.
Long Parameter List,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The method has 34 parameters.
Long Parameter List,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,TempSortLocId,The method has 5 parameters.
Long Parameter List,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,TempSortGroupId,The method has 5 parameters.
Long Parameter List,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,TempSortId,The method has 5 parameters.
Long Parameter List,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,TempSort,The method has 5 parameters.
Long Parameter List,AddAnnotationToFoFile,SpecificUtils,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\SpecificUtils.cs,IsHiddenBySelfElm,The method has 5 parameters.
Long Parameter List,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,DoTest,The method has 7 parameters.
Long Parameter List,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveCrntBooksInfo,The method has 16 parameters.
Long Parameter List,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveAllArchives,The method has 12 parameters.
Long Parameter List,AddAnnotationToFoFile.Classes,BookDataEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Classes\BookData.cs,BookDataEx,The method has 19 parameters.
Long Parameter List,AddAnnotationToFoFile.Classes,BookDataEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Classes\BookData.cs,GetDescendantsTextByGroupIdOrLocId,The method has 5 parameters.
Long Parameter List,AddAnnotationToFoFile.Classes,BookDataEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Classes\BookData.cs,GetMSTextById,The method has 5 parameters.
Long Parameter List,AddAnnotationToFoFile.Classes,FoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Classes\FoFile.cs,FoFile,The method has 9 parameters.
Long Identifier,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,KeepEntityXmlTextWriter,The length of the parameter xmlEncodedRawTextWriterIndentType is 33.
Long Identifier,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,KeepEntityXmlTextWriter,The length of the parameter xmlUtf8RawTextWriterIndentType is 30.
Long Identifier,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the parameter locIdsToBeIgnoredInComparingTexts is 33.
Long Identifier,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the parameter _locIdsToBeIgnoredToBeComparedInTextValue is 41.
Long Identifier,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,ExtendTextDiffs,The length of the parameter SetDiffsInTheCaseOfChangingTextId is 33.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Utilities\Utils.cs,CopyDirectory,The length of the statement  "	Directory.GetDirectories (srcDir).ToList ().ForEach (x => CopyDirectory (x' Path.Combine (destDir' Path.GetFileName (x))' allowOverWrite)); " is 139.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Utilities\Utils.cs,ToStringEx,The length of the statement  "	return value.GetType ().GetField (value.ToString ()).GetCustomAttributes (typeof(DescriptionAttribute)' false).Cast<DescriptionAttribute> ().FirstOrDefault ().ThrowIf (a => a == null' new ArgumentException ("Not implemented the attribute.")).Description; " is 254.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Utilities\Utils.cs,WritePOSTData,The length of the statement  "	Enumerable.Range (0' _values.Count).Select (i => new KeyValuePair<string' string> (_values.Keys [i]' _values [i])).Select (x => new List<Byte[]> () { " is 149.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Utilities\Utils.cs,WritePOSTData,The length of the statement  "		Encoding.ASCII.GetBytes (string.Format ("Content-Disposition: form-data; name=\"{0}\"{1}{1}"' x.Key' Environment.NewLine))// value (value of form-data) " is 151.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Utilities\Utils.cs,IsMatchAttrVal,The length of the statement  "	return elm.Attribute (attrName) != null && another.Attribute (attrName) != null && elm.Attribute (attrName).Value == another.Attribute (attrName).Value; " is 152.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Utilities\Utils.cs,TempSort,The length of the statement  "	return source.SkipWhile (z => string.Compare (z' HeadLocId' StringComparison.Ordinal) < 0).TakeWhile (z => string.Compare (z' TailLocId' StringComparison.Ordinal) <= 0).ToList (); " is 179.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Utilities\Utils.cs,GetArguments,The length of the statement  "		return args.GroupBy (s => options.Contains (s) ? key = s : key)// !! Side effect !!   It's true --> 100 == (someVar = 100) " is 122.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Utilities\Utils.cs,GetArguments,The length of the statement  "		return args.GroupBy (s => options.Keys.Contains (s) ? key = s // !! Side effect !!   It's true --> 100 == (someVar = 100) " is 121.
Long Statement,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,AddHiddenOrRemovedElements,The length of the statement  "	}.WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly (Cs.LOG_MODBYOTHER + (y.hiddenItems.Count + y.removedItems.Count).ToString ()' 1)).SelectNewSingle (x => new { " is 162.
Long Statement,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,AddHiddenOrRemovedElements,The length of the statement  "		msidLi = new List<string> ().Union (x.hiddenItems.Where (x1 => x1.DiffItem == DiffItem.MSId).Select (x1 => x1.Id.IdString)).Union (x.removedItems.Where (x1 => x1.DiffItem == DiffItem.MSId).Select (x1 => x1.Id)).ToList ()' " is 221.
Long Statement,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,AddHiddenOrRemovedElements,The length of the statement  "		msidsLi = new List<string> ().Union (x.hiddenItems.Where (x1 => x1.DiffItem == DiffItem.MSIds).Select (x1 => x1.Id.IdString)).Union (x.removedItems.Where (x1 => x1.DiffItem == DiffItem.MSIds)// June.13.2015 現在、DiffItem.MSIds の削除は抽出していないが、今後実装される可能性が高い " is 251.
Long Statement,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,AddHiddenOrRemovedElements,The length of the statement  "		//.ToDictionary(x1 => x1.Attribute(Cs.LOC_ID).Value) // Dictionary にすると順番(tree 構造を反映)が変わっていまう可能性あり(変わらないことが多いようだが、msdn に従う) " is 123.
Long Statement,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,AddHiddenOrRemovedElements,The length of the statement  "		msidNew = x.crntBook.MSIdAll.RemoveMSIdsContainers ().Where (x1 => x1.Attribute (Cs.MS_TYPE).Value != "").Where (x1 => !x1.IsHiddenBySelfElm ()).Where (x1 => // toc による非表示は確認しないが、いずれ必要か... " is 188.
Long Statement,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,AddHiddenOrRemovedElements,The length of the statement  "		msidsOld = x.arcvBook.MSIdsAll.Where (x1 => !x1.IsMatchAttrVal (Cs.GROUP_ID' "")).ToDictionary (x1 => x1.Attribute (Cs.GROUP_ID).Value) " is 135.
Long Statement,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,AddHiddenOrRemovedElements,The length of the statement  "				x.foData.StoryBlocks.Elements ().FirstOrDefault (x2 => x2.IsMatchAttrVal (Cs.ID' "x" + x1.story.Attribute (Cs.ID).Value)).ToMaybe ().MaybeM (x2 =>  { " is 149.
Long Statement,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,GetExistingFamily,The length of the statement  "	Func<XElement' bool> IsNotDisplayedInFoFile = e => e.IsMatchAttrVal (Cs.MS_TYPE' Cs.MT_PAGEBREAK) || e.IsMatchAttrVal (Cs.MS_TYPE' Cs.MT_ILLUSTRATIONTEXT) || (e.IsMatchAttrVal (Cs.MS_TYPE' Cs.TITLE) && e.Parent.IsMatchAttrVal (Cs.GROUP_TYPE' Cs.GT_TABLE)) || (e.IsMatchAttrVal (Cs.MS_TYPE' Cs.MT_ITEMEXPLANATIONTITLE) && !e.GetAncestors ().Any (x1 => x1.IsMatchAttrVal (Cs.GROUP_TYPE' Cs.GT_TABLEHEADER) && x1.Element (Cs.PROPERTIES) != null && !x1.Element (Cs.PROPERTIES).Elements (Cs.PROPERTY).Any (x2 => x2.Attribute (Cs.NAME).Value == Cs.PP_HIDETABLEHEADER && x2.Attribute (Cs.VALUE).Value.ToLower () == "on"))) || (e.Element (Cs.PROPERTIES) != null && e.Element (Cs.PROPERTIES).Elements (Cs.PROPERTY).Any (x1 => x1.Attribute (Cs.NAME).Value == Cs.PP_HIDE_MS && x1.Attribute (Cs.VALUE).Value.ToLower () == "on")) || e.GetAncestors ().Any (x1 => x1.IsMatchAttrVal (Cs.GROUP_TYPE' Cs.GT_ILLUSTRATION)); " is 904.
Long Statement,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,GetExistingFamily,The length of the statement  "	var re = oldStory.Descendants (Cs.MANUSCRIPT_ID).SkipWhile (x => x.Attribute (Cs.LOC_ID).Value != locId).FirstOrDefault (x => newMSIdLi.ContainsKey (x.Attribute (Cs.LOC_ID).Value)); " is 181.
Long Statement,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,GetExistingFamily,The length of the statement  "	if (re != null && re.Attribute (Cs.LOC_ID).Value == newMSIdLi [re.Attribute (Cs.LOC_ID).Value].GetAncestorStory ().Descendants (Cs.MANUSCRIPT_ID).First (x => x.Attribute (Cs.MS_TYPE).Value + x.Attribute (Cs.ID).Value != "" && !x.IsHiddenBySelfElm ()).Attribute (Cs.LOC_ID).Value) " is 279.
Long Statement,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,GetExistingFamily,The length of the statement  "		re = oldStory.Descendants (Cs.MANUSCRIPT_ID).TakeWhile (x => x.Attribute (Cs.LOC_ID).Value != locId).Select (x => x.Attribute (Cs.LOC_ID).Value).Where (x => newMSIdLi.ContainsKey (x)).Select (x => newMSIdLi [x]).LastOrDefault (x => !IsNotDisplayedInFoFile (x)); " is 261.
Long Statement,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetMSDiffs,The length of the statement  "			newOne = x1.newOne.Descendants (Cs.TRANSLATION).FirstOrDefault (x2 => x2.IsMatchAttrVal (Cs.LANG_CODE' x.langCode.ToString ()))' " is 128.
Long Statement,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetMSDiffs,The length of the statement  "			oldOne = x1.oldOne.Descendants (Cs.TRANSLATION).FirstOrDefault (x2 => x2.IsMatchAttrVal (Cs.LANG_CODE' x.langCode.ToString ())) " is 127.
Long Statement,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetMSDiffs,The length of the statement  "	}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly ("null translation in crnt MSs          : " + y.pairsOfTrln.Where (y1 => y1.newOne == null).Count ()' 1)).SelectNewSingle (x => new { " is 186.
Long Statement,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetMSDiffs,The length of the statement  "	}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly ("null text/tutext in crnt translations : " + y.pairsOfText.Where (y1 => y1.newOne == null).Count ()' 1)).SelectNewSingle (x => new { " is 186.
Long Statement,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetLODiffs,The length of the statement  "		oldMSIds = x.oldMSIds.Where (x1 => x1.Attribute (Cs.GROUP_ID).Value != "" && !x.oldStoryMSIds.ContainsKey (x1.Attribute (Cs.GROUP_ID).Value)).ToDictionary (x1 => x1.Attribute (Cs.GROUP_ID).Value)' " is 196.
Long Statement,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetLODiffs,The length of the statement  "		newMSIds = x.newMSIds.Where (x1 => x1.Attribute (Cs.GROUP_ID).Value != "" && !x.oldStoryMSIds.ContainsKey (x1.Attribute (Cs.GROUP_ID).Value)).ToDictionary (x1 => x1.Attribute (Cs.GROUP_ID).Value) " is 195.
Long Statement,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetLODiffs,The length of the statement  "			newOnes = x1.newOnes.GroupBy (x2 => x2.name).Select (x2 => x2.OrderBy (x3 => x3.tag).Last ()// tag の値が大きい方を取る == 言語固有の値を優先する " is 124.
Long Statement,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetLODiffs,The length of the statement  "			oldOnes = x1.oldOnes.GroupBy (x2 => x2.name).Select (x2 => x2.OrderBy (x3 => x3.tag).Last ()// tag の値が大きい方を取る == 言語固有の値を優先する " is 124.
Long Statement,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetLODiffs,The length of the statement  "			added = x1.newOnes.Where (x2 => x2.Value.duplicatedMsg == "").Where (x2 => !x1.oldOnes.ContainsKey (x2.Key)).Select (x2 => x2.Value).ToList ()' " is 143.
Long Statement,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetLODiffs,The length of the statement  "			removed = x1.oldOnes.Where (x2 => x2.Value.duplicatedMsg == "").Where (x2 => !x1.newOnes.ContainsKey (x2.Key)).Select (x2 => x2.Value).ToList ()' " is 145.
Long Statement,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetLODiffs,The length of the statement  "			toBeCmprd = x1.newOnes.Where (x2 => x2.Value.duplicatedMsg == "").Where (x2 => x1.oldOnes.ContainsKey (x2.Key)).Select (x2 => new { " is 131.
Long Statement,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetLODiffs,The length of the statement  "			OldVal = x2.Where (x3 => x3.flag == 0).Select (x3 => x3.Value == null ? "" : string.Format ("以前の{0}"' x3.Value.duplicatedMsg)).FirstOrDefault ()// 複数あっても duplicatedMsg は同一 " is 171.
Long Statement,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetLODiffs,The length of the statement  "			NewVal = x2.Where (x3 => x3.flag == 1).Select (x3 => x3.Value == null ? "" : string.Format ("現在の{0}"' x3.Value.duplicatedMsg)).FirstOrDefault () " is 144.
Long Statement,AddAnnotationToFoFile,Compare,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Compare.cs,GetLODiffs,The length of the statement  "	}).Select (x1 => x1.irrglr.Union (x1.added).Union (x1.removed).Union (x1.changed).ToList ()).Where (x1 => x1.Count > 0).UnionEnumsAsAnEnum ().Select (x1 => new DiffLO { " is 168.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "		}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly ("FoMSIds(group).Count : " + y.foHavingGroupId.Count' 1)).WithAddingLog (x => x.log' x => x.AddMsgOnly ("Has set variables"' 1)) " is 181.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "			Func<string' string' Difference' string> DiffMsgFmt = (item' idName' e) => string.Format ("【 {0} 】\r  {1}\r{2}\r  {3} :{4}"' item' e.DiffMessage' Fo.ANNMSG_BOUND' idName' e.Id.IdString); " is 186.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "						t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmtNoId ("Toc"/*' "目次Id"*/' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.TextNtrlByOthers) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : PaintDescends.None' x.isDebug); " is 474.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "						anntBlock.Add (AnnotAttrs (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmt ("Story"' "ストーリId"' DiffElm)' Fo.ANN_HOR_OFFSET).ToList ()); " is 242.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "						t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : Fo.ANNRGB_PLEIN_LO// text diff never occurs in group. " is 297.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "						' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) ? AnnotIconName.None : AnnotIconName.Insert' DiffMsgFmt ("Group"' "グループID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug); " is 571.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "					var t = x.foBlks_BlkCs_ILsHavingId.Where (x1 => x1.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).Select (x1 => DiffElm.IsCoverPage // 表紙の要素は background-color/image が反映されないものがあるので、直下の block-container タグに注釈を付ける " is 218.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "					? x1.Element (Fo.BLOCKCONTAINER) ?? x1 : x1).Distinct ()// 本来不要なはずだが、現状、同一 id を有する <block> <block-container> の pair が 3730CTamowyxqh:OBAOMDtypitbrs に存在する、それが表紙であると、同一 element が list に重複することになるので、対応した Oct.17.2015 " is 211.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "							x1.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : DiffElm.DiffType.HasFlag (DiffType.Layout) ? Fo.ANNRGB_PLEIN_LO : Fo.ANNRGB_NONE//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp " is 377.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "							' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) // 非表示 : RightPointer  表示 : no icon (paint descendants) !! except pagebreak item' which is pointed by RightPointer icon. " is 207.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "							| DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) && DiffElm.FilterFlag.HasFlag (ECmprElms.IsPageBreak) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? AnnotIconName.Insert : AnnotIconName.None' DiffMsgFmt ("Text"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.TextAllByOthers' ECmprElms.Nothing) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug); " is 955.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "								x1.Descendants (Fo.BASICLINK).Take (DiffElm.LinkTagsPaintOrNot.Count).Where (x2 => x2.Attribute (Fo.INTERNAL_DEST) != null).Where ((x2' i) => DiffElm.LinkTagsPaintOrNot [i]).ToList ().ForEach (x2 => // annotation is desirable " is 225.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "					var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).ToMaybe ().MaybeM (x2 => x2.Descendants (Fo.EXTGRAPH).FirstOrDefault ()); " is 189.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "						t.Value.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_NONE' AnnotIconName.None' DiffMsgFmt ("Illustration"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? PaintDescends.Magenta : PaintDescends.Yellow' x.isDebug); " is 377.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "						t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? Fo.ANNRGB_BYOHTERS : DiffElm.AddedOrRemoved == DiffStatus.Removed ? Fo.ANNRGB_REMOVED : Fo.ANNRGB_NONE' DiffElm.AddedOrRemoved == DiffStatus.Removed ? AnnotIconName.RightPointer : AnnotIconName.None' (DiffElm.AddedOrRemoved == DiffStatus.Added ? "追加" : "削除") + "  \r  内部リンクID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.AdditonalMsg.Contains (Fo.ANNMSG_BYOTHERS) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug); " is 528.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "				x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).Where (x1 => x1.AddedOrRemoved == DiffStatus.Added).ToList ().ForEach (DiffElm =>  { " is 154.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "						t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? "#f0f" : "#fff"' AnnotIconName.None' "追加  \r  ストーリID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug); " is 308.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "				x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).ToList ().ForEach (y => x.NotFounds.Add (y.ConvertAddingRemovingToDiffElm ())); " is 149.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "						t.AddAnnotAttrsAndDescendantsBGCForce (Fo.ANNRGB_BYOHTERS' AnnotIconName.None' "追加" + "  \r  グループID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' PaintDescends.Magenta' x.isDebug); " is 183.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "			var t1 = x.args.foData.FoData.Root.Elements (Fo.PAGESEQUENCE).FirstOrDefault (x1 => x1.IsMatchAttrVal ("master-reference"' "PageMaster-FCover")); " is 145.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "			var TopPage = t1 != null ? t1.Element (Fo.FLOW).Element (Fo.BLOCK) : x.args.foData.FoData.Root.Descendants (Fo.FLOW).First ().Element (Fo.BLOCK).Element (Fo.BLOCK); " is 164.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "			Func<XElement' int' XElement> AddDummyBlkCntnr = (elm' left) => new XElement (Fo.BLOCKCONTAINER' new XAttribute ("inline-progression-dimension"' "20%")' new XAttribute ("block-progression-dimension"' "20%")' new XAttribute ("absolute-position"' "absolute")' new XAttribute ("left"' string.Format ("{0}mm"' left))' new XAttribute ("top"' "0mm")).SelectNewSingle (x1 =>  { " is 370.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "			AddDummyBlkCntnr (TopPage' -100/* out of sheet */).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_HEADER' AnnotIconName.Help' string.Format ("{0}{1}{0}{2}\r{0}比較対象レイアウトパラメータ\r{3}\r{0}"' new string ('='' 30) + "\r"' DateTime.Now.ToString ("yyyy/M/d (ddd) HH:mm 作成\r")' string.Format ("カテゴリ\r  {0}\r  {1}\rブック\r  {2}\r  {3}\r抽出項目\r  {4}\r比較対象アーカイブ作成日時\r  {5:yyyy/M/d HH:mm}"' x.args.categoryName' x.args.categoryId' x.args.bookName' x.args.bookId' delphiParams.ComparisonElmsMsg.JoinStringWith ("\r  ")' x.args.archivedDate)' delphiParams.NeedLOCompare ? delphiParams.LOParameters.Select (y => "  " + y).Aggregate ((a' b) => a + "\r" + b) : "  比較しない")' PaintDescends.None' x.isDebug); " is 677.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The length of the statement  "			AddDummyBlkCntnr (TopPage' -2).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_NOTFOUNDS' AnnotIconName.Star' string.Format ("{0}{1}\r{0}"' new string ('='' 30) + "\r"' x.NotFounds.Elements ().Count () > 0 ? x.NotFounds.ToString () : "")' PaintDescends.None' x.isDebug); " is 264.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,PaintDescendantsBGC,The length of the statement  "	TargetElm.Descendants ().Where (x => !x.IsMatchAttrVal (Fo.BACKGROUND_IMAGE_KEEP' true.ToString ())).Union (TargetElm.ToIEnumerable ()).ToList ().ForEach (x => x.RemoveAttr (Fo.BACKGROUND_COLOR' Fo.BACKGROUND_IMAGE)); " is 217.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,PaintDescendantsBGC,The length of the statement  "	var bgImgFilePath = (IsLocalDebug ? @"D:\case\iTrex\BGClrs" : @"D:\publiczone\_default\htdocs\resource\itrex\archives_temp\diffPDF\bgclrs") + BGCFilePath (FillColor); " is 166.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,PaintDescendantsBGC,The length of the statement  "	TargetElm.Add (new XAttribute (Fo.BACKGROUND_IMAGE' bgImgFilePath)' new XAttribute (Fo.BACKGROUND_IMAGE_KEEP' true.ToString ())); " is 129.
Long Statement,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,PaintDescendantsBGC,The length of the statement  "	new List<XElement> ().Union (TargetElm.Descendants (Fo.BLOCK)).Union (TargetElm.Descendants (Fo.INLINE)).Where (x => !x.IsMatchAttrVal (Fo.BACKGROUND_IMAGE_KEEP' true.ToString ())).ToList ().ForEach (x => x.Add (new XAttribute (Fo.BACKGROUND_IMAGE' Path.GetDirectoryName (bgImgFilePath) + @"\000-000-000-0.PNG"))); " is 314.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "			formatFunc = new Func<DiffStatus' string' string' string' string> ((st' name' oldVal' newVal) => st.SwitchExpression (new Dictionary<DiffStatus' string> { " is 154.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				}//' { DiffStatus.Irregular' string.Format(Fo.ANNMSG_LO_FMT' "比較エラー"' name' "書式重複あり" + oldVal + (oldVal == "" ? newVal : newVal == "" ? "" : "、また" + newVal)) } } " is 161.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "					string.Format (Fo.ANNMSG_LO_FMT' "比較エラー"' name' "書式重複あり (" + (oldVal == "" ? "現在の" : newVal == "" ? "アーカイブ" : "現在およびアーカイブ両") + "ブックにおいて)") " is 138.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				flag = x1.val.LOPrmName.MatchAny (Cs.PP_SHOWHIDE_SET) && x1.val.NewValue.MatchAny (x1.showHideFormalValues) // 非公式な値を取っている場合は、一般書式と同じ表記を取る (参考 : 1 と異なる値を持つときは表示状態となる) " is 166.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				&& x1.val.OldValue.MatchAny (x1.showHideFormalValues) ? x1.val.NewValue == "1" ? ECmprElms.ShowStHiddenByAny // "" or "0" ==> "1" " is 129.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				val = x1.flag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? x1.formatFunc (x1.status' x1.val.LOPrmName' x1.val.OldValue' x1.val.NewValue) : x1.flag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) ? "表示 ⇒⇒ 非表示\r  テキスト : " + FormatDiffXml.ToHideTextFmt + "\r" : "非表示 ⇒⇒ 表示" " is 309.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				? string.Format ("グループ名称 :{0}\r  {1}{2}"' crntBook.MSIdsAll.First (y => y.IsMatchAttrVal (Cs.GROUP_ID' x1.id)).Attribute (Cs.GROUP_TYPE).Value' x1.msgTitle' x1.val) : string.Format ("{0}{1}"' x1.msgTitle' x1.val) " is 212.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				return needLayoutNeutral ? needShowStatus ? true : x1.flag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) : needShowStatus ? x1.flag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) : false; " is 226.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				otherBookMsg = debugOption == EDebug.DebugNoRDB ? "" : Mysql.GetLOHis (x1.Key.crntBook' x1.Key.item' x1.Key.item != DiffItem.Story ? x1.Key.id : x1.Key.crntBook.GetRootMSIdsGrpIdByStoryName (x1.Key.id)' archvDate' debugOption' x.log) " is 233.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				flag = x1.otherBooksChangingMsg == "" ? x1.flag & ~(ECmprElms.LayoutNtrlByOthers | ECmprElms.ShowStBothBYOthers) : x1.flag & ~(ECmprElms.LayoutNtrlBySelf | ECmprElms.ShowStBothBYSelf) " is 183.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly (Cs.LOG_MODBYOTHER + y.diffs.Where (y1 => y1.FilterFlag.HasFlag (ECmprElms.TextNtrlByOthers)).Count ()' 2)).WithAddingLog (x => x.log' x => x.AddLap ("Fin LODiffs()"' 1)).SelectNewSingle (x => x.diffs); " is 255.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		' List<Difference>> MSDiffs = (_MSDiffs' _crntBook' _locIdsToBeIgnoredToBeComparedInTextValue' _compareItemList' _log) => new { " is 127.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				linktagsCountDiffMsg = x1.linkTags.before.Count != x1.linkTags.after.Count ? string.Format ("\r -- 相互参照の数が {0} 個から {1} 個に変わっています"/* 相互参照とは link tag のこと */' x1.linkTags.before.Count' x1.linkTags.after.Count) : "" " is 211.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				linkTagsPaintOrNot = x1.linkTags.after.Select ((x2' i) => (x1.linktagsCountDiffMsg != "" || x2 != x1.linkTags.before [i])).ToList () " is 132.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				val = x1.linkTagsPaintOrNot.Where (x2 => x2).Count () > 0 && x1.linktagsCountDiffMsg == "" ? x1.val + "\r -- 相互参照に変更があります。" /* 相互参照とは link tag のこと */: x1.val " is 157.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				flag = x1.MSHis != "" ? x1.hasLinkTextDiff ? ECmprElms.TextAsLinkByOthers : ECmprElms.TextNtrlByOthers : x1.hasLinkTextDiff ? ECmprElms.TextAsLinkBySelf : ECmprElms.TextNtrlBySelf " is 179.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly (Cs.LOG_MODBYOTHER + y.diffs.Where (y1 => y1.flag.HasAnyCommonFlag (y.compareItemFlags' ECmprElms.Nothing)).Count ()' 2)).SelectNewSingle (x => new { " is 202.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				OwnerIds = x1.diffItem == DiffItem.Toc ? x1.crntBook.BookData.GetTocIdByMSId (x1.id).ToList () : x1.diffItem == DiffItem.MSId ? x1.crntBook.MSIdAll.Where (y => y.IsMatchAttrVal (Cs.ID' x1.id)).Select (y => y.Attribute (Cs.LOC_ID).Value).Where (y => !x.ignoreLocIds.Contains (y)).ToList () // ! This evaluation is important ! " is 324.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		var illstDiff = debugOption == EDebug.DebugNoRDB || !delphiParams.ComparisonElms.HasFlag (ECmprElms.IllustHisByAny) ? new List<Difference> () : Mysql.GetIllstHis (crntBook' archvDate' langList' debugOption' log); " is 212.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		var Diffs = LinqExtension.UnionEnumsAsAnEnum (LODiffs (diffLOs' crntBook' arcvBook' delphiParams.LOParameters' delphiParams.ComparisonElms' log)' MSDiffs (diffMSs' crntBook' locIdsToBeIgnoredInComparingTexts' delphiParams.ComparisonElms' log)' illstDiff).ToList (); " is 265.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		Diffs.Where (x => x.DiffType.HasFlag (DiffType.TextValue)).SideEffectsOnlyAsParalles (x => x.DiffMessage = x.DiffItem.SwitchExpression (new Dictionary<DiffItem' string> { " is 170.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		Diffs.Where (x => x.Id.IdString != Cs.MSG_NOTFOUND).Where (x => x.DiffType.HasFlag (DiffType.Layout)).GroupBy (x => x.Id.IdString).Where (x => x.Count () > 1)// !! With side effects !! " is 184.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		Diffs.Where (x => x.Id.IdString != Cs.MSG_NOTFOUND).Where (x => x.DiffType.HasFlag (DiffType.Layout)).ToList ().ForEach (x =>  { " is 128.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		.Where (x => x.DiffType != DiffType.ToBeRemoved).Where (x => x.Id.IdString != Cs.MSG_NOTFOUND).GroupBy (x => x.Id.IdString).Where (x => x.Count () > 1)// !! With side effects !! " is 177.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				x1.RelatedStoryId = crntBook.TocAll.FirstOrDefault (x2 => x2.IsMatchAttrVal (Cs.ID' x1.Id.IdString)).ToMaybe ()// toc を子孫として持つ toc は .groups に childrenTocs と story container を並列して持ち、その順序は不定なので groupType == 2 が不可欠 " is 212.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				.MaybeM (x2 => x2.Element (Cs.GROUPS).Elements ().FirstOrDefault (x3 => x3.IsMatchAttrVal (Cs.GROUP_TYPE' "2"))).MaybeM (x2 => x2.Element (Cs.MEMBER_IDS).Element (Cs.STRING).Value).SelectNewSingle (x2 => x2.HasValue ? x2.Value : Cs.MSG_NOTFOUND); " is 246.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				x1.RelatedStoryId = crntBook.MSIdsAll.FirstOrDefault (x2 => x2.IsMatchAttrVal (Cs.GROUP_ID' x1.Id.IdString)).SelectNewSingle (x2 => x2 == null ? Cs.MSG_NOTFOUND : x2.GetAncestorStory ().Attribute (Cs.ID).Value); " is 211.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "				x1.RelatedStoryId = crntBook.MSIdAll.FirstOrDefault (x3 => x3.IsMatchAttrVal (Cs.LOC_ID' x1.Id.IdString)).SelectNewSingle (x3 => x3 == null ? Cs.MSG_NOTFOUND : x3.GetAncestorStory ().Attribute (Cs.ID).Value); " is 208.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		Diffs = Diffs.Except (Diffs.Where (x => x.DiffItem != DiffItem.Toc && TocGroupsHavingMemIds.GetTocByStoryId (x.RelatedStoryId) == null)).ToList (); " is 147.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		}.Contains (x.RelatedStoryId)).SideEffectsOnly (x => x.IsCoverPage = TocGroupsHavingMemIds.GetTocByStoryId (x.RelatedStoryId).Parent.Parent.Descendants (Cs.PROPERTY).Where (y => y.IsMatchAttrVal ("name"' "menu-id")).Any (y => y.IsContainsAttrVal ("value"' new[] { " is 263.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "			elm = x.DiffItem == DiffItem.Story ? crntBook.StoryAll : x.DiffItem == DiffItem.Toc ? crntBook.TocAll : x.DiffItem == DiffItem.MSIds ? crntBook.MSIdsAll : crntBook.MSIdAll " is 171.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "			x1.diff.HiddenInfo = x1.elm.FirstOrDefault (x2 => x2.Attribute (x1.idName).Value == x1.idVal).GetHiddenStatusWithAnscestors (TocGroupsHavingMemIds); " is 148.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		Diffs.AsParallel ().Where (x => x.DiffItem == DiffItem.MSId).AssertElm (x => crntBook.MSIdDic.Keys.Contains (x.Id.IdString)).Where (x => crntBook.MSIdDic [x.Id.IdString].IsMatchAttrVal (Cs.MS_TYPE' "illustration-text")).SideEffectsOnlyAsParalles (x => x.DiffMessage = "**イラストレーションテキスト**\r" + x.DiffMessage); " is 307.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		Diffs = Diffs.AsParallel ().Where (x => x.DiffType != DiffType.ToBeRemoved)// Excludes illustration diffs as hidden MSId (But it is exceptional that the item's show status changed to 'Hide'.) " is 191.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		.Where (x => !(x.DiffType.HasFlag (DiffType.IllustHis) && x.HiddenInfo.HiddenBy != HiddenBy.None && !x.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing))).Where (x => x.HiddenInfo.HiddenBy != HiddenBy.AncestorProp)// Jan.29.2015 " is 255.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		#region Add Hidden item LO annot texts  (17.June.2015 : Toc の書式については差分を見ていない、見るようになると GetDescendantsTextByGroupIdOrLocId() では対応できないので、追加処理が必要) " is 142.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "		Parallel.ForEach (Diffs.Where (x => x.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing))' x =>  { " is 124.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The length of the statement  "			x.DiffMessage = x.DiffMessage.Replace (FormatDiffXml.ToHideTextFmt' crntBook.GetDescendantsTextByGroupIdOrLocId (x.Id.IdString)); " is 129.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,GetLinkTags,The length of the statement  "	.Select (x => "[@TREX[LINK::" + x).Select (x => x.Substring (0' 1 + x.GetNthIndex (']'' 2))).Where (x => x != "")// last step において "" を出力したもの(']' * 2 により閉じられていないため)を除外 (ex. 校正時に誤って ']' を削除した) " is 191.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,GetTocNameByStoryId,The length of the statement  "	return tocTitle == null ? "Not found TocTitle of Toc:" + tocId : tocTitles.GetTextByMSIdAndLangCode (tocId' langCode' isBaseLang); " is 130.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,GetTocIdByMSId,The length of the statement  "	return bookData.Root.Descendants (Cs.MODEL).First (x => x.Element (Cs.GROUPS).Elements ().Count () > 0)// Elements() is not Nullable. " is 133.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,GetTocIdByMSId,The length of the statement  "	.Descendants (Cs.GROUP).Where (x => x.Element (Cs.MEMBER_IDS).Elements ().Count () > 0).Where (x => x.Element (Cs.MEMBER_IDS).Elements ().First ().Value == TextId).Select (x => x.Attribute (Cs.ID).Value); " is 204.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,GetHiddenStatusWithAnscestors,The length of the statement  "	var resultElm = matchedElm.ToIEnumerable ().Union (matchedElm.GetAncestors ())// self -> self.parent -> self.parent.parent ... " is 126.
Long Statement,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,GetHiddenStatusWithAnscestors,The length of the statement  "	.LastOrDefault (x => x.Name.ToString () == Cs.STORY ? TocGroupsHavingMemIds.GetTocByStoryId (x.Attribute (Cs.ID).Value).IsHiddenBySelfOrAncestors () : x.IsHiddenBySelfElm ()); " is 175.
Long Statement,AddAnnotationToFoFile,AddedOrRemovedElm,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,ConvertAddingRemovingToDiffElm,The length of the statement  "	return new XElement (Cs.DIFF_DIFFERENCE' new XAttribute (Cs.ID' this.Id)' new XAttribute (Cs.DIFF_ITEM' this.DiffItem.ToString ())' new XAttribute ("status"' this.AddedOrRemoved.ToString ())' string.IsNullOrEmpty (this.StoryId) ? (XAttribute)null : new XAttribute ("story_id"' this.StoryId)' this.AdditonalMsg); " is 311.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "	}.WithAddingLog (x => x.log' (x' y) => x.AddLap (string.Format ("MSId count {0}"' y.crntMSIdList.Count ())' 1)).SelectNewSingle (x => new { " is 139.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "		StoriesAdded = !x.NeedAddDiff ? new List<AddedOrRemovedElm> () : crntBookData.StoryAll.Where (x1 => !x1.IsMatchAttrVal (Cs.ID' achvBookData.StoryAll.Select (y => y.Attribute (Cs.ID).Value))).Select (x1 => new AddedOrRemovedElm { " is 228.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "			x1.AdditonalMsg = x.debugOption == EDebug.DebugNoRDB ? "" : Mysql.GetAddedStoryHis (crntBookData' x.tocGroupsHavingMemIds.GetTocByStoryId (x1.Id).Parent.Parent.Element (Cs.MEMBER_IDS).Element (Cs.STRING).Value' x.archvDate' x.debugOption' x.log); " is 246.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "			x1.FilterFlag = x1.AdditonalMsg == "" ? x1.FilterFlag & ~ECmprElms.AddingByOthers : x1.FilterFlag & ~ECmprElms.AddingBySelf; " is 124.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "		StoriesRemoved = !x.NeedRmvDiff ? new List<AddedOrRemovedElm> () : achvBookData.StoryAll.Where (x1 => !x1.IsMatchAttrVal (Cs.ID' crntBookData.StoryAll.Select (y => y.Attribute (Cs.ID).Value))).Select (x1 => new AddedOrRemovedElm { " is 230.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "		MSIdsToBeExculded = crntBookData.StoryAll.Where (x1 => x1.IsMatchAttrVal (Cs.ID' x.storiesAddedOrRemoved.Select (y => y.Id))).Descendants (Cs.MANUSCRIPT_IDS).Select (x1 => x1.Attribute (Cs.GROUP_ID).Value).Distinct ().ToHashSet ()' " is 231.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "		MSIdAddedListToBeExculded = crntBookData.StoryAll.Where (x1 => x1.IsMatchAttrVal (Cs.ID' x.StoriesAdded.Select (y => y.Id))).GetMSIdToBeIgnored ().Union (x.ignoreLocIds).Distinct ().ToList ()' " is 192.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "		MSIdRemovedListToBeExculded = achvBookData.StoryAll.Where (x1 => x1.IsMatchAttrVal (Cs.ID' x.StoriesRemoved.Select (y => y.Id))).GetMSIdToBeIgnored ().Union (x.ignoreLocIds).Distinct ().ToList () " is 195.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "	}).WithAddingLog (x => x.log' x => x.AddLap ("Has set the lists of MSId and Story as target."' 1)).SelectNewSingle (x =>  { " is 123.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "		!x.NeedAddDiff ? new List<AddedOrRemovedElm> () : CreateMSIdList (x.crntMSIdList' x.achvMSIdList' DiffStatus.Added' x.MSIdAddedListToBeExculded' x.baseLog).ToList ()// !! Side effect !! " is 185.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "			x1.AdditonalMsg = x.debugOption == EDebug.DebugNoRDB ? "" : Mysql.GetAddedMSIdHis (crntBookData' x1.Id' x.archvDate' x.debugOption' x.log); " is 139.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "			x1.FilterFlag = x1.AdditonalMsg == "" ? x1.FilterFlag & ~ECmprElms.AddingByOthers : x1.FilterFlag & ~ECmprElms.AddingBySelf; " is 124.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "		!x.NeedAddDiff || debugOption == EDebug.DebugNoRDB ? new List<AddedOrRemovedElm> () : Mysql.GetAddedMSIdsHis (crntBookData' x.archvDate' x.debugOption' x.log).Exclude (x1 => x.MSIdsToBeExculded.Contains (x1.Key)).Select (x1 => new AddedOrRemovedElm { " is 250.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "		})).Where (x1 => x1.FilterFlag.HasAnyCommonFlag (x.delphiParams.ComparisonElms' ECmprElms.Nothing))// Mar.2015 : About Stories' all or nothing. (Story の追加履歴は追えないので) " is 164.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,AddedOrRemovedDiff,The length of the statement  "		!x.NeedRmvDiff ? new List<AddedOrRemovedElm> () : CreateMSIdList (x.achvMSIdList' x.crntMSIdList' DiffStatus.Removed' x.MSIdRemovedListToBeExculded' x.baseLog)).ToList ().Select (x1 => new { " is 190.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,CreateMSIdList,The length of the statement  "	}).Where (x1 => x.ids.Contains (x1.locid) ? !x.ids.Remove (x1.locid) : true).Where (x1 => x.locIdsToBeIgnored.Contains (x1.locid) ? !x.locIdsToBeIgnored.Remove (x1.locid) : true).Select (x1 => new { " is 198.
Long Statement,AddAnnotationToFoFile,GetAddedOrRemoved,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\GetAddedOrRemoved.cs,GetMSIdToBeIgnored,The length of the statement  "	return stories.Descendants (Cs.MANUSCRIPT_ID).RemoveMSIdsContainers ().Select (x => x.Attribute (Cs.LOC_ID).Value).ToList (); " is 125.
Long Statement,AddAnnotationToFoFile,Log,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Log.cs,AddLap,The length of the statement  "	this.logMessages.Add (string.Format ("[{0}] Lap {1}{2} {3}"' this.TimeStamp' GetIndent (indentLevel)' (totalSec - this.lastSplit).ToString ("F1").PadLeft (7)' msg)); " is 165.
Long Statement,AddAnnotationToFoFile,Log,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Log.cs,AddSplit,The length of the statement  "	this.logMessages.Add (string.Format ("[{0}] sum {1}{2} {3} (timer is reset.)"' this.TimeStamp' GetIndent (indentLevel)' totalSec.ToString ("F1").PadLeft (7)' msg)); " is 164.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetIllustIds,The length of the statement  "	return Mysql.SetReader ("SELECT `used-id`' id FROM uref_" + categoryId + "_illustrations;"' err' debugOption' log).Where (x => x [0] as string == bookId).Select (x => x [1] as string); " is 184.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetIllstHis,The length of the statement  "	if (Mysql.SetReader (string.Format ("SHOW TABLES FROM itrexservice LIKE 'hist_{0}_illustrations';"' book.CategoryId)' ""' debugOption' log).Count () == 0) { " is 156.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetIllstHis,The length of the statement  "		baseQuery = "SELECT `rec-id`' `act-date`' b.`author`' b.`id`' b.`rev`' `lang-code`' `action`' `used-id`' details' `seq-id`' a.`proc-type` " + "FROM tran_" + x.categoryId + "_illustrations AS a " + "INNER JOIN " + "(SELECT * FROM hist_" + x.categoryId + "_illustrations " + "WHERE ({0}) AND ({1}) AND ({2}) AND ({3})) AS b" + " ON a.id = b.id"' " is 343.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetIllstHis,The length of the statement  "		conditonIdValues = GetIllustIds (x.categoryId' x.bookId' x.err' debugOption' log).Select (_x => string.Format ("id = '{0}'"' _x)).JoinStringWith (" OR ")' " is 154.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetIllstHis,The length of the statement  "		conditionActionValues = Enum.GetValues (typeof(HistoryAction)).Cast<HistoryAction> ().Select (_x => "action = " + _x.GetHashCode ().ToString ()).JoinStringWith (" OR ")' " is 169.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetIllstHis,The length of the statement  "	}.SelectNewSingle (x => x.MSLi.Where (x1 => x1.Element (Cs.SCHEMATIC_ID).Value != "")// x.Element(Cs.SCHEMATIC_ID) is not nullable " is 130.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetIllstHis,The length of the statement  "	var IllstHistsZippedByLocId = book.MSIdAll.Where (x => x.IsMatchAttrVal (Cs.ID' mss.Select (y => y.IdOfMS))).Select (x => new { " is 127.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetIllstHis,The length of the statement  "		msgOnDoingByOtherBook = x.latestHisIsByOtherBook ? string.Format ("\r  == {0} : {1} ==\r"' Fo.ANNMSG_BYOTHERS' book.BookData.Descendants (Cs.MODEL).FirstOrDefault (x1 => x1.IsMatchAttrVal (Cs.ID' x.latestHis.usedid)).SelectNewSingle (x1 => x1 == null ? "既に削除されたブック" : x1.Element (Cs.MODEL_NAME).Value)) : "" " is 307.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetIllstHis,The length of the statement  "	IllstHistsZippedByLocId.Select (x => x.IllstHists).Where (x => x.Count () > 1).Where (x => x [0].action == HistoryAction.New).Where (x => x [1].action == HistoryAction.Upload).ToList ().ForEach (x => x.RemoveAt (1)); " is 216.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetIllstHis,The length of the statement  "		"  =={0}== / 種類 : {1} / 言語 : {2} /{3}{4}"' actionMsgs [y.action]' illstTypeMsgs [y.proctype]/* LangName */' y.proctype == IllstType.Common ? "Common" : langList.GetLangName (y.langcode.Value)/* Detail   */' y.action == HistoryAction.Update ? y.details : ""' y.actdate)).JoinStringWith ("\r") + x.msgOnDoingByOtherBook " is 317.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetMSHis,The length of the statement  "		return table.First ().SelectNewSingle (x => string.Format ("\r  == {0} : {2} : {1} ==\r"' Fo.ANNMSG_BYOTHERS' x.actdate' book.BookData.Descendants (Cs.MODEL).FirstOrDefault (x1 => x1.IsMatchAttrVal (Cs.ID' x.usedid)).SelectNewSingle (x1 => x1 == null ? "既に削除されたブック" : x1.Element (Cs.MODEL_NAME).Value))); " is 304.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetLOHis,The length of the statement  "		return table.First ().SelectNewSingle (x => string.Format ("\r  == {0} : {2} : {1} ==\r"' Fo.ANNMSG_BYOTHERS' x.actdate' book.BookData.Descendants (Cs.MODEL).FirstOrDefault (x1 => x1.IsMatchAttrVal (Cs.ID' x.actor)).SelectNewSingle (x1 => x1 == null ? "既に削除されたブック" : x1.Element (Cs.MODEL_NAME).Value))); " is 303.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetAddedStoryHis,The length of the statement  "		return table.First ().SelectNewSingle (x => string.Format ("\r  == {0} : {2} : {1} ==\r"' Fo.ANNMSG_BYOTHERS' x.actdate' book.BookData.Descendants (Cs.MODEL).First (x1 => x1.IsMatchAttrVal (Cs.ID' x.actorId)).Element (Cs.MODEL_NAME).Value)); " is 241.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetAddedMSIdsHis,The length of the statement  "		return table.ToDictionary (x => x.groupId' x => string.Format ("\r  == {0} : {2} : {1} ==\r"' Fo.ANNMSG_BYOTHERS' x.actdate' book.BookData.Descendants (Cs.MODEL).First (x1 => x1.IsMatchAttrVal (Cs.ID' x.actorId)).Element (Cs.MODEL_NAME).Value)); " is 245.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetAddedMSIdHis,The length of the statement  "		return table.First ().SelectNewSingle (x => string.Format ("\r  == {0} : {2} : {1} ==\r"' Fo.ANNMSG_BYOTHERS' x.actdate' book.BookData.Descendants (Cs.MODEL).First (x1 => x1.IsMatchAttrVal (Cs.ID' x.actorId)).Element (Cs.MODEL_NAME).Value)); " is 241.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	var ReturnXml = Mysql.SetReader (string.Format ("SELECT id' `category-name`' description' properties' `property-sets`' `default-assortment`' `default-assortment-group`' `default-writing-state`' languages' `word-groups`' groups FROM categories WHERE id='{0}' LIMIT 1;"' categoryId)' err' debugOption' log).Select (x => new XDocument (new XElement (Cs.CATEGORY' new XElement (Cs.ID' x [0])' new XElement (Cs.CATEGORY_NAME' x [1])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x [2] as string)' XElement.Parse (x [3] as string)// properties " is 532.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	' new XElement (Cs.STORIES)' new XElement (Cs.MANUSCRIPTS)' new XElement (Cs.ILLUSTRATIONS)' new XElement (Cs.EXTERNAL_DOCUMENTS)' new XElement (Cs.MODELS)' XElement.Parse (x [10] as string))))// groups " is 202.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "		reTbl = Mysql.SetReader (string.Format ("SELECT id' `deliv-id`' `group-type`' summary' `member-ids`' properties' `internal-properties` FROM `tran_{0}_groupnodes` WHERE `owner-id`='_WDNODE_' AND `deliv-id`='';"' categoryId)' err' debugOption' log).Select (y => new { " is 265.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	tempLog = RDBRowToXML.SetManuscripts (ReturnXml.Descendants (Cs.WORD_TEXTS).First ()' ReturnXml.Descendants (Cs.LANGUAGE).Select (y => int.Parse (y.Attribute (Cs.LANG_CODE).Value)).ToList ()' string.Format (Query.WORDTEXTS_MS' categoryId)' string.Format (Query.WORDTEXTS_TRNS' categoryId' "{0}")// {0} will be filled with langCode by string.Format() in RDBRowToXML.SetManuscripts(). " is 382.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "		rows = Mysql.SetReader (string.Format ("SELECT id' `deliv-id`' `group-type`' `summary`' `member-ids`' properties' `internal-properties` FROM `tran_{0}_groupnodes` WHERE `owner-id`='_BKNODE_' AND `deliv-id`='';"' categoryId)' err' debugOption' log).Select (x => new { " is 266.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "		rows = Mysql.SetReader (string.Format ("SELECT id' parent' deleted' description' properties' `internal-properties`' assortment' `assortment-group`' `writing-state`' `model-name`' `used-languages` FROM `tran_{0}_models`;"' categoryId)' err' debugOption' log) " is 257.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "			x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool) " is 183.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "			' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties " is 145.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "			' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES))); " is 161.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "		rows = Mysql.SetReader (string.Format (Query.TOCGROUP' categoryId' MasterBookId' bookId)' err' debugOption' log).Select (x => new { " is 131.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	var baseLang = int.Parse (TargetBookElm.Descendants (Cs.USED_LANGUAGE).First (x => x.IsMatchAttrValIgnoreCase (Cs.BASE' "true")).Attribute (Cs.LANG_CODE).Value); " is 161.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "		reTbl = Mysql.SetReader (string.Format ("SELECT `owner-id`' `symbol-name`' `alt-text`' `font-name`' `char-code`' `illust-id`' `illust-rev` " + "FROM `tran_{0}_symbols` WHERE `owner-id`='{1}';"' categoryId' MasterBookId)' err' debugOption' log) " is 243.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	}.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.bookElm.Add (new XElement (Cs.SYMBOL' new XAttribute (Cs.OWNER_ID' x1 [0])' new XElement (Cs.SYMBOL_NAME' x1 [1])' FnEx.NewXElementStrVal (Cs.ALT_TEXT' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.FONT_NAME' x1 [3] as string)' new XElement (Cs.CHAR_CODE' x1 [4])' FnEx.NewXElementStrVal (Cs.ILLUST_ID' x1 [5] as string)' new XElement (Cs.ILLUST_REV' x1 [6].ToString ()))))); " is 425.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	}.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xDoc.Add (new XElement (Cs.ILLUSTRATION' new XAttribute (Cs.PROC_TYPE' x1 [2])' new XAttribute (Cs.REV' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string == "" ? "<properties/>" : x1 [4] as string)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' x1 [5] as string)' FnEx.NewXElementStrVal (Cs.TITLE' x1 [6] as string)' FnEx.NewXElementStrVal (Cs.SOURCE_FORMAT' x1 [7] as string)' FnEx.NewXElementStrVal (Cs.FORMAT' x1 [8] as string)' FnEx.NewXElementStrVal (Cs.ORIGINAL_FILE_NAME' x1 [9] as string)' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' x1 [10] as string)' XElement.Parse (x1 [11] as string == "" ? "<used-languages/>" : x1 [11] as string))))); " is 808.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "		reTbl = Mysql.SetReader (string.Format (@"SELECT b.id' `userside-id`' `story-name`' description' properties' `internal-properties`' `variation-name`' `manuscript-ids`' `first-used-model`' `external-links`' keywords" is 214.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	}.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xElm.Add (new XElement (Cs.STORY' new XAttribute (Cs.USERSIDE_ID' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.STORY_NAME' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string)// properties " is 320.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	' new XElement (Cs.USED_MODELS)' new XElement (Cs.FIRST_USED_MODEL' x1 [8])' XElement.Parse (x1 [9] as string)// externallinks " is 126.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	' "text"' categoryId' baseLang' bookId)' err' debugOption' log).Select (y => y [0] as string)// 処理には不要な srcTxt を保持している理由 : debug には有用であり軽量なため " is 141.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	}).Select (y => y.txt.Where (y1 => y1 != ""))// last step において "" を出力したもの(']' * 2 により閉じられていないため)を除外 (ex. 校正時に誤って ']' を削除した) " is 123.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	})// TDMRexBookBuilder.GetLinkSourceIds() より LINK::LocId or LINK::StroyId:LocId LINK::top:MSIds.GroupId LINK::title:Story.Id の 4種を見ればいいと判断 " is 138.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "		.Descendants (Cs.MANUSCRIPT_ID).First (y1 => !y1.IsMatchAttrVal (Cs.LOC_ID' "")).Attribute (Cs.LOC_ID).Value : y.id [0] == "title" // TDMRexBookBuilder.SetLinkMarker における LocId == "" にあたる " is 187.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "		? MSIdsLi.First (y1 => y1.IsMatchAttrVal (Cs.GROUP_ID' y.id [1])).Descendants (Cs.MANUSCRIPT_ID).First (y1 => !y1.IsMatchAttrVal (Cs.LOC_ID' "")).Attribute (Cs.LOC_ID).Value : y.id [1] " is 184.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "			Task.Factory.StartNew (() => RDBRowToXML.SetMSIds (MSIdsLi' string.Format (Query.MSIDSLIST_ORG' categoryId' MasterBookId' bookId)' err' debugOption' new Log ()))// MSId " is 168.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "			Task.Factory.StartNew (() => RDBRowToXML.SetMSId (MSIdLi' string.Format (UseNewQuery ? Query.MSIDLIST_CUSTOMIZED : Query.MSIDLIST_ORG' categoryId' MasterBookId' bookId' "")' string.Format (UseNewQuery ? Query.MSIDLIST_FORMST_CUSTOMIZED : Query.MSIDLIST_ORG' categoryId' MasterBookId' ""' bookId)' linkTargetInfoLi.Select (y => y.locId).Distinct ().ToList ()' err' debugOption' new Log ()))// MSs " is 395.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "			Task.Factory.StartNew (() => RDBRowToXML.SetManuscriptsByALang (ReturnXml.Descendants (Cs.MANUSCRIPTS).First ()' string.Format (Query.MSSANDTRNS' categoryId' bookId' langCode' "manuscripts")' err' debugOption' Environment.ProcessorCount' Environment.ProcessorCount' new Log ())) " is 278.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "		//        ' string.Format(Query.MSs_TRNS' categoryId' bookId' "{0}")  // {0} will be filled with langCode by string.Format() in RDBRowToXML.SetManuscripts(). " is 157.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "		}.ToArray ().WaitAllAndReturnValues ().Select (x => x.logMessages.Skip (1).JoinStringWith ("\r\n")).JoinStringWith ("\r\n"); " is 124.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	//        ' string.Format(Query.TOCTITLES_TRNS' categoryId' bookId' "{0}")  // {0} will be filled with langCode by string.Format() in RDBRowToXML.SetManuscripts(). " is 163.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	tempLog = RDBRowToXML.SetManuscriptsByALang (ReturnXml.Descendants (Cs.TOC_TITLES).First ()' string.Format (Query.MSSANDTRNS' categoryId' bookId' langCode' "toctitles")' err' debugOption' Environment.ProcessorCount' Environment.ProcessorCount' new Log ()); " is 256.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	//        ' string.Format(Query.MSs_TRNS' categoryId' bookId' "{0}")  // {0} will be filled with langCode by string.Format() in RDBRowToXML.SetManuscripts(). " is 157.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "		catProps.Add (new XElement (Cs.PROPERTY' new XAttribute (Cs.NAME' Cs.PP_CAT_DATATYPE)' new XAttribute (Cs.VALUE' CatDatatype.Model.GetHashCode ())' new XAttribute (Cs.TAG' 0))); " is 177.
Long Statement,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The length of the statement  "	catProps.Add (new XElement (Cs.PROPERTY' new XAttribute (Cs.NAME' Cs.PP_CAT_BOOKID)' new XAttribute (Cs.VALUE' bookId)' new XAttribute (Cs.TAG' 0))); " is 149.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The length of the statement  "	log.AddLap (string.Format ("CPU Core * {0} : {1} bit : Compiled: {2}"' Environment.ProcessorCount' IntPtr.Size == 4 /* else == 8 */? 32 : 64' System.Reflection.Assembly.GetExecutingAssembly ().GetName ().Version.GetDateTimeFromVersionNo ())' 0); " is 245.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The length of the statement  "			log.AddMsgOnly (string.Format ("Set Bookdata == ct:{0} bk:{1} lc:{2}"' args [Args.categoryid]' args [Args.bookid]' args [Args.langcode])' 0); " is 141.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The length of the statement  "			Mysql.GetBookData (args [Args.categoryid]' args [Args.bookid]' int.Parse (args [Args.langcode])' ""' debugOption' log).SaveEx (args [Args.outfile]); " is 148.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The length of the statement  "		log.AddMsgOnly (string.Format ("{0}:{1} Archive_No: {2} -- {3}"' CrntBookData.CategoryId' CrntBookData.BookId' delphiParams.ArchiveNo' delphiParams.UserName)' 1); " is 162.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The length of the statement  "		var LocIdsToBeIgnoredToBeCompared = new HashSet<string> (CrntBookData.MSIdAll.Where (x => x.IsMatchAttrVal (Cs.MS_TYPE' Cs.MT_ITEMEXPLANATIONTITLE)).Where (x => x.Parent != null).Where (x => x.Parent.IsMatchAttrVal (Cs.GROUP_TYPE' Cs.GT_ITEMEXPLANATION)).Where (x => x.Parent.Parent != null)// MSId as MSIdsContainer " is 316.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The length of the statement  "		.Where (x => x.Parent.Parent.Parent.IsMatchAttrVal (Cs.GROUP_TYPE' Cs.GT_ITEMEXPLANATION)).Select (x => x.Attribute (Cs.LOC_ID).Value)); " is 136.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The length of the statement  "			new XDocument (new XElement ("Differences"' new XElement (Cs.DIFF_TEXTDIFFERENCE' msDiffs.Select (x => x.ToXElement ()).ToList ()))).SaveEx (args [Args.crntbookdata] + "NewMS.xml"); " is 181.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The length of the statement  "			new XDocument (new XElement ("Differences"' new XElement (Cs.DIFF_LAYOUTDIFF' loDiffs.Select (x => x.ToXElement ()).ToList ()))).SaveEx (args [Args.crntbookdata] + "NewLO.xml"); " is 177.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The length of the statement  "		var LOAndMSDiffs = FormatDiffXml.UnionDiffXmls (CrntBookData' AchvBookData' loDiffs' msDiffs' AchvBookData.CreationDate' LocIdsToBeIgnoredToBeCompared// compare LO' but doesn't text " is 181.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The length of the statement  "		var AddedRemovedDiffs = GetAddedOrRemoved.AddedOrRemovedDiff (CrntBookData' AchvBookData' LocIdsToBeIgnoredToBeCompared' CrntBookData.TocAll.Where (y => y.Element (Cs.MEMBER_IDS).Elements ().Count () > 0).ToList ()' AchvBookData.CreationDate' delphiParams' log' debugOption); " is 275.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The length of the statement  "		log.AddMsgOnly ("Duplicated id counts : " + fo.Blks_BlkCs_ILsHavingId.GroupBy (x => x.Attribute (Cs.ID).Value).Where (x => x.Count () > 1).Count ()' 0); " is 152.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The length of the statement  "		fo.AddHiddenOrRemovedElements (CrntBookData' AchvBookData' LOAndMSDiffs.Where (x => x.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing)).Where (x => x.HiddenInfo.HiddenBy == HiddenBy.SelfProp).ToList ()' AddedRemovedDiffs.Where (x => x.AddedOrRemoved == DiffStatus.Removed).ToList ()' log); " is 319.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The length of the statement  "		fo.AddAnnotations (LOAndMSDiffs' AddedRemovedDiffs' CrntBookData.CategoryId' CrntBookData.CategoryName' CrntBookData.BookId' CrntBookData.BookName' AchvBookData.CreationDate' delphiParams' log' debugOption); " is 207.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,ExtendTextDiffs,The length of the statement  "	' List<DiffMS>> SetDiffsInTheCaseOfChangingTextId = (containerIdName' crntTextContainers' achvTextContainers' _achvMSs' _crntMSs' getTextIdFunc' langCode) => crntTextContainers.Select (crntContainer => new { " is 207.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,ExtendTextDiffs,The length of the statement  "	}.SelectNewSingle (x => x.achvTextContainers.Keys.Contains (x.keyId) ? x.ToMaybe () : x.ToNothing ()).MaybeM (x => new { " is 120.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,ExtendTextDiffs,The length of the statement  "		archvTrns = x.achvMSs [x.achvTextId].Descendants (Cs.TRANSLATION).FirstOrDefault (y => y.IsMatchAttrVal (Cs.LANG_CODE' x.langCode.ToString ()))' " is 144.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,ExtendTextDiffs,The length of the statement  "		crntTrns = x.crntMSs [x.crntTextId].Descendants (Cs.TRANSLATION).FirstOrDefault (y => y.IsMatchAttrVal (Cs.LANG_CODE' x.langCode.ToString ())) " is 142.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,ExtendTextDiffs,The length of the statement  "		crntText = x.crntTrns == null || x.crntTrns.Element (Cs.TEXT) == null ? "-- No text --" : x.crntTrns.Element (Cs.TEXT).Value' " is 125.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,ExtendTextDiffs,The length of the statement  "		achvText = x.archvTrns == null || x.crntTrns.Element (Cs.TEXT) == null ? "-- No text --" : x.archvTrns.Element (Cs.TEXT).Value " is 126.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,ExtendTextDiffs,The length of the statement  "	var _diffs = SetDiffsInTheCaseOfChangingTextId (DiffItem.MSId' crntBook.MSIdAll.Where (x => x.Attribute (Cs.ID).Value != "").ToList ()' achvBook.MSIdAll.Where (x => x.Attribute (Cs.ID).Value != "").ToDictionary (x => x.Attribute (Cs.LOC_ID).Value)' achvBook.MSTextDic' crntBook.MSTextDic' x => x.Attribute (Cs.ID).Value' crntBook.LangCode); " is 340.
Long Statement,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,ExtendTextDiffs,The length of the statement  "	_diffs = SetDiffsInTheCaseOfChangingTextId (DiffItem.Toc' crntBook.TocAll.Where (x => x.IsMatchAttrVal (Cs.GROUP_TYPE' "0")).ToList ()' achvBook.TocAll.Where (x => x.IsMatchAttrVal (Cs.GROUP_TYPE' "0")).ToDictionary (x1 => x1.Attribute (Cs.ID).Value)' achvBook.MSTocDic' crntBook.MSTocDic' x => x.Element (Cs.MEMBER_IDS).Element (Cs.STRING).Value' crntBook.LangCode); " is 367.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,CreateTranslationXElm,The length of the statement  "	return new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' rdbRow.langcode)' new XAttribute (Cs.ID' rdbRow.id)' new XAttribute (Cs.REV' rdbRow.rev)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' rdbRow.description)' XElement.Parse (rdbRow.properties == "" ? "<properties/>" : rdbRow.properties)' new XElement (Cs.MAX_BYTE' rdbRow.maxbyte)' new XElement (Cs.MAX_DBYTE' rdbRow.maxdbyte)' new XElement (Cs.MAX_SIZE' rdbRow.maxsize)' new XElement (Cs.MAX_LINE' rdbRow.maxline)' new XElement (Cs.CHECK_RESULT' FnEx.FirstCharToUpper (rdbRow.checkresult.ToString ()))' rdbRow.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (rdbRow.text))' rdbRow.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (rdbRow.tutext))); " is 738.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,CreateManusciptXElm,The length of the statement  "	return new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' rdbRow.contentstype)' new XAttribute (Cs.ID_PREV' rdbRow.idprev)' new XAttribute (Cs.REV' rdbRow.rev)' new XAttribute (Cs.ID' rdbRow.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' rdbRow.description)' XElement.Parse (rdbRow.properties)' XElement.Parse (rdbRow.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' rdbRow.usersideid)' new XElement (Cs.TRANSLATIONS)' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' rdbRow.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' rdbRow.schematicid)' new XElement (Cs.SCHEMATIC_REV' rdbRow.schematicrev)); " is 657.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The length of the statement  "	}.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook() " is 131.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The length of the statement  "		x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString())) " is 1182.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The length of the statement  "		' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y)); " is 405.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The length of the statement  "		trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new { " is 123.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The length of the statement  "	}.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook() " is 138.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The length of the statement  "	}).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new { " is 133.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The length of the statement  "	}).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new { " is 133.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The length of the statement  "			trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList () " is 257.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIds,The length of the statement  "	}).WithAddingLog (x => x.log' x => x.AddLap ("MSIds : Before doing Tasks ImplementAllMSIds()"' 1)).SelectNewSingle (x =>  { " is 123.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIds,The length of the statement  "		x.result.Select (y => Task.Factory.StartNew (() => x.ImplementAllMSIds (y.elmMSIds' y.rowsMSIds' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2)); " is 288.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The length of the statement  "					}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new { " is 198.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The length of the statement  "					}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new { " is 121.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The length of the statement  "							x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string) " is 190.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The length of the statement  "					}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new { " is 129.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The length of the statement  "							val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))' " is 174.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The length of the statement  "					}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  { " is 131.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The length of the statement  "							x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties)))); " is 179.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The length of the statement  "	}).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  { " is 121.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The length of the statement  "		x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2)); " is 321.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The length of the statement  "	Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> implementAllMSId = (elmMSIds' _rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  { " is 157.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The length of the statement  "				tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string) " is 178.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The length of the statement  "					val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))' " is 174.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The length of the statement  "				tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties)))); " is 158.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The length of the statement  "	result.Select (y => Task.Factory.StartNew (() => implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2)); " is 317.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,TempSortLocId,The length of the statement  "	return source.SkipWhile (z => string.Compare (z.locid' HeadLocId) < 0).TakeWhile (z => string.Compare (z.locid' TailLocId) <= 0).ToList (); " is 139.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,TempSortGroupId,The length of the statement  "	return source.SkipWhile (z => string.Compare (z.groupid' HeadGroupId) < 0).TakeWhile (z => string.Compare (z.groupid' TailGroupId) <= 0).ToList (); " is 147.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,TempSortId,The length of the statement  "	return source.SkipWhile (z => string.Compare (z.id' HeadId) < 0).TakeWhile (z => string.Compare (z.id' TailId) <= 0).ToList (); " is 127.
Long Statement,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,TempSort,The length of the statement  "	return source.SkipWhile (z => string.Compare (z' HeadLocId) < 0).TakeWhile (z => string.Compare (z' TailLocId) <= 0).ToList (); " is 127.
Long Statement,AddAnnotationToFoFile,SpecificUtils,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\SpecificUtils.cs,IsHiddenBySelfElm,The length of the statement  "	return elm.Element (Cs.PROPERTIES).ToMaybe ().MaybeM (x => x.Elements (Cs.PROPERTY)).MaybeM (x => x.FirstOrDefault (x1 => // xxx_HIDE_THIS が複数指定されている場合(多々あり)、初出の値のみが評価されることを反映 " is 175.
Long Statement,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,DoTest,The length of the statement  "			delphiPrms = XDocument.Load (paramsfile).Descendants (Cs.PARAM).ToDictionary (x1 => x1.Attribute (Cs.NAME).Value' x1 => x1.Value) " is 129.
Long Statement,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveCrntBooksInfo,The length of the statement  "			books = Mysql.SetReader (x.categories.Select (x1 => string.Format ("SELECT '{0}'' '{1}'' id' `model-name`' `used-languages` FROM tran_{0}_models WHERE deleted <> 1"' x1.id' x1.name)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new { " is 252.
Long Statement,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveCrntBooksInfo,The length of the statement  "				baseLangCode = x1.usedLangs.Count > 0 ? x1.usedLangs.FirstOrDefault (x2 => x2.IsMatchAttrValIgnoreCase (Cs.BASE' "true")).Attribute (Cs.LANG_CODE).Value : "-1" " is 159.
Long Statement,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveCrntBooksInfo,The length of the statement  "		}).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("bookid"' x1.bookId)' new XAttribute ("usedlangs"' x1.usedLangs.JoinStringWith (":"))' new XAttribute ("baselang"' x1.baseLangCode)' new XAttribute ("categoryname"' x1.categoryName)' new XAttribute ("bookname"' x1.bookName))))).Save (x.outfile)); " is 414.
Long Statement,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveAllArchives,The length of the statement  "			tables = Mysql.SetReader ("SHOW TABLES LIKE '%arcindexes';"' ""' debugOption' log).Select (x1 => x1 [0] as string).Select (x1 => new { " is 134.
Long Statement,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveAllArchives,The length of the statement  "			books = Mysql.SetReader (x.tables.Select (x1 => string.Format ("SELECT '{0}'' number' `lang-code`' `book-id` FROM {1}"' x1.categoryid' x1.tablename)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new { " is 219.
Long Statement,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveAllArchives,The length of the statement  "		}).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("number"' x1.number)' new XAttribute ("langcode"' x1.langcode)' new XAttribute ("bookid"' x1.bookid))))).Save (x.outfile)); " is 291.
Long Statement,AddAnnotationToFoFile.Classes,BookDataEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Classes\BookData.cs,GetDescendantsTextByGroupIdOrLocId,The length of the statement  "		return this.MSIdsAll.First (x => x.IsMatchAttrVal (Cs.GROUP_ID' id)).Descendants (Cs.MANUSCRIPT_ID).Where (x => !x.IsMatchAttrVal (Cs.ID' "")).Select (x => x.Attribute (Cs.ID).Value).Select (x => GetMSTextById (x)).JoinStringWith ("\r"); " is 237.
Long Statement,AddAnnotationToFoFile.Classes,BookDataEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Classes\BookData.cs,GetMSTextById,The length of the statement  "	return this.MSTextDic [id].SelectNewSingle (x => x.Descendants (Cs.TRANSLATION).FirstOrDefault (x2 => x2.IsMatchAttrVal (Cs.LANG_CODE' this.LangCode.ToString ()))).SelectNewSingle (x => x == null ? null : x.Element (this.IsBaseLang ? Cs.TEXT : Cs.TUTEXT)).SelectNewSingle (x => x == null ? "" : x.Value); " is 304.
Long Statement,AddAnnotationToFoFile.Classes,Difference,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Classes\Difference.cs,FormatToXElm,The length of the statement  "	return new XElement (Cs.DIFF_DIFFERENCE' new XAttribute ("id"' this.Id.IdString)' new XAttribute ("story-id"' this.RelatedStoryId)' new XAttribute ("item"' this.DiffItem.ToString ().ToLower ())' this.DiffMessage); " is 213.
Long Statement,AddAnnotationToFoFile.Classes,DiffMS,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Classes\Difference.cs,ToXElement,The length of the statement  "	return new XElement (Cs.DIFF_DIFFERENCE' new XAttribute (Cs.DIFF_ITEM' this.OwnerItem == DiffItem.MSId ? Cs.MANUSCRIPT : Cs.DIFF_TOC)' new XAttribute (Cs.DIFF_ID' this.Id)' new XElement (Cs.DIFF_BEFORE' this.OldVal)' new XElement (Cs.DIFF_AFTER' this.NewVal)); " is 260.
Long Statement,AddAnnotationToFoFile.Classes,DiffLO,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Classes\Difference.cs,ToXElement,The length of the statement  "	return new XElement (Cs.DIFF_DIFFERENCE' new XAttribute (Cs.DIFF_ID' this.Id == null ? "" : this.Id.IdString)' new XAttribute (Cs.DIFF_ITEM' this.OwnerItem == DiffItem.Story ? Cs.STORY : this.OwnerItem == DiffItem.MSIds ? Cs.MANUSCRIPT_IDS : Cs.MANUSCRIPT_ID)' new XAttribute ("Status"' this.DiffStatus.ToString ())' new XAttribute (Cs.DIFF_LO_NAME' this.Name ?? "")' new XAttribute (Cs.DIFF_LO_OLD' this.OldVal ?? "")' new XAttribute (Cs.DIFF_LO_NEW' this.NewVal ?? "")); " is 472.
Long Statement,AddAnnotationToFoFile.Classes,Languages,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Classes\Languages.cs,GetLangName,The length of the statement  "	return this.Source.Descendants ("system-language").Where (x => x.IsMatchAttrVal ("code"' langCode.ToString ())).Select (x => new { " is 130.
Complex Conditional,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The conditional expression  "bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>'"  is complex.
Complex Conditional,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The conditional expression  "bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>'"  is complex.
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,KeepEntityXmlTextWriter,The following statement contains a magic number: REPLACE_CHARS_LENGTH = this.ProjectName == EProjectName.ITrex ? 3 : 2;  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,KeepEntityXmlTextWriter,The following statement contains a magic number: REPLACE_CHARS_LENGTH = this.ProjectName == EProjectName.ITrex ? 3 : 2;  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType != BufferType.Unknown) {  	int bufPos = get_bufPos (internalWriter);  	int bufLen = get_bufLen (internalWriter);  	if ((bufPos + 3) >= bufLen) {  		this.FlushBuffer (internalWriter);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if ((bufPos + 3) >= bufLen) {  	this.FlushBuffer (internalWriter);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  	bufChars [bufPos - 3] = '/';  	bufChars [bufPos - 2] = '>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  	bufChars [bufPos - 3] = '/';  	bufChars [bufPos - 2] = '>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  	bufChars [bufPos - 3] = '/';  	bufChars [bufPos - 2] = '>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  	bufChars [bufPos - 3] = '/';  	bufChars [bufPos - 2] = '>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  	bufChars [bufPos - 3] = '/';  	bufChars [bufPos - 2] = '>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: bufChars [bufPos - 3] = '/';  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: bufChars [bufPos - 2] = '>';  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  	bufBytes [bufPos - 3] = (byte)'/';  	bufBytes [bufPos - 2] = (byte)'>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  	bufBytes [bufPos - 3] = (byte)'/';  	bufBytes [bufPos - 2] = (byte)'>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  	bufBytes [bufPos - 3] = (byte)'/';  	bufBytes [bufPos - 2] = (byte)'>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  	bufBytes [bufPos - 3] = (byte)'/';  	bufBytes [bufPos - 2] = (byte)'>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  	bufBytes [bufPos - 3] = (byte)'/';  	bufBytes [bufPos - 2] = (byte)'>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: bufBytes [bufPos - 3] = (byte)'/';  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: bufBytes [bufPos - 2] = (byte)'>';  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (textSegments.Length > 1) {  	for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  		WriteString (textSegments [i]);  		pos += textSegments [i].Length + 1;  		// Assertion: Replace the following if-else when the number of  		// replacement characters and substitute entities has grown  		// greater than 2 or 3.  		Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  		if (pos != text.Length) {  			if (text [pos] == this.REPLACE_CHARS [0])  				WriteRaw (this.ENTITY_SUBS [0]);  			else if (text [pos] == this.REPLACE_CHARS [1])  				WriteRaw (this.ENTITY_SUBS [1]);  			else if (this.REPLACE_CHARS_LENGTH == 3)  				// Only in ITrex.proj  				WriteRaw (this.ENTITY_SUBS [2]);  		}  	}  }  else  	this.xw.WriteString (text);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (textSegments.Length > 1) {  	for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  		WriteString (textSegments [i]);  		pos += textSegments [i].Length + 1;  		// Assertion: Replace the following if-else when the number of  		// replacement characters and substitute entities has grown  		// greater than 2 or 3.  		Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  		if (pos != text.Length) {  			if (text [pos] == this.REPLACE_CHARS [0])  				WriteRaw (this.ENTITY_SUBS [0]);  			else if (text [pos] == this.REPLACE_CHARS [1])  				WriteRaw (this.ENTITY_SUBS [1]);  			else if (this.REPLACE_CHARS_LENGTH == 3)  				// Only in ITrex.proj  				WriteRaw (this.ENTITY_SUBS [2]);  		}  	}  }  else  	this.xw.WriteString (text);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  	WriteString (textSegments [i]);  	pos += textSegments [i].Length + 1;  	// Assertion: Replace the following if-else when the number of  	// replacement characters and substitute entities has grown  	// greater than 2 or 3.  	Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  	if (pos != text.Length) {  		if (text [pos] == this.REPLACE_CHARS [0])  			WriteRaw (this.ENTITY_SUBS [0]);  		else if (text [pos] == this.REPLACE_CHARS [1])  			WriteRaw (this.ENTITY_SUBS [1]);  		else if (this.REPLACE_CHARS_LENGTH == 3)  			// Only in ITrex.proj  			WriteRaw (this.ENTITY_SUBS [2]);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  	WriteString (textSegments [i]);  	pos += textSegments [i].Length + 1;  	// Assertion: Replace the following if-else when the number of  	// replacement characters and substitute entities has grown  	// greater than 2 or 3.  	Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  	if (pos != text.Length) {  		if (text [pos] == this.REPLACE_CHARS [0])  			WriteRaw (this.ENTITY_SUBS [0]);  		else if (text [pos] == this.REPLACE_CHARS [1])  			WriteRaw (this.ENTITY_SUBS [1]);  		else if (this.REPLACE_CHARS_LENGTH == 3)  			// Only in ITrex.proj  			WriteRaw (this.ENTITY_SUBS [2]);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (pos != text.Length) {  	if (text [pos] == this.REPLACE_CHARS [0])  		WriteRaw (this.ENTITY_SUBS [0]);  	else if (text [pos] == this.REPLACE_CHARS [1])  		WriteRaw (this.ENTITY_SUBS [1]);  	else if (this.REPLACE_CHARS_LENGTH == 3)  		// Only in ITrex.proj  		WriteRaw (this.ENTITY_SUBS [2]);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (pos != text.Length) {  	if (text [pos] == this.REPLACE_CHARS [0])  		WriteRaw (this.ENTITY_SUBS [0]);  	else if (text [pos] == this.REPLACE_CHARS [1])  		WriteRaw (this.ENTITY_SUBS [1]);  	else if (this.REPLACE_CHARS_LENGTH == 3)  		// Only in ITrex.proj  		WriteRaw (this.ENTITY_SUBS [2]);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [0])  	WriteRaw (this.ENTITY_SUBS [0]);  else if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [0])  	WriteRaw (this.ENTITY_SUBS [0]);  else if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (textSegments.Length > 1) {  	for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  		this.xw.WriteRaw (textSegments [i]);  		pos += textSegments [i].Length + 1;  		// Assertion: Replace the following if-else when the number of  		// replacement characters and substitute entities has grown  		// greater than 2 or 3.  		Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  		if (pos != text.Length) {  			if (text [pos] == this.REPLACE_CHARS [0])  				WriteRaw (this.ENTITY_SUBS [0]);  			else if (text [pos] == this.REPLACE_CHARS [1])  				WriteRaw (this.ENTITY_SUBS [1]);  			else if (this.REPLACE_CHARS_LENGTH == 3)  				// Only in ITrex.proj  				WriteRaw (this.ENTITY_SUBS [2]);  		}  	}  }  else  	this.xw.WriteRaw (text);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (textSegments.Length > 1) {  	for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  		this.xw.WriteRaw (textSegments [i]);  		pos += textSegments [i].Length + 1;  		// Assertion: Replace the following if-else when the number of  		// replacement characters and substitute entities has grown  		// greater than 2 or 3.  		Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  		if (pos != text.Length) {  			if (text [pos] == this.REPLACE_CHARS [0])  				WriteRaw (this.ENTITY_SUBS [0]);  			else if (text [pos] == this.REPLACE_CHARS [1])  				WriteRaw (this.ENTITY_SUBS [1]);  			else if (this.REPLACE_CHARS_LENGTH == 3)  				// Only in ITrex.proj  				WriteRaw (this.ENTITY_SUBS [2]);  		}  	}  }  else  	this.xw.WriteRaw (text);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  	this.xw.WriteRaw (textSegments [i]);  	pos += textSegments [i].Length + 1;  	// Assertion: Replace the following if-else when the number of  	// replacement characters and substitute entities has grown  	// greater than 2 or 3.  	Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  	if (pos != text.Length) {  		if (text [pos] == this.REPLACE_CHARS [0])  			WriteRaw (this.ENTITY_SUBS [0]);  		else if (text [pos] == this.REPLACE_CHARS [1])  			WriteRaw (this.ENTITY_SUBS [1]);  		else if (this.REPLACE_CHARS_LENGTH == 3)  			// Only in ITrex.proj  			WriteRaw (this.ENTITY_SUBS [2]);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  	this.xw.WriteRaw (textSegments [i]);  	pos += textSegments [i].Length + 1;  	// Assertion: Replace the following if-else when the number of  	// replacement characters and substitute entities has grown  	// greater than 2 or 3.  	Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  	if (pos != text.Length) {  		if (text [pos] == this.REPLACE_CHARS [0])  			WriteRaw (this.ENTITY_SUBS [0]);  		else if (text [pos] == this.REPLACE_CHARS [1])  			WriteRaw (this.ENTITY_SUBS [1]);  		else if (this.REPLACE_CHARS_LENGTH == 3)  			// Only in ITrex.proj  			WriteRaw (this.ENTITY_SUBS [2]);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (pos != text.Length) {  	if (text [pos] == this.REPLACE_CHARS [0])  		WriteRaw (this.ENTITY_SUBS [0]);  	else if (text [pos] == this.REPLACE_CHARS [1])  		WriteRaw (this.ENTITY_SUBS [1]);  	else if (this.REPLACE_CHARS_LENGTH == 3)  		// Only in ITrex.proj  		WriteRaw (this.ENTITY_SUBS [2]);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (pos != text.Length) {  	if (text [pos] == this.REPLACE_CHARS [0])  		WriteRaw (this.ENTITY_SUBS [0]);  	else if (text [pos] == this.REPLACE_CHARS [1])  		WriteRaw (this.ENTITY_SUBS [1]);  	else if (this.REPLACE_CHARS_LENGTH == 3)  		// Only in ITrex.proj  		WriteRaw (this.ENTITY_SUBS [2]);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [0])  	WriteRaw (this.ENTITY_SUBS [0]);  else if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [0])  	WriteRaw (this.ENTITY_SUBS [0]);  else if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The following statement contains a magic number: try {  	new {  		log'  		args = new {  			foData'  			diffList'  			addedOrRemovedDiff'  			categoryId'  			categoryName'  			bookId'  			bookName'  			archivedDate'  			mstLog'  			debugOption  		}  	}  	#region Set Variables  	.SelectNewSingle (x => new {  		x.args'  		x.log'  		isDebug = x.args.debugOption != EDebug.NotDebug'  		foStoryBlocks = x.args.foData.StoryBlocks'  		foHavingGroupId = x.args.foData.HavingGroupId'  		foBlks_BlkCs_ILsHavingId = x.args.foData.Blks_BlkCs_ILsHavingId'  		foBlkCsAsTocTitleInStory = x.args.foData.BlkCsAsTocTitleInStory'  		NotFounds = new XDocument (new XElement ("Root")).Root  	}).SelectNewSingle (x => new {  		x.args'  		x.log'  		x.isDebug'  		x.NotFounds'  		x.foHavingGroupId'  		x.foBlks_BlkCs_ILsHavingId'  		x.foBlkCsAsTocTitleInStory'  		DiffLists = x.args.diffList.Union (new Difference () {  			DiffItem = DiffItem.Default  		}.ToIEnumerable ())// diffList == null での例外を防ぐ  		.GroupBy (x1 => x1.DiffItem).GroupBy (_ => 1).First ().SelectNewSingle (x1 => new {  			Story = x1.Where (x2 => x2.Key == DiffItem.Story).FirstOrDefault ()'  			MSIds = x1.Where (x2 => x2.Key == DiffItem.MSIds).FirstOrDefault ()'  			MSId = x1.Where (x2 => x2.Key == DiffItem.MSId).FirstOrDefault ()'  			Toc = x1.Where (x2 => x2.Key == DiffItem.Toc).FirstOrDefault ()'  			Illst = x1.Where (x2 => x2.Key == DiffItem.Illst).FirstOrDefault ()  		})  	}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly ("FoMSIds(group).Count : " + y.foHavingGroupId.Count' 1)).WithAddingLog (x => x.log' x => x.AddMsgOnly ("Has set variables"' 1))  	#endregion  	#region Main process  	.DoActionSingle (x =>  {  		#region Function  		// Create message about difference as following.  		// [差分発生箇所の種別]  		//   差分詳細  		//   差分発生箇所のId  		Func<string' string' Difference' string> DiffMsgFmt = (item' idName' e) => string.Format ("【 {0} 】\r  {1}\r{2}\r  {3} :{4}"' item' e.DiffMessage' Fo.ANNMSG_BOUND' idName' e.Id.IdString);  		// 差分発生箇所の Id を表示しない場合  		Func<string' Difference' string> DiffMsgFmtNoId = (item' e) => string.Format ("【 {0} 】\r  {1}\r"' item' e.DiffMessage);  		#endregion  		#region Add annotation attributes with item kind.  		// !! EAnnotSettings.LOPaint は denon 要望による実装だが、たち消えになる模様、経過見て削除か  		#region Toc  		if (x.DiffLists.Toc != null)  			x.DiffLists.Toc.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlkCsAsTocTitleInStory.FirstOrDefault (x1 => x1.IsMatchAttrVal (Cs.ID' "bk" + DiffElm.RelatedStoryId));  				if (t != null)  					t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmtNoId ("Toc"/*' "目次Id"*/' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.TextNtrlByOthers) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : PaintDescends.None' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		#endregion  		#region Story  		if (x.DiffLists.Story != null)  			x.DiffLists.Story.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value == "x" + DiffElm.Id.IdString);  				if (t != null) {  					// 同一注釈が複数作成されることを防ぐため、AddAnnotAttrsAndDescendantsBGC() を利用しない  					//     story.id を id とする block が pdf において複数 columns を表現する場合、annotation attribute をつけると column 毎に同一注釈が作成されてしまう  					//     story に関する annotation attribute を持ち、描画領域を持たない <fo:block /> を child として追加する  					// Adding annotation  					var anntBlock = new XElement (Fo.BLOCK);  					t.AddFirst (anntBlock);  					// レイアウトへの影響は未知だが、実験した限りでは影響無し  					anntBlock.Add (AnnotAttrs (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmt ("Story"' "ストーリId"' DiffElm)' Fo.ANN_HOR_OFFSET).ToList ());  					// Painting  					if (delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint))  						t.PaintDescendantsBGC (PaintDescends.Yellow' x.isDebug);  				}  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		#endregion  		#region MSIds  		if (x.DiffLists.MSIds != null)  			x.DiffLists.MSIds.ToList ().ForEach (DiffElm =>  {  				var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id.IdString));  				if (t != null)  					t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : Fo.ANNRGB_PLEIN_LO// text diff never occurs in group.  					//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  					' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) ? AnnotIconName.None : AnnotIconName.Insert' DiffMsgFmt ("Group"' "グループID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		x.log.AddLap ("Toc' Story' MSIds : Has written annotations"' 1);  		#endregion  		#region MSId  		if (x.DiffLists.MSId != null)  			x.DiffLists.MSId.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.Where (x1 => x1.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).Select (x1 => DiffElm.IsCoverPage // 表紙の要素は background-color/image が反映されないものがあるので、直下の block-container タグに注釈を付ける  				? x1.Element (Fo.BLOCKCONTAINER) ?? x1 : x1).Distinct ()// 本来不要なはずだが、現状、同一 id を有する <block> <block-container> の pair が 3730CTamowyxqh:OBAOMDtypitbrs に存在する、それが表紙であると、同一 element が list に重複することになるので、対応した Oct.17.2015  				.ToList ();  				// ひとつだけのはずだが。  				if (t.Count > 0) {  					t.ForEach (x1 =>  {  						x1.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : DiffElm.DiffType.HasFlag (DiffType.Layout) ? Fo.ANNRGB_PLEIN_LO : Fo.ANNRGB_NONE//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  						' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) // 非表示 : RightPointer  表示 : no icon (paint descendants) !! except pagebreak item' which is pointed by RightPointer icon.  						| DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) && DiffElm.FilterFlag.HasFlag (ECmprElms.IsPageBreak) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? AnnotIconName.Insert : AnnotIconName.None' DiffMsgFmt ("Text"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.TextAllByOthers' ECmprElms.Nothing) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  						// !! test !!  						// リンク対象の文章が複数行にまたがる場合、行ごとに同一の注釈がつく(3行なら3つ)  						// operation のように、兄弟 MSId が fo に於いては Element(s) として表現される場合への対応として  						//     (言い換えると、DiffElm.LinkTagsPaintOrNot.Count < <fo:Basic-Link>.Count となる場合があり得ルので、その対策として)  						// .Take(DiffElm.LinkTagsPaintOrNot.Count) を挿入しているが、やや不安の残る対応  						if (DiffElm.LinkTagsPaintOrNot != null) {  							x1.Descendants (Fo.BASICLINK).Take (DiffElm.LinkTagsPaintOrNot.Count).Where (x2 => x2.Attribute (Fo.INTERNAL_DEST) != null).Where ((x2' i) => DiffElm.LinkTagsPaintOrNot [i]).ToList ().ForEach (x2 => // annotation is desirable  							//x2.Parent.AddAnnotAttrsAndDescendantsBGC(  							//  "#ff0"  							//' AnnotIconName.Help  							//' "test"  							//' PaintDescends.red  							//' x.isDebug));  							// annotation is undesirable  							x2.Parent.PaintDescendantsBGC (PaintDescends.Red' x.isDebug));  						}  					});  				}  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		x.log.AddLap ("MSId              : Has written annotations"' 1);  		#endregion  		#region Illustration  		if (x.DiffLists.Illst != null)  			x.DiffLists.Illst.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).ToMaybe ().MaybeM (x2 => x2.Descendants (Fo.EXTGRAPH).FirstOrDefault ());  				if (t.HasValue)  					t.Value.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_NONE' AnnotIconName.None' DiffMsgFmt ("Illustration"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? PaintDescends.Magenta : PaintDescends.Yellow' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		x.log.AddLap ("Illst             : Has written annotations"' 1);  		#endregion  		x.log.AddMsgOnly ("fin adding annotation attrs by item kind."' 1);  		#endregion  		#region Added or Removed  		// Use AddAnnotAttrsForce() 'because Showing "added" and "removed" prevail over other changes.  		if (x.args.addedOrRemovedDiff != null) {  			#region MSId added  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSId).ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id));  				//if (t != null)  				if (t != null && DiffElm.AddedOrRemoved == DiffStatus.Added)  					// 工数未獲得 == コメントアウトし、above line を利用する　ことで削除も該当箇所表記となる  					t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? Fo.ANNRGB_BYOHTERS : DiffElm.AddedOrRemoved == DiffStatus.Removed ? Fo.ANNRGB_REMOVED : Fo.ANNRGB_NONE' DiffElm.AddedOrRemoved == DiffStatus.Removed ? AnnotIconName.RightPointer : AnnotIconName.None' (DiffElm.AddedOrRemoved == DiffStatus.Added ? "追加" : "削除") + "  \r  内部リンクID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.AdditonalMsg.Contains (Fo.ANNMSG_BYOTHERS) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  			});  			#endregion  			#region Story added  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).Where (x1 => x1.AddedOrRemoved == DiffStatus.Added).ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (x1 => x1.Attribute (Cs.ID).Value == "x" + DiffElm.Id);  				// Add AnnotAttrs  				if (t != null) {  					// remove all AnnotAttrs in descendents. (MSId / MSIds differences.)  					t.Descendants ().ToList ().ForEach (y => y.RemoveAnnotAtttrs ());  					t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? "#f0f" : "#fff"' AnnotIconName.None' "追加  \r  ストーリID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  				}  				else  					x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  			});  			#endregion  			#region Story removed => to head  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).ToList ().ForEach (y => x.NotFounds.Add (y.ConvertAddingRemovingToDiffElm ()));  			#endregion  			#region MSIds added by other (MSIds の追加削除は、「他ブックに依る追加のみ」を抽出している)  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSIds).ToList ().ForEach (DiffElm =>  {  				var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id));  				if (t != null)  					t.AddAnnotAttrsAndDescendantsBGCForce (Fo.ANNRGB_BYOHTERS' AnnotIconName.None' "追加" + "  \r  グループID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' PaintDescends.Magenta' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  			});  			#endregion  		}  		x.log.AddLap ("Added or Removed  : Has written annotations"' 1);  		#endregion  		#region Add summery and data notfounded on top page  		var t1 = x.args.foData.FoData.Root.Elements (Fo.PAGESEQUENCE).FirstOrDefault (x1 => x1.IsMatchAttrVal ("master-reference"' "PageMaster-FCover"));  		var TopPage = t1 != null ? t1.Element (Fo.FLOW).Element (Fo.BLOCK) : x.args.foData.FoData.Root.Descendants (Fo.FLOW).First ().Element (Fo.BLOCK).Element (Fo.BLOCK);  		#region Func AddDummyBlkCntnr  		Func<XElement' int' XElement> AddDummyBlkCntnr = (elm' left) => new XElement (Fo.BLOCKCONTAINER' new XAttribute ("inline-progression-dimension"' "20%")' new XAttribute ("block-progression-dimension"' "20%")' new XAttribute ("absolute-position"' "absolute")' new XAttribute ("left"' string.Format ("{0}mm"' left))' new XAttribute ("top"' "0mm")).SelectNewSingle (x1 =>  {  			// !! Side effect !!  			// 2種の fo data 形態を確認済み、後者の処理を怠るとツメが消える  			if (elm.Element (Fo.BLOCK) != null)  				elm.Element (Fo.BLOCK).AddFirst (x1);  			else  				elm.AddFirst (x1);  			return x1;  		});  		#endregion  		#region Add annotations  		// header  		AddDummyBlkCntnr (TopPage' -100/* out of sheet */).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_HEADER' AnnotIconName.Help' string.Format ("{0}{1}{0}{2}\r{0}比較対象レイアウトパラメータ\r{3}\r{0}"' new string ('='' 30) + "\r"' DateTime.Now.ToString ("yyyy/M/d (ddd) HH:mm 作成\r")' string.Format ("カテゴリ\r  {0}\r  {1}\rブック\r  {2}\r  {3}\r抽出項目\r  {4}\r比較対象アーカイブ作成日時\r  {5:yyyy/M/d HH:mm}"' x.args.categoryName' x.args.categoryId' x.args.bookName' x.args.bookId' delphiParams.ComparisonElmsMsg.JoinStringWith ("\r  ")' x.args.archivedDate)' delphiParams.NeedLOCompare ? delphiParams.LOParameters.Select (y => "  " + y).Aggregate ((a' b) => a + "\r" + b) : "  比較しない")' PaintDescends.None' x.isDebug);  		// not founds  		AddDummyBlkCntnr (TopPage' -2).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_NOTFOUNDS' AnnotIconName.Star' string.Format ("{0}{1}\r{0}"' new string ('='' 30) + "\r"' x.NotFounds.Elements ().Count () > 0 ? x.NotFounds.ToString () : "")' PaintDescends.None' x.isDebug);  		#endregion  		#endregion  	});  	#endregion  }  finally {  	mstLog.logMessages.AddRange (log.logMessages.Skip (1));  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The following statement contains a magic number: try {  	new {  		log'  		args = new {  			foData'  			diffList'  			addedOrRemovedDiff'  			categoryId'  			categoryName'  			bookId'  			bookName'  			archivedDate'  			mstLog'  			debugOption  		}  	}  	#region Set Variables  	.SelectNewSingle (x => new {  		x.args'  		x.log'  		isDebug = x.args.debugOption != EDebug.NotDebug'  		foStoryBlocks = x.args.foData.StoryBlocks'  		foHavingGroupId = x.args.foData.HavingGroupId'  		foBlks_BlkCs_ILsHavingId = x.args.foData.Blks_BlkCs_ILsHavingId'  		foBlkCsAsTocTitleInStory = x.args.foData.BlkCsAsTocTitleInStory'  		NotFounds = new XDocument (new XElement ("Root")).Root  	}).SelectNewSingle (x => new {  		x.args'  		x.log'  		x.isDebug'  		x.NotFounds'  		x.foHavingGroupId'  		x.foBlks_BlkCs_ILsHavingId'  		x.foBlkCsAsTocTitleInStory'  		DiffLists = x.args.diffList.Union (new Difference () {  			DiffItem = DiffItem.Default  		}.ToIEnumerable ())// diffList == null での例外を防ぐ  		.GroupBy (x1 => x1.DiffItem).GroupBy (_ => 1).First ().SelectNewSingle (x1 => new {  			Story = x1.Where (x2 => x2.Key == DiffItem.Story).FirstOrDefault ()'  			MSIds = x1.Where (x2 => x2.Key == DiffItem.MSIds).FirstOrDefault ()'  			MSId = x1.Where (x2 => x2.Key == DiffItem.MSId).FirstOrDefault ()'  			Toc = x1.Where (x2 => x2.Key == DiffItem.Toc).FirstOrDefault ()'  			Illst = x1.Where (x2 => x2.Key == DiffItem.Illst).FirstOrDefault ()  		})  	}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly ("FoMSIds(group).Count : " + y.foHavingGroupId.Count' 1)).WithAddingLog (x => x.log' x => x.AddMsgOnly ("Has set variables"' 1))  	#endregion  	#region Main process  	.DoActionSingle (x =>  {  		#region Function  		// Create message about difference as following.  		// [差分発生箇所の種別]  		//   差分詳細  		//   差分発生箇所のId  		Func<string' string' Difference' string> DiffMsgFmt = (item' idName' e) => string.Format ("【 {0} 】\r  {1}\r{2}\r  {3} :{4}"' item' e.DiffMessage' Fo.ANNMSG_BOUND' idName' e.Id.IdString);  		// 差分発生箇所の Id を表示しない場合  		Func<string' Difference' string> DiffMsgFmtNoId = (item' e) => string.Format ("【 {0} 】\r  {1}\r"' item' e.DiffMessage);  		#endregion  		#region Add annotation attributes with item kind.  		// !! EAnnotSettings.LOPaint は denon 要望による実装だが、たち消えになる模様、経過見て削除か  		#region Toc  		if (x.DiffLists.Toc != null)  			x.DiffLists.Toc.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlkCsAsTocTitleInStory.FirstOrDefault (x1 => x1.IsMatchAttrVal (Cs.ID' "bk" + DiffElm.RelatedStoryId));  				if (t != null)  					t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmtNoId ("Toc"/*' "目次Id"*/' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.TextNtrlByOthers) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : PaintDescends.None' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		#endregion  		#region Story  		if (x.DiffLists.Story != null)  			x.DiffLists.Story.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value == "x" + DiffElm.Id.IdString);  				if (t != null) {  					// 同一注釈が複数作成されることを防ぐため、AddAnnotAttrsAndDescendantsBGC() を利用しない  					//     story.id を id とする block が pdf において複数 columns を表現する場合、annotation attribute をつけると column 毎に同一注釈が作成されてしまう  					//     story に関する annotation attribute を持ち、描画領域を持たない <fo:block /> を child として追加する  					// Adding annotation  					var anntBlock = new XElement (Fo.BLOCK);  					t.AddFirst (anntBlock);  					// レイアウトへの影響は未知だが、実験した限りでは影響無し  					anntBlock.Add (AnnotAttrs (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmt ("Story"' "ストーリId"' DiffElm)' Fo.ANN_HOR_OFFSET).ToList ());  					// Painting  					if (delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint))  						t.PaintDescendantsBGC (PaintDescends.Yellow' x.isDebug);  				}  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		#endregion  		#region MSIds  		if (x.DiffLists.MSIds != null)  			x.DiffLists.MSIds.ToList ().ForEach (DiffElm =>  {  				var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id.IdString));  				if (t != null)  					t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : Fo.ANNRGB_PLEIN_LO// text diff never occurs in group.  					//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  					' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) ? AnnotIconName.None : AnnotIconName.Insert' DiffMsgFmt ("Group"' "グループID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		x.log.AddLap ("Toc' Story' MSIds : Has written annotations"' 1);  		#endregion  		#region MSId  		if (x.DiffLists.MSId != null)  			x.DiffLists.MSId.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.Where (x1 => x1.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).Select (x1 => DiffElm.IsCoverPage // 表紙の要素は background-color/image が反映されないものがあるので、直下の block-container タグに注釈を付ける  				? x1.Element (Fo.BLOCKCONTAINER) ?? x1 : x1).Distinct ()// 本来不要なはずだが、現状、同一 id を有する <block> <block-container> の pair が 3730CTamowyxqh:OBAOMDtypitbrs に存在する、それが表紙であると、同一 element が list に重複することになるので、対応した Oct.17.2015  				.ToList ();  				// ひとつだけのはずだが。  				if (t.Count > 0) {  					t.ForEach (x1 =>  {  						x1.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : DiffElm.DiffType.HasFlag (DiffType.Layout) ? Fo.ANNRGB_PLEIN_LO : Fo.ANNRGB_NONE//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  						' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) // 非表示 : RightPointer  表示 : no icon (paint descendants) !! except pagebreak item' which is pointed by RightPointer icon.  						| DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) && DiffElm.FilterFlag.HasFlag (ECmprElms.IsPageBreak) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? AnnotIconName.Insert : AnnotIconName.None' DiffMsgFmt ("Text"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.TextAllByOthers' ECmprElms.Nothing) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  						// !! test !!  						// リンク対象の文章が複数行にまたがる場合、行ごとに同一の注釈がつく(3行なら3つ)  						// operation のように、兄弟 MSId が fo に於いては Element(s) として表現される場合への対応として  						//     (言い換えると、DiffElm.LinkTagsPaintOrNot.Count < <fo:Basic-Link>.Count となる場合があり得ルので、その対策として)  						// .Take(DiffElm.LinkTagsPaintOrNot.Count) を挿入しているが、やや不安の残る対応  						if (DiffElm.LinkTagsPaintOrNot != null) {  							x1.Descendants (Fo.BASICLINK).Take (DiffElm.LinkTagsPaintOrNot.Count).Where (x2 => x2.Attribute (Fo.INTERNAL_DEST) != null).Where ((x2' i) => DiffElm.LinkTagsPaintOrNot [i]).ToList ().ForEach (x2 => // annotation is desirable  							//x2.Parent.AddAnnotAttrsAndDescendantsBGC(  							//  "#ff0"  							//' AnnotIconName.Help  							//' "test"  							//' PaintDescends.red  							//' x.isDebug));  							// annotation is undesirable  							x2.Parent.PaintDescendantsBGC (PaintDescends.Red' x.isDebug));  						}  					});  				}  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		x.log.AddLap ("MSId              : Has written annotations"' 1);  		#endregion  		#region Illustration  		if (x.DiffLists.Illst != null)  			x.DiffLists.Illst.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).ToMaybe ().MaybeM (x2 => x2.Descendants (Fo.EXTGRAPH).FirstOrDefault ());  				if (t.HasValue)  					t.Value.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_NONE' AnnotIconName.None' DiffMsgFmt ("Illustration"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? PaintDescends.Magenta : PaintDescends.Yellow' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		x.log.AddLap ("Illst             : Has written annotations"' 1);  		#endregion  		x.log.AddMsgOnly ("fin adding annotation attrs by item kind."' 1);  		#endregion  		#region Added or Removed  		// Use AddAnnotAttrsForce() 'because Showing "added" and "removed" prevail over other changes.  		if (x.args.addedOrRemovedDiff != null) {  			#region MSId added  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSId).ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id));  				//if (t != null)  				if (t != null && DiffElm.AddedOrRemoved == DiffStatus.Added)  					// 工数未獲得 == コメントアウトし、above line を利用する　ことで削除も該当箇所表記となる  					t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? Fo.ANNRGB_BYOHTERS : DiffElm.AddedOrRemoved == DiffStatus.Removed ? Fo.ANNRGB_REMOVED : Fo.ANNRGB_NONE' DiffElm.AddedOrRemoved == DiffStatus.Removed ? AnnotIconName.RightPointer : AnnotIconName.None' (DiffElm.AddedOrRemoved == DiffStatus.Added ? "追加" : "削除") + "  \r  内部リンクID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.AdditonalMsg.Contains (Fo.ANNMSG_BYOTHERS) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  			});  			#endregion  			#region Story added  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).Where (x1 => x1.AddedOrRemoved == DiffStatus.Added).ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (x1 => x1.Attribute (Cs.ID).Value == "x" + DiffElm.Id);  				// Add AnnotAttrs  				if (t != null) {  					// remove all AnnotAttrs in descendents. (MSId / MSIds differences.)  					t.Descendants ().ToList ().ForEach (y => y.RemoveAnnotAtttrs ());  					t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? "#f0f" : "#fff"' AnnotIconName.None' "追加  \r  ストーリID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  				}  				else  					x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  			});  			#endregion  			#region Story removed => to head  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).ToList ().ForEach (y => x.NotFounds.Add (y.ConvertAddingRemovingToDiffElm ()));  			#endregion  			#region MSIds added by other (MSIds の追加削除は、「他ブックに依る追加のみ」を抽出している)  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSIds).ToList ().ForEach (DiffElm =>  {  				var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id));  				if (t != null)  					t.AddAnnotAttrsAndDescendantsBGCForce (Fo.ANNRGB_BYOHTERS' AnnotIconName.None' "追加" + "  \r  グループID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' PaintDescends.Magenta' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  			});  			#endregion  		}  		x.log.AddLap ("Added or Removed  : Has written annotations"' 1);  		#endregion  		#region Add summery and data notfounded on top page  		var t1 = x.args.foData.FoData.Root.Elements (Fo.PAGESEQUENCE).FirstOrDefault (x1 => x1.IsMatchAttrVal ("master-reference"' "PageMaster-FCover"));  		var TopPage = t1 != null ? t1.Element (Fo.FLOW).Element (Fo.BLOCK) : x.args.foData.FoData.Root.Descendants (Fo.FLOW).First ().Element (Fo.BLOCK).Element (Fo.BLOCK);  		#region Func AddDummyBlkCntnr  		Func<XElement' int' XElement> AddDummyBlkCntnr = (elm' left) => new XElement (Fo.BLOCKCONTAINER' new XAttribute ("inline-progression-dimension"' "20%")' new XAttribute ("block-progression-dimension"' "20%")' new XAttribute ("absolute-position"' "absolute")' new XAttribute ("left"' string.Format ("{0}mm"' left))' new XAttribute ("top"' "0mm")).SelectNewSingle (x1 =>  {  			// !! Side effect !!  			// 2種の fo data 形態を確認済み、後者の処理を怠るとツメが消える  			if (elm.Element (Fo.BLOCK) != null)  				elm.Element (Fo.BLOCK).AddFirst (x1);  			else  				elm.AddFirst (x1);  			return x1;  		});  		#endregion  		#region Add annotations  		// header  		AddDummyBlkCntnr (TopPage' -100/* out of sheet */).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_HEADER' AnnotIconName.Help' string.Format ("{0}{1}{0}{2}\r{0}比較対象レイアウトパラメータ\r{3}\r{0}"' new string ('='' 30) + "\r"' DateTime.Now.ToString ("yyyy/M/d (ddd) HH:mm 作成\r")' string.Format ("カテゴリ\r  {0}\r  {1}\rブック\r  {2}\r  {3}\r抽出項目\r  {4}\r比較対象アーカイブ作成日時\r  {5:yyyy/M/d HH:mm}"' x.args.categoryName' x.args.categoryId' x.args.bookName' x.args.bookId' delphiParams.ComparisonElmsMsg.JoinStringWith ("\r  ")' x.args.archivedDate)' delphiParams.NeedLOCompare ? delphiParams.LOParameters.Select (y => "  " + y).Aggregate ((a' b) => a + "\r" + b) : "  比較しない")' PaintDescends.None' x.isDebug);  		// not founds  		AddDummyBlkCntnr (TopPage' -2).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_NOTFOUNDS' AnnotIconName.Star' string.Format ("{0}{1}\r{0}"' new string ('='' 30) + "\r"' x.NotFounds.Elements ().Count () > 0 ? x.NotFounds.ToString () : "")' PaintDescends.None' x.isDebug);  		#endregion  		#endregion  	});  	#endregion  }  finally {  	mstLog.logMessages.AddRange (log.logMessages.Skip (1));  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The following statement contains a magic number: try {  	new {  		log'  		args = new {  			foData'  			diffList'  			addedOrRemovedDiff'  			categoryId'  			categoryName'  			bookId'  			bookName'  			archivedDate'  			mstLog'  			debugOption  		}  	}  	#region Set Variables  	.SelectNewSingle (x => new {  		x.args'  		x.log'  		isDebug = x.args.debugOption != EDebug.NotDebug'  		foStoryBlocks = x.args.foData.StoryBlocks'  		foHavingGroupId = x.args.foData.HavingGroupId'  		foBlks_BlkCs_ILsHavingId = x.args.foData.Blks_BlkCs_ILsHavingId'  		foBlkCsAsTocTitleInStory = x.args.foData.BlkCsAsTocTitleInStory'  		NotFounds = new XDocument (new XElement ("Root")).Root  	}).SelectNewSingle (x => new {  		x.args'  		x.log'  		x.isDebug'  		x.NotFounds'  		x.foHavingGroupId'  		x.foBlks_BlkCs_ILsHavingId'  		x.foBlkCsAsTocTitleInStory'  		DiffLists = x.args.diffList.Union (new Difference () {  			DiffItem = DiffItem.Default  		}.ToIEnumerable ())// diffList == null での例外を防ぐ  		.GroupBy (x1 => x1.DiffItem).GroupBy (_ => 1).First ().SelectNewSingle (x1 => new {  			Story = x1.Where (x2 => x2.Key == DiffItem.Story).FirstOrDefault ()'  			MSIds = x1.Where (x2 => x2.Key == DiffItem.MSIds).FirstOrDefault ()'  			MSId = x1.Where (x2 => x2.Key == DiffItem.MSId).FirstOrDefault ()'  			Toc = x1.Where (x2 => x2.Key == DiffItem.Toc).FirstOrDefault ()'  			Illst = x1.Where (x2 => x2.Key == DiffItem.Illst).FirstOrDefault ()  		})  	}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly ("FoMSIds(group).Count : " + y.foHavingGroupId.Count' 1)).WithAddingLog (x => x.log' x => x.AddMsgOnly ("Has set variables"' 1))  	#endregion  	#region Main process  	.DoActionSingle (x =>  {  		#region Function  		// Create message about difference as following.  		// [差分発生箇所の種別]  		//   差分詳細  		//   差分発生箇所のId  		Func<string' string' Difference' string> DiffMsgFmt = (item' idName' e) => string.Format ("【 {0} 】\r  {1}\r{2}\r  {3} :{4}"' item' e.DiffMessage' Fo.ANNMSG_BOUND' idName' e.Id.IdString);  		// 差分発生箇所の Id を表示しない場合  		Func<string' Difference' string> DiffMsgFmtNoId = (item' e) => string.Format ("【 {0} 】\r  {1}\r"' item' e.DiffMessage);  		#endregion  		#region Add annotation attributes with item kind.  		// !! EAnnotSettings.LOPaint は denon 要望による実装だが、たち消えになる模様、経過見て削除か  		#region Toc  		if (x.DiffLists.Toc != null)  			x.DiffLists.Toc.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlkCsAsTocTitleInStory.FirstOrDefault (x1 => x1.IsMatchAttrVal (Cs.ID' "bk" + DiffElm.RelatedStoryId));  				if (t != null)  					t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmtNoId ("Toc"/*' "目次Id"*/' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.TextNtrlByOthers) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : PaintDescends.None' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		#endregion  		#region Story  		if (x.DiffLists.Story != null)  			x.DiffLists.Story.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value == "x" + DiffElm.Id.IdString);  				if (t != null) {  					// 同一注釈が複数作成されることを防ぐため、AddAnnotAttrsAndDescendantsBGC() を利用しない  					//     story.id を id とする block が pdf において複数 columns を表現する場合、annotation attribute をつけると column 毎に同一注釈が作成されてしまう  					//     story に関する annotation attribute を持ち、描画領域を持たない <fo:block /> を child として追加する  					// Adding annotation  					var anntBlock = new XElement (Fo.BLOCK);  					t.AddFirst (anntBlock);  					// レイアウトへの影響は未知だが、実験した限りでは影響無し  					anntBlock.Add (AnnotAttrs (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmt ("Story"' "ストーリId"' DiffElm)' Fo.ANN_HOR_OFFSET).ToList ());  					// Painting  					if (delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint))  						t.PaintDescendantsBGC (PaintDescends.Yellow' x.isDebug);  				}  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		#endregion  		#region MSIds  		if (x.DiffLists.MSIds != null)  			x.DiffLists.MSIds.ToList ().ForEach (DiffElm =>  {  				var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id.IdString));  				if (t != null)  					t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : Fo.ANNRGB_PLEIN_LO// text diff never occurs in group.  					//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  					' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) ? AnnotIconName.None : AnnotIconName.Insert' DiffMsgFmt ("Group"' "グループID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		x.log.AddLap ("Toc' Story' MSIds : Has written annotations"' 1);  		#endregion  		#region MSId  		if (x.DiffLists.MSId != null)  			x.DiffLists.MSId.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.Where (x1 => x1.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).Select (x1 => DiffElm.IsCoverPage // 表紙の要素は background-color/image が反映されないものがあるので、直下の block-container タグに注釈を付ける  				? x1.Element (Fo.BLOCKCONTAINER) ?? x1 : x1).Distinct ()// 本来不要なはずだが、現状、同一 id を有する <block> <block-container> の pair が 3730CTamowyxqh:OBAOMDtypitbrs に存在する、それが表紙であると、同一 element が list に重複することになるので、対応した Oct.17.2015  				.ToList ();  				// ひとつだけのはずだが。  				if (t.Count > 0) {  					t.ForEach (x1 =>  {  						x1.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : DiffElm.DiffType.HasFlag (DiffType.Layout) ? Fo.ANNRGB_PLEIN_LO : Fo.ANNRGB_NONE//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  						' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) // 非表示 : RightPointer  表示 : no icon (paint descendants) !! except pagebreak item' which is pointed by RightPointer icon.  						| DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) && DiffElm.FilterFlag.HasFlag (ECmprElms.IsPageBreak) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? AnnotIconName.Insert : AnnotIconName.None' DiffMsgFmt ("Text"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.TextAllByOthers' ECmprElms.Nothing) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  						// !! test !!  						// リンク対象の文章が複数行にまたがる場合、行ごとに同一の注釈がつく(3行なら3つ)  						// operation のように、兄弟 MSId が fo に於いては Element(s) として表現される場合への対応として  						//     (言い換えると、DiffElm.LinkTagsPaintOrNot.Count < <fo:Basic-Link>.Count となる場合があり得ルので、その対策として)  						// .Take(DiffElm.LinkTagsPaintOrNot.Count) を挿入しているが、やや不安の残る対応  						if (DiffElm.LinkTagsPaintOrNot != null) {  							x1.Descendants (Fo.BASICLINK).Take (DiffElm.LinkTagsPaintOrNot.Count).Where (x2 => x2.Attribute (Fo.INTERNAL_DEST) != null).Where ((x2' i) => DiffElm.LinkTagsPaintOrNot [i]).ToList ().ForEach (x2 => // annotation is desirable  							//x2.Parent.AddAnnotAttrsAndDescendantsBGC(  							//  "#ff0"  							//' AnnotIconName.Help  							//' "test"  							//' PaintDescends.red  							//' x.isDebug));  							// annotation is undesirable  							x2.Parent.PaintDescendantsBGC (PaintDescends.Red' x.isDebug));  						}  					});  				}  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		x.log.AddLap ("MSId              : Has written annotations"' 1);  		#endregion  		#region Illustration  		if (x.DiffLists.Illst != null)  			x.DiffLists.Illst.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).ToMaybe ().MaybeM (x2 => x2.Descendants (Fo.EXTGRAPH).FirstOrDefault ());  				if (t.HasValue)  					t.Value.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_NONE' AnnotIconName.None' DiffMsgFmt ("Illustration"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? PaintDescends.Magenta : PaintDescends.Yellow' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		x.log.AddLap ("Illst             : Has written annotations"' 1);  		#endregion  		x.log.AddMsgOnly ("fin adding annotation attrs by item kind."' 1);  		#endregion  		#region Added or Removed  		// Use AddAnnotAttrsForce() 'because Showing "added" and "removed" prevail over other changes.  		if (x.args.addedOrRemovedDiff != null) {  			#region MSId added  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSId).ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id));  				//if (t != null)  				if (t != null && DiffElm.AddedOrRemoved == DiffStatus.Added)  					// 工数未獲得 == コメントアウトし、above line を利用する　ことで削除も該当箇所表記となる  					t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? Fo.ANNRGB_BYOHTERS : DiffElm.AddedOrRemoved == DiffStatus.Removed ? Fo.ANNRGB_REMOVED : Fo.ANNRGB_NONE' DiffElm.AddedOrRemoved == DiffStatus.Removed ? AnnotIconName.RightPointer : AnnotIconName.None' (DiffElm.AddedOrRemoved == DiffStatus.Added ? "追加" : "削除") + "  \r  内部リンクID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.AdditonalMsg.Contains (Fo.ANNMSG_BYOTHERS) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  			});  			#endregion  			#region Story added  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).Where (x1 => x1.AddedOrRemoved == DiffStatus.Added).ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (x1 => x1.Attribute (Cs.ID).Value == "x" + DiffElm.Id);  				// Add AnnotAttrs  				if (t != null) {  					// remove all AnnotAttrs in descendents. (MSId / MSIds differences.)  					t.Descendants ().ToList ().ForEach (y => y.RemoveAnnotAtttrs ());  					t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? "#f0f" : "#fff"' AnnotIconName.None' "追加  \r  ストーリID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  				}  				else  					x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  			});  			#endregion  			#region Story removed => to head  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).ToList ().ForEach (y => x.NotFounds.Add (y.ConvertAddingRemovingToDiffElm ()));  			#endregion  			#region MSIds added by other (MSIds の追加削除は、「他ブックに依る追加のみ」を抽出している)  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSIds).ToList ().ForEach (DiffElm =>  {  				var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id));  				if (t != null)  					t.AddAnnotAttrsAndDescendantsBGCForce (Fo.ANNRGB_BYOHTERS' AnnotIconName.None' "追加" + "  \r  グループID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' PaintDescends.Magenta' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  			});  			#endregion  		}  		x.log.AddLap ("Added or Removed  : Has written annotations"' 1);  		#endregion  		#region Add summery and data notfounded on top page  		var t1 = x.args.foData.FoData.Root.Elements (Fo.PAGESEQUENCE).FirstOrDefault (x1 => x1.IsMatchAttrVal ("master-reference"' "PageMaster-FCover"));  		var TopPage = t1 != null ? t1.Element (Fo.FLOW).Element (Fo.BLOCK) : x.args.foData.FoData.Root.Descendants (Fo.FLOW).First ().Element (Fo.BLOCK).Element (Fo.BLOCK);  		#region Func AddDummyBlkCntnr  		Func<XElement' int' XElement> AddDummyBlkCntnr = (elm' left) => new XElement (Fo.BLOCKCONTAINER' new XAttribute ("inline-progression-dimension"' "20%")' new XAttribute ("block-progression-dimension"' "20%")' new XAttribute ("absolute-position"' "absolute")' new XAttribute ("left"' string.Format ("{0}mm"' left))' new XAttribute ("top"' "0mm")).SelectNewSingle (x1 =>  {  			// !! Side effect !!  			// 2種の fo data 形態を確認済み、後者の処理を怠るとツメが消える  			if (elm.Element (Fo.BLOCK) != null)  				elm.Element (Fo.BLOCK).AddFirst (x1);  			else  				elm.AddFirst (x1);  			return x1;  		});  		#endregion  		#region Add annotations  		// header  		AddDummyBlkCntnr (TopPage' -100/* out of sheet */).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_HEADER' AnnotIconName.Help' string.Format ("{0}{1}{0}{2}\r{0}比較対象レイアウトパラメータ\r{3}\r{0}"' new string ('='' 30) + "\r"' DateTime.Now.ToString ("yyyy/M/d (ddd) HH:mm 作成\r")' string.Format ("カテゴリ\r  {0}\r  {1}\rブック\r  {2}\r  {3}\r抽出項目\r  {4}\r比較対象アーカイブ作成日時\r  {5:yyyy/M/d HH:mm}"' x.args.categoryName' x.args.categoryId' x.args.bookName' x.args.bookId' delphiParams.ComparisonElmsMsg.JoinStringWith ("\r  ")' x.args.archivedDate)' delphiParams.NeedLOCompare ? delphiParams.LOParameters.Select (y => "  " + y).Aggregate ((a' b) => a + "\r" + b) : "  比較しない")' PaintDescends.None' x.isDebug);  		// not founds  		AddDummyBlkCntnr (TopPage' -2).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_NOTFOUNDS' AnnotIconName.Star' string.Format ("{0}{1}\r{0}"' new string ('='' 30) + "\r"' x.NotFounds.Elements ().Count () > 0 ? x.NotFounds.ToString () : "")' PaintDescends.None' x.isDebug);  		#endregion  		#endregion  	});  	#endregion  }  finally {  	mstLog.logMessages.AddRange (log.logMessages.Skip (1));  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The following statement contains a magic number: try {  	new {  		log'  		args = new {  			foData'  			diffList'  			addedOrRemovedDiff'  			categoryId'  			categoryName'  			bookId'  			bookName'  			archivedDate'  			mstLog'  			debugOption  		}  	}  	#region Set Variables  	.SelectNewSingle (x => new {  		x.args'  		x.log'  		isDebug = x.args.debugOption != EDebug.NotDebug'  		foStoryBlocks = x.args.foData.StoryBlocks'  		foHavingGroupId = x.args.foData.HavingGroupId'  		foBlks_BlkCs_ILsHavingId = x.args.foData.Blks_BlkCs_ILsHavingId'  		foBlkCsAsTocTitleInStory = x.args.foData.BlkCsAsTocTitleInStory'  		NotFounds = new XDocument (new XElement ("Root")).Root  	}).SelectNewSingle (x => new {  		x.args'  		x.log'  		x.isDebug'  		x.NotFounds'  		x.foHavingGroupId'  		x.foBlks_BlkCs_ILsHavingId'  		x.foBlkCsAsTocTitleInStory'  		DiffLists = x.args.diffList.Union (new Difference () {  			DiffItem = DiffItem.Default  		}.ToIEnumerable ())// diffList == null での例外を防ぐ  		.GroupBy (x1 => x1.DiffItem).GroupBy (_ => 1).First ().SelectNewSingle (x1 => new {  			Story = x1.Where (x2 => x2.Key == DiffItem.Story).FirstOrDefault ()'  			MSIds = x1.Where (x2 => x2.Key == DiffItem.MSIds).FirstOrDefault ()'  			MSId = x1.Where (x2 => x2.Key == DiffItem.MSId).FirstOrDefault ()'  			Toc = x1.Where (x2 => x2.Key == DiffItem.Toc).FirstOrDefault ()'  			Illst = x1.Where (x2 => x2.Key == DiffItem.Illst).FirstOrDefault ()  		})  	}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly ("FoMSIds(group).Count : " + y.foHavingGroupId.Count' 1)).WithAddingLog (x => x.log' x => x.AddMsgOnly ("Has set variables"' 1))  	#endregion  	#region Main process  	.DoActionSingle (x =>  {  		#region Function  		// Create message about difference as following.  		// [差分発生箇所の種別]  		//   差分詳細  		//   差分発生箇所のId  		Func<string' string' Difference' string> DiffMsgFmt = (item' idName' e) => string.Format ("【 {0} 】\r  {1}\r{2}\r  {3} :{4}"' item' e.DiffMessage' Fo.ANNMSG_BOUND' idName' e.Id.IdString);  		// 差分発生箇所の Id を表示しない場合  		Func<string' Difference' string> DiffMsgFmtNoId = (item' e) => string.Format ("【 {0} 】\r  {1}\r"' item' e.DiffMessage);  		#endregion  		#region Add annotation attributes with item kind.  		// !! EAnnotSettings.LOPaint は denon 要望による実装だが、たち消えになる模様、経過見て削除か  		#region Toc  		if (x.DiffLists.Toc != null)  			x.DiffLists.Toc.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlkCsAsTocTitleInStory.FirstOrDefault (x1 => x1.IsMatchAttrVal (Cs.ID' "bk" + DiffElm.RelatedStoryId));  				if (t != null)  					t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmtNoId ("Toc"/*' "目次Id"*/' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.TextNtrlByOthers) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : PaintDescends.None' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		#endregion  		#region Story  		if (x.DiffLists.Story != null)  			x.DiffLists.Story.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value == "x" + DiffElm.Id.IdString);  				if (t != null) {  					// 同一注釈が複数作成されることを防ぐため、AddAnnotAttrsAndDescendantsBGC() を利用しない  					//     story.id を id とする block が pdf において複数 columns を表現する場合、annotation attribute をつけると column 毎に同一注釈が作成されてしまう  					//     story に関する annotation attribute を持ち、描画領域を持たない <fo:block /> を child として追加する  					// Adding annotation  					var anntBlock = new XElement (Fo.BLOCK);  					t.AddFirst (anntBlock);  					// レイアウトへの影響は未知だが、実験した限りでは影響無し  					anntBlock.Add (AnnotAttrs (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmt ("Story"' "ストーリId"' DiffElm)' Fo.ANN_HOR_OFFSET).ToList ());  					// Painting  					if (delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint))  						t.PaintDescendantsBGC (PaintDescends.Yellow' x.isDebug);  				}  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		#endregion  		#region MSIds  		if (x.DiffLists.MSIds != null)  			x.DiffLists.MSIds.ToList ().ForEach (DiffElm =>  {  				var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id.IdString));  				if (t != null)  					t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : Fo.ANNRGB_PLEIN_LO// text diff never occurs in group.  					//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  					' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) ? AnnotIconName.None : AnnotIconName.Insert' DiffMsgFmt ("Group"' "グループID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		x.log.AddLap ("Toc' Story' MSIds : Has written annotations"' 1);  		#endregion  		#region MSId  		if (x.DiffLists.MSId != null)  			x.DiffLists.MSId.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.Where (x1 => x1.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).Select (x1 => DiffElm.IsCoverPage // 表紙の要素は background-color/image が反映されないものがあるので、直下の block-container タグに注釈を付ける  				? x1.Element (Fo.BLOCKCONTAINER) ?? x1 : x1).Distinct ()// 本来不要なはずだが、現状、同一 id を有する <block> <block-container> の pair が 3730CTamowyxqh:OBAOMDtypitbrs に存在する、それが表紙であると、同一 element が list に重複することになるので、対応した Oct.17.2015  				.ToList ();  				// ひとつだけのはずだが。  				if (t.Count > 0) {  					t.ForEach (x1 =>  {  						x1.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : DiffElm.DiffType.HasFlag (DiffType.Layout) ? Fo.ANNRGB_PLEIN_LO : Fo.ANNRGB_NONE//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  						' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) // 非表示 : RightPointer  表示 : no icon (paint descendants) !! except pagebreak item' which is pointed by RightPointer icon.  						| DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) && DiffElm.FilterFlag.HasFlag (ECmprElms.IsPageBreak) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? AnnotIconName.Insert : AnnotIconName.None' DiffMsgFmt ("Text"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.TextAllByOthers' ECmprElms.Nothing) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  						// !! test !!  						// リンク対象の文章が複数行にまたがる場合、行ごとに同一の注釈がつく(3行なら3つ)  						// operation のように、兄弟 MSId が fo に於いては Element(s) として表現される場合への対応として  						//     (言い換えると、DiffElm.LinkTagsPaintOrNot.Count < <fo:Basic-Link>.Count となる場合があり得ルので、その対策として)  						// .Take(DiffElm.LinkTagsPaintOrNot.Count) を挿入しているが、やや不安の残る対応  						if (DiffElm.LinkTagsPaintOrNot != null) {  							x1.Descendants (Fo.BASICLINK).Take (DiffElm.LinkTagsPaintOrNot.Count).Where (x2 => x2.Attribute (Fo.INTERNAL_DEST) != null).Where ((x2' i) => DiffElm.LinkTagsPaintOrNot [i]).ToList ().ForEach (x2 => // annotation is desirable  							//x2.Parent.AddAnnotAttrsAndDescendantsBGC(  							//  "#ff0"  							//' AnnotIconName.Help  							//' "test"  							//' PaintDescends.red  							//' x.isDebug));  							// annotation is undesirable  							x2.Parent.PaintDescendantsBGC (PaintDescends.Red' x.isDebug));  						}  					});  				}  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		x.log.AddLap ("MSId              : Has written annotations"' 1);  		#endregion  		#region Illustration  		if (x.DiffLists.Illst != null)  			x.DiffLists.Illst.ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).ToMaybe ().MaybeM (x2 => x2.Descendants (Fo.EXTGRAPH).FirstOrDefault ());  				if (t.HasValue)  					t.Value.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_NONE' AnnotIconName.None' DiffMsgFmt ("Illustration"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? PaintDescends.Magenta : PaintDescends.Yellow' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.FormatToXElm ());  			});  		x.log.AddLap ("Illst             : Has written annotations"' 1);  		#endregion  		x.log.AddMsgOnly ("fin adding annotation attrs by item kind."' 1);  		#endregion  		#region Added or Removed  		// Use AddAnnotAttrsForce() 'because Showing "added" and "removed" prevail over other changes.  		if (x.args.addedOrRemovedDiff != null) {  			#region MSId added  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSId).ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id));  				//if (t != null)  				if (t != null && DiffElm.AddedOrRemoved == DiffStatus.Added)  					// 工数未獲得 == コメントアウトし、above line を利用する　ことで削除も該当箇所表記となる  					t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? Fo.ANNRGB_BYOHTERS : DiffElm.AddedOrRemoved == DiffStatus.Removed ? Fo.ANNRGB_REMOVED : Fo.ANNRGB_NONE' DiffElm.AddedOrRemoved == DiffStatus.Removed ? AnnotIconName.RightPointer : AnnotIconName.None' (DiffElm.AddedOrRemoved == DiffStatus.Added ? "追加" : "削除") + "  \r  内部リンクID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.AdditonalMsg.Contains (Fo.ANNMSG_BYOTHERS) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  			});  			#endregion  			#region Story added  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).Where (x1 => x1.AddedOrRemoved == DiffStatus.Added).ToList ().ForEach (DiffElm =>  {  				var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (x1 => x1.Attribute (Cs.ID).Value == "x" + DiffElm.Id);  				// Add AnnotAttrs  				if (t != null) {  					// remove all AnnotAttrs in descendents. (MSId / MSIds differences.)  					t.Descendants ().ToList ().ForEach (y => y.RemoveAnnotAtttrs ());  					t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? "#f0f" : "#fff"' AnnotIconName.None' "追加  \r  ストーリID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  				}  				else  					x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  			});  			#endregion  			#region Story removed => to head  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).ToList ().ForEach (y => x.NotFounds.Add (y.ConvertAddingRemovingToDiffElm ()));  			#endregion  			#region MSIds added by other (MSIds の追加削除は、「他ブックに依る追加のみ」を抽出している)  			x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSIds).ToList ().ForEach (DiffElm =>  {  				var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id));  				if (t != null)  					t.AddAnnotAttrsAndDescendantsBGCForce (Fo.ANNRGB_BYOHTERS' AnnotIconName.None' "追加" + "  \r  グループID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' PaintDescends.Magenta' x.isDebug);  				else  					x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  			});  			#endregion  		}  		x.log.AddLap ("Added or Removed  : Has written annotations"' 1);  		#endregion  		#region Add summery and data notfounded on top page  		var t1 = x.args.foData.FoData.Root.Elements (Fo.PAGESEQUENCE).FirstOrDefault (x1 => x1.IsMatchAttrVal ("master-reference"' "PageMaster-FCover"));  		var TopPage = t1 != null ? t1.Element (Fo.FLOW).Element (Fo.BLOCK) : x.args.foData.FoData.Root.Descendants (Fo.FLOW).First ().Element (Fo.BLOCK).Element (Fo.BLOCK);  		#region Func AddDummyBlkCntnr  		Func<XElement' int' XElement> AddDummyBlkCntnr = (elm' left) => new XElement (Fo.BLOCKCONTAINER' new XAttribute ("inline-progression-dimension"' "20%")' new XAttribute ("block-progression-dimension"' "20%")' new XAttribute ("absolute-position"' "absolute")' new XAttribute ("left"' string.Format ("{0}mm"' left))' new XAttribute ("top"' "0mm")).SelectNewSingle (x1 =>  {  			// !! Side effect !!  			// 2種の fo data 形態を確認済み、後者の処理を怠るとツメが消える  			if (elm.Element (Fo.BLOCK) != null)  				elm.Element (Fo.BLOCK).AddFirst (x1);  			else  				elm.AddFirst (x1);  			return x1;  		});  		#endregion  		#region Add annotations  		// header  		AddDummyBlkCntnr (TopPage' -100/* out of sheet */).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_HEADER' AnnotIconName.Help' string.Format ("{0}{1}{0}{2}\r{0}比較対象レイアウトパラメータ\r{3}\r{0}"' new string ('='' 30) + "\r"' DateTime.Now.ToString ("yyyy/M/d (ddd) HH:mm 作成\r")' string.Format ("カテゴリ\r  {0}\r  {1}\rブック\r  {2}\r  {3}\r抽出項目\r  {4}\r比較対象アーカイブ作成日時\r  {5:yyyy/M/d HH:mm}"' x.args.categoryName' x.args.categoryId' x.args.bookName' x.args.bookId' delphiParams.ComparisonElmsMsg.JoinStringWith ("\r  ")' x.args.archivedDate)' delphiParams.NeedLOCompare ? delphiParams.LOParameters.Select (y => "  " + y).Aggregate ((a' b) => a + "\r" + b) : "  比較しない")' PaintDescends.None' x.isDebug);  		// not founds  		AddDummyBlkCntnr (TopPage' -2).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_NOTFOUNDS' AnnotIconName.Star' string.Format ("{0}{1}\r{0}"' new string ('='' 30) + "\r"' x.NotFounds.Elements ().Count () > 0 ? x.NotFounds.ToString () : "")' PaintDescends.None' x.isDebug);  		#endregion  		#endregion  	});  	#endregion  }  finally {  	mstLog.logMessages.AddRange (log.logMessages.Skip (1));  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The following statement contains a magic number: new {  	log'  	args = new {  		foData'  		diffList'  		addedOrRemovedDiff'  		categoryId'  		categoryName'  		bookId'  		bookName'  		archivedDate'  		mstLog'  		debugOption  	}  }  #region Set Variables  .SelectNewSingle (x => new {  	x.args'  	x.log'  	isDebug = x.args.debugOption != EDebug.NotDebug'  	foStoryBlocks = x.args.foData.StoryBlocks'  	foHavingGroupId = x.args.foData.HavingGroupId'  	foBlks_BlkCs_ILsHavingId = x.args.foData.Blks_BlkCs_ILsHavingId'  	foBlkCsAsTocTitleInStory = x.args.foData.BlkCsAsTocTitleInStory'  	NotFounds = new XDocument (new XElement ("Root")).Root  }).SelectNewSingle (x => new {  	x.args'  	x.log'  	x.isDebug'  	x.NotFounds'  	x.foHavingGroupId'  	x.foBlks_BlkCs_ILsHavingId'  	x.foBlkCsAsTocTitleInStory'  	DiffLists = x.args.diffList.Union (new Difference () {  		DiffItem = DiffItem.Default  	}.ToIEnumerable ())// diffList == null での例外を防ぐ  	.GroupBy (x1 => x1.DiffItem).GroupBy (_ => 1).First ().SelectNewSingle (x1 => new {  		Story = x1.Where (x2 => x2.Key == DiffItem.Story).FirstOrDefault ()'  		MSIds = x1.Where (x2 => x2.Key == DiffItem.MSIds).FirstOrDefault ()'  		MSId = x1.Where (x2 => x2.Key == DiffItem.MSId).FirstOrDefault ()'  		Toc = x1.Where (x2 => x2.Key == DiffItem.Toc).FirstOrDefault ()'  		Illst = x1.Where (x2 => x2.Key == DiffItem.Illst).FirstOrDefault ()  	})  }).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly ("FoMSIds(group).Count : " + y.foHavingGroupId.Count' 1)).WithAddingLog (x => x.log' x => x.AddMsgOnly ("Has set variables"' 1))  #endregion  #region Main process  .DoActionSingle (x =>  {  	#region Function  	// Create message about difference as following.  	// [差分発生箇所の種別]  	//   差分詳細  	//   差分発生箇所のId  	Func<string' string' Difference' string> DiffMsgFmt = (item' idName' e) => string.Format ("【 {0} 】\r  {1}\r{2}\r  {3} :{4}"' item' e.DiffMessage' Fo.ANNMSG_BOUND' idName' e.Id.IdString);  	// 差分発生箇所の Id を表示しない場合  	Func<string' Difference' string> DiffMsgFmtNoId = (item' e) => string.Format ("【 {0} 】\r  {1}\r"' item' e.DiffMessage);  	#endregion  	#region Add annotation attributes with item kind.  	// !! EAnnotSettings.LOPaint は denon 要望による実装だが、たち消えになる模様、経過見て削除か  	#region Toc  	if (x.DiffLists.Toc != null)  		x.DiffLists.Toc.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlkCsAsTocTitleInStory.FirstOrDefault (x1 => x1.IsMatchAttrVal (Cs.ID' "bk" + DiffElm.RelatedStoryId));  			if (t != null)  				t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmtNoId ("Toc"/*' "目次Id"*/' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.TextNtrlByOthers) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : PaintDescends.None' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	#endregion  	#region Story  	if (x.DiffLists.Story != null)  		x.DiffLists.Story.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value == "x" + DiffElm.Id.IdString);  			if (t != null) {  				// 同一注釈が複数作成されることを防ぐため、AddAnnotAttrsAndDescendantsBGC() を利用しない  				//     story.id を id とする block が pdf において複数 columns を表現する場合、annotation attribute をつけると column 毎に同一注釈が作成されてしまう  				//     story に関する annotation attribute を持ち、描画領域を持たない <fo:block /> を child として追加する  				// Adding annotation  				var anntBlock = new XElement (Fo.BLOCK);  				t.AddFirst (anntBlock);  				// レイアウトへの影響は未知だが、実験した限りでは影響無し  				anntBlock.Add (AnnotAttrs (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmt ("Story"' "ストーリId"' DiffElm)' Fo.ANN_HOR_OFFSET).ToList ());  				// Painting  				if (delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint))  					t.PaintDescendantsBGC (PaintDescends.Yellow' x.isDebug);  			}  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	#endregion  	#region MSIds  	if (x.DiffLists.MSIds != null)  		x.DiffLists.MSIds.ToList ().ForEach (DiffElm =>  {  			var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id.IdString));  			if (t != null)  				t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : Fo.ANNRGB_PLEIN_LO// text diff never occurs in group.  				//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  				' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) ? AnnotIconName.None : AnnotIconName.Insert' DiffMsgFmt ("Group"' "グループID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	x.log.AddLap ("Toc' Story' MSIds : Has written annotations"' 1);  	#endregion  	#region MSId  	if (x.DiffLists.MSId != null)  		x.DiffLists.MSId.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.Where (x1 => x1.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).Select (x1 => DiffElm.IsCoverPage // 表紙の要素は background-color/image が反映されないものがあるので、直下の block-container タグに注釈を付ける  			? x1.Element (Fo.BLOCKCONTAINER) ?? x1 : x1).Distinct ()// 本来不要なはずだが、現状、同一 id を有する <block> <block-container> の pair が 3730CTamowyxqh:OBAOMDtypitbrs に存在する、それが表紙であると、同一 element が list に重複することになるので、対応した Oct.17.2015  			.ToList ();  			// ひとつだけのはずだが。  			if (t.Count > 0) {  				t.ForEach (x1 =>  {  					x1.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : DiffElm.DiffType.HasFlag (DiffType.Layout) ? Fo.ANNRGB_PLEIN_LO : Fo.ANNRGB_NONE//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  					' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) // 非表示 : RightPointer  表示 : no icon (paint descendants) !! except pagebreak item' which is pointed by RightPointer icon.  					| DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) && DiffElm.FilterFlag.HasFlag (ECmprElms.IsPageBreak) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? AnnotIconName.Insert : AnnotIconName.None' DiffMsgFmt ("Text"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.TextAllByOthers' ECmprElms.Nothing) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  					// !! test !!  					// リンク対象の文章が複数行にまたがる場合、行ごとに同一の注釈がつく(3行なら3つ)  					// operation のように、兄弟 MSId が fo に於いては Element(s) として表現される場合への対応として  					//     (言い換えると、DiffElm.LinkTagsPaintOrNot.Count < <fo:Basic-Link>.Count となる場合があり得ルので、その対策として)  					// .Take(DiffElm.LinkTagsPaintOrNot.Count) を挿入しているが、やや不安の残る対応  					if (DiffElm.LinkTagsPaintOrNot != null) {  						x1.Descendants (Fo.BASICLINK).Take (DiffElm.LinkTagsPaintOrNot.Count).Where (x2 => x2.Attribute (Fo.INTERNAL_DEST) != null).Where ((x2' i) => DiffElm.LinkTagsPaintOrNot [i]).ToList ().ForEach (x2 => // annotation is desirable  						//x2.Parent.AddAnnotAttrsAndDescendantsBGC(  						//  "#ff0"  						//' AnnotIconName.Help  						//' "test"  						//' PaintDescends.red  						//' x.isDebug));  						// annotation is undesirable  						x2.Parent.PaintDescendantsBGC (PaintDescends.Red' x.isDebug));  					}  				});  			}  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	x.log.AddLap ("MSId              : Has written annotations"' 1);  	#endregion  	#region Illustration  	if (x.DiffLists.Illst != null)  		x.DiffLists.Illst.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).ToMaybe ().MaybeM (x2 => x2.Descendants (Fo.EXTGRAPH).FirstOrDefault ());  			if (t.HasValue)  				t.Value.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_NONE' AnnotIconName.None' DiffMsgFmt ("Illustration"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? PaintDescends.Magenta : PaintDescends.Yellow' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	x.log.AddLap ("Illst             : Has written annotations"' 1);  	#endregion  	x.log.AddMsgOnly ("fin adding annotation attrs by item kind."' 1);  	#endregion  	#region Added or Removed  	// Use AddAnnotAttrsForce() 'because Showing "added" and "removed" prevail over other changes.  	if (x.args.addedOrRemovedDiff != null) {  		#region MSId added  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSId).ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id));  			//if (t != null)  			if (t != null && DiffElm.AddedOrRemoved == DiffStatus.Added)  				// 工数未獲得 == コメントアウトし、above line を利用する　ことで削除も該当箇所表記となる  				t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? Fo.ANNRGB_BYOHTERS : DiffElm.AddedOrRemoved == DiffStatus.Removed ? Fo.ANNRGB_REMOVED : Fo.ANNRGB_NONE' DiffElm.AddedOrRemoved == DiffStatus.Removed ? AnnotIconName.RightPointer : AnnotIconName.None' (DiffElm.AddedOrRemoved == DiffStatus.Added ? "追加" : "削除") + "  \r  内部リンクID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.AdditonalMsg.Contains (Fo.ANNMSG_BYOTHERS) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  		});  		#endregion  		#region Story added  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).Where (x1 => x1.AddedOrRemoved == DiffStatus.Added).ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (x1 => x1.Attribute (Cs.ID).Value == "x" + DiffElm.Id);  			// Add AnnotAttrs  			if (t != null) {  				// remove all AnnotAttrs in descendents. (MSId / MSIds differences.)  				t.Descendants ().ToList ().ForEach (y => y.RemoveAnnotAtttrs ());  				t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? "#f0f" : "#fff"' AnnotIconName.None' "追加  \r  ストーリID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  			}  			else  				x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  		});  		#endregion  		#region Story removed => to head  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).ToList ().ForEach (y => x.NotFounds.Add (y.ConvertAddingRemovingToDiffElm ()));  		#endregion  		#region MSIds added by other (MSIds の追加削除は、「他ブックに依る追加のみ」を抽出している)  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSIds).ToList ().ForEach (DiffElm =>  {  			var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id));  			if (t != null)  				t.AddAnnotAttrsAndDescendantsBGCForce (Fo.ANNRGB_BYOHTERS' AnnotIconName.None' "追加" + "  \r  グループID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' PaintDescends.Magenta' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  		});  		#endregion  	}  	x.log.AddLap ("Added or Removed  : Has written annotations"' 1);  	#endregion  	#region Add summery and data notfounded on top page  	var t1 = x.args.foData.FoData.Root.Elements (Fo.PAGESEQUENCE).FirstOrDefault (x1 => x1.IsMatchAttrVal ("master-reference"' "PageMaster-FCover"));  	var TopPage = t1 != null ? t1.Element (Fo.FLOW).Element (Fo.BLOCK) : x.args.foData.FoData.Root.Descendants (Fo.FLOW).First ().Element (Fo.BLOCK).Element (Fo.BLOCK);  	#region Func AddDummyBlkCntnr  	Func<XElement' int' XElement> AddDummyBlkCntnr = (elm' left) => new XElement (Fo.BLOCKCONTAINER' new XAttribute ("inline-progression-dimension"' "20%")' new XAttribute ("block-progression-dimension"' "20%")' new XAttribute ("absolute-position"' "absolute")' new XAttribute ("left"' string.Format ("{0}mm"' left))' new XAttribute ("top"' "0mm")).SelectNewSingle (x1 =>  {  		// !! Side effect !!  		// 2種の fo data 形態を確認済み、後者の処理を怠るとツメが消える  		if (elm.Element (Fo.BLOCK) != null)  			elm.Element (Fo.BLOCK).AddFirst (x1);  		else  			elm.AddFirst (x1);  		return x1;  	});  	#endregion  	#region Add annotations  	// header  	AddDummyBlkCntnr (TopPage' -100/* out of sheet */).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_HEADER' AnnotIconName.Help' string.Format ("{0}{1}{0}{2}\r{0}比較対象レイアウトパラメータ\r{3}\r{0}"' new string ('='' 30) + "\r"' DateTime.Now.ToString ("yyyy/M/d (ddd) HH:mm 作成\r")' string.Format ("カテゴリ\r  {0}\r  {1}\rブック\r  {2}\r  {3}\r抽出項目\r  {4}\r比較対象アーカイブ作成日時\r  {5:yyyy/M/d HH:mm}"' x.args.categoryName' x.args.categoryId' x.args.bookName' x.args.bookId' delphiParams.ComparisonElmsMsg.JoinStringWith ("\r  ")' x.args.archivedDate)' delphiParams.NeedLOCompare ? delphiParams.LOParameters.Select (y => "  " + y).Aggregate ((a' b) => a + "\r" + b) : "  比較しない")' PaintDescends.None' x.isDebug);  	// not founds  	AddDummyBlkCntnr (TopPage' -2).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_NOTFOUNDS' AnnotIconName.Star' string.Format ("{0}{1}\r{0}"' new string ('='' 30) + "\r"' x.NotFounds.Elements ().Count () > 0 ? x.NotFounds.ToString () : "")' PaintDescends.None' x.isDebug);  	#endregion  	#endregion  });  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The following statement contains a magic number: new {  	log'  	args = new {  		foData'  		diffList'  		addedOrRemovedDiff'  		categoryId'  		categoryName'  		bookId'  		bookName'  		archivedDate'  		mstLog'  		debugOption  	}  }  #region Set Variables  .SelectNewSingle (x => new {  	x.args'  	x.log'  	isDebug = x.args.debugOption != EDebug.NotDebug'  	foStoryBlocks = x.args.foData.StoryBlocks'  	foHavingGroupId = x.args.foData.HavingGroupId'  	foBlks_BlkCs_ILsHavingId = x.args.foData.Blks_BlkCs_ILsHavingId'  	foBlkCsAsTocTitleInStory = x.args.foData.BlkCsAsTocTitleInStory'  	NotFounds = new XDocument (new XElement ("Root")).Root  }).SelectNewSingle (x => new {  	x.args'  	x.log'  	x.isDebug'  	x.NotFounds'  	x.foHavingGroupId'  	x.foBlks_BlkCs_ILsHavingId'  	x.foBlkCsAsTocTitleInStory'  	DiffLists = x.args.diffList.Union (new Difference () {  		DiffItem = DiffItem.Default  	}.ToIEnumerable ())// diffList == null での例外を防ぐ  	.GroupBy (x1 => x1.DiffItem).GroupBy (_ => 1).First ().SelectNewSingle (x1 => new {  		Story = x1.Where (x2 => x2.Key == DiffItem.Story).FirstOrDefault ()'  		MSIds = x1.Where (x2 => x2.Key == DiffItem.MSIds).FirstOrDefault ()'  		MSId = x1.Where (x2 => x2.Key == DiffItem.MSId).FirstOrDefault ()'  		Toc = x1.Where (x2 => x2.Key == DiffItem.Toc).FirstOrDefault ()'  		Illst = x1.Where (x2 => x2.Key == DiffItem.Illst).FirstOrDefault ()  	})  }).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly ("FoMSIds(group).Count : " + y.foHavingGroupId.Count' 1)).WithAddingLog (x => x.log' x => x.AddMsgOnly ("Has set variables"' 1))  #endregion  #region Main process  .DoActionSingle (x =>  {  	#region Function  	// Create message about difference as following.  	// [差分発生箇所の種別]  	//   差分詳細  	//   差分発生箇所のId  	Func<string' string' Difference' string> DiffMsgFmt = (item' idName' e) => string.Format ("【 {0} 】\r  {1}\r{2}\r  {3} :{4}"' item' e.DiffMessage' Fo.ANNMSG_BOUND' idName' e.Id.IdString);  	// 差分発生箇所の Id を表示しない場合  	Func<string' Difference' string> DiffMsgFmtNoId = (item' e) => string.Format ("【 {0} 】\r  {1}\r"' item' e.DiffMessage);  	#endregion  	#region Add annotation attributes with item kind.  	// !! EAnnotSettings.LOPaint は denon 要望による実装だが、たち消えになる模様、経過見て削除か  	#region Toc  	if (x.DiffLists.Toc != null)  		x.DiffLists.Toc.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlkCsAsTocTitleInStory.FirstOrDefault (x1 => x1.IsMatchAttrVal (Cs.ID' "bk" + DiffElm.RelatedStoryId));  			if (t != null)  				t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmtNoId ("Toc"/*' "目次Id"*/' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.TextNtrlByOthers) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : PaintDescends.None' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	#endregion  	#region Story  	if (x.DiffLists.Story != null)  		x.DiffLists.Story.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value == "x" + DiffElm.Id.IdString);  			if (t != null) {  				// 同一注釈が複数作成されることを防ぐため、AddAnnotAttrsAndDescendantsBGC() を利用しない  				//     story.id を id とする block が pdf において複数 columns を表現する場合、annotation attribute をつけると column 毎に同一注釈が作成されてしまう  				//     story に関する annotation attribute を持ち、描画領域を持たない <fo:block /> を child として追加する  				// Adding annotation  				var anntBlock = new XElement (Fo.BLOCK);  				t.AddFirst (anntBlock);  				// レイアウトへの影響は未知だが、実験した限りでは影響無し  				anntBlock.Add (AnnotAttrs (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmt ("Story"' "ストーリId"' DiffElm)' Fo.ANN_HOR_OFFSET).ToList ());  				// Painting  				if (delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint))  					t.PaintDescendantsBGC (PaintDescends.Yellow' x.isDebug);  			}  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	#endregion  	#region MSIds  	if (x.DiffLists.MSIds != null)  		x.DiffLists.MSIds.ToList ().ForEach (DiffElm =>  {  			var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id.IdString));  			if (t != null)  				t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : Fo.ANNRGB_PLEIN_LO// text diff never occurs in group.  				//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  				' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) ? AnnotIconName.None : AnnotIconName.Insert' DiffMsgFmt ("Group"' "グループID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	x.log.AddLap ("Toc' Story' MSIds : Has written annotations"' 1);  	#endregion  	#region MSId  	if (x.DiffLists.MSId != null)  		x.DiffLists.MSId.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.Where (x1 => x1.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).Select (x1 => DiffElm.IsCoverPage // 表紙の要素は background-color/image が反映されないものがあるので、直下の block-container タグに注釈を付ける  			? x1.Element (Fo.BLOCKCONTAINER) ?? x1 : x1).Distinct ()// 本来不要なはずだが、現状、同一 id を有する <block> <block-container> の pair が 3730CTamowyxqh:OBAOMDtypitbrs に存在する、それが表紙であると、同一 element が list に重複することになるので、対応した Oct.17.2015  			.ToList ();  			// ひとつだけのはずだが。  			if (t.Count > 0) {  				t.ForEach (x1 =>  {  					x1.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : DiffElm.DiffType.HasFlag (DiffType.Layout) ? Fo.ANNRGB_PLEIN_LO : Fo.ANNRGB_NONE//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  					' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) // 非表示 : RightPointer  表示 : no icon (paint descendants) !! except pagebreak item' which is pointed by RightPointer icon.  					| DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) && DiffElm.FilterFlag.HasFlag (ECmprElms.IsPageBreak) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? AnnotIconName.Insert : AnnotIconName.None' DiffMsgFmt ("Text"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.TextAllByOthers' ECmprElms.Nothing) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  					// !! test !!  					// リンク対象の文章が複数行にまたがる場合、行ごとに同一の注釈がつく(3行なら3つ)  					// operation のように、兄弟 MSId が fo に於いては Element(s) として表現される場合への対応として  					//     (言い換えると、DiffElm.LinkTagsPaintOrNot.Count < <fo:Basic-Link>.Count となる場合があり得ルので、その対策として)  					// .Take(DiffElm.LinkTagsPaintOrNot.Count) を挿入しているが、やや不安の残る対応  					if (DiffElm.LinkTagsPaintOrNot != null) {  						x1.Descendants (Fo.BASICLINK).Take (DiffElm.LinkTagsPaintOrNot.Count).Where (x2 => x2.Attribute (Fo.INTERNAL_DEST) != null).Where ((x2' i) => DiffElm.LinkTagsPaintOrNot [i]).ToList ().ForEach (x2 => // annotation is desirable  						//x2.Parent.AddAnnotAttrsAndDescendantsBGC(  						//  "#ff0"  						//' AnnotIconName.Help  						//' "test"  						//' PaintDescends.red  						//' x.isDebug));  						// annotation is undesirable  						x2.Parent.PaintDescendantsBGC (PaintDescends.Red' x.isDebug));  					}  				});  			}  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	x.log.AddLap ("MSId              : Has written annotations"' 1);  	#endregion  	#region Illustration  	if (x.DiffLists.Illst != null)  		x.DiffLists.Illst.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).ToMaybe ().MaybeM (x2 => x2.Descendants (Fo.EXTGRAPH).FirstOrDefault ());  			if (t.HasValue)  				t.Value.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_NONE' AnnotIconName.None' DiffMsgFmt ("Illustration"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? PaintDescends.Magenta : PaintDescends.Yellow' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	x.log.AddLap ("Illst             : Has written annotations"' 1);  	#endregion  	x.log.AddMsgOnly ("fin adding annotation attrs by item kind."' 1);  	#endregion  	#region Added or Removed  	// Use AddAnnotAttrsForce() 'because Showing "added" and "removed" prevail over other changes.  	if (x.args.addedOrRemovedDiff != null) {  		#region MSId added  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSId).ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id));  			//if (t != null)  			if (t != null && DiffElm.AddedOrRemoved == DiffStatus.Added)  				// 工数未獲得 == コメントアウトし、above line を利用する　ことで削除も該当箇所表記となる  				t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? Fo.ANNRGB_BYOHTERS : DiffElm.AddedOrRemoved == DiffStatus.Removed ? Fo.ANNRGB_REMOVED : Fo.ANNRGB_NONE' DiffElm.AddedOrRemoved == DiffStatus.Removed ? AnnotIconName.RightPointer : AnnotIconName.None' (DiffElm.AddedOrRemoved == DiffStatus.Added ? "追加" : "削除") + "  \r  内部リンクID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.AdditonalMsg.Contains (Fo.ANNMSG_BYOTHERS) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  		});  		#endregion  		#region Story added  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).Where (x1 => x1.AddedOrRemoved == DiffStatus.Added).ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (x1 => x1.Attribute (Cs.ID).Value == "x" + DiffElm.Id);  			// Add AnnotAttrs  			if (t != null) {  				// remove all AnnotAttrs in descendents. (MSId / MSIds differences.)  				t.Descendants ().ToList ().ForEach (y => y.RemoveAnnotAtttrs ());  				t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? "#f0f" : "#fff"' AnnotIconName.None' "追加  \r  ストーリID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  			}  			else  				x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  		});  		#endregion  		#region Story removed => to head  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).ToList ().ForEach (y => x.NotFounds.Add (y.ConvertAddingRemovingToDiffElm ()));  		#endregion  		#region MSIds added by other (MSIds の追加削除は、「他ブックに依る追加のみ」を抽出している)  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSIds).ToList ().ForEach (DiffElm =>  {  			var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id));  			if (t != null)  				t.AddAnnotAttrsAndDescendantsBGCForce (Fo.ANNRGB_BYOHTERS' AnnotIconName.None' "追加" + "  \r  グループID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' PaintDescends.Magenta' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  		});  		#endregion  	}  	x.log.AddLap ("Added or Removed  : Has written annotations"' 1);  	#endregion  	#region Add summery and data notfounded on top page  	var t1 = x.args.foData.FoData.Root.Elements (Fo.PAGESEQUENCE).FirstOrDefault (x1 => x1.IsMatchAttrVal ("master-reference"' "PageMaster-FCover"));  	var TopPage = t1 != null ? t1.Element (Fo.FLOW).Element (Fo.BLOCK) : x.args.foData.FoData.Root.Descendants (Fo.FLOW).First ().Element (Fo.BLOCK).Element (Fo.BLOCK);  	#region Func AddDummyBlkCntnr  	Func<XElement' int' XElement> AddDummyBlkCntnr = (elm' left) => new XElement (Fo.BLOCKCONTAINER' new XAttribute ("inline-progression-dimension"' "20%")' new XAttribute ("block-progression-dimension"' "20%")' new XAttribute ("absolute-position"' "absolute")' new XAttribute ("left"' string.Format ("{0}mm"' left))' new XAttribute ("top"' "0mm")).SelectNewSingle (x1 =>  {  		// !! Side effect !!  		// 2種の fo data 形態を確認済み、後者の処理を怠るとツメが消える  		if (elm.Element (Fo.BLOCK) != null)  			elm.Element (Fo.BLOCK).AddFirst (x1);  		else  			elm.AddFirst (x1);  		return x1;  	});  	#endregion  	#region Add annotations  	// header  	AddDummyBlkCntnr (TopPage' -100/* out of sheet */).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_HEADER' AnnotIconName.Help' string.Format ("{0}{1}{0}{2}\r{0}比較対象レイアウトパラメータ\r{3}\r{0}"' new string ('='' 30) + "\r"' DateTime.Now.ToString ("yyyy/M/d (ddd) HH:mm 作成\r")' string.Format ("カテゴリ\r  {0}\r  {1}\rブック\r  {2}\r  {3}\r抽出項目\r  {4}\r比較対象アーカイブ作成日時\r  {5:yyyy/M/d HH:mm}"' x.args.categoryName' x.args.categoryId' x.args.bookName' x.args.bookId' delphiParams.ComparisonElmsMsg.JoinStringWith ("\r  ")' x.args.archivedDate)' delphiParams.NeedLOCompare ? delphiParams.LOParameters.Select (y => "  " + y).Aggregate ((a' b) => a + "\r" + b) : "  比較しない")' PaintDescends.None' x.isDebug);  	// not founds  	AddDummyBlkCntnr (TopPage' -2).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_NOTFOUNDS' AnnotIconName.Star' string.Format ("{0}{1}\r{0}"' new string ('='' 30) + "\r"' x.NotFounds.Elements ().Count () > 0 ? x.NotFounds.ToString () : "")' PaintDescends.None' x.isDebug);  	#endregion  	#endregion  });  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The following statement contains a magic number: new {  	log'  	args = new {  		foData'  		diffList'  		addedOrRemovedDiff'  		categoryId'  		categoryName'  		bookId'  		bookName'  		archivedDate'  		mstLog'  		debugOption  	}  }  #region Set Variables  .SelectNewSingle (x => new {  	x.args'  	x.log'  	isDebug = x.args.debugOption != EDebug.NotDebug'  	foStoryBlocks = x.args.foData.StoryBlocks'  	foHavingGroupId = x.args.foData.HavingGroupId'  	foBlks_BlkCs_ILsHavingId = x.args.foData.Blks_BlkCs_ILsHavingId'  	foBlkCsAsTocTitleInStory = x.args.foData.BlkCsAsTocTitleInStory'  	NotFounds = new XDocument (new XElement ("Root")).Root  }).SelectNewSingle (x => new {  	x.args'  	x.log'  	x.isDebug'  	x.NotFounds'  	x.foHavingGroupId'  	x.foBlks_BlkCs_ILsHavingId'  	x.foBlkCsAsTocTitleInStory'  	DiffLists = x.args.diffList.Union (new Difference () {  		DiffItem = DiffItem.Default  	}.ToIEnumerable ())// diffList == null での例外を防ぐ  	.GroupBy (x1 => x1.DiffItem).GroupBy (_ => 1).First ().SelectNewSingle (x1 => new {  		Story = x1.Where (x2 => x2.Key == DiffItem.Story).FirstOrDefault ()'  		MSIds = x1.Where (x2 => x2.Key == DiffItem.MSIds).FirstOrDefault ()'  		MSId = x1.Where (x2 => x2.Key == DiffItem.MSId).FirstOrDefault ()'  		Toc = x1.Where (x2 => x2.Key == DiffItem.Toc).FirstOrDefault ()'  		Illst = x1.Where (x2 => x2.Key == DiffItem.Illst).FirstOrDefault ()  	})  }).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly ("FoMSIds(group).Count : " + y.foHavingGroupId.Count' 1)).WithAddingLog (x => x.log' x => x.AddMsgOnly ("Has set variables"' 1))  #endregion  #region Main process  .DoActionSingle (x =>  {  	#region Function  	// Create message about difference as following.  	// [差分発生箇所の種別]  	//   差分詳細  	//   差分発生箇所のId  	Func<string' string' Difference' string> DiffMsgFmt = (item' idName' e) => string.Format ("【 {0} 】\r  {1}\r{2}\r  {3} :{4}"' item' e.DiffMessage' Fo.ANNMSG_BOUND' idName' e.Id.IdString);  	// 差分発生箇所の Id を表示しない場合  	Func<string' Difference' string> DiffMsgFmtNoId = (item' e) => string.Format ("【 {0} 】\r  {1}\r"' item' e.DiffMessage);  	#endregion  	#region Add annotation attributes with item kind.  	// !! EAnnotSettings.LOPaint は denon 要望による実装だが、たち消えになる模様、経過見て削除か  	#region Toc  	if (x.DiffLists.Toc != null)  		x.DiffLists.Toc.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlkCsAsTocTitleInStory.FirstOrDefault (x1 => x1.IsMatchAttrVal (Cs.ID' "bk" + DiffElm.RelatedStoryId));  			if (t != null)  				t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmtNoId ("Toc"/*' "目次Id"*/' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.TextNtrlByOthers) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : PaintDescends.None' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	#endregion  	#region Story  	if (x.DiffLists.Story != null)  		x.DiffLists.Story.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value == "x" + DiffElm.Id.IdString);  			if (t != null) {  				// 同一注釈が複数作成されることを防ぐため、AddAnnotAttrsAndDescendantsBGC() を利用しない  				//     story.id を id とする block が pdf において複数 columns を表現する場合、annotation attribute をつけると column 毎に同一注釈が作成されてしまう  				//     story に関する annotation attribute を持ち、描画領域を持たない <fo:block /> を child として追加する  				// Adding annotation  				var anntBlock = new XElement (Fo.BLOCK);  				t.AddFirst (anntBlock);  				// レイアウトへの影響は未知だが、実験した限りでは影響無し  				anntBlock.Add (AnnotAttrs (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmt ("Story"' "ストーリId"' DiffElm)' Fo.ANN_HOR_OFFSET).ToList ());  				// Painting  				if (delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint))  					t.PaintDescendantsBGC (PaintDescends.Yellow' x.isDebug);  			}  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	#endregion  	#region MSIds  	if (x.DiffLists.MSIds != null)  		x.DiffLists.MSIds.ToList ().ForEach (DiffElm =>  {  			var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id.IdString));  			if (t != null)  				t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : Fo.ANNRGB_PLEIN_LO// text diff never occurs in group.  				//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  				' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) ? AnnotIconName.None : AnnotIconName.Insert' DiffMsgFmt ("Group"' "グループID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	x.log.AddLap ("Toc' Story' MSIds : Has written annotations"' 1);  	#endregion  	#region MSId  	if (x.DiffLists.MSId != null)  		x.DiffLists.MSId.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.Where (x1 => x1.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).Select (x1 => DiffElm.IsCoverPage // 表紙の要素は background-color/image が反映されないものがあるので、直下の block-container タグに注釈を付ける  			? x1.Element (Fo.BLOCKCONTAINER) ?? x1 : x1).Distinct ()// 本来不要なはずだが、現状、同一 id を有する <block> <block-container> の pair が 3730CTamowyxqh:OBAOMDtypitbrs に存在する、それが表紙であると、同一 element が list に重複することになるので、対応した Oct.17.2015  			.ToList ();  			// ひとつだけのはずだが。  			if (t.Count > 0) {  				t.ForEach (x1 =>  {  					x1.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : DiffElm.DiffType.HasFlag (DiffType.Layout) ? Fo.ANNRGB_PLEIN_LO : Fo.ANNRGB_NONE//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  					' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) // 非表示 : RightPointer  表示 : no icon (paint descendants) !! except pagebreak item' which is pointed by RightPointer icon.  					| DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) && DiffElm.FilterFlag.HasFlag (ECmprElms.IsPageBreak) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? AnnotIconName.Insert : AnnotIconName.None' DiffMsgFmt ("Text"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.TextAllByOthers' ECmprElms.Nothing) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  					// !! test !!  					// リンク対象の文章が複数行にまたがる場合、行ごとに同一の注釈がつく(3行なら3つ)  					// operation のように、兄弟 MSId が fo に於いては Element(s) として表現される場合への対応として  					//     (言い換えると、DiffElm.LinkTagsPaintOrNot.Count < <fo:Basic-Link>.Count となる場合があり得ルので、その対策として)  					// .Take(DiffElm.LinkTagsPaintOrNot.Count) を挿入しているが、やや不安の残る対応  					if (DiffElm.LinkTagsPaintOrNot != null) {  						x1.Descendants (Fo.BASICLINK).Take (DiffElm.LinkTagsPaintOrNot.Count).Where (x2 => x2.Attribute (Fo.INTERNAL_DEST) != null).Where ((x2' i) => DiffElm.LinkTagsPaintOrNot [i]).ToList ().ForEach (x2 => // annotation is desirable  						//x2.Parent.AddAnnotAttrsAndDescendantsBGC(  						//  "#ff0"  						//' AnnotIconName.Help  						//' "test"  						//' PaintDescends.red  						//' x.isDebug));  						// annotation is undesirable  						x2.Parent.PaintDescendantsBGC (PaintDescends.Red' x.isDebug));  					}  				});  			}  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	x.log.AddLap ("MSId              : Has written annotations"' 1);  	#endregion  	#region Illustration  	if (x.DiffLists.Illst != null)  		x.DiffLists.Illst.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).ToMaybe ().MaybeM (x2 => x2.Descendants (Fo.EXTGRAPH).FirstOrDefault ());  			if (t.HasValue)  				t.Value.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_NONE' AnnotIconName.None' DiffMsgFmt ("Illustration"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? PaintDescends.Magenta : PaintDescends.Yellow' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	x.log.AddLap ("Illst             : Has written annotations"' 1);  	#endregion  	x.log.AddMsgOnly ("fin adding annotation attrs by item kind."' 1);  	#endregion  	#region Added or Removed  	// Use AddAnnotAttrsForce() 'because Showing "added" and "removed" prevail over other changes.  	if (x.args.addedOrRemovedDiff != null) {  		#region MSId added  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSId).ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id));  			//if (t != null)  			if (t != null && DiffElm.AddedOrRemoved == DiffStatus.Added)  				// 工数未獲得 == コメントアウトし、above line を利用する　ことで削除も該当箇所表記となる  				t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? Fo.ANNRGB_BYOHTERS : DiffElm.AddedOrRemoved == DiffStatus.Removed ? Fo.ANNRGB_REMOVED : Fo.ANNRGB_NONE' DiffElm.AddedOrRemoved == DiffStatus.Removed ? AnnotIconName.RightPointer : AnnotIconName.None' (DiffElm.AddedOrRemoved == DiffStatus.Added ? "追加" : "削除") + "  \r  内部リンクID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.AdditonalMsg.Contains (Fo.ANNMSG_BYOTHERS) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  		});  		#endregion  		#region Story added  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).Where (x1 => x1.AddedOrRemoved == DiffStatus.Added).ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (x1 => x1.Attribute (Cs.ID).Value == "x" + DiffElm.Id);  			// Add AnnotAttrs  			if (t != null) {  				// remove all AnnotAttrs in descendents. (MSId / MSIds differences.)  				t.Descendants ().ToList ().ForEach (y => y.RemoveAnnotAtttrs ());  				t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? "#f0f" : "#fff"' AnnotIconName.None' "追加  \r  ストーリID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  			}  			else  				x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  		});  		#endregion  		#region Story removed => to head  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).ToList ().ForEach (y => x.NotFounds.Add (y.ConvertAddingRemovingToDiffElm ()));  		#endregion  		#region MSIds added by other (MSIds の追加削除は、「他ブックに依る追加のみ」を抽出している)  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSIds).ToList ().ForEach (DiffElm =>  {  			var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id));  			if (t != null)  				t.AddAnnotAttrsAndDescendantsBGCForce (Fo.ANNRGB_BYOHTERS' AnnotIconName.None' "追加" + "  \r  グループID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' PaintDescends.Magenta' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  		});  		#endregion  	}  	x.log.AddLap ("Added or Removed  : Has written annotations"' 1);  	#endregion  	#region Add summery and data notfounded on top page  	var t1 = x.args.foData.FoData.Root.Elements (Fo.PAGESEQUENCE).FirstOrDefault (x1 => x1.IsMatchAttrVal ("master-reference"' "PageMaster-FCover"));  	var TopPage = t1 != null ? t1.Element (Fo.FLOW).Element (Fo.BLOCK) : x.args.foData.FoData.Root.Descendants (Fo.FLOW).First ().Element (Fo.BLOCK).Element (Fo.BLOCK);  	#region Func AddDummyBlkCntnr  	Func<XElement' int' XElement> AddDummyBlkCntnr = (elm' left) => new XElement (Fo.BLOCKCONTAINER' new XAttribute ("inline-progression-dimension"' "20%")' new XAttribute ("block-progression-dimension"' "20%")' new XAttribute ("absolute-position"' "absolute")' new XAttribute ("left"' string.Format ("{0}mm"' left))' new XAttribute ("top"' "0mm")).SelectNewSingle (x1 =>  {  		// !! Side effect !!  		// 2種の fo data 形態を確認済み、後者の処理を怠るとツメが消える  		if (elm.Element (Fo.BLOCK) != null)  			elm.Element (Fo.BLOCK).AddFirst (x1);  		else  			elm.AddFirst (x1);  		return x1;  	});  	#endregion  	#region Add annotations  	// header  	AddDummyBlkCntnr (TopPage' -100/* out of sheet */).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_HEADER' AnnotIconName.Help' string.Format ("{0}{1}{0}{2}\r{0}比較対象レイアウトパラメータ\r{3}\r{0}"' new string ('='' 30) + "\r"' DateTime.Now.ToString ("yyyy/M/d (ddd) HH:mm 作成\r")' string.Format ("カテゴリ\r  {0}\r  {1}\rブック\r  {2}\r  {3}\r抽出項目\r  {4}\r比較対象アーカイブ作成日時\r  {5:yyyy/M/d HH:mm}"' x.args.categoryName' x.args.categoryId' x.args.bookName' x.args.bookId' delphiParams.ComparisonElmsMsg.JoinStringWith ("\r  ")' x.args.archivedDate)' delphiParams.NeedLOCompare ? delphiParams.LOParameters.Select (y => "  " + y).Aggregate ((a' b) => a + "\r" + b) : "  比較しない")' PaintDescends.None' x.isDebug);  	// not founds  	AddDummyBlkCntnr (TopPage' -2).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_NOTFOUNDS' AnnotIconName.Star' string.Format ("{0}{1}\r{0}"' new string ('='' 30) + "\r"' x.NotFounds.Elements ().Count () > 0 ? x.NotFounds.ToString () : "")' PaintDescends.None' x.isDebug);  	#endregion  	#endregion  });  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The following statement contains a magic number: new {  	log'  	args = new {  		foData'  		diffList'  		addedOrRemovedDiff'  		categoryId'  		categoryName'  		bookId'  		bookName'  		archivedDate'  		mstLog'  		debugOption  	}  }  #region Set Variables  .SelectNewSingle (x => new {  	x.args'  	x.log'  	isDebug = x.args.debugOption != EDebug.NotDebug'  	foStoryBlocks = x.args.foData.StoryBlocks'  	foHavingGroupId = x.args.foData.HavingGroupId'  	foBlks_BlkCs_ILsHavingId = x.args.foData.Blks_BlkCs_ILsHavingId'  	foBlkCsAsTocTitleInStory = x.args.foData.BlkCsAsTocTitleInStory'  	NotFounds = new XDocument (new XElement ("Root")).Root  }).SelectNewSingle (x => new {  	x.args'  	x.log'  	x.isDebug'  	x.NotFounds'  	x.foHavingGroupId'  	x.foBlks_BlkCs_ILsHavingId'  	x.foBlkCsAsTocTitleInStory'  	DiffLists = x.args.diffList.Union (new Difference () {  		DiffItem = DiffItem.Default  	}.ToIEnumerable ())// diffList == null での例外を防ぐ  	.GroupBy (x1 => x1.DiffItem).GroupBy (_ => 1).First ().SelectNewSingle (x1 => new {  		Story = x1.Where (x2 => x2.Key == DiffItem.Story).FirstOrDefault ()'  		MSIds = x1.Where (x2 => x2.Key == DiffItem.MSIds).FirstOrDefault ()'  		MSId = x1.Where (x2 => x2.Key == DiffItem.MSId).FirstOrDefault ()'  		Toc = x1.Where (x2 => x2.Key == DiffItem.Toc).FirstOrDefault ()'  		Illst = x1.Where (x2 => x2.Key == DiffItem.Illst).FirstOrDefault ()  	})  }).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly ("FoMSIds(group).Count : " + y.foHavingGroupId.Count' 1)).WithAddingLog (x => x.log' x => x.AddMsgOnly ("Has set variables"' 1))  #endregion  #region Main process  .DoActionSingle (x =>  {  	#region Function  	// Create message about difference as following.  	// [差分発生箇所の種別]  	//   差分詳細  	//   差分発生箇所のId  	Func<string' string' Difference' string> DiffMsgFmt = (item' idName' e) => string.Format ("【 {0} 】\r  {1}\r{2}\r  {3} :{4}"' item' e.DiffMessage' Fo.ANNMSG_BOUND' idName' e.Id.IdString);  	// 差分発生箇所の Id を表示しない場合  	Func<string' Difference' string> DiffMsgFmtNoId = (item' e) => string.Format ("【 {0} 】\r  {1}\r"' item' e.DiffMessage);  	#endregion  	#region Add annotation attributes with item kind.  	// !! EAnnotSettings.LOPaint は denon 要望による実装だが、たち消えになる模様、経過見て削除か  	#region Toc  	if (x.DiffLists.Toc != null)  		x.DiffLists.Toc.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlkCsAsTocTitleInStory.FirstOrDefault (x1 => x1.IsMatchAttrVal (Cs.ID' "bk" + DiffElm.RelatedStoryId));  			if (t != null)  				t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmtNoId ("Toc"/*' "目次Id"*/' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.TextNtrlByOthers) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : PaintDescends.None' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	#endregion  	#region Story  	if (x.DiffLists.Story != null)  		x.DiffLists.Story.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value == "x" + DiffElm.Id.IdString);  			if (t != null) {  				// 同一注釈が複数作成されることを防ぐため、AddAnnotAttrsAndDescendantsBGC() を利用しない  				//     story.id を id とする block が pdf において複数 columns を表現する場合、annotation attribute をつけると column 毎に同一注釈が作成されてしまう  				//     story に関する annotation attribute を持ち、描画領域を持たない <fo:block /> を child として追加する  				// Adding annotation  				var anntBlock = new XElement (Fo.BLOCK);  				t.AddFirst (anntBlock);  				// レイアウトへの影響は未知だが、実験した限りでは影響無し  				anntBlock.Add (AnnotAttrs (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_PLEIN_LO' AnnotIconName.Insert' DiffMsgFmt ("Story"' "ストーリId"' DiffElm)' Fo.ANN_HOR_OFFSET).ToList ());  				// Painting  				if (delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint))  					t.PaintDescendantsBGC (PaintDescends.Yellow' x.isDebug);  			}  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	#endregion  	#region MSIds  	if (x.DiffLists.MSIds != null)  		x.DiffLists.MSIds.ToList ().ForEach (DiffElm =>  {  			var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id.IdString));  			if (t != null)  				t.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : Fo.ANNRGB_PLEIN_LO// text diff never occurs in group.  				//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  				' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) ? AnnotIconName.None : AnnotIconName.Insert' DiffMsgFmt ("Group"' "グループID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	x.log.AddLap ("Toc' Story' MSIds : Has written annotations"' 1);  	#endregion  	#region MSId  	if (x.DiffLists.MSId != null)  		x.DiffLists.MSId.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.Where (x1 => x1.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).Select (x1 => DiffElm.IsCoverPage // 表紙の要素は background-color/image が反映されないものがあるので、直下の block-container タグに注釈を付ける  			? x1.Element (Fo.BLOCKCONTAINER) ?? x1 : x1).Distinct ()// 本来不要なはずだが、現状、同一 id を有する <block> <block-container> の pair が 3730CTamowyxqh:OBAOMDtypitbrs に存在する、それが表紙であると、同一 element が list に重複することになるので、対応した Oct.17.2015  			.ToList ();  			// ひとつだけのはずだが。  			if (t.Count > 0) {  				t.ForEach (x1 =>  {  					x1.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.AllByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) ? Fo.ANNRGB_SHOWST : DiffElm.DiffType.HasFlag (DiffType.Layout) ? Fo.ANNRGB_PLEIN_LO : Fo.ANNRGB_NONE//' DiffElm.HiddenInfo.HiddenBy == HiddenBy.SelfProp  					' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) // 非表示 : RightPointer  表示 : no icon (paint descendants) !! except pagebreak item' which is pointed by RightPointer icon.  					| DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStShownByAny' ECmprElms.Nothing) && DiffElm.FilterFlag.HasFlag (ECmprElms.IsPageBreak) ? AnnotIconName.RightPointer : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? AnnotIconName.Insert : AnnotIconName.None' DiffMsgFmt ("Text"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownByOthers) ? PaintDescends.Magenta : DiffElm.FilterFlag.HasFlag (ECmprElms.ShowStShownBySelf) ? PaintDescends.Orange : DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.TextAllByOthers' ECmprElms.Nothing) ? DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Magenta : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None : DiffElm.DiffType.HasFlag (DiffType.TextValue) ? PaintDescends.Lime : delphiParams.AnnotSettings.HasFlag (EAnnotSettings.LOPaint) ? PaintDescends.Yellow : PaintDescends.None' x.isDebug);  					// !! test !!  					// リンク対象の文章が複数行にまたがる場合、行ごとに同一の注釈がつく(3行なら3つ)  					// operation のように、兄弟 MSId が fo に於いては Element(s) として表現される場合への対応として  					//     (言い換えると、DiffElm.LinkTagsPaintOrNot.Count < <fo:Basic-Link>.Count となる場合があり得ルので、その対策として)  					// .Take(DiffElm.LinkTagsPaintOrNot.Count) を挿入しているが、やや不安の残る対応  					if (DiffElm.LinkTagsPaintOrNot != null) {  						x1.Descendants (Fo.BASICLINK).Take (DiffElm.LinkTagsPaintOrNot.Count).Where (x2 => x2.Attribute (Fo.INTERNAL_DEST) != null).Where ((x2' i) => DiffElm.LinkTagsPaintOrNot [i]).ToList ().ForEach (x2 => // annotation is desirable  						//x2.Parent.AddAnnotAttrsAndDescendantsBGC(  						//  "#ff0"  						//' AnnotIconName.Help  						//' "test"  						//' PaintDescends.red  						//' x.isDebug));  						// annotation is undesirable  						x2.Parent.PaintDescendantsBGC (PaintDescends.Red' x.isDebug));  					}  				});  			}  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	x.log.AddLap ("MSId              : Has written annotations"' 1);  	#endregion  	#region Illustration  	if (x.DiffLists.Illst != null)  		x.DiffLists.Illst.ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id.IdString)).ToMaybe ().MaybeM (x2 => x2.Descendants (Fo.EXTGRAPH).FirstOrDefault ());  			if (t.HasValue)  				t.Value.AddAnnotAttrsAndDescendantsBGC (DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? Fo.ANNRGB_BYOHTERS : Fo.ANNRGB_NONE' AnnotIconName.None' DiffMsgFmt ("Illustration"' "内部リンクID"' DiffElm)' DiffElm.FilterFlag.HasAnyCommonFlag (ECmprElms.IllustHisByOthers' ECmprElms.Nothing) ? PaintDescends.Magenta : PaintDescends.Yellow' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.FormatToXElm ());  		});  	x.log.AddLap ("Illst             : Has written annotations"' 1);  	#endregion  	x.log.AddMsgOnly ("fin adding annotation attrs by item kind."' 1);  	#endregion  	#region Added or Removed  	// Use AddAnnotAttrsForce() 'because Showing "added" and "removed" prevail over other changes.  	if (x.args.addedOrRemovedDiff != null) {  		#region MSId added  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSId).ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (_x => _x.Attribute (Cs.ID).Value.Contains (DiffElm.Id));  			//if (t != null)  			if (t != null && DiffElm.AddedOrRemoved == DiffStatus.Added)  				// 工数未獲得 == コメントアウトし、above line を利用する　ことで削除も該当箇所表記となる  				t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? Fo.ANNRGB_BYOHTERS : DiffElm.AddedOrRemoved == DiffStatus.Removed ? Fo.ANNRGB_REMOVED : Fo.ANNRGB_NONE' DiffElm.AddedOrRemoved == DiffStatus.Removed ? AnnotIconName.RightPointer : AnnotIconName.None' (DiffElm.AddedOrRemoved == DiffStatus.Added ? "追加" : "削除") + "  \r  内部リンクID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.AdditonalMsg.Contains (Fo.ANNMSG_BYOTHERS) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  		});  		#endregion  		#region Story added  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).Where (x1 => x1.AddedOrRemoved == DiffStatus.Added).ToList ().ForEach (DiffElm =>  {  			var t = x.foBlks_BlkCs_ILsHavingId.FirstOrDefault (x1 => x1.Attribute (Cs.ID).Value == "x" + DiffElm.Id);  			// Add AnnotAttrs  			if (t != null) {  				// remove all AnnotAttrs in descendents. (MSId / MSIds differences.)  				t.Descendants ().ToList ().ForEach (y => y.RemoveAnnotAtttrs ());  				t.AddAnnotAttrsAndDescendantsBGCForce (DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? "#f0f" : "#fff"' AnnotIconName.None' "追加  \r  ストーリID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' DiffElm.FilterFlag.HasFlag (ECmprElms.AddingByOthers) ? PaintDescends.Magenta : PaintDescends.Aqua' x.isDebug);  			}  			else  				x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  		});  		#endregion  		#region Story removed => to head  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.Story).ToList ().ForEach (y => x.NotFounds.Add (y.ConvertAddingRemovingToDiffElm ()));  		#endregion  		#region MSIds added by other (MSIds の追加削除は、「他ブックに依る追加のみ」を抽出している)  		x.args.addedOrRemovedDiff.Where (x1 => x1.DiffItem == DiffItem.MSIds).ToList ().ForEach (DiffElm =>  {  			var t = x.foHavingGroupId.FirstOrDefault (x1 => x1.Attribute (Cs.GROUP_ID).Value.Contains (DiffElm.Id));  			if (t != null)  				t.AddAnnotAttrsAndDescendantsBGCForce (Fo.ANNRGB_BYOHTERS' AnnotIconName.None' "追加" + "  \r  グループID : " + DiffElm.Id + "\r " + DiffElm.AdditonalMsg' PaintDescends.Magenta' x.isDebug);  			else  				x.NotFounds.Add (DiffElm.ConvertAddingRemovingToDiffElm ());  		});  		#endregion  	}  	x.log.AddLap ("Added or Removed  : Has written annotations"' 1);  	#endregion  	#region Add summery and data notfounded on top page  	var t1 = x.args.foData.FoData.Root.Elements (Fo.PAGESEQUENCE).FirstOrDefault (x1 => x1.IsMatchAttrVal ("master-reference"' "PageMaster-FCover"));  	var TopPage = t1 != null ? t1.Element (Fo.FLOW).Element (Fo.BLOCK) : x.args.foData.FoData.Root.Descendants (Fo.FLOW).First ().Element (Fo.BLOCK).Element (Fo.BLOCK);  	#region Func AddDummyBlkCntnr  	Func<XElement' int' XElement> AddDummyBlkCntnr = (elm' left) => new XElement (Fo.BLOCKCONTAINER' new XAttribute ("inline-progression-dimension"' "20%")' new XAttribute ("block-progression-dimension"' "20%")' new XAttribute ("absolute-position"' "absolute")' new XAttribute ("left"' string.Format ("{0}mm"' left))' new XAttribute ("top"' "0mm")).SelectNewSingle (x1 =>  {  		// !! Side effect !!  		// 2種の fo data 形態を確認済み、後者の処理を怠るとツメが消える  		if (elm.Element (Fo.BLOCK) != null)  			elm.Element (Fo.BLOCK).AddFirst (x1);  		else  			elm.AddFirst (x1);  		return x1;  	});  	#endregion  	#region Add annotations  	// header  	AddDummyBlkCntnr (TopPage' -100/* out of sheet */).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_HEADER' AnnotIconName.Help' string.Format ("{0}{1}{0}{2}\r{0}比較対象レイアウトパラメータ\r{3}\r{0}"' new string ('='' 30) + "\r"' DateTime.Now.ToString ("yyyy/M/d (ddd) HH:mm 作成\r")' string.Format ("カテゴリ\r  {0}\r  {1}\rブック\r  {2}\r  {3}\r抽出項目\r  {4}\r比較対象アーカイブ作成日時\r  {5:yyyy/M/d HH:mm}"' x.args.categoryName' x.args.categoryId' x.args.bookName' x.args.bookId' delphiParams.ComparisonElmsMsg.JoinStringWith ("\r  ")' x.args.archivedDate)' delphiParams.NeedLOCompare ? delphiParams.LOParameters.Select (y => "  " + y).Aggregate ((a' b) => a + "\r" + b) : "  比較しない")' PaintDescends.None' x.isDebug);  	// not founds  	AddDummyBlkCntnr (TopPage' -2).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_NOTFOUNDS' AnnotIconName.Star' string.Format ("{0}{1}\r{0}"' new string ('='' 30) + "\r"' x.NotFounds.Elements ().Count () > 0 ? x.NotFounds.ToString () : "")' PaintDescends.None' x.isDebug);  	#endregion  	#endregion  });  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The following statement contains a magic number: AddDummyBlkCntnr (TopPage' -100/* out of sheet */).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_HEADER' AnnotIconName.Help' string.Format ("{0}{1}{0}{2}\r{0}比較対象レイアウトパラメータ\r{3}\r{0}"' new string ('='' 30) + "\r"' DateTime.Now.ToString ("yyyy/M/d (ddd) HH:mm 作成\r")' string.Format ("カテゴリ\r  {0}\r  {1}\rブック\r  {2}\r  {3}\r抽出項目\r  {4}\r比較対象アーカイブ作成日時\r  {5:yyyy/M/d HH:mm}"' x.args.categoryName' x.args.categoryId' x.args.bookName' x.args.bookId' delphiParams.ComparisonElmsMsg.JoinStringWith ("\r  ")' x.args.archivedDate)' delphiParams.NeedLOCompare ? delphiParams.LOParameters.Select (y => "  " + y).Aggregate ((a' b) => a + "\r" + b) : "  比較しない")' PaintDescends.None' x.isDebug);  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The following statement contains a magic number: AddDummyBlkCntnr (TopPage' -100/* out of sheet */).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_HEADER' AnnotIconName.Help' string.Format ("{0}{1}{0}{2}\r{0}比較対象レイアウトパラメータ\r{3}\r{0}"' new string ('='' 30) + "\r"' DateTime.Now.ToString ("yyyy/M/d (ddd) HH:mm 作成\r")' string.Format ("カテゴリ\r  {0}\r  {1}\rブック\r  {2}\r  {3}\r抽出項目\r  {4}\r比較対象アーカイブ作成日時\r  {5:yyyy/M/d HH:mm}"' x.args.categoryName' x.args.categoryId' x.args.bookName' x.args.bookId' delphiParams.ComparisonElmsMsg.JoinStringWith ("\r  ")' x.args.archivedDate)' delphiParams.NeedLOCompare ? delphiParams.LOParameters.Select (y => "  " + y).Aggregate ((a' b) => a + "\r" + b) : "  比較しない")' PaintDescends.None' x.isDebug);  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The following statement contains a magic number: AddDummyBlkCntnr (TopPage' -2).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_NOTFOUNDS' AnnotIconName.Star' string.Format ("{0}{1}\r{0}"' new string ('='' 30) + "\r"' x.NotFounds.Elements ().Count () > 0 ? x.NotFounds.ToString () : "")' PaintDescends.None' x.isDebug);  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotations,The following statement contains a magic number: AddDummyBlkCntnr (TopPage' -2).AddAnnotAttrsAndDescendantsBGC (Fo.ANNRGB_NOTFOUNDS' AnnotIconName.Star' string.Format ("{0}{1}\r{0}"' new string ('='' 30) + "\r"' x.NotFounds.Elements ().Count () > 0 ? x.NotFounds.ToString () : "")' PaintDescends.None' x.isDebug);  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: while (i < 9) {  	switch (i) {  	case 0:  		yield return new XAttribute (Fo.ANN_TYPE' "Text");  		break;  	case 1:  		yield return new XAttribute (Fo.ANN_COLOR' color);  		break;  	// #808080  	case 2:  		yield return new XAttribute (Fo.ANN_CONTENTS' content);  		break;  	case 3:  		yield return new XAttribute (Fo.ANN_OPEN' "false");  		break;  	case 4:  		yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  		break;  	// Note' Key' Help' NewParagraph' Paragraph' Insert  	case 5:  		yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  		break;  	case 6:  		yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  		break;  	// 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  	case 7:  		yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  		break;  	case 8:  		yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  		break;  	}  	i++;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: while (i < 9) {  	switch (i) {  	case 0:  		yield return new XAttribute (Fo.ANN_TYPE' "Text");  		break;  	case 1:  		yield return new XAttribute (Fo.ANN_COLOR' color);  		break;  	// #808080  	case 2:  		yield return new XAttribute (Fo.ANN_CONTENTS' content);  		break;  	case 3:  		yield return new XAttribute (Fo.ANN_OPEN' "false");  		break;  	case 4:  		yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  		break;  	// Note' Key' Help' NewParagraph' Paragraph' Insert  	case 5:  		yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  		break;  	case 6:  		yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  		break;  	// 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  	case 7:  		yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  		break;  	case 8:  		yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  		break;  	}  	i++;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: while (i < 9) {  	switch (i) {  	case 0:  		yield return new XAttribute (Fo.ANN_TYPE' "Text");  		break;  	case 1:  		yield return new XAttribute (Fo.ANN_COLOR' color);  		break;  	// #808080  	case 2:  		yield return new XAttribute (Fo.ANN_CONTENTS' content);  		break;  	case 3:  		yield return new XAttribute (Fo.ANN_OPEN' "false");  		break;  	case 4:  		yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  		break;  	// Note' Key' Help' NewParagraph' Paragraph' Insert  	case 5:  		yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  		break;  	case 6:  		yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  		break;  	// 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  	case 7:  		yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  		break;  	case 8:  		yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  		break;  	}  	i++;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: while (i < 9) {  	switch (i) {  	case 0:  		yield return new XAttribute (Fo.ANN_TYPE' "Text");  		break;  	case 1:  		yield return new XAttribute (Fo.ANN_COLOR' color);  		break;  	// #808080  	case 2:  		yield return new XAttribute (Fo.ANN_CONTENTS' content);  		break;  	case 3:  		yield return new XAttribute (Fo.ANN_OPEN' "false");  		break;  	case 4:  		yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  		break;  	// Note' Key' Help' NewParagraph' Paragraph' Insert  	case 5:  		yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  		break;  	case 6:  		yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  		break;  	// 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  	case 7:  		yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  		break;  	case 8:  		yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  		break;  	}  	i++;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: while (i < 9) {  	switch (i) {  	case 0:  		yield return new XAttribute (Fo.ANN_TYPE' "Text");  		break;  	case 1:  		yield return new XAttribute (Fo.ANN_COLOR' color);  		break;  	// #808080  	case 2:  		yield return new XAttribute (Fo.ANN_CONTENTS' content);  		break;  	case 3:  		yield return new XAttribute (Fo.ANN_OPEN' "false");  		break;  	case 4:  		yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  		break;  	// Note' Key' Help' NewParagraph' Paragraph' Insert  	case 5:  		yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  		break;  	case 6:  		yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  		break;  	// 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  	case 7:  		yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  		break;  	case 8:  		yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  		break;  	}  	i++;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: while (i < 9) {  	switch (i) {  	case 0:  		yield return new XAttribute (Fo.ANN_TYPE' "Text");  		break;  	case 1:  		yield return new XAttribute (Fo.ANN_COLOR' color);  		break;  	// #808080  	case 2:  		yield return new XAttribute (Fo.ANN_CONTENTS' content);  		break;  	case 3:  		yield return new XAttribute (Fo.ANN_OPEN' "false");  		break;  	case 4:  		yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  		break;  	// Note' Key' Help' NewParagraph' Paragraph' Insert  	case 5:  		yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  		break;  	case 6:  		yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  		break;  	// 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  	case 7:  		yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  		break;  	case 8:  		yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  		break;  	}  	i++;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: while (i < 9) {  	switch (i) {  	case 0:  		yield return new XAttribute (Fo.ANN_TYPE' "Text");  		break;  	case 1:  		yield return new XAttribute (Fo.ANN_COLOR' color);  		break;  	// #808080  	case 2:  		yield return new XAttribute (Fo.ANN_CONTENTS' content);  		break;  	case 3:  		yield return new XAttribute (Fo.ANN_OPEN' "false");  		break;  	case 4:  		yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  		break;  	// Note' Key' Help' NewParagraph' Paragraph' Insert  	case 5:  		yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  		break;  	case 6:  		yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  		break;  	// 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  	case 7:  		yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  		break;  	case 8:  		yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  		break;  	}  	i++;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: while (i < 9) {  	switch (i) {  	case 0:  		yield return new XAttribute (Fo.ANN_TYPE' "Text");  		break;  	case 1:  		yield return new XAttribute (Fo.ANN_COLOR' color);  		break;  	// #808080  	case 2:  		yield return new XAttribute (Fo.ANN_CONTENTS' content);  		break;  	case 3:  		yield return new XAttribute (Fo.ANN_OPEN' "false");  		break;  	case 4:  		yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  		break;  	// Note' Key' Help' NewParagraph' Paragraph' Insert  	case 5:  		yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  		break;  	case 6:  		yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  		break;  	// 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  	case 7:  		yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  		break;  	case 8:  		yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  		break;  	}  	i++;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: switch (i) {  case 0:  	yield return new XAttribute (Fo.ANN_TYPE' "Text");  	break;  case 1:  	yield return new XAttribute (Fo.ANN_COLOR' color);  	break;  // #808080  case 2:  	yield return new XAttribute (Fo.ANN_CONTENTS' content);  	break;  case 3:  	yield return new XAttribute (Fo.ANN_OPEN' "false");  	break;  case 4:  	yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  	break;  // Note' Key' Help' NewParagraph' Paragraph' Insert  case 5:  	yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  	break;  case 6:  	yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  	break;  // 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  case 7:  	yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  	break;  case 8:  	yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  	break;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: switch (i) {  case 0:  	yield return new XAttribute (Fo.ANN_TYPE' "Text");  	break;  case 1:  	yield return new XAttribute (Fo.ANN_COLOR' color);  	break;  // #808080  case 2:  	yield return new XAttribute (Fo.ANN_CONTENTS' content);  	break;  case 3:  	yield return new XAttribute (Fo.ANN_OPEN' "false");  	break;  case 4:  	yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  	break;  // Note' Key' Help' NewParagraph' Paragraph' Insert  case 5:  	yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  	break;  case 6:  	yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  	break;  // 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  case 7:  	yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  	break;  case 8:  	yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  	break;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: switch (i) {  case 0:  	yield return new XAttribute (Fo.ANN_TYPE' "Text");  	break;  case 1:  	yield return new XAttribute (Fo.ANN_COLOR' color);  	break;  // #808080  case 2:  	yield return new XAttribute (Fo.ANN_CONTENTS' content);  	break;  case 3:  	yield return new XAttribute (Fo.ANN_OPEN' "false");  	break;  case 4:  	yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  	break;  // Note' Key' Help' NewParagraph' Paragraph' Insert  case 5:  	yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  	break;  case 6:  	yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  	break;  // 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  case 7:  	yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  	break;  case 8:  	yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  	break;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: switch (i) {  case 0:  	yield return new XAttribute (Fo.ANN_TYPE' "Text");  	break;  case 1:  	yield return new XAttribute (Fo.ANN_COLOR' color);  	break;  // #808080  case 2:  	yield return new XAttribute (Fo.ANN_CONTENTS' content);  	break;  case 3:  	yield return new XAttribute (Fo.ANN_OPEN' "false");  	break;  case 4:  	yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  	break;  // Note' Key' Help' NewParagraph' Paragraph' Insert  case 5:  	yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  	break;  case 6:  	yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  	break;  // 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  case 7:  	yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  	break;  case 8:  	yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  	break;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: switch (i) {  case 0:  	yield return new XAttribute (Fo.ANN_TYPE' "Text");  	break;  case 1:  	yield return new XAttribute (Fo.ANN_COLOR' color);  	break;  // #808080  case 2:  	yield return new XAttribute (Fo.ANN_CONTENTS' content);  	break;  case 3:  	yield return new XAttribute (Fo.ANN_OPEN' "false");  	break;  case 4:  	yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  	break;  // Note' Key' Help' NewParagraph' Paragraph' Insert  case 5:  	yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  	break;  case 6:  	yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  	break;  // 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  case 7:  	yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  	break;  case 8:  	yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  	break;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: switch (i) {  case 0:  	yield return new XAttribute (Fo.ANN_TYPE' "Text");  	break;  case 1:  	yield return new XAttribute (Fo.ANN_COLOR' color);  	break;  // #808080  case 2:  	yield return new XAttribute (Fo.ANN_CONTENTS' content);  	break;  case 3:  	yield return new XAttribute (Fo.ANN_OPEN' "false");  	break;  case 4:  	yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  	break;  // Note' Key' Help' NewParagraph' Paragraph' Insert  case 5:  	yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  	break;  case 6:  	yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  	break;  // 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  case 7:  	yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  	break;  case 8:  	yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  	break;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following statement contains a magic number: switch (i) {  case 0:  	yield return new XAttribute (Fo.ANN_TYPE' "Text");  	break;  case 1:  	yield return new XAttribute (Fo.ANN_COLOR' color);  	break;  // #808080  case 2:  	yield return new XAttribute (Fo.ANN_CONTENTS' content);  	break;  case 3:  	yield return new XAttribute (Fo.ANN_OPEN' "false");  	break;  case 4:  	yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  	break;  // Note' Key' Help' NewParagraph' Paragraph' Insert  case 5:  	yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  	break;  case 6:  	yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  	break;  // 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  case 7:  	yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  	break;  case 8:  	yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  	break;  }  
Magic Number,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotAttrsAndDescendantsBGC,The following statement contains a magic number: TargetElm.Add (AnnotAttrs (iconColor' icon// 'None' のように定義されていない値を与えると AHF の仕様により、Note になる  ' content' icon == AnnotIconName.None ? 1000 : Fo.ANN_HOR_OFFSET).ToList ());  
Magic Number,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The following statement contains a magic number: try {  	#region layouts (This function must be called only once!)  	Func<List<DiffLO>// _LODiffXml  	' BookDataEx// _crntBook  	' BookDataEx// _arcvBook  	' List<string>// prmsToCompare  	' ECmprElms// _compareItemFlags  	' Log// _log  	' List<Difference>> LODiffs = (_LODiffs' _crntBook' _arcvBook' prmsToCompare' _compareItemFlags' _log) => new {  		_LODiffs'  		_crntBook'  		_arcvBook'  		prmsToCompare'  		_compareItemFlags'  		_log  	}.WithAddingLog (x => x._log' x => x.AddLap ("Start LODiffs()"' 1)).SelectNewSingle (x => new {  		prmsToCompare'  		compareItemFlags = x._compareItemFlags'  		log = x._log'  		crntBook = x._crntBook'  		arcvBook = x._arcvBook'  		diffs = x._LODiffs'  		showHideFormalValues = new[] {  			""'  			"0"'  			"1"'  			Cs.MSG_NOVALUE  		}'  		formatFunc = new Func<DiffStatus' string' string' string' string> ((st' name' oldVal' newVal) => st.SwitchExpression (new Dictionary<DiffStatus' string> {  			{  				DiffStatus.Added'  				string.Format (Fo.ANNMSG_LO_FMT' "追加"' name' newVal)  			}'  			{  				DiffStatus.Removed'  				string.Format (Fo.ANNMSG_LO_FMT' "削除"' name' oldVal)  			}'  			{  				DiffStatus.Changed'  				string.Format (Fo.ANNMSG_LO_FMT' "変更"' name' oldVal + " ⇒⇒ " + newVal)  			}//' { DiffStatus.Irregular' string.Format(Fo.ANNMSG_LO_FMT' "比較エラー"' name' "書式重複あり" + oldVal + (oldVal == "" ? newVal : newVal == "" ? "" : "、また" + newVal)) } }  			'  			{  				DiffStatus.Irregular'  				string.Format (Fo.ANNMSG_LO_FMT' "比較エラー"' name' "書式重複あり (" + (oldVal == "" ? "現在の" : newVal == "" ? "アーカイブ" : "現在およびアーカイブ両") + "ブックにおいて)")  			}  		}' ""))  	}).SelectNewSingle (x => new {  		x.log'  		x.crntBook'  		x.arcvBook'  		x.compareItemFlags'  		diffs = x.diffs.Select (x1 => new {  			x.crntBook'  			x.arcvBook'  			x.formatFunc'  			x.showHideFormalValues'  			x.prmsToCompare'  			x.compareItemFlags'  			id = x1.Id.IdString'  			item = x1.OwnerItem'  			status = x1.DiffStatus'  			val = new {  				LOPrmName = x1.Name'  				OldValue = x1.OldVal ?? ""'  				NewValue = x1.NewVal ?? ""  			}  		}).Where (x1 => x1.val.LOPrmName.MatchAny (x.prmsToCompare)).Select (x1 => new {  			x1.id'  			x1.item'  			x1.status'  			x1.crntBook'  			x.arcvBook'  			x1.val'  			x1.formatFunc'  			x1.showHideFormalValues'  			x1.compareItemFlags'  			flag = x1.val.LOPrmName.MatchAny (Cs.PP_SHOWHIDE_SET) && x1.val.NewValue.MatchAny (x1.showHideFormalValues) // 非公式な値を取っている場合は、一般書式と同じ表記を取る (参考 : 1 と異なる値を持つときは表示状態となる)  			&& x1.val.OldValue.MatchAny (x1.showHideFormalValues) ? x1.val.NewValue == "1" ? ECmprElms.ShowStHiddenByAny // "" or "0" ==> "1"  			: ECmprElms.ShowStShownByAny : ECmprElms.LayoutNtrlByAny  		}).Select (x1 => new {  			x1.id'  			x1.item'  			x1.status'  			x1.flag'  			x1.crntBook'  			x1.compareItemFlags'  			msgTitle = x1.flag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? "レイアウト" : "表示ステータス  "'  			val = x1.flag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? x1.formatFunc (x1.status' x1.val.LOPrmName' x1.val.OldValue' x1.val.NewValue) : x1.flag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) ? "表示 ⇒⇒ 非表示\r  テキスト : " + FormatDiffXml.ToHideTextFmt + "\r" : "非表示 ⇒⇒ 表示"  		}).Select (x1 => new {  			x1.id'  			x1.item'  			x1.flag'  			x1.crntBook'  			x1.compareItemFlags'  			msg = x1.item == DiffItem.MSIds // group(means MSIds) における差分は group-type を追記するとの仕様追加に応える  			? string.Format ("グループ名称 :{0}\r  {1}{2}"' crntBook.MSIdsAll.First (y => y.IsMatchAttrVal (Cs.GROUP_ID' x1.id)).Attribute (Cs.GROUP_TYPE).Value' x1.msgTitle' x1.val) : string.Format ("{0}{1}"' x1.msgTitle' x1.val)  		}).Where (x1 =>  {  			var needLayoutNeutral = x1.compareItemFlags.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing);  			var needShowStatus = x1.compareItemFlags.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing);  			return needLayoutNeutral ? needShowStatus ? true : x1.flag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) : needShowStatus ? x1.flag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) : false;  		})// 比較対象ブックでないブックによる変更履歴の確認(item 単位で行う)  		.GroupBy (x1 => new {  			id = x1.id'  			item = x1.item'  			crntBook = x1.crntBook  		})// 実質 id のみの grouping だが、次の処理の見易さのために item' crntBook を加えても処理時間に差が見られなかった  		.Select (x1 => new {  			members = x1'  			otherBookMsg = debugOption == EDebug.DebugNoRDB ? "" : Mysql.GetLOHis (x1.Key.crntBook' x1.Key.item' x1.Key.item != DiffItem.Story ? x1.Key.id : x1.Key.crntBook.GetRootMSIdsGrpIdByStoryName (x1.Key.id)' archvDate' debugOption' x.log)  		}).ToList ()// 必須 : 外すと処理時間大きく増加  		.Select (x1 => x1.members.Select (x2 => new {  			x2.id'  			x2.item'  			x2.flag'  			x2.crntBook'  			x2.msg'  			x2.compareItemFlags'  			otherBooksChangingMsg = x1.otherBookMsg  		})).UnionEnumsAsAnEnum ()// 履歴確認おわり  		.Select (x1 => new {  			x1.id'  			x1.item'  			x1.crntBook'  			x1.otherBooksChangingMsg'  			x1.compareItemFlags'  			msg = x1.msg'  			flag = x1.otherBooksChangingMsg == "" ? x1.flag & ~(ECmprElms.LayoutNtrlByOthers | ECmprElms.ShowStBothBYOthers) : x1.flag & ~(ECmprElms.LayoutNtrlBySelf | ECmprElms.ShowStBothBYSelf)  		}).Where (x1 => x1.flag.HasAnyCommonFlag (x1.compareItemFlags' ECmprElms.Nothing)).Select (x1 => new {  			x1.item'  			x1.msg'  			x1.otherBooksChangingMsg'  			x1.id'  			x1.flag'  			isPageBreak = x.crntBook.MSIdPgBreakIds.Contains (x1.id)  		}).Select (x1 => new {  			x1.item'  			x1.msg'  			x1.otherBooksChangingMsg'  			x1.id'  			pageBreakMsg = x1.isPageBreak ? Cs.MSG_PAGEBREAK : ""'  			flag = x1.isPageBreak ? x1.flag | ECmprElms.IsPageBreak : x1.flag  		}).Select (x1 => new Difference {  			DiffItem = x1.item'  			DiffType = DiffType.Layout'  			DiffMessage = x1.msg'  			SubMessage = x1.otherBooksChangingMsg + x1.pageBreakMsg'  			Id = new Id (x1.item' x1.id)'  			FilterFlag = x1.flag  		}).ToList ()  	}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly (Cs.LOG_MODBYOTHER + y.diffs.Where (y1 => y1.FilterFlag.HasFlag (ECmprElms.TextNtrlByOthers)).Count ()' 2)).WithAddingLog (x => x.log' x => x.AddLap ("Fin LODiffs()"' 1)).SelectNewSingle (x => x.diffs);  	#endregion  	#region texts (This function must be called only once!)  	Func<List<DiffMS>// _MSDiffs  	' BookDataEx// _crntBook  	' HashSet<string>// _locIdsToBeIgnoredToBeComparedInTextValue  	' ECmprElms// _compareItemList  	' Log// _log  	' List<Difference>> MSDiffs = (_MSDiffs' _crntBook' _locIdsToBeIgnoredToBeComparedInTextValue' _compareItemList' _log) => new {  		_MSDiffs'  		_crntBook'  		_locIdsToBeIgnoredToBeComparedInTextValue'  		_compareItemList'  		_log  	}.WithAddingLog (x => x._log' x => x.AddLap ("Start MSDiffs()"' 1)).SelectNewSingle (x => new {  		log = x._log'  		ignoreLocIds = x._locIdsToBeIgnoredToBeComparedInTextValue'  		compareItemFlags = x._compareItemList'  		diffs = x._MSDiffs.Select (y => new {  			crntBook = x._crntBook'  			diffElm = y  		})  	}).SelectNewSingle (x => new {  		x.log'  		x.ignoreLocIds'  		x.compareItemFlags'  		diffs = x.diffs.Select (x1 => new {  			x1.crntBook'  			x.log'  			val = new {  				before = x1.diffElm.OldVal'  				after = x1.diffElm.NewVal  			}'  			id = x1.diffElm.Id'  			diffItem = x1.diffElm.OwnerItem  		}).Select (x1 => new {  			x1.id'  			x1.diffItem'  			x1.crntBook'  			x1.val'  			linkTags = new {  				before = x1.val.before.GetLinkTags ()'  				after = x1.val.after.GetLinkTags ()  			}'  			MSHis = debugOption == EDebug.DebugNoRDB ? "" : Mysql.GetMSHis (x1.crntBook' x1.id' archvDate' debugOption' x.log)  		}).Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.val'  			x1.linkTags'  			x1.MSHis'  			linktagsCountDiffMsg = x1.linkTags.before.Count != x1.linkTags.after.Count ? string.Format ("\r -- 相互参照の数が {0} 個から {1} 個に変わっています"/* 相互参照とは link tag のこと */' x1.linkTags.before.Count' x1.linkTags.after.Count) : ""  		}).Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.MSHis'  			x1.linktagsCountDiffMsg'  			val = string.Format ("{0} ⇒⇒ {1}"' x1.val.before' x1.val.after) + x1.MSHis + x1.linktagsCountDiffMsg'  			// link tag の並びの順に従って、True:False... のように着色する(True)か、否か(False)を意図したbool値を格納する  			linkTagsPaintOrNot = x1.linkTags.after.Select ((x2' i) => (x1.linktagsCountDiffMsg != "" || x2 != x1.linkTags.before [i])).ToList ()  		})// 要素が無い場合の値は new List<>() と同値 (not null)  		.Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.MSHis'  			x1.linkTagsPaintOrNot'  			x1.linktagsCountDiffMsg'  			val = x1.linkTagsPaintOrNot.Where (x2 => x2).Count () > 0 && x1.linktagsCountDiffMsg == "" ? x1.val + "\r -- 相互参照に変更があります。" /* 相互参照とは link tag のこと */: x1.val  		}).Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.linkTagsPaintOrNot'  			x1.val'  			x1.MSHis'  			hasLinkTextDiff = x1.linkTagsPaintOrNot.Where (x2 => x2).Count () > 0 || x1.linktagsCountDiffMsg != ""  		/* 後者は "link tag count 1 => 0" を拾うために必要 */}).Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.linkTagsPaintOrNot'  			x1.val'  			flag = x1.MSHis != "" ? x1.hasLinkTextDiff ? ECmprElms.TextAsLinkByOthers : ECmprElms.TextNtrlByOthers : x1.hasLinkTextDiff ? ECmprElms.TextAsLinkBySelf : ECmprElms.TextNtrlBySelf  		}).ToList ()  	}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly (Cs.LOG_MODBYOTHER + y.diffs.Where (y1 => y1.flag.HasAnyCommonFlag (y.compareItemFlags' ECmprElms.Nothing)).Count ()' 2)).SelectNewSingle (x => new {  		x.log'  		x.ignoreLocIds'  		diffs = x.diffs.Where (x1 => x1.flag.HasAnyCommonFlag (x.compareItemFlags' ECmprElms.Nothing)).ToList ()  	}).SelectNewSingle (x => new {  		x.log'  		diffs = x.diffs.Select (x1 => new {  			x1.val'  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.flag'  			x1.linkTagsPaintOrNot'  			OwnerIds = x1.diffItem == DiffItem.Toc ? x1.crntBook.BookData.GetTocIdByMSId (x1.id).ToList () : x1.diffItem == DiffItem.MSId ? x1.crntBook.MSIdAll.Where (y => y.IsMatchAttrVal (Cs.ID' x1.id)).Select (y => y.Attribute (Cs.LOC_ID).Value).Where (y => !x.ignoreLocIds.Contains (y)).ToList () // ! This evaluation is important !  			: null  		}).ToList ()  	}).WithAddingLog (x => x.log' x => x.AddLap ("Added ownerId"' 2)).SelectNewSingle (x => new {  		x.log'  		diffs = x.diffs// MS.Id を所持する MSId が見つかったか、見つからなかったか  		.Select (x1 => x1.OwnerIds.Select (y => new {  			x1.val'  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.flag'  			x1.linkTagsPaintOrNot'  			diffItemId = x1.OwnerIds.Count () == 0 ? Cs.MSG_NOTFOUND : y  		})).UnionEnumsAsAnEnum ().Select (x1 => new Difference {  			DiffType = DiffType.TextValue'  			DiffItem = x1.diffItem'  			DiffMessage = x1.val'  			ContentsId = x1.id'  			Id = new Id (x1.diffItem' x1.diffItemId)'  			FilterFlag = x1.flag'  			LinkTagsPaintOrNot = x1.linkTagsPaintOrNot  		})// 利用されていない MS の差分は除外する  		.Where (x1 => x1.Id.IdString != Cs.MSG_NOTFOUND).ToList ()  	}).WithAddingLog (x => x.log' x => x.AddLap ("Fin MSDiffs()"' 1)).SelectNewSingle (x => x.diffs);  	#endregion  	#region illustrations (connect server)  	var illstDiff = debugOption == EDebug.DebugNoRDB || !delphiParams.ComparisonElms.HasFlag (ECmprElms.IllustHisByAny) ? new List<Difference> () : Mysql.GetIllstHis (crntBook' archvDate' langList' debugOption' log);  	log.AddLap ("illstHisCount:" + illstDiff.Count ().ToString () + " Date:" + archvDate.ToString ()' 1);  	#endregion  	#region Set variables 'Diffs' (Union) and 'TocGroupsHavingMemIds'  	var Diffs = LinqExtension.UnionEnumsAsAnEnum (LODiffs (diffLOs' crntBook' arcvBook' delphiParams.LOParameters' delphiParams.ComparisonElms' log)' MSDiffs (diffMSs' crntBook' locIdsToBeIgnoredInComparingTexts' delphiParams.ComparisonElms' log)' illstDiff).ToList ();  	// この時点では a Diff にただひとつの差分しか納められていない (差分発生箇所単位にまとめられていない)  	Debug.Assert (!Diffs.Any (x => x.DiffItem == DiffItem.Default)' "Some Diff.DiffItem isn't implemented.");  	Debug.Assert (!Diffs.Any (x => x.Id.IdString == Cs.MSG_NOTFOUND)' "Some Id isn't found in crnt book.");  	var TocGroupsHavingMemIds = crntBook//.BookData  	//.Root  	//.Descendants(Cs.MODEL)  	//.First(y => y.Element(Cs.GROUPS).Elements().Count() > 0) // Elements() is not Nullable.  	//.Descendants(Cs.GROUP)  	.TocAll.Where (y => y.Element (Cs.MEMBER_IDS).Elements ().Count () > 0).ToList ();  	#endregion  	// 加工開始　-------------------------------  	#region Text 差分の表示内容を加工  	Diffs.Where (x => x.DiffType.HasFlag (DiffType.TextValue)).SideEffectsOnlyAsParalles (x => x.DiffMessage = x.DiffItem.SwitchExpression (new Dictionary<DiffItem' string> {  		{  			DiffItem.Illst'  			string.Format ("{0}\r    内容 :\r{1}\rIllstId :{2}"' "イラスト履歴"' x.DiffMessage' x.ContentsId)  		}'  		{  			DiffItem.MSId'  			string.Format ("{0}\r    変更内容 :{1}\rTextId :{2}"' "本文テキスト"' x.DiffMessage' x.ContentsId)  		}'  		{  			DiffItem.Toc'  			string.Format ("{0}\r    変更内容 :{1}\rTextId :{2}"' "目次テキスト"' x.DiffMessage' x.ContentsId)  		}  	}' x.DiffMessage));  	//  x.DiffItem == DiffItem.Illst  	//    ? string.Format("{0}\r    内容 :\r{1}\rIllstId :{2}"' "イラスト履歴"' x.DiffMessage' x.ContentsId)  	//: x.DiffItem == DiffItem.MSId  	//    ? string.Format("{0}\r    変更内容 :{1}\rTextId :{2}"' "本文テキスト"' x.DiffMessage' x.ContentsId)  	//: x.DiffItem == DiffItem.Toc  	//    ? string.Format("{0}\r    変更内容 :{1}\rTextId :{2}"' "目次テキスト"' x.DiffMessage' x.ContentsId)  	//    : x.DiffMessage; });  	log.AddLap ("Fin formatting message."' 1);  	#endregion  	#region Unify multiple diffs at the same item.  	#region Layout  	Diffs.Where (x => x.Id.IdString != Cs.MSG_NOTFOUND).Where (x => x.DiffType.HasFlag (DiffType.Layout)).GroupBy (x => x.Id.IdString).Where (x => x.Count () > 1)// !! With side effects !!  	.SideEffectsOnly (x =>  {  		var firstDiffItem = x.First ();  		firstDiffItem.LinkTagsPaintOrNot = x.Select (x1 => x1.LinkTagsPaintOrNot).FirstOrDefault (y => y != null);  		// Default is null.  		firstDiffItem.DiffType = x.Select (x1 => x1.DiffType).Aggregate ((a' b) => a | b);  		firstDiffItem.FilterFlag = x.Select (x1 => x1.FilterFlag).Aggregate ((a' b) => a | b);  		firstDiffItem.DiffMessage = x.Select (x1 => x1.DiffMessage).Aggregate ((a' b) => a + "\r  " + b);  		x.Skip (1).ToList ().ForEach (y => y.DiffType = DiffType.ToBeRemoved);  	});  	Diffs.Where (x => x.Id.IdString != Cs.MSG_NOTFOUND).Where (x => x.DiffType.HasFlag (DiffType.Layout)).ToList ().ForEach (x =>  {  		x.DiffMessage = x.DiffMessage + x.SubMessage;  	});  	// Layout diff において、.SubMessage は他ブック変更を表現する文章なので、同一箇所においてはすべて同じ  	#endregion  	#region Text  	Diffs//.Where(x => x.HiddenInfo.HiddenBy == HiddenBy.None)  	.Where (x => x.DiffType != DiffType.ToBeRemoved).Where (x => x.Id.IdString != Cs.MSG_NOTFOUND).GroupBy (x => x.Id.IdString).Where (x => x.Count () > 1)// !! With side effects !!  	.SideEffectsOnly (x =>  {  		var firstDiffItem = x.First ();  		firstDiffItem.DiffMessage = x.Select (y => y.DiffMessage).JoinStringWith ("\r" + Fo.ANNMSG_BOUND + "\r  ");  		firstDiffItem.LinkTagsPaintOrNot = x.Select (x1 => x1.LinkTagsPaintOrNot).FirstOrDefault (y => y != null);  		// Default is null.  		firstDiffItem.DiffType = x.Select (x1 => x1.DiffType).Aggregate ((a' b) => a | b);  		firstDiffItem.FilterFlag = x.Select (x1 => x1.FilterFlag).Aggregate ((a' b) => a | b);  		x.Skip (1).ToList ().ForEach (y => y.DiffType = DiffType.ToBeRemoved);  	});  	#endregion  	log.AddLap ("Fin merge messages in same location."' 1);  	#endregion  	#region Add RelatedStoryId  	// Story.Id は編集者にとって必要ないようだが、当実行 file の処理には不可欠  	// D&M の巨大な data でも非同期処理による時間短縮はできなかった  	Diffs.GroupBy (x => x.DiffItem)//.ToList()       // NotFound  は...  	//.ForEach(x => {  	.SideEffectsOnlyAsParalles (x => x.SideEffectsOnlyAsParalles (x1 =>  {  		switch (x.Key) {  		case DiffItem.Toc:  			x1.RelatedStoryId = crntBook.TocAll.FirstOrDefault (x2 => x2.IsMatchAttrVal (Cs.ID' x1.Id.IdString)).ToMaybe ()// toc を子孫として持つ toc は .groups に childrenTocs と story container を並列して持ち、その順序は不定なので groupType == 2 が不可欠  			.MaybeM (x2 => x2.Element (Cs.GROUPS).Elements ().FirstOrDefault (x3 => x3.IsMatchAttrVal (Cs.GROUP_TYPE' "2"))).MaybeM (x2 => x2.Element (Cs.MEMBER_IDS).Element (Cs.STRING).Value).SelectNewSingle (x2 => x2.HasValue ? x2.Value : Cs.MSG_NOTFOUND);  			break;  		case DiffItem.Story:  			x1.RelatedStoryId = x1.Id.IdString;  			break;  		case DiffItem.MSIds:  			x1.RelatedStoryId = crntBook.MSIdsAll.FirstOrDefault (x2 => x2.IsMatchAttrVal (Cs.GROUP_ID' x1.Id.IdString)).SelectNewSingle (x2 => x2 == null ? Cs.MSG_NOTFOUND : x2.GetAncestorStory ().Attribute (Cs.ID).Value);  			break;  		case DiffItem.MSId:  		case DiffItem.Illst:  			x1.RelatedStoryId = crntBook.MSIdAll.FirstOrDefault (x3 => x3.IsMatchAttrVal (Cs.LOC_ID' x1.Id.IdString)).SelectNewSingle (x3 => x3 == null ? Cs.MSG_NOTFOUND : x3.GetAncestorStory ().Attribute (Cs.ID).Value);  			break;  		}  	}));  	log.AddLap ("Fin adding relatedStoryId."' 1);  	#endregion  	#region 目次に紐づいていない story 以下の差分を削除  	Diffs = Diffs.Except (Diffs.Where (x => x.DiffItem != DiffItem.Toc && TocGroupsHavingMemIds.GetTocByStoryId (x.RelatedStoryId) == null)).ToList ();  	log.AddLap ("Fin removing stories disconnected to toc."' 1);  	#endregion  	#region Related story が cover page であるか、ないか  	Diffs.AsParallel ().Where (x => !new[] {  		Cs.MSG_NOTFOUND'  		Cs.MSG_ISTOCDIFF  	}.Contains (x.RelatedStoryId)).SideEffectsOnly (x => x.IsCoverPage = TocGroupsHavingMemIds.GetTocByStoryId (x.RelatedStoryId).Parent.Parent.Descendants (Cs.PROPERTY).Where (y => y.IsMatchAttrVal ("name"' "menu-id")).Any (y => y.IsContainsAttrVal ("value"' new[] {  		"cover"  	})));  	// -top -back のみと思われるが  	#endregion  	#region Add Hidden info  	Debug.Assert (!Diffs.Any (x => x.DiffItem == DiffItem.Default)' "Some Diff.DiffItem isn't implemented.");  	Task.WaitAll (Diffs.Select (x => Task.Factory.StartNew (() => new {  		diff = x'  		idName = x.Id.Name.ToStringFormal ()'  		idVal = x.Id.IdString'  		elm = x.DiffItem == DiffItem.Story ? crntBook.StoryAll : x.DiffItem == DiffItem.Toc ? crntBook.TocAll : x.DiffItem == DiffItem.MSIds ? crntBook.MSIdsAll : crntBook.MSIdAll  	/* MSId or Illst */}.DoActionSingle (x1 =>  {  		x1.diff.HiddenInfo = x1.elm.FirstOrDefault (x2 => x2.Attribute (x1.idName).Value == x1.idVal).GetHiddenStatusWithAnscestors (TocGroupsHavingMemIds);  	}))).ToArray ());  	Debug.Assert (!Diffs.Any (x => x.HiddenInfo == null)' "Some objects doesn't implemented HiddenInfo.");  	log.AddLap ("Fin adding hidden information."' 1);  	#endregion  	#region MSId の差分について、IllustrationText である場合は DiffMsg にその旨追記  	Diffs.AsParallel ().Where (x => x.DiffItem == DiffItem.MSId).AssertElm (x => crntBook.MSIdDic.Keys.Contains (x.Id.IdString)).Where (x => crntBook.MSIdDic [x.Id.IdString].IsMatchAttrVal (Cs.MS_TYPE' "illustration-text")).SideEffectsOnlyAsParalles (x => x.DiffMessage = "**イラストレーションテキスト**\r" + x.DiffMessage);  	log.AddLap ("Fin adding illustrationText message."' 1);  	#endregion  	#region Filter  --  Redundant' Hidden Illustration Histories' Hidden by ancestors  	Diffs = Diffs.AsParallel ().Where (x => x.DiffType != DiffType.ToBeRemoved)// Excludes illustration diffs as hidden MSId (But it is exceptional that the item's show status changed to 'Hide'.)  	.Where (x => !(x.DiffType.HasFlag (DiffType.IllustHis) && x.HiddenInfo.HiddenBy != HiddenBy.None && !x.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing))).Where (x => x.HiddenInfo.HiddenBy != HiddenBy.AncestorProp)// Jan.29.2015  	.ToList ();  	log.AddLap ("Fin sorting."' 1);  	#endregion  	#region Add Hidden item LO annot texts  (17.June.2015 : Toc の書式については差分を見ていない、見るようになると GetDescendantsTextByGroupIdOrLocId() では対応できないので、追加処理が必要)  	Parallel.ForEach (Diffs.Where (x => x.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing))' x =>  {  		x.DiffMessage = x.DiffMessage.Replace (FormatDiffXml.ToHideTextFmt' crntBook.GetDescendantsTextByGroupIdOrLocId (x.Id.IdString));  	});  	log.AddLap ("Fin Adding HIdden item texts."' 1);  	#endregion  	#region coverpage  	Diffs.Where (x => x.IsCoverPage).ToList ().ForEach (x => x.DiffMessage = "（背）表紙の要素\r" + x.DiffMessage);  	log.AddLap ("Fin adding coverPage message."' 1);  	#endregion  	return Diffs;  }  finally {  	mstLog.logMessages.AddRange (log.logMessages.Skip (1));  }  
Magic Number,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The following statement contains a magic number: try {  	#region layouts (This function must be called only once!)  	Func<List<DiffLO>// _LODiffXml  	' BookDataEx// _crntBook  	' BookDataEx// _arcvBook  	' List<string>// prmsToCompare  	' ECmprElms// _compareItemFlags  	' Log// _log  	' List<Difference>> LODiffs = (_LODiffs' _crntBook' _arcvBook' prmsToCompare' _compareItemFlags' _log) => new {  		_LODiffs'  		_crntBook'  		_arcvBook'  		prmsToCompare'  		_compareItemFlags'  		_log  	}.WithAddingLog (x => x._log' x => x.AddLap ("Start LODiffs()"' 1)).SelectNewSingle (x => new {  		prmsToCompare'  		compareItemFlags = x._compareItemFlags'  		log = x._log'  		crntBook = x._crntBook'  		arcvBook = x._arcvBook'  		diffs = x._LODiffs'  		showHideFormalValues = new[] {  			""'  			"0"'  			"1"'  			Cs.MSG_NOVALUE  		}'  		formatFunc = new Func<DiffStatus' string' string' string' string> ((st' name' oldVal' newVal) => st.SwitchExpression (new Dictionary<DiffStatus' string> {  			{  				DiffStatus.Added'  				string.Format (Fo.ANNMSG_LO_FMT' "追加"' name' newVal)  			}'  			{  				DiffStatus.Removed'  				string.Format (Fo.ANNMSG_LO_FMT' "削除"' name' oldVal)  			}'  			{  				DiffStatus.Changed'  				string.Format (Fo.ANNMSG_LO_FMT' "変更"' name' oldVal + " ⇒⇒ " + newVal)  			}//' { DiffStatus.Irregular' string.Format(Fo.ANNMSG_LO_FMT' "比較エラー"' name' "書式重複あり" + oldVal + (oldVal == "" ? newVal : newVal == "" ? "" : "、また" + newVal)) } }  			'  			{  				DiffStatus.Irregular'  				string.Format (Fo.ANNMSG_LO_FMT' "比較エラー"' name' "書式重複あり (" + (oldVal == "" ? "現在の" : newVal == "" ? "アーカイブ" : "現在およびアーカイブ両") + "ブックにおいて)")  			}  		}' ""))  	}).SelectNewSingle (x => new {  		x.log'  		x.crntBook'  		x.arcvBook'  		x.compareItemFlags'  		diffs = x.diffs.Select (x1 => new {  			x.crntBook'  			x.arcvBook'  			x.formatFunc'  			x.showHideFormalValues'  			x.prmsToCompare'  			x.compareItemFlags'  			id = x1.Id.IdString'  			item = x1.OwnerItem'  			status = x1.DiffStatus'  			val = new {  				LOPrmName = x1.Name'  				OldValue = x1.OldVal ?? ""'  				NewValue = x1.NewVal ?? ""  			}  		}).Where (x1 => x1.val.LOPrmName.MatchAny (x.prmsToCompare)).Select (x1 => new {  			x1.id'  			x1.item'  			x1.status'  			x1.crntBook'  			x.arcvBook'  			x1.val'  			x1.formatFunc'  			x1.showHideFormalValues'  			x1.compareItemFlags'  			flag = x1.val.LOPrmName.MatchAny (Cs.PP_SHOWHIDE_SET) && x1.val.NewValue.MatchAny (x1.showHideFormalValues) // 非公式な値を取っている場合は、一般書式と同じ表記を取る (参考 : 1 と異なる値を持つときは表示状態となる)  			&& x1.val.OldValue.MatchAny (x1.showHideFormalValues) ? x1.val.NewValue == "1" ? ECmprElms.ShowStHiddenByAny // "" or "0" ==> "1"  			: ECmprElms.ShowStShownByAny : ECmprElms.LayoutNtrlByAny  		}).Select (x1 => new {  			x1.id'  			x1.item'  			x1.status'  			x1.flag'  			x1.crntBook'  			x1.compareItemFlags'  			msgTitle = x1.flag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? "レイアウト" : "表示ステータス  "'  			val = x1.flag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? x1.formatFunc (x1.status' x1.val.LOPrmName' x1.val.OldValue' x1.val.NewValue) : x1.flag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) ? "表示 ⇒⇒ 非表示\r  テキスト : " + FormatDiffXml.ToHideTextFmt + "\r" : "非表示 ⇒⇒ 表示"  		}).Select (x1 => new {  			x1.id'  			x1.item'  			x1.flag'  			x1.crntBook'  			x1.compareItemFlags'  			msg = x1.item == DiffItem.MSIds // group(means MSIds) における差分は group-type を追記するとの仕様追加に応える  			? string.Format ("グループ名称 :{0}\r  {1}{2}"' crntBook.MSIdsAll.First (y => y.IsMatchAttrVal (Cs.GROUP_ID' x1.id)).Attribute (Cs.GROUP_TYPE).Value' x1.msgTitle' x1.val) : string.Format ("{0}{1}"' x1.msgTitle' x1.val)  		}).Where (x1 =>  {  			var needLayoutNeutral = x1.compareItemFlags.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing);  			var needShowStatus = x1.compareItemFlags.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing);  			return needLayoutNeutral ? needShowStatus ? true : x1.flag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) : needShowStatus ? x1.flag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) : false;  		})// 比較対象ブックでないブックによる変更履歴の確認(item 単位で行う)  		.GroupBy (x1 => new {  			id = x1.id'  			item = x1.item'  			crntBook = x1.crntBook  		})// 実質 id のみの grouping だが、次の処理の見易さのために item' crntBook を加えても処理時間に差が見られなかった  		.Select (x1 => new {  			members = x1'  			otherBookMsg = debugOption == EDebug.DebugNoRDB ? "" : Mysql.GetLOHis (x1.Key.crntBook' x1.Key.item' x1.Key.item != DiffItem.Story ? x1.Key.id : x1.Key.crntBook.GetRootMSIdsGrpIdByStoryName (x1.Key.id)' archvDate' debugOption' x.log)  		}).ToList ()// 必須 : 外すと処理時間大きく増加  		.Select (x1 => x1.members.Select (x2 => new {  			x2.id'  			x2.item'  			x2.flag'  			x2.crntBook'  			x2.msg'  			x2.compareItemFlags'  			otherBooksChangingMsg = x1.otherBookMsg  		})).UnionEnumsAsAnEnum ()// 履歴確認おわり  		.Select (x1 => new {  			x1.id'  			x1.item'  			x1.crntBook'  			x1.otherBooksChangingMsg'  			x1.compareItemFlags'  			msg = x1.msg'  			flag = x1.otherBooksChangingMsg == "" ? x1.flag & ~(ECmprElms.LayoutNtrlByOthers | ECmprElms.ShowStBothBYOthers) : x1.flag & ~(ECmprElms.LayoutNtrlBySelf | ECmprElms.ShowStBothBYSelf)  		}).Where (x1 => x1.flag.HasAnyCommonFlag (x1.compareItemFlags' ECmprElms.Nothing)).Select (x1 => new {  			x1.item'  			x1.msg'  			x1.otherBooksChangingMsg'  			x1.id'  			x1.flag'  			isPageBreak = x.crntBook.MSIdPgBreakIds.Contains (x1.id)  		}).Select (x1 => new {  			x1.item'  			x1.msg'  			x1.otherBooksChangingMsg'  			x1.id'  			pageBreakMsg = x1.isPageBreak ? Cs.MSG_PAGEBREAK : ""'  			flag = x1.isPageBreak ? x1.flag | ECmprElms.IsPageBreak : x1.flag  		}).Select (x1 => new Difference {  			DiffItem = x1.item'  			DiffType = DiffType.Layout'  			DiffMessage = x1.msg'  			SubMessage = x1.otherBooksChangingMsg + x1.pageBreakMsg'  			Id = new Id (x1.item' x1.id)'  			FilterFlag = x1.flag  		}).ToList ()  	}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly (Cs.LOG_MODBYOTHER + y.diffs.Where (y1 => y1.FilterFlag.HasFlag (ECmprElms.TextNtrlByOthers)).Count ()' 2)).WithAddingLog (x => x.log' x => x.AddLap ("Fin LODiffs()"' 1)).SelectNewSingle (x => x.diffs);  	#endregion  	#region texts (This function must be called only once!)  	Func<List<DiffMS>// _MSDiffs  	' BookDataEx// _crntBook  	' HashSet<string>// _locIdsToBeIgnoredToBeComparedInTextValue  	' ECmprElms// _compareItemList  	' Log// _log  	' List<Difference>> MSDiffs = (_MSDiffs' _crntBook' _locIdsToBeIgnoredToBeComparedInTextValue' _compareItemList' _log) => new {  		_MSDiffs'  		_crntBook'  		_locIdsToBeIgnoredToBeComparedInTextValue'  		_compareItemList'  		_log  	}.WithAddingLog (x => x._log' x => x.AddLap ("Start MSDiffs()"' 1)).SelectNewSingle (x => new {  		log = x._log'  		ignoreLocIds = x._locIdsToBeIgnoredToBeComparedInTextValue'  		compareItemFlags = x._compareItemList'  		diffs = x._MSDiffs.Select (y => new {  			crntBook = x._crntBook'  			diffElm = y  		})  	}).SelectNewSingle (x => new {  		x.log'  		x.ignoreLocIds'  		x.compareItemFlags'  		diffs = x.diffs.Select (x1 => new {  			x1.crntBook'  			x.log'  			val = new {  				before = x1.diffElm.OldVal'  				after = x1.diffElm.NewVal  			}'  			id = x1.diffElm.Id'  			diffItem = x1.diffElm.OwnerItem  		}).Select (x1 => new {  			x1.id'  			x1.diffItem'  			x1.crntBook'  			x1.val'  			linkTags = new {  				before = x1.val.before.GetLinkTags ()'  				after = x1.val.after.GetLinkTags ()  			}'  			MSHis = debugOption == EDebug.DebugNoRDB ? "" : Mysql.GetMSHis (x1.crntBook' x1.id' archvDate' debugOption' x.log)  		}).Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.val'  			x1.linkTags'  			x1.MSHis'  			linktagsCountDiffMsg = x1.linkTags.before.Count != x1.linkTags.after.Count ? string.Format ("\r -- 相互参照の数が {0} 個から {1} 個に変わっています"/* 相互参照とは link tag のこと */' x1.linkTags.before.Count' x1.linkTags.after.Count) : ""  		}).Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.MSHis'  			x1.linktagsCountDiffMsg'  			val = string.Format ("{0} ⇒⇒ {1}"' x1.val.before' x1.val.after) + x1.MSHis + x1.linktagsCountDiffMsg'  			// link tag の並びの順に従って、True:False... のように着色する(True)か、否か(False)を意図したbool値を格納する  			linkTagsPaintOrNot = x1.linkTags.after.Select ((x2' i) => (x1.linktagsCountDiffMsg != "" || x2 != x1.linkTags.before [i])).ToList ()  		})// 要素が無い場合の値は new List<>() と同値 (not null)  		.Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.MSHis'  			x1.linkTagsPaintOrNot'  			x1.linktagsCountDiffMsg'  			val = x1.linkTagsPaintOrNot.Where (x2 => x2).Count () > 0 && x1.linktagsCountDiffMsg == "" ? x1.val + "\r -- 相互参照に変更があります。" /* 相互参照とは link tag のこと */: x1.val  		}).Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.linkTagsPaintOrNot'  			x1.val'  			x1.MSHis'  			hasLinkTextDiff = x1.linkTagsPaintOrNot.Where (x2 => x2).Count () > 0 || x1.linktagsCountDiffMsg != ""  		/* 後者は "link tag count 1 => 0" を拾うために必要 */}).Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.linkTagsPaintOrNot'  			x1.val'  			flag = x1.MSHis != "" ? x1.hasLinkTextDiff ? ECmprElms.TextAsLinkByOthers : ECmprElms.TextNtrlByOthers : x1.hasLinkTextDiff ? ECmprElms.TextAsLinkBySelf : ECmprElms.TextNtrlBySelf  		}).ToList ()  	}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly (Cs.LOG_MODBYOTHER + y.diffs.Where (y1 => y1.flag.HasAnyCommonFlag (y.compareItemFlags' ECmprElms.Nothing)).Count ()' 2)).SelectNewSingle (x => new {  		x.log'  		x.ignoreLocIds'  		diffs = x.diffs.Where (x1 => x1.flag.HasAnyCommonFlag (x.compareItemFlags' ECmprElms.Nothing)).ToList ()  	}).SelectNewSingle (x => new {  		x.log'  		diffs = x.diffs.Select (x1 => new {  			x1.val'  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.flag'  			x1.linkTagsPaintOrNot'  			OwnerIds = x1.diffItem == DiffItem.Toc ? x1.crntBook.BookData.GetTocIdByMSId (x1.id).ToList () : x1.diffItem == DiffItem.MSId ? x1.crntBook.MSIdAll.Where (y => y.IsMatchAttrVal (Cs.ID' x1.id)).Select (y => y.Attribute (Cs.LOC_ID).Value).Where (y => !x.ignoreLocIds.Contains (y)).ToList () // ! This evaluation is important !  			: null  		}).ToList ()  	}).WithAddingLog (x => x.log' x => x.AddLap ("Added ownerId"' 2)).SelectNewSingle (x => new {  		x.log'  		diffs = x.diffs// MS.Id を所持する MSId が見つかったか、見つからなかったか  		.Select (x1 => x1.OwnerIds.Select (y => new {  			x1.val'  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.flag'  			x1.linkTagsPaintOrNot'  			diffItemId = x1.OwnerIds.Count () == 0 ? Cs.MSG_NOTFOUND : y  		})).UnionEnumsAsAnEnum ().Select (x1 => new Difference {  			DiffType = DiffType.TextValue'  			DiffItem = x1.diffItem'  			DiffMessage = x1.val'  			ContentsId = x1.id'  			Id = new Id (x1.diffItem' x1.diffItemId)'  			FilterFlag = x1.flag'  			LinkTagsPaintOrNot = x1.linkTagsPaintOrNot  		})// 利用されていない MS の差分は除外する  		.Where (x1 => x1.Id.IdString != Cs.MSG_NOTFOUND).ToList ()  	}).WithAddingLog (x => x.log' x => x.AddLap ("Fin MSDiffs()"' 1)).SelectNewSingle (x => x.diffs);  	#endregion  	#region illustrations (connect server)  	var illstDiff = debugOption == EDebug.DebugNoRDB || !delphiParams.ComparisonElms.HasFlag (ECmprElms.IllustHisByAny) ? new List<Difference> () : Mysql.GetIllstHis (crntBook' archvDate' langList' debugOption' log);  	log.AddLap ("illstHisCount:" + illstDiff.Count ().ToString () + " Date:" + archvDate.ToString ()' 1);  	#endregion  	#region Set variables 'Diffs' (Union) and 'TocGroupsHavingMemIds'  	var Diffs = LinqExtension.UnionEnumsAsAnEnum (LODiffs (diffLOs' crntBook' arcvBook' delphiParams.LOParameters' delphiParams.ComparisonElms' log)' MSDiffs (diffMSs' crntBook' locIdsToBeIgnoredInComparingTexts' delphiParams.ComparisonElms' log)' illstDiff).ToList ();  	// この時点では a Diff にただひとつの差分しか納められていない (差分発生箇所単位にまとめられていない)  	Debug.Assert (!Diffs.Any (x => x.DiffItem == DiffItem.Default)' "Some Diff.DiffItem isn't implemented.");  	Debug.Assert (!Diffs.Any (x => x.Id.IdString == Cs.MSG_NOTFOUND)' "Some Id isn't found in crnt book.");  	var TocGroupsHavingMemIds = crntBook//.BookData  	//.Root  	//.Descendants(Cs.MODEL)  	//.First(y => y.Element(Cs.GROUPS).Elements().Count() > 0) // Elements() is not Nullable.  	//.Descendants(Cs.GROUP)  	.TocAll.Where (y => y.Element (Cs.MEMBER_IDS).Elements ().Count () > 0).ToList ();  	#endregion  	// 加工開始　-------------------------------  	#region Text 差分の表示内容を加工  	Diffs.Where (x => x.DiffType.HasFlag (DiffType.TextValue)).SideEffectsOnlyAsParalles (x => x.DiffMessage = x.DiffItem.SwitchExpression (new Dictionary<DiffItem' string> {  		{  			DiffItem.Illst'  			string.Format ("{0}\r    内容 :\r{1}\rIllstId :{2}"' "イラスト履歴"' x.DiffMessage' x.ContentsId)  		}'  		{  			DiffItem.MSId'  			string.Format ("{0}\r    変更内容 :{1}\rTextId :{2}"' "本文テキスト"' x.DiffMessage' x.ContentsId)  		}'  		{  			DiffItem.Toc'  			string.Format ("{0}\r    変更内容 :{1}\rTextId :{2}"' "目次テキスト"' x.DiffMessage' x.ContentsId)  		}  	}' x.DiffMessage));  	//  x.DiffItem == DiffItem.Illst  	//    ? string.Format("{0}\r    内容 :\r{1}\rIllstId :{2}"' "イラスト履歴"' x.DiffMessage' x.ContentsId)  	//: x.DiffItem == DiffItem.MSId  	//    ? string.Format("{0}\r    変更内容 :{1}\rTextId :{2}"' "本文テキスト"' x.DiffMessage' x.ContentsId)  	//: x.DiffItem == DiffItem.Toc  	//    ? string.Format("{0}\r    変更内容 :{1}\rTextId :{2}"' "目次テキスト"' x.DiffMessage' x.ContentsId)  	//    : x.DiffMessage; });  	log.AddLap ("Fin formatting message."' 1);  	#endregion  	#region Unify multiple diffs at the same item.  	#region Layout  	Diffs.Where (x => x.Id.IdString != Cs.MSG_NOTFOUND).Where (x => x.DiffType.HasFlag (DiffType.Layout)).GroupBy (x => x.Id.IdString).Where (x => x.Count () > 1)// !! With side effects !!  	.SideEffectsOnly (x =>  {  		var firstDiffItem = x.First ();  		firstDiffItem.LinkTagsPaintOrNot = x.Select (x1 => x1.LinkTagsPaintOrNot).FirstOrDefault (y => y != null);  		// Default is null.  		firstDiffItem.DiffType = x.Select (x1 => x1.DiffType).Aggregate ((a' b) => a | b);  		firstDiffItem.FilterFlag = x.Select (x1 => x1.FilterFlag).Aggregate ((a' b) => a | b);  		firstDiffItem.DiffMessage = x.Select (x1 => x1.DiffMessage).Aggregate ((a' b) => a + "\r  " + b);  		x.Skip (1).ToList ().ForEach (y => y.DiffType = DiffType.ToBeRemoved);  	});  	Diffs.Where (x => x.Id.IdString != Cs.MSG_NOTFOUND).Where (x => x.DiffType.HasFlag (DiffType.Layout)).ToList ().ForEach (x =>  {  		x.DiffMessage = x.DiffMessage + x.SubMessage;  	});  	// Layout diff において、.SubMessage は他ブック変更を表現する文章なので、同一箇所においてはすべて同じ  	#endregion  	#region Text  	Diffs//.Where(x => x.HiddenInfo.HiddenBy == HiddenBy.None)  	.Where (x => x.DiffType != DiffType.ToBeRemoved).Where (x => x.Id.IdString != Cs.MSG_NOTFOUND).GroupBy (x => x.Id.IdString).Where (x => x.Count () > 1)// !! With side effects !!  	.SideEffectsOnly (x =>  {  		var firstDiffItem = x.First ();  		firstDiffItem.DiffMessage = x.Select (y => y.DiffMessage).JoinStringWith ("\r" + Fo.ANNMSG_BOUND + "\r  ");  		firstDiffItem.LinkTagsPaintOrNot = x.Select (x1 => x1.LinkTagsPaintOrNot).FirstOrDefault (y => y != null);  		// Default is null.  		firstDiffItem.DiffType = x.Select (x1 => x1.DiffType).Aggregate ((a' b) => a | b);  		firstDiffItem.FilterFlag = x.Select (x1 => x1.FilterFlag).Aggregate ((a' b) => a | b);  		x.Skip (1).ToList ().ForEach (y => y.DiffType = DiffType.ToBeRemoved);  	});  	#endregion  	log.AddLap ("Fin merge messages in same location."' 1);  	#endregion  	#region Add RelatedStoryId  	// Story.Id は編集者にとって必要ないようだが、当実行 file の処理には不可欠  	// D&M の巨大な data でも非同期処理による時間短縮はできなかった  	Diffs.GroupBy (x => x.DiffItem)//.ToList()       // NotFound  は...  	//.ForEach(x => {  	.SideEffectsOnlyAsParalles (x => x.SideEffectsOnlyAsParalles (x1 =>  {  		switch (x.Key) {  		case DiffItem.Toc:  			x1.RelatedStoryId = crntBook.TocAll.FirstOrDefault (x2 => x2.IsMatchAttrVal (Cs.ID' x1.Id.IdString)).ToMaybe ()// toc を子孫として持つ toc は .groups に childrenTocs と story container を並列して持ち、その順序は不定なので groupType == 2 が不可欠  			.MaybeM (x2 => x2.Element (Cs.GROUPS).Elements ().FirstOrDefault (x3 => x3.IsMatchAttrVal (Cs.GROUP_TYPE' "2"))).MaybeM (x2 => x2.Element (Cs.MEMBER_IDS).Element (Cs.STRING).Value).SelectNewSingle (x2 => x2.HasValue ? x2.Value : Cs.MSG_NOTFOUND);  			break;  		case DiffItem.Story:  			x1.RelatedStoryId = x1.Id.IdString;  			break;  		case DiffItem.MSIds:  			x1.RelatedStoryId = crntBook.MSIdsAll.FirstOrDefault (x2 => x2.IsMatchAttrVal (Cs.GROUP_ID' x1.Id.IdString)).SelectNewSingle (x2 => x2 == null ? Cs.MSG_NOTFOUND : x2.GetAncestorStory ().Attribute (Cs.ID).Value);  			break;  		case DiffItem.MSId:  		case DiffItem.Illst:  			x1.RelatedStoryId = crntBook.MSIdAll.FirstOrDefault (x3 => x3.IsMatchAttrVal (Cs.LOC_ID' x1.Id.IdString)).SelectNewSingle (x3 => x3 == null ? Cs.MSG_NOTFOUND : x3.GetAncestorStory ().Attribute (Cs.ID).Value);  			break;  		}  	}));  	log.AddLap ("Fin adding relatedStoryId."' 1);  	#endregion  	#region 目次に紐づいていない story 以下の差分を削除  	Diffs = Diffs.Except (Diffs.Where (x => x.DiffItem != DiffItem.Toc && TocGroupsHavingMemIds.GetTocByStoryId (x.RelatedStoryId) == null)).ToList ();  	log.AddLap ("Fin removing stories disconnected to toc."' 1);  	#endregion  	#region Related story が cover page であるか、ないか  	Diffs.AsParallel ().Where (x => !new[] {  		Cs.MSG_NOTFOUND'  		Cs.MSG_ISTOCDIFF  	}.Contains (x.RelatedStoryId)).SideEffectsOnly (x => x.IsCoverPage = TocGroupsHavingMemIds.GetTocByStoryId (x.RelatedStoryId).Parent.Parent.Descendants (Cs.PROPERTY).Where (y => y.IsMatchAttrVal ("name"' "menu-id")).Any (y => y.IsContainsAttrVal ("value"' new[] {  		"cover"  	})));  	// -top -back のみと思われるが  	#endregion  	#region Add Hidden info  	Debug.Assert (!Diffs.Any (x => x.DiffItem == DiffItem.Default)' "Some Diff.DiffItem isn't implemented.");  	Task.WaitAll (Diffs.Select (x => Task.Factory.StartNew (() => new {  		diff = x'  		idName = x.Id.Name.ToStringFormal ()'  		idVal = x.Id.IdString'  		elm = x.DiffItem == DiffItem.Story ? crntBook.StoryAll : x.DiffItem == DiffItem.Toc ? crntBook.TocAll : x.DiffItem == DiffItem.MSIds ? crntBook.MSIdsAll : crntBook.MSIdAll  	/* MSId or Illst */}.DoActionSingle (x1 =>  {  		x1.diff.HiddenInfo = x1.elm.FirstOrDefault (x2 => x2.Attribute (x1.idName).Value == x1.idVal).GetHiddenStatusWithAnscestors (TocGroupsHavingMemIds);  	}))).ToArray ());  	Debug.Assert (!Diffs.Any (x => x.HiddenInfo == null)' "Some objects doesn't implemented HiddenInfo.");  	log.AddLap ("Fin adding hidden information."' 1);  	#endregion  	#region MSId の差分について、IllustrationText である場合は DiffMsg にその旨追記  	Diffs.AsParallel ().Where (x => x.DiffItem == DiffItem.MSId).AssertElm (x => crntBook.MSIdDic.Keys.Contains (x.Id.IdString)).Where (x => crntBook.MSIdDic [x.Id.IdString].IsMatchAttrVal (Cs.MS_TYPE' "illustration-text")).SideEffectsOnlyAsParalles (x => x.DiffMessage = "**イラストレーションテキスト**\r" + x.DiffMessage);  	log.AddLap ("Fin adding illustrationText message."' 1);  	#endregion  	#region Filter  --  Redundant' Hidden Illustration Histories' Hidden by ancestors  	Diffs = Diffs.AsParallel ().Where (x => x.DiffType != DiffType.ToBeRemoved)// Excludes illustration diffs as hidden MSId (But it is exceptional that the item's show status changed to 'Hide'.)  	.Where (x => !(x.DiffType.HasFlag (DiffType.IllustHis) && x.HiddenInfo.HiddenBy != HiddenBy.None && !x.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing))).Where (x => x.HiddenInfo.HiddenBy != HiddenBy.AncestorProp)// Jan.29.2015  	.ToList ();  	log.AddLap ("Fin sorting."' 1);  	#endregion  	#region Add Hidden item LO annot texts  (17.June.2015 : Toc の書式については差分を見ていない、見るようになると GetDescendantsTextByGroupIdOrLocId() では対応できないので、追加処理が必要)  	Parallel.ForEach (Diffs.Where (x => x.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing))' x =>  {  		x.DiffMessage = x.DiffMessage.Replace (FormatDiffXml.ToHideTextFmt' crntBook.GetDescendantsTextByGroupIdOrLocId (x.Id.IdString));  	});  	log.AddLap ("Fin Adding HIdden item texts."' 1);  	#endregion  	#region coverpage  	Diffs.Where (x => x.IsCoverPage).ToList ().ForEach (x => x.DiffMessage = "（背）表紙の要素\r" + x.DiffMessage);  	log.AddLap ("Fin adding coverPage message."' 1);  	#endregion  	return Diffs;  }  finally {  	mstLog.logMessages.AddRange (log.logMessages.Skip (1));  }  
Magic Number,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The following statement contains a magic number: try {  	#region layouts (This function must be called only once!)  	Func<List<DiffLO>// _LODiffXml  	' BookDataEx// _crntBook  	' BookDataEx// _arcvBook  	' List<string>// prmsToCompare  	' ECmprElms// _compareItemFlags  	' Log// _log  	' List<Difference>> LODiffs = (_LODiffs' _crntBook' _arcvBook' prmsToCompare' _compareItemFlags' _log) => new {  		_LODiffs'  		_crntBook'  		_arcvBook'  		prmsToCompare'  		_compareItemFlags'  		_log  	}.WithAddingLog (x => x._log' x => x.AddLap ("Start LODiffs()"' 1)).SelectNewSingle (x => new {  		prmsToCompare'  		compareItemFlags = x._compareItemFlags'  		log = x._log'  		crntBook = x._crntBook'  		arcvBook = x._arcvBook'  		diffs = x._LODiffs'  		showHideFormalValues = new[] {  			""'  			"0"'  			"1"'  			Cs.MSG_NOVALUE  		}'  		formatFunc = new Func<DiffStatus' string' string' string' string> ((st' name' oldVal' newVal) => st.SwitchExpression (new Dictionary<DiffStatus' string> {  			{  				DiffStatus.Added'  				string.Format (Fo.ANNMSG_LO_FMT' "追加"' name' newVal)  			}'  			{  				DiffStatus.Removed'  				string.Format (Fo.ANNMSG_LO_FMT' "削除"' name' oldVal)  			}'  			{  				DiffStatus.Changed'  				string.Format (Fo.ANNMSG_LO_FMT' "変更"' name' oldVal + " ⇒⇒ " + newVal)  			}//' { DiffStatus.Irregular' string.Format(Fo.ANNMSG_LO_FMT' "比較エラー"' name' "書式重複あり" + oldVal + (oldVal == "" ? newVal : newVal == "" ? "" : "、また" + newVal)) } }  			'  			{  				DiffStatus.Irregular'  				string.Format (Fo.ANNMSG_LO_FMT' "比較エラー"' name' "書式重複あり (" + (oldVal == "" ? "現在の" : newVal == "" ? "アーカイブ" : "現在およびアーカイブ両") + "ブックにおいて)")  			}  		}' ""))  	}).SelectNewSingle (x => new {  		x.log'  		x.crntBook'  		x.arcvBook'  		x.compareItemFlags'  		diffs = x.diffs.Select (x1 => new {  			x.crntBook'  			x.arcvBook'  			x.formatFunc'  			x.showHideFormalValues'  			x.prmsToCompare'  			x.compareItemFlags'  			id = x1.Id.IdString'  			item = x1.OwnerItem'  			status = x1.DiffStatus'  			val = new {  				LOPrmName = x1.Name'  				OldValue = x1.OldVal ?? ""'  				NewValue = x1.NewVal ?? ""  			}  		}).Where (x1 => x1.val.LOPrmName.MatchAny (x.prmsToCompare)).Select (x1 => new {  			x1.id'  			x1.item'  			x1.status'  			x1.crntBook'  			x.arcvBook'  			x1.val'  			x1.formatFunc'  			x1.showHideFormalValues'  			x1.compareItemFlags'  			flag = x1.val.LOPrmName.MatchAny (Cs.PP_SHOWHIDE_SET) && x1.val.NewValue.MatchAny (x1.showHideFormalValues) // 非公式な値を取っている場合は、一般書式と同じ表記を取る (参考 : 1 と異なる値を持つときは表示状態となる)  			&& x1.val.OldValue.MatchAny (x1.showHideFormalValues) ? x1.val.NewValue == "1" ? ECmprElms.ShowStHiddenByAny // "" or "0" ==> "1"  			: ECmprElms.ShowStShownByAny : ECmprElms.LayoutNtrlByAny  		}).Select (x1 => new {  			x1.id'  			x1.item'  			x1.status'  			x1.flag'  			x1.crntBook'  			x1.compareItemFlags'  			msgTitle = x1.flag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? "レイアウト" : "表示ステータス  "'  			val = x1.flag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) ? x1.formatFunc (x1.status' x1.val.LOPrmName' x1.val.OldValue' x1.val.NewValue) : x1.flag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing) ? "表示 ⇒⇒ 非表示\r  テキスト : " + FormatDiffXml.ToHideTextFmt + "\r" : "非表示 ⇒⇒ 表示"  		}).Select (x1 => new {  			x1.id'  			x1.item'  			x1.flag'  			x1.crntBook'  			x1.compareItemFlags'  			msg = x1.item == DiffItem.MSIds // group(means MSIds) における差分は group-type を追記するとの仕様追加に応える  			? string.Format ("グループ名称 :{0}\r  {1}{2}"' crntBook.MSIdsAll.First (y => y.IsMatchAttrVal (Cs.GROUP_ID' x1.id)).Attribute (Cs.GROUP_TYPE).Value' x1.msgTitle' x1.val) : string.Format ("{0}{1}"' x1.msgTitle' x1.val)  		}).Where (x1 =>  {  			var needLayoutNeutral = x1.compareItemFlags.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing);  			var needShowStatus = x1.compareItemFlags.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing);  			return needLayoutNeutral ? needShowStatus ? true : x1.flag.HasAnyCommonFlag (ECmprElms.LayoutNtrlByAny' ECmprElms.Nothing) : needShowStatus ? x1.flag.HasAnyCommonFlag (ECmprElms.ShowStatusBothByAny' ECmprElms.Nothing) : false;  		})// 比較対象ブックでないブックによる変更履歴の確認(item 単位で行う)  		.GroupBy (x1 => new {  			id = x1.id'  			item = x1.item'  			crntBook = x1.crntBook  		})// 実質 id のみの grouping だが、次の処理の見易さのために item' crntBook を加えても処理時間に差が見られなかった  		.Select (x1 => new {  			members = x1'  			otherBookMsg = debugOption == EDebug.DebugNoRDB ? "" : Mysql.GetLOHis (x1.Key.crntBook' x1.Key.item' x1.Key.item != DiffItem.Story ? x1.Key.id : x1.Key.crntBook.GetRootMSIdsGrpIdByStoryName (x1.Key.id)' archvDate' debugOption' x.log)  		}).ToList ()// 必須 : 外すと処理時間大きく増加  		.Select (x1 => x1.members.Select (x2 => new {  			x2.id'  			x2.item'  			x2.flag'  			x2.crntBook'  			x2.msg'  			x2.compareItemFlags'  			otherBooksChangingMsg = x1.otherBookMsg  		})).UnionEnumsAsAnEnum ()// 履歴確認おわり  		.Select (x1 => new {  			x1.id'  			x1.item'  			x1.crntBook'  			x1.otherBooksChangingMsg'  			x1.compareItemFlags'  			msg = x1.msg'  			flag = x1.otherBooksChangingMsg == "" ? x1.flag & ~(ECmprElms.LayoutNtrlByOthers | ECmprElms.ShowStBothBYOthers) : x1.flag & ~(ECmprElms.LayoutNtrlBySelf | ECmprElms.ShowStBothBYSelf)  		}).Where (x1 => x1.flag.HasAnyCommonFlag (x1.compareItemFlags' ECmprElms.Nothing)).Select (x1 => new {  			x1.item'  			x1.msg'  			x1.otherBooksChangingMsg'  			x1.id'  			x1.flag'  			isPageBreak = x.crntBook.MSIdPgBreakIds.Contains (x1.id)  		}).Select (x1 => new {  			x1.item'  			x1.msg'  			x1.otherBooksChangingMsg'  			x1.id'  			pageBreakMsg = x1.isPageBreak ? Cs.MSG_PAGEBREAK : ""'  			flag = x1.isPageBreak ? x1.flag | ECmprElms.IsPageBreak : x1.flag  		}).Select (x1 => new Difference {  			DiffItem = x1.item'  			DiffType = DiffType.Layout'  			DiffMessage = x1.msg'  			SubMessage = x1.otherBooksChangingMsg + x1.pageBreakMsg'  			Id = new Id (x1.item' x1.id)'  			FilterFlag = x1.flag  		}).ToList ()  	}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly (Cs.LOG_MODBYOTHER + y.diffs.Where (y1 => y1.FilterFlag.HasFlag (ECmprElms.TextNtrlByOthers)).Count ()' 2)).WithAddingLog (x => x.log' x => x.AddLap ("Fin LODiffs()"' 1)).SelectNewSingle (x => x.diffs);  	#endregion  	#region texts (This function must be called only once!)  	Func<List<DiffMS>// _MSDiffs  	' BookDataEx// _crntBook  	' HashSet<string>// _locIdsToBeIgnoredToBeComparedInTextValue  	' ECmprElms// _compareItemList  	' Log// _log  	' List<Difference>> MSDiffs = (_MSDiffs' _crntBook' _locIdsToBeIgnoredToBeComparedInTextValue' _compareItemList' _log) => new {  		_MSDiffs'  		_crntBook'  		_locIdsToBeIgnoredToBeComparedInTextValue'  		_compareItemList'  		_log  	}.WithAddingLog (x => x._log' x => x.AddLap ("Start MSDiffs()"' 1)).SelectNewSingle (x => new {  		log = x._log'  		ignoreLocIds = x._locIdsToBeIgnoredToBeComparedInTextValue'  		compareItemFlags = x._compareItemList'  		diffs = x._MSDiffs.Select (y => new {  			crntBook = x._crntBook'  			diffElm = y  		})  	}).SelectNewSingle (x => new {  		x.log'  		x.ignoreLocIds'  		x.compareItemFlags'  		diffs = x.diffs.Select (x1 => new {  			x1.crntBook'  			x.log'  			val = new {  				before = x1.diffElm.OldVal'  				after = x1.diffElm.NewVal  			}'  			id = x1.diffElm.Id'  			diffItem = x1.diffElm.OwnerItem  		}).Select (x1 => new {  			x1.id'  			x1.diffItem'  			x1.crntBook'  			x1.val'  			linkTags = new {  				before = x1.val.before.GetLinkTags ()'  				after = x1.val.after.GetLinkTags ()  			}'  			MSHis = debugOption == EDebug.DebugNoRDB ? "" : Mysql.GetMSHis (x1.crntBook' x1.id' archvDate' debugOption' x.log)  		}).Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.val'  			x1.linkTags'  			x1.MSHis'  			linktagsCountDiffMsg = x1.linkTags.before.Count != x1.linkTags.after.Count ? string.Format ("\r -- 相互参照の数が {0} 個から {1} 個に変わっています"/* 相互参照とは link tag のこと */' x1.linkTags.before.Count' x1.linkTags.after.Count) : ""  		}).Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.MSHis'  			x1.linktagsCountDiffMsg'  			val = string.Format ("{0} ⇒⇒ {1}"' x1.val.before' x1.val.after) + x1.MSHis + x1.linktagsCountDiffMsg'  			// link tag の並びの順に従って、True:False... のように着色する(True)か、否か(False)を意図したbool値を格納する  			linkTagsPaintOrNot = x1.linkTags.after.Select ((x2' i) => (x1.linktagsCountDiffMsg != "" || x2 != x1.linkTags.before [i])).ToList ()  		})// 要素が無い場合の値は new List<>() と同値 (not null)  		.Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.MSHis'  			x1.linkTagsPaintOrNot'  			x1.linktagsCountDiffMsg'  			val = x1.linkTagsPaintOrNot.Where (x2 => x2).Count () > 0 && x1.linktagsCountDiffMsg == "" ? x1.val + "\r -- 相互参照に変更があります。" /* 相互参照とは link tag のこと */: x1.val  		}).Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.linkTagsPaintOrNot'  			x1.val'  			x1.MSHis'  			hasLinkTextDiff = x1.linkTagsPaintOrNot.Where (x2 => x2).Count () > 0 || x1.linktagsCountDiffMsg != ""  		/* 後者は "link tag count 1 => 0" を拾うために必要 */}).Select (x1 => new {  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.linkTagsPaintOrNot'  			x1.val'  			flag = x1.MSHis != "" ? x1.hasLinkTextDiff ? ECmprElms.TextAsLinkByOthers : ECmprElms.TextNtrlByOthers : x1.hasLinkTextDiff ? ECmprElms.TextAsLinkBySelf : ECmprElms.TextNtrlBySelf  		}).ToList ()  	}).WithAddingLog (x => x.log' (x' y) => x.AddMsgOnly (Cs.LOG_MODBYOTHER + y.diffs.Where (y1 => y1.flag.HasAnyCommonFlag (y.compareItemFlags' ECmprElms.Nothing)).Count ()' 2)).SelectNewSingle (x => new {  		x.log'  		x.ignoreLocIds'  		diffs = x.diffs.Where (x1 => x1.flag.HasAnyCommonFlag (x.compareItemFlags' ECmprElms.Nothing)).ToList ()  	}).SelectNewSingle (x => new {  		x.log'  		diffs = x.diffs.Select (x1 => new {  			x1.val'  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.flag'  			x1.linkTagsPaintOrNot'  			OwnerIds = x1.diffItem == DiffItem.Toc ? x1.crntBook.BookData.GetTocIdByMSId (x1.id).ToList () : x1.diffItem == DiffItem.MSId ? x1.crntBook.MSIdAll.Where (y => y.IsMatchAttrVal (Cs.ID' x1.id)).Select (y => y.Attribute (Cs.LOC_ID).Value).Where (y => !x.ignoreLocIds.Contains (y)).ToList () // ! This evaluation is important !  			: null  		}).ToList ()  	}).WithAddingLog (x => x.log' x => x.AddLap ("Added ownerId"' 2)).SelectNewSingle (x => new {  		x.log'  		diffs = x.diffs// MS.Id を所持する MSId が見つかったか、見つからなかったか  		.Select (x1 => x1.OwnerIds.Select (y => new {  			x1.val'  			x1.id'  			x1.crntBook'  			x1.diffItem'  			x1.flag'  			x1.linkTagsPaintOrNot'  			diffItemId = x1.OwnerIds.Count () == 0 ? Cs.MSG_NOTFOUND : y  		})).UnionEnumsAsAnEnum ().Select (x1 => new Difference {  			DiffType = DiffType.TextValue'  			DiffItem = x1.diffItem'  			DiffMessage = x1.val'  			ContentsId = x1.id'  			Id = new Id (x1.diffItem' x1.diffItemId)'  			FilterFlag = x1.flag'  			LinkTagsPaintOrNot = x1.linkTagsPaintOrNot  		})// 利用されていない MS の差分は除外する  		.Where (x1 => x1.Id.IdString != Cs.MSG_NOTFOUND).ToList ()  	}).WithAddingLog (x => x.log' x => x.AddLap ("Fin MSDiffs()"' 1)).SelectNewSingle (x => x.diffs);  	#endregion  	#region illustrations (connect server)  	var illstDiff = debugOption == EDebug.DebugNoRDB || !delphiParams.ComparisonElms.HasFlag (ECmprElms.IllustHisByAny) ? new List<Difference> () : Mysql.GetIllstHis (crntBook' archvDate' langList' debugOption' log);  	log.AddLap ("illstHisCount:" + illstDiff.Count ().ToString () + " Date:" + archvDate.ToString ()' 1);  	#endregion  	#region Set variables 'Diffs' (Union) and 'TocGroupsHavingMemIds'  	var Diffs = LinqExtension.UnionEnumsAsAnEnum (LODiffs (diffLOs' crntBook' arcvBook' delphiParams.LOParameters' delphiParams.ComparisonElms' log)' MSDiffs (diffMSs' crntBook' locIdsToBeIgnoredInComparingTexts' delphiParams.ComparisonElms' log)' illstDiff).ToList ();  	// この時点では a Diff にただひとつの差分しか納められていない (差分発生箇所単位にまとめられていない)  	Debug.Assert (!Diffs.Any (x => x.DiffItem == DiffItem.Default)' "Some Diff.DiffItem isn't implemented.");  	Debug.Assert (!Diffs.Any (x => x.Id.IdString == Cs.MSG_NOTFOUND)' "Some Id isn't found in crnt book.");  	var TocGroupsHavingMemIds = crntBook//.BookData  	//.Root  	//.Descendants(Cs.MODEL)  	//.First(y => y.Element(Cs.GROUPS).Elements().Count() > 0) // Elements() is not Nullable.  	//.Descendants(Cs.GROUP)  	.TocAll.Where (y => y.Element (Cs.MEMBER_IDS).Elements ().Count () > 0).ToList ();  	#endregion  	// 加工開始　-------------------------------  	#region Text 差分の表示内容を加工  	Diffs.Where (x => x.DiffType.HasFlag (DiffType.TextValue)).SideEffectsOnlyAsParalles (x => x.DiffMessage = x.DiffItem.SwitchExpression (new Dictionary<DiffItem' string> {  		{  			DiffItem.Illst'  			string.Format ("{0}\r    内容 :\r{1}\rIllstId :{2}"' "イラスト履歴"' x.DiffMessage' x.ContentsId)  		}'  		{  			DiffItem.MSId'  			string.Format ("{0}\r    変更内容 :{1}\rTextId :{2}"' "本文テキスト"' x.DiffMessage' x.ContentsId)  		}'  		{  			DiffItem.Toc'  			string.Format ("{0}\r    変更内容 :{1}\rTextId :{2}"' "目次テキスト"' x.DiffMessage' x.ContentsId)  		}  	}' x.DiffMessage));  	//  x.DiffItem == DiffItem.Illst  	//    ? string.Format("{0}\r    内容 :\r{1}\rIllstId :{2}"' "イラスト履歴"' x.DiffMessage' x.ContentsId)  	//: x.DiffItem == DiffItem.MSId  	//    ? string.Format("{0}\r    変更内容 :{1}\rTextId :{2}"' "本文テキスト"' x.DiffMessage' x.ContentsId)  	//: x.DiffItem == DiffItem.Toc  	//    ? string.Format("{0}\r    変更内容 :{1}\rTextId :{2}"' "目次テキスト"' x.DiffMessage' x.ContentsId)  	//    : x.DiffMessage; });  	log.AddLap ("Fin formatting message."' 1);  	#endregion  	#region Unify multiple diffs at the same item.  	#region Layout  	Diffs.Where (x => x.Id.IdString != Cs.MSG_NOTFOUND).Where (x => x.DiffType.HasFlag (DiffType.Layout)).GroupBy (x => x.Id.IdString).Where (x => x.Count () > 1)// !! With side effects !!  	.SideEffectsOnly (x =>  {  		var firstDiffItem = x.First ();  		firstDiffItem.LinkTagsPaintOrNot = x.Select (x1 => x1.LinkTagsPaintOrNot).FirstOrDefault (y => y != null);  		// Default is null.  		firstDiffItem.DiffType = x.Select (x1 => x1.DiffType).Aggregate ((a' b) => a | b);  		firstDiffItem.FilterFlag = x.Select (x1 => x1.FilterFlag).Aggregate ((a' b) => a | b);  		firstDiffItem.DiffMessage = x.Select (x1 => x1.DiffMessage).Aggregate ((a' b) => a + "\r  " + b);  		x.Skip (1).ToList ().ForEach (y => y.DiffType = DiffType.ToBeRemoved);  	});  	Diffs.Where (x => x.Id.IdString != Cs.MSG_NOTFOUND).Where (x => x.DiffType.HasFlag (DiffType.Layout)).ToList ().ForEach (x =>  {  		x.DiffMessage = x.DiffMessage + x.SubMessage;  	});  	// Layout diff において、.SubMessage は他ブック変更を表現する文章なので、同一箇所においてはすべて同じ  	#endregion  	#region Text  	Diffs//.Where(x => x.HiddenInfo.HiddenBy == HiddenBy.None)  	.Where (x => x.DiffType != DiffType.ToBeRemoved).Where (x => x.Id.IdString != Cs.MSG_NOTFOUND).GroupBy (x => x.Id.IdString).Where (x => x.Count () > 1)// !! With side effects !!  	.SideEffectsOnly (x =>  {  		var firstDiffItem = x.First ();  		firstDiffItem.DiffMessage = x.Select (y => y.DiffMessage).JoinStringWith ("\r" + Fo.ANNMSG_BOUND + "\r  ");  		firstDiffItem.LinkTagsPaintOrNot = x.Select (x1 => x1.LinkTagsPaintOrNot).FirstOrDefault (y => y != null);  		// Default is null.  		firstDiffItem.DiffType = x.Select (x1 => x1.DiffType).Aggregate ((a' b) => a | b);  		firstDiffItem.FilterFlag = x.Select (x1 => x1.FilterFlag).Aggregate ((a' b) => a | b);  		x.Skip (1).ToList ().ForEach (y => y.DiffType = DiffType.ToBeRemoved);  	});  	#endregion  	log.AddLap ("Fin merge messages in same location."' 1);  	#endregion  	#region Add RelatedStoryId  	// Story.Id は編集者にとって必要ないようだが、当実行 file の処理には不可欠  	// D&M の巨大な data でも非同期処理による時間短縮はできなかった  	Diffs.GroupBy (x => x.DiffItem)//.ToList()       // NotFound  は...  	//.ForEach(x => {  	.SideEffectsOnlyAsParalles (x => x.SideEffectsOnlyAsParalles (x1 =>  {  		switch (x.Key) {  		case DiffItem.Toc:  			x1.RelatedStoryId = crntBook.TocAll.FirstOrDefault (x2 => x2.IsMatchAttrVal (Cs.ID' x1.Id.IdString)).ToMaybe ()// toc を子孫として持つ toc は .groups に childrenTocs と story container を並列して持ち、その順序は不定なので groupType == 2 が不可欠  			.MaybeM (x2 => x2.Element (Cs.GROUPS).Elements ().FirstOrDefault (x3 => x3.IsMatchAttrVal (Cs.GROUP_TYPE' "2"))).MaybeM (x2 => x2.Element (Cs.MEMBER_IDS).Element (Cs.STRING).Value).SelectNewSingle (x2 => x2.HasValue ? x2.Value : Cs.MSG_NOTFOUND);  			break;  		case DiffItem.Story:  			x1.RelatedStoryId = x1.Id.IdString;  			break;  		case DiffItem.MSIds:  			x1.RelatedStoryId = crntBook.MSIdsAll.FirstOrDefault (x2 => x2.IsMatchAttrVal (Cs.GROUP_ID' x1.Id.IdString)).SelectNewSingle (x2 => x2 == null ? Cs.MSG_NOTFOUND : x2.GetAncestorStory ().Attribute (Cs.ID).Value);  			break;  		case DiffItem.MSId:  		case DiffItem.Illst:  			x1.RelatedStoryId = crntBook.MSIdAll.FirstOrDefault (x3 => x3.IsMatchAttrVal (Cs.LOC_ID' x1.Id.IdString)).SelectNewSingle (x3 => x3 == null ? Cs.MSG_NOTFOUND : x3.GetAncestorStory ().Attribute (Cs.ID).Value);  			break;  		}  	}));  	log.AddLap ("Fin adding relatedStoryId."' 1);  	#endregion  	#region 目次に紐づいていない story 以下の差分を削除  	Diffs = Diffs.Except (Diffs.Where (x => x.DiffItem != DiffItem.Toc && TocGroupsHavingMemIds.GetTocByStoryId (x.RelatedStoryId) == null)).ToList ();  	log.AddLap ("Fin removing stories disconnected to toc."' 1);  	#endregion  	#region Related story が cover page であるか、ないか  	Diffs.AsParallel ().Where (x => !new[] {  		Cs.MSG_NOTFOUND'  		Cs.MSG_ISTOCDIFF  	}.Contains (x.RelatedStoryId)).SideEffectsOnly (x => x.IsCoverPage = TocGroupsHavingMemIds.GetTocByStoryId (x.RelatedStoryId).Parent.Parent.Descendants (Cs.PROPERTY).Where (y => y.IsMatchAttrVal ("name"' "menu-id")).Any (y => y.IsContainsAttrVal ("value"' new[] {  		"cover"  	})));  	// -top -back のみと思われるが  	#endregion  	#region Add Hidden info  	Debug.Assert (!Diffs.Any (x => x.DiffItem == DiffItem.Default)' "Some Diff.DiffItem isn't implemented.");  	Task.WaitAll (Diffs.Select (x => Task.Factory.StartNew (() => new {  		diff = x'  		idName = x.Id.Name.ToStringFormal ()'  		idVal = x.Id.IdString'  		elm = x.DiffItem == DiffItem.Story ? crntBook.StoryAll : x.DiffItem == DiffItem.Toc ? crntBook.TocAll : x.DiffItem == DiffItem.MSIds ? crntBook.MSIdsAll : crntBook.MSIdAll  	/* MSId or Illst */}.DoActionSingle (x1 =>  {  		x1.diff.HiddenInfo = x1.elm.FirstOrDefault (x2 => x2.Attribute (x1.idName).Value == x1.idVal).GetHiddenStatusWithAnscestors (TocGroupsHavingMemIds);  	}))).ToArray ());  	Debug.Assert (!Diffs.Any (x => x.HiddenInfo == null)' "Some objects doesn't implemented HiddenInfo.");  	log.AddLap ("Fin adding hidden information."' 1);  	#endregion  	#region MSId の差分について、IllustrationText である場合は DiffMsg にその旨追記  	Diffs.AsParallel ().Where (x => x.DiffItem == DiffItem.MSId).AssertElm (x => crntBook.MSIdDic.Keys.Contains (x.Id.IdString)).Where (x => crntBook.MSIdDic [x.Id.IdString].IsMatchAttrVal (Cs.MS_TYPE' "illustration-text")).SideEffectsOnlyAsParalles (x => x.DiffMessage = "**イラストレーションテキスト**\r" + x.DiffMessage);  	log.AddLap ("Fin adding illustrationText message."' 1);  	#endregion  	#region Filter  --  Redundant' Hidden Illustration Histories' Hidden by ancestors  	Diffs = Diffs.AsParallel ().Where (x => x.DiffType != DiffType.ToBeRemoved)// Excludes illustration diffs as hidden MSId (But it is exceptional that the item's show status changed to 'Hide'.)  	.Where (x => !(x.DiffType.HasFlag (DiffType.IllustHis) && x.HiddenInfo.HiddenBy != HiddenBy.None && !x.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing))).Where (x => x.HiddenInfo.HiddenBy != HiddenBy.AncestorProp)// Jan.29.2015  	.ToList ();  	log.AddLap ("Fin sorting."' 1);  	#endregion  	#region Add Hidden item LO annot texts  (17.June.2015 : Toc の書式については差分を見ていない、見るようになると GetDescendantsTextByGroupIdOrLocId() では対応できないので、追加処理が必要)  	Parallel.ForEach (Diffs.Where (x => x.FilterFlag.HasAnyCommonFlag (ECmprElms.ShowStHiddenByAny' ECmprElms.Nothing))' x =>  {  		x.DiffMessage = x.DiffMessage.Replace (FormatDiffXml.ToHideTextFmt' crntBook.GetDescendantsTextByGroupIdOrLocId (x.Id.IdString));  	});  	log.AddLap ("Fin Adding HIdden item texts."' 1);  	#endregion  	#region coverpage  	Diffs.Where (x => x.IsCoverPage).ToList ().ForEach (x => x.DiffMessage = "（背）表紙の要素\r" + x.DiffMessage);  	log.AddLap ("Fin adding coverPage message."' 1);  	#endregion  	return Diffs;  }  finally {  	mstLog.logMessages.AddRange (log.logMessages.Skip (1));  }  
Magic Number,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,GetLinkTags,The following statement contains a magic number: return srcString.SelectNewSingle (x => new {  	srcTxt = x'  	txt = " " + x  })// Escape from splited[0] including target text (the case that source text begin with '[@TREX')  .SelectNewSingle (x => x.txt.Split (new[] {  	"[@TREX[LINK::"  }' StringSplitOptions.None).ToList ()).SelectNewSingle (x => x.Skip (1))// get splited[1]  .Select (x => "[@TREX[LINK::" + x).Select (x => x.Substring (0' 1 + x.GetNthIndex (']'' 2))).Where (x => x != "")// last step において "" を出力したもの(']' * 2 により閉じられていないため)を除外 (ex. 校正時に誤って ']' を削除した)  .ToList ();  
Magic Number,AddAnnotationToFoFile,Log,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Log.cs,Log,The following statement contains a magic number: this.indentString = new string (' '' 4);  
Magic Number,AddAnnotationToFoFile,Log,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Log.cs,Log,The following statement contains a magic number: this.logMessages.Add (new string ('='' 50));  
Magic Number,AddAnnotationToFoFile,Log,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Log.cs,AddLap,The following statement contains a magic number: this.logMessages.Add (string.Format ("[{0}] Lap {1}{2} {3}"' this.TimeStamp' GetIndent (indentLevel)' (totalSec - this.lastSplit).ToString ("F1").PadLeft (7)' msg));  
Magic Number,AddAnnotationToFoFile,Log,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Log.cs,AddSplit,The following statement contains a magic number: this.logMessages.Add (string.Format ("[{0}] sum {1}{2} {3} (timer is reset.)"' this.TimeStamp' GetIndent (indentLevel)' totalSec.ToString ("F1").PadLeft (7)' msg));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = ReturnXml.Descendants (Cs.WORD_GROUPS).First ().Descendants (Cs.GROUP).ToList ()'  	reTbl = Mysql.SetReader (string.Format ("SELECT id' `deliv-id`' `group-type`' summary' `member-ids`' properties' `internal-properties` FROM `tran_{0}_groupnodes` WHERE `owner-id`='_WDNODE_' AND `deliv-id`='';"' categoryId)' err' debugOption' log).Select (y => new {  		id = y [0]'  		delivid = y [1]'  		grouptype = y [2] as string'  		summary = y [3]'  		memberids = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string  	}).ToList ()  }.DoActionSingle (x =>  {  	foreach (var i in x.tocGroupElms) {  		var _e = x.reTbl.GetFirstDefWithRemoving (y => i.IsMatchAttrVal (Cs.ID' y.id as string));  		var tmpAttrs = i.Attributes ().ToList ();  		tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' _e.delivid));  		tmpAttrs.Insert (1' new XAttribute (Cs.GROUP_TYPE' _e.grouptype));  		i.Attributes ().Remove ();  		i.Add (tmpAttrs);  		i.Element (Cs.GROUPS).AddBeforeSelf (new XElement (Cs.SUMMARY' _e.summary));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.memberids));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.properties));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.internalproperties));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = ReturnXml.Descendants (Cs.WORD_GROUPS).First ().Descendants (Cs.GROUP).ToList ()'  	reTbl = Mysql.SetReader (string.Format ("SELECT id' `deliv-id`' `group-type`' summary' `member-ids`' properties' `internal-properties` FROM `tran_{0}_groupnodes` WHERE `owner-id`='_WDNODE_' AND `deliv-id`='';"' categoryId)' err' debugOption' log).Select (y => new {  		id = y [0]'  		delivid = y [1]'  		grouptype = y [2] as string'  		summary = y [3]'  		memberids = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string  	}).ToList ()  }.DoActionSingle (x =>  {  	foreach (var i in x.tocGroupElms) {  		var _e = x.reTbl.GetFirstDefWithRemoving (y => i.IsMatchAttrVal (Cs.ID' y.id as string));  		var tmpAttrs = i.Attributes ().ToList ();  		tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' _e.delivid));  		tmpAttrs.Insert (1' new XAttribute (Cs.GROUP_TYPE' _e.grouptype));  		i.Attributes ().Remove ();  		i.Add (tmpAttrs);  		i.Element (Cs.GROUPS).AddBeforeSelf (new XElement (Cs.SUMMARY' _e.summary));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.memberids));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.properties));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.internalproperties));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = ReturnXml.Descendants (Cs.WORD_GROUPS).First ().Descendants (Cs.GROUP).ToList ()'  	reTbl = Mysql.SetReader (string.Format ("SELECT id' `deliv-id`' `group-type`' summary' `member-ids`' properties' `internal-properties` FROM `tran_{0}_groupnodes` WHERE `owner-id`='_WDNODE_' AND `deliv-id`='';"' categoryId)' err' debugOption' log).Select (y => new {  		id = y [0]'  		delivid = y [1]'  		grouptype = y [2] as string'  		summary = y [3]'  		memberids = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string  	}).ToList ()  }.DoActionSingle (x =>  {  	foreach (var i in x.tocGroupElms) {  		var _e = x.reTbl.GetFirstDefWithRemoving (y => i.IsMatchAttrVal (Cs.ID' y.id as string));  		var tmpAttrs = i.Attributes ().ToList ();  		tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' _e.delivid));  		tmpAttrs.Insert (1' new XAttribute (Cs.GROUP_TYPE' _e.grouptype));  		i.Attributes ().Remove ();  		i.Add (tmpAttrs);  		i.Element (Cs.GROUPS).AddBeforeSelf (new XElement (Cs.SUMMARY' _e.summary));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.memberids));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.properties));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.internalproperties));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = ReturnXml.Descendants (Cs.WORD_GROUPS).First ().Descendants (Cs.GROUP).ToList ()'  	reTbl = Mysql.SetReader (string.Format ("SELECT id' `deliv-id`' `group-type`' summary' `member-ids`' properties' `internal-properties` FROM `tran_{0}_groupnodes` WHERE `owner-id`='_WDNODE_' AND `deliv-id`='';"' categoryId)' err' debugOption' log).Select (y => new {  		id = y [0]'  		delivid = y [1]'  		grouptype = y [2] as string'  		summary = y [3]'  		memberids = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string  	}).ToList ()  }.DoActionSingle (x =>  {  	foreach (var i in x.tocGroupElms) {  		var _e = x.reTbl.GetFirstDefWithRemoving (y => i.IsMatchAttrVal (Cs.ID' y.id as string));  		var tmpAttrs = i.Attributes ().ToList ();  		tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' _e.delivid));  		tmpAttrs.Insert (1' new XAttribute (Cs.GROUP_TYPE' _e.grouptype));  		i.Attributes ().Remove ();  		i.Add (tmpAttrs);  		i.Element (Cs.GROUPS).AddBeforeSelf (new XElement (Cs.SUMMARY' _e.summary));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.memberids));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.properties));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.internalproperties));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = ReturnXml.Descendants (Cs.WORD_GROUPS).First ().Descendants (Cs.GROUP).ToList ()'  	reTbl = Mysql.SetReader (string.Format ("SELECT id' `deliv-id`' `group-type`' summary' `member-ids`' properties' `internal-properties` FROM `tran_{0}_groupnodes` WHERE `owner-id`='_WDNODE_' AND `deliv-id`='';"' categoryId)' err' debugOption' log).Select (y => new {  		id = y [0]'  		delivid = y [1]'  		grouptype = y [2] as string'  		summary = y [3]'  		memberids = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string  	}).ToList ()  }.DoActionSingle (x =>  {  	foreach (var i in x.tocGroupElms) {  		var _e = x.reTbl.GetFirstDefWithRemoving (y => i.IsMatchAttrVal (Cs.ID' y.id as string));  		var tmpAttrs = i.Attributes ().ToList ();  		tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' _e.delivid));  		tmpAttrs.Insert (1' new XAttribute (Cs.GROUP_TYPE' _e.grouptype));  		i.Attributes ().Remove ();  		i.Add (tmpAttrs);  		i.Element (Cs.GROUPS).AddBeforeSelf (new XElement (Cs.SUMMARY' _e.summary));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.memberids));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.properties));  		i.Element (Cs.GROUPS).AddBeforeSelf (XElement.Parse (_e.internalproperties));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: tempLog = RDBRowToXML.SetManuscripts (ReturnXml.Descendants (Cs.WORD_TEXTS).First ()' ReturnXml.Descendants (Cs.LANGUAGE).Select (y => int.Parse (y.Attribute (Cs.LANG_CODE).Value)).ToList ()' string.Format (Query.WORDTEXTS_MS' categoryId)' string.Format (Query.WORDTEXTS_TRNS' categoryId' "{0}")// {0} will be filled with langCode by string.Format() in RDBRowToXML.SetManuscripts().  ' err' debugOption' 4' 4' new Log ());  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: tempLog = RDBRowToXML.SetManuscripts (ReturnXml.Descendants (Cs.WORD_TEXTS).First ()' ReturnXml.Descendants (Cs.LANGUAGE).Select (y => int.Parse (y.Attribute (Cs.LANG_CODE).Value)).ToList ()' string.Format (Query.WORDTEXTS_MS' categoryId)' string.Format (Query.WORDTEXTS_TRNS' categoryId' "{0}")// {0} will be filled with langCode by string.Format() in RDBRowToXML.SetManuscripts().  ' err' debugOption' 4' 4' new Log ());  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = ReturnXml.Element (Cs.CATEGORY).Element (Cs.GROUPS).Descendants (Cs.GROUP).ToList ()'  	rows = Mysql.SetReader (string.Format ("SELECT id' `deliv-id`' `group-type`' `summary`' `member-ids`' properties' `internal-properties` FROM `tran_{0}_groupnodes` WHERE `owner-id`='_BKNODE_' AND `deliv-id`='';"' categoryId)' err' debugOption' log).Select (x => new {  		id = x [0]'  		delivid = x [1]'  		grouptype = x [2]'  		summary = x [3]'  		memberids = x [4]'  		properties = x [5]'  		internalproperties = x [6]  	} as dynamic).ToList ()  }.DoActionSingle (x => x.tocGroupElms.SetGroups (x.rows' new Log ()));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = ReturnXml.Element (Cs.CATEGORY).Element (Cs.GROUPS).Descendants (Cs.GROUP).ToList ()'  	rows = Mysql.SetReader (string.Format ("SELECT id' `deliv-id`' `group-type`' `summary`' `member-ids`' properties' `internal-properties` FROM `tran_{0}_groupnodes` WHERE `owner-id`='_BKNODE_' AND `deliv-id`='';"' categoryId)' err' debugOption' log).Select (x => new {  		id = x [0]'  		delivid = x [1]'  		grouptype = x [2]'  		summary = x [3]'  		memberids = x [4]'  		properties = x [5]'  		internalproperties = x [6]  	} as dynamic).ToList ()  }.DoActionSingle (x => x.tocGroupElms.SetGroups (x.rows' new Log ()));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = ReturnXml.Element (Cs.CATEGORY).Element (Cs.GROUPS).Descendants (Cs.GROUP).ToList ()'  	rows = Mysql.SetReader (string.Format ("SELECT id' `deliv-id`' `group-type`' `summary`' `member-ids`' properties' `internal-properties` FROM `tran_{0}_groupnodes` WHERE `owner-id`='_BKNODE_' AND `deliv-id`='';"' categoryId)' err' debugOption' log).Select (x => new {  		id = x [0]'  		delivid = x [1]'  		grouptype = x [2]'  		summary = x [3]'  		memberids = x [4]'  		properties = x [5]'  		internalproperties = x [6]  	} as dynamic).ToList ()  }.DoActionSingle (x => x.tocGroupElms.SetGroups (x.rows' new Log ()));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = ReturnXml.Element (Cs.CATEGORY).Element (Cs.GROUPS).Descendants (Cs.GROUP).ToList ()'  	rows = Mysql.SetReader (string.Format ("SELECT id' `deliv-id`' `group-type`' `summary`' `member-ids`' properties' `internal-properties` FROM `tran_{0}_groupnodes` WHERE `owner-id`='_BKNODE_' AND `deliv-id`='';"' categoryId)' err' debugOption' log).Select (x => new {  		id = x [0]'  		delivid = x [1]'  		grouptype = x [2]'  		summary = x [3]'  		memberids = x [4]'  		properties = x [5]'  		internalproperties = x [6]  	} as dynamic).ToList ()  }.DoActionSingle (x => x.tocGroupElms.SetGroups (x.rows' new Log ()));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = ReturnXml.Element (Cs.CATEGORY).Element (Cs.GROUPS).Descendants (Cs.GROUP).ToList ()'  	rows = Mysql.SetReader (string.Format ("SELECT id' `deliv-id`' `group-type`' `summary`' `member-ids`' properties' `internal-properties` FROM `tran_{0}_groupnodes` WHERE `owner-id`='_BKNODE_' AND `deliv-id`='';"' categoryId)' err' debugOption' log).Select (x => new {  		id = x [0]'  		delivid = x [1]'  		grouptype = x [2]'  		summary = x [3]'  		memberids = x [4]'  		properties = x [5]'  		internalproperties = x [6]  	} as dynamic).ToList ()  }.DoActionSingle (x => x.tocGroupElms.SetGroups (x.rows' new Log ()));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Element (Cs.CATEGORY).Element (Cs.MODELS)'  	rows = Mysql.SetReader (string.Format ("SELECT id' parent' deleted' description' properties' `internal-properties`' assortment' `assortment-group`' `writing-state`' `model-name`' `used-languages` FROM `tran_{0}_models`;"' categoryId)' err' debugOption' log)  }.DoActionSingle (x =>  {  	foreach (var cols in x.rows) {  		x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  		' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  		' XElement.Parse (cols [5] as string)// internal-properties  		' XElement.Parse (cols [6] as string)// assortment  		' XElement.Parse (cols [7] as string)// assortment-group  		' XElement.Parse (cols [8] as string)// writing-state  		' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Element (Cs.CATEGORY).Element (Cs.MODELS)'  	rows = Mysql.SetReader (string.Format ("SELECT id' parent' deleted' description' properties' `internal-properties`' assortment' `assortment-group`' `writing-state`' `model-name`' `used-languages` FROM `tran_{0}_models`;"' categoryId)' err' debugOption' log)  }.DoActionSingle (x =>  {  	foreach (var cols in x.rows) {  		x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  		' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  		' XElement.Parse (cols [5] as string)// internal-properties  		' XElement.Parse (cols [6] as string)// assortment  		' XElement.Parse (cols [7] as string)// assortment-group  		' XElement.Parse (cols [8] as string)// writing-state  		' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Element (Cs.CATEGORY).Element (Cs.MODELS)'  	rows = Mysql.SetReader (string.Format ("SELECT id' parent' deleted' description' properties' `internal-properties`' assortment' `assortment-group`' `writing-state`' `model-name`' `used-languages` FROM `tran_{0}_models`;"' categoryId)' err' debugOption' log)  }.DoActionSingle (x =>  {  	foreach (var cols in x.rows) {  		x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  		' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  		' XElement.Parse (cols [5] as string)// internal-properties  		' XElement.Parse (cols [6] as string)// assortment  		' XElement.Parse (cols [7] as string)// assortment-group  		' XElement.Parse (cols [8] as string)// writing-state  		' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Element (Cs.CATEGORY).Element (Cs.MODELS)'  	rows = Mysql.SetReader (string.Format ("SELECT id' parent' deleted' description' properties' `internal-properties`' assortment' `assortment-group`' `writing-state`' `model-name`' `used-languages` FROM `tran_{0}_models`;"' categoryId)' err' debugOption' log)  }.DoActionSingle (x =>  {  	foreach (var cols in x.rows) {  		x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  		' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  		' XElement.Parse (cols [5] as string)// internal-properties  		' XElement.Parse (cols [6] as string)// assortment  		' XElement.Parse (cols [7] as string)// assortment-group  		' XElement.Parse (cols [8] as string)// writing-state  		' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Element (Cs.CATEGORY).Element (Cs.MODELS)'  	rows = Mysql.SetReader (string.Format ("SELECT id' parent' deleted' description' properties' `internal-properties`' assortment' `assortment-group`' `writing-state`' `model-name`' `used-languages` FROM `tran_{0}_models`;"' categoryId)' err' debugOption' log)  }.DoActionSingle (x =>  {  	foreach (var cols in x.rows) {  		x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  		' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  		' XElement.Parse (cols [5] as string)// internal-properties  		' XElement.Parse (cols [6] as string)// assortment  		' XElement.Parse (cols [7] as string)// assortment-group  		' XElement.Parse (cols [8] as string)// writing-state  		' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Element (Cs.CATEGORY).Element (Cs.MODELS)'  	rows = Mysql.SetReader (string.Format ("SELECT id' parent' deleted' description' properties' `internal-properties`' assortment' `assortment-group`' `writing-state`' `model-name`' `used-languages` FROM `tran_{0}_models`;"' categoryId)' err' debugOption' log)  }.DoActionSingle (x =>  {  	foreach (var cols in x.rows) {  		x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  		' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  		' XElement.Parse (cols [5] as string)// internal-properties  		' XElement.Parse (cols [6] as string)// assortment  		' XElement.Parse (cols [7] as string)// assortment-group  		' XElement.Parse (cols [8] as string)// writing-state  		' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Element (Cs.CATEGORY).Element (Cs.MODELS)'  	rows = Mysql.SetReader (string.Format ("SELECT id' parent' deleted' description' properties' `internal-properties`' assortment' `assortment-group`' `writing-state`' `model-name`' `used-languages` FROM `tran_{0}_models`;"' categoryId)' err' debugOption' log)  }.DoActionSingle (x =>  {  	foreach (var cols in x.rows) {  		x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  		' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  		' XElement.Parse (cols [5] as string)// internal-properties  		' XElement.Parse (cols [6] as string)// assortment  		' XElement.Parse (cols [7] as string)// assortment-group  		' XElement.Parse (cols [8] as string)// writing-state  		' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Element (Cs.CATEGORY).Element (Cs.MODELS)'  	rows = Mysql.SetReader (string.Format ("SELECT id' parent' deleted' description' properties' `internal-properties`' assortment' `assortment-group`' `writing-state`' `model-name`' `used-languages` FROM `tran_{0}_models`;"' categoryId)' err' debugOption' log)  }.DoActionSingle (x =>  {  	foreach (var cols in x.rows) {  		x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  		' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  		' XElement.Parse (cols [5] as string)// internal-properties  		' XElement.Parse (cols [6] as string)// assortment  		' XElement.Parse (cols [7] as string)// assortment-group  		' XElement.Parse (cols [8] as string)// writing-state  		' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Element (Cs.CATEGORY).Element (Cs.MODELS)'  	rows = Mysql.SetReader (string.Format ("SELECT id' parent' deleted' description' properties' `internal-properties`' assortment' `assortment-group`' `writing-state`' `model-name`' `used-languages` FROM `tran_{0}_models`;"' categoryId)' err' debugOption' log)  }.DoActionSingle (x =>  {  	foreach (var cols in x.rows) {  		x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  		' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  		' XElement.Parse (cols [5] as string)// internal-properties  		' XElement.Parse (cols [6] as string)// assortment  		' XElement.Parse (cols [7] as string)// assortment-group  		' XElement.Parse (cols [8] as string)// writing-state  		' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var cols in x.rows) {  	x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  	' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  	' XElement.Parse (cols [5] as string)// internal-properties  	' XElement.Parse (cols [6] as string)// assortment  	' XElement.Parse (cols [7] as string)// assortment-group  	' XElement.Parse (cols [8] as string)// writing-state  	' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var cols in x.rows) {  	x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  	' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  	' XElement.Parse (cols [5] as string)// internal-properties  	' XElement.Parse (cols [6] as string)// assortment  	' XElement.Parse (cols [7] as string)// assortment-group  	' XElement.Parse (cols [8] as string)// writing-state  	' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var cols in x.rows) {  	x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  	' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  	' XElement.Parse (cols [5] as string)// internal-properties  	' XElement.Parse (cols [6] as string)// assortment  	' XElement.Parse (cols [7] as string)// assortment-group  	' XElement.Parse (cols [8] as string)// writing-state  	' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var cols in x.rows) {  	x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  	' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  	' XElement.Parse (cols [5] as string)// internal-properties  	' XElement.Parse (cols [6] as string)// assortment  	' XElement.Parse (cols [7] as string)// assortment-group  	' XElement.Parse (cols [8] as string)// writing-state  	' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var cols in x.rows) {  	x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  	' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  	' XElement.Parse (cols [5] as string)// internal-properties  	' XElement.Parse (cols [6] as string)// assortment  	' XElement.Parse (cols [7] as string)// assortment-group  	' XElement.Parse (cols [8] as string)// writing-state  	' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var cols in x.rows) {  	x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  	' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  	' XElement.Parse (cols [5] as string)// internal-properties  	' XElement.Parse (cols [6] as string)// assortment  	' XElement.Parse (cols [7] as string)// assortment-group  	' XElement.Parse (cols [8] as string)// writing-state  	' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var cols in x.rows) {  	x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  	' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  	' XElement.Parse (cols [5] as string)// internal-properties  	' XElement.Parse (cols [6] as string)// assortment  	' XElement.Parse (cols [7] as string)// assortment-group  	' XElement.Parse (cols [8] as string)// writing-state  	' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var cols in x.rows) {  	x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  	' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  	' XElement.Parse (cols [5] as string)// internal-properties  	' XElement.Parse (cols [6] as string)// assortment  	' XElement.Parse (cols [7] as string)// assortment-group  	' XElement.Parse (cols [8] as string)// writing-state  	' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var cols in x.rows) {  	x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  	' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  	' XElement.Parse (cols [5] as string)// internal-properties  	' XElement.Parse (cols [6] as string)// assortment  	' XElement.Parse (cols [7] as string)// assortment-group  	' XElement.Parse (cols [8] as string)// writing-state  	' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  ' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  ' XElement.Parse (cols [5] as string)// internal-properties  ' XElement.Parse (cols [6] as string)// assortment  ' XElement.Parse (cols [7] as string)// assortment-group  ' XElement.Parse (cols [8] as string)// writing-state  ' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  ' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  ' XElement.Parse (cols [5] as string)// internal-properties  ' XElement.Parse (cols [6] as string)// assortment  ' XElement.Parse (cols [7] as string)// assortment-group  ' XElement.Parse (cols [8] as string)// writing-state  ' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  ' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  ' XElement.Parse (cols [5] as string)// internal-properties  ' XElement.Parse (cols [6] as string)// assortment  ' XElement.Parse (cols [7] as string)// assortment-group  ' XElement.Parse (cols [8] as string)// writing-state  ' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  ' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  ' XElement.Parse (cols [5] as string)// internal-properties  ' XElement.Parse (cols [6] as string)// assortment  ' XElement.Parse (cols [7] as string)// assortment-group  ' XElement.Parse (cols [8] as string)// writing-state  ' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  ' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  ' XElement.Parse (cols [5] as string)// internal-properties  ' XElement.Parse (cols [6] as string)// assortment  ' XElement.Parse (cols [7] as string)// assortment-group  ' XElement.Parse (cols [8] as string)// writing-state  ' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  ' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  ' XElement.Parse (cols [5] as string)// internal-properties  ' XElement.Parse (cols [6] as string)// assortment  ' XElement.Parse (cols [7] as string)// assortment-group  ' XElement.Parse (cols [8] as string)// writing-state  ' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  ' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  ' XElement.Parse (cols [5] as string)// internal-properties  ' XElement.Parse (cols [6] as string)// assortment  ' XElement.Parse (cols [7] as string)// assortment-group  ' XElement.Parse (cols [8] as string)// writing-state  ' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  ' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  ' XElement.Parse (cols [5] as string)// internal-properties  ' XElement.Parse (cols [6] as string)// assortment  ' XElement.Parse (cols [7] as string)// assortment-group  ' XElement.Parse (cols [8] as string)// writing-state  ' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Add (new XElement (Cs.MODEL' new XAttribute (Cs.PARENT' cols [1])' new XAttribute (Cs.DELETED' FnEx.FirstCharToUpper (cols [2].ToString ()))// X as string(value is int as bool)  ' new XAttribute (Cs.ID' cols [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' cols [3] as string)' XElement.Parse (cols [4] as string)// properties  ' XElement.Parse (cols [5] as string)// internal-properties  ' XElement.Parse (cols [6] as string)// assortment  ' XElement.Parse (cols [7] as string)// assortment-group  ' XElement.Parse (cols [8] as string)// writing-state  ' new XElement (Cs.MODEL_NAME' cols [9])' XElement.Parse (cols [10] as string)' new XElement (Cs.GROUPS)' new XElement (Cs.SYMBOLS)' new XElement (Cs.STORIES)));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = TargetBookElm'  	row = Mysql.SetReader (string.Format (Query.DELIVBOOK' categoryId' MasterBookId' bookId)' err' debugOption' log)  // .First() causes Reader.Close()' no results.  }.DoActionSingle (x =>  {  	foreach (var row in x.row) {  		// count 1  		x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  		// X as string(value is int as bool)  		x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  		x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  		x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  		x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  		x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  		x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  		x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  		x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  		x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = TargetBookElm'  	row = Mysql.SetReader (string.Format (Query.DELIVBOOK' categoryId' MasterBookId' bookId)' err' debugOption' log)  // .First() causes Reader.Close()' no results.  }.DoActionSingle (x =>  {  	foreach (var row in x.row) {  		// count 1  		x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  		// X as string(value is int as bool)  		x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  		x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  		x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  		x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  		x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  		x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  		x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  		x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  		x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = TargetBookElm'  	row = Mysql.SetReader (string.Format (Query.DELIVBOOK' categoryId' MasterBookId' bookId)' err' debugOption' log)  // .First() causes Reader.Close()' no results.  }.DoActionSingle (x =>  {  	foreach (var row in x.row) {  		// count 1  		x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  		// X as string(value is int as bool)  		x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  		x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  		x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  		x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  		x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  		x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  		x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  		x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  		x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = TargetBookElm'  	row = Mysql.SetReader (string.Format (Query.DELIVBOOK' categoryId' MasterBookId' bookId)' err' debugOption' log)  // .First() causes Reader.Close()' no results.  }.DoActionSingle (x =>  {  	foreach (var row in x.row) {  		// count 1  		x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  		// X as string(value is int as bool)  		x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  		x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  		x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  		x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  		x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  		x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  		x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  		x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  		x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = TargetBookElm'  	row = Mysql.SetReader (string.Format (Query.DELIVBOOK' categoryId' MasterBookId' bookId)' err' debugOption' log)  // .First() causes Reader.Close()' no results.  }.DoActionSingle (x =>  {  	foreach (var row in x.row) {  		// count 1  		x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  		// X as string(value is int as bool)  		x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  		x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  		x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  		x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  		x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  		x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  		x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  		x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  		x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = TargetBookElm'  	row = Mysql.SetReader (string.Format (Query.DELIVBOOK' categoryId' MasterBookId' bookId)' err' debugOption' log)  // .First() causes Reader.Close()' no results.  }.DoActionSingle (x =>  {  	foreach (var row in x.row) {  		// count 1  		x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  		// X as string(value is int as bool)  		x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  		x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  		x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  		x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  		x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  		x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  		x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  		x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  		x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = TargetBookElm'  	row = Mysql.SetReader (string.Format (Query.DELIVBOOK' categoryId' MasterBookId' bookId)' err' debugOption' log)  // .First() causes Reader.Close()' no results.  }.DoActionSingle (x =>  {  	foreach (var row in x.row) {  		// count 1  		x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  		// X as string(value is int as bool)  		x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  		x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  		x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  		x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  		x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  		x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  		x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  		x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  		x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = TargetBookElm'  	row = Mysql.SetReader (string.Format (Query.DELIVBOOK' categoryId' MasterBookId' bookId)' err' debugOption' log)  // .First() causes Reader.Close()' no results.  }.DoActionSingle (x =>  {  	foreach (var row in x.row) {  		// count 1  		x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  		// X as string(value is int as bool)  		x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  		x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  		x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  		x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  		x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  		x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  		x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  		x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  		x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  	}  });  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var row in x.row) {  	// count 1  	x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  	// X as string(value is int as bool)  	x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  	x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  	x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  	x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  	x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  	x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  	x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  	x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  	x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var row in x.row) {  	// count 1  	x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  	// X as string(value is int as bool)  	x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  	x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  	x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  	x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  	x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  	x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  	x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  	x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  	x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var row in x.row) {  	// count 1  	x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  	// X as string(value is int as bool)  	x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  	x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  	x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  	x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  	x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  	x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  	x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  	x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  	x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var row in x.row) {  	// count 1  	x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  	// X as string(value is int as bool)  	x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  	x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  	x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  	x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  	x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  	x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  	x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  	x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  	x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var row in x.row) {  	// count 1  	x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  	// X as string(value is int as bool)  	x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  	x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  	x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  	x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  	x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  	x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  	x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  	x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  	x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var row in x.row) {  	// count 1  	x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  	// X as string(value is int as bool)  	x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  	x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  	x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  	x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  	x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  	x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  	x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  	x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  	x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var row in x.row) {  	// count 1  	x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  	// X as string(value is int as bool)  	x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  	x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  	x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  	x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  	x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  	x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  	x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  	x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  	x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: foreach (var row in x.row) {  	// count 1  	x.xElm.Attribute (Cs.DELETED).SetValue (FnEx.FirstCharToUpper (row [0].ToString ()));  	// X as string(value is int as bool)  	x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  	x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  	x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  	x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  	x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  	x.xElm.Element (Cs.DESCRIPTION).ReplaceWith (FnEx.NewXElementStrVal (Cs.DESCRIPTION' row [1] as string));  	x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  	x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  	x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  }  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Element (Cs.MODEL_NAME).SetValue (row [7]);  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Element (Cs.ASSORTMENT).ReplaceWith (XElement.Parse (row [4] as string));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Element (Cs.ASSORTMENT_GROUP).ReplaceWith (XElement.Parse (row [5] as string));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Element (Cs.WRITING_STATE).ReplaceWith (XElement.Parse (row [6] as string));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Element (Cs.GROUPS).ReplaceWith (XElement.Parse (row [9] as string));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Element (Cs.PROPERTIES).ReplaceWith (XElement.Parse (row [2] as string));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Element (Cs.INTERNAL_PROPERTIES).ReplaceWith (XElement.Parse (row [3] as string));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: x.xElm.Element (Cs.USED_LANGUAGES).ReplaceWith (XElement.Parse (row [8] as string));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = TargetBookElm.Descendants (Cs.GROUP).ToList ()'  	rows = Mysql.SetReader (string.Format (Query.TOCGROUP' categoryId' MasterBookId' bookId)' err' debugOption' log).Select (x => new {  		id = x [0]'  		delivid = x [1]'  		grouptype = x [2]'  		summary = x [3]'  		memberids = x [4]'  		properties = x [5]'  		internalproperties = x [6]  	} as dynamic).ToList ()  }.DoActionSingle (x => x.tocGroupElms.SetGroups (x.rows' new Log ()));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = TargetBookElm.Descendants (Cs.GROUP).ToList ()'  	rows = Mysql.SetReader (string.Format (Query.TOCGROUP' categoryId' MasterBookId' bookId)' err' debugOption' log).Select (x => new {  		id = x [0]'  		delivid = x [1]'  		grouptype = x [2]'  		summary = x [3]'  		memberids = x [4]'  		properties = x [5]'  		internalproperties = x [6]  	} as dynamic).ToList ()  }.DoActionSingle (x => x.tocGroupElms.SetGroups (x.rows' new Log ()));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = TargetBookElm.Descendants (Cs.GROUP).ToList ()'  	rows = Mysql.SetReader (string.Format (Query.TOCGROUP' categoryId' MasterBookId' bookId)' err' debugOption' log).Select (x => new {  		id = x [0]'  		delivid = x [1]'  		grouptype = x [2]'  		summary = x [3]'  		memberids = x [4]'  		properties = x [5]'  		internalproperties = x [6]  	} as dynamic).ToList ()  }.DoActionSingle (x => x.tocGroupElms.SetGroups (x.rows' new Log ()));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = TargetBookElm.Descendants (Cs.GROUP).ToList ()'  	rows = Mysql.SetReader (string.Format (Query.TOCGROUP' categoryId' MasterBookId' bookId)' err' debugOption' log).Select (x => new {  		id = x [0]'  		delivid = x [1]'  		grouptype = x [2]'  		summary = x [3]'  		memberids = x [4]'  		properties = x [5]'  		internalproperties = x [6]  	} as dynamic).ToList ()  }.DoActionSingle (x => x.tocGroupElms.SetGroups (x.rows' new Log ()));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	tocGroupElms = TargetBookElm.Descendants (Cs.GROUP).ToList ()'  	rows = Mysql.SetReader (string.Format (Query.TOCGROUP' categoryId' MasterBookId' bookId)' err' debugOption' log).Select (x => new {  		id = x [0]'  		delivid = x [1]'  		grouptype = x [2]'  		summary = x [3]'  		memberids = x [4]'  		properties = x [5]'  		internalproperties = x [6]  	} as dynamic).ToList ()  }.DoActionSingle (x => x.tocGroupElms.SetGroups (x.rows' new Log ()));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	bookElm = TargetBookElm.Element (Cs.SYMBOLS)'  	reTbl = Mysql.SetReader (string.Format ("SELECT `owner-id`' `symbol-name`' `alt-text`' `font-name`' `char-code`' `illust-id`' `illust-rev` " + "FROM `tran_{0}_symbols` WHERE `owner-id`='{1}';"' categoryId' MasterBookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.bookElm.Add (new XElement (Cs.SYMBOL' new XAttribute (Cs.OWNER_ID' x1 [0])' new XElement (Cs.SYMBOL_NAME' x1 [1])' FnEx.NewXElementStrVal (Cs.ALT_TEXT' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.FONT_NAME' x1 [3] as string)' new XElement (Cs.CHAR_CODE' x1 [4])' FnEx.NewXElementStrVal (Cs.ILLUST_ID' x1 [5] as string)' new XElement (Cs.ILLUST_REV' x1 [6].ToString ())))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	bookElm = TargetBookElm.Element (Cs.SYMBOLS)'  	reTbl = Mysql.SetReader (string.Format ("SELECT `owner-id`' `symbol-name`' `alt-text`' `font-name`' `char-code`' `illust-id`' `illust-rev` " + "FROM `tran_{0}_symbols` WHERE `owner-id`='{1}';"' categoryId' MasterBookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.bookElm.Add (new XElement (Cs.SYMBOL' new XAttribute (Cs.OWNER_ID' x1 [0])' new XElement (Cs.SYMBOL_NAME' x1 [1])' FnEx.NewXElementStrVal (Cs.ALT_TEXT' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.FONT_NAME' x1 [3] as string)' new XElement (Cs.CHAR_CODE' x1 [4])' FnEx.NewXElementStrVal (Cs.ILLUST_ID' x1 [5] as string)' new XElement (Cs.ILLUST_REV' x1 [6].ToString ())))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	bookElm = TargetBookElm.Element (Cs.SYMBOLS)'  	reTbl = Mysql.SetReader (string.Format ("SELECT `owner-id`' `symbol-name`' `alt-text`' `font-name`' `char-code`' `illust-id`' `illust-rev` " + "FROM `tran_{0}_symbols` WHERE `owner-id`='{1}';"' categoryId' MasterBookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.bookElm.Add (new XElement (Cs.SYMBOL' new XAttribute (Cs.OWNER_ID' x1 [0])' new XElement (Cs.SYMBOL_NAME' x1 [1])' FnEx.NewXElementStrVal (Cs.ALT_TEXT' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.FONT_NAME' x1 [3] as string)' new XElement (Cs.CHAR_CODE' x1 [4])' FnEx.NewXElementStrVal (Cs.ILLUST_ID' x1 [5] as string)' new XElement (Cs.ILLUST_REV' x1 [6].ToString ())))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	bookElm = TargetBookElm.Element (Cs.SYMBOLS)'  	reTbl = Mysql.SetReader (string.Format ("SELECT `owner-id`' `symbol-name`' `alt-text`' `font-name`' `char-code`' `illust-id`' `illust-rev` " + "FROM `tran_{0}_symbols` WHERE `owner-id`='{1}';"' categoryId' MasterBookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.bookElm.Add (new XElement (Cs.SYMBOL' new XAttribute (Cs.OWNER_ID' x1 [0])' new XElement (Cs.SYMBOL_NAME' x1 [1])' FnEx.NewXElementStrVal (Cs.ALT_TEXT' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.FONT_NAME' x1 [3] as string)' new XElement (Cs.CHAR_CODE' x1 [4])' FnEx.NewXElementStrVal (Cs.ILLUST_ID' x1 [5] as string)' new XElement (Cs.ILLUST_REV' x1 [6].ToString ())))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	bookElm = TargetBookElm.Element (Cs.SYMBOLS)'  	reTbl = Mysql.SetReader (string.Format ("SELECT `owner-id`' `symbol-name`' `alt-text`' `font-name`' `char-code`' `illust-id`' `illust-rev` " + "FROM `tran_{0}_symbols` WHERE `owner-id`='{1}';"' categoryId' MasterBookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.bookElm.Add (new XElement (Cs.SYMBOL' new XAttribute (Cs.OWNER_ID' x1 [0])' new XElement (Cs.SYMBOL_NAME' x1 [1])' FnEx.NewXElementStrVal (Cs.ALT_TEXT' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.FONT_NAME' x1 [3] as string)' new XElement (Cs.CHAR_CODE' x1 [4])' FnEx.NewXElementStrVal (Cs.ILLUST_ID' x1 [5] as string)' new XElement (Cs.ILLUST_REV' x1 [6].ToString ())))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xDoc = ReturnXml.Descendants (Cs.ILLUSTRATIONS).First ()'  	reTbl = Mysql.SetReader (string.Format (Query.ILLSTS' categoryId' bookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xDoc.Add (new XElement (Cs.ILLUSTRATION' new XAttribute (Cs.PROC_TYPE' x1 [2])' new XAttribute (Cs.REV' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string == "" ? "<properties/>" : x1 [4] as string)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' x1 [5] as string)' FnEx.NewXElementStrVal (Cs.TITLE' x1 [6] as string)' FnEx.NewXElementStrVal (Cs.SOURCE_FORMAT' x1 [7] as string)' FnEx.NewXElementStrVal (Cs.FORMAT' x1 [8] as string)' FnEx.NewXElementStrVal (Cs.ORIGINAL_FILE_NAME' x1 [9] as string)' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' x1 [10] as string)' XElement.Parse (x1 [11] as string == "" ? "<used-languages/>" : x1 [11] as string)))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xDoc = ReturnXml.Descendants (Cs.ILLUSTRATIONS).First ()'  	reTbl = Mysql.SetReader (string.Format (Query.ILLSTS' categoryId' bookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xDoc.Add (new XElement (Cs.ILLUSTRATION' new XAttribute (Cs.PROC_TYPE' x1 [2])' new XAttribute (Cs.REV' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string == "" ? "<properties/>" : x1 [4] as string)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' x1 [5] as string)' FnEx.NewXElementStrVal (Cs.TITLE' x1 [6] as string)' FnEx.NewXElementStrVal (Cs.SOURCE_FORMAT' x1 [7] as string)' FnEx.NewXElementStrVal (Cs.FORMAT' x1 [8] as string)' FnEx.NewXElementStrVal (Cs.ORIGINAL_FILE_NAME' x1 [9] as string)' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' x1 [10] as string)' XElement.Parse (x1 [11] as string == "" ? "<used-languages/>" : x1 [11] as string)))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xDoc = ReturnXml.Descendants (Cs.ILLUSTRATIONS).First ()'  	reTbl = Mysql.SetReader (string.Format (Query.ILLSTS' categoryId' bookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xDoc.Add (new XElement (Cs.ILLUSTRATION' new XAttribute (Cs.PROC_TYPE' x1 [2])' new XAttribute (Cs.REV' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string == "" ? "<properties/>" : x1 [4] as string)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' x1 [5] as string)' FnEx.NewXElementStrVal (Cs.TITLE' x1 [6] as string)' FnEx.NewXElementStrVal (Cs.SOURCE_FORMAT' x1 [7] as string)' FnEx.NewXElementStrVal (Cs.FORMAT' x1 [8] as string)' FnEx.NewXElementStrVal (Cs.ORIGINAL_FILE_NAME' x1 [9] as string)' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' x1 [10] as string)' XElement.Parse (x1 [11] as string == "" ? "<used-languages/>" : x1 [11] as string)))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xDoc = ReturnXml.Descendants (Cs.ILLUSTRATIONS).First ()'  	reTbl = Mysql.SetReader (string.Format (Query.ILLSTS' categoryId' bookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xDoc.Add (new XElement (Cs.ILLUSTRATION' new XAttribute (Cs.PROC_TYPE' x1 [2])' new XAttribute (Cs.REV' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string == "" ? "<properties/>" : x1 [4] as string)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' x1 [5] as string)' FnEx.NewXElementStrVal (Cs.TITLE' x1 [6] as string)' FnEx.NewXElementStrVal (Cs.SOURCE_FORMAT' x1 [7] as string)' FnEx.NewXElementStrVal (Cs.FORMAT' x1 [8] as string)' FnEx.NewXElementStrVal (Cs.ORIGINAL_FILE_NAME' x1 [9] as string)' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' x1 [10] as string)' XElement.Parse (x1 [11] as string == "" ? "<used-languages/>" : x1 [11] as string)))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xDoc = ReturnXml.Descendants (Cs.ILLUSTRATIONS).First ()'  	reTbl = Mysql.SetReader (string.Format (Query.ILLSTS' categoryId' bookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xDoc.Add (new XElement (Cs.ILLUSTRATION' new XAttribute (Cs.PROC_TYPE' x1 [2])' new XAttribute (Cs.REV' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string == "" ? "<properties/>" : x1 [4] as string)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' x1 [5] as string)' FnEx.NewXElementStrVal (Cs.TITLE' x1 [6] as string)' FnEx.NewXElementStrVal (Cs.SOURCE_FORMAT' x1 [7] as string)' FnEx.NewXElementStrVal (Cs.FORMAT' x1 [8] as string)' FnEx.NewXElementStrVal (Cs.ORIGINAL_FILE_NAME' x1 [9] as string)' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' x1 [10] as string)' XElement.Parse (x1 [11] as string == "" ? "<used-languages/>" : x1 [11] as string)))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xDoc = ReturnXml.Descendants (Cs.ILLUSTRATIONS).First ()'  	reTbl = Mysql.SetReader (string.Format (Query.ILLSTS' categoryId' bookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xDoc.Add (new XElement (Cs.ILLUSTRATION' new XAttribute (Cs.PROC_TYPE' x1 [2])' new XAttribute (Cs.REV' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string == "" ? "<properties/>" : x1 [4] as string)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' x1 [5] as string)' FnEx.NewXElementStrVal (Cs.TITLE' x1 [6] as string)' FnEx.NewXElementStrVal (Cs.SOURCE_FORMAT' x1 [7] as string)' FnEx.NewXElementStrVal (Cs.FORMAT' x1 [8] as string)' FnEx.NewXElementStrVal (Cs.ORIGINAL_FILE_NAME' x1 [9] as string)' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' x1 [10] as string)' XElement.Parse (x1 [11] as string == "" ? "<used-languages/>" : x1 [11] as string)))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xDoc = ReturnXml.Descendants (Cs.ILLUSTRATIONS).First ()'  	reTbl = Mysql.SetReader (string.Format (Query.ILLSTS' categoryId' bookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xDoc.Add (new XElement (Cs.ILLUSTRATION' new XAttribute (Cs.PROC_TYPE' x1 [2])' new XAttribute (Cs.REV' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string == "" ? "<properties/>" : x1 [4] as string)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' x1 [5] as string)' FnEx.NewXElementStrVal (Cs.TITLE' x1 [6] as string)' FnEx.NewXElementStrVal (Cs.SOURCE_FORMAT' x1 [7] as string)' FnEx.NewXElementStrVal (Cs.FORMAT' x1 [8] as string)' FnEx.NewXElementStrVal (Cs.ORIGINAL_FILE_NAME' x1 [9] as string)' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' x1 [10] as string)' XElement.Parse (x1 [11] as string == "" ? "<used-languages/>" : x1 [11] as string)))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xDoc = ReturnXml.Descendants (Cs.ILLUSTRATIONS).First ()'  	reTbl = Mysql.SetReader (string.Format (Query.ILLSTS' categoryId' bookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xDoc.Add (new XElement (Cs.ILLUSTRATION' new XAttribute (Cs.PROC_TYPE' x1 [2])' new XAttribute (Cs.REV' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string == "" ? "<properties/>" : x1 [4] as string)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' x1 [5] as string)' FnEx.NewXElementStrVal (Cs.TITLE' x1 [6] as string)' FnEx.NewXElementStrVal (Cs.SOURCE_FORMAT' x1 [7] as string)' FnEx.NewXElementStrVal (Cs.FORMAT' x1 [8] as string)' FnEx.NewXElementStrVal (Cs.ORIGINAL_FILE_NAME' x1 [9] as string)' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' x1 [10] as string)' XElement.Parse (x1 [11] as string == "" ? "<used-languages/>" : x1 [11] as string)))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xDoc = ReturnXml.Descendants (Cs.ILLUSTRATIONS).First ()'  	reTbl = Mysql.SetReader (string.Format (Query.ILLSTS' categoryId' bookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xDoc.Add (new XElement (Cs.ILLUSTRATION' new XAttribute (Cs.PROC_TYPE' x1 [2])' new XAttribute (Cs.REV' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string == "" ? "<properties/>" : x1 [4] as string)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' x1 [5] as string)' FnEx.NewXElementStrVal (Cs.TITLE' x1 [6] as string)' FnEx.NewXElementStrVal (Cs.SOURCE_FORMAT' x1 [7] as string)' FnEx.NewXElementStrVal (Cs.FORMAT' x1 [8] as string)' FnEx.NewXElementStrVal (Cs.ORIGINAL_FILE_NAME' x1 [9] as string)' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' x1 [10] as string)' XElement.Parse (x1 [11] as string == "" ? "<used-languages/>" : x1 [11] as string)))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xDoc = ReturnXml.Descendants (Cs.ILLUSTRATIONS).First ()'  	reTbl = Mysql.SetReader (string.Format (Query.ILLSTS' categoryId' bookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xDoc.Add (new XElement (Cs.ILLUSTRATION' new XAttribute (Cs.PROC_TYPE' x1 [2])' new XAttribute (Cs.REV' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string == "" ? "<properties/>" : x1 [4] as string)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' x1 [5] as string)' FnEx.NewXElementStrVal (Cs.TITLE' x1 [6] as string)' FnEx.NewXElementStrVal (Cs.SOURCE_FORMAT' x1 [7] as string)' FnEx.NewXElementStrVal (Cs.FORMAT' x1 [8] as string)' FnEx.NewXElementStrVal (Cs.ORIGINAL_FILE_NAME' x1 [9] as string)' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' x1 [10] as string)' XElement.Parse (x1 [11] as string == "" ? "<used-languages/>" : x1 [11] as string)))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xDoc = ReturnXml.Descendants (Cs.ILLUSTRATIONS).First ()'  	reTbl = Mysql.SetReader (string.Format (Query.ILLSTS' categoryId' bookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xDoc.Add (new XElement (Cs.ILLUSTRATION' new XAttribute (Cs.PROC_TYPE' x1 [2])' new XAttribute (Cs.REV' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string == "" ? "<properties/>" : x1 [4] as string)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' x1 [5] as string)' FnEx.NewXElementStrVal (Cs.TITLE' x1 [6] as string)' FnEx.NewXElementStrVal (Cs.SOURCE_FORMAT' x1 [7] as string)' FnEx.NewXElementStrVal (Cs.FORMAT' x1 [8] as string)' FnEx.NewXElementStrVal (Cs.ORIGINAL_FILE_NAME' x1 [9] as string)' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' x1 [10] as string)' XElement.Parse (x1 [11] as string == "" ? "<used-languages/>" : x1 [11] as string)))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xDoc = ReturnXml.Descendants (Cs.ILLUSTRATIONS).First ()'  	reTbl = Mysql.SetReader (string.Format (Query.ILLSTS' categoryId' bookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xDoc.Add (new XElement (Cs.ILLUSTRATION' new XAttribute (Cs.PROC_TYPE' x1 [2])' new XAttribute (Cs.REV' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string == "" ? "<properties/>" : x1 [4] as string)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' x1 [5] as string)' FnEx.NewXElementStrVal (Cs.TITLE' x1 [6] as string)' FnEx.NewXElementStrVal (Cs.SOURCE_FORMAT' x1 [7] as string)' FnEx.NewXElementStrVal (Cs.FORMAT' x1 [8] as string)' FnEx.NewXElementStrVal (Cs.ORIGINAL_FILE_NAME' x1 [9] as string)' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' x1 [10] as string)' XElement.Parse (x1 [11] as string == "" ? "<used-languages/>" : x1 [11] as string)))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Descendants (Cs.MODEL).First (y => y.IsMatchAttrVal (Cs.ID' bookId)).Element (Cs.STORIES)'  	reTbl = Mysql.SetReader (string.Format (@"SELECT b.id' `userside-id`' `story-name`' description' properties' `internal-properties`' `variation-name`' `manuscript-ids`' `first-used-model`' `external-links`' keywords                                FROM `uref_{0}_stories` a' `tran_{0}_stories` b                                WHERE                                     a.`used-id`   = '{1}'                                AND a.id          = b.id                                AND a.`ref-count` > 0;"' categoryId' MasterBookId == "" ? bookId : MasterBookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xElm.Add (new XElement (Cs.STORY' new XAttribute (Cs.USERSIDE_ID' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.STORY_NAME' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string)// properties  ' XElement.Parse (x1 [5] as string)// internal-properties  ' FnEx.NewXElementStrVal (Cs.VARIATION_NAME' x1 [6] as string)' XElement.Parse (x1 [7] as string)// manuscript-ids  ' new XElement (Cs.USED_MODELS)' new XElement (Cs.FIRST_USED_MODEL' x1 [8])' XElement.Parse (x1 [9] as string)// externallinks  ' XElement.Parse (x1 [10] as string)/* keywords */))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Descendants (Cs.MODEL).First (y => y.IsMatchAttrVal (Cs.ID' bookId)).Element (Cs.STORIES)'  	reTbl = Mysql.SetReader (string.Format (@"SELECT b.id' `userside-id`' `story-name`' description' properties' `internal-properties`' `variation-name`' `manuscript-ids`' `first-used-model`' `external-links`' keywords                                FROM `uref_{0}_stories` a' `tran_{0}_stories` b                                WHERE                                     a.`used-id`   = '{1}'                                AND a.id          = b.id                                AND a.`ref-count` > 0;"' categoryId' MasterBookId == "" ? bookId : MasterBookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xElm.Add (new XElement (Cs.STORY' new XAttribute (Cs.USERSIDE_ID' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.STORY_NAME' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string)// properties  ' XElement.Parse (x1 [5] as string)// internal-properties  ' FnEx.NewXElementStrVal (Cs.VARIATION_NAME' x1 [6] as string)' XElement.Parse (x1 [7] as string)// manuscript-ids  ' new XElement (Cs.USED_MODELS)' new XElement (Cs.FIRST_USED_MODEL' x1 [8])' XElement.Parse (x1 [9] as string)// externallinks  ' XElement.Parse (x1 [10] as string)/* keywords */))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Descendants (Cs.MODEL).First (y => y.IsMatchAttrVal (Cs.ID' bookId)).Element (Cs.STORIES)'  	reTbl = Mysql.SetReader (string.Format (@"SELECT b.id' `userside-id`' `story-name`' description' properties' `internal-properties`' `variation-name`' `manuscript-ids`' `first-used-model`' `external-links`' keywords                                FROM `uref_{0}_stories` a' `tran_{0}_stories` b                                WHERE                                     a.`used-id`   = '{1}'                                AND a.id          = b.id                                AND a.`ref-count` > 0;"' categoryId' MasterBookId == "" ? bookId : MasterBookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xElm.Add (new XElement (Cs.STORY' new XAttribute (Cs.USERSIDE_ID' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.STORY_NAME' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string)// properties  ' XElement.Parse (x1 [5] as string)// internal-properties  ' FnEx.NewXElementStrVal (Cs.VARIATION_NAME' x1 [6] as string)' XElement.Parse (x1 [7] as string)// manuscript-ids  ' new XElement (Cs.USED_MODELS)' new XElement (Cs.FIRST_USED_MODEL' x1 [8])' XElement.Parse (x1 [9] as string)// externallinks  ' XElement.Parse (x1 [10] as string)/* keywords */))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Descendants (Cs.MODEL).First (y => y.IsMatchAttrVal (Cs.ID' bookId)).Element (Cs.STORIES)'  	reTbl = Mysql.SetReader (string.Format (@"SELECT b.id' `userside-id`' `story-name`' description' properties' `internal-properties`' `variation-name`' `manuscript-ids`' `first-used-model`' `external-links`' keywords                                FROM `uref_{0}_stories` a' `tran_{0}_stories` b                                WHERE                                     a.`used-id`   = '{1}'                                AND a.id          = b.id                                AND a.`ref-count` > 0;"' categoryId' MasterBookId == "" ? bookId : MasterBookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xElm.Add (new XElement (Cs.STORY' new XAttribute (Cs.USERSIDE_ID' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.STORY_NAME' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string)// properties  ' XElement.Parse (x1 [5] as string)// internal-properties  ' FnEx.NewXElementStrVal (Cs.VARIATION_NAME' x1 [6] as string)' XElement.Parse (x1 [7] as string)// manuscript-ids  ' new XElement (Cs.USED_MODELS)' new XElement (Cs.FIRST_USED_MODEL' x1 [8])' XElement.Parse (x1 [9] as string)// externallinks  ' XElement.Parse (x1 [10] as string)/* keywords */))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Descendants (Cs.MODEL).First (y => y.IsMatchAttrVal (Cs.ID' bookId)).Element (Cs.STORIES)'  	reTbl = Mysql.SetReader (string.Format (@"SELECT b.id' `userside-id`' `story-name`' description' properties' `internal-properties`' `variation-name`' `manuscript-ids`' `first-used-model`' `external-links`' keywords                                FROM `uref_{0}_stories` a' `tran_{0}_stories` b                                WHERE                                     a.`used-id`   = '{1}'                                AND a.id          = b.id                                AND a.`ref-count` > 0;"' categoryId' MasterBookId == "" ? bookId : MasterBookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xElm.Add (new XElement (Cs.STORY' new XAttribute (Cs.USERSIDE_ID' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.STORY_NAME' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string)// properties  ' XElement.Parse (x1 [5] as string)// internal-properties  ' FnEx.NewXElementStrVal (Cs.VARIATION_NAME' x1 [6] as string)' XElement.Parse (x1 [7] as string)// manuscript-ids  ' new XElement (Cs.USED_MODELS)' new XElement (Cs.FIRST_USED_MODEL' x1 [8])' XElement.Parse (x1 [9] as string)// externallinks  ' XElement.Parse (x1 [10] as string)/* keywords */))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Descendants (Cs.MODEL).First (y => y.IsMatchAttrVal (Cs.ID' bookId)).Element (Cs.STORIES)'  	reTbl = Mysql.SetReader (string.Format (@"SELECT b.id' `userside-id`' `story-name`' description' properties' `internal-properties`' `variation-name`' `manuscript-ids`' `first-used-model`' `external-links`' keywords                                FROM `uref_{0}_stories` a' `tran_{0}_stories` b                                WHERE                                     a.`used-id`   = '{1}'                                AND a.id          = b.id                                AND a.`ref-count` > 0;"' categoryId' MasterBookId == "" ? bookId : MasterBookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xElm.Add (new XElement (Cs.STORY' new XAttribute (Cs.USERSIDE_ID' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.STORY_NAME' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string)// properties  ' XElement.Parse (x1 [5] as string)// internal-properties  ' FnEx.NewXElementStrVal (Cs.VARIATION_NAME' x1 [6] as string)' XElement.Parse (x1 [7] as string)// manuscript-ids  ' new XElement (Cs.USED_MODELS)' new XElement (Cs.FIRST_USED_MODEL' x1 [8])' XElement.Parse (x1 [9] as string)// externallinks  ' XElement.Parse (x1 [10] as string)/* keywords */))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Descendants (Cs.MODEL).First (y => y.IsMatchAttrVal (Cs.ID' bookId)).Element (Cs.STORIES)'  	reTbl = Mysql.SetReader (string.Format (@"SELECT b.id' `userside-id`' `story-name`' description' properties' `internal-properties`' `variation-name`' `manuscript-ids`' `first-used-model`' `external-links`' keywords                                FROM `uref_{0}_stories` a' `tran_{0}_stories` b                                WHERE                                     a.`used-id`   = '{1}'                                AND a.id          = b.id                                AND a.`ref-count` > 0;"' categoryId' MasterBookId == "" ? bookId : MasterBookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xElm.Add (new XElement (Cs.STORY' new XAttribute (Cs.USERSIDE_ID' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.STORY_NAME' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string)// properties  ' XElement.Parse (x1 [5] as string)// internal-properties  ' FnEx.NewXElementStrVal (Cs.VARIATION_NAME' x1 [6] as string)' XElement.Parse (x1 [7] as string)// manuscript-ids  ' new XElement (Cs.USED_MODELS)' new XElement (Cs.FIRST_USED_MODEL' x1 [8])' XElement.Parse (x1 [9] as string)// externallinks  ' XElement.Parse (x1 [10] as string)/* keywords */))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Descendants (Cs.MODEL).First (y => y.IsMatchAttrVal (Cs.ID' bookId)).Element (Cs.STORIES)'  	reTbl = Mysql.SetReader (string.Format (@"SELECT b.id' `userside-id`' `story-name`' description' properties' `internal-properties`' `variation-name`' `manuscript-ids`' `first-used-model`' `external-links`' keywords                                FROM `uref_{0}_stories` a' `tran_{0}_stories` b                                WHERE                                     a.`used-id`   = '{1}'                                AND a.id          = b.id                                AND a.`ref-count` > 0;"' categoryId' MasterBookId == "" ? bookId : MasterBookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xElm.Add (new XElement (Cs.STORY' new XAttribute (Cs.USERSIDE_ID' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.STORY_NAME' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string)// properties  ' XElement.Parse (x1 [5] as string)// internal-properties  ' FnEx.NewXElementStrVal (Cs.VARIATION_NAME' x1 [6] as string)' XElement.Parse (x1 [7] as string)// manuscript-ids  ' new XElement (Cs.USED_MODELS)' new XElement (Cs.FIRST_USED_MODEL' x1 [8])' XElement.Parse (x1 [9] as string)// externallinks  ' XElement.Parse (x1 [10] as string)/* keywords */))));  
Magic Number,AddAnnotationToFoFile,Mysql,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Mysql.cs,GetBookData,The following statement contains a magic number: new {  	xElm = ReturnXml.Descendants (Cs.MODEL).First (y => y.IsMatchAttrVal (Cs.ID' bookId)).Element (Cs.STORIES)'  	reTbl = Mysql.SetReader (string.Format (@"SELECT b.id' `userside-id`' `story-name`' description' properties' `internal-properties`' `variation-name`' `manuscript-ids`' `first-used-model`' `external-links`' keywords                                FROM `uref_{0}_stories` a' `tran_{0}_stories` b                                WHERE                                     a.`used-id`   = '{1}'                                AND a.id          = b.id                                AND a.`ref-count` > 0;"' categoryId' MasterBookId == "" ? bookId : MasterBookId)' err' debugOption' log)  }.DoActionSingle (x => x.reTbl.ForEachEx (x1 => x.xElm.Add (new XElement (Cs.STORY' new XAttribute (Cs.USERSIDE_ID' x1 [1])' new XAttribute (Cs.ID' x1 [0])' FnEx.NewXElementStrVal (Cs.STORY_NAME' x1 [2] as string)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' x1 [3] as string)' XElement.Parse (x1 [4] as string)// properties  ' XElement.Parse (x1 [5] as string)// internal-properties  ' FnEx.NewXElementStrVal (Cs.VARIATION_NAME' x1 [6] as string)' XElement.Parse (x1 [7] as string)// manuscript-ids  ' new XElement (Cs.USED_MODELS)' new XElement (Cs.FIRST_USED_MODEL' x1 [8])' XElement.Parse (x1 [9] as string)// externallinks  ' XElement.Parse (x1 [10] as string)/* keywords */))));  
Magic Number,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The following statement contains a magic number: ThreadPool.SetMinThreads (200' 200);  
Magic Number,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The following statement contains a magic number: ThreadPool.SetMinThreads (200' 200);  
Magic Number,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The following statement contains a magic number: log.AddLap (string.Format ("CPU Core * {0} : {1} bit : Compiled: {2}"' Environment.ProcessorCount' IntPtr.Size == 4 /* else == 8 */? 32 : 64' System.Reflection.Assembly.GetExecutingAssembly ().GetName ().Version.GetDateTimeFromVersionNo ())' 0);  
Magic Number,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The following statement contains a magic number: log.AddLap (string.Format ("CPU Core * {0} : {1} bit : Compiled: {2}"' Environment.ProcessorCount' IntPtr.Size == 4 /* else == 8 */? 32 : 64' System.Reflection.Assembly.GetExecutingAssembly ().GetName ().Version.GetDateTimeFromVersionNo ())' 0);  
Magic Number,AddAnnotationToFoFile,Program,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Program.cs,Main,The following statement contains a magic number: log.AddLap (string.Format ("CPU Core * {0} : {1} bit : Compiled: {2}"' Environment.ProcessorCount' IntPtr.Size == 4 /* else == 8 */? 32 : 64' System.Reflection.Assembly.GetExecutingAssembly ().GetName ().Version.GetDateTimeFromVersionNo ())' 0);  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscriptsByALang,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (query' err' debugOption' log).Select (y => new {  		// Manuscript  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4] as string'  		properties = y [5] as string'  		internalproperties = y [6] as string'  		usersideid = y [7] as string'  		firstusedmodel = y [8] as string'  		schematicid = y [9] as string'  		schematicrev = y [10]'  		langcode = y [11]'  		// Translation  		id_t = y [3] as string'  		rev_t = y [12]'  		description_t = y [13] as string'  		properties_t = y [14] as string'  		maxbyte = y [15]'  		maxdbyte = y [16]'  		maxsize = y [17]'  		maxline = y [18]'  		checkresult = y [19]'  		text = y [20] as string'  		tutext = y [21] as string  	}).ToList ()'  	judgeStrings = new[] {  		"0"'  		"false"'  		"False"  	}  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS + Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.MSRows.Select (y => new XElement (Cs.MANUSCRIPT' new XAttribute (Cs.CONTENTS_TYPE' y.contentstype)' new XAttribute (Cs.ID_PREV' y.idprev)' new XAttribute (Cs.REV' y.rev)' new XAttribute (Cs.ID' y.id)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description)' XElement.Parse (y.properties == "" ? "<properties/>" : y.properties)' XElement.Parse (y.internalproperties == "" ? "<internal-properties/>" : y.internalproperties)' FnEx.NewXElementStrVal (Cs.USERSIDE_ID' y.usersideid)' y.description_t == null ? new XElement (Cs.TRANSLATIONS) : new XElement (Cs.TRANSLATIONS' new XElement (Cs.TRANSLATION' new XAttribute (Cs.LANG_CODE' y.langcode)' new XAttribute (Cs.ID' y.id_t)' new XAttribute (Cs.REV' y.rev_t)' FnEx.NewXElementStrVal (Cs.DESCRIPTION' y.description_t)' XElement.Parse (y.properties_t == "" ? "<properties/>" : y.properties_t)' new XElement (Cs.MAX_BYTE' y.maxbyte)' new XElement (Cs.MAX_DBYTE' y.maxdbyte)' new XElement (Cs.MAX_SIZE' y.maxsize)' new XElement (Cs.MAX_LINE' y.maxline)' new XElement (Cs.CHECK_RESULT' x.judgeStrings.Contains (y.checkresult.ToString ()) ? "False" : "True")//' new XElement(Cs.CHECK_RESULT' FnEx.FirstCharToUpper(y.checkresult.ToString()))  	' y.text == "" ? null : new XElement (Cs.TEXT' FnEx.RemoveLastLF (y.text))' y.tutext == "" ? null : new XElement (Cs.TUTEXT' FnEx.RemoveLastLF (y.tutext))))' new XElement (Cs.USED_MODELS)' FnEx.NewXElementStrVal (Cs.FIRST_USED_MODEL' y.firstusedmodel)' FnEx.NewXElementStrVal (Cs.SCHEMATIC_ID' y.schematicid)' new XElement (Cs.SCHEMATIC_REV' y.schematicrev))).ToList ().ForEach (y => x.targetElm.Add (y));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetManuscripts,The following statement contains a magic number: return new {  	log'  	divisionsMS'  	divisionsTrn'  	targetElm = ElmMSs'  	// 以下2つは task で並列化しても処理時間が変わらなかった  	MSRows = Mysql.SetReader (queryMS' err' debugOption' log).Select (y => new {  		contentstype = y [0]'  		idprev = y [1]'  		rev = y [2]'  		id = y [3] as string'  		description = y [4]'  		properties = y [5]'  		internalproperties = y [6]'  		usersideid = y [7]'  		firstusedmodel = y [8]'  		schematicid = y [9]'  		schematicrev = y [10]  	}).ToList ()'  	trnsTbls = langCodes.Select (y => Mysql.SetReader (string.Format (queryTrns' y)' err' debugOption' log).Select (_y => new {  		langcode = _y [0]'  		id = _y [1] as string'  		rev = _y [2]'  		description = _y [3]'  		properties = _y [4]'  		maxbyte = _y [5]'  		maxdbyte = _y [6]'  		maxsize = _y [7]'  		maxline = _y [8]'  		checkresult = _y [9]'  		text = _y [10]'  		tutext = _y [11]  	}).ToList ()).Aggregate ((a' b) => a.Union (b).ToList ()).ToList ()  }.WithAddingLog (x => x.log' x => x.AddLap ("MS : Implement MS rows and Trns rows."' 1))// Ref. TRexManuscriptsRDB.RetrieveRecordsOfBook()  .SelectNewSingle (x =>  {  	x.trnsTbls.DelphiQuickSort (FnEx.CompareByID);  	return new {  		x.targetElm'  		x.trnsTbls'  		x.MSRows'  		x.divisionsMS'  		x.divisionsTrn'  		x.log'  		cmpr = new ByteComparer ()  	};  }).SelectNewSingle (x => new {  	x.targetElm'  	x.log'  	x.trnsTbls'  	x.divisionsTrn'  	elmsMSDividedForAsync = x.MSRows.Select (y => RDBRowToXML.CreateManusciptXElm (y)).Select (y =>  {  		// !! Side effect !!  		// Add MS elm to ReturnXml.Category.MSs  		x.targetElm.Add (y);  		return y;  	})//.OrderBy(y => y.Attribute(Cs.ID).Value' x.cmpr)  	.ToList ().DivideIntoList (x.divisionsMS).Select (y => new {  		ElmMSs = y'  		HeadId = y.First ().Attribute (Cs.ID).Value'  		TailId = y.Last ().Attribute (Cs.ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	chunksForAsync = x.elmsMSDividedForAsync.Select (y => new {  		x.log'  		elmsMS = y.ElmMSs'  		rowsTrns = x.trnsTbls.TempSortId (y.HeadId' y.TailId)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 1."' 1)).SelectNewSingle (x => new {  	x.divisionsTrn'  	x.log'  	elmMSAndTrnsTbls = x.chunksForAsync.Select (y => Task.Factory.StartNew (() => y.elmsMS.Select (y1 => new {  		elmMS = y1'  		id = y1.Attribute (Cs.ID).Value  	}).Select (y1 => new {  		y1.elmMS'  		y1.id'  		trnsTbl = y.rowsTrns.DoWhereWithRemoving (y2 => y2.id == y1.id).ToList ()  	})// need to eliminate wasteful processing  	.ToList ()))// need to eliminate wasteful processing  	.ToArray ().WaitAllAndReturnValues ().ToList ().UnionEnumsAsAnEnum ().ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before creation of MS rows and Trns rows sets 2."' 1)).SelectNewSingle (x => new {  	x.log'  	wordXmlAndTrnsTbls = x.elmMSAndTrnsTbls.AsParallel ().WithDegreeOfParallelism (x.divisionsTrn).Select (y => new {  		y.elmMS'  		trnsTbl = y.trnsTbl == null ? null : y.trnsTbl.ToList ().DivideIntoList (x.divisionsTrn).Select (z => Task.Factory.StartNew (() => z.Select (_z => RDBRowToXML.CreateTranslationXElm (_z)))).ToArray ().WaitAllAndReturnValues ().UnionEnumsAsAnEnum ().ToList ()  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MS : Before set Trns rows in MS"' 1)).SelectNewSingle (x =>  {  	// Both .Add() is so fast for using Parallel to make it slow.  	// Add Translations to every Manuscirpt  	x.wordXmlAndTrnsTbls.ForEach (y => y.elmMS.Element (Cs.TRANSLATIONS).Add (y.trnsTbl));  	x.log.AddSplit ("MS : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIds,The following statement contains a magic number: return new {  	log'  	elmsMSIds'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdsLiTable = Mysql.SetReader (queryMSIds' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSIds'  	x.log'  	rowsMSIds = x.MSIdsLiTable.Select (x1 => new {  		groupid = x1 [0] as string'  		delivid = x1 [1]'  		grouptype = x1 [2]'  		properties = x1 [3] as string  	}).ToList ()'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSIds : Implement MSIdsRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSIds = x.elmsMSIds.OrderBy (y => y.Attribute (Cs.GROUP_ID).Value' x.cmpr).ToList ()'  	rowsMSIds = x.rowsMSIds.OrderBy (y => y.groupid' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSIds'  	x.log'  	elmsMSIdsDivided = x.elmsMSIds.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmMSIds = y'  		HeadGroupId = y.First ().Attribute (Cs.GROUP_ID).Value'  		TailGroupId = y.Last ().Attribute (Cs.GROUP_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdsDivided.Select (y => new {  		x.log'  		y.elmMSIds'  		rowsMSIds = x.rowsMSIds.TempSortGroupId (y.HeadGroupId' y.TailGroupId)  	}).ToList ()'  	ImplementAllMSIds =   	#region Func  	new Func<List<XElement>' List<dynamic>' Log' Log> ((_elmsMSIds' rowsMSIds' _log) => new {  		elmMSIds = _elmsMSIds'  		rowsMSIds'  		log = _log  	}.SelectNewSingle (_x => new {  		_x.log'  		main = _x.elmMSIds.Select (_x1 => new {  			crntMSIds = _x1'  			tmpAttrs = _x1.Attributes ().ToList ()'  			rowMSIds = rowsMSIds.GetFirstDefWithRemoving (_x2 => _x1.IsMatchAttrVal (Cs.GROUP_ID' _x2.groupid as string)) ?? new {  				delivid = ""'  				grouptype = ""'  				properties = "<properties/>"  			}  		}).ToList ()  	}).WithAddingLog (_x => _x.log' a => a.AddLap ("ImplementAllMSIds"' 2)).SelectNewSingle (_x =>  {  		_x.main.ForEach (x1 =>  {  			x1.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x1.rowMSIds.delivid));  			x1.tmpAttrs.Insert (1' new XAttribute (Cs.GROUP_TYPE' x1.rowMSIds.grouptype));  			x1.crntMSIds.Attributes ().Remove ();  			x1.crntMSIds.Add (x1.tmpAttrs);  			x1.crntMSIds.Add (XElement.Parse (x1.rowMSIds.properties));  		});  		return _x.log;  	})  	#endregion  	)  }).WithAddingLog (x => x.log' x => x.AddLap ("MSIds : Before doing Tasks ImplementAllMSIds()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => x.ImplementAllMSIds (y.elmMSIds' y.rowsMSIds' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSIds : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIds,The following statement contains a magic number: return new {  	log'  	elmsMSIds'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdsLiTable = Mysql.SetReader (queryMSIds' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSIds'  	x.log'  	rowsMSIds = x.MSIdsLiTable.Select (x1 => new {  		groupid = x1 [0] as string'  		delivid = x1 [1]'  		grouptype = x1 [2]'  		properties = x1 [3] as string  	}).ToList ()'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSIds : Implement MSIdsRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSIds = x.elmsMSIds.OrderBy (y => y.Attribute (Cs.GROUP_ID).Value' x.cmpr).ToList ()'  	rowsMSIds = x.rowsMSIds.OrderBy (y => y.groupid' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSIds'  	x.log'  	elmsMSIdsDivided = x.elmsMSIds.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmMSIds = y'  		HeadGroupId = y.First ().Attribute (Cs.GROUP_ID).Value'  		TailGroupId = y.Last ().Attribute (Cs.GROUP_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdsDivided.Select (y => new {  		x.log'  		y.elmMSIds'  		rowsMSIds = x.rowsMSIds.TempSortGroupId (y.HeadGroupId' y.TailGroupId)  	}).ToList ()'  	ImplementAllMSIds =   	#region Func  	new Func<List<XElement>' List<dynamic>' Log' Log> ((_elmsMSIds' rowsMSIds' _log) => new {  		elmMSIds = _elmsMSIds'  		rowsMSIds'  		log = _log  	}.SelectNewSingle (_x => new {  		_x.log'  		main = _x.elmMSIds.Select (_x1 => new {  			crntMSIds = _x1'  			tmpAttrs = _x1.Attributes ().ToList ()'  			rowMSIds = rowsMSIds.GetFirstDefWithRemoving (_x2 => _x1.IsMatchAttrVal (Cs.GROUP_ID' _x2.groupid as string)) ?? new {  				delivid = ""'  				grouptype = ""'  				properties = "<properties/>"  			}  		}).ToList ()  	}).WithAddingLog (_x => _x.log' a => a.AddLap ("ImplementAllMSIds"' 2)).SelectNewSingle (_x =>  {  		_x.main.ForEach (x1 =>  {  			x1.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x1.rowMSIds.delivid));  			x1.tmpAttrs.Insert (1' new XAttribute (Cs.GROUP_TYPE' x1.rowMSIds.grouptype));  			x1.crntMSIds.Attributes ().Remove ();  			x1.crntMSIds.Add (x1.tmpAttrs);  			x1.crntMSIds.Add (XElement.Parse (x1.rowMSIds.properties));  		});  		return _x.log;  	})  	#endregion  	)  }).WithAddingLog (x => x.log' x => x.AddLap ("MSIds : Before doing Tasks ImplementAllMSIds()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => x.ImplementAllMSIds (y.elmMSIds' y.rowsMSIds' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSIds : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIds,The following statement contains a magic number: return new {  	log'  	elmsMSIds'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdsLiTable = Mysql.SetReader (queryMSIds' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSIds'  	x.log'  	rowsMSIds = x.MSIdsLiTable.Select (x1 => new {  		groupid = x1 [0] as string'  		delivid = x1 [1]'  		grouptype = x1 [2]'  		properties = x1 [3] as string  	}).ToList ()'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSIds : Implement MSIdsRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSIds = x.elmsMSIds.OrderBy (y => y.Attribute (Cs.GROUP_ID).Value' x.cmpr).ToList ()'  	rowsMSIds = x.rowsMSIds.OrderBy (y => y.groupid' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSIds'  	x.log'  	elmsMSIdsDivided = x.elmsMSIds.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmMSIds = y'  		HeadGroupId = y.First ().Attribute (Cs.GROUP_ID).Value'  		TailGroupId = y.Last ().Attribute (Cs.GROUP_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdsDivided.Select (y => new {  		x.log'  		y.elmMSIds'  		rowsMSIds = x.rowsMSIds.TempSortGroupId (y.HeadGroupId' y.TailGroupId)  	}).ToList ()'  	ImplementAllMSIds =   	#region Func  	new Func<List<XElement>' List<dynamic>' Log' Log> ((_elmsMSIds' rowsMSIds' _log) => new {  		elmMSIds = _elmsMSIds'  		rowsMSIds'  		log = _log  	}.SelectNewSingle (_x => new {  		_x.log'  		main = _x.elmMSIds.Select (_x1 => new {  			crntMSIds = _x1'  			tmpAttrs = _x1.Attributes ().ToList ()'  			rowMSIds = rowsMSIds.GetFirstDefWithRemoving (_x2 => _x1.IsMatchAttrVal (Cs.GROUP_ID' _x2.groupid as string)) ?? new {  				delivid = ""'  				grouptype = ""'  				properties = "<properties/>"  			}  		}).ToList ()  	}).WithAddingLog (_x => _x.log' a => a.AddLap ("ImplementAllMSIds"' 2)).SelectNewSingle (_x =>  {  		_x.main.ForEach (x1 =>  {  			x1.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x1.rowMSIds.delivid));  			x1.tmpAttrs.Insert (1' new XAttribute (Cs.GROUP_TYPE' x1.rowMSIds.grouptype));  			x1.crntMSIds.Attributes ().Remove ();  			x1.crntMSIds.Add (x1.tmpAttrs);  			x1.crntMSIds.Add (XElement.Parse (x1.rowMSIds.properties));  		});  		return _x.log;  	})  	#endregion  	)  }).WithAddingLog (x => x.log' x => x.AddLap ("MSIds : Before doing Tasks ImplementAllMSIds()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => x.ImplementAllMSIds (y.elmMSIds' y.rowsMSIds' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSIds : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIds,The following statement contains a magic number: return new {  	log'  	elmsMSIds'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdsLiTable = Mysql.SetReader (queryMSIds' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSIds'  	x.log'  	rowsMSIds = x.MSIdsLiTable.Select (x1 => new {  		groupid = x1 [0] as string'  		delivid = x1 [1]'  		grouptype = x1 [2]'  		properties = x1 [3] as string  	}).ToList ()'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSIds : Implement MSIdsRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSIds = x.elmsMSIds.OrderBy (y => y.Attribute (Cs.GROUP_ID).Value' x.cmpr).ToList ()'  	rowsMSIds = x.rowsMSIds.OrderBy (y => y.groupid' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSIds'  	x.log'  	elmsMSIdsDivided = x.elmsMSIds.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmMSIds = y'  		HeadGroupId = y.First ().Attribute (Cs.GROUP_ID).Value'  		TailGroupId = y.Last ().Attribute (Cs.GROUP_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdsDivided.Select (y => new {  		x.log'  		y.elmMSIds'  		rowsMSIds = x.rowsMSIds.TempSortGroupId (y.HeadGroupId' y.TailGroupId)  	}).ToList ()'  	ImplementAllMSIds =   	#region Func  	new Func<List<XElement>' List<dynamic>' Log' Log> ((_elmsMSIds' rowsMSIds' _log) => new {  		elmMSIds = _elmsMSIds'  		rowsMSIds'  		log = _log  	}.SelectNewSingle (_x => new {  		_x.log'  		main = _x.elmMSIds.Select (_x1 => new {  			crntMSIds = _x1'  			tmpAttrs = _x1.Attributes ().ToList ()'  			rowMSIds = rowsMSIds.GetFirstDefWithRemoving (_x2 => _x1.IsMatchAttrVal (Cs.GROUP_ID' _x2.groupid as string)) ?? new {  				delivid = ""'  				grouptype = ""'  				properties = "<properties/>"  			}  		}).ToList ()  	}).WithAddingLog (_x => _x.log' a => a.AddLap ("ImplementAllMSIds"' 2)).SelectNewSingle (_x =>  {  		_x.main.ForEach (x1 =>  {  			x1.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x1.rowMSIds.delivid));  			x1.tmpAttrs.Insert (1' new XAttribute (Cs.GROUP_TYPE' x1.rowMSIds.grouptype));  			x1.crntMSIds.Attributes ().Remove ();  			x1.crntMSIds.Add (x1.tmpAttrs);  			x1.crntMSIds.Add (XElement.Parse (x1.rowMSIds.properties));  		});  		return _x.log;  	})  	#endregion  	)  }).WithAddingLog (x => x.log' x => x.AddLap ("MSIds : Before doing Tasks ImplementAllMSIds()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => x.ImplementAllMSIds (y.elmMSIds' y.rowsMSIds' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSIds : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIds,The following statement contains a magic number: x.result.Select (y => Task.Factory.StartNew (() => x.ImplementAllMSIds (y.elmMSIds' y.rowsMSIds' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmsMSId'  	log'  	linkTargetInfoLi'  	// MsNodes.RetrieveRecordsOfBookStrict(UrefTable' MsNodeTable' ParentId' BookId);  	MSIdLiTable = Mysql.SetReader (queryMSId1' err' debugOption' log)'  	// すべての仕向け MSId に対する親 MSId(delivId == '') を取得する  	//   変更点を flag として残すために利用する  	// MasterNodesOfDeliv.RetrieveMsterRecordsAtDelivNode(UrefTable' MsNodeTable' ParentId' BookId);  	mstMSIdLi = Mysql.SetReader (queryMSId2' err' debugOption' log)  }.SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsTasks = new[] {  		Task.Factory.StartNew (() => x.MSIdLiTable.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())'  		Task.Factory.StartNew (() => x.mstMSIdLi.Select (y => new {  			locid = y [0] as string'  			delivid = y [1]'  			id = y [2]'  			rev = y [3]'  			mstype = y [4]'  			properties = y [5]  		}).ToList ())  	}.WaitAllAndReturnValues ().ToList ()  }).SelectNewSingle (x => new {  	x.elmsMSId'  	x.log'  	x.linkTargetInfoLi'  	rowsMSId = x.rowsTasks [0]'  	rowsMstMSId = x.rowsTasks [1]'  	cmpr = new ByteComparer ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Implement MSIdRows"' 1)).SelectNewSingle (x => new {  	x.log'  	elmsMSId = x.elmsMSId.OrderBy (y => y.Attribute (Cs.LOC_ID).Value' x.cmpr).ToList ()'  	rowsMSId = x.rowsMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	rowsMstMSId = x.rowsMstMSId.OrderBy (y => y.locid' x.cmpr).ToList ()'  	linkTargetInfoLi = x.linkTargetInfoLi.OrderBy (y => y' x.cmpr).ToList ()  }).SelectNewSingle (x => new {  	x.rowsMSId'  	x.rowsMstMSId'  	x.linkTargetInfoLi'  	x.log'  	elmsMSIdDivided = x.elmsMSId.DivideIntoList (Environment.ProcessorCount).Select (y => new {  		elmsMSId = y.ToList ()'  		headLocId = y.First ().Attribute (Cs.LOC_ID).Value'  		tailLocId = y.Last ().Attribute (Cs.LOC_ID).Value  	}).ToList ()  }).SelectNewSingle (x => new {  	x.log'  	result = x.elmsMSIdDivided.Select (y => new {  		x.log'  		y.elmsMSId'  		rowsMSId = x.rowsMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		rowsMstMSId = x.rowsMstMSId.TempSortLocId (y.headLocId' y.tailLocId)'  		linkTargetInfoLi = x.linkTargetInfoLi.TempSort (y.headLocId' y.tailLocId)'  		// なぜか大きく変化する(期待しない結果)  		implementAllMSId = new Func<List<XElement>' List<dynamic>' List<dynamic>' List<string>' Log' Log> (  		#region Func ImplementAllMSId() -- ここで作成した理由 : x 直下に作成しても処理時間を短縮できなかったので、見通しの良さを優先した  		(elmMSIds' rowsMSId' mstMSIdLi' _linkTargetInfoLi' _log) =>  {  			try {  				return new {  					elmMSIds'  					rowsMSId'  					mstMSIdLi'  					linkTargetInfoLi = _linkTargetInfoLi'  					log = _log'  					main = elmMSIds.Select (x1 => new {  						crntMSId = x1'  						crntLocId = x1.Attribute (Cs.LOC_ID).Value'  						tmpAttrs = x1.Attributes ().ToList ()'  						mstMSId = null as dynamic  					}).Select (x1 => new {  						x1.crntMSId'  						x1.crntLocId'  						x1.tmpAttrs'  						x1.mstMSId'  						rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  					}).Select (x1 => new {  						x1.crntLocId'  						x1.crntMSId'  						x1.tmpAttrs'  						x1.mstMSId'  						newElm = x1.rowForNewElm != null // default(dynamic) == null  						? new {  							isNotExistInRDB = false'  							row = x1.rowForNewElm  						} : new {  							isNotExistInRDB = true'  							row = new {  								locid = x1.crntLocId'  								delivid = ""'  								mstype = ""'  								rev = 0'  								id = ""'  								properties = "<properties/>"  							} as dynamic  						}  					}).ToList ()  				}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main.Select (x2 => new {  						x2.crntMSId'  						x2.newElm'  						x2.tmpAttrs'  						mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  					x1.rowsMSId'  					x1.linkTargetInfoLi'  					x1.log'  					main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  					.SideEffectsOnly (x2 =>  {  						x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  						x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  						? 1 : 0));  					}).Select (x2 => new {  						x2.crntMSId'  						x2.tmpAttrs'  						x2.mstMSId'  						newElm = x2.newElm.row'  						newElmProps = XElement.Parse (x2.newElm.row.properties)  					}).ToList ()  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  					x1.main'  					x1.log'  					funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  					#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  					(dlv' mst' dlvPrm' mstPrm) => new {  						val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  						dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  						mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  					}.SelectNewSingle (_x => new {  						val = _x.val'  						dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  						mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  					}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  					#endregion  					)  				}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  					x1.main.ForEach (x2 =>  {  						x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  						x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  						x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  						x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  						x2.crntMSId.Attributes ().Remove ();  						x2.crntMSId.Add (x2.tmpAttrs);  						x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  					});  					x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  					return x1.log;  				});  			}  			catch (Exception e) {  				err = e.Message;  				throw e;  			}  		}  		#endregion  		)  	}).ToList ()  }).WithAddingLog (x => x.log' x => x.AddLap ("MSId : Before doing Tasks ImplementAllMSId()"' 1)).SelectNewSingle (x =>  {  	// ImplementAllMSId(y.ElmMSId' y.MSid' y.MSidMst' y.LocIds)  	x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  	x.log.AddSplit ("MSId : Fin."' 1);  	return x.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: try {  	return new {  		elmMSIds'  		rowsMSId'  		mstMSIdLi'  		linkTargetInfoLi = _linkTargetInfoLi'  		log = _log'  		main = elmMSIds.Select (x1 => new {  			crntMSId = x1'  			crntLocId = x1.Attribute (Cs.LOC_ID).Value'  			tmpAttrs = x1.Attributes ().ToList ()'  			mstMSId = null as dynamic  		}).Select (x1 => new {  			x1.crntMSId'  			x1.crntLocId'  			x1.tmpAttrs'  			x1.mstMSId'  			rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  		}).Select (x1 => new {  			x1.crntLocId'  			x1.crntMSId'  			x1.tmpAttrs'  			x1.mstMSId'  			newElm = x1.rowForNewElm != null // default(dynamic) == null  			? new {  				isNotExistInRDB = false'  				row = x1.rowForNewElm  			} : new {  				isNotExistInRDB = true'  				row = new {  					locid = x1.crntLocId'  					delivid = ""'  					mstype = ""'  					rev = 0'  					id = ""'  					properties = "<properties/>"  				} as dynamic  			}  		}).ToList ()  	}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main.Select (x2 => new {  			x2.crntMSId'  			x2.newElm'  			x2.tmpAttrs'  			mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  		.SideEffectsOnly (x2 =>  {  			x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  			x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  			? 1 : 0));  		}).Select (x2 => new {  			x2.crntMSId'  			x2.tmpAttrs'  			x2.mstMSId'  			newElm = x2.newElm.row'  			newElmProps = XElement.Parse (x2.newElm.row.properties)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  		x1.main'  		x1.log'  		funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		(dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  		#endregion  		)  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  		x1.main.ForEach (x2 =>  {  			x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  			x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  			x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  			x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  			x2.crntMSId.Attributes ().Remove ();  			x2.crntMSId.Add (x2.tmpAttrs);  			x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  		});  		x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  		return x1.log;  	});  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: try {  	return new {  		elmMSIds'  		rowsMSId'  		mstMSIdLi'  		linkTargetInfoLi = _linkTargetInfoLi'  		log = _log'  		main = elmMSIds.Select (x1 => new {  			crntMSId = x1'  			crntLocId = x1.Attribute (Cs.LOC_ID).Value'  			tmpAttrs = x1.Attributes ().ToList ()'  			mstMSId = null as dynamic  		}).Select (x1 => new {  			x1.crntMSId'  			x1.crntLocId'  			x1.tmpAttrs'  			x1.mstMSId'  			rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  		}).Select (x1 => new {  			x1.crntLocId'  			x1.crntMSId'  			x1.tmpAttrs'  			x1.mstMSId'  			newElm = x1.rowForNewElm != null // default(dynamic) == null  			? new {  				isNotExistInRDB = false'  				row = x1.rowForNewElm  			} : new {  				isNotExistInRDB = true'  				row = new {  					locid = x1.crntLocId'  					delivid = ""'  					mstype = ""'  					rev = 0'  					id = ""'  					properties = "<properties/>"  				} as dynamic  			}  		}).ToList ()  	}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main.Select (x2 => new {  			x2.crntMSId'  			x2.newElm'  			x2.tmpAttrs'  			mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  		.SideEffectsOnly (x2 =>  {  			x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  			x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  			? 1 : 0));  		}).Select (x2 => new {  			x2.crntMSId'  			x2.tmpAttrs'  			x2.mstMSId'  			newElm = x2.newElm.row'  			newElmProps = XElement.Parse (x2.newElm.row.properties)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  		x1.main'  		x1.log'  		funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		(dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  		#endregion  		)  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  		x1.main.ForEach (x2 =>  {  			x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  			x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  			x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  			x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  			x2.crntMSId.Attributes ().Remove ();  			x2.crntMSId.Add (x2.tmpAttrs);  			x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  		});  		x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  		return x1.log;  	});  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: try {  	return new {  		elmMSIds'  		rowsMSId'  		mstMSIdLi'  		linkTargetInfoLi = _linkTargetInfoLi'  		log = _log'  		main = elmMSIds.Select (x1 => new {  			crntMSId = x1'  			crntLocId = x1.Attribute (Cs.LOC_ID).Value'  			tmpAttrs = x1.Attributes ().ToList ()'  			mstMSId = null as dynamic  		}).Select (x1 => new {  			x1.crntMSId'  			x1.crntLocId'  			x1.tmpAttrs'  			x1.mstMSId'  			rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  		}).Select (x1 => new {  			x1.crntLocId'  			x1.crntMSId'  			x1.tmpAttrs'  			x1.mstMSId'  			newElm = x1.rowForNewElm != null // default(dynamic) == null  			? new {  				isNotExistInRDB = false'  				row = x1.rowForNewElm  			} : new {  				isNotExistInRDB = true'  				row = new {  					locid = x1.crntLocId'  					delivid = ""'  					mstype = ""'  					rev = 0'  					id = ""'  					properties = "<properties/>"  				} as dynamic  			}  		}).ToList ()  	}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main.Select (x2 => new {  			x2.crntMSId'  			x2.newElm'  			x2.tmpAttrs'  			mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  		.SideEffectsOnly (x2 =>  {  			x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  			x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  			? 1 : 0));  		}).Select (x2 => new {  			x2.crntMSId'  			x2.tmpAttrs'  			x2.mstMSId'  			newElm = x2.newElm.row'  			newElmProps = XElement.Parse (x2.newElm.row.properties)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  		x1.main'  		x1.log'  		funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		(dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  		#endregion  		)  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  		x1.main.ForEach (x2 =>  {  			x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  			x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  			x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  			x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  			x2.crntMSId.Attributes ().Remove ();  			x2.crntMSId.Add (x2.tmpAttrs);  			x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  		});  		x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  		return x1.log;  	});  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: try {  	return new {  		elmMSIds'  		rowsMSId'  		mstMSIdLi'  		linkTargetInfoLi = _linkTargetInfoLi'  		log = _log'  		main = elmMSIds.Select (x1 => new {  			crntMSId = x1'  			crntLocId = x1.Attribute (Cs.LOC_ID).Value'  			tmpAttrs = x1.Attributes ().ToList ()'  			mstMSId = null as dynamic  		}).Select (x1 => new {  			x1.crntMSId'  			x1.crntLocId'  			x1.tmpAttrs'  			x1.mstMSId'  			rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  		}).Select (x1 => new {  			x1.crntLocId'  			x1.crntMSId'  			x1.tmpAttrs'  			x1.mstMSId'  			newElm = x1.rowForNewElm != null // default(dynamic) == null  			? new {  				isNotExistInRDB = false'  				row = x1.rowForNewElm  			} : new {  				isNotExistInRDB = true'  				row = new {  					locid = x1.crntLocId'  					delivid = ""'  					mstype = ""'  					rev = 0'  					id = ""'  					properties = "<properties/>"  				} as dynamic  			}  		}).ToList ()  	}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main.Select (x2 => new {  			x2.crntMSId'  			x2.newElm'  			x2.tmpAttrs'  			mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  		.SideEffectsOnly (x2 =>  {  			x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  			x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  			? 1 : 0));  		}).Select (x2 => new {  			x2.crntMSId'  			x2.tmpAttrs'  			x2.mstMSId'  			newElm = x2.newElm.row'  			newElmProps = XElement.Parse (x2.newElm.row.properties)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  		x1.main'  		x1.log'  		funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		(dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  		#endregion  		)  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  		x1.main.ForEach (x2 =>  {  			x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  			x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  			x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  			x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  			x2.crntMSId.Attributes ().Remove ();  			x2.crntMSId.Add (x2.tmpAttrs);  			x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  		});  		x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  		return x1.log;  	});  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: try {  	return new {  		elmMSIds'  		rowsMSId'  		mstMSIdLi'  		linkTargetInfoLi = _linkTargetInfoLi'  		log = _log'  		main = elmMSIds.Select (x1 => new {  			crntMSId = x1'  			crntLocId = x1.Attribute (Cs.LOC_ID).Value'  			tmpAttrs = x1.Attributes ().ToList ()'  			mstMSId = null as dynamic  		}).Select (x1 => new {  			x1.crntMSId'  			x1.crntLocId'  			x1.tmpAttrs'  			x1.mstMSId'  			rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  		}).Select (x1 => new {  			x1.crntLocId'  			x1.crntMSId'  			x1.tmpAttrs'  			x1.mstMSId'  			newElm = x1.rowForNewElm != null // default(dynamic) == null  			? new {  				isNotExistInRDB = false'  				row = x1.rowForNewElm  			} : new {  				isNotExistInRDB = true'  				row = new {  					locid = x1.crntLocId'  					delivid = ""'  					mstype = ""'  					rev = 0'  					id = ""'  					properties = "<properties/>"  				} as dynamic  			}  		}).ToList ()  	}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main.Select (x2 => new {  			x2.crntMSId'  			x2.newElm'  			x2.tmpAttrs'  			mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  		.SideEffectsOnly (x2 =>  {  			x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  			x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  			? 1 : 0));  		}).Select (x2 => new {  			x2.crntMSId'  			x2.tmpAttrs'  			x2.mstMSId'  			newElm = x2.newElm.row'  			newElmProps = XElement.Parse (x2.newElm.row.properties)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  		x1.main'  		x1.log'  		funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		(dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  		#endregion  		)  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  		x1.main.ForEach (x2 =>  {  			x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  			x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  			x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  			x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  			x2.crntMSId.Attributes ().Remove ();  			x2.crntMSId.Add (x2.tmpAttrs);  			x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  		});  		x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  		return x1.log;  	});  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: try {  	return new {  		elmMSIds'  		rowsMSId'  		mstMSIdLi'  		linkTargetInfoLi = _linkTargetInfoLi'  		log = _log'  		main = elmMSIds.Select (x1 => new {  			crntMSId = x1'  			crntLocId = x1.Attribute (Cs.LOC_ID).Value'  			tmpAttrs = x1.Attributes ().ToList ()'  			mstMSId = null as dynamic  		}).Select (x1 => new {  			x1.crntMSId'  			x1.crntLocId'  			x1.tmpAttrs'  			x1.mstMSId'  			rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  		}).Select (x1 => new {  			x1.crntLocId'  			x1.crntMSId'  			x1.tmpAttrs'  			x1.mstMSId'  			newElm = x1.rowForNewElm != null // default(dynamic) == null  			? new {  				isNotExistInRDB = false'  				row = x1.rowForNewElm  			} : new {  				isNotExistInRDB = true'  				row = new {  					locid = x1.crntLocId'  					delivid = ""'  					mstype = ""'  					rev = 0'  					id = ""'  					properties = "<properties/>"  				} as dynamic  			}  		}).ToList ()  	}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main.Select (x2 => new {  			x2.crntMSId'  			x2.newElm'  			x2.tmpAttrs'  			mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  		.SideEffectsOnly (x2 =>  {  			x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  			x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  			? 1 : 0));  		}).Select (x2 => new {  			x2.crntMSId'  			x2.tmpAttrs'  			x2.mstMSId'  			newElm = x2.newElm.row'  			newElmProps = XElement.Parse (x2.newElm.row.properties)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  		x1.main'  		x1.log'  		funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		(dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  		#endregion  		)  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  		x1.main.ForEach (x2 =>  {  			x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  			x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  			x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  			x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  			x2.crntMSId.Attributes ().Remove ();  			x2.crntMSId.Add (x2.tmpAttrs);  			x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  		});  		x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  		return x1.log;  	});  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: try {  	return new {  		elmMSIds'  		rowsMSId'  		mstMSIdLi'  		linkTargetInfoLi = _linkTargetInfoLi'  		log = _log'  		main = elmMSIds.Select (x1 => new {  			crntMSId = x1'  			crntLocId = x1.Attribute (Cs.LOC_ID).Value'  			tmpAttrs = x1.Attributes ().ToList ()'  			mstMSId = null as dynamic  		}).Select (x1 => new {  			x1.crntMSId'  			x1.crntLocId'  			x1.tmpAttrs'  			x1.mstMSId'  			rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  		}).Select (x1 => new {  			x1.crntLocId'  			x1.crntMSId'  			x1.tmpAttrs'  			x1.mstMSId'  			newElm = x1.rowForNewElm != null // default(dynamic) == null  			? new {  				isNotExistInRDB = false'  				row = x1.rowForNewElm  			} : new {  				isNotExistInRDB = true'  				row = new {  					locid = x1.crntLocId'  					delivid = ""'  					mstype = ""'  					rev = 0'  					id = ""'  					properties = "<properties/>"  				} as dynamic  			}  		}).ToList ()  	}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main.Select (x2 => new {  			x2.crntMSId'  			x2.newElm'  			x2.tmpAttrs'  			mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  		.SideEffectsOnly (x2 =>  {  			x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  			x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  			? 1 : 0));  		}).Select (x2 => new {  			x2.crntMSId'  			x2.tmpAttrs'  			x2.mstMSId'  			newElm = x2.newElm.row'  			newElmProps = XElement.Parse (x2.newElm.row.properties)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  		x1.main'  		x1.log'  		funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		(dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  		#endregion  		)  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  		x1.main.ForEach (x2 =>  {  			x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  			x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  			x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  			x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  			x2.crntMSId.Attributes ().Remove ();  			x2.crntMSId.Add (x2.tmpAttrs);  			x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  		});  		x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  		return x1.log;  	});  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: try {  	return new {  		elmMSIds'  		rowsMSId'  		mstMSIdLi'  		linkTargetInfoLi = _linkTargetInfoLi'  		log = _log'  		main = elmMSIds.Select (x1 => new {  			crntMSId = x1'  			crntLocId = x1.Attribute (Cs.LOC_ID).Value'  			tmpAttrs = x1.Attributes ().ToList ()'  			mstMSId = null as dynamic  		}).Select (x1 => new {  			x1.crntMSId'  			x1.crntLocId'  			x1.tmpAttrs'  			x1.mstMSId'  			rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  		}).Select (x1 => new {  			x1.crntLocId'  			x1.crntMSId'  			x1.tmpAttrs'  			x1.mstMSId'  			newElm = x1.rowForNewElm != null // default(dynamic) == null  			? new {  				isNotExistInRDB = false'  				row = x1.rowForNewElm  			} : new {  				isNotExistInRDB = true'  				row = new {  					locid = x1.crntLocId'  					delivid = ""'  					mstype = ""'  					rev = 0'  					id = ""'  					properties = "<properties/>"  				} as dynamic  			}  		}).ToList ()  	}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main.Select (x2 => new {  			x2.crntMSId'  			x2.newElm'  			x2.tmpAttrs'  			mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  		.SideEffectsOnly (x2 =>  {  			x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  			x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  			? 1 : 0));  		}).Select (x2 => new {  			x2.crntMSId'  			x2.tmpAttrs'  			x2.mstMSId'  			newElm = x2.newElm.row'  			newElmProps = XElement.Parse (x2.newElm.row.properties)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  		x1.main'  		x1.log'  		funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		(dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  		#endregion  		)  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  		x1.main.ForEach (x2 =>  {  			x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  			x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  			x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  			x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  			x2.crntMSId.Attributes ().Remove ();  			x2.crntMSId.Add (x2.tmpAttrs);  			x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  		});  		x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  		return x1.log;  	});  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: try {  	return new {  		elmMSIds'  		rowsMSId'  		mstMSIdLi'  		linkTargetInfoLi = _linkTargetInfoLi'  		log = _log'  		main = elmMSIds.Select (x1 => new {  			crntMSId = x1'  			crntLocId = x1.Attribute (Cs.LOC_ID).Value'  			tmpAttrs = x1.Attributes ().ToList ()'  			mstMSId = null as dynamic  		}).Select (x1 => new {  			x1.crntMSId'  			x1.crntLocId'  			x1.tmpAttrs'  			x1.mstMSId'  			rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  		}).Select (x1 => new {  			x1.crntLocId'  			x1.crntMSId'  			x1.tmpAttrs'  			x1.mstMSId'  			newElm = x1.rowForNewElm != null // default(dynamic) == null  			? new {  				isNotExistInRDB = false'  				row = x1.rowForNewElm  			} : new {  				isNotExistInRDB = true'  				row = new {  					locid = x1.crntLocId'  					delivid = ""'  					mstype = ""'  					rev = 0'  					id = ""'  					properties = "<properties/>"  				} as dynamic  			}  		}).ToList ()  	}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main.Select (x2 => new {  			x2.crntMSId'  			x2.newElm'  			x2.tmpAttrs'  			mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  		.SideEffectsOnly (x2 =>  {  			x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  			x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  			? 1 : 0));  		}).Select (x2 => new {  			x2.crntMSId'  			x2.tmpAttrs'  			x2.mstMSId'  			newElm = x2.newElm.row'  			newElmProps = XElement.Parse (x2.newElm.row.properties)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  		x1.main'  		x1.log'  		funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		(dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  		#endregion  		)  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  		x1.main.ForEach (x2 =>  {  			x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  			x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  			x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  			x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  			x2.crntMSId.Attributes ().Remove ();  			x2.crntMSId.Add (x2.tmpAttrs);  			x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  		});  		x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  		return x1.log;  	});  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: try {  	return new {  		elmMSIds'  		rowsMSId'  		mstMSIdLi'  		linkTargetInfoLi = _linkTargetInfoLi'  		log = _log'  		main = elmMSIds.Select (x1 => new {  			crntMSId = x1'  			crntLocId = x1.Attribute (Cs.LOC_ID).Value'  			tmpAttrs = x1.Attributes ().ToList ()'  			mstMSId = null as dynamic  		}).Select (x1 => new {  			x1.crntMSId'  			x1.crntLocId'  			x1.tmpAttrs'  			x1.mstMSId'  			rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  		}).Select (x1 => new {  			x1.crntLocId'  			x1.crntMSId'  			x1.tmpAttrs'  			x1.mstMSId'  			newElm = x1.rowForNewElm != null // default(dynamic) == null  			? new {  				isNotExistInRDB = false'  				row = x1.rowForNewElm  			} : new {  				isNotExistInRDB = true'  				row = new {  					locid = x1.crntLocId'  					delivid = ""'  					mstype = ""'  					rev = 0'  					id = ""'  					properties = "<properties/>"  				} as dynamic  			}  		}).ToList ()  	}.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main.Select (x2 => new {  			x2.crntMSId'  			x2.newElm'  			x2.tmpAttrs'  			mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  		x1.rowsMSId'  		x1.linkTargetInfoLi'  		x1.log'  		main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  		.SideEffectsOnly (x2 =>  {  			x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  			x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  			? 1 : 0));  		}).Select (x2 => new {  			x2.crntMSId'  			x2.tmpAttrs'  			x2.mstMSId'  			newElm = x2.newElm.row'  			newElmProps = XElement.Parse (x2.newElm.row.properties)  		}).ToList ()  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  		x1.main'  		x1.log'  		funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		(dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  		#endregion  		)  	}).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  		x1.main.ForEach (x2 =>  {  			x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  			x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  			x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  			x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  			x2.crntMSId.Attributes ().Remove ();  			x2.crntMSId.Add (x2.tmpAttrs);  			x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  		});  		x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  		return x1.log;  	});  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmMSIds'  	rowsMSId'  	mstMSIdLi'  	linkTargetInfoLi = _linkTargetInfoLi'  	log = _log'  	main = elmMSIds.Select (x1 => new {  		crntMSId = x1'  		crntLocId = x1.Attribute (Cs.LOC_ID).Value'  		tmpAttrs = x1.Attributes ().ToList ()'  		mstMSId = null as dynamic  	}).Select (x1 => new {  		x1.crntMSId'  		x1.crntLocId'  		x1.tmpAttrs'  		x1.mstMSId'  		rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  	}).Select (x1 => new {  		x1.crntLocId'  		x1.crntMSId'  		x1.tmpAttrs'  		x1.mstMSId'  		newElm = x1.rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = x1.rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = x1.crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		}  	}).ToList ()  }.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main.Select (x2 => new {  		x2.crntMSId'  		x2.newElm'  		x2.tmpAttrs'  		mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  	.SideEffectsOnly (x2 =>  {  		x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  		x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  		? 1 : 0));  	}).Select (x2 => new {  		x2.crntMSId'  		x2.tmpAttrs'  		x2.mstMSId'  		newElm = x2.newElm.row'  		newElmProps = XElement.Parse (x2.newElm.row.properties)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  	x1.main'  	x1.log'  	funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	(dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  	#endregion  	)  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  	x1.main.ForEach (x2 =>  {  		x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  		x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  		x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  		x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  		x2.crntMSId.Attributes ().Remove ();  		x2.crntMSId.Add (x2.tmpAttrs);  		x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  	});  	x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  	return x1.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmMSIds'  	rowsMSId'  	mstMSIdLi'  	linkTargetInfoLi = _linkTargetInfoLi'  	log = _log'  	main = elmMSIds.Select (x1 => new {  		crntMSId = x1'  		crntLocId = x1.Attribute (Cs.LOC_ID).Value'  		tmpAttrs = x1.Attributes ().ToList ()'  		mstMSId = null as dynamic  	}).Select (x1 => new {  		x1.crntMSId'  		x1.crntLocId'  		x1.tmpAttrs'  		x1.mstMSId'  		rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  	}).Select (x1 => new {  		x1.crntLocId'  		x1.crntMSId'  		x1.tmpAttrs'  		x1.mstMSId'  		newElm = x1.rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = x1.rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = x1.crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		}  	}).ToList ()  }.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main.Select (x2 => new {  		x2.crntMSId'  		x2.newElm'  		x2.tmpAttrs'  		mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  	.SideEffectsOnly (x2 =>  {  		x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  		x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  		? 1 : 0));  	}).Select (x2 => new {  		x2.crntMSId'  		x2.tmpAttrs'  		x2.mstMSId'  		newElm = x2.newElm.row'  		newElmProps = XElement.Parse (x2.newElm.row.properties)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  	x1.main'  	x1.log'  	funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	(dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  	#endregion  	)  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  	x1.main.ForEach (x2 =>  {  		x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  		x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  		x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  		x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  		x2.crntMSId.Attributes ().Remove ();  		x2.crntMSId.Add (x2.tmpAttrs);  		x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  	});  	x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  	return x1.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmMSIds'  	rowsMSId'  	mstMSIdLi'  	linkTargetInfoLi = _linkTargetInfoLi'  	log = _log'  	main = elmMSIds.Select (x1 => new {  		crntMSId = x1'  		crntLocId = x1.Attribute (Cs.LOC_ID).Value'  		tmpAttrs = x1.Attributes ().ToList ()'  		mstMSId = null as dynamic  	}).Select (x1 => new {  		x1.crntMSId'  		x1.crntLocId'  		x1.tmpAttrs'  		x1.mstMSId'  		rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  	}).Select (x1 => new {  		x1.crntLocId'  		x1.crntMSId'  		x1.tmpAttrs'  		x1.mstMSId'  		newElm = x1.rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = x1.rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = x1.crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		}  	}).ToList ()  }.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main.Select (x2 => new {  		x2.crntMSId'  		x2.newElm'  		x2.tmpAttrs'  		mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  	.SideEffectsOnly (x2 =>  {  		x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  		x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  		? 1 : 0));  	}).Select (x2 => new {  		x2.crntMSId'  		x2.tmpAttrs'  		x2.mstMSId'  		newElm = x2.newElm.row'  		newElmProps = XElement.Parse (x2.newElm.row.properties)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  	x1.main'  	x1.log'  	funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	(dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  	#endregion  	)  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  	x1.main.ForEach (x2 =>  {  		x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  		x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  		x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  		x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  		x2.crntMSId.Attributes ().Remove ();  		x2.crntMSId.Add (x2.tmpAttrs);  		x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  	});  	x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  	return x1.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmMSIds'  	rowsMSId'  	mstMSIdLi'  	linkTargetInfoLi = _linkTargetInfoLi'  	log = _log'  	main = elmMSIds.Select (x1 => new {  		crntMSId = x1'  		crntLocId = x1.Attribute (Cs.LOC_ID).Value'  		tmpAttrs = x1.Attributes ().ToList ()'  		mstMSId = null as dynamic  	}).Select (x1 => new {  		x1.crntMSId'  		x1.crntLocId'  		x1.tmpAttrs'  		x1.mstMSId'  		rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  	}).Select (x1 => new {  		x1.crntLocId'  		x1.crntMSId'  		x1.tmpAttrs'  		x1.mstMSId'  		newElm = x1.rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = x1.rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = x1.crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		}  	}).ToList ()  }.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main.Select (x2 => new {  		x2.crntMSId'  		x2.newElm'  		x2.tmpAttrs'  		mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  	.SideEffectsOnly (x2 =>  {  		x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  		x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  		? 1 : 0));  	}).Select (x2 => new {  		x2.crntMSId'  		x2.tmpAttrs'  		x2.mstMSId'  		newElm = x2.newElm.row'  		newElmProps = XElement.Parse (x2.newElm.row.properties)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  	x1.main'  	x1.log'  	funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	(dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  	#endregion  	)  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  	x1.main.ForEach (x2 =>  {  		x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  		x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  		x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  		x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  		x2.crntMSId.Attributes ().Remove ();  		x2.crntMSId.Add (x2.tmpAttrs);  		x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  	});  	x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  	return x1.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmMSIds'  	rowsMSId'  	mstMSIdLi'  	linkTargetInfoLi = _linkTargetInfoLi'  	log = _log'  	main = elmMSIds.Select (x1 => new {  		crntMSId = x1'  		crntLocId = x1.Attribute (Cs.LOC_ID).Value'  		tmpAttrs = x1.Attributes ().ToList ()'  		mstMSId = null as dynamic  	}).Select (x1 => new {  		x1.crntMSId'  		x1.crntLocId'  		x1.tmpAttrs'  		x1.mstMSId'  		rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  	}).Select (x1 => new {  		x1.crntLocId'  		x1.crntMSId'  		x1.tmpAttrs'  		x1.mstMSId'  		newElm = x1.rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = x1.rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = x1.crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		}  	}).ToList ()  }.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main.Select (x2 => new {  		x2.crntMSId'  		x2.newElm'  		x2.tmpAttrs'  		mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  	.SideEffectsOnly (x2 =>  {  		x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  		x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  		? 1 : 0));  	}).Select (x2 => new {  		x2.crntMSId'  		x2.tmpAttrs'  		x2.mstMSId'  		newElm = x2.newElm.row'  		newElmProps = XElement.Parse (x2.newElm.row.properties)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  	x1.main'  	x1.log'  	funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	(dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  	#endregion  	)  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  	x1.main.ForEach (x2 =>  {  		x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  		x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  		x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  		x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  		x2.crntMSId.Attributes ().Remove ();  		x2.crntMSId.Add (x2.tmpAttrs);  		x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  	});  	x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  	return x1.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmMSIds'  	rowsMSId'  	mstMSIdLi'  	linkTargetInfoLi = _linkTargetInfoLi'  	log = _log'  	main = elmMSIds.Select (x1 => new {  		crntMSId = x1'  		crntLocId = x1.Attribute (Cs.LOC_ID).Value'  		tmpAttrs = x1.Attributes ().ToList ()'  		mstMSId = null as dynamic  	}).Select (x1 => new {  		x1.crntMSId'  		x1.crntLocId'  		x1.tmpAttrs'  		x1.mstMSId'  		rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  	}).Select (x1 => new {  		x1.crntLocId'  		x1.crntMSId'  		x1.tmpAttrs'  		x1.mstMSId'  		newElm = x1.rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = x1.rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = x1.crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		}  	}).ToList ()  }.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main.Select (x2 => new {  		x2.crntMSId'  		x2.newElm'  		x2.tmpAttrs'  		mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  	.SideEffectsOnly (x2 =>  {  		x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  		x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  		? 1 : 0));  	}).Select (x2 => new {  		x2.crntMSId'  		x2.tmpAttrs'  		x2.mstMSId'  		newElm = x2.newElm.row'  		newElmProps = XElement.Parse (x2.newElm.row.properties)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  	x1.main'  	x1.log'  	funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	(dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  	#endregion  	)  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  	x1.main.ForEach (x2 =>  {  		x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  		x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  		x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  		x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  		x2.crntMSId.Attributes ().Remove ();  		x2.crntMSId.Add (x2.tmpAttrs);  		x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  	});  	x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  	return x1.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmMSIds'  	rowsMSId'  	mstMSIdLi'  	linkTargetInfoLi = _linkTargetInfoLi'  	log = _log'  	main = elmMSIds.Select (x1 => new {  		crntMSId = x1'  		crntLocId = x1.Attribute (Cs.LOC_ID).Value'  		tmpAttrs = x1.Attributes ().ToList ()'  		mstMSId = null as dynamic  	}).Select (x1 => new {  		x1.crntMSId'  		x1.crntLocId'  		x1.tmpAttrs'  		x1.mstMSId'  		rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  	}).Select (x1 => new {  		x1.crntLocId'  		x1.crntMSId'  		x1.tmpAttrs'  		x1.mstMSId'  		newElm = x1.rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = x1.rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = x1.crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		}  	}).ToList ()  }.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main.Select (x2 => new {  		x2.crntMSId'  		x2.newElm'  		x2.tmpAttrs'  		mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  	.SideEffectsOnly (x2 =>  {  		x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  		x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  		? 1 : 0));  	}).Select (x2 => new {  		x2.crntMSId'  		x2.tmpAttrs'  		x2.mstMSId'  		newElm = x2.newElm.row'  		newElmProps = XElement.Parse (x2.newElm.row.properties)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  	x1.main'  	x1.log'  	funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	(dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  	#endregion  	)  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  	x1.main.ForEach (x2 =>  {  		x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  		x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  		x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  		x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  		x2.crntMSId.Attributes ().Remove ();  		x2.crntMSId.Add (x2.tmpAttrs);  		x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  	});  	x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  	return x1.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmMSIds'  	rowsMSId'  	mstMSIdLi'  	linkTargetInfoLi = _linkTargetInfoLi'  	log = _log'  	main = elmMSIds.Select (x1 => new {  		crntMSId = x1'  		crntLocId = x1.Attribute (Cs.LOC_ID).Value'  		tmpAttrs = x1.Attributes ().ToList ()'  		mstMSId = null as dynamic  	}).Select (x1 => new {  		x1.crntMSId'  		x1.crntLocId'  		x1.tmpAttrs'  		x1.mstMSId'  		rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  	}).Select (x1 => new {  		x1.crntLocId'  		x1.crntMSId'  		x1.tmpAttrs'  		x1.mstMSId'  		newElm = x1.rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = x1.rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = x1.crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		}  	}).ToList ()  }.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main.Select (x2 => new {  		x2.crntMSId'  		x2.newElm'  		x2.tmpAttrs'  		mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  	.SideEffectsOnly (x2 =>  {  		x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  		x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  		? 1 : 0));  	}).Select (x2 => new {  		x2.crntMSId'  		x2.tmpAttrs'  		x2.mstMSId'  		newElm = x2.newElm.row'  		newElmProps = XElement.Parse (x2.newElm.row.properties)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  	x1.main'  	x1.log'  	funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	(dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  	#endregion  	)  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  	x1.main.ForEach (x2 =>  {  		x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  		x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  		x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  		x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  		x2.crntMSId.Attributes ().Remove ();  		x2.crntMSId.Add (x2.tmpAttrs);  		x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  	});  	x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  	return x1.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmMSIds'  	rowsMSId'  	mstMSIdLi'  	linkTargetInfoLi = _linkTargetInfoLi'  	log = _log'  	main = elmMSIds.Select (x1 => new {  		crntMSId = x1'  		crntLocId = x1.Attribute (Cs.LOC_ID).Value'  		tmpAttrs = x1.Attributes ().ToList ()'  		mstMSId = null as dynamic  	}).Select (x1 => new {  		x1.crntMSId'  		x1.crntLocId'  		x1.tmpAttrs'  		x1.mstMSId'  		rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  	}).Select (x1 => new {  		x1.crntLocId'  		x1.crntMSId'  		x1.tmpAttrs'  		x1.mstMSId'  		newElm = x1.rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = x1.rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = x1.crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		}  	}).ToList ()  }.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main.Select (x2 => new {  		x2.crntMSId'  		x2.newElm'  		x2.tmpAttrs'  		mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  	.SideEffectsOnly (x2 =>  {  		x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  		x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  		? 1 : 0));  	}).Select (x2 => new {  		x2.crntMSId'  		x2.tmpAttrs'  		x2.mstMSId'  		newElm = x2.newElm.row'  		newElmProps = XElement.Parse (x2.newElm.row.properties)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  	x1.main'  	x1.log'  	funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	(dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  	#endregion  	)  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  	x1.main.ForEach (x2 =>  {  		x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  		x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  		x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  		x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  		x2.crntMSId.Attributes ().Remove ();  		x2.crntMSId.Add (x2.tmpAttrs);  		x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  	});  	x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  	return x1.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: return new {  	elmMSIds'  	rowsMSId'  	mstMSIdLi'  	linkTargetInfoLi = _linkTargetInfoLi'  	log = _log'  	main = elmMSIds.Select (x1 => new {  		crntMSId = x1'  		crntLocId = x1.Attribute (Cs.LOC_ID).Value'  		tmpAttrs = x1.Attributes ().ToList ()'  		mstMSId = null as dynamic  	}).Select (x1 => new {  		x1.crntMSId'  		x1.crntLocId'  		x1.tmpAttrs'  		x1.mstMSId'  		rowForNewElm = rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == x1.crntLocId)  	}).Select (x1 => new {  		x1.crntLocId'  		x1.crntMSId'  		x1.tmpAttrs'  		x1.mstMSId'  		newElm = x1.rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = x1.rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = x1.crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		}  	}).ToList ()  }.WithAddingLog (x1 => x1.log' (x1' y1) => x1.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + y1.linkTargetInfoLi.Count ().ToString ()' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main.Select (x2 => new {  		x2.crntMSId'  		x2.newElm'  		x2.tmpAttrs'  		mstMSId = x1.mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == x2.crntLocId)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Added master info"' 2)).SelectNewSingle (x1 => new {  	x1.rowsMSId'  	x1.linkTargetInfoLi'  	x1.log'  	main = x1.main// Side effects !! -- Add attributes to 'tmpAttrs'  	.SideEffectsOnly (x2 =>  {  		x2.tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' x2.newElm.row.delivid));  		x2.tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' x2.newElm.isNotExistInRDB ? -1 : x1.linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == x2.newElm.row.locid) != null // == default(string)  		? 1 : 0));  	}).Select (x2 => new {  		x2.crntMSId'  		x2.tmpAttrs'  		x2.mstMSId'  		newElm = x2.newElm.row'  		newElmProps = XElement.Parse (x2.newElm.row.properties)  	}).ToList ()  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2)).SelectNewSingle (x1 => new {  	x1.main'  	x1.log'  	funcEncodeModFlag = new Func<dynamic' dynamic' XElement' XElement' int> (  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	(dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm))  	#endregion  	)  }).WithAddingLog (x1 => x1.log' x1 => x1.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2)).SelectNewSingle (x1 =>  {  	x1.main.ForEach (x2 =>  {  		x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  		x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  		x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  		x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  		x2.crntMSId.Attributes ().Remove ();  		x2.crntMSId.Add (x2.tmpAttrs);  		x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  	});  	x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  	return x1.log;  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: x1.main.ForEach (x2 =>  {  	x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  	x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  	x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  	x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  	x2.crntMSId.Attributes ().Remove ();  	x2.crntMSId.Add (x2.tmpAttrs);  	x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: x1.main.ForEach (x2 =>  {  	x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  	x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  	x2.tmpAttrs.Add (new XAttribute (Cs.ID' x2.newElm.id));  	x2.tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' x2.newElm.mstype));  	x2.crntMSId.Attributes ().Remove ();  	x2.crntMSId.Add (x2.tmpAttrs);  	x2.crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (x2.newElmProps);  });  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: x2.tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' x2.mstMSId == null ? 0 : x1.funcEncodeModFlag (x2.newElm' x2.mstMSId' x2.newElmProps' XElement.Parse (x2.mstMSId.properties))));  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: x2.tmpAttrs.Insert (3' new XAttribute (Cs.REV' x2.newElm.rev));  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: x1.log.AddLap ("ImplementAllMSId : Fin."' 2);  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSId,The following statement contains a magic number: x.result.Select (y => Task.Factory.StartNew (() => y.implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: try {  	foreach (var crntMSId in elmMSIds) {  		var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  		var tmpAttrs = crntMSId.Attributes ().ToList ();  		var mstMSId = null as dynamic;  		var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  		var newElm = rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		};  		_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  		mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  		tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  		tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  		? 1 : 0));  		_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  		#endregion  		var newElmProps = XElement.Parse (newElm.row.properties);  		_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  		tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  		tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  		tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  		tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  		crntMSId.Attributes ().Remove ();  		crntMSId.Add (tmpAttrs);  		crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  	}  	// end foreach  	_log.AddLap ("ImplementAllMSId : Fin."' 2);  	return _log;  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: try {  	foreach (var crntMSId in elmMSIds) {  		var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  		var tmpAttrs = crntMSId.Attributes ().ToList ();  		var mstMSId = null as dynamic;  		var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  		var newElm = rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		};  		_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  		mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  		tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  		tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  		? 1 : 0));  		_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  		#endregion  		var newElmProps = XElement.Parse (newElm.row.properties);  		_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  		tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  		tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  		tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  		tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  		crntMSId.Attributes ().Remove ();  		crntMSId.Add (tmpAttrs);  		crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  	}  	// end foreach  	_log.AddLap ("ImplementAllMSId : Fin."' 2);  	return _log;  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: try {  	foreach (var crntMSId in elmMSIds) {  		var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  		var tmpAttrs = crntMSId.Attributes ().ToList ();  		var mstMSId = null as dynamic;  		var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  		var newElm = rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		};  		_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  		mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  		tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  		tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  		? 1 : 0));  		_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  		#endregion  		var newElmProps = XElement.Parse (newElm.row.properties);  		_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  		tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  		tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  		tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  		tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  		crntMSId.Attributes ().Remove ();  		crntMSId.Add (tmpAttrs);  		crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  	}  	// end foreach  	_log.AddLap ("ImplementAllMSId : Fin."' 2);  	return _log;  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: try {  	foreach (var crntMSId in elmMSIds) {  		var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  		var tmpAttrs = crntMSId.Attributes ().ToList ();  		var mstMSId = null as dynamic;  		var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  		var newElm = rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		};  		_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  		mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  		tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  		tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  		? 1 : 0));  		_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  		#endregion  		var newElmProps = XElement.Parse (newElm.row.properties);  		_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  		tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  		tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  		tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  		tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  		crntMSId.Attributes ().Remove ();  		crntMSId.Add (tmpAttrs);  		crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  	}  	// end foreach  	_log.AddLap ("ImplementAllMSId : Fin."' 2);  	return _log;  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: try {  	foreach (var crntMSId in elmMSIds) {  		var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  		var tmpAttrs = crntMSId.Attributes ().ToList ();  		var mstMSId = null as dynamic;  		var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  		var newElm = rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		};  		_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  		mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  		tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  		tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  		? 1 : 0));  		_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  		#endregion  		var newElmProps = XElement.Parse (newElm.row.properties);  		_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  		tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  		tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  		tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  		tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  		crntMSId.Attributes ().Remove ();  		crntMSId.Add (tmpAttrs);  		crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  	}  	// end foreach  	_log.AddLap ("ImplementAllMSId : Fin."' 2);  	return _log;  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: try {  	foreach (var crntMSId in elmMSIds) {  		var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  		var tmpAttrs = crntMSId.Attributes ().ToList ();  		var mstMSId = null as dynamic;  		var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  		var newElm = rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		};  		_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  		mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  		tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  		tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  		? 1 : 0));  		_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  		#endregion  		var newElmProps = XElement.Parse (newElm.row.properties);  		_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  		tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  		tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  		tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  		tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  		crntMSId.Attributes ().Remove ();  		crntMSId.Add (tmpAttrs);  		crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  	}  	// end foreach  	_log.AddLap ("ImplementAllMSId : Fin."' 2);  	return _log;  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: try {  	foreach (var crntMSId in elmMSIds) {  		var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  		var tmpAttrs = crntMSId.Attributes ().ToList ();  		var mstMSId = null as dynamic;  		var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  		var newElm = rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		};  		_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  		mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  		tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  		tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  		? 1 : 0));  		_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  		#endregion  		var newElmProps = XElement.Parse (newElm.row.properties);  		_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  		tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  		tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  		tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  		tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  		crntMSId.Attributes ().Remove ();  		crntMSId.Add (tmpAttrs);  		crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  	}  	// end foreach  	_log.AddLap ("ImplementAllMSId : Fin."' 2);  	return _log;  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: try {  	foreach (var crntMSId in elmMSIds) {  		var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  		var tmpAttrs = crntMSId.Attributes ().ToList ();  		var mstMSId = null as dynamic;  		var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  		var newElm = rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		};  		_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  		mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  		tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  		tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  		? 1 : 0));  		_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  		#endregion  		var newElmProps = XElement.Parse (newElm.row.properties);  		_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  		tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  		tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  		tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  		tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  		crntMSId.Attributes ().Remove ();  		crntMSId.Add (tmpAttrs);  		crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  	}  	// end foreach  	_log.AddLap ("ImplementAllMSId : Fin."' 2);  	return _log;  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: try {  	foreach (var crntMSId in elmMSIds) {  		var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  		var tmpAttrs = crntMSId.Attributes ().ToList ();  		var mstMSId = null as dynamic;  		var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  		var newElm = rowForNewElm != null // default(dynamic) == null  		? new {  			isNotExistInRDB = false'  			row = rowForNewElm  		} : new {  			isNotExistInRDB = true'  			row = new {  				locid = crntLocId'  				delivid = ""'  				mstype = ""'  				rev = 0'  				id = ""'  				properties = "<properties/>"  			} as dynamic  		};  		_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  		mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  		tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  		tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  		? 1 : 0));  		_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  		#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  		Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  			val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  			dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  			mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  		}.SelectNewSingle (_x => new {  			val = _x.val'  			dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  			mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  		}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  		#endregion  		var newElmProps = XElement.Parse (newElm.row.properties);  		_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  		tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  		tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  		tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  		tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  		crntMSId.Attributes ().Remove ();  		crntMSId.Add (tmpAttrs);  		crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  	}  	// end foreach  	_log.AddLap ("ImplementAllMSId : Fin."' 2);  	return _log;  }  catch (Exception e) {  	err = e.Message;  	throw e;  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: foreach (var crntMSId in elmMSIds) {  	var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  	var tmpAttrs = crntMSId.Attributes ().ToList ();  	var mstMSId = null as dynamic;  	var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  	var newElm = rowForNewElm != null // default(dynamic) == null  	? new {  		isNotExistInRDB = false'  		row = rowForNewElm  	} : new {  		isNotExistInRDB = true'  		row = new {  			locid = crntLocId'  			delivid = ""'  			mstype = ""'  			rev = 0'  			id = ""'  			properties = "<properties/>"  		} as dynamic  	};  	_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  	mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  	tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  	tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  	? 1 : 0));  	_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  	#endregion  	var newElmProps = XElement.Parse (newElm.row.properties);  	_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  	tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  	tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  	tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  	tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  	crntMSId.Attributes ().Remove ();  	crntMSId.Add (tmpAttrs);  	crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: foreach (var crntMSId in elmMSIds) {  	var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  	var tmpAttrs = crntMSId.Attributes ().ToList ();  	var mstMSId = null as dynamic;  	var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  	var newElm = rowForNewElm != null // default(dynamic) == null  	? new {  		isNotExistInRDB = false'  		row = rowForNewElm  	} : new {  		isNotExistInRDB = true'  		row = new {  			locid = crntLocId'  			delivid = ""'  			mstype = ""'  			rev = 0'  			id = ""'  			properties = "<properties/>"  		} as dynamic  	};  	_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  	mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  	tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  	tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  	? 1 : 0));  	_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  	#endregion  	var newElmProps = XElement.Parse (newElm.row.properties);  	_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  	tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  	tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  	tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  	tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  	crntMSId.Attributes ().Remove ();  	crntMSId.Add (tmpAttrs);  	crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: foreach (var crntMSId in elmMSIds) {  	var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  	var tmpAttrs = crntMSId.Attributes ().ToList ();  	var mstMSId = null as dynamic;  	var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  	var newElm = rowForNewElm != null // default(dynamic) == null  	? new {  		isNotExistInRDB = false'  		row = rowForNewElm  	} : new {  		isNotExistInRDB = true'  		row = new {  			locid = crntLocId'  			delivid = ""'  			mstype = ""'  			rev = 0'  			id = ""'  			properties = "<properties/>"  		} as dynamic  	};  	_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  	mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  	tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  	tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  	? 1 : 0));  	_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  	#endregion  	var newElmProps = XElement.Parse (newElm.row.properties);  	_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  	tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  	tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  	tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  	tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  	crntMSId.Attributes ().Remove ();  	crntMSId.Add (tmpAttrs);  	crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: foreach (var crntMSId in elmMSIds) {  	var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  	var tmpAttrs = crntMSId.Attributes ().ToList ();  	var mstMSId = null as dynamic;  	var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  	var newElm = rowForNewElm != null // default(dynamic) == null  	? new {  		isNotExistInRDB = false'  		row = rowForNewElm  	} : new {  		isNotExistInRDB = true'  		row = new {  			locid = crntLocId'  			delivid = ""'  			mstype = ""'  			rev = 0'  			id = ""'  			properties = "<properties/>"  		} as dynamic  	};  	_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  	mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  	tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  	tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  	? 1 : 0));  	_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  	#endregion  	var newElmProps = XElement.Parse (newElm.row.properties);  	_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  	tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  	tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  	tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  	tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  	crntMSId.Attributes ().Remove ();  	crntMSId.Add (tmpAttrs);  	crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: foreach (var crntMSId in elmMSIds) {  	var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  	var tmpAttrs = crntMSId.Attributes ().ToList ();  	var mstMSId = null as dynamic;  	var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  	var newElm = rowForNewElm != null // default(dynamic) == null  	? new {  		isNotExistInRDB = false'  		row = rowForNewElm  	} : new {  		isNotExistInRDB = true'  		row = new {  			locid = crntLocId'  			delivid = ""'  			mstype = ""'  			rev = 0'  			id = ""'  			properties = "<properties/>"  		} as dynamic  	};  	_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  	mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  	tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  	tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  	? 1 : 0));  	_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  	#endregion  	var newElmProps = XElement.Parse (newElm.row.properties);  	_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  	tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  	tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  	tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  	tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  	crntMSId.Attributes ().Remove ();  	crntMSId.Add (tmpAttrs);  	crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: foreach (var crntMSId in elmMSIds) {  	var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  	var tmpAttrs = crntMSId.Attributes ().ToList ();  	var mstMSId = null as dynamic;  	var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  	var newElm = rowForNewElm != null // default(dynamic) == null  	? new {  		isNotExistInRDB = false'  		row = rowForNewElm  	} : new {  		isNotExistInRDB = true'  		row = new {  			locid = crntLocId'  			delivid = ""'  			mstype = ""'  			rev = 0'  			id = ""'  			properties = "<properties/>"  		} as dynamic  	};  	_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  	mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  	tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  	tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  	? 1 : 0));  	_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  	#endregion  	var newElmProps = XElement.Parse (newElm.row.properties);  	_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  	tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  	tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  	tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  	tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  	crntMSId.Attributes ().Remove ();  	crntMSId.Add (tmpAttrs);  	crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: foreach (var crntMSId in elmMSIds) {  	var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  	var tmpAttrs = crntMSId.Attributes ().ToList ();  	var mstMSId = null as dynamic;  	var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  	var newElm = rowForNewElm != null // default(dynamic) == null  	? new {  		isNotExistInRDB = false'  		row = rowForNewElm  	} : new {  		isNotExistInRDB = true'  		row = new {  			locid = crntLocId'  			delivid = ""'  			mstype = ""'  			rev = 0'  			id = ""'  			properties = "<properties/>"  		} as dynamic  	};  	_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  	mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  	tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  	tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  	? 1 : 0));  	_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  	#endregion  	var newElmProps = XElement.Parse (newElm.row.properties);  	_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  	tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  	tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  	tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  	tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  	crntMSId.Attributes ().Remove ();  	crntMSId.Add (tmpAttrs);  	crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: foreach (var crntMSId in elmMSIds) {  	var crntLocId = crntMSId.Attribute (Cs.LOC_ID).Value;  	var tmpAttrs = crntMSId.Attributes ().ToList ();  	var mstMSId = null as dynamic;  	var rowForNewElm = _rowsMSId.GetFirstDefWithRemoving (x2 => x2.locid as string == crntLocId);  	var newElm = rowForNewElm != null // default(dynamic) == null  	? new {  		isNotExistInRDB = false'  		row = rowForNewElm  	} : new {  		isNotExistInRDB = true'  		row = new {  			locid = crntLocId'  			delivid = ""'  			mstype = ""'  			rev = 0'  			id = ""'  			properties = "<properties/>"  		} as dynamic  	};  	_log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  	mstMSId = mstMSIdLi.GetFirstDefWithRemoving (x3 => x3.locid == crntLocId);  	tmpAttrs.Insert (0' new XAttribute (Cs.DELIV_ID' newElm.row.delivid));  	tmpAttrs.Insert (1' new XAttribute (Cs.MARKER' newElm.isNotExistInRDB ? -1 : linkTargetInfoLi.GetFirstDefWithRemoving (x3 => x3 == newElm.row.locid) != null // == default(string)  	? 1 : 0));  	_log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  	#region Function EncodeModFlag() : DelivMSId <-> MstMSId .. TRexManuscriptId.EncodeModFlag(Source: TRexMsNode)  	Func<dynamic' dynamic' XElement' XElement' int> funcEncodeModFlag = (dlv' mst' dlvPrm' mstPrm) => new {  		val = Convert.ToInt32 (dlv.rev != mst.rev || dlv.id != mst.id) | 2 * Convert.ToInt32 (dlv.mstype != mst.mstype) | 4 * Convert.ToInt32 (!XElement.DeepEquals (dlvPrm' mstPrm))'  		dlvShowHidePrm = dlvPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))'  		mstShowHidePrm = mstPrm.Elements ().FirstOrDefault (_x1 => _x1.IsMatchAttrVal (Cs.NAME' Cs.PP_MSHIDE))  	}.SelectNewSingle (_x => new {  		val = _x.val'  		dlvPrm = _x.dlvShowHidePrm == null ? "" : _x.dlvShowHidePrm.Attribute (Cs.VALUE).Value'  		mstPrm = _x.mstShowHidePrm == null ? "" : _x.mstShowHidePrm.Attribute (Cs.VALUE).Value  	}).SelectNewSingle (_x => _x.val | 8 * Convert.ToInt32 (_x.dlvPrm != _x.mstPrm));  	#endregion  	var newElmProps = XElement.Parse (newElm.row.properties);  	_log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  	tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  	tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  	tmpAttrs.Add (new XAttribute (Cs.ID' newElm.row.id));  	tmpAttrs.Add (new XAttribute (Cs.MS_TYPE' newElm.row.mstype));  	crntMSId.Attributes ().Remove ();  	crntMSId.Add (tmpAttrs);  	crntMSId.Element (Cs.MANUSCRIPT_IDS).AddBeforeSelf (newElmProps);  }  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: _log.AddLap ("ImplementAllMSId : Get target MSId row' linkTargetInfoLi.Count : " + linkTargetInfoLi.Count' 2);  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: _log.AddLap ("ImplementAllMSId : Before set EncodeMod func"' 2);  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: _log.AddLap ("ImplementAllMSId : Before MSId row to target elm."' 2);  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: tmpAttrs.Insert (2' new XAttribute (Cs.MODFLAG' mstMSId == null ? 0 : funcEncodeModFlag (newElm' mstMSId' newElmProps' XElement.Parse (mstMSId.properties))));  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: tmpAttrs.Insert (3' new XAttribute (Cs.REV' newElm.row.rev));  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: _log.AddLap ("ImplementAllMSId : Fin."' 2);  
Magic Number,AddAnnotationToFoFile,RDBRowToXML,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\RDBtoXML.cs,SetMSIdLessLinq,The following statement contains a magic number: result.Select (y => Task.Factory.StartNew (() => implementAllMSId (y.elmsMSId' y.rowsMSId' y.rowsMstMSId' y.linkTargetInfoLi' new Log ()))).ToArray ().WaitAllAndReturnValues ().Select (x1 => x1.logMessages.Skip (1).JoinStringWith ("\r\n")).ToList ().ForEach (x1 => log.AddMsgOnly ("-- Every thread log\r\n" + x1' 2));  
Magic Number,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveCrntBooksInfo,The following statement contains a magic number: try {  	new {  		log'  		args = new {  			delphiParams'  			mstLog'  			debugOption  		}  	}.SelectNewSingle (x => new {  		log'  		x.args'  		outfile = x.args.delphiParams [Cs.AGENTOUTPUT]'  		err = ""  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		categories = Mysql.SetReader ("SELECT id' `category-name` FROM categories;"' ""' debugOption' log).Select (x1 => new {  			id = x1 [0] as string'  			name = x1 [1]  		})  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		books = Mysql.SetReader (x.categories.Select (x1 => string.Format ("SELECT '{0}'' '{1}'' id' `model-name`' `used-languages` FROM tran_{0}_models WHERE deleted <> 1"' x1.id' x1.name)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new {  			categoryId = x1 [0] as string'  			categoryName = x1 [1] as string'  			bookId = x1 [2] as string'  			bookName = x1 [3] as string'  			usedLangXml = x1 [4] as string  		})  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		books = x.books.Select (x1 => new {  			x1.categoryId'  			x1.bookId'  			x1.categoryName'  			x1.bookName'  			usedLangs = XElement.Parse (x1.usedLangXml).Descendants (Cs.USED_LANGUAGE).ToList ()  		}).Select (x1 => new {  			x1.categoryId'  			x1.bookId'  			x1.categoryName'  			x1.bookName'  			usedLangs = x1.usedLangs.Select (x2 => x2.Attribute (Cs.LANG_CODE).Value).ToList ()'  			baseLangCode = x1.usedLangs.Count > 0 ? x1.usedLangs.FirstOrDefault (x2 => x2.IsMatchAttrValIgnoreCase (Cs.BASE' "true")).Attribute (Cs.LANG_CODE).Value : "-1"  		}).ToList ()  	}).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("bookid"' x1.bookId)' new XAttribute ("usedlangs"' x1.usedLangs.JoinStringWith (":"))' new XAttribute ("baselang"' x1.baseLangCode)' new XAttribute ("categoryname"' x1.categoryName)' new XAttribute ("bookname"' x1.bookName))))).Save (x.outfile));  }  finally {  }  
Magic Number,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveCrntBooksInfo,The following statement contains a magic number: try {  	new {  		log'  		args = new {  			delphiParams'  			mstLog'  			debugOption  		}  	}.SelectNewSingle (x => new {  		log'  		x.args'  		outfile = x.args.delphiParams [Cs.AGENTOUTPUT]'  		err = ""  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		categories = Mysql.SetReader ("SELECT id' `category-name` FROM categories;"' ""' debugOption' log).Select (x1 => new {  			id = x1 [0] as string'  			name = x1 [1]  		})  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		books = Mysql.SetReader (x.categories.Select (x1 => string.Format ("SELECT '{0}'' '{1}'' id' `model-name`' `used-languages` FROM tran_{0}_models WHERE deleted <> 1"' x1.id' x1.name)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new {  			categoryId = x1 [0] as string'  			categoryName = x1 [1] as string'  			bookId = x1 [2] as string'  			bookName = x1 [3] as string'  			usedLangXml = x1 [4] as string  		})  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		books = x.books.Select (x1 => new {  			x1.categoryId'  			x1.bookId'  			x1.categoryName'  			x1.bookName'  			usedLangs = XElement.Parse (x1.usedLangXml).Descendants (Cs.USED_LANGUAGE).ToList ()  		}).Select (x1 => new {  			x1.categoryId'  			x1.bookId'  			x1.categoryName'  			x1.bookName'  			usedLangs = x1.usedLangs.Select (x2 => x2.Attribute (Cs.LANG_CODE).Value).ToList ()'  			baseLangCode = x1.usedLangs.Count > 0 ? x1.usedLangs.FirstOrDefault (x2 => x2.IsMatchAttrValIgnoreCase (Cs.BASE' "true")).Attribute (Cs.LANG_CODE).Value : "-1"  		}).ToList ()  	}).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("bookid"' x1.bookId)' new XAttribute ("usedlangs"' x1.usedLangs.JoinStringWith (":"))' new XAttribute ("baselang"' x1.baseLangCode)' new XAttribute ("categoryname"' x1.categoryName)' new XAttribute ("bookname"' x1.bookName))))).Save (x.outfile));  }  finally {  }  
Magic Number,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveCrntBooksInfo,The following statement contains a magic number: try {  	new {  		log'  		args = new {  			delphiParams'  			mstLog'  			debugOption  		}  	}.SelectNewSingle (x => new {  		log'  		x.args'  		outfile = x.args.delphiParams [Cs.AGENTOUTPUT]'  		err = ""  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		categories = Mysql.SetReader ("SELECT id' `category-name` FROM categories;"' ""' debugOption' log).Select (x1 => new {  			id = x1 [0] as string'  			name = x1 [1]  		})  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		books = Mysql.SetReader (x.categories.Select (x1 => string.Format ("SELECT '{0}'' '{1}'' id' `model-name`' `used-languages` FROM tran_{0}_models WHERE deleted <> 1"' x1.id' x1.name)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new {  			categoryId = x1 [0] as string'  			categoryName = x1 [1] as string'  			bookId = x1 [2] as string'  			bookName = x1 [3] as string'  			usedLangXml = x1 [4] as string  		})  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		books = x.books.Select (x1 => new {  			x1.categoryId'  			x1.bookId'  			x1.categoryName'  			x1.bookName'  			usedLangs = XElement.Parse (x1.usedLangXml).Descendants (Cs.USED_LANGUAGE).ToList ()  		}).Select (x1 => new {  			x1.categoryId'  			x1.bookId'  			x1.categoryName'  			x1.bookName'  			usedLangs = x1.usedLangs.Select (x2 => x2.Attribute (Cs.LANG_CODE).Value).ToList ()'  			baseLangCode = x1.usedLangs.Count > 0 ? x1.usedLangs.FirstOrDefault (x2 => x2.IsMatchAttrValIgnoreCase (Cs.BASE' "true")).Attribute (Cs.LANG_CODE).Value : "-1"  		}).ToList ()  	}).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("bookid"' x1.bookId)' new XAttribute ("usedlangs"' x1.usedLangs.JoinStringWith (":"))' new XAttribute ("baselang"' x1.baseLangCode)' new XAttribute ("categoryname"' x1.categoryName)' new XAttribute ("bookname"' x1.bookName))))).Save (x.outfile));  }  finally {  }  
Magic Number,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveCrntBooksInfo,The following statement contains a magic number: new {  	log'  	args = new {  		delphiParams'  		mstLog'  		debugOption  	}  }.SelectNewSingle (x => new {  	log'  	x.args'  	outfile = x.args.delphiParams [Cs.AGENTOUTPUT]'  	err = ""  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	categories = Mysql.SetReader ("SELECT id' `category-name` FROM categories;"' ""' debugOption' log).Select (x1 => new {  		id = x1 [0] as string'  		name = x1 [1]  	})  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	books = Mysql.SetReader (x.categories.Select (x1 => string.Format ("SELECT '{0}'' '{1}'' id' `model-name`' `used-languages` FROM tran_{0}_models WHERE deleted <> 1"' x1.id' x1.name)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new {  		categoryId = x1 [0] as string'  		categoryName = x1 [1] as string'  		bookId = x1 [2] as string'  		bookName = x1 [3] as string'  		usedLangXml = x1 [4] as string  	})  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	books = x.books.Select (x1 => new {  		x1.categoryId'  		x1.bookId'  		x1.categoryName'  		x1.bookName'  		usedLangs = XElement.Parse (x1.usedLangXml).Descendants (Cs.USED_LANGUAGE).ToList ()  	}).Select (x1 => new {  		x1.categoryId'  		x1.bookId'  		x1.categoryName'  		x1.bookName'  		usedLangs = x1.usedLangs.Select (x2 => x2.Attribute (Cs.LANG_CODE).Value).ToList ()'  		baseLangCode = x1.usedLangs.Count > 0 ? x1.usedLangs.FirstOrDefault (x2 => x2.IsMatchAttrValIgnoreCase (Cs.BASE' "true")).Attribute (Cs.LANG_CODE).Value : "-1"  	}).ToList ()  }).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("bookid"' x1.bookId)' new XAttribute ("usedlangs"' x1.usedLangs.JoinStringWith (":"))' new XAttribute ("baselang"' x1.baseLangCode)' new XAttribute ("categoryname"' x1.categoryName)' new XAttribute ("bookname"' x1.bookName))))).Save (x.outfile));  
Magic Number,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveCrntBooksInfo,The following statement contains a magic number: new {  	log'  	args = new {  		delphiParams'  		mstLog'  		debugOption  	}  }.SelectNewSingle (x => new {  	log'  	x.args'  	outfile = x.args.delphiParams [Cs.AGENTOUTPUT]'  	err = ""  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	categories = Mysql.SetReader ("SELECT id' `category-name` FROM categories;"' ""' debugOption' log).Select (x1 => new {  		id = x1 [0] as string'  		name = x1 [1]  	})  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	books = Mysql.SetReader (x.categories.Select (x1 => string.Format ("SELECT '{0}'' '{1}'' id' `model-name`' `used-languages` FROM tran_{0}_models WHERE deleted <> 1"' x1.id' x1.name)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new {  		categoryId = x1 [0] as string'  		categoryName = x1 [1] as string'  		bookId = x1 [2] as string'  		bookName = x1 [3] as string'  		usedLangXml = x1 [4] as string  	})  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	books = x.books.Select (x1 => new {  		x1.categoryId'  		x1.bookId'  		x1.categoryName'  		x1.bookName'  		usedLangs = XElement.Parse (x1.usedLangXml).Descendants (Cs.USED_LANGUAGE).ToList ()  	}).Select (x1 => new {  		x1.categoryId'  		x1.bookId'  		x1.categoryName'  		x1.bookName'  		usedLangs = x1.usedLangs.Select (x2 => x2.Attribute (Cs.LANG_CODE).Value).ToList ()'  		baseLangCode = x1.usedLangs.Count > 0 ? x1.usedLangs.FirstOrDefault (x2 => x2.IsMatchAttrValIgnoreCase (Cs.BASE' "true")).Attribute (Cs.LANG_CODE).Value : "-1"  	}).ToList ()  }).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("bookid"' x1.bookId)' new XAttribute ("usedlangs"' x1.usedLangs.JoinStringWith (":"))' new XAttribute ("baselang"' x1.baseLangCode)' new XAttribute ("categoryname"' x1.categoryName)' new XAttribute ("bookname"' x1.bookName))))).Save (x.outfile));  
Magic Number,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveCrntBooksInfo,The following statement contains a magic number: new {  	log'  	args = new {  		delphiParams'  		mstLog'  		debugOption  	}  }.SelectNewSingle (x => new {  	log'  	x.args'  	outfile = x.args.delphiParams [Cs.AGENTOUTPUT]'  	err = ""  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	categories = Mysql.SetReader ("SELECT id' `category-name` FROM categories;"' ""' debugOption' log).Select (x1 => new {  		id = x1 [0] as string'  		name = x1 [1]  	})  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	books = Mysql.SetReader (x.categories.Select (x1 => string.Format ("SELECT '{0}'' '{1}'' id' `model-name`' `used-languages` FROM tran_{0}_models WHERE deleted <> 1"' x1.id' x1.name)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new {  		categoryId = x1 [0] as string'  		categoryName = x1 [1] as string'  		bookId = x1 [2] as string'  		bookName = x1 [3] as string'  		usedLangXml = x1 [4] as string  	})  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	books = x.books.Select (x1 => new {  		x1.categoryId'  		x1.bookId'  		x1.categoryName'  		x1.bookName'  		usedLangs = XElement.Parse (x1.usedLangXml).Descendants (Cs.USED_LANGUAGE).ToList ()  	}).Select (x1 => new {  		x1.categoryId'  		x1.bookId'  		x1.categoryName'  		x1.bookName'  		usedLangs = x1.usedLangs.Select (x2 => x2.Attribute (Cs.LANG_CODE).Value).ToList ()'  		baseLangCode = x1.usedLangs.Count > 0 ? x1.usedLangs.FirstOrDefault (x2 => x2.IsMatchAttrValIgnoreCase (Cs.BASE' "true")).Attribute (Cs.LANG_CODE).Value : "-1"  	}).ToList ()  }).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("bookid"' x1.bookId)' new XAttribute ("usedlangs"' x1.usedLangs.JoinStringWith (":"))' new XAttribute ("baselang"' x1.baseLangCode)' new XAttribute ("categoryname"' x1.categoryName)' new XAttribute ("bookname"' x1.bookName))))).Save (x.outfile));  
Magic Number,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveAllArchives,The following statement contains a magic number: try {  	new {  		log'  		args = new {  			delphiParams'  			mstLog'  			debugOption  		}  	}.SelectNewSingle (x => new {  		log'  		x.args'  		outfile = x.args.delphiParams [Cs.AGENTOUTPUT]'  		err = ""  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		tables = Mysql.SetReader ("SHOW TABLES LIKE '%arcindexes';"' ""' debugOption' log).Select (x1 => x1 [0] as string).Select (x1 => new {  			categoryid = x1.Substring (5' 14)'  			tablename = x1  		}).ToList ()  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		books = Mysql.SetReader (x.tables.Select (x1 => string.Format ("SELECT '{0}'' number' `lang-code`' `book-id` FROM {1}"' x1.categoryid' x1.tablename)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new {  			categoryId = x1 [0] as string'  			number = x1 [1].ToString ()'  			langcode = x1 [2].ToString ()'  			bookid = x1 [3] as string  		}).ToList ()  	}).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("number"' x1.number)' new XAttribute ("langcode"' x1.langcode)' new XAttribute ("bookid"' x1.bookid))))).Save (x.outfile));  }  finally {  }  
Magic Number,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveAllArchives,The following statement contains a magic number: try {  	new {  		log'  		args = new {  			delphiParams'  			mstLog'  			debugOption  		}  	}.SelectNewSingle (x => new {  		log'  		x.args'  		outfile = x.args.delphiParams [Cs.AGENTOUTPUT]'  		err = ""  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		tables = Mysql.SetReader ("SHOW TABLES LIKE '%arcindexes';"' ""' debugOption' log).Select (x1 => x1 [0] as string).Select (x1 => new {  			categoryid = x1.Substring (5' 14)'  			tablename = x1  		}).ToList ()  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		books = Mysql.SetReader (x.tables.Select (x1 => string.Format ("SELECT '{0}'' number' `lang-code`' `book-id` FROM {1}"' x1.categoryid' x1.tablename)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new {  			categoryId = x1 [0] as string'  			number = x1 [1].ToString ()'  			langcode = x1 [2].ToString ()'  			bookid = x1 [3] as string  		}).ToList ()  	}).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("number"' x1.number)' new XAttribute ("langcode"' x1.langcode)' new XAttribute ("bookid"' x1.bookid))))).Save (x.outfile));  }  finally {  }  
Magic Number,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveAllArchives,The following statement contains a magic number: try {  	new {  		log'  		args = new {  			delphiParams'  			mstLog'  			debugOption  		}  	}.SelectNewSingle (x => new {  		log'  		x.args'  		outfile = x.args.delphiParams [Cs.AGENTOUTPUT]'  		err = ""  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		tables = Mysql.SetReader ("SHOW TABLES LIKE '%arcindexes';"' ""' debugOption' log).Select (x1 => x1 [0] as string).Select (x1 => new {  			categoryid = x1.Substring (5' 14)'  			tablename = x1  		}).ToList ()  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		books = Mysql.SetReader (x.tables.Select (x1 => string.Format ("SELECT '{0}'' number' `lang-code`' `book-id` FROM {1}"' x1.categoryid' x1.tablename)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new {  			categoryId = x1 [0] as string'  			number = x1 [1].ToString ()'  			langcode = x1 [2].ToString ()'  			bookid = x1 [3] as string  		}).ToList ()  	}).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("number"' x1.number)' new XAttribute ("langcode"' x1.langcode)' new XAttribute ("bookid"' x1.bookid))))).Save (x.outfile));  }  finally {  }  
Magic Number,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveAllArchives,The following statement contains a magic number: try {  	new {  		log'  		args = new {  			delphiParams'  			mstLog'  			debugOption  		}  	}.SelectNewSingle (x => new {  		log'  		x.args'  		outfile = x.args.delphiParams [Cs.AGENTOUTPUT]'  		err = ""  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		tables = Mysql.SetReader ("SHOW TABLES LIKE '%arcindexes';"' ""' debugOption' log).Select (x1 => x1 [0] as string).Select (x1 => new {  			categoryid = x1.Substring (5' 14)'  			tablename = x1  		}).ToList ()  	}).SelectNewSingle (x => new {  		log'  		x.args'  		x.outfile'  		books = Mysql.SetReader (x.tables.Select (x1 => string.Format ("SELECT '{0}'' number' `lang-code`' `book-id` FROM {1}"' x1.categoryid' x1.tablename)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new {  			categoryId = x1 [0] as string'  			number = x1 [1].ToString ()'  			langcode = x1 [2].ToString ()'  			bookid = x1 [3] as string  		}).ToList ()  	}).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("number"' x1.number)' new XAttribute ("langcode"' x1.langcode)' new XAttribute ("bookid"' x1.bookid))))).Save (x.outfile));  }  finally {  }  
Magic Number,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveAllArchives,The following statement contains a magic number: new {  	log'  	args = new {  		delphiParams'  		mstLog'  		debugOption  	}  }.SelectNewSingle (x => new {  	log'  	x.args'  	outfile = x.args.delphiParams [Cs.AGENTOUTPUT]'  	err = ""  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	tables = Mysql.SetReader ("SHOW TABLES LIKE '%arcindexes';"' ""' debugOption' log).Select (x1 => x1 [0] as string).Select (x1 => new {  		categoryid = x1.Substring (5' 14)'  		tablename = x1  	}).ToList ()  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	books = Mysql.SetReader (x.tables.Select (x1 => string.Format ("SELECT '{0}'' number' `lang-code`' `book-id` FROM {1}"' x1.categoryid' x1.tablename)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new {  		categoryId = x1 [0] as string'  		number = x1 [1].ToString ()'  		langcode = x1 [2].ToString ()'  		bookid = x1 [3] as string  	}).ToList ()  }).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("number"' x1.number)' new XAttribute ("langcode"' x1.langcode)' new XAttribute ("bookid"' x1.bookid))))).Save (x.outfile));  
Magic Number,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveAllArchives,The following statement contains a magic number: new {  	log'  	args = new {  		delphiParams'  		mstLog'  		debugOption  	}  }.SelectNewSingle (x => new {  	log'  	x.args'  	outfile = x.args.delphiParams [Cs.AGENTOUTPUT]'  	err = ""  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	tables = Mysql.SetReader ("SHOW TABLES LIKE '%arcindexes';"' ""' debugOption' log).Select (x1 => x1 [0] as string).Select (x1 => new {  		categoryid = x1.Substring (5' 14)'  		tablename = x1  	}).ToList ()  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	books = Mysql.SetReader (x.tables.Select (x1 => string.Format ("SELECT '{0}'' number' `lang-code`' `book-id` FROM {1}"' x1.categoryid' x1.tablename)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new {  		categoryId = x1 [0] as string'  		number = x1 [1].ToString ()'  		langcode = x1 [2].ToString ()'  		bookid = x1 [3] as string  	}).ToList ()  }).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("number"' x1.number)' new XAttribute ("langcode"' x1.langcode)' new XAttribute ("bookid"' x1.bookid))))).Save (x.outfile));  
Magic Number,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveAllArchives,The following statement contains a magic number: new {  	log'  	args = new {  		delphiParams'  		mstLog'  		debugOption  	}  }.SelectNewSingle (x => new {  	log'  	x.args'  	outfile = x.args.delphiParams [Cs.AGENTOUTPUT]'  	err = ""  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	tables = Mysql.SetReader ("SHOW TABLES LIKE '%arcindexes';"' ""' debugOption' log).Select (x1 => x1 [0] as string).Select (x1 => new {  		categoryid = x1.Substring (5' 14)'  		tablename = x1  	}).ToList ()  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	books = Mysql.SetReader (x.tables.Select (x1 => string.Format ("SELECT '{0}'' number' `lang-code`' `book-id` FROM {1}"' x1.categoryid' x1.tablename)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new {  		categoryId = x1 [0] as string'  		number = x1 [1].ToString ()'  		langcode = x1 [2].ToString ()'  		bookid = x1 [3] as string  	}).ToList ()  }).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("number"' x1.number)' new XAttribute ("langcode"' x1.langcode)' new XAttribute ("bookid"' x1.bookid))))).Save (x.outfile));  
Magic Number,AddAnnotationToFoFile,test,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\test.cs,SaveAllArchives,The following statement contains a magic number: new {  	log'  	args = new {  		delphiParams'  		mstLog'  		debugOption  	}  }.SelectNewSingle (x => new {  	log'  	x.args'  	outfile = x.args.delphiParams [Cs.AGENTOUTPUT]'  	err = ""  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	tables = Mysql.SetReader ("SHOW TABLES LIKE '%arcindexes';"' ""' debugOption' log).Select (x1 => x1 [0] as string).Select (x1 => new {  		categoryid = x1.Substring (5' 14)'  		tablename = x1  	}).ToList ()  }).SelectNewSingle (x => new {  	log'  	x.args'  	x.outfile'  	books = Mysql.SetReader (x.tables.Select (x1 => string.Format ("SELECT '{0}'' number' `lang-code`' `book-id` FROM {1}"' x1.categoryid' x1.tablename)).JoinStringWith (" UNION ")' ""' debugOption' log).Select (x1 => new {  		categoryId = x1 [0] as string'  		number = x1 [1].ToString ()'  		langcode = x1 [2].ToString ()'  		bookid = x1 [3] as string  	}).ToList ()  }).DoActionSingle (x => new XDocument (new XElement ("books"' x.books.Select (x1 => new XElement ("book"' new XAttribute ("categoryid"' x1.categoryId)' new XAttribute ("number"' x1.number)' new XAttribute ("langcode"' x1.langcode)' new XAttribute ("bookid"' x1.bookid))))).Save (x.outfile));  
Magic Number,AddAnnotationToFoFile.Classes,BookDataEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Classes\BookData.cs,GetDescendantsTextByGroupIdOrLocId,The following statement contains a magic number: switch (id.Substring (4' 2)) {  case "ML":  	return GetMSTextById (this.MSIdDic [id].Attribute (Cs.ID).Value) ?? "";  case "MG":  	return this.MSIdsAll.First (x => x.IsMatchAttrVal (Cs.GROUP_ID' id)).Descendants (Cs.MANUSCRIPT_ID).Where (x => !x.IsMatchAttrVal (Cs.ID' "")).Select (x => x.Attribute (Cs.ID).Value).Select (x => GetMSTextById (x)).JoinStringWith ("\r");  default:  	throw new Exception (id + " is invalid id value. at GetDescendantsTextByGroupIdOrLocId()");  }  
Magic Number,AddAnnotationToFoFile.Classes,BookDataEx,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Classes\BookData.cs,GetDescendantsTextByGroupIdOrLocId,The following statement contains a magic number: switch (id.Substring (4' 2)) {  case "ML":  	return GetMSTextById (this.MSIdDic [id].Attribute (Cs.ID).Value) ?? "";  case "MG":  	return this.MSIdsAll.First (x => x.IsMatchAttrVal (Cs.GROUP_ID' id)).Descendants (Cs.MANUSCRIPT_ID).Where (x => !x.IsMatchAttrVal (Cs.ID' "")).Select (x => x.Attribute (Cs.ID).Value).Select (x => GetMSTextById (x)).JoinStringWith ("\r");  default:  	throw new Exception (id + " is invalid id value. at GetDescendantsTextByGroupIdOrLocId()");  }  
Magic Number,AddAnnotationToFoFile.Classes,FoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\Classes\FoFile.cs,FoFile,The following statement contains a magic number: this.BlkCsAsTocTitleInStory = StoryBlocks.Descendants ().Where (x1 => new[] {  	Fo.BLOCK'  	Fo.BLOCKCONTAINER  }.Contains (x1.Name.ToString ())).Where (x1 => x1.Attribute (Cs.ID) != null).Where (x1 => x1.Attribute (Cs.ID).Value.Take (2).JoinCharsToString () == "bk").ToList ();  
Missing Default,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\..\..\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,KeepEntityXmlTextWriter,The following switch statement is missing a default case: switch (this.bufferType) {  case BufferType.Unknown:  	break;  case BufferType.Chars:  	this.get_bufChars = w => (char[])bufCharsBytesField.GetValue (w);  	this.get_bufPos = w => (int)bufPosField.GetValue (w);  	this.set_bufPos = (w' i) => bufPosField.SetValue (w' i);  	this.get_bufLen = w => (int)bufLenField.GetValue (w);  	this.FlushBuffer = w => flushBufferMethod.Invoke (w' new object[0]);  	break;  case BufferType.Bytes:  	this.get_bufBytes = w => (byte[])bufCharsBytesField.GetValue (w);  	this.get_bufPos = w => (int)bufPosField.GetValue (w);  	this.set_bufPos = (w' i) => bufPosField.SetValue (w' i);  	this.get_bufLen = w => (int)bufLenField.GetValue (w);  	this.FlushBuffer = w => flushBufferMethod.Invoke (w' new object[0]);  	break;  }  
Missing Default,AddAnnotationToFoFile,AddElementsToFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\AddElementsToFoFile.cs,AddHiddenOrRemovedElements,The following switch statement is missing a default case: switch (x1.targetMSIdInfo.Direction) {  case AddDirection.Before:  	x2.AddBeforeSelf (x1.annotElm);  	break;  case AddDirection.After:  	x2.AddAfterSelf (x1.annotElm);  	break;  case AddDirection.Inner:  	(x2.Element (Fo.BLOCK) ?? x2).AddFirst (x1.annotElm);  	break;  }  
Missing Default,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AnnotAttrs,The following switch statement is missing a default case: switch (i) {  case 0:  	yield return new XAttribute (Fo.ANN_TYPE' "Text");  	break;  case 1:  	yield return new XAttribute (Fo.ANN_COLOR' color);  	break;  // #808080  case 2:  	yield return new XAttribute (Fo.ANN_CONTENTS' content);  	break;  case 3:  	yield return new XAttribute (Fo.ANN_OPEN' "false");  	break;  case 4:  	yield return new XAttribute (Fo.ANN_ICONNAME' icon.ToString ());  	break;  // Note' Key' Help' NewParagraph' Paragraph' Insert  case 5:  	yield return new XAttribute (Fo.ANN_POSITIONHOR' horizontalOffset.ToString () + "pt");  	break;  case 6:  	yield return new XAttribute (Fo.ANN_POSITIONVER' "-9pt");  	break;  // 削除を示す rightPointer icon の表示位置を意識したもの (他の icon ではさほど問題にならない)  case 7:  	yield return new XAttribute (Fo.ANN_WIDTH' "100pt");  	break;  case 8:  	yield return new XAttribute (Fo.ANN_HEIGHT' "80pt");  	break;  }  
Missing Default,AddAnnotationToFoFile,CreateNewFoFile,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\CreateNewFoFile.cs,AddAnnotAttrsAndDescendantsBGC,The following switch statement is missing a default case: switch (FillColor) {  case PaintDescends.None:  	break;  //case PaintDescends.Blue:  case PaintDescends.Aqua:  case PaintDescends.Lime:  case PaintDescends.Magenta:  case PaintDescends.Orange:  case PaintDescends.Red:  case PaintDescends.Yellow:  	TargetElm.PaintDescendantsBGC (FillColor' IsLocalDebug);  	break;  }  
Missing Default,AddAnnotationToFoFile,FormatDiffXml,C:\repos\Funkest_CS\AddAnnotationToFoFile\AddAnnotationToFoFile\FormatDiffXml.cs,UnionDiffXmls,The following switch statement is missing a default case: switch (x.Key) {  case DiffItem.Toc:  	x1.RelatedStoryId = crntBook.TocAll.FirstOrDefault (x2 => x2.IsMatchAttrVal (Cs.ID' x1.Id.IdString)).ToMaybe ()// toc を子孫として持つ toc は .groups に childrenTocs と story container を並列して持ち、その順序は不定なので groupType == 2 が不可欠  	.MaybeM (x2 => x2.Element (Cs.GROUPS).Elements ().FirstOrDefault (x3 => x3.IsMatchAttrVal (Cs.GROUP_TYPE' "2"))).MaybeM (x2 => x2.Element (Cs.MEMBER_IDS).Element (Cs.STRING).Value).SelectNewSingle (x2 => x2.HasValue ? x2.Value : Cs.MSG_NOTFOUND);  	break;  case DiffItem.Story:  	x1.RelatedStoryId = x1.Id.IdString;  	break;  case DiffItem.MSIds:  	x1.RelatedStoryId = crntBook.MSIdsAll.FirstOrDefault (x2 => x2.IsMatchAttrVal (Cs.GROUP_ID' x1.Id.IdString)).SelectNewSingle (x2 => x2 == null ? Cs.MSG_NOTFOUND : x2.GetAncestorStory ().Attribute (Cs.ID).Value);  	break;  case DiffItem.MSId:  case DiffItem.Illst:  	x1.RelatedStoryId = crntBook.MSIdAll.FirstOrDefault (x3 => x3.IsMatchAttrVal (Cs.LOC_ID' x1.Id.IdString)).SelectNewSingle (x3 => x3 == null ? Cs.MSG_NOTFOUND : x3.GetAncestorStory ().Attribute (Cs.ID).Value);  	break;  }  
