Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PacChkr,UseShellWindows,C:\repos\Funkest_CS\PacChkr\PacChkr\UseShellWindows.cs,Do,Cyclomatic complexity of the method is 10
Complex Method,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,Cyclomatic complexity of the method is 8
Long Parameter List,PacChkr,Program,C:\repos\Funkest_CS\PacChkr\PacChkr\Program.cs,GetArguments,The method has 5 parameters.
Long Parameter List,PacChkr,UploadFiles,C:\repos\Funkest_CS\PacChkr\PacChkr\UpLoadFiles.cs,DoUploadFiles,The method has 9 parameters.
Long Parameter List,PacChkr,UseShellWindows,C:\repos\Funkest_CS\PacChkr\PacChkr\UseShellWindows.cs,Do,The method has 22 parameters.
Long Parameter List,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The method has 17 parameters.
Long Parameter List,PacChkr,Utils,C:\repos\Funkest_CS\PacChkr\PacChkr\Utils.cs,WritePOSTData,The method has 7 parameters.
Long Parameter List,PacChkr,WithHWdl,C:\repos\Funkest_CS\PacChkr\PacChkr\WithHWdl.cs,SendMessageTimeout,The method has 7 parameters.
Long Statement,PacChkr,IPPacket,C:\repos\Funkest_CS\PacChkr\PacChkr\IPMonitor.cs,ToString,The length of the statement  "	sb.AppendFormat ("Type of Service: D({0}) T({1}) R({2})"' ((TOS & TypeOfService.NoDelay) != 0) ? 1 : 0' ((TOS & TypeOfService.Transfer) != 0) ? 1 : 0' ((TOS & TypeOfService.Reliability) != 0) ? 1 : 0); " is 201.
Long Statement,PacChkr,UploadFiles,C:\repos\Funkest_CS\PacChkr\PacChkr\UpLoadFiles.cs,DoUploadFiles,The length of the statement  "				Encoding.UTF8.GetBytes (string.Format ("Content-Disposition: form-data; name=\"{0}\"; filename=\"{1}\"{2}"' x.FieldName' x.Filename' Environment.NewLine))// header (content-type) " is 178.
Long Statement,PacChkr,UseShellWindows,C:\repos\Funkest_CS\PacChkr\PacChkr\UseShellWindows.cs,Do,The length of the statement  "	Enumerable.Range (1' 7).Select (x => string.Format (@"{0}\{1}"' rootDir' DateTime.Now.AddDays (-x).ToString ("MMdd"))).Where (x => File.Exists (x)).ToList ().ForEach (x => File.Delete (x)); " is 189.
Long Statement,PacChkr,UseShellWindows,C:\repos\Funkest_CS\PacChkr\PacChkr\UseShellWindows.cs,Do,The length of the statement  "	Enumerable.Range (1' 7).Select (x => string.Format (@"{0}\{1}.xml"' rootDir' DateTime.Now.AddDays (-x).ToString ("MMdd"))).Where (x => File.Exists (x)).ToList ().ForEach (x => File.Delete (x)); " is 193.
Long Statement,PacChkr,UseShellWindows,C:\repos\Funkest_CS\PacChkr\PacChkr\UseShellWindows.cs,Do,The length of the statement  "	var xml = File.Exists (xmlFile) ? XDocument.Load (xmlFile) : new XDocument (XElement.Parse (string.Format (@"<Logs day='{0}'></Logs>"' DateTime.Now.ToString ("yyyy/MM/dd")))); " is 175.
Long Statement,PacChkr,UseShellWindows,C:\repos\Funkest_CS\PacChkr\PacChkr\UseShellWindows.cs,Do,The length of the statement  "		li/*.Where(x => x.LocationName != "")*/.GroupBy (x => urls.Where (url => x.LocationURL.Contains (url)).Count () > 0).GroupBy (x => true).Select (x => new { " is 155.
Long Statement,PacChkr,UseShellWindows,C:\repos\Funkest_CS\PacChkr\PacChkr\UseShellWindows.cs,Do,The length of the statement  "	}.ForEach (x => UploadFiles.DoUploadFile (x' "/user/kase/tasks/" + (args.Keys.Contains (Args.dirname.ToString ()) ? args [Args.dirname.ToString ()] : WindowsIdentity.GetCurrent ().Name)' "http://192.168.1.225/sdsware/xmldbproc/itrex/upload.php"' "")); " is 251.
Long Statement,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The length of the statement  "		var Browsers = Process.GetProcessesByName ("iexplore").Union (Process.GetProcessesByName ("firefox")).Union (Process.GetProcessesByName ("safari")).Union (Process.GetProcessesByName ("chrome")); " is 194.
Long Statement,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The length of the statement  "	Enumerable.Range (1' 7).Select (x => string.Format (@"{0}\{1}_ip"' rootDir' DateTime.Now.AddDays (-x).ToString ("MMdd"))).Where (x => File.Exists (x)).ToList ().ForEach (x => File.Delete (x)); " is 192.
Long Statement,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The length of the statement  "		sw.WriteLine (ReList.Select (x => string.Format ("{0' -5}: {1' -4}: {2' -16}: {3}"' x.IsTarget' x.Port' x.IPAddress' x.HostName)).Aggregate ((x' y) => x + "\r\n" + y) + (TimesIeKilled > 0 ? "\r\n\r\n" + TimesIeKilled.ToString () + " process(es) killed." : "")); " is 261.
Long Statement,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The length of the statement  "	Enumerable.Range (1' 7).Select (x => string.Format (@"{0}\{1}_ip.xml"' rootDir' DateTime.Now.AddDays (-x).ToString ("MMdd"))).Where (x => File.Exists (x)).ToList ().ForEach (x => File.Delete (x)); " is 196.
Long Statement,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The length of the statement  "	var xml = File.Exists (xmlFile) ? XDocument.Load (xmlFile) : new XDocument (XElement.Parse (string.Format (@"<Logs day='{0}'></Logs>"' DateTime.Now.ToString ("yyyy/MM/dd")))); " is 175.
Long Statement,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The length of the statement  "		}.ForEach (x => UploadFiles.DoUploadFile (x' "/user/kase/tasks/" + (args.Keys.Contains (Args.dirname.ToString ()) ? args [Args.dirname.ToString ()] : WindowsIdentity.GetCurrent ().Name)' "http://192.168.1.225/sdsware/xmldbproc/itrex/upload.php"' "")); " is 251.
Long Statement,PacChkr,Utils,C:\repos\Funkest_CS\PacChkr\PacChkr\Utils.cs,GetListParentName,The length of the statement  "	return typeof(T).GetCustomAttributes (typeof(XmlListParentTypeAttribute)' false).Cast<XmlListParentTypeAttribute> ().First ().ListName; " is 135.
Long Statement,PacChkr,Utils,C:\repos\Funkest_CS\PacChkr\PacChkr\Utils.cs,WritePOSTData,The length of the statement  "	Enumerable.Range (0' _values.Count).Select (i => new KeyValuePair<string' string> (_values.Keys [i]' _values [i])).Select (x => new List<Byte[]> () { " is 149.
Long Statement,PacChkr,Utils,C:\repos\Funkest_CS\PacChkr\PacChkr\Utils.cs,WritePOSTData,The length of the statement  "		Encoding.ASCII.GetBytes (string.Format ("Content-Disposition: form-data; name=\"{0}\"{1}{1}"' x.Key' Environment.NewLine))// value (value of form-data) " is 151.
Empty Catch Block,PacChkr,Program,C:\repos\Funkest_CS\PacChkr\PacChkr\Program.cs,Main,The method has an empty catch block.
Empty Catch Block,PacChkr,Program,C:\repos\Funkest_CS\PacChkr\PacChkr\Program.cs,Main,The method has an empty catch block.
Empty Catch Block,PacChkr,UseShellWindows,C:\repos\Funkest_CS\PacChkr\PacChkr\UseShellWindows.cs,Do,The method has an empty catch block.
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,Recieve,The following statement contains a magic number: switch (buf [0] >> 4) {  case 4:  	return ParseIPv4 (buf);  default:  	throw new NotSupportedException ("対応していないバージョンのIPプロトコルを受信しました。");  }  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,Recieve,The following statement contains a magic number: switch (buf [0] >> 4) {  case 4:  	return ParseIPv4 (buf);  default:  	throw new NotSupportedException ("対応していないバージョンのIPプロトコルを受信しました。");  }  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.Version = buffer [0] >> 4;  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.HeaderLength = (buffer [0] & 15) * 4;  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.HeaderLength = (buffer [0] & 15) * 4;  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.Priority = tos >> 5;  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: if ((tos & 16) != 0)  	result.TOS |= TypeOfService.NoDelay;  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: if ((tos & 8) != 0)  	result.TOS |= TypeOfService.Transfer;  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: if ((tos & 4) != 0)  	result.TOS |= TypeOfService.Reliability;  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.TotalLength = BitConverter.ToUInt16 (buffer' 2);  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.ID = BitConverter.ToUInt16 (buffer' 4);  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.Flags = buffer [6] >> 5;  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.Flags = buffer [6] >> 5;  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.FragmentOffset = (BitConverter.ToUInt16 (buffer' 6) & 8191) * 8;  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.FragmentOffset = (BitConverter.ToUInt16 (buffer' 6) & 8191) * 8;  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.FragmentOffset = (BitConverter.ToUInt16 (buffer' 6) & 8191) * 8;  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.TTL = buffer [8];  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.Protocol = buffer [9];  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.Checksum = BitConverter.ToUInt16 (buffer' 10);  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.SourceAddress = new IPAddress (BitConverter.ToUInt32 (buffer' 12));  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.DestinationAddress = new IPAddress (BitConverter.ToUInt32 (buffer' 16));  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: if (result.HeaderLength > 20) {  	int extraCount = (result.HeaderLength - 20) / 4;  	result.ExtraOptions = new long[extraCount];  	// 情報を取得  	for (int i = 0; i < extraCount; i++) {  		result.ExtraOptions [i] = BitConverter.ToUInt32 (buffer' i * 4 + 20);  	}  }  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: if (result.HeaderLength > 20) {  	int extraCount = (result.HeaderLength - 20) / 4;  	result.ExtraOptions = new long[extraCount];  	// 情報を取得  	for (int i = 0; i < extraCount; i++) {  		result.ExtraOptions [i] = BitConverter.ToUInt32 (buffer' i * 4 + 20);  	}  }  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: if (result.HeaderLength > 20) {  	int extraCount = (result.HeaderLength - 20) / 4;  	result.ExtraOptions = new long[extraCount];  	// 情報を取得  	for (int i = 0; i < extraCount; i++) {  		result.ExtraOptions [i] = BitConverter.ToUInt32 (buffer' i * 4 + 20);  	}  }  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: if (result.HeaderLength > 20) {  	int extraCount = (result.HeaderLength - 20) / 4;  	result.ExtraOptions = new long[extraCount];  	// 情報を取得  	for (int i = 0; i < extraCount; i++) {  		result.ExtraOptions [i] = BitConverter.ToUInt32 (buffer' i * 4 + 20);  	}  }  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: if (result.HeaderLength > 20) {  	int extraCount = (result.HeaderLength - 20) / 4;  	result.ExtraOptions = new long[extraCount];  	// 情報を取得  	for (int i = 0; i < extraCount; i++) {  		result.ExtraOptions [i] = BitConverter.ToUInt32 (buffer' i * 4 + 20);  	}  }  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: for (int i = 0; i < extraCount; i++) {  	result.ExtraOptions [i] = BitConverter.ToUInt32 (buffer' i * 4 + 20);  }  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: for (int i = 0; i < extraCount; i++) {  	result.ExtraOptions [i] = BitConverter.ToUInt32 (buffer' i * 4 + 20);  }  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.ExtraOptions [i] = BitConverter.ToUInt32 (buffer' i * 4 + 20);  
Magic Number,PacChkr,IPMonitor,C:\repos\Funkest_CS\PacChkr\PacChkr\Cap.cs,ParseIPv4,The following statement contains a magic number: result.ExtraOptions [i] = BitConverter.ToUInt32 (buffer' i * 4 + 20);  
Magic Number,PacChkr,Program,C:\repos\Funkest_CS\PacChkr\PacChkr\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (10 * 60 * 1000);  
Magic Number,PacChkr,Program,C:\repos\Funkest_CS\PacChkr\PacChkr\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (10 * 60 * 1000);  
Magic Number,PacChkr,Program,C:\repos\Funkest_CS\PacChkr\PacChkr\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (10 * 60 * 1000);  
Magic Number,PacChkr,Program,C:\repos\Funkest_CS\PacChkr\PacChkr\Program.cs,Main,The following statement contains a magic number: while (true) {  	try {  		UseSocket.ALoop (args);  	}  	catch {  	}  	Thread.Sleep (2000);  }  
Magic Number,PacChkr,Program,C:\repos\Funkest_CS\PacChkr\PacChkr\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (2000);  
Magic Number,PacChkr,Program,C:\repos\Funkest_CS\PacChkr\PacChkr\Program.cs,Main,The following statement contains a magic number: while (true) {  	try {  		UseShellWindows.Do (args);  	}  	catch {  	}  	Thread.Sleep (30000);  }  
Magic Number,PacChkr,Program,C:\repos\Funkest_CS\PacChkr\PacChkr\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (30000);  
Magic Number,PacChkr,UseShellWindows,C:\repos\Funkest_CS\PacChkr\PacChkr\UseShellWindows.cs,Do,The following statement contains a magic number: Enumerable.Range (1' 7).Select (x => string.Format (@"{0}\{1}"' rootDir' DateTime.Now.AddDays (-x).ToString ("MMdd"))).Where (x => File.Exists (x)).ToList ().ForEach (x => File.Delete (x));  
Magic Number,PacChkr,UseShellWindows,C:\repos\Funkest_CS\PacChkr\PacChkr\UseShellWindows.cs,Do,The following statement contains a magic number: Enumerable.Range (1' 7).Select (x => string.Format (@"{0}\{1}.xml"' rootDir' DateTime.Now.AddDays (-x).ToString ("MMdd"))).Where (x => File.Exists (x)).ToList ().ForEach (x => File.Delete (x));  
Magic Number,PacChkr,UseShellWindows,C:\repos\Funkest_CS\PacChkr\PacChkr\UseShellWindows.cs,Do,The following statement contains a magic number: using (var sw = new StreamWriter (plainFile' true)) {  	sw.WriteLine (new string ('='' 100) + "\r\n");  	sw.WriteLine ("--- " + DateTime.Now.ToString () + "");  	var li = new List<InternetExplorer> ();  	foreach (InternetExplorer ie in new ShellWindows ()) {  		li.Add (ie);  	}  	;  	// IEが最小化されていると無効  	if (args.Keys.Contains (Args.onlyie.ToString ()))  		li = li.Where (x => !x.LocationURL.StartsWith ("file")).ToList ();  	li/*.Where(x => x.LocationName != "")*/.GroupBy (x => urls.Where (url => x.LocationURL.Contains (url)).Count () > 0).GroupBy (x => true).Select (x => new {  		target = x.Where (_x => _x.Key).FirstOrDefault ()'  		// Where により IEnumerable が返るが、Group要素はkeyがTrue' False の2つしかないので、.First() する  		rest = x.Where (_x => !_x.Key).FirstOrDefault ()  	}).ToList ().ForEach (x =>  {  		Action<InternetExplorer' XElement> WriteResult = (ie' root) =>  {  			sw.WriteLine (ie.HWND);  			sw.WriteLine (ie.LocationName);  			sw.WriteLine (ie.LocationURL + "\r\n");  			var newElm = new XElement ("Window");  			newElm.Add (new XAttribute ("whdl"' ie.HWND));  			newElm.Add (new XAttribute ("title"' ie.LocationName));  			newElm.Add (new XAttribute ("url"' ie.LocationURL));  			root.Add (newElm);  		};  		if (x.rest != null)  			x.rest.ToList ().ForEach (_x => WriteResult (_x' xmlRests));  		sw.WriteLine ("== Targets ==" + "\r\n");  		if (x.target != null)  			x.target.ToList ().ForEach (_x =>  {  				WriteResult (_x' xmlTargets);  			});  	});  	xml.Save (xmlFile' SaveOptions.None);  }  
Magic Number,PacChkr,UseShellWindows,C:\repos\Funkest_CS\PacChkr\PacChkr\UseShellWindows.cs,Do,The following statement contains a magic number: sw.WriteLine (new string ('='' 100) + "\r\n");  
Magic Number,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The following statement contains a magic number: Enumerable.Range (1' 10).ToList ().ForEach (_ =>  {  	using (var ip443 = new IPMonitor (443' LocalIPAddress ()))  		using (var ip_80 = new IPMonitor (80' LocalIPAddress ())) {  			ReList = ReList.Union (new List<IPMonitor> {  				ip_80'  				ip443  			}.Select (x => new {  				port = x.Port'  				re = x.Recieve ()  			}).Where (x => !x.re.DestinationAddress.ToString ().StartsWith ("192")).Select (x =>  {  				var re = new ReceiveElms () {  					Port = x.port'  					IPAddress = x.re.DestinationAddress'  					IsTarget = x.re.DestinationAddress.JudgeIsTarget ()  				};  				try {  					re.HostName = Dns.GetHostEntry (re.IPAddress.ToString ()).HostName;  				}  				catch {  					re.HostName = "Failed in resolution of DNS name.";  				}  				return re;  			})).ToList ();  		}  });  
Magic Number,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The following statement contains a magic number: Enumerable.Range (1' 10).ToList ().ForEach (_ =>  {  	using (var ip443 = new IPMonitor (443' LocalIPAddress ()))  		using (var ip_80 = new IPMonitor (80' LocalIPAddress ())) {  			ReList = ReList.Union (new List<IPMonitor> {  				ip_80'  				ip443  			}.Select (x => new {  				port = x.Port'  				re = x.Recieve ()  			}).Where (x => !x.re.DestinationAddress.ToString ().StartsWith ("192")).Select (x =>  {  				var re = new ReceiveElms () {  					Port = x.port'  					IPAddress = x.re.DestinationAddress'  					IsTarget = x.re.DestinationAddress.JudgeIsTarget ()  				};  				try {  					re.HostName = Dns.GetHostEntry (re.IPAddress.ToString ()).HostName;  				}  				catch {  					re.HostName = "Failed in resolution of DNS name.";  				}  				return re;  			})).ToList ();  		}  });  
Magic Number,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The following statement contains a magic number: Enumerable.Range (1' 10).ToList ().ForEach (_ =>  {  	using (var ip443 = new IPMonitor (443' LocalIPAddress ()))  		using (var ip_80 = new IPMonitor (80' LocalIPAddress ())) {  			ReList = ReList.Union (new List<IPMonitor> {  				ip_80'  				ip443  			}.Select (x => new {  				port = x.Port'  				re = x.Recieve ()  			}).Where (x => !x.re.DestinationAddress.ToString ().StartsWith ("192")).Select (x =>  {  				var re = new ReceiveElms () {  					Port = x.port'  					IPAddress = x.re.DestinationAddress'  					IsTarget = x.re.DestinationAddress.JudgeIsTarget ()  				};  				try {  					re.HostName = Dns.GetHostEntry (re.IPAddress.ToString ()).HostName;  				}  				catch {  					re.HostName = "Failed in resolution of DNS name.";  				}  				return re;  			})).ToList ();  		}  });  
Magic Number,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The following statement contains a magic number: using (var ip443 = new IPMonitor (443' LocalIPAddress ()))  	using (var ip_80 = new IPMonitor (80' LocalIPAddress ())) {  		ReList = ReList.Union (new List<IPMonitor> {  			ip_80'  			ip443  		}.Select (x => new {  			port = x.Port'  			re = x.Recieve ()  		}).Where (x => !x.re.DestinationAddress.ToString ().StartsWith ("192")).Select (x =>  {  			var re = new ReceiveElms () {  				Port = x.port'  				IPAddress = x.re.DestinationAddress'  				IsTarget = x.re.DestinationAddress.JudgeIsTarget ()  			};  			try {  				re.HostName = Dns.GetHostEntry (re.IPAddress.ToString ()).HostName;  			}  			catch {  				re.HostName = "Failed in resolution of DNS name.";  			}  			return re;  		})).ToList ();  	}  
Magic Number,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The following statement contains a magic number: using (var ip443 = new IPMonitor (443' LocalIPAddress ()))  	using (var ip_80 = new IPMonitor (80' LocalIPAddress ())) {  		ReList = ReList.Union (new List<IPMonitor> {  			ip_80'  			ip443  		}.Select (x => new {  			port = x.Port'  			re = x.Recieve ()  		}).Where (x => !x.re.DestinationAddress.ToString ().StartsWith ("192")).Select (x =>  {  			var re = new ReceiveElms () {  				Port = x.port'  				IPAddress = x.re.DestinationAddress'  				IsTarget = x.re.DestinationAddress.JudgeIsTarget ()  			};  			try {  				re.HostName = Dns.GetHostEntry (re.IPAddress.ToString ()).HostName;  			}  			catch {  				re.HostName = "Failed in resolution of DNS name.";  			}  			return re;  		})).ToList ();  	}  
Magic Number,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The following statement contains a magic number: using (var ip_80 = new IPMonitor (80' LocalIPAddress ())) {  	ReList = ReList.Union (new List<IPMonitor> {  		ip_80'  		ip443  	}.Select (x => new {  		port = x.Port'  		re = x.Recieve ()  	}).Where (x => !x.re.DestinationAddress.ToString ().StartsWith ("192")).Select (x =>  {  		var re = new ReceiveElms () {  			Port = x.port'  			IPAddress = x.re.DestinationAddress'  			IsTarget = x.re.DestinationAddress.JudgeIsTarget ()  		};  		try {  			re.HostName = Dns.GetHostEntry (re.IPAddress.ToString ()).HostName;  		}  		catch {  			re.HostName = "Failed in resolution of DNS name.";  		}  		return re;  	})).ToList ();  }  
Magic Number,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The following statement contains a magic number: Enumerable.Range (1' 7).Select (x => string.Format (@"{0}\{1}_ip"' rootDir' DateTime.Now.AddDays (-x).ToString ("MMdd"))).Where (x => File.Exists (x)).ToList ().ForEach (x => File.Delete (x));  
Magic Number,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The following statement contains a magic number: using (var sw = new StreamWriter (plainFile' true)) {  	sw.WriteLine (new string ('='' 100) + "\r\n");  	sw.WriteLine ("--- " + DateTime.Now.ToString () + "");  	sw.WriteLine (ReList.Select (x => string.Format ("{0' -5}: {1' -4}: {2' -16}: {3}"' x.IsTarget' x.Port' x.IPAddress' x.HostName)).Aggregate ((x' y) => x + "\r\n" + y) + (TimesIeKilled > 0 ? "\r\n\r\n" + TimesIeKilled.ToString () + " process(es) killed." : ""));  }  
Magic Number,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The following statement contains a magic number: sw.WriteLine (new string ('='' 100) + "\r\n");  
Magic Number,PacChkr,UseSocket,C:\repos\Funkest_CS\PacChkr\PacChkr\UseSocket.cs,ALoop,The following statement contains a magic number: Enumerable.Range (1' 7).Select (x => string.Format (@"{0}\{1}_ip.xml"' rootDir' DateTime.Now.AddDays (-x).ToString ("MMdd"))).Where (x => File.Exists (x)).ToList ().ForEach (x => File.Delete (x));  
Magic Number,PacChkr,WithHWdl,C:\repos\Funkest_CS\PacChkr\PacChkr\WithHWdl.cs,documentFromDOM,The following statement contains a magic number: return hWnd.Select (x =>  {  	EnumChildWindows (x' new EnumProc (EnumWindows)' ref x);  	return x;  }).Select (x =>  {  	if (!x.Equals (IntPtr.Zero)) {  		lngMsg = RegisterWindowMessage ("WM_HTML_GETOBJECT");  		if (lngMsg != 0) {  			SendMessageTimeout (x' lngMsg' 0' 0' SMTO_ABORTIFHUNG' 1000' out lRes);  			if (!(bool)(lRes == 0)) {  				int hr = ObjectFromLresult (lRes' ref IID_IHTMLDocument' 0' ref document);  				if ((bool)(document == null)) {  					return null;  				}  			}  		}  	}  	return document;  });  
Magic Number,PacChkr,WithHWdl,C:\repos\Funkest_CS\PacChkr\PacChkr\WithHWdl.cs,documentFromDOM,The following statement contains a magic number: if (!x.Equals (IntPtr.Zero)) {  	lngMsg = RegisterWindowMessage ("WM_HTML_GETOBJECT");  	if (lngMsg != 0) {  		SendMessageTimeout (x' lngMsg' 0' 0' SMTO_ABORTIFHUNG' 1000' out lRes);  		if (!(bool)(lRes == 0)) {  			int hr = ObjectFromLresult (lRes' ref IID_IHTMLDocument' 0' ref document);  			if ((bool)(document == null)) {  				return null;  			}  		}  	}  }  
Magic Number,PacChkr,WithHWdl,C:\repos\Funkest_CS\PacChkr\PacChkr\WithHWdl.cs,documentFromDOM,The following statement contains a magic number: if (lngMsg != 0) {  	SendMessageTimeout (x' lngMsg' 0' 0' SMTO_ABORTIFHUNG' 1000' out lRes);  	if (!(bool)(lRes == 0)) {  		int hr = ObjectFromLresult (lRes' ref IID_IHTMLDocument' 0' ref document);  		if ((bool)(document == null)) {  			return null;  		}  	}  }  
Magic Number,PacChkr,WithHWdl,C:\repos\Funkest_CS\PacChkr\PacChkr\WithHWdl.cs,documentFromDOM,The following statement contains a magic number: SendMessageTimeout (x' lngMsg' 0' 0' SMTO_ABORTIFHUNG' 1000' out lRes);  
Missing Default,PacChkr,Program,C:\repos\Funkest_CS\PacChkr\PacChkr\Program.cs,Main,The following switch statement is missing a default case: switch (e.Reason) {  case SessionEndReasons.Logoff:  	SendMail ("mucai Log Off");  	break;  case SessionEndReasons.SystemShutdown:  	SendMail ("mucai Shut Down");  	break;  }  
