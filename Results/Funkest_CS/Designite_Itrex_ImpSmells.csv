Implementation smell,Namespace,Class,File,Method,Description
Long Method,Itrex,MainForm,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\MainWindow.xaml.cs,MainForm,The method has 180 lines of code.
Complex Method,Utils,FnEx,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\..\..\..\Utilities\Utils.cs,_DelphiQuickSort,Cyclomatic complexity of the method is 11
Complex Method,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,KeepEntityXmlTextWriter,Cyclomatic complexity of the method is 20
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\..\..\..\Utilities\Utils.cs,CopyDirectory,The method has 7 parameters.
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\..\..\..\Utilities\Utils.cs,WritePOSTData,The method has 7 parameters.
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\..\..\..\Utilities\Utils.cs,TempSort,The method has 5 parameters.
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\..\..\..\Utilities\Utils.cs,GetArguments,The method has 5 parameters.
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\..\..\..\Utilities\Utils.cs,GetArguments,The method has 7 parameters.
Long Parameter List,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,KeepEntityXmlTextWriter,The method has 14 parameters.
Long Parameter List,Itrex,Utils,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\ItrexUtils.cs,WritePOSTData,The method has 7 parameters.
Long Parameter List,Itrex,MainForm,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\MainWindow.xaml.cs,MainForm,The method has 10 parameters.
Long Parameter List,Itrex,MainForm,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\MainWindow.xaml.cs,HwndSourceHook,The method has 5 parameters.
Long Parameter List,Itrex.Library,UploadFiles,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Library\UpLoadFiles.cs,DoUploadFiles,The method has 9 parameters.
Long Identifier,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,KeepEntityXmlTextWriter,The length of the parameter xmlEncodedRawTextWriterIndentType is 33.
Long Identifier,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,KeepEntityXmlTextWriter,The length of the parameter xmlUtf8RawTextWriterIndentType is 30.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\..\..\..\Utilities\Utils.cs,CopyDirectory,The length of the statement  "	Directory.GetDirectories (srcDir).ToList ().ForEach (x => CopyDirectory (x' Path.Combine (destDir' Path.GetFileName (x))' allowOverWrite)); " is 139.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\..\..\..\Utilities\Utils.cs,ToStringEx,The length of the statement  "	return value.GetType ().GetField (value.ToString ()).GetCustomAttributes (typeof(DescriptionAttribute)' false).Cast<DescriptionAttribute> ().FirstOrDefault ().ThrowIf (a => a == null' new ArgumentException ("Not implemented the attribute.")).Description; " is 254.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\..\..\..\Utilities\Utils.cs,WritePOSTData,The length of the statement  "	Enumerable.Range (0' _values.Count).Select (i => new KeyValuePair<string' string> (_values.Keys [i]' _values [i])).Select (x => new List<Byte[]> () { " is 149.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\..\..\..\Utilities\Utils.cs,WritePOSTData,The length of the statement  "		Encoding.ASCII.GetBytes (string.Format ("Content-Disposition: form-data; name=\"{0}\"{1}{1}"' x.Key' Environment.NewLine))// value (value of form-data) " is 151.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\..\..\..\Utilities\Utils.cs,IsMatchAttrVal,The length of the statement  "	return elm.Attribute (attrName) != null && another.Attribute (attrName) != null && elm.Attribute (attrName).Value == another.Attribute (attrName).Value; " is 152.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\..\..\..\Utilities\Utils.cs,TempSort,The length of the statement  "	return source.SkipWhile (z => string.Compare (z' HeadLocId' StringComparison.Ordinal) < 0).TakeWhile (z => string.Compare (z' TailLocId' StringComparison.Ordinal) <= 0).ToList (); " is 179.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\..\..\..\Utilities\Utils.cs,GetArguments,The length of the statement  "		return args.GroupBy (s => options.Contains (s) ? key = s : key)// !! Side effect !!   It's true --> 100 == (someVar = 100) " is 122.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\..\..\..\Utilities\Utils.cs,GetArguments,The length of the statement  "		return args.GroupBy (s => options.Keys.Contains (s) ? key = s // !! Side effect !!   It's true --> 100 == (someVar = 100) " is 121.
Long Statement,Itrex,Utils,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\ItrexUtils.cs,GetListParentName,The length of the statement  "	return typeof(T).GetCustomAttributes (typeof(XmlListParentTypeAttribute)' false).Cast<XmlListParentTypeAttribute> ().First ().ListName; " is 135.
Long Statement,Itrex,Utils,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\ItrexUtils.cs,WritePOSTData,The length of the statement  "	Enumerable.Range (0' _values.Count).Select (i => new KeyValuePair<string' string> (_values.Keys [i]' _values [i])).Select (x => new List<Byte[]> () { " is 149.
Long Statement,Itrex,Utils,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\ItrexUtils.cs,WritePOSTData,The length of the statement  "		Encoding.ASCII.GetBytes (string.Format ("Content-Disposition: form-data; name=\"{0}\"{1}{1}"' x.Key' Environment.NewLine))// value (value of form-data) " is 151.
Long Statement,Itrex,MainForm,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\MainWindow.xaml.cs,button1_Click,The length of the statement  "	var kk = ee.Stories.Where (x => x.Id == "3730SYatjalnmj").Last ().MSIds.Records.Where (x => x.LocId == "3730MLvkozzlpj").Last ().MSIds.Props; " is 141.
Long Statement,Itrex.Controls,StoryGrid,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\StoryGrid.xaml.cs,DrawRows,The length of the statement  "		table.Rows [table.Rows.Count - 1] [0] = (Application.Current as App).Category.Mnscrpts.Where (x => x.Id == o.Id).Select (x => x.Translations [0].Text).FirstOrDefault (); " is 169.
Long Statement,Itrex.Controls,TocTree,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\TocTree.xaml.cs,GetTemplate,The length of the statement  "	image.SetValue (Image.SourceProperty' new ImageSourceConverter ().ConvertFromString ("../../Images/TocCommonHasStory.png")); " is 124.
Long Statement,Itrex.Library,DLStatusCheck,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Library\DLStatusCheck.cs,CheckStastus,The length of the statement  "		re = XDocument.Parse (ExecuteAgentCgi.ExeAgentCgi (@"http://" + ipadrs + @"/docserver/StatusCheck.exe"' "kase"' new NameValueCollection () { " is 140.
Long Statement,Itrex.Library,ExecuteAgentCgi,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Library\ExecuteAgentCgi.cs,ExeAgentCgi00,The length of the statement  "	var opt = @"<params><param name=""agent-output"">D:\publiczone\_default\htdocs\user\kase\agentres\rex517.xml</param><param name=""db-conf-name"">itrex</param><param name=""client-info0"">Workbench: RexWorkbench.exe (Build 2.5.1.53) </param><param name=""client-info1"">WorkbenchLongVer: 2510053</param><param name=""client-info2"">LocalComputerName: EGTECH92-JP411</param><param name=""client-info3"">LocalUserName: kase</param><param name=""client-info4"">IpAddress: 192.168.1.52</param><param name=""queue-name"">D:\publiczone\_default\htdocs\user\kase\agenttemp\Q20140415-144714-kase@_default.xml</param></params>"; " is 618.
Long Statement,Itrex.Library,LogIn,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Library\LogIn.cs,AccessLogIn,The length of the statement  "				ExistingLogIn = DateTime.Parse (XDocument.Parse (wb.DownloadString (Cs.GetSvrLogInPath (Purpose' svr))).Descendants ("login_id").FirstOrDefault ().Value) " is 153.
Long Statement,Itrex.Library,UploadFiles,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Library\UpLoadFiles.cs,DoUploadFiles,The length of the statement  "				Encoding.UTF8.GetBytes (string.Format ("Content-Disposition: form-data; name=\"{0}\"; filename=\"{1}\"{2}"' x.FieldName' x.Filename' Environment.NewLine))// header (content-type) " is 178.
Complex Conditional,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The conditional expression  "bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>'"  is complex.
Complex Conditional,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The conditional expression  "bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>'"  is complex.
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,KeepEntityXmlTextWriter,The following statement contains a magic number: REPLACE_CHARS_LENGTH = this.ProjectName == EProjectName.ITrex ? 3 : 2;  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,KeepEntityXmlTextWriter,The following statement contains a magic number: REPLACE_CHARS_LENGTH = this.ProjectName == EProjectName.ITrex ? 3 : 2;  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType != BufferType.Unknown) {  	int bufPos = get_bufPos (internalWriter);  	int bufLen = get_bufLen (internalWriter);  	if ((bufPos + 3) >= bufLen) {  		this.FlushBuffer (internalWriter);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if ((bufPos + 3) >= bufLen) {  	this.FlushBuffer (internalWriter);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Chars) {  	int bufPos = get_bufPos (internalWriter);  	char[] bufChars = get_bufChars (internalWriter);  	if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  		bufChars [bufPos - 3] = '/';  		bufChars [bufPos - 2] = '>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  else if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  	bufChars [bufPos - 3] = '/';  	bufChars [bufPos - 2] = '>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  	bufChars [bufPos - 3] = '/';  	bufChars [bufPos - 2] = '>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  	bufChars [bufPos - 3] = '/';  	bufChars [bufPos - 2] = '>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  	bufChars [bufPos - 3] = '/';  	bufChars [bufPos - 2] = '>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufChars [bufPos - 3] == ' ' && bufChars [bufPos - 2] == '/' && bufChars [bufPos - 1] == '>') {  	bufChars [bufPos - 3] = '/';  	bufChars [bufPos - 2] = '>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: bufChars [bufPos - 3] = '/';  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: bufChars [bufPos - 2] = '>';  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (this.bufferType == BufferType.Bytes) {  	int bufPos = get_bufPos (internalWriter);  	byte[] bufBytes = get_bufBytes (internalWriter);  	if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  		bufBytes [bufPos - 3] = (byte)'/';  		bufBytes [bufPos - 2] = (byte)'>';  		bufPos--;  		set_bufPos (internalWriter' bufPos);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  	bufBytes [bufPos - 3] = (byte)'/';  	bufBytes [bufPos - 2] = (byte)'>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  	bufBytes [bufPos - 3] = (byte)'/';  	bufBytes [bufPos - 2] = (byte)'>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  	bufBytes [bufPos - 3] = (byte)'/';  	bufBytes [bufPos - 2] = (byte)'>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  	bufBytes [bufPos - 3] = (byte)'/';  	bufBytes [bufPos - 2] = (byte)'>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: if (bufPos > 3 && bufBytes [bufPos - 3] == ' ' && bufBytes [bufPos - 2] == '/' && bufBytes [bufPos - 1] == '>') {  	bufBytes [bufPos - 3] = (byte)'/';  	bufBytes [bufPos - 2] = (byte)'>';  	bufPos--;  	set_bufPos (internalWriter' bufPos);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: bufBytes [bufPos - 3] = (byte)'/';  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteEndElement,The following statement contains a magic number: bufBytes [bufPos - 2] = (byte)'>';  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (textSegments.Length > 1) {  	for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  		WriteString (textSegments [i]);  		pos += textSegments [i].Length + 1;  		// Assertion: Replace the following if-else when the number of  		// replacement characters and substitute entities has grown  		// greater than 2 or 3.  		Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  		if (pos != text.Length) {  			if (text [pos] == this.REPLACE_CHARS [0])  				WriteRaw (this.ENTITY_SUBS [0]);  			else if (text [pos] == this.REPLACE_CHARS [1])  				WriteRaw (this.ENTITY_SUBS [1]);  			else if (this.REPLACE_CHARS_LENGTH == 3)  				// Only in ITrex.proj  				WriteRaw (this.ENTITY_SUBS [2]);  		}  	}  }  else  	this.xw.WriteString (text);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (textSegments.Length > 1) {  	for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  		WriteString (textSegments [i]);  		pos += textSegments [i].Length + 1;  		// Assertion: Replace the following if-else when the number of  		// replacement characters and substitute entities has grown  		// greater than 2 or 3.  		Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  		if (pos != text.Length) {  			if (text [pos] == this.REPLACE_CHARS [0])  				WriteRaw (this.ENTITY_SUBS [0]);  			else if (text [pos] == this.REPLACE_CHARS [1])  				WriteRaw (this.ENTITY_SUBS [1]);  			else if (this.REPLACE_CHARS_LENGTH == 3)  				// Only in ITrex.proj  				WriteRaw (this.ENTITY_SUBS [2]);  		}  	}  }  else  	this.xw.WriteString (text);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  	WriteString (textSegments [i]);  	pos += textSegments [i].Length + 1;  	// Assertion: Replace the following if-else when the number of  	// replacement characters and substitute entities has grown  	// greater than 2 or 3.  	Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  	if (pos != text.Length) {  		if (text [pos] == this.REPLACE_CHARS [0])  			WriteRaw (this.ENTITY_SUBS [0]);  		else if (text [pos] == this.REPLACE_CHARS [1])  			WriteRaw (this.ENTITY_SUBS [1]);  		else if (this.REPLACE_CHARS_LENGTH == 3)  			// Only in ITrex.proj  			WriteRaw (this.ENTITY_SUBS [2]);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  	WriteString (textSegments [i]);  	pos += textSegments [i].Length + 1;  	// Assertion: Replace the following if-else when the number of  	// replacement characters and substitute entities has grown  	// greater than 2 or 3.  	Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  	if (pos != text.Length) {  		if (text [pos] == this.REPLACE_CHARS [0])  			WriteRaw (this.ENTITY_SUBS [0]);  		else if (text [pos] == this.REPLACE_CHARS [1])  			WriteRaw (this.ENTITY_SUBS [1]);  		else if (this.REPLACE_CHARS_LENGTH == 3)  			// Only in ITrex.proj  			WriteRaw (this.ENTITY_SUBS [2]);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (pos != text.Length) {  	if (text [pos] == this.REPLACE_CHARS [0])  		WriteRaw (this.ENTITY_SUBS [0]);  	else if (text [pos] == this.REPLACE_CHARS [1])  		WriteRaw (this.ENTITY_SUBS [1]);  	else if (this.REPLACE_CHARS_LENGTH == 3)  		// Only in ITrex.proj  		WriteRaw (this.ENTITY_SUBS [2]);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (pos != text.Length) {  	if (text [pos] == this.REPLACE_CHARS [0])  		WriteRaw (this.ENTITY_SUBS [0]);  	else if (text [pos] == this.REPLACE_CHARS [1])  		WriteRaw (this.ENTITY_SUBS [1]);  	else if (this.REPLACE_CHARS_LENGTH == 3)  		// Only in ITrex.proj  		WriteRaw (this.ENTITY_SUBS [2]);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [0])  	WriteRaw (this.ENTITY_SUBS [0]);  else if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [0])  	WriteRaw (this.ENTITY_SUBS [0]);  else if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteStringWithReplace,The following statement contains a magic number: WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (textSegments.Length > 1) {  	for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  		this.xw.WriteRaw (textSegments [i]);  		pos += textSegments [i].Length + 1;  		// Assertion: Replace the following if-else when the number of  		// replacement characters and substitute entities has grown  		// greater than 2 or 3.  		Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  		if (pos != text.Length) {  			if (text [pos] == this.REPLACE_CHARS [0])  				WriteRaw (this.ENTITY_SUBS [0]);  			else if (text [pos] == this.REPLACE_CHARS [1])  				WriteRaw (this.ENTITY_SUBS [1]);  			else if (this.REPLACE_CHARS_LENGTH == 3)  				// Only in ITrex.proj  				WriteRaw (this.ENTITY_SUBS [2]);  		}  	}  }  else  	this.xw.WriteRaw (text);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (textSegments.Length > 1) {  	for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  		this.xw.WriteRaw (textSegments [i]);  		pos += textSegments [i].Length + 1;  		// Assertion: Replace the following if-else when the number of  		// replacement characters and substitute entities has grown  		// greater than 2 or 3.  		Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  		if (pos != text.Length) {  			if (text [pos] == this.REPLACE_CHARS [0])  				WriteRaw (this.ENTITY_SUBS [0]);  			else if (text [pos] == this.REPLACE_CHARS [1])  				WriteRaw (this.ENTITY_SUBS [1]);  			else if (this.REPLACE_CHARS_LENGTH == 3)  				// Only in ITrex.proj  				WriteRaw (this.ENTITY_SUBS [2]);  		}  	}  }  else  	this.xw.WriteRaw (text);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  	this.xw.WriteRaw (textSegments [i]);  	pos += textSegments [i].Length + 1;  	// Assertion: Replace the following if-else when the number of  	// replacement characters and substitute entities has grown  	// greater than 2 or 3.  	Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  	if (pos != text.Length) {  		if (text [pos] == this.REPLACE_CHARS [0])  			WriteRaw (this.ENTITY_SUBS [0]);  		else if (text [pos] == this.REPLACE_CHARS [1])  			WriteRaw (this.ENTITY_SUBS [1]);  		else if (this.REPLACE_CHARS_LENGTH == 3)  			// Only in ITrex.proj  			WriteRaw (this.ENTITY_SUBS [2]);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: for (int pos = -1' i = 0; i < textSegments.Length; ++i) {  	this.xw.WriteRaw (textSegments [i]);  	pos += textSegments [i].Length + 1;  	// Assertion: Replace the following if-else when the number of  	// replacement characters and substitute entities has grown  	// greater than 2 or 3.  	Debug.Assert (REPLACE_CHARS_LENGTH == this.REPLACE_CHARS.Length);  	if (pos != text.Length) {  		if (text [pos] == this.REPLACE_CHARS [0])  			WriteRaw (this.ENTITY_SUBS [0]);  		else if (text [pos] == this.REPLACE_CHARS [1])  			WriteRaw (this.ENTITY_SUBS [1]);  		else if (this.REPLACE_CHARS_LENGTH == 3)  			// Only in ITrex.proj  			WriteRaw (this.ENTITY_SUBS [2]);  	}  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (pos != text.Length) {  	if (text [pos] == this.REPLACE_CHARS [0])  		WriteRaw (this.ENTITY_SUBS [0]);  	else if (text [pos] == this.REPLACE_CHARS [1])  		WriteRaw (this.ENTITY_SUBS [1]);  	else if (this.REPLACE_CHARS_LENGTH == 3)  		// Only in ITrex.proj  		WriteRaw (this.ENTITY_SUBS [2]);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (pos != text.Length) {  	if (text [pos] == this.REPLACE_CHARS [0])  		WriteRaw (this.ENTITY_SUBS [0]);  	else if (text [pos] == this.REPLACE_CHARS [1])  		WriteRaw (this.ENTITY_SUBS [1]);  	else if (this.REPLACE_CHARS_LENGTH == 3)  		// Only in ITrex.proj  		WriteRaw (this.ENTITY_SUBS [2]);  }  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [0])  	WriteRaw (this.ENTITY_SUBS [0]);  else if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [0])  	WriteRaw (this.ENTITY_SUBS [0]);  else if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (text [pos] == this.REPLACE_CHARS [1])  	WriteRaw (this.ENTITY_SUBS [1]);  else if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: if (this.REPLACE_CHARS_LENGTH == 3)  	// Only in ITrex.proj  	WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,WriteRawWithReplace,The following statement contains a magic number: WriteRaw (this.ENTITY_SUBS [2]);  
Magic Number,Itrex,MainForm,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\MainWindow.xaml.cs,MainForm,The following statement contains a magic number: ShowControl (new TocTree ((Application.Current as App).Category.Models [14].Groups)' "TocTree");  
Magic Number,Itrex,MainForm,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\MainWindow.xaml.cs,MainForm,The following statement contains a magic number: ShowControl (new StoryGrid ((Application.Current as App).Category.Models [14].Stories [8])' "StoryGrid");  
Magic Number,Itrex,MainForm,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\MainWindow.xaml.cs,MainForm,The following statement contains a magic number: ShowControl (new StoryGrid ((Application.Current as App).Category.Models [14].Stories [8])' "StoryGrid");  
Magic Number,Itrex,MainForm,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\MainWindow.xaml.cs,HwndSourceHook,The following statement contains a magic number: if (msg == WM_NCHITTEST) {  	// これ以上処理させない（完全に処理を横取りする）  	handled = true;  	// クライアント座標のマウス位置を取得  	Point ptScreen = new Point ((int)lParam & 0xFFFF' ((int)lParam >> 16) & 0xFFFF);  	Point ptClient = PointFromScreen (ptScreen);  	// リサイズ可能と判断するサイズ  	double bh = SystemParameters.ResizeFrameHorizontalBorderHeight;  	double bw = SystemParameters.ResizeFrameVerticalBorderWidth;  	double captionH = SystemParameters.CaptionHeight;  	// 四隅の斜め方向リサイズが優先  	if (new Rect (0' 0' bw' bh).Contains (ptClient))  		return new IntPtr (HTTOPLEFT);  	if (new Rect (Width - bw' 0' bw' bh).Contains (ptClient))  		return new IntPtr (HTTOPRIGHT);  	if (new Rect (0' Height - bh' bw' bh).Contains (ptClient))  		return new IntPtr (HTBOTTOMLEFT);  	if (new Rect (Width - bw' Height - bh' bw' bh).Contains (ptClient))  		return new IntPtr (HTBOTTOMRIGHT);  	// 四辺の直交方向リサイズ  	if (new Rect (0' 0' Width' bw).Contains (ptClient))  		return new IntPtr (HTTOP);  	if (new Rect (0' 0' bw' Height).Contains (ptClient))  		return new IntPtr (HTLEFT);  	if (new Rect (Width - bw' 0' bw' Height).Contains (ptClient))  		return new IntPtr (HTRIGHT);  	if (new Rect (0' Height - bh' Width' bh).Contains (ptClient))  		return new IntPtr (HTBOTTOM);  	// ドラッグ移動可能な領域を指定  	if (new Rect (0' 0' Width' captionH).Contains (ptClient))  		return new IntPtr (HTCAPTION);  	// 上記以外はクライアント領域と判断  	return new IntPtr (HTCLIENT);  }  
Magic Number,Itrex.Controls,TocTree,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\TocTree.xaml.cs,GetTemplate,The following statement contains a magic number: grid.SetValue (Grid.HeightProperty' Convert.ToDouble (24));  
Magic Number,Itrex.Controls,TocTree,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\TocTree.xaml.cs,GetTemplate,The following statement contains a magic number: grid.SetValue (Grid.MarginProperty' new Thickness (2));  
Magic Number,Itrex.Controls,TocTree,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\TocTree.xaml.cs,GetTemplate,The following statement contains a magic number: image.SetValue (Image.MarginProperty' new Thickness (2));  
Magic Number,Itrex.Controls,TocTree,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\TocTree.xaml.cs,GetTemplate,The following statement contains a magic number: image.SetValue (Image.WidthProperty' Convert.ToDouble (32));  
Magic Number,Itrex.Controls,TocTree,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\TocTree.xaml.cs,GetTemplate,The following statement contains a magic number: image.SetValue (Image.HeightProperty' Convert.ToDouble (24));  
Magic Number,Itrex.Controls,TocTree,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\TocTree.xaml.cs,GetTemplate,The following statement contains a magic number: label.SetValue (TextBlock.MarginProperty' new Thickness (33' 0' 0' 0));  
Magic Number,Itrex.Controls,ucDataBindCodeBehind,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\ucDataBindCodeBehind.xaml.cs,GetTemplate,The following statement contains a magic number: grid.SetValue (Grid.WidthProperty' Convert.ToDouble (100));  
Magic Number,Itrex.Controls,ucDataBindCodeBehind,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\ucDataBindCodeBehind.xaml.cs,GetTemplate,The following statement contains a magic number: grid.SetValue (Grid.HeightProperty' Convert.ToDouble (24));  
Magic Number,Itrex.Controls,ucDataBindCodeBehind,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\ucDataBindCodeBehind.xaml.cs,GetTemplate,The following statement contains a magic number: grid.SetValue (Grid.MarginProperty' new Thickness (2));  
Magic Number,Itrex.Controls,ucDataBindCodeBehind,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\ucDataBindCodeBehind.xaml.cs,GetTemplate,The following statement contains a magic number: image.SetValue (Image.MarginProperty' new Thickness (2));  
Magic Number,Itrex.Controls,ucDataBindCodeBehind,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\ucDataBindCodeBehind.xaml.cs,GetTemplate,The following statement contains a magic number: image.SetValue (Image.WidthProperty' Convert.ToDouble (32));  
Magic Number,Itrex.Controls,ucDataBindCodeBehind,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\ucDataBindCodeBehind.xaml.cs,GetTemplate,The following statement contains a magic number: image.SetValue (Image.HeightProperty' Convert.ToDouble (24));  
Magic Number,Itrex.Controls,ucDataBindCodeBehind,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Controls\ucDataBindCodeBehind.xaml.cs,GetTemplate,The following statement contains a magic number: label.SetValue (TextBlock.MarginProperty' new Thickness (2));  
Magic Number,Itrex.Library,DLStatusCheck,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Library\DLStatusCheck.cs,CheckStastus,The following statement contains a magic number: while (re != "complete") {  	re = XDocument.Parse (ExecuteAgentCgi.ExeAgentCgi (@"http://" + ipadrs + @"/docserver/StatusCheck.exe"' "kase"' new NameValueCollection () {  		{  			"userid"'  			"kase"  		}'  		{  			"passwd"'  			"SwCmdPass"  		}'  		{  			"cmd"'  			"StatusChkDel"  		}'  		{  			"filepath"'  			stFile  		}  	}).ResText).Descendants ("agent").First ().Attribute ("status").Value;  	Thread.Sleep (700);  }  
Magic Number,Itrex.Library,DLStatusCheck,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Library\DLStatusCheck.cs,CheckStastus,The following statement contains a magic number: Thread.Sleep (700);  
Missing Default,Itrex.Classes.Helper,KeepEntityXmlTextWriter,C:\repos\Funkest_CS\Itrex\Itrex\Itrex\Classes\Helper\KeepEntityXmlTextWriter.cs,KeepEntityXmlTextWriter,The following switch statement is missing a default case: switch (this.bufferType) {  case BufferType.Unknown:  	break;  case BufferType.Chars:  	this.get_bufChars = w => (char[])bufCharsBytesField.GetValue (w);  	this.get_bufPos = w => (int)bufPosField.GetValue (w);  	this.set_bufPos = (w' i) => bufPosField.SetValue (w' i);  	this.get_bufLen = w => (int)bufLenField.GetValue (w);  	this.FlushBuffer = w => flushBufferMethod.Invoke (w' new object[0]);  	break;  case BufferType.Bytes:  	this.get_bufBytes = w => (byte[])bufCharsBytesField.GetValue (w);  	this.get_bufPos = w => (int)bufPosField.GetValue (w);  	this.set_bufPos = (w' i) => bufPosField.SetValue (w' i);  	this.get_bufLen = w => (int)bufLenField.GetValue (w);  	this.FlushBuffer = w => flushBufferMethod.Invoke (w' new object[0]);  	break;  }  
