Implementation smell,Namespace,Class,File,Method,Description
Long Method,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainWindow,The method has 118 lines of code.
Complex Method,Utils,FnEx,C:\repos\Funkest_CS\TypeBetter\TypeBetter\..\..\Utilities\Utils.cs,_DelphiQuickSort,Cyclomatic complexity of the method is 11
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\TypeBetter\TypeBetter\..\..\Utilities\Utils.cs,CopyDirectory,The method has 7 parameters.
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\TypeBetter\TypeBetter\..\..\Utilities\Utils.cs,WritePOSTData,The method has 7 parameters.
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\TypeBetter\TypeBetter\..\..\Utilities\Utils.cs,TempSort,The method has 5 parameters.
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\TypeBetter\TypeBetter\..\..\Utilities\Utils.cs,GetArguments,The method has 5 parameters.
Long Parameter List,Utils,FnEx,C:\repos\Funkest_CS\TypeBetter\TypeBetter\..\..\Utilities\Utils.cs,GetArguments,The method has 7 parameters.
Long Parameter List,TypeBetter,SelectingDialogue,C:\repos\Funkest_CS\TypeBetter\TypeBetter\SelectingDialogue.xaml.cs,SelectingDialogue,The method has 13 parameters.
Long Parameter List,TypeBetter,SelectingDialogue,C:\repos\Funkest_CS\TypeBetter\TypeBetter\SelectingDialogue.xaml.cs,SetTextsData,The method has 13 parameters.
Long Parameter List,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainWindow,The method has 25 parameters.
Long Parameter List,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainFunction,The method has 10 parameters.
Long Parameter List,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,CompareTexts,The method has 6 parameters.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\TypeBetter\TypeBetter\..\..\Utilities\Utils.cs,CopyDirectory,The length of the statement  "	Directory.GetDirectories (srcDir).ToList ().ForEach (x => CopyDirectory (x' Path.Combine (destDir' Path.GetFileName (x))' allowOverWrite)); " is 139.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\TypeBetter\TypeBetter\..\..\Utilities\Utils.cs,ToStringEx,The length of the statement  "	return value.GetType ().GetField (value.ToString ()).GetCustomAttributes (typeof(DescriptionAttribute)' false).Cast<DescriptionAttribute> ().FirstOrDefault ().ThrowIf (a => a == null' new ArgumentException ("Not implemented the attribute.")).Description; " is 254.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\TypeBetter\TypeBetter\..\..\Utilities\Utils.cs,WritePOSTData,The length of the statement  "	Enumerable.Range (0' _values.Count).Select (i => new KeyValuePair<string' string> (_values.Keys [i]' _values [i])).Select (x => new List<Byte[]> () { " is 149.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\TypeBetter\TypeBetter\..\..\Utilities\Utils.cs,WritePOSTData,The length of the statement  "		Encoding.ASCII.GetBytes (string.Format ("Content-Disposition: form-data; name=\"{0}\"{1}{1}"' x.Key' Environment.NewLine))// value (value of form-data) " is 151.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\TypeBetter\TypeBetter\..\..\Utilities\Utils.cs,IsMatchAttrVal,The length of the statement  "	return elm.Attribute (attrName) != null && another.Attribute (attrName) != null && elm.Attribute (attrName).Value == another.Attribute (attrName).Value; " is 152.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\TypeBetter\TypeBetter\..\..\Utilities\Utils.cs,TempSort,The length of the statement  "	return source.SkipWhile (z => string.Compare (z' HeadLocId' StringComparison.Ordinal) < 0).TakeWhile (z => string.Compare (z' TailLocId' StringComparison.Ordinal) <= 0).ToList (); " is 179.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\TypeBetter\TypeBetter\..\..\Utilities\Utils.cs,GetArguments,The length of the statement  "		return args.GroupBy (s => options.Contains (s) ? key = s : key)// !! Side effect !!   It's true --> 100 == (someVar = 100) " is 122.
Long Statement,Utils,FnEx,C:\repos\Funkest_CS\TypeBetter\TypeBetter\..\..\Utilities\Utils.cs,GetArguments,The length of the statement  "		return args.GroupBy (s => options.Keys.Contains (s) ? key = s // !! Side effect !!   It's true --> 100 == (someVar = 100) " is 121.
Long Statement,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainFunction,The length of the statement  "		new XDocument (new XElement ("typebetter"' new XElement ("text"' new XAttribute ("id"' "1")' new XAttribute ("title"' "sample")' "sample\r\nThis application is based on Typewell."))).Save (TEXTFILE); " is 199.
Long Statement,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainFunction,The length of the statement  "	TextCompositionManager.AddPreviewTextInputStartHandler (typed' (object _' TextCompositionEventArgs __) => _imeFlag = true); " is 123.
Long Statement,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainFunction,The length of the statement  "	TextCompositionManager.AddPreviewTextInputUpdateHandler (typed' (object _' TextCompositionEventArgs e) => _imeFlag = !(e.TextComposition.CompositionText.Length == 0)); " is 167.
Long Statement,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,CompareTexts,The length of the statement  "			this.HistoryFile.Root.Add (new XElement ("record"' new XAttribute ("id"' this.TextInfo.Id)' new XAttribute ("date"' DateTime.Now)' new XAttribute ("tw-class"' x.twClass)' new XAttribute ("time"' x.minSec))); " is 207.
Long Statement,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,CompareTexts,The length of the statement  "		}).SideEffectsOnly (x => MessageBox.Show (string.Format ("\r\n{0}\r\n{1} chars/min\r\nTW class is '{2}'"' x.minSec' x.minutes' x.twClass)' "typebetter Finished.")); " is 164.
Long Statement,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The length of the statement  "	return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH"; " is 947.
Empty Catch Block,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainWindow,The method has an empty catch block.
Magic Number,TypeBetter,SelectingDialogue,C:\repos\Funkest_CS\TypeBetter\TypeBetter\SelectingDialogue.xaml.cs,SetTextsData,The following statement contains a magic number: fileList.ItemsSource = new ObservableCollection<TypingText> (this.TextsXml.Descendants ("text").Select (x => new {  	id = int.Parse (x.Attribute ("id").Value)'  	title = x.Attribute ("title").Value'  	text = x.Value.Replace ("\r\n"' "\r").Replace ("\n"' "\r")  }).Select (x => new TypingText {  	Id = x.id'  	Title = x.title'  	ContentsHead = x.text.Length > 19 ? x.text.Substring (0' 20) + "..." : x.text'  	Contents = x.text  }));  
Magic Number,TypeBetter,SelectingDialogue,C:\repos\Funkest_CS\TypeBetter\TypeBetter\SelectingDialogue.xaml.cs,SetTextsData,The following statement contains a magic number: fileList.ItemsSource = new ObservableCollection<TypingText> (this.TextsXml.Descendants ("text").Select (x => new {  	id = int.Parse (x.Attribute ("id").Value)'  	title = x.Attribute ("title").Value'  	text = x.Value.Replace ("\r\n"' "\r").Replace ("\n"' "\r")  }).Select (x => new TypingText {  	Id = x.id'  	Title = x.title'  	ContentsHead = x.text.Length > 19 ? x.text.Substring (0' 20) + "..." : x.text'  	Contents = x.text  }));  
Magic Number,TypeBetter,SelectingDialogue,C:\repos\Funkest_CS\TypeBetter\TypeBetter\SelectingDialogue.xaml.cs,SetTextsData,The following statement contains a magic number: this.fileList.AutoGeneratingColumn += (object sender' DataGridAutoGeneratingColumnEventArgs e) =>  {  	var textStyle = new Style (typeof(TextBlock));  	textStyle.Setters.Add (new Setter (TextBlock.TextWrappingProperty' TextWrapping.Wrap));  	((DataGridTextColumn)e.Column).ElementStyle = textStyle;  	//var textEditStyle = new Style(typeof(TextBox));  	//textEditStyle.Setters.Add(new Setter(TextBox.TextWrappingProperty' TextWrapping.Wrap));  	//((DataGridTextColumn)e.Column).EditingElementStyle = textEditStyle;  	switch (e.PropertyName) {  	case "Id":  		e.Cancel = true;  		break;  	case "Title":  		e.Column.DisplayIndex = 0;  		e.Column.Width = new DataGridLength (0.6' DataGridLengthUnitType.Star);  		break;  	case "ContentsHead":  		e.Column.DisplayIndex = 1;  		e.Column.Width = new DataGridLength (0.4' DataGridLengthUnitType.Star);  		break;  	case "Contents":  		e.Cancel = true;  		break;  	default:  		throw new InvalidOperationException ();  	}  };  
Magic Number,TypeBetter,SelectingDialogue,C:\repos\Funkest_CS\TypeBetter\TypeBetter\SelectingDialogue.xaml.cs,SetTextsData,The following statement contains a magic number: this.fileList.AutoGeneratingColumn += (object sender' DataGridAutoGeneratingColumnEventArgs e) =>  {  	var textStyle = new Style (typeof(TextBlock));  	textStyle.Setters.Add (new Setter (TextBlock.TextWrappingProperty' TextWrapping.Wrap));  	((DataGridTextColumn)e.Column).ElementStyle = textStyle;  	//var textEditStyle = new Style(typeof(TextBox));  	//textEditStyle.Setters.Add(new Setter(TextBox.TextWrappingProperty' TextWrapping.Wrap));  	//((DataGridTextColumn)e.Column).EditingElementStyle = textEditStyle;  	switch (e.PropertyName) {  	case "Id":  		e.Cancel = true;  		break;  	case "Title":  		e.Column.DisplayIndex = 0;  		e.Column.Width = new DataGridLength (0.6' DataGridLengthUnitType.Star);  		break;  	case "ContentsHead":  		e.Column.DisplayIndex = 1;  		e.Column.Width = new DataGridLength (0.4' DataGridLengthUnitType.Star);  		break;  	case "Contents":  		e.Cancel = true;  		break;  	default:  		throw new InvalidOperationException ();  	}  };  
Magic Number,TypeBetter,SelectingDialogue,C:\repos\Funkest_CS\TypeBetter\TypeBetter\SelectingDialogue.xaml.cs,SetTextsData,The following statement contains a magic number: switch (e.PropertyName) {  case "Id":  	e.Cancel = true;  	break;  case "Title":  	e.Column.DisplayIndex = 0;  	e.Column.Width = new DataGridLength (0.6' DataGridLengthUnitType.Star);  	break;  case "ContentsHead":  	e.Column.DisplayIndex = 1;  	e.Column.Width = new DataGridLength (0.4' DataGridLengthUnitType.Star);  	break;  case "Contents":  	e.Cancel = true;  	break;  default:  	throw new InvalidOperationException ();  }  
Magic Number,TypeBetter,SelectingDialogue,C:\repos\Funkest_CS\TypeBetter\TypeBetter\SelectingDialogue.xaml.cs,SetTextsData,The following statement contains a magic number: switch (e.PropertyName) {  case "Id":  	e.Cancel = true;  	break;  case "Title":  	e.Column.DisplayIndex = 0;  	e.Column.Width = new DataGridLength (0.6' DataGridLengthUnitType.Star);  	break;  case "ContentsHead":  	e.Column.DisplayIndex = 1;  	e.Column.Width = new DataGridLength (0.4' DataGridLengthUnitType.Star);  	break;  case "Contents":  	e.Cancel = true;  	break;  default:  	throw new InvalidOperationException ();  }  
Magic Number,TypeBetter,SelectingDialogue,C:\repos\Funkest_CS\TypeBetter\TypeBetter\SelectingDialogue.xaml.cs,SetTextsData,The following statement contains a magic number: e.Column.Width = new DataGridLength (0.6' DataGridLengthUnitType.Star);  
Magic Number,TypeBetter,SelectingDialogue,C:\repos\Funkest_CS\TypeBetter\TypeBetter\SelectingDialogue.xaml.cs,SetTextsData,The following statement contains a magic number: e.Column.Width = new DataGridLength (0.4' DataGridLengthUnitType.Star);  
Magic Number,TypeBetter,Sound,C:\repos\Funkest_CS\TypeBetter\TypeBetter\Sound.cs,Play,The following statement contains a magic number: WaveOutDevice = CreateDevice (deviceId' 250);  
Magic Number,TypeBetter,Sound,C:\repos\Funkest_CS\TypeBetter\TypeBetter\Sound.cs,Play,The following statement contains a magic number: postVolumeMeter.SamplesPerNotification = postVolumeMeter.WaveFormat.SampleRate / 10;  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: EH01 = (sender' e) =>  {  	if (this._imeFlag)  		return;  	this.Sound.Play (this.SoundFile' 0);  	new {  		thisEvent = EH01'  		orginalTexts = this.original.Document.Blocks.FirstBlock as Paragraph  	}.SelectNewSingle (x => new {  		x.thisEvent'  		x.orginalTexts'  		newParagraph = new Paragraph () {  			LineHeight = 1  		}'  		newText = GetAllString (this.typed).Replace ("\r\n"' "\r").SelectNewSingle (x1 => x1.Length == 0 ? "" : x1.Substring (0' x1.Length - 1))  	}).SelectNewSingle (x => new {  		x.newParagraph'  		x.orginalTexts'  		x.thisEvent'  		newText = CompareTexts (x.orginalTexts' x.newText) == HasFinished.yes ? "" : x.newText  	}).SideEffectsOnly (x => this.prgBar.Value = x.newText.Length).SideEffectsOnly (x => x.newParagraph.Inlines.Add (x.newText)).SelectNewSingle (x => new {  		x.newParagraph'  		x.thisEvent'  		startIndex = this.typed.CaretPosition.DocumentStart  	})//.SideEffectsOnly(x => this.msg.Content += string.Format("{0}"' this.typed.CaretPosition.DocumentEnd.GetOffsetToPosition(x.startIndex)))  	// いくら調べても原理がわからず現象も複雑 : 全テキスト頭および全テキスト末への挿入後は caret index が +1 されるが、全テキスト中への挿入後は caret index が +3 され、中への挿入が連続する場合は 2回目以降 +1 となり、中への挿入後(連続回数不問)に頭および末への挿入を行うと -1 となる。なお削除が絡むとまた予想外の挙動  	.SelectNewSingle (x => // LogicalDirection は test (delete' paste' add...) した限りでは index 値には影響しない  	new {  		x.newParagraph'  		x.startIndex'  		x.thisEvent'  		caretIndex = x.startIndex.GetOffsetToPosition (this.typed.CaretPosition) - (// 5 step 上を参照  		this.typed.CaretPosition.GetOffsetToPosition (x.startIndex) - this.typed.CaretPosition.DocumentEnd.GetOffsetToPosition (x.startIndex) == 2 // means that the caret exists at end of document  		|| GetAllString (this.typed).Length - this.LastTypedTextLength < 0 // means that the change is deleting a char  		? 0 : 2)  	}).SideEffectsOnly (x => this.typed.TextChanged -= x.thisEvent).SideEffectsOnly (x => this.typed.Document.Blocks.Clear ()).SideEffectsOnly (x => this.typed.Document.Blocks.Add (x.newParagraph)).SideEffectsOnly (x => this.typed.TextChanged += x.thisEvent).SideEffectsOnly (x =>  {  		try {  			if (this.typed.CaretPosition.GetTextInRun (LogicalDirection.Backward).LastOrDefault () == '\r')  				this.typed.CaretPosition = x.startIndex.GetPositionAtOffset (x.caretIndex);  			this.typed.CaretPosition = x.startIndex.GetPositionAtOffset (x.caretIndex);  		}  		catch {  			// do nothing   		}  	}).SideEffectsOnly (x => this.LastTypedTextLength = GetAllString (this.typed).Length);  };  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: EH01 = (sender' e) =>  {  	if (this._imeFlag)  		return;  	this.Sound.Play (this.SoundFile' 0);  	new {  		thisEvent = EH01'  		orginalTexts = this.original.Document.Blocks.FirstBlock as Paragraph  	}.SelectNewSingle (x => new {  		x.thisEvent'  		x.orginalTexts'  		newParagraph = new Paragraph () {  			LineHeight = 1  		}'  		newText = GetAllString (this.typed).Replace ("\r\n"' "\r").SelectNewSingle (x1 => x1.Length == 0 ? "" : x1.Substring (0' x1.Length - 1))  	}).SelectNewSingle (x => new {  		x.newParagraph'  		x.orginalTexts'  		x.thisEvent'  		newText = CompareTexts (x.orginalTexts' x.newText) == HasFinished.yes ? "" : x.newText  	}).SideEffectsOnly (x => this.prgBar.Value = x.newText.Length).SideEffectsOnly (x => x.newParagraph.Inlines.Add (x.newText)).SelectNewSingle (x => new {  		x.newParagraph'  		x.thisEvent'  		startIndex = this.typed.CaretPosition.DocumentStart  	})//.SideEffectsOnly(x => this.msg.Content += string.Format("{0}"' this.typed.CaretPosition.DocumentEnd.GetOffsetToPosition(x.startIndex)))  	// いくら調べても原理がわからず現象も複雑 : 全テキスト頭および全テキスト末への挿入後は caret index が +1 されるが、全テキスト中への挿入後は caret index が +3 され、中への挿入が連続する場合は 2回目以降 +1 となり、中への挿入後(連続回数不問)に頭および末への挿入を行うと -1 となる。なお削除が絡むとまた予想外の挙動  	.SelectNewSingle (x => // LogicalDirection は test (delete' paste' add...) した限りでは index 値には影響しない  	new {  		x.newParagraph'  		x.startIndex'  		x.thisEvent'  		caretIndex = x.startIndex.GetOffsetToPosition (this.typed.CaretPosition) - (// 5 step 上を参照  		this.typed.CaretPosition.GetOffsetToPosition (x.startIndex) - this.typed.CaretPosition.DocumentEnd.GetOffsetToPosition (x.startIndex) == 2 // means that the caret exists at end of document  		|| GetAllString (this.typed).Length - this.LastTypedTextLength < 0 // means that the change is deleting a char  		? 0 : 2)  	}).SideEffectsOnly (x => this.typed.TextChanged -= x.thisEvent).SideEffectsOnly (x => this.typed.Document.Blocks.Clear ()).SideEffectsOnly (x => this.typed.Document.Blocks.Add (x.newParagraph)).SideEffectsOnly (x => this.typed.TextChanged += x.thisEvent).SideEffectsOnly (x =>  {  		try {  			if (this.typed.CaretPosition.GetTextInRun (LogicalDirection.Backward).LastOrDefault () == '\r')  				this.typed.CaretPosition = x.startIndex.GetPositionAtOffset (x.caretIndex);  			this.typed.CaretPosition = x.startIndex.GetPositionAtOffset (x.caretIndex);  		}  		catch {  			// do nothing   		}  	}).SideEffectsOnly (x => this.LastTypedTextLength = GetAllString (this.typed).Length);  };  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: new {  	thisEvent = EH01'  	orginalTexts = this.original.Document.Blocks.FirstBlock as Paragraph  }.SelectNewSingle (x => new {  	x.thisEvent'  	x.orginalTexts'  	newParagraph = new Paragraph () {  		LineHeight = 1  	}'  	newText = GetAllString (this.typed).Replace ("\r\n"' "\r").SelectNewSingle (x1 => x1.Length == 0 ? "" : x1.Substring (0' x1.Length - 1))  }).SelectNewSingle (x => new {  	x.newParagraph'  	x.orginalTexts'  	x.thisEvent'  	newText = CompareTexts (x.orginalTexts' x.newText) == HasFinished.yes ? "" : x.newText  }).SideEffectsOnly (x => this.prgBar.Value = x.newText.Length).SideEffectsOnly (x => x.newParagraph.Inlines.Add (x.newText)).SelectNewSingle (x => new {  	x.newParagraph'  	x.thisEvent'  	startIndex = this.typed.CaretPosition.DocumentStart  })//.SideEffectsOnly(x => this.msg.Content += string.Format("{0}"' this.typed.CaretPosition.DocumentEnd.GetOffsetToPosition(x.startIndex)))  // いくら調べても原理がわからず現象も複雑 : 全テキスト頭および全テキスト末への挿入後は caret index が +1 されるが、全テキスト中への挿入後は caret index が +3 され、中への挿入が連続する場合は 2回目以降 +1 となり、中への挿入後(連続回数不問)に頭および末への挿入を行うと -1 となる。なお削除が絡むとまた予想外の挙動  .SelectNewSingle (x => // LogicalDirection は test (delete' paste' add...) した限りでは index 値には影響しない  new {  	x.newParagraph'  	x.startIndex'  	x.thisEvent'  	caretIndex = x.startIndex.GetOffsetToPosition (this.typed.CaretPosition) - (// 5 step 上を参照  	this.typed.CaretPosition.GetOffsetToPosition (x.startIndex) - this.typed.CaretPosition.DocumentEnd.GetOffsetToPosition (x.startIndex) == 2 // means that the caret exists at end of document  	|| GetAllString (this.typed).Length - this.LastTypedTextLength < 0 // means that the change is deleting a char  	? 0 : 2)  }).SideEffectsOnly (x => this.typed.TextChanged -= x.thisEvent).SideEffectsOnly (x => this.typed.Document.Blocks.Clear ()).SideEffectsOnly (x => this.typed.Document.Blocks.Add (x.newParagraph)).SideEffectsOnly (x => this.typed.TextChanged += x.thisEvent).SideEffectsOnly (x =>  {  	try {  		if (this.typed.CaretPosition.GetTextInRun (LogicalDirection.Backward).LastOrDefault () == '\r')  			this.typed.CaretPosition = x.startIndex.GetPositionAtOffset (x.caretIndex);  		this.typed.CaretPosition = x.startIndex.GetPositionAtOffset (x.caretIndex);  	}  	catch {  		// do nothing   	}  }).SideEffectsOnly (x => this.LastTypedTextLength = GetAllString (this.typed).Length);  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: new {  	thisEvent = EH01'  	orginalTexts = this.original.Document.Blocks.FirstBlock as Paragraph  }.SelectNewSingle (x => new {  	x.thisEvent'  	x.orginalTexts'  	newParagraph = new Paragraph () {  		LineHeight = 1  	}'  	newText = GetAllString (this.typed).Replace ("\r\n"' "\r").SelectNewSingle (x1 => x1.Length == 0 ? "" : x1.Substring (0' x1.Length - 1))  }).SelectNewSingle (x => new {  	x.newParagraph'  	x.orginalTexts'  	x.thisEvent'  	newText = CompareTexts (x.orginalTexts' x.newText) == HasFinished.yes ? "" : x.newText  }).SideEffectsOnly (x => this.prgBar.Value = x.newText.Length).SideEffectsOnly (x => x.newParagraph.Inlines.Add (x.newText)).SelectNewSingle (x => new {  	x.newParagraph'  	x.thisEvent'  	startIndex = this.typed.CaretPosition.DocumentStart  })//.SideEffectsOnly(x => this.msg.Content += string.Format("{0}"' this.typed.CaretPosition.DocumentEnd.GetOffsetToPosition(x.startIndex)))  // いくら調べても原理がわからず現象も複雑 : 全テキスト頭および全テキスト末への挿入後は caret index が +1 されるが、全テキスト中への挿入後は caret index が +3 され、中への挿入が連続する場合は 2回目以降 +1 となり、中への挿入後(連続回数不問)に頭および末への挿入を行うと -1 となる。なお削除が絡むとまた予想外の挙動  .SelectNewSingle (x => // LogicalDirection は test (delete' paste' add...) した限りでは index 値には影響しない  new {  	x.newParagraph'  	x.startIndex'  	x.thisEvent'  	caretIndex = x.startIndex.GetOffsetToPosition (this.typed.CaretPosition) - (// 5 step 上を参照  	this.typed.CaretPosition.GetOffsetToPosition (x.startIndex) - this.typed.CaretPosition.DocumentEnd.GetOffsetToPosition (x.startIndex) == 2 // means that the caret exists at end of document  	|| GetAllString (this.typed).Length - this.LastTypedTextLength < 0 // means that the change is deleting a char  	? 0 : 2)  }).SideEffectsOnly (x => this.typed.TextChanged -= x.thisEvent).SideEffectsOnly (x => this.typed.Document.Blocks.Clear ()).SideEffectsOnly (x => this.typed.Document.Blocks.Add (x.newParagraph)).SideEffectsOnly (x => this.typed.TextChanged += x.thisEvent).SideEffectsOnly (x =>  {  	try {  		if (this.typed.CaretPosition.GetTextInRun (LogicalDirection.Backward).LastOrDefault () == '\r')  			this.typed.CaretPosition = x.startIndex.GetPositionAtOffset (x.caretIndex);  		this.typed.CaretPosition = x.startIndex.GetPositionAtOffset (x.caretIndex);  	}  	catch {  		// do nothing   	}  }).SideEffectsOnly (x => this.LastTypedTextLength = GetAllString (this.typed).Length);  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.PreviewKeyDown += (object sender' KeyEventArgs e) =>  {  	var key = (e.Key == Key.System ? e.SystemKey : e.Key);  	switch (key) {  	case Key.LeftAlt:  	case Key.RightAlt:  		if (this.mainMenu.Visibility == System.Windows.Visibility.Hidden) {  			this.mainMenu.Visibility = System.Windows.Visibility.Visible;  			this.memuRD.Height = new GridLength (20);  		}  		// (1' GridUnitType.Star)  		//                        else if (! LogicalTreeHelper.GetChildren(this.mainMenu).Cast<MenuItem>().Any(x => x.IsFocused)) {  		else {  			this.mainMenu.Visibility = System.Windows.Visibility.Hidden;  			this.memuRD.Height = new GridLength (0);  		}  		break;  	default:  		break;  	}  };  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: switch (key) {  case Key.LeftAlt:  case Key.RightAlt:  	if (this.mainMenu.Visibility == System.Windows.Visibility.Hidden) {  		this.mainMenu.Visibility = System.Windows.Visibility.Visible;  		this.memuRD.Height = new GridLength (20);  	}  	// (1' GridUnitType.Star)  	//                        else if (! LogicalTreeHelper.GetChildren(this.mainMenu).Cast<MenuItem>().Any(x => x.IsFocused)) {  	else {  		this.mainMenu.Visibility = System.Windows.Visibility.Hidden;  		this.memuRD.Height = new GridLength (0);  	}  	break;  default:  	break;  }  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: if (this.mainMenu.Visibility == System.Windows.Visibility.Hidden) {  	this.mainMenu.Visibility = System.Windows.Visibility.Visible;  	this.memuRD.Height = new GridLength (20);  }  // (1' GridUnitType.Star)  //                        else if (! LogicalTreeHelper.GetChildren(this.mainMenu).Cast<MenuItem>().Any(x => x.IsFocused)) {  else {  	this.mainMenu.Visibility = System.Windows.Visibility.Hidden;  	this.memuRD.Height = new GridLength (0);  }  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.memuRD.Height = new GridLength (20);  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainFunction,The following statement contains a magic number: this.OriginalTextToCompare = this.OriginalTextToCompare.Substring (0' this.OriginalTextToCompare.Length - 2);  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainFunction,The following statement contains a magic number: this.KeyDown += (object sender' KeyEventArgs e) =>  {  	if (e.Key == Key.Tab) {  		MessageBox.Show ("tab key");  		e.Handled = true;  		// to cancel  		return;  	}  	// can't catch some keys like '^b'' '^u' and so on' seem to have other fucntion.  	if (e.KeyboardDevice.Modifiers.HasFlag (ModifierKeys.Control | ModifierKeys.Shift)) {  		switch (e.Key) {  		case Key.D:  			this.original.ScrollToVerticalOffset (this.original.VerticalOffset + this.original.ActualHeight - 40);  			break;  		case Key.U:  			this.original.ScrollToVerticalOffset (this.original.VerticalOffset - this.original.ActualHeight + 40);  			break;  		default:  			//MessageBox.Show(e.Key.ToString());  			break;  		}  	}  };  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainFunction,The following statement contains a magic number: this.KeyDown += (object sender' KeyEventArgs e) =>  {  	if (e.Key == Key.Tab) {  		MessageBox.Show ("tab key");  		e.Handled = true;  		// to cancel  		return;  	}  	// can't catch some keys like '^b'' '^u' and so on' seem to have other fucntion.  	if (e.KeyboardDevice.Modifiers.HasFlag (ModifierKeys.Control | ModifierKeys.Shift)) {  		switch (e.Key) {  		case Key.D:  			this.original.ScrollToVerticalOffset (this.original.VerticalOffset + this.original.ActualHeight - 40);  			break;  		case Key.U:  			this.original.ScrollToVerticalOffset (this.original.VerticalOffset - this.original.ActualHeight + 40);  			break;  		default:  			//MessageBox.Show(e.Key.ToString());  			break;  		}  	}  };  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainFunction,The following statement contains a magic number: if (e.KeyboardDevice.Modifiers.HasFlag (ModifierKeys.Control | ModifierKeys.Shift)) {  	switch (e.Key) {  	case Key.D:  		this.original.ScrollToVerticalOffset (this.original.VerticalOffset + this.original.ActualHeight - 40);  		break;  	case Key.U:  		this.original.ScrollToVerticalOffset (this.original.VerticalOffset - this.original.ActualHeight + 40);  		break;  	default:  		//MessageBox.Show(e.Key.ToString());  		break;  	}  }  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainFunction,The following statement contains a magic number: if (e.KeyboardDevice.Modifiers.HasFlag (ModifierKeys.Control | ModifierKeys.Shift)) {  	switch (e.Key) {  	case Key.D:  		this.original.ScrollToVerticalOffset (this.original.VerticalOffset + this.original.ActualHeight - 40);  		break;  	case Key.U:  		this.original.ScrollToVerticalOffset (this.original.VerticalOffset - this.original.ActualHeight + 40);  		break;  	default:  		//MessageBox.Show(e.Key.ToString());  		break;  	}  }  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainFunction,The following statement contains a magic number: switch (e.Key) {  case Key.D:  	this.original.ScrollToVerticalOffset (this.original.VerticalOffset + this.original.ActualHeight - 40);  	break;  case Key.U:  	this.original.ScrollToVerticalOffset (this.original.VerticalOffset - this.original.ActualHeight + 40);  	break;  default:  	//MessageBox.Show(e.Key.ToString());  	break;  }  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainFunction,The following statement contains a magic number: switch (e.Key) {  case Key.D:  	this.original.ScrollToVerticalOffset (this.original.VerticalOffset + this.original.ActualHeight - 40);  	break;  case Key.U:  	this.original.ScrollToVerticalOffset (this.original.VerticalOffset - this.original.ActualHeight + 40);  	break;  default:  	//MessageBox.Show(e.Key.ToString());  	break;  }  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainFunction,The following statement contains a magic number: this.original.ScrollToVerticalOffset (this.original.VerticalOffset + this.original.ActualHeight - 40);  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,MainFunction,The following statement contains a magic number: this.original.ScrollToVerticalOffset (this.original.VerticalOffset - this.original.ActualHeight + 40);  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
Magic Number,TypeBetter,MainWindow,C:\repos\Funkest_CS\TypeBetter\TypeBetter\MainWindow.xaml.cs,EvaluationTW,The following statement contains a magic number: return charParMin <= 115 ? "J" : charParMin <= 128 ? "I" : charParMin <= 143 ? "H" : charParMin <= 161 ? "G" : charParMin <= 180 ? "F" : charParMin <= 201 ? "E" : charParMin <= 223 ? "D" : charParMin <= 245 ? "C" : charParMin <= 267 ? "B" : charParMin <= 286 ? "A" : charParMin <= 301 ? "SJ" : charParMin <= 308 ? "SI" : charParMin <= 316 ? "SH" : charParMin <= 325 ? "SG" : charParMin <= 334 ? "SF" : charParMin <= 343 ? "SE" : charParMin <= 353 ? "SD" : charParMin <= 364 ? "SC" : charParMin <= 376 ? "SB" : charParMin <= 388 ? "SA" : charParMin <= 401 ? "SS" : charParMin <= 414 ? "XJ" : charParMin <= 429 ? "XI" : charParMin <= 445 ? "XH" : charParMin <= 462 ? "XG" : charParMin <= 481 ? "XF" : charParMin <= 501 ? "XE" : charParMin <= 522 ? "XD" : charParMin <= 546 ? "XC" : charParMin <= 572 ? "XB" : charParMin <= 601 ? "XA" : charParMin <= 632 ? "XS" : charParMin <= 667 ? "XX" : charParMin <= 706 ? "ZJ" : charParMin <= 751 ? "ZI" : "ZH";  
