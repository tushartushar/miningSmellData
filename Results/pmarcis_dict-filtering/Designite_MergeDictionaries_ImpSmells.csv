Implementation smell,Namespace,Class,File,Method,Description
Long Method,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,Main,The method has 115 lines of code.
Complex Method,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,Main,Cyclomatic complexity of the method is 16
Complex Method,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,Cyclomatic complexity of the method is 9
Long Statement,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,Main,The length of the statement  "	Console.WriteLine ("FILE\tFile 1 pairs\tFile 1 source words\tFile 2 pairs\tFile 2 source words\tFile out pairs\t File out source words\tNew pairs\tNew source words"); " is 166.
Magic Number,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,The following statement contains a magic number: while (!sr.EndOfStream) {  	string line = sr.ReadLine ().Trim ();  	if (!string.IsNullOrWhiteSpace (line)) {  		string[] arr = line.Split (sep' StringSplitOptions.RemoveEmptyEntries);  		if (arr != null && arr.Length >= 2) {  			string srcText = arr [0].Trim ();  			string trgText = arr [1].Trim ();  			if (string.IsNullOrWhiteSpace (srcText) || string.IsNullOrWhiteSpace (trgText))  				continue;  			double prob = -1;  			try {  				if (arr.Length >= 3)  					prob = Convert.ToDouble (arr [2].Replace ("'"' ".")' nfi);  			}  			catch {  				continue;  			}  			if (!res.ContainsKey (srcText))  				res.Add (srcText' new Dictionary<string' double> ());  			if (!res [srcText].ContainsKey (trgText))  				res [srcText].Add (trgText' prob);  			lineCount++;  		}  	}  }  
Magic Number,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,The following statement contains a magic number: while (!sr.EndOfStream) {  	string line = sr.ReadLine ().Trim ();  	if (!string.IsNullOrWhiteSpace (line)) {  		string[] arr = line.Split (sep' StringSplitOptions.RemoveEmptyEntries);  		if (arr != null && arr.Length >= 2) {  			string srcText = arr [0].Trim ();  			string trgText = arr [1].Trim ();  			if (string.IsNullOrWhiteSpace (srcText) || string.IsNullOrWhiteSpace (trgText))  				continue;  			double prob = -1;  			try {  				if (arr.Length >= 3)  					prob = Convert.ToDouble (arr [2].Replace ("'"' ".")' nfi);  			}  			catch {  				continue;  			}  			if (!res.ContainsKey (srcText))  				res.Add (srcText' new Dictionary<string' double> ());  			if (!res [srcText].ContainsKey (trgText))  				res [srcText].Add (trgText' prob);  			lineCount++;  		}  	}  }  
Magic Number,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,The following statement contains a magic number: while (!sr.EndOfStream) {  	string line = sr.ReadLine ().Trim ();  	if (!string.IsNullOrWhiteSpace (line)) {  		string[] arr = line.Split (sep' StringSplitOptions.RemoveEmptyEntries);  		if (arr != null && arr.Length >= 2) {  			string srcText = arr [0].Trim ();  			string trgText = arr [1].Trim ();  			if (string.IsNullOrWhiteSpace (srcText) || string.IsNullOrWhiteSpace (trgText))  				continue;  			double prob = -1;  			try {  				if (arr.Length >= 3)  					prob = Convert.ToDouble (arr [2].Replace ("'"' ".")' nfi);  			}  			catch {  				continue;  			}  			if (!res.ContainsKey (srcText))  				res.Add (srcText' new Dictionary<string' double> ());  			if (!res [srcText].ContainsKey (trgText))  				res [srcText].Add (trgText' prob);  			lineCount++;  		}  	}  }  
Magic Number,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (line)) {  	string[] arr = line.Split (sep' StringSplitOptions.RemoveEmptyEntries);  	if (arr != null && arr.Length >= 2) {  		string srcText = arr [0].Trim ();  		string trgText = arr [1].Trim ();  		if (string.IsNullOrWhiteSpace (srcText) || string.IsNullOrWhiteSpace (trgText))  			continue;  		double prob = -1;  		try {  			if (arr.Length >= 3)  				prob = Convert.ToDouble (arr [2].Replace ("'"' ".")' nfi);  		}  		catch {  			continue;  		}  		if (!res.ContainsKey (srcText))  			res.Add (srcText' new Dictionary<string' double> ());  		if (!res [srcText].ContainsKey (trgText))  			res [srcText].Add (trgText' prob);  		lineCount++;  	}  }  
Magic Number,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (line)) {  	string[] arr = line.Split (sep' StringSplitOptions.RemoveEmptyEntries);  	if (arr != null && arr.Length >= 2) {  		string srcText = arr [0].Trim ();  		string trgText = arr [1].Trim ();  		if (string.IsNullOrWhiteSpace (srcText) || string.IsNullOrWhiteSpace (trgText))  			continue;  		double prob = -1;  		try {  			if (arr.Length >= 3)  				prob = Convert.ToDouble (arr [2].Replace ("'"' ".")' nfi);  		}  		catch {  			continue;  		}  		if (!res.ContainsKey (srcText))  			res.Add (srcText' new Dictionary<string' double> ());  		if (!res [srcText].ContainsKey (trgText))  			res [srcText].Add (trgText' prob);  		lineCount++;  	}  }  
Magic Number,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (line)) {  	string[] arr = line.Split (sep' StringSplitOptions.RemoveEmptyEntries);  	if (arr != null && arr.Length >= 2) {  		string srcText = arr [0].Trim ();  		string trgText = arr [1].Trim ();  		if (string.IsNullOrWhiteSpace (srcText) || string.IsNullOrWhiteSpace (trgText))  			continue;  		double prob = -1;  		try {  			if (arr.Length >= 3)  				prob = Convert.ToDouble (arr [2].Replace ("'"' ".")' nfi);  		}  		catch {  			continue;  		}  		if (!res.ContainsKey (srcText))  			res.Add (srcText' new Dictionary<string' double> ());  		if (!res [srcText].ContainsKey (trgText))  			res [srcText].Add (trgText' prob);  		lineCount++;  	}  }  
Magic Number,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,The following statement contains a magic number: if (arr != null && arr.Length >= 2) {  	string srcText = arr [0].Trim ();  	string trgText = arr [1].Trim ();  	if (string.IsNullOrWhiteSpace (srcText) || string.IsNullOrWhiteSpace (trgText))  		continue;  	double prob = -1;  	try {  		if (arr.Length >= 3)  			prob = Convert.ToDouble (arr [2].Replace ("'"' ".")' nfi);  	}  	catch {  		continue;  	}  	if (!res.ContainsKey (srcText))  		res.Add (srcText' new Dictionary<string' double> ());  	if (!res [srcText].ContainsKey (trgText))  		res [srcText].Add (trgText' prob);  	lineCount++;  }  
Magic Number,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,The following statement contains a magic number: if (arr != null && arr.Length >= 2) {  	string srcText = arr [0].Trim ();  	string trgText = arr [1].Trim ();  	if (string.IsNullOrWhiteSpace (srcText) || string.IsNullOrWhiteSpace (trgText))  		continue;  	double prob = -1;  	try {  		if (arr.Length >= 3)  			prob = Convert.ToDouble (arr [2].Replace ("'"' ".")' nfi);  	}  	catch {  		continue;  	}  	if (!res.ContainsKey (srcText))  		res.Add (srcText' new Dictionary<string' double> ());  	if (!res [srcText].ContainsKey (trgText))  		res [srcText].Add (trgText' prob);  	lineCount++;  }  
Magic Number,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,The following statement contains a magic number: if (arr != null && arr.Length >= 2) {  	string srcText = arr [0].Trim ();  	string trgText = arr [1].Trim ();  	if (string.IsNullOrWhiteSpace (srcText) || string.IsNullOrWhiteSpace (trgText))  		continue;  	double prob = -1;  	try {  		if (arr.Length >= 3)  			prob = Convert.ToDouble (arr [2].Replace ("'"' ".")' nfi);  	}  	catch {  		continue;  	}  	if (!res.ContainsKey (srcText))  		res.Add (srcText' new Dictionary<string' double> ());  	if (!res [srcText].ContainsKey (trgText))  		res [srcText].Add (trgText' prob);  	lineCount++;  }  
Magic Number,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,The following statement contains a magic number: try {  	if (arr.Length >= 3)  		prob = Convert.ToDouble (arr [2].Replace ("'"' ".")' nfi);  }  catch {  	continue;  }  
Magic Number,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,The following statement contains a magic number: try {  	if (arr.Length >= 3)  		prob = Convert.ToDouble (arr [2].Replace ("'"' ".")' nfi);  }  catch {  	continue;  }  
Magic Number,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,The following statement contains a magic number: if (arr.Length >= 3)  	prob = Convert.ToDouble (arr [2].Replace ("'"' ".")' nfi);  
Magic Number,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,The following statement contains a magic number: if (arr.Length >= 3)  	prob = Convert.ToDouble (arr [2].Replace ("'"' ".")' nfi);  
Magic Number,MergeDictionaries,Program,C:\repos\pmarcis_dict-filtering\MergeDictionaries\Program.cs,ReadDict,The following statement contains a magic number: prob = Convert.ToDouble (arr [2].Replace ("'"' ".")' nfi);  
