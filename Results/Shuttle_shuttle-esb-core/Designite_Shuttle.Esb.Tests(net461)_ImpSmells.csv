Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Shuttle.Esb.Tests,DeferredProcessingFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\DeferredProcessingFixture.cs,Should_be_able_to_defer_processing,The length of the parameter deserializeTransportMessageObserver is 35.
Long Identifier,Shuttle.Esb.Tests,DeferredProcessingFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\DeferredProcessingFixture.cs,Should_be_able_to_defer_processing,The length of the parameter processDeferredMessageObserver is 30.
Long Statement,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The length of the statement  "            Assert.IsTrue(ignoreTillDate.AddMilliseconds(-100) < message.IgnoreTillDate && ignoreTillDate.AddMilliseconds(100) > message.IgnoreTillDate); " is 141.
Long Statement,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The length of the statement  "            Assert.IsTrue(ignoreTillDate.AddMilliseconds(-100) < message.IgnoreTillDate && ignoreTillDate.AddMilliseconds(100) > message.IgnoreTillDate); " is 141.
Long Statement,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The length of the statement  "            Assert.IsTrue(ignoreTillDate.AddMilliseconds(-100) < message.IgnoreTillDate && ignoreTillDate.AddMilliseconds(100) > message.IgnoreTillDate); " is 141.
Long Statement,Shuttle.Esb.Tests,TransportMessageConfiguratorFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TransportMessageConfiguratorFixture.cs,Should_be_able_to_set_sender,The length of the statement  "            identityProvider.Setup(m => m.Get()).Returns(new GenericIdentity(Environment.UserDomainName + "\\" + Environment.UserName' "Anonymous")); " is 137.
Magic Number,Shuttle.Esb.Tests,DeferredProcessingFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\DeferredProcessingFixture.cs,Should_be_able_to_defer_processing,The following statement contains a magic number: var transportMessage1 = new TransportMessage              {                  MessageId = new Guid("973808b9-8cc6-433b-b9d2-a08e1236c104")'                  IgnoreTillDate = DateTime.Now.AddSeconds(5)              };
Magic Number,Shuttle.Esb.Tests,DeferredProcessingFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\DeferredProcessingFixture.cs,Should_be_able_to_defer_processing,The following statement contains a magic number: var transportMessage2 = new TransportMessage              {                  MessageId = new Guid("d06bf8e5-f81c-4ca6-a3c4-368efae97b0b")'                  IgnoreTillDate = DateTime.Now.AddSeconds(4)              };
Magic Number,Shuttle.Esb.Tests,DeferredProcessingFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\DeferredProcessingFixture.cs,Should_be_able_to_defer_processing,The following statement contains a magic number: var transportMessage3 = new TransportMessage              {                  MessageId = new Guid("b7d21a52-bb98-4a59-85cb-d1e1e26e72df")'                  IgnoreTillDate = DateTime.Now.AddSeconds(3)              };
Magic Number,Shuttle.Esb.Tests,DeferredProcessingFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\DeferredProcessingFixture.cs,Should_be_able_to_defer_processing,The following statement contains a magic number: Thread.Sleep(250);
Magic Number,Shuttle.Esb.Tests,ControlInboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\ControlInboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(25' section.ControlInbox.ThreadCount);
Magic Number,Shuttle.Esb.Tests,ControlInboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\ControlInboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(25' section.ControlInbox.MaximumFailureCount);
Magic Number,Shuttle.Esb.Tests,ControlInboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\ControlInboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMilliseconds(250)' section.ControlInbox.DurationToSleepWhenIdle[0]);
Magic Number,Shuttle.Esb.Tests,ControlInboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\ControlInboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(10)' section.ControlInbox.DurationToSleepWhenIdle[1]);
Magic Number,Shuttle.Esb.Tests,ControlInboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\ControlInboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(30)' section.ControlInbox.DurationToSleepWhenIdle[2]);
Magic Number,Shuttle.Esb.Tests,ControlInboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\ControlInboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(30)' section.ControlInbox.DurationToSleepWhenIdle[2]);
Magic Number,Shuttle.Esb.Tests,ControlInboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\ControlInboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMinutes(30)' section.ControlInbox.DurationToIgnoreOnFailure[0]);
Magic Number,Shuttle.Esb.Tests,InboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\InboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(25' section.Inbox.ThreadCount);
Magic Number,Shuttle.Esb.Tests,InboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\InboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(25' section.Inbox.MaximumFailureCount);
Magic Number,Shuttle.Esb.Tests,InboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\InboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMilliseconds(250)' section.Inbox.DurationToSleepWhenIdle[0]);
Magic Number,Shuttle.Esb.Tests,InboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\InboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(10)' section.Inbox.DurationToSleepWhenIdle[1]);
Magic Number,Shuttle.Esb.Tests,InboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\InboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(30)' section.Inbox.DurationToSleepWhenIdle[2]);
Magic Number,Shuttle.Esb.Tests,InboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\InboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(30)' section.Inbox.DurationToSleepWhenIdle[2]);
Magic Number,Shuttle.Esb.Tests,InboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\InboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMinutes(30)' section.Inbox.DurationToIgnoreOnFailure[0]);
Magic Number,Shuttle.Esb.Tests,MessageRoutesServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\MessageRoutesServiceBusSection.cs,Should_be_able_to_load_the_configuration,The following statement contains a magic number: Assert.AreEqual(2' section.MessageRoutes.Count);
Magic Number,Shuttle.Esb.Tests,OutboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\OutboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(25' section.Outbox.MaximumFailureCount);
Magic Number,Shuttle.Esb.Tests,OutboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\OutboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMilliseconds(250)' section.Outbox.DurationToSleepWhenIdle[0]);
Magic Number,Shuttle.Esb.Tests,OutboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\OutboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(10)' section.Outbox.DurationToSleepWhenIdle[1]);
Magic Number,Shuttle.Esb.Tests,OutboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\OutboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(30)' section.Outbox.DurationToSleepWhenIdle[2]);
Magic Number,Shuttle.Esb.Tests,OutboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\OutboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(30)' section.Outbox.DurationToSleepWhenIdle[2]);
Magic Number,Shuttle.Esb.Tests,OutboxServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\OutboxServiceBusSection.cs,Should_be_able_to_load_a_full_configuration,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMinutes(30)' section.Outbox.DurationToIgnoreOnFailure[0]);
Magic Number,Shuttle.Esb.Tests,QueueFactoriesServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\QueueFactoriesServiceBusSection.cs,Should_be_able_to_load_the_configuration,The following statement contains a magic number: Assert.AreEqual(2' section.QueueFactories.Count);
Magic Number,Shuttle.Esb.Tests,UriResolverServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\UriResolverServiceBusSection.cs,Should_be_able_to_load_the_configuration,The following statement contains a magic number: Assert.AreEqual(2' section.UriResolver.Count);
Magic Number,Shuttle.Esb.Tests,WorkerServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\WorkerServiceBusSection.cs,Should_be_able_to_load_a_valid_configuration,The following statement contains a magic number: Assert.AreEqual(5' section.Worker.ThreadAvailableNotificationIntervalSeconds);
Magic Number,Shuttle.Esb.Tests,WorkerServiceBusSection,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBusSection\WorkerServiceBusSection.cs,Should_be_able_to_load_an_empty_configuration,The following statement contains a magic number: Assert.AreEqual(15' section.Worker.ThreadAvailableNotificationIntervalSeconds);
Magic Number,Shuttle.Esb.Tests,FakeQueue,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBus\FakeQueue.cs,GetMessage,The following statement contains a magic number: var expired = MessageCount % 2 != 0;
Magic Number,Shuttle.Esb.Tests,ServiceBusFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBus\ServiceBusFixture.cs,Should_be_able_to_handle_expired_message,The following statement contains a magic number: var fakeQueue = new FakeQueue(2);
Magic Number,Shuttle.Esb.Tests,ServiceBusFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBus\ServiceBusFixture.cs,Should_be_able_to_handle_expired_message,The following statement contains a magic number: var timeout = DateTime.Now.AddMilliseconds(1000);
Magic Number,Shuttle.Esb.Tests,ServiceBusFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBus\ServiceBusFixture.cs,Should_be_able_to_handle_expired_message,The following statement contains a magic number: Thread.Sleep(5);
Magic Number,Shuttle.Esb.Tests,ServiceBusFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBus\ServiceBusFixture.cs,Should_be_able_to_handle_expired_message,The following statement contains a magic number: fakeQueue.MessageCount < 2 && DateTime.Now < timeout
Magic Number,Shuttle.Esb.Tests,ServiceBusFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\ServiceBus\ServiceBusFixture.cs,Should_be_able_to_handle_expired_message,The following statement contains a magic number: Assert.AreEqual(2' fakeQueue.MessageCount' "FakeQueue was not invoked exactly twice.");
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_all_supported_types,The following statement contains a magic number: Assert.AreEqual(4' result.Length);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_all_supported_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(120)' result[0]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_all_supported_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMinutes(30)' result[1]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_all_supported_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromHours(4)' result[2]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_all_supported_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromHours(4)' result[2]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_all_supported_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromDays(5)' result[3]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_all_supported_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromDays(5)' result[3]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_repeated_types,The following statement contains a magic number: Assert.AreEqual(20' result.Length);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_repeated_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMilliseconds(5)' result[0]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_repeated_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMilliseconds(5)' result[5]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_repeated_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMilliseconds(5)' result[5]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_repeated_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(2)' result[6]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_repeated_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(2)' result[6]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_repeated_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(2)' result[10]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_repeated_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(2)' result[10]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_repeated_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMinutes(1)' result[11]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_repeated_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMinutes(1)' result[14]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_repeated_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromHours(1)' result[15]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_repeated_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromHours(1)' result[17]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_repeated_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromDays(1)' result[18]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_repeated_types,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromDays(1)' result[19]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_type_with_and_without_repeat_count,The following statement contains a magic number: Assert.AreEqual(12' result.Length);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_type_with_and_without_repeat_count,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMilliseconds(5)' result[0]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_type_with_and_without_repeat_count,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMilliseconds(5)' result[4]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_type_with_and_without_repeat_count,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMilliseconds(5)' result[4]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_type_with_and_without_repeat_count,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(2)' result[5]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_type_with_and_without_repeat_count,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(2)' result[5]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_type_with_and_without_repeat_count,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMinutes(1)' result[6]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_type_with_and_without_repeat_count,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMinutes(1)' result[10]);
Magic Number,Shuttle.Esb.Tests,StringDurationArrayConverterFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\StringDurationArrayConverterFixture.cs,Should_be_able_to_convert_type_with_and_without_repeat_count,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromHours(1)' result[11]);
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_determine_if_message_has_an_expiry_date,The following statement contains a magic number: Assert.IsTrue(new TransportMessage              {                  ExpiryDate = DateTime.Now.AddSeconds(30)              }.HasExpiryDate());
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_determine_if_message_has_expired,The following statement contains a magic number: Assert.IsTrue(new TransportMessage              {                  ExpiryDate = DateTime.Now.AddSeconds(-30)              }.HasExpired());
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: var durationToIgnoreOnFailure =                  new[]                  {                      TimeSpan.FromMinutes(3)'                      TimeSpan.FromMinutes(30)'                      TimeSpan.FromHours(2)                  };
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: var durationToIgnoreOnFailure =                  new[]                  {                      TimeSpan.FromMinutes(3)'                      TimeSpan.FromMinutes(30)'                      TimeSpan.FromHours(2)                  };
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: var durationToIgnoreOnFailure =                  new[]                  {                      TimeSpan.FromMinutes(3)'                      TimeSpan.FromMinutes(30)'                      TimeSpan.FromHours(2)                  };
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: Assert.IsFalse(DateTime.Now.AddMinutes(3) <= message.IgnoreTillDate);
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: var ignoreTillDate = DateTime.Now.AddMinutes(3);
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: Assert.IsTrue(ignoreTillDate.AddMilliseconds(-100) < message.IgnoreTillDate && ignoreTillDate.AddMilliseconds(100) > message.IgnoreTillDate);
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: Assert.IsTrue(ignoreTillDate.AddMilliseconds(-100) < message.IgnoreTillDate && ignoreTillDate.AddMilliseconds(100) > message.IgnoreTillDate);
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: Assert.IsFalse(DateTime.Now.AddMinutes(30) < message.IgnoreTillDate);
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: ignoreTillDate = DateTime.Now.AddMinutes(30);
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: Assert.IsTrue(ignoreTillDate.AddMilliseconds(-100) < message.IgnoreTillDate && ignoreTillDate.AddMilliseconds(100) > message.IgnoreTillDate);
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: Assert.IsTrue(ignoreTillDate.AddMilliseconds(-100) < message.IgnoreTillDate && ignoreTillDate.AddMilliseconds(100) > message.IgnoreTillDate);
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: Assert.IsFalse(DateTime.Now.AddHours(2) < message.IgnoreTillDate);
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: message.RegisterFailure("failure"' durationToIgnoreOnFailure[2]);
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: ignoreTillDate = DateTime.Now.AddHours(2);
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: Assert.IsTrue(ignoreTillDate.AddMilliseconds(-100) < message.IgnoreTillDate && ignoreTillDate.AddMilliseconds(100) > message.IgnoreTillDate);
Magic Number,Shuttle.Esb.Tests,TranportMessageFixture,D:\research\architectureSmells\repos1\Shuttle_shuttle-esb-core\Shuttle.Esb.Tests\TranportMessageFixture.cs,Should_be_able_to_register_failures_and_have_IgnoreTillDate_set,The following statement contains a magic number: Assert.IsTrue(ignoreTillDate.AddMilliseconds(-100) < message.IgnoreTillDate && ignoreTillDate.AddMilliseconds(100) > message.IgnoreTillDate);
