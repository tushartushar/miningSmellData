Implementation smell,Namespace,Class,File,Method,Description
Long Method,Glass.Sitecore.Mapper,GlassHtml,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\GlassHtml.cs,MakeEditable,The method has 118 lines of code.
Complex Method,Glass.Sitecore.Mapper,GlassHtml,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\GlassHtml.cs,MakeEditable,Cyclomatic complexity of the method is 12
Complex Method,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,Create,Cyclomatic complexity of the method is 8
Complex Method,Glass.Sitecore.Mapper.CodeFirst,GlassDataProvider,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\CodeFirst\GlassDataProvider.cs,GetChildIDsSection,Cyclomatic complexity of the method is 9
Complex Method,Glass.Sitecore.Mapper.Dashboard.Controllers,DetailsController,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dashboard\Controllers\DetailsController.cs,Get,Cyclomatic complexity of the method is 9
Complex Method,Glass.Sitecore.Mapper.Data,SitecoreFieldLinkHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Data\SitecoreFieldLinkHandler.cs,SetValue,Cyclomatic complexity of the method is 10
Long Parameter List,Glass.Sitecore.Mapper,ClassManager,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ClassManager.cs,CreateClass,The method has 6 parameters. Parameters: service' isLazy' inferType' type' item' constructorParameters
Long Parameter List,Glass.Sitecore.Mapper,FakePropertyInfo,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\FakePropertyInfo.cs,GetValue,The method has 5 parameters. Parameters: obj' invokeAttr' binder' index' culture
Long Parameter List,Glass.Sitecore.Mapper,FakePropertyInfo,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\FakePropertyInfo.cs,SetValue,The method has 6 parameters. Parameters: obj' value' invokeAttr' binder' index' culture
Long Parameter List,Glass.Sitecore.Mapper,GlassHtml,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\GlassHtml.cs,MakeEditable,The method has 5 parameters. Parameters: field' standardOutput' target' database' parameters
Long Parameter List,Glass.Sitecore.Mapper,GlassHtml,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\GlassHtml.cs,MakeEditable,The method has 5 parameters. Parameters: field' standardOutput' target' database' parameters
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,GetItem,The method has 5 parameters. Parameters: path' param1' param2' param3' param4
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,GetItem,The method has 5 parameters. Parameters: path' language' param1' param2' param3
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,GetItem,The method has 6 parameters. Parameters: path' language' param1' param2' param3' param4
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,GetItem,The method has 5 parameters. Parameters: path' language' version' param1' param2
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,GetItem,The method has 6 parameters. Parameters: path' language' version' param1' param2' param3
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,GetItem,The method has 7 parameters. Parameters: path' language' version' param1' param2' param3' param4
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,GetItem,The method has 5 parameters. Parameters: id' param1' param2' param3' param4
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,GetItem,The method has 5 parameters. Parameters: id' language' param1' param2' param3
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,GetItem,The method has 6 parameters. Parameters: id' language' param1' param2' param3' param4
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,GetItem,The method has 5 parameters. Parameters: id' language' version' param1' param2
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,GetItem,The method has 6 parameters. Parameters: id' language' version' param1' param2' param3
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,GetItem,The method has 7 parameters. Parameters: id' language' version' param1' param2' param3' param4
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,CreateClass,The method has 5 parameters. Parameters: isLazy' inferType' item' param1' param2
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,CreateClass,The method has 6 parameters. Parameters: isLazy' inferType' item' param1' param2' param3
Long Parameter List,Glass.Sitecore.Mapper,ISitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ISitecoreService.cs,CreateClass,The method has 7 parameters. Parameters: isLazy' inferType' item' param1' param2' param3' param4
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,GetItem,The method has 5 parameters. Parameters: path' param1' param2' param3' param4
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,GetItem,The method has 5 parameters. Parameters: path' language' param1' param2' param3
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,GetItem,The method has 6 parameters. Parameters: path' language' param1' param2' param3' param4
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,GetItem,The method has 5 parameters. Parameters: path' language' version' param1' param2
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,GetItem,The method has 6 parameters. Parameters: path' language' version' param1' param2' param3
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,GetItem,The method has 7 parameters. Parameters: path' language' version' param1' param2' param3' param4
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,GetItem,The method has 5 parameters. Parameters: id' param1' param2' param3' param4
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,GetItem,The method has 5 parameters. Parameters: id' language' param1' param2' param3
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,GetItem,The method has 6 parameters. Parameters: id' language' param1' param2' param3' param4
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,GetItem,The method has 5 parameters. Parameters: id' language' version' param1' param2
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,GetItem,The method has 6 parameters. Parameters: id' language' version' param1' param2' param3
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,GetItem,The method has 7 parameters. Parameters: id' language' version' param1' param2' param3' param4
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,CreateClass,The method has 5 parameters. Parameters: isLazy' inferType' item' param1' param2
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,CreateClass,The method has 6 parameters. Parameters: isLazy' inferType' item' param1' param2' param3
Long Parameter List,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,CreateClass,The method has 7 parameters. Parameters: isLazy' inferType' item' param1' param2' param3' param4
Long Parameter List,Glass.Sitecore.Mapper.CodeFirst,FieldInfo,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\CodeFirst\FieldInfo.cs,FieldInfo,The method has 12 parameters. Parameters: fieldId' sectionId' name' type' source' title' isShared' isUnversioned' fieldSortOrder' validationRegularExpression' validationErrorText' isRequired
Long Parameter List,Glass.Sitecore.Mapper.CodeFirst,GlassDataProvider,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\CodeFirst\GlassDataProvider.cs,CreateItem,The method has 5 parameters. Parameters: itemID' itemName' templateID' parent' context
Long Statement,Glass.Sitecore.Mapper,ClassManager,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ClassManager.cs,CreateClass,The length of the statement  "                ConstructorInfo constructor = config.Type.GetConstructor(constructorParameters == null || constructorParameters.Count() == 0 ? Type.EmptyTypes : constructorParameters.Select(x => x.GetType()).ToArray()); " is 203.
Long Statement,Glass.Sitecore.Mapper,ClassManager,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ClassManager.cs,CreateClass,The length of the statement  "                if (constructor == null) throw new MapperException("No constructor for class {0} with parameters {1}".Formatted(config.Type.FullName' string.Join("'"' constructorParameters.Select(x => x.GetType().FullName).ToArray()))); " is 220.
Long Statement,Glass.Sitecore.Mapper,Context,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Context.cs,CreateConstructorDelegates,The length of the statement  "                var dynMethod = new DynamicMethod("DM$OBJ_FACTORY_" + type.Name' type' parameters.Select(x => x.ParameterType).ToArray()' type); " is 128.
Long Statement,Glass.Sitecore.Mapper,GlassHtml,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\GlassHtml.cs,RenderLink,The length of the statement  "            return format.Formatted(link.Url' anchor' link.Title' target' cls' Utility.ConvertAttributes(attributes)' contents.IsNullOrEmpty() ?  link.Text : contents); " is 156.
Long Statement,Glass.Sitecore.Mapper,GlassHtml,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\GlassHtml.cs,MakeEditable,The length of the statement  "                        throw new MapperException("Page editting error. Type {0} can not be used for editing. Could not find property with SitecoreID attribute. See inner exception".Formatted(typeof(T).FullName)' ex); " is 193.
Long Statement,Glass.Sitecore.Mapper,GlassHtml,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\GlassHtml.cs,MakeEditable,The length of the statement  "                        throw new MapperException("Page editting error. Could not find property {0} on type {1}".Formatted(memberExpression.Member.Name' type.FullName)); " is 145.
Long Statement,Glass.Sitecore.Mapper,InstanceContext,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\InstanceContext.cs,GetClassId,The length of the statement  "                throw new SitecoreIdException("The type {0} does not contain a property with the Glass.Sitecore.Mapper.Configuration.Attributes.SitecoreIdAttribute".Formatted(type.FullName)); " is 175.
Long Statement,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,Create,The length of the statement  "                if (id != Guid.Empty) throw new MapperException("You are trying to create an item on a class that doesn't have an empty ID value"); " is 131.
Long Statement,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,Create,The length of the statement  "                .Cast<SitecoreProperty>().FirstOrDefault(x => x.Attribute.CastTo<SitecoreInfoAttribute>().Type == SitecoreInfoType.Name); " is 121.
Long Statement,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,Create,The length of the statement  "                throw new MapperException("Type {0} does not have a property with SitecoreInfoType.Name".Formatted(typeof(T).FullName)); " is 120.
Long Statement,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,CreateClasses,The length of the statement  "            return Utility.CreateGenericType(typeof(Enumerable<>)' new Type[] { type }' getItems' this' isLazy' inferType) as IEnumerable; " is 126.
Long Statement,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,CreateClass,The length of the statement  "            return (T)InstanceContext.ClassManager.CreateClass(this' isLazy' inferType' typeof(T)' item' param1' param2' param3' param4); " is 125.
Long Statement,Glass.Sitecore.Mapper.CodeFirst,GlassDataProvider,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\CodeFirst\GlassDataProvider.cs,GetItemFields,The length of the statement  "                GetStandardFields(fields' sectionInfo.SectionSortOrder >= 0 ? sectionInfo.SectionSortOrder : (SectionTable.IndexOf(sectionInfo) + 100)); " is 136.
Long Statement,Glass.Sitecore.Mapper.CodeFirst,GlassDataProvider,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\CodeFirst\GlassDataProvider.cs,GetItemFields,The length of the statement  "                GetStandardFields(fields' fieldInfo.FieldSortOrder >= 0 ? fieldInfo.FieldSortOrder : (FieldTable.IndexOf(fieldInfo) + 100)); " is 124.
Long Statement,Glass.Sitecore.Mapper.CodeFirst,GlassDataProvider,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\CodeFirst\GlassDataProvider.cs,GetChildIDsTemplate,The length of the statement  "            var existing = otherProvider.GetChildIDs(itemDefinition' context).OfType<ID>().Select(id => otherProvider.GetItemDefinition(id' context)).ToList(); " is 147.
Long Statement,Glass.Sitecore.Mapper.CodeFirst,GlassDataProvider,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\CodeFirst\GlassDataProvider.cs,GetChildIDsTemplate,The length of the statement  "                        record =  new SectionInfo(section.SectionName' exists.ID' itemDefinition.ID' section.SectionSortOrder){Existing = true}; " is 120.
Long Statement,Glass.Sitecore.Mapper.CodeFirst,GlassDataProvider,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\CodeFirst\GlassDataProvider.cs,GetChildIDsSection,The length of the statement  "                            record = new FieldInfo(new ID(guidId)' section.SectionId' fieldName' attr.FieldType' attr.FieldSource' attr.FieldTitle' attr.IsShared' attr.IsUnversioned' attr.FieldSortOrder' attr.ValidationRegularExpression' attr.ValidationErrorText' attr.IsRequired); " is 253.
Long Statement,Glass.Sitecore.Mapper.Configuration.Attributes,AttributeConfigurationLoader,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Configuration\Attributes\AttributeConfigurationLoader.cs,LoadNamespaceClasses,The length of the statement  "                else namespacePredicate = (x) => x != null && x.Namespace != null && (x.Namespace.Equals(namesp) || x.Namespace.StartsWith(namesp + ".")); " is 138.
Long Statement,Glass.Sitecore.Mapper.Dashboard.Controllers,DetailsController,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dashboard\Controllers\DetailsController.cs,GetFields,The length of the statement  "                var handler = cls.Value.DataHandlers.Where(x => x.Property == scProp.Property).FirstOrDefault() as AbstractSitecoreField; " is 121.
Long Statement,Glass.Sitecore.Mapper.Dashboard.Controllers,ListController,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dashboard\Controllers\ListController.cs,Classes,The length of the statement  "            var classes = GlassContext.Classes.OrderBy(x => x.Key.FullName).Select(y => new GlassClassSummary() { Name = y.Key.FullName }); " is 127.
Long Statement,Glass.Sitecore.Mapper.Dashboard.Controllers,QueryController,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dashboard\Controllers\QueryController.cs,GetValue,The length of the statement  "                sb.AppendFormat("The enumeration contains {0} items of type {1}"' collection.Cast<object>().Count()' resultType.GetGenericArguments().First().Name); " is 148.
Long Statement,Glass.Sitecore.Mapper.Dashboard.Controllers,QueryController,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dashboard\Controllers\QueryController.cs,ProcessGlassType,The length of the statement  "                    return "<a class='queryLink' path='{0}' cls='{1}' href='#'>{2}</a> - <a href='/details.gls?cls={1}'>{1}</a>".Formatted(data.Path' resultType.FullName' data.Path); " is 162.
Long Statement,Glass.Sitecore.Mapper.Dashboard,DashboardHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dashboard\DashboardHandler.cs,ProcessRequest,The length of the statement  "            string[] parts = context.Request.Path.Replace(".gls"'string.Empty).Split(new[]{'/'}' StringSplitOptions.RemoveEmptyEntries); " is 124.
Long Statement,Glass.Sitecore.Mapper.Data,SitecoreItemHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Data\SitecoreItemHandler.cs,ConfigureDataHandler,The length of the statement  "                    throw new MapperException("Id is not a Guid on SitecoreItemAttribute\n\rClass: {0}\n\rMember:{1}".Formatted(scProperty.Property.ReflectedType.FullName' scProperty.Property.Name)); " is 179.
Long Statement,Glass.Sitecore.Mapper.Data,SitecoreFieldFileHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Data\SitecoreFieldFileHandler.cs,SetValue,The length of the statement  "                    ItemLink link = new ItemLink(item.Database.Name' item.ID' field.InnerField.ID' field.MediaItem.Database.Name' field.MediaID' field.MediaItem.Paths.FullPath); " is 157.
Long Statement,Glass.Sitecore.Mapper.Data,SitecoreFieldFileHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Data\SitecoreFieldFileHandler.cs,SetValue,The length of the statement  "                        ItemLink link = new ItemLink(item.Database.Name' item.ID' field.InnerField.ID' target.Database.Name' target.ID' target.Paths.FullPath); " is 135.
Long Statement,Glass.Sitecore.Mapper.Data,SitecoreFieldImageHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Data\SitecoreFieldImageHandler.cs,SetValue,The length of the statement  "                    ItemLink link = new ItemLink(item.Database.Name' item.ID' scImg.InnerField.ID' scImg.MediaItem.Database.Name' scImg.MediaID' scImg.MediaPath); " is 142.
Long Statement,Glass.Sitecore.Mapper.Data,SitecoreFieldImageHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Data\SitecoreFieldImageHandler.cs,SetValue,The length of the statement  "                        ItemLink link = new ItemLink(item.Database.Name' item.ID' scImg.InnerField.ID' target.Database.Name' target.ID' target.Paths.FullPath); " is 135.
Long Statement,Glass.Sitecore.Mapper.Data,SitecoreFieldLinkHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Data\SitecoreFieldLinkHandler.cs,SetValue,The length of the statement  "                            ItemLink iLink = new ItemLink(item.Database.Name' item.ID' field.InnerField.ID' field.TargetItem.Database.Name' field.TargetID' field.TargetItem.Paths.FullPath); " is 161.
Long Statement,Glass.Sitecore.Mapper.Data,SitecoreFieldLinkHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Data\SitecoreFieldLinkHandler.cs,SetValue,The length of the statement  "                                ItemLink nLink = new ItemLink(item.Database.Name' item.ID' field.InnerField.ID' target.Database.Name' target.ID' target.Paths.FullPath); " is 136.
Long Statement,Glass.Sitecore.Mapper.Data,SitecoreFieldLinkHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Data\SitecoreFieldLinkHandler.cs,SetValue,The length of the statement  "                            ItemLink iLink = new ItemLink(item.Database.Name' item.ID' field.InnerField.ID' field.TargetItem.Database.Name' field.TargetID' field.TargetItem.Paths.FullPath); " is 161.
Long Statement,Glass.Sitecore.Mapper.Data,SitecoreFieldLinkHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Data\SitecoreFieldLinkHandler.cs,SetValue,The length of the statement  "                                ItemLink nLink = new ItemLink(item.Database.Name' item.ID' field.InnerField.ID' target.Database.Name' target.ID' target.Paths.FullPath); " is 136.
Long Statement,Glass.Sitecore.Mapper.Data,SitecoreFieldStringHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Data\SitecoreFieldStringHandler.cs,SetValue,The length of the statement  "                    + "Set the SitecoreFieldAttribute setting property to SitecoreFieldSettings.RichTextRaw for property {0} on type {1}".Formatted(Property.Name' Property.ReflectedType.FullName)); " is 177.
Long Statement,Glass.Sitecore.Mapper.Data,SitecoreQueryHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Data\SitecoreQueryHandler.cs,GetValue,The length of the statement  "                else throw new NotSupportedException("Generic type not supported {0}. Must be IEnumerable<>.".Formatted(outerType.FullName)); " is 125.
Long Statement,Glass.Sitecore,ExtensionMethods,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\ExtensionMethods.cs,ToDictionary,The length of the statement  "                    throw new MapperException("You are trying to load the type {0} more than once. Check that the IConfigurationLoaders aren't loading the same classes.".Formatted(cls.Type.FullName)' ex); " is 184.
Long Statement,Glass.Sitecore.Mapper.Proxies,InterfaceMethodInterceptor,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Proxies\InterfaceMethodInterceptor.cs,Intercept,The length of the statement  "                        throw new MapperException("Method with name {0}{1} on type {2} not supported.".Formatted(method'name' _config.Type.FullName)); " is 126.
Long Statement,Glass.Sitecore.Mapper.Pipelines.Response,GetModel,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Pipelines\Response\GetModel.cs,GetFromField,The length of the statement  "            Item obj = ObjectExtensions.ValueOrDefault<RenderingItem' Item>(rendering.RenderingItem' (Func<RenderingItem' Item>)(i => i.InnerItem)); " is 136.
Long Statement,Glass.Sitecore.Mapper.Dynamic,DynamicItem,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dynamic\DynamicItem.cs,TryGetMember,The length of the statement  "            throw new NotSupportedException("No field of Sitecore info matches the name {0} for item {1}".Formatted(name' _item.Paths.FullPath)); " is 133.
Virtual Method Call from Constructor,Glass.Sitecore.Mapper,Context,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Context.cs,Context,The constructor "Context" calls a virtual method "Load".
Empty Catch Block,Glass.Sitecore.Mapper,SitecoreService,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\SitecoreService.cs,Create,The method has an empty catch block.
Empty Catch Block,Glass.Sitecore.Mapper.Configuration.Attributes,AttributeConfigurationLoader,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Configuration\Attributes\AttributeConfigurationLoader.cs,ProcessAssembly,The method has an empty catch block.
Empty Catch Block,Glass.Sitecore.Mapper.Pipelines.Response,GetModel,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Pipelines\Response\GetModel.cs,Process,The method has an empty catch block.
Empty Catch Block,Glass.Sitecore.Mapper.Pipelines.Response,GetModel,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Pipelines\Response\GetModel.cs,Process,The method has an empty catch block.
Magic Number,Glass.Sitecore.Mapper,Context,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Context.cs,CreateConstructorDelegates,The following statement contains a magic number: foreach (var constructor in constructors)              {                  var parameters = constructor.GetParameters();                    var dynMethod = new DynamicMethod("DM$OBJ_FACTORY_" + type.Name' type' parameters.Select(x => x.ParameterType).ToArray()' type);                    ILGenerator ilGen = dynMethod.GetILGenerator();                  for (int i = 0; i < parameters.Count(); i++)                  {                      ilGen.Emit(OpCodes.Ldarg' i);                  }                    ilGen.Emit(OpCodes.Newobj' constructor);                    ilGen.Emit(OpCodes.Ret);                    Type genericType = null;                  switch (parameters.Count())                  {                      case 0:                          genericType = typeof(Func<>);                          break;                      case 1:                           genericType = typeof(Func<'>);                           break;                      case 2:                           genericType = typeof(Func<''>);                           break;                      case 3:                           genericType = typeof(Func<'''>);                          break;                      case 4:                           genericType = typeof(Func<''''>);                           break;                      default:                           throw new MapperException("Only supports constructors with  a maximum of 4 parameters");                  }                    var delegateType = genericType.MakeGenericType(parameters.Select(x=>x.ParameterType).Concat(new []{ type}).ToArray());                      classConfig.CreateObjectMethods[constructor] = dynMethod.CreateDelegate(delegateType);              }
Magic Number,Glass.Sitecore.Mapper,Context,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Context.cs,CreateConstructorDelegates,The following statement contains a magic number: foreach (var constructor in constructors)              {                  var parameters = constructor.GetParameters();                    var dynMethod = new DynamicMethod("DM$OBJ_FACTORY_" + type.Name' type' parameters.Select(x => x.ParameterType).ToArray()' type);                    ILGenerator ilGen = dynMethod.GetILGenerator();                  for (int i = 0; i < parameters.Count(); i++)                  {                      ilGen.Emit(OpCodes.Ldarg' i);                  }                    ilGen.Emit(OpCodes.Newobj' constructor);                    ilGen.Emit(OpCodes.Ret);                    Type genericType = null;                  switch (parameters.Count())                  {                      case 0:                          genericType = typeof(Func<>);                          break;                      case 1:                           genericType = typeof(Func<'>);                           break;                      case 2:                           genericType = typeof(Func<''>);                           break;                      case 3:                           genericType = typeof(Func<'''>);                          break;                      case 4:                           genericType = typeof(Func<''''>);                           break;                      default:                           throw new MapperException("Only supports constructors with  a maximum of 4 parameters");                  }                    var delegateType = genericType.MakeGenericType(parameters.Select(x=>x.ParameterType).Concat(new []{ type}).ToArray());                      classConfig.CreateObjectMethods[constructor] = dynMethod.CreateDelegate(delegateType);              }
Magic Number,Glass.Sitecore.Mapper,Context,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Context.cs,CreateConstructorDelegates,The following statement contains a magic number: foreach (var constructor in constructors)              {                  var parameters = constructor.GetParameters();                    var dynMethod = new DynamicMethod("DM$OBJ_FACTORY_" + type.Name' type' parameters.Select(x => x.ParameterType).ToArray()' type);                    ILGenerator ilGen = dynMethod.GetILGenerator();                  for (int i = 0; i < parameters.Count(); i++)                  {                      ilGen.Emit(OpCodes.Ldarg' i);                  }                    ilGen.Emit(OpCodes.Newobj' constructor);                    ilGen.Emit(OpCodes.Ret);                    Type genericType = null;                  switch (parameters.Count())                  {                      case 0:                          genericType = typeof(Func<>);                          break;                      case 1:                           genericType = typeof(Func<'>);                           break;                      case 2:                           genericType = typeof(Func<''>);                           break;                      case 3:                           genericType = typeof(Func<'''>);                          break;                      case 4:                           genericType = typeof(Func<''''>);                           break;                      default:                           throw new MapperException("Only supports constructors with  a maximum of 4 parameters");                  }                    var delegateType = genericType.MakeGenericType(parameters.Select(x=>x.ParameterType).Concat(new []{ type}).ToArray());                      classConfig.CreateObjectMethods[constructor] = dynMethod.CreateDelegate(delegateType);              }
Magic Number,Glass.Sitecore.Mapper.CodeFirst,GlassDataProvider,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\CodeFirst\GlassDataProvider.cs,GetItemFields,The following statement contains a magic number: if (sectionInfo != null)              {                  GetStandardFields(fields' sectionInfo.SectionSortOrder >= 0 ? sectionInfo.SectionSortOrder : (SectionTable.IndexOf(sectionInfo) + 100));                    return fields;              }
Magic Number,Glass.Sitecore.Mapper.CodeFirst,GlassDataProvider,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\CodeFirst\GlassDataProvider.cs,GetItemFields,The following statement contains a magic number: if (fieldInfo != null)              {                  GetStandardFields(fields' fieldInfo.FieldSortOrder >= 0 ? fieldInfo.FieldSortOrder : (FieldTable.IndexOf(fieldInfo) + 100));                  GetFieldFields(fieldInfo' fields);                  return fields;              }
Magic Number,Glass.Sitecore.Mapper.Dashboard.Controllers,DetailsController,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dashboard\Controllers\DetailsController.cs,Get,The following statement contains a magic number: if (!results.Any()) throw new HttpException(404' "Not found");
Magic Number,Glass.Sitecore.Mapper.Dashboard,DashboardHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dashboard\DashboardHandler.cs,InvokeAction,The following statement contains a magic number: if (method == null) throw new HttpException(404' "Not Found");
Magic Number,Glass.Sitecore.Mapper.Dashboard,DashboardHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dashboard\DashboardHandler.cs,InvokeAction,The following statement contains a magic number: foreach (var paraInfo in paraInfos)              {                  var key = keys.FirstOrDefault(x => x.ToLower() == paraInfo.Name.ToLower());                  if (key.IsNotNullOrEmpty())                  {                      finalParams.Add(parameters[key]);                  }                  //if we can find a parameter for the method throw a not found                  else                      throw new HttpException(404' "Not Found");              }
Magic Number,Glass.Sitecore.Mapper.Dashboard,DashboardHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dashboard\DashboardHandler.cs,InvokeAction,The following statement contains a magic number: if (view is AbstractView)                  return view as AbstractView;              else                  throw new HttpException(500' "Incorrect view");
Magic Number,Glass.Sitecore.Mapper.Dashboard,DashboardHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dashboard\DashboardHandler.cs,GetController,The following statement contains a magic number: if (contType == null) throw new HttpException(404' "Not Found");
Magic Number,Glass.Sitecore.Mapper.Dashboard,DashboardHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dashboard\DashboardHandler.cs,GetController,The following statement contains a magic number: if (controller == null) throw new HttpException(404' "Not Found");
Magic Number,Glass.Sitecore.Mapper.Proxies,InterfaceMethodInterceptor,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Proxies\InterfaceMethodInterceptor.cs,Intercept,The following statement contains a magic number: if (invocation.Method.IsSpecialName)              {                  if(invocation.Method.Name.StartsWith("get_") || invocation.Method.Name.StartsWith("set_")){                                            string method = invocation.Method.Name.Substring(0' 4);                      string name = invocation.Method.Name.Substring(4);                                            if(method == "get_"){                          var result = _values[name];                          invocation.ReturnValue = result;                      }                      else if(method == "set_"){                          _values[name] = invocation.Arguments[0];                      }                      else                          throw new MapperException("Method with name {0}{1} on type {2} not supported.".Formatted(method'name' _config.Type.FullName));                                                   }                               }
Magic Number,Glass.Sitecore.Mapper.Proxies,InterfaceMethodInterceptor,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Proxies\InterfaceMethodInterceptor.cs,Intercept,The following statement contains a magic number: if (invocation.Method.IsSpecialName)              {                  if(invocation.Method.Name.StartsWith("get_") || invocation.Method.Name.StartsWith("set_")){                                            string method = invocation.Method.Name.Substring(0' 4);                      string name = invocation.Method.Name.Substring(4);                                            if(method == "get_"){                          var result = _values[name];                          invocation.ReturnValue = result;                      }                      else if(method == "set_"){                          _values[name] = invocation.Arguments[0];                      }                      else                          throw new MapperException("Method with name {0}{1} on type {2} not supported.".Formatted(method'name' _config.Type.FullName));                                                   }                               }
Missing Default,Glass.Sitecore.Mapper.Dashboard.Controllers,StaticController,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dashboard\Controllers\StaticController.cs,Index,The following switch statement is missing a default case: switch (file.Split('.').Last().ToLower())              {                  case "js":                      contentType = "text/javascript";                      break;                  case "css":                      contentType = "text/css";                      break;                  case "gif":                      contentType = "image/gif";                      break;              }
Missing Default,Glass.Sitecore.Mapper.Data,SitecoreFieldLinkHandler,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Data\SitecoreFieldLinkHandler.cs,SetValue,The following switch statement is missing a default case: switch (link.Type)              {                  case LinkType.Internal:                      field.LinkType = "internal";                      if (field.TargetID.Guid != link.TargetId)                      {                          if (link.TargetId == Guid.Empty)                          {                              ItemLink iLink = new ItemLink(item.Database.Name' item.ID' field.InnerField.ID' field.TargetItem.Database.Name' field.TargetID' field.TargetItem.Paths.FullPath);                              field.RemoveLink(iLink);                          }                          else                          {                              ID newId = new ID(link.TargetId);                              Item target = item.Database.GetItem(newId);                              if (target != null)                              {                                  field.TargetID = newId;                                  ItemLink nLink = new ItemLink(item.Database.Name' item.ID' field.InnerField.ID' target.Database.Name' target.ID' target.Paths.FullPath);                                  field.UpdateLink(nLink);                                  field.Url = LinkManager.GetItemUrl(target);                              }                              else throw new MapperException("No item with ID {0}. Can not update Link field".Formatted(newId));                          }                        }                      break;                  case LinkType.Media:                      field.LinkType = "media";                      if (field.TargetID.Guid != link.TargetId)                      {                          if (link.TargetId == Guid.Empty)                          {                              ItemLink iLink = new ItemLink(item.Database.Name' item.ID' field.InnerField.ID' field.TargetItem.Database.Name' field.TargetID' field.TargetItem.Paths.FullPath);                              field.RemoveLink(iLink);                          }                          else                          {                              ID newId = new ID(link.TargetId);                              Item target = item.Database.GetItem(newId);                              global::Sitecore.Data.Items.MediaItem media = new global::Sitecore.Data.Items.MediaItem(target);                                if (target != null)                              {                                  field.TargetID = newId;                                  ItemLink nLink = new ItemLink(item.Database.Name' item.ID' field.InnerField.ID' target.Database.Name' target.ID' target.Paths.FullPath);                                  field.UpdateLink(nLink);                                  field.Url = global::Sitecore.Resources.Media.MediaManager.GetMediaUrl(media);                              }                              else throw new MapperException("No item with ID {0}. Can not update Link field".Formatted(newId));                          }                        }                      break;                  case LinkType.External:                      field.LinkType = "external";                      field.Url = link.Url;                      break;                  case LinkType.Anchor:                      field.LinkType = "anchor";                      field.Url = link.Anchor;                      break;                  case LinkType.MailTo:                      field.LinkType = "mailto";                      field.Url = link.Url;                      break;                  case LinkType.JavaScript:                      field.LinkType = "javascript";                      field.Url = link.Url;                      break;                  }
Missing Default,Glass.Sitecore.Mapper.Dynamic,DynamicCollection<T>,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dynamic\DynamicCollection.cs,TryInvokeMember,The following switch statement is missing a default case: switch (method)              {                  case "First":                      result = hasArg ? _collection.First((Func<T' bool>)args[0]) : _collection.First();                                            break;                  case "Last":                      result = hasArg ? _collection.Last((Func<T' bool>)args[0]) : _collection.Last();                      break;                  case "FirstOrDefault":                      result = hasArg ? _collection.FirstOrDefault((Func<T' bool>)args[0]) : _collection.FirstOrDefault();                      break;                  case "LastOrDefault":                      result = hasArg ? _collection.LastOrDefault((Func<T' bool>)args[0]) : _collection.LastOrDefault();                      break;                  case "Count":                      result = _collection.Count;                      break;                  case "ElementAt":                      result = _collection.ElementAt((int)args[0]);                      break;                  case "Where":                      var arrayWhere = _collection.Where((Func<T' bool>)args[0]).Select(x=> x as T);                       result = new DynamicCollection<T>(arrayWhere);                      break;                  case "Any":                      result = hasArg ? _collection.Any((Func<T' bool>)args[0]) : _collection.Any();                      break;                  case "All":                      result = _collection.All((Func<T' bool>)args[0]);                      break;                  case "Select":                      var type =  args[0].GetType();                      var generic2 = type.GetGenericArguments()[1];                        var enumGeneric = typeof(DynamicCollection<>);                      var enumType = enumGeneric.MakeGenericType(generic2);                                            var list = Activator.CreateInstance(enumType);                        foreach (var item in _collection)                      {                        var newItem =  type.InvokeMember("Invoke"' BindingFlags.DeclaredOnly |                              BindingFlags.Public | BindingFlags.NonPublic |                              BindingFlags.Instance | BindingFlags.InvokeMethod' null' args[0]' new object[]{ item});                          enumType.InvokeMember("Add"' BindingFlags.DeclaredOnly |                           BindingFlags.Public | BindingFlags.NonPublic |                           BindingFlags.Instance | BindingFlags.InvokeMethod' null' list' new object[]{newItem});                        }                      result = list;                      break;                  }
Missing Default,Glass.Sitecore.Mapper.Dynamic,DynamicItem,C:\repos\Glass-lu_Glass.Sitecore.Mapper\Source\Glass.Sitecore.Mapper\Dynamic\DynamicItem.cs,TryGetMember,The following switch statement is missing a default case: switch (name)              {                  case "Parent":                      result = CreateNew(_item.Parent);                      break;                  case "Children":                      result = new DynamicCollection<DynamicItem>(_item.Children.Select(x => CreateNew(x)).ToArray());                      break;              }
