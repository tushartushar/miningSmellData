Implementation smell,Namespace,Class,File,Method,Description
Long Method,EmbedAssemblies,Program,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Program.cs,ImportMethod,The method has 117 lines of code.
Complex Method,EmbedAssemblies,EmbeddedAssemblyLoader,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\EmbeddedAssemblyLoader.cs,ResolveAssembly,Cyclomatic complexity of the method is 9
Complex Method,EmbedAssemblies,Program,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Program.cs,ImportMethod,Cyclomatic complexity of the method is 29
Complex Method,Mono.Options,Option,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,Option,Cyclomatic complexity of the method is 8
Complex Method,Mono.Options,Option,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 10
Complex Method,Mono.Options,Option,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,AddSeparators,Cyclomatic complexity of the method is 8
Complex Method,Mono.Options,ArgumentSource,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,GetArguments,Cyclomatic complexity of the method is 9
Complex Method,Mono.Options,OptionSet,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,Mono.Options,OptionSet,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,WriteOptionDescriptions,Cyclomatic complexity of the method is 9
Complex Method,Mono.Options,OptionSet,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Complex Method,Mono.Options,OptionSet,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,GetDescription,Cyclomatic complexity of the method is 12
Long Parameter List,Mono.Options,OptionSet,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Long Parameter List,Mono.Options,OptionSet,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,WriteDescription,The method has 5 parameters. Parameters: o' value' prefix' firstWidth' remWidth
Long Statement,EmbedAssemblies,EmbeddedAssemblyLoader,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\EmbeddedAssemblyLoader.cs,ResolveAssembly,The length of the statement  "				Console.WriteLine("Resolving " + asmName.Name + " requested by " + (args.RequestingAssembly != null ? args.RequestingAssembly.GetName().Name : "unknown assembly")); " is 164.
Long Statement,EmbedAssemblies,EmbeddedAssemblyLoader,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\EmbeddedAssemblyLoader.cs,Register,The length of the statement  "					Console.WriteLine("Initializing importer for AppDomain" + ad.FriendlyName + "' current assembly: " + Assembly.GetExecutingAssembly().GetName().Name); " is 149.
Long Statement,EmbedAssemblies,Program,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Program.cs,Import,The length of the statement  "			var result = new MethodReference(method.Name' Import(container' method.ReturnType)' Import(container' method.DeclaringType)) { " is 126.
Long Statement,EmbedAssemblies,Program,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Program.cs,InsertAssemblyLoader,The length of the statement  "				loader = new TypeDefinition(typeof(EmbeddedAssemblyLoader).Namespace' typeof(EmbeddedAssemblyLoader).Name' existingLoader.Attributes' container.TypeSystem.Object); " is 163.
Long Statement,EmbedAssemblies,Program,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Program.cs,InsertAssemblyLoader,The length of the statement  "			var moduleInitializer = new MethodDefinition( ".cctor"' MethodAttributes.Static | MethodAttributes.SpecialName | MethodAttributes.RTSpecialName' container.TypeSystem.Void); " is 172.
Long Statement,EmbedAssemblies,Program,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Program.cs,InsertAssemblyLoader,The length of the statement  "			moduleInitializer.Body.Instructions.Add(Instruction.Create(OpCodes.Call' loader.Methods.Single(m => m.Name == "Register"))); " is 124.
Complex Conditional,Mono.Options,Option,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 &&   					((names.Length == 1 && this.type != OptionValueType.None) ||  					 (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,Mono.Options,OptionSet,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length-1] == '+' || n [n.Length-1] == '-') &&  					Contains ((rn = n.Substring (0' n.Length-1)))"  is complex.
Virtual Method Call from Constructor,Mono.Options,Option,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,Option,The constructor "Option" calls a virtual method "GetHashCode".
Magic Number,Mono.Options,OptionSet,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption (prototype' description' 2'   					delegate (OptionValueCollection v) {action (v [0]' v [1]);});
Magic Number,Mono.Options,OptionSet,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription (o' p.Description' ""' 80' 80);
Magic Number,Mono.Options,OptionSet,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription (o' p.Description' ""' 80' 80);
Magic Number,Mono.Options,OptionSet,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription (o' p.Description' new string (' '' OptionWidth+2)'  						Description_FirstWidth' Description_RemWidth);
Magic Number,Mono.Options,OptionSet,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription (o' s.Description' new string (' '' OptionWidth+2)'  						Description_FirstWidth' Description_RemWidth);
Missing Default,EmbedAssemblies,Program,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Program.cs,ImportMethod,The following switch statement is missing a default case: switch (eh.HandlerType) {  					case ExceptionHandlerType.Catch:  						neh.CatchType = container.Import(eh.CatchType);  						break;  					case ExceptionHandlerType.Filter:  						neh.FilterStart = GetInstruction(source.Body' target.Body' eh.FilterStart);  						break;  				}
Missing Default,Mono.Options,OptionSet,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\build\src\EmbedAssemblies\Mono.Options\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  					case OptionValueType.None:  						c.OptionValues.Add (n);  						c.Option.Invoke (c);  						break;  					case OptionValueType.Optional:  					case OptionValueType.Required:   						ParseValue (v' c);  						break;  				}
