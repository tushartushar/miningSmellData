Implementation smell,Namespace,Class,File,Method,Description
Complex Method,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,Cyclomatic complexity of the method is 9
Long Identifier,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,EnsureCanBeEvaluatedMultipleTimes,The length of the parameter expressionsThatMustBeEvaluatedBefore is 36.
Long Statement,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "		_errorReporter.Message (MessageSeverity.Error' 7019' string.Format ("The type {0} cannot define a method named 'runTests' because it has a [TestFixtureAttribute]."' type.CSharpTypeDefinition.FullName)); " is 202.
Long Statement,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "			if (!method.CSharpMember.IsPublic || !method.CSharpMember.ReturnType.IsKnownType (KnownTypeCode.Void) || ((IMethod)method.CSharpMember).Parameters.Count > 0 || ((IMethod)method.CSharpMember).TypeParameters.Count > 0) { " is 218.
Long Statement,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "				_errorReporter.Message (MessageSeverity.Error' 7020' string.Format ("Method {0}: Methods decorated with a [TestAttribute] must be public' non-generic' parameterless instance methods that return void."' method.CSharpMember.FullName)); " is 233.
Long Statement,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "			tests.Add (Tuple.Create (testAttr.Description ?? method.CSharpMember.Name' testAttr.Category' testAttr.IsAsync' testAttr.ExpectedAssertionCount >= 0 ? (int?)testAttr.ExpectedAssertionCount : null' method.Definition)); " is 217.
Long Statement,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "			testInvocations.Add (JsExpression.Invocation (JsExpression.Member (JsExpression.Identifier ("QUnit")' "module")' JsExpression.String (category.Category))); " is 155.
Long Statement,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "		testInvocations.AddRange (category.Tests.Select (t => JsExpression.Invocation (JsExpression.Identifier (t.IsAsync ? "asyncTest" : "test")' t.ExpectedAssertionCount != null ? new JsExpression[] { " is 194.
Long Statement,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "	instanceMethods.Add (new JsMethod (null' "runTests"' null' JsExpression.FunctionDefinition (new string[0]' JsStatement.Block (testInvocations.Select (t => (JsStatement)t))))); " is 175.
Complex Conditional,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The conditional expression  "!method.CSharpMember.IsPublic || !method.CSharpMember.ReturnType.IsKnownType (KnownTypeCode.Void) || ((IMethod)method.CSharpMember).Parameters.Count > 0 || ((IMethod)method.CSharpMember).TypeParameters.Count > 0"  is complex.
Magic Number,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The following statement contains a magic number: if (type.InstanceMethods.Any (m => m.Name == "runTests")) {  	_errorReporter.Region = type.CSharpTypeDefinition.Region;  	_errorReporter.Message (MessageSeverity.Error' 7019' string.Format ("The type {0} cannot define a method named 'runTests' because it has a [TestFixtureAttribute]."' type.CSharpTypeDefinition.FullName));  	return type;  }  
Magic Number,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The following statement contains a magic number: _errorReporter.Message (MessageSeverity.Error' 7019' string.Format ("The type {0} cannot define a method named 'runTests' because it has a [TestFixtureAttribute]."' type.CSharpTypeDefinition.FullName));  
Magic Number,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The following statement contains a magic number: foreach (var method in type.InstanceMethods) {  	var testAttr = _attributeStore.AttributesFor (method.CSharpMember).GetAttribute<TestAttribute> ();  	if (testAttr != null) {  		if (!method.CSharpMember.IsPublic || !method.CSharpMember.ReturnType.IsKnownType (KnownTypeCode.Void) || ((IMethod)method.CSharpMember).Parameters.Count > 0 || ((IMethod)method.CSharpMember).TypeParameters.Count > 0) {  			_errorReporter.Region = method.CSharpMember.Region;  			_errorReporter.Message (MessageSeverity.Error' 7020' string.Format ("Method {0}: Methods decorated with a [TestAttribute] must be public' non-generic' parameterless instance methods that return void."' method.CSharpMember.FullName));  		}  		tests.Add (Tuple.Create (testAttr.Description ?? method.CSharpMember.Name' testAttr.Category' testAttr.IsAsync' testAttr.ExpectedAssertionCount >= 0 ? (int?)testAttr.ExpectedAssertionCount : null' method.Definition));  	} else  		instanceMethods.Add (method);  }  
Magic Number,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The following statement contains a magic number: if (testAttr != null) {  	if (!method.CSharpMember.IsPublic || !method.CSharpMember.ReturnType.IsKnownType (KnownTypeCode.Void) || ((IMethod)method.CSharpMember).Parameters.Count > 0 || ((IMethod)method.CSharpMember).TypeParameters.Count > 0) {  		_errorReporter.Region = method.CSharpMember.Region;  		_errorReporter.Message (MessageSeverity.Error' 7020' string.Format ("Method {0}: Methods decorated with a [TestAttribute] must be public' non-generic' parameterless instance methods that return void."' method.CSharpMember.FullName));  	}  	tests.Add (Tuple.Create (testAttr.Description ?? method.CSharpMember.Name' testAttr.Category' testAttr.IsAsync' testAttr.ExpectedAssertionCount >= 0 ? (int?)testAttr.ExpectedAssertionCount : null' method.Definition));  } else  	instanceMethods.Add (method);  
Magic Number,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The following statement contains a magic number: if (!method.CSharpMember.IsPublic || !method.CSharpMember.ReturnType.IsKnownType (KnownTypeCode.Void) || ((IMethod)method.CSharpMember).Parameters.Count > 0 || ((IMethod)method.CSharpMember).TypeParameters.Count > 0) {  	_errorReporter.Region = method.CSharpMember.Region;  	_errorReporter.Message (MessageSeverity.Error' 7020' string.Format ("Method {0}: Methods decorated with a [TestAttribute] must be public' non-generic' parameterless instance methods that return void."' method.CSharpMember.FullName));  }  
Magic Number,QUnit.Plugin,TestRewriter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The following statement contains a magic number: _errorReporter.Message (MessageSeverity.Error' 7020' string.Format ("Method {0}: Methods decorated with a [TestAttribute] must be public' non-generic' parameterless instance methods that return void."' method.CSharpMember.FullName));  
